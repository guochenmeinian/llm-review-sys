# No-Regret Algorithms in non-Truthful Auctions with Budget and ROI Constraints

Anonymous Author(s)

###### Abstract.

Advertisers are increasingly using automated bidding to optimize their ad campaigns on online advertising platforms. Autobidding allows an advertiser to optimize her objective subject to various constraints. In this paper, we design online autobidding algorithms to optimize value subject to ROI and budget constraints.

We consider an item is being auctioned in each of \(T\) rounds. We focus on one buyer with budget and ROI constraints in the stochastic setting: her value and highest competing bid faced are drawn i.i.d. from some unknown (joint) distribution in each round. We design low-regret bidding algorithms that bid on behalf of this buyer. Our main result is an algorithm with full information feedback (i.e., the highest competing bid is revealed after each round) that guarantees a near-optimal \(\hat{O}(\sqrt{T})\) regret with respect to the best Lipschitz function that maps values to bids. The class of Lipschitz bidding functions is rich enough to best respond to many correlation structures between value and highest competing bid, e.g., positive or negative correlation. Our result applies to a wide range of auctions, most notably any mixture of first- and second-price auctions. In addition, our result holds for both value-maximizing buyers and quasi-linear utility-maximizing buyers.

We also study the bandit setting, where the algorithm only observes whether the bidder wins the auction or not. In this setting, we show an \(\Omega(T^{2/3})\) regret lower bound for first-price auctions, showing a significant disparity between the full information and bandit settings. We also design an algorithm with a regret bound of \(\hat{O}(T^{3/4})\) when the value distribution is known and is independent of the highest competing bid.

repeated auctions, online learning, first-price, budget constraint, ROI constraint

## 1. Introduction

With the growth of online advertising markets in terms of both complexity and scale, advertisers are increasingly turning towards autobidding to optimize their ad campaigns on online advertising platforms. Autobidding allows an advertiser to use an optimization algorithm to generate bids on her behalf, rather than manually bidding for each ad query. The advertiser provides high-level goals and constraints to the autobidder, which bids on her behalf in order to optimize her objective, while satisfying her constraints.

In this paper, we study the problem of designing algorithms for autobidding on behalf of a buyer. We consider a stochastic setting with \(T\) rounds, in each of which one item is sold via an auction. In each round, the information of this round, including the buyer's value and the highest competing bid, are drawn i.i.d. from some unknown (joint) distribution. The autobidder submits a bid to the auction based on her value and the history. If the bid is at least the highest competing bid, the bidder wins the current round and pays a price. The bidder has a budget constraint that limits the total payment, as well as a Return-on-Investment (ROI) constraint which requires that the total value in the winning rounds is at least a fraction of the total payment. These are the two most common constraints that bidders have in practice. In particular, ROI constraint captures similar constraints used in practice like target cost-per-acquisition (tCPA) and target return-on-ad-spend (tROAS)1. Our goal is to design online bidding algorithms that maximize the bidder's objective subject to both budget and ROI constraints. To quantify an algorithm's performance, we use (additive) regret against the objective value obtained by the best bidding strategy that knows the underlying distribution.

Footnote 1: For example, see the Google ads support page and Meta business help center [14].

There has been a lot of recent work on the problem of designing algorithms for autobidding in stochastic settings. One line of work [12, 6] focuses on truthful auctions (e.g., second-price), which is proved to be much easier than non-truthful auctions due to technical reasons that we discuss later. A different line of work focuses on non-truthful auctions, with either a weak benchmark for regret, namely the best constant pacing (also sometimes called uniform bidding), where the bid is proportional to the value [14, 26], or have regret bounds that scale with the number of values and bids, which can be uncountably many [10].

In this paper, we study the problem of bidding in non-truthful auctions and design no-regret algorithms against a stronger benchmark than the best constant pacing - our algorithms have low regret compared to the _best Lipschitz bidding function that maps values to bids_. Due to the generality of Lipschitz functions this benchmark can best-respond to a range of different correlations between the buyer's value and the highest competing bid, e.g. positive correlation for some values and negative correlation for others.

**Our results and techniques.** We first consider the full-information setting where the bidder observes the highest-competing bid at the end of each round. We prove that there is an algorithm that can get near-optimal regret with respect to the best Lipschitz bidding function. The main result for this setting is as follows:

**Theorem 1.1** (Informal version of Theorem 4.1).: _There is an algorithm that achieves \(\hat{O}(\sqrt{T})^{2}\) regret while satisfying both the budget and ROI constraints, with respect to the best Lipschitz bidding function. The result applies to various classes of auctions (see Assumption 3.1) including first-price auctions, second-price auctions and a hybrid of both. The result applies to both value and quasi-linear utility maximizing bidders._

To the best of our knowledge, this is the first algorithm that achieves near-optimal regret bounds against the best Lipschitz bidding function for non-truthful auctions under budget and/or ROI constraints.2 Our result applies to any input distribution under mild assumptions (see Section 2).

Our algorithm is based on the primal/dual framework for online learning with constraints (Gran et al., 2015; Gran et al., 2016; Gran et al., 2017; Gran et al., 2018; Gran et al., 2019). In this framework, to manage global constraints, the 'core' algorithm deploys two competing algorithms, each optimizing an unconstrained objective. On one hand, the primal algorithm picks an action (subsequently used in the actual bidding problem) to maximize a function similar to the Lagrangian of the problem. On the other hand, the dual algorithm picks Lagrangian multipliers to minimize the same function. Guarantees for this sequential unconstrained stochastic zero-sum game imply the guarantees for the original constrained problem.

While the dual algorithm uses a standard instance of Online Gradient Descent to pick the scalars that represent the Lagrangian multipliers, designing the primal algorithm is often much more complicated and requires knowledge specific to the original problem. We develop the primal algorithm for our main result in Section 3.

**Main Technical Challenges.** Below we list some of the main technical challenges that we need to tackle and give a brief outline of our approach to solving them.

_Lagrangian Maximization in Non-Truthful Auctions._ To better explain the challenge, we first consider the problem where the auction used is a second-price auction. The part of the Lagrangian function that depends on the primal algorithm's bid \(b\) takes the following form (for either value or quasi-linear utility maximization): \(r(b)=1\left[b\geq d\right]\) (\(\gamma v-\psi d\)),where \(v\) is the player's value, \(d\) is the (unknown) highest competing bid, and \(\chi,\psi\) are arbitrary non-negative numbers that depend on the Lagrange multipliers. Maximizing the above function turns out to be straightforward: using \(b^{*}=v\frac{\psi}{\psi}\) implies4\(r(b^{*})=(\chi v-\psi d)^{*}\), which guarantees maximum reward. Since \(b^{*}\) does not depend on the highest competing bid \(d\), the primal algorithm can pick this bid to guarantee zero regret for maximizing the Lagrangian; this subsequently leads to low regret guarantees for the original problem with constraints.

Footnote 4: We denote \(x^{*}=\max\left\{0,x\right\}\).

In contrast to truthful auctions, for non-truthful auctions, the bid that maximizes the Lagrangian cannot be calculated without the highest competing bid. Therefore, the learner needs to learn the best function that maps values to bids. However, learning the best such function is unrealistic since it might be non-monotone and discontinuous. Instead, we focus on a class of functions with specific structures. Such a class used in previous work is the class of pacing multipliers, \(\mathcal{F}_{\mathrm{inl}}\), that map values to bids by multiplying by a constant number. Instead, we focus on the more general class of Lipschitz continuous functions, \(\mathcal{F}_{\mathrm{Lip}}\), which provide a much stronger benchmark to compete against, even in very simple settings where values and highest competing bids are independent. For example, if the highest competing bid is constant and the value is not, the best response is a fixed bid, which cannot be expressed by the class of pacing multipliers. In Appendix B we give a concrete example of this and include some additional discussion on the limitations of the pacing multiplier class \(\mathcal{F}_{\mathrm{inl}}\).

The increased expressivity and complexity of \(\mathcal{F}_{\mathrm{Lip}}\) over \(\mathcal{F}_{\mathrm{inl}}\) can also be observed when considering finite approximations of them. \(\mathcal{F}_{\mathrm{inl}}\) can be approximated with accuracy \(\epsilon\) using a set of size \(\Theta(1/\epsilon)\). If this approximation results in \(\mathcal{O}(T\epsilon)\) error over \(T\) rounds (this is not trivial, see our discussion on that next), along with many more simplifying assumptions, using standard online learning algorithms we get \(\mathcal{O}(T\epsilon+\sqrt{T\log(1/\epsilon)})\) regret (\(\sqrt{T\log K}\) is the regret of using \(K\) different actions); optimizing over \(\epsilon\) we get \(\mathcal{O}(\sqrt{T})\) regret. In contrast, approximating \(\mathcal{F}_{\mathrm{Lip}}\) with \(\epsilon\) accuracy requires a set of size \(\exp(\Theta(1/\epsilon))\), leading to \(\mathcal{O}(T\epsilon+\sqrt{T\log(\exp(1/\epsilon))})\) regret. This is \(\tilde{\mathcal{O}}(T^{2/3})\) if optimized over \(\epsilon\), which is suboptimal.

The near-optimal \(\tilde{\mathcal{O}}(\sqrt{T})\) regret is achieved by utilizing the structure implied by the finite subset of \(\mathcal{F}_{\mathrm{Lip}}\), similar to (Gran et al., 2016; Gran et al., 2017). More specifically, we create a tree where the functions of the finite subset of \(\mathcal{F}_{\mathrm{Lip}}\) are the leaves and smaller distance between two leaves implies more similarity between the two corresponding functions. This allows us to enhance the standard regret guarantees of learning algorithms to get the improved result, found in Section 3.3.

_Discretization Error and Safe bid._ Our algorithms are based on discretizing the bidding space of real numbers. However, two bids that are similar do not necessarily lead to similar reward, as the reward of a round is not a continuous function of the bid. This has been solved in previous works (e.g. Fikioris and Tardos (Fikioris and Tardos, 2018); Han et al. (Han et al., 2018)) for first-price by noticing that using bid \(b+\epsilon\) instead of \(b\) still wins the auction and the price paid can only be \(\epsilon\) more. However, in this work we face one additional challenge: since our primal algorithms aim to maximize the Lagrangian, the reward of bid \(b+\epsilon\) might be negative, making bid \(b\) much better if it _does not win_ the auction. This means that the error of discretizing our action space is harder to handle. We tackle this by defining a general way of transforming bids to "safe bids" that guarantee non-negative reward that is at least as good as the original bid (Assumption 3.1), which is crucial to getting optimal regret rates.

_Time-Varying Range._ The Lagrangian function that the primal algorithm aims to maximize depends on the Lagrangian multipliers picked by the dual algorithm. Thus the primal algorithm's guarantees need to hold even against an adaptive adversary since no assumptions can be made for the dual algorithm's behavior, which adapts to the primal's decisions. While this challenge is not new to online learning algorithms, a new problem that we face is that the Lagrange multipliers control the range of the objective that the primal algorithm has to maximize. For technical reasons (which we discuss in Section 2), we cannot a priori upper bound these multipliers. This means that the primal algorithm needs to maximize a function whose range is time-varying and unknown. We develop algorithms that tackle this problem and offer regret bounds that match the bounds of algorithms that know this range in advance. We first solve this problem in Section 3.2 and use a technique that is very general and, we believe, is of independent interest.

_From Standard Regret to Interval Regret._ The 'core' algorithm requires that the primal and dual algorithms have low interval regret, i.e, low regret in every interval of rounds. This is not automatically achieved by classic algorithms, e.g., the Hedge algorithm (Henderson, 1983) has linear interval regret. In Section 3.4, we offer a black-box reduction to reduce the problem of standard regret minimization to interval regret minimization with only \(\tilde{\mathcal{O}}(\sqrt{T})\) error, which also works for the above time-varying range problem.

**Bandit Information.** In Section 5 we consider the bandit information setting where the algorithm only observes whether the bid wins the auction or not and the price she pays if she wins. In sharp contrast to the full-information setting, we prove an \(\Omega(T^{2/3})\) regret lower bound for first-price auctions even in a simple setting when the value is constant. While this is known for quasi-linear utility maximization Balseiro et al. (2015), no results are known for value maximization. Our lower bound is materialized in a very simple setting, as showcased in the theorem that follows.

Theorem 1.2 (Informal version of Theorem 5.1).: _No algorithm can always guarantee \(o(T^{2/3})\) regret in value-maximizing first-price auctions with bandit information, even when the value is constant, the budget is \(\Theta(T)\), and there is no ROI constraint._

Our lower bound is based on a distribution of highest competing bids that has the following property: for (almost) every pair of values in the support, there is an optimal bidding strategy that uses only those values. A small adversarial modification in the distribution at a certain value ensures that (a) bidding at any other value is sub-optimal and (b) the bidder wastes many rounds on sub-optimal bids before finding the optimal one. This construction is inspired by the \(\Omega(T^{2/3})\) lower bound of (Balseiro et al., 2015) for revenue maximization in posted-price mechanisms without constraints.

To complement our lower bound in Theorem 1.2, we present a \(\tilde{\mathcal{O}}(T^{3/4})\) regret upper bound in Theorem F.3.

**Tight satisfaction of the ROI constraint.** We remark that all our regret upper bounds satisfy the ROI constraint exactly but are based on similar results that approximately satisfy the ROI constraint (i.e. have sublinear violation with high probability). In Section 4, we present a black box reduction to turn any algorithm with approximate satisfaction into one with exact satisfaction.

Finally, we note that the focus of our \(\tilde{\mathcal{O}}(\sqrt{T})\) regret bounds in the full information setting (Section 3) is regret minimization. To get this optimal information theoretic bound our algorithms require exponential running time. In Appendix G, we present algorithms that require polynomial time to run and offer the same guarantees as Theorem 1.1 when the values and highest competing bids are independent across rounds.

### Related work

The most relevant paper to ours is Castiglioni et al. (2017). The algorithm designed in our paper is based on the primal/dual framework in (Ballesteros, 2017); we briefly introduce the framework in Section 2. They also use the framework to design algorithms for bidding in first-price auctions with budget and ROI constraints, albeit only for a finite number of values and bids: their regret bound is \(\tilde{\mathcal{O}}(\sqrt{nmT})\) against the best bid per value, where \(n\) is the number of values and \(m\) is the number of bids. In addition, their algorithm satisfies the ROI constraint only approximately. In contrast, our results apply to continuous distributions and strictly satisfy the ROI constraint.

**Online bidding in non-truthful auctions.**Lucier et al. (2018) design an algorithm for bidding in first and second price auctions under budget and ROI constraints, that implies welfare guarantees when used by every player (extending the result of Gaitonde et al. (2018)). In addition, (Luo et al., 2018) prove that their algorithm, when used in a stochastic environment, has \(\tilde{\mathcal{O}}(T^{7/8})\) regret against the class of pacing multipliers while satisfying both constraints strictly. Fikioris and Tardos (2018) also focus on welfare guarantees in first-price auctions when budgeted players use arbitrary algorithms that have no-regret against the class of pacing multipliers. In addition, they design a full information algorithm that has \(\tilde{\mathcal{O}}(\sqrt{T})\) regret with respect to the same class in the stochastic environment. Finally, Wang et al. (2018) study online learning in first-price auctions with budgets but focus only on the independent values and highest competing bids.

We defer further discussion about related work in Appendix A, were we discuss online learning in truthful auctions, online bidding without constraints, and online learning with or without budget constraints.

## 2. Preliminaries

We consider the setting where a single bidder participates in \(T\) sequential auctions. In each round \(t\in[T]\) there is a single item being sold; a pair \((v_{t},d_{t})\) is drawn i.i.d. from some unknown (joint) distribution \(\mathcal{D}\), where \(v_{t}\in[0,1]\) indicates the bider's value, and \(d_{t}\in[0,1]\) is the highest competing bid5. The bidder submits a bid \(b_{t}\) based on her value \(q_{t}\). The bidder wins this round if her bid is at least6 the highest competing bid \(d_{t}\); we denote \(x_{t}=1\)\([b_{t}\geq d_{t}]\). If the bidder wins the auction, then she pays a price \(p_{t}=p(b_{t},d_{t})\), where \(p(b,d)\in[0,1]\) is the payment function. For example, for first-price auctions, \(p(b,d)=b\); for second-price auctions, \(p(b,d)=d\); for any combination of the two auctions, \(p(b,d)=q\cdot b+(1-q)\cdot d\) for some \(q\in[0,1]\), we note that the payment function \(p\) is fixed across all rounds and known to the bidder.

Footnote 5: One can think of the highest competing bid as the highest bid among other bidders participating in the auction.

Footnote 6: Our results easily extend to other tie breaking rules.

At the end of each round \(t\), the bidder observes information about that round depending on the feedback model. In the full-information setting, the bidder observes the highest competing bid \(d_{t}\) with which she can compute the outcome for any possible bid at this round. In the bandit-information setting, the bidder only observes whether she wins the auction or not (i.e. \(x_{t}=1\)\([b_{t}\geq d_{t}]\)) and the payment \(p_{t}\) if she wins. Our results hold for different objectives of the bidder, who wants to maximize \(\sum_{t\in[T]}u_{t}\), where \(u_{t}\) is her per-round utility. The focus of our paper is value-maximizing, where \(u_{t}=v_{t}x_{t}\), but our results also hold when the bidder has a quasi-linear utility, where \(u_{t}=x_{t}(v_{t}-vp_{t})\) for some \(v\in[0,1]\).

We assume that the bidder has a budget \(B\). This is a strict upper bound on her total payment. Namely, it must hold that her total payment after \(T\) rounds is at most \(B\), i.e. \(\sum_{t\in[T]}x_{t}p_{t}\leq B\). We define \(\rho=\frac{B}{T}\) and note that w.l.o.g. we can assume that \(\rho\leq 1\): any \(\rho\geq 1\) implies that the bidder is effectively not budget constraint, since \(p(\cdot,\cdot)\leq 1\). The bidder must also satisfy a Return-On-Investment (ROI) constraint: her total value in the winning rounds must be at least a fraction of her total payment: \(\sum_{t}x_{t}v_{t}\geq\gamma\cdot\sum_{t}x_{t}p_{t}\), for some \(\gamma\geq 1\). For the ROI constraint, we often allow approximate satisfaction where \(\sum_{t}x_{t}(v_{t}-vp_{t})\geq-V\) and \(V\) is the violation amount, often \(V=\tilde{\mathcal{O}}(\sqrt{T})\). W.l.o.g., we assume that \(\gamma=1\); any other \(\gamma\) can be handled by rescaling the values7.

Footnote 7: For any ROI \(\gamma>1\) we can rescale the values \(v_{t}^{\prime}=v_{t}/\gamma\).

**Benchmark.** We want low regret when competing against a class of bidding functions \(\mathcal{F}\) that map values to bids. More specifically, we assume that for every \(f\in\mathcal{F}\), \(f\) maps \([0,1]\) to \([0,1]\) and we want the player's resulting utility to be close to her utility if she knew the distribution \(\mathcal{D}\) in advance and she bid using the best fixed functions from \(\mathcal{F}\). Since the bidder has to satisfy certain constraints, the best response to a distribution \(\mathcal{D}\) might be a distribution of functions over \(\mathcal{F}\), not a single function. Our benchmark is the maximum expected average-per-round utility of the best distribution of functions from \(\mathcal{F}\) that satisfies the constraints in expectation. For example, for a value maximizing player in first price auctions, i.e., \(u_{t}=v_{1}\left[b_{t}\geq d_{t}\right]\) and \(p_{t}=b_{t}\) we have

\[\begin{split}\mathsf{OPT}=\sup_{F\in\mathcal{A}(\mathcal{F})}& \operatorname*{\mathbb{E}}_{F\sim F\sim\left(u_{d}\right)\sim D}\left[o \cdot 1\left[f(v)\geq d\right]\right]\\ &\text{s.t.}&\operatorname*{\mathbb{E}}_{F\sim F\sim \left(u_{d}\right)\sim D}\left[f(v)\cdot 1\left[f(v)\geq d\right]\right]\leq\rho\\ &\operatorname*{\mathbb{E}}_{F\sim F\sim\left(u_{d}\right)\sim D} \left[\left(v-f(v)\right)\cdot 1\left[f(v)\geq d\right]\right]\geq 0\end{split} \tag{1}\]

For simplicity, we assume that the function \(f(v)=0\) always belongs in \(\mathcal{F}\), making (1) always feasible. \(T\cdot\mathsf{OPT}\) is an upper bound for the achievable total expected utility of any algorithm that satisfies the constraints \([4,9,10]\). We design algorithms that have low regret with respect to \(T\cdot\mathsf{OPT}\) (where \(\mathsf{OPT}\) is defined analogously depending on the buyer's objective and auction format).

**Primal/dual framework.** We now briefly describe the primal/dual framework where a constrained problem is solved by having two learning algorithms, the primal and the dual, compete against each other in a sequential unconstrained zero-sum game. Specifically we will look at the results of (Bartlett and Barthelem, 1989) who develop such a framework for budget and ROI constraints. We first discuss the assumptions required on the input distribution and how these relate to our setting of learning in sequential auctions. We then present the guarantees that the primal algorithm must satisfy to get guarantees for the original constrained problem. For simplicity, the rest of this section focuses on value maximization and presents all the assumptions in the context of auctions. We refer the reader to their paper for a more comprehensive description of their techniques.

First, we illustrate the need of some assumptions on the distribution \(\mathcal{D}\) that generates \(v_{t},d_{t}\). Specifically, we assume that there exists a bidding function that on expectation leads to \(\beta\) more value than payment, for some \(\beta\geq 0\). Formally,

\[\exists f\in\mathcal{F}:\quad\operatorname*{\mathbb{E}}_{(u,d)\sim\mathcal{D} }\left[\left(v-p\big{(}f(v),d\big{)}\right)\mathbbm{1}\left[f(v)\geq d\right] \right]\geq\beta. \tag{2}\]

Intuitively, this assumption implies that a learner who makes wrong decisions and violates her ROI constraint can recover this in later rounds. This assumption is similar to the one in (Bartlett and Barthelem, 1989), who examine value maximization in repeated truthful auctions. Their assumption is the same as (2) but for \(f(v)=v\). This might seem stronger, since it implies (2) when the function \(f(v)=v\) is contained in \(\mathcal{F}\). However, the reverse also holds for truthful auctions, since \(f(v)=v\) is optimal for maximizing quasi-linear utility.

We now show the basics of the primal/dual framework and the guarantees the primal needs to satisfy to get guarantees for the original problem. We first define the following function: \(\mathcal{L}_{t}(b,\lambda,\mu)=\mathbbm{1}\left[b\geq d_{t}\right](v_{t}- \lambda b+\mu v_{t}-\mu\mu)+\lambda\rho\). This function is inspired by the optimization problem in (1) (and would analogously be defined for other objectives/pricing functions). \(\lambda,\mu\) are Lagrange multipliers that correspond to the budget and ROI constraint, respectively. The core algorithm of (Bartlett and Barthelem, 1989) runs two algorithms, the primal algorithm that picks bids and the dual that picks Lagrange multipliers. On every round \(t\), the primal (resp. dual) algorithm picks \(b_{t}\) (resp. \((\lambda_{t},\mu_{t})\)) aiming to maximize (resp. minimize) \(\mathcal{L}_{t}(b_{t},\lambda_{t},\mu_{t})\). Given their actions, each algorithm faces some regret. To get regret guarantees for the original problem (value maximization under constraints) the primal and dual algorithms must have with high probability low _interval regret_, i.e., have low regret over every interval \([\tau_{1},\tau_{2}]\subseteq[T]\). Before formally defining this, we point out one subtle detail.

In general, regret bounds depend on the range of values that the objective function takes. This range of the primal algorithm in our setting can be as high as \(2\mu_{t}+\lambda_{t}+1\) in round \(t\). This depends on the dual algorithm's actions \(\lambda_{t},\mu_{t}\), meaning we cannot know \(\max_{t}\{2\mu_{t}+\lambda_{t}+1\}\) in advance. One solution to this is to explicitly upper bound \(\lambda_{t}\) and \(\mu_{t}\). To get meaningful regret guarantees such an upper bound would be \(\lambda_{t},\mu_{t}\leq\frac{1}{\beta\rho}\). However, calculating \(\beta\) requires \(\mathcal{D}\), as seen in (2), which is unknown.

(9) show that the above issue can be circumvented, if the primal algorithm satisfies stronger _interval regret_ bounds: with high probability, for every interval of rounds, the regret in those rounds is small with respect to the best fixed action in that interval and the maximum Lagrange multipliers seen so far. To formally define this, first define \(M_{t}=\max_{t^{\prime}\leq t}\{2\mu_{t^{\prime}}+\lambda_{t^{\prime}}+1\}\). We require that the primal algorithm picks bids \(b_{1},\ldots,b_{T}\) such that for every \(\delta\in(0,1]\), with probability at least \(1-\delta\) it holds that for all \(\forall[\tau_{1},\tau_{2}]\subseteq[T]\) :

\[\sup_{f\in\mathcal{F}}\sum_{t=\tau_{1}}^{\eta_{2}}\mathcal{L}_{t}\big{(}f(v_{t }),\lambda_{t},\mu_{t}\big{)}-\sum_{t=\tau_{1}}^{\eta_{2}}\mathcal{L}_{t}(b_{ t},\lambda_{t},\mu_{t})\leq\operatorname*{\mathbb{Reg}}_{\delta}(T,M_{\mathbb{F}}) \tag{3}\]

Given the above guarantee for the primal and some mild conditions on \(\mathsf{Reg}\), we get the guarantees for the original problem. More specifically, we require that the dependence of \(M\) in \(\operatorname*{\mathbb{Reg}}_{\delta}(T,M)\) is not worse than quadratic. Using this condition, both the regret of the original problem and the violation of the ROI constraint are at most \(\operatorname*{\mathbb{Reg}}_{\delta}(T,\delta,\frac{2}{\beta\rho})\). Formally, we have the following theorem.

**Theorem 2.1** (Theorem 6.9 of (Bartlett and Barthelem, 1989), adapted to auctions).: _Assume (2) is true for \(\beta>0\), the dual algorithm is Online Gradient Descent, and (3) holds with \(\operatorname*{\mathbb{Reg}}_{\delta}(T,M)\leq\mathcal{O}\big{(}M^{2} \operatorname*{\mathbb{Reg}}_{\delta}(T,1)\big{)}\). Then, for every \(\delta>0\), with probability at least \(1-4\delta\), the regret of the core algorithm and the ROI violation is each at most \(\mathcal{O}\big{(}\operatorname*{\mathbb{Reg}}_{\delta}\big{(}T,\delta,\frac{2}{ \beta\rho}\big{)}+\frac{1}{\beta\rho}\sqrt{T\log(T/\delta)}\big{)}\)._

First, we note that (Bartlett and Barthelem, 1989) require a slightly more general condition than the one in (2) for \(\beta>0\); we present this in detail in Appendix C. Second, we note that if \(|\mathcal{F}|=K\) was finite, we had bandit feedback, and a known upper bound for \(M_{t}\) for \(M_{t}\) then existing techniques would allow us to get \(\operatorname*{\mathbb{Reg}}_{\delta}(T,M_{t})=\tilde{\mathcal{O}}\big{(}M_{t} \sqrt{TK\log(1/\delta)}\big{)}\). In the setting where there is no such upper bound, (Bartlett and Barthelem, 1989) offer an algorithm with \(\operatorname*{\mathbb{Reg}}_{\delta}(T,M_{t})=\tilde{\mathcal{O}}\big{(}M_{t} ^{2}\sqrt{TK\log(1/\delta)}\big{)}\). While this regret bound satisfies the requirements of Theorem 2.1, the quadratic dependence on \(M_{t}\) is sub-optimal, making the resulting regret bound of the core algorithm to be proportional to \(\frac{1}{\beta^{2}\rho^{2}}\). One of the contributions of the following sections is a general technique to get linear dependence of \(M_{t}\) in \(\operatorname*{\mathbb{Reg}}_{\delta}(T,M_{t})\), similar to knowing \(M_{t}\) in advance. This leads to much improved regret bounds that scale with \(\frac{1}{\beta\rho}\), which is especially important when \(\beta\) and \(\rho\) are small.

## 3. Primal algorithm designs with full information

In this section, we design a primal algorithm that satisfies (3) for sequential auctions. Our goal is to pick bids to maximize the Lagrangian \(\mathcal{L}_{t}(b_{t},\lambda_{t},\mu_{t})\). For every round \(t\), we define for simplicity \(r_{t}(\cdot)\) to be part of the Lagrangian that depends on the bid:

\[r_{t}(b)=1\left\{b\geq d_{t}\right\}\left(\chi_{t}b_{t}-\psi_{t}b(b,d_{t})\right) \tag{4}\]

where \(d_{t}\in[0,1]\) is the highest competing bid, \(a_{t}\in[0,1]\) is the value, \(p(b,d_{t})\) is the payment of bid \(b\), and \(\chi_{t}\), \(\psi_{t}\) are non-negative numbers that depend on the Lagrange multipliers \(\lambda_{t}\) (for budget constraint) and \(\mu_{t}\) (for ROI constraint) of round \(t\). For value maximizing, \(\chi_{t}=1+\mu_{t}\) and \(\psi_{t}=\lambda_{t}+\mu_{t}\). For quasi-linear utility, \(\chi_{t}=1+\mu_{t}\) and \(\psi_{t}=v+\lambda_{t}+\mu_{t}\) for some \(v\in[0,1]\). To present general results, we assume that \(\chi_{t},\psi_{t}\) are arbitrarily picked by an adaptive adversary with \(\chi_{t}>0\) and \(\psi_{t}\geq 0\). We emphasize the lack of an upper bound on \(\chi_{t},\psi_{t}\) and recall (3), which requires that the regret scales with the largest \(\chi_{t},\psi_{t}\) seen so far. We overload the notation of \(r_{t}(\cdot)\) to also take as an argument a bidding function \(f:[0,1]\rightarrow[0,1]\), in which case \(r_{t}(f)=r_{t}(f(a_{t}))\).

Our results apply to a wide range of price functions \(p(\cdot,\cdot)\) that include any combination of first and second price. In particular, \(p(\cdot,\cdot)\) needs to satisfy the following assumption which we explain after its formal statement.

**Assumption 3.1**.: The pricing function \(p(b,d)\) satisfies: (i) \(p(0,0)=0\); (ii) \(p(\cdot,d)\) is non-decreasing and \(1\)-Lipschitz continuous8 for all \(d\); (iii) for every \(t\), there exists a "safe" bid \(b_{t}^{c}\) so that

Footnote 8: \(g:\mathbb{R}\rightarrow\mathbb{R}\) is \(L\)-Lipschitz continuous if \(|g(x)-g(y)|\leq L|x-y|\) for all \(x,y\in\mathbb{R}\).

* \(r_{t}(b_{t}^{c})\geq 0\) for all \(d_{t}\).
* \(b_{t}^{c}\) is a function of \(a_{t},\chi_{t},\psi_{t}\) but not \(d_{t}\).
* for every bid \(b\) such that \(\inf_{d_{t}\in[0,1]}r_{t}(b)<0\), then for all \(d_{t}\) it holds \(r_{t}(b_{t}^{c})\geq r_{t}(b)\).

While Conditions (i) and (ii) are standard assumptions on the payment function, Condition (iii) is less straightforward. In short, the safe bid guarantees that our algorithm will never use \(b_{t}\) with \(r_{t}(b_{t})<0\). For every \(t\), we require that the function \(r_{t}(b)\) has a "safe" bid \(b_{t}^{c}\) so that: (a) \(b_{t}^{c}\) guarantees a non-negative reward, (b) \(b_{t}^{c}\) can be calculated using the information known before bidding, and (c) \(b_{t}^{c}\) guarantees reward that is at least the reward of any other bid which has a negative reward for some \(d_{t}\). We emphasize that (c) states that \(r_{t}(b_{t}^{c})\geq r_{t}(b)\) for all \(d_{t}\) as long as \(r_{t}(b)<0\) for some \(d_{t}\). In Appendix D.1, we show that any mixture of first and second price auction satisfies Assumption 3.1. In particular, the safe bid of Condition (iii) in this case is \(b_{t}^{c}=\min\left\{\frac{\chi_{t}}{\psi_{t}}\rho_{t},1\right\}\).

### Overview of the Primal Algorithm Design

We now state the main result of the section: There is an algorithm that has low interval regret with high probability. Our regret guarantee is with respect to the class of all \(L\)-Lipschitz continuous functions for any \(L\geq 1\), which we denote with \(\mathcal{F}\). In addition, our regret bound in rounds up to \(t\) scale linearly with respect to the highest \(\chi,\psi\) seen so far: \(U_{\tau}=\max_{t\leq\tau}\{\chi_{t},\psi_{t}\}\). Finally, we note that our algorithm takes into advantage the fact that \(\chi_{t},\psi_{t}\) are known before bidding in round \(t\). This is important for various calculations, e.g., calculating the safe bid \(b_{t}^{o}\) of a round. Outside of that, however, \(\chi_{t},\psi_{t}\) are picked adversarially and are not known before round \(t\).

**Theorem 3.2**.: _Let \(\mathcal{F}\) be the set of all \(L\)-Lipschitz continuous functions from \([0,1]\) to \([0,1]\) for some \(L\geq 1\). Assume that the payment function satisfies Assumption 3.1. Assume that \(\chi_{t},\psi_{t},d_{t}\) are picked by an adaptive adversary and \(\chi_{t},\psi_{t}\) are revealed after round \(t-1\). \(U_{\tau_{t}}=\max_{t\leq\tau_{t}}\{\chi_{t},\psi_{t}\}\). Then there exists an algorithm that generates bids \(b_{1},\ldots,b_{T}\) such that for all \(\delta>0\), with probability at least \(1-\delta\) it holds that for all intervals \([\tau_{1},\tau_{2}]\subseteq[T]\)_

\[\sup_{f\in\mathcal{F}}\sum_{t=1}^{\tau_{2}}r_{t}(f)-\sum_{t=1}^{\tau_{2}}r_{t} (b_{t})\leq\mathcal{O}\Big{(}U_{\tau_{2}}(\sqrt{LT}\log T+\sqrt{T\log(T/ \delta)})\Big{)}.\]

Theorem 3.2 satisfies (3) as well as the conditions of Theorem 2.1 getting the following theorem.

**Theorem 3.3**.: _There is an algorithm for value or quasi-linear utility maximization when the payment function satisfies Assumption 3.1, such that for every \(\delta>0\), with probability at least \(1-\delta\) the algorithm has regret against the class of \(L\)-Lipschitz continuous functions and ROI violation at most \(\frac{1}{\beta\beta}\mathcal{O}(\sqrt{LT}\log T+\sqrt{T\log(1/\delta)})\)._

We note that the above algorithm, while providing an optimal (up to \(\mathcal{O}(\log T)\)) information-theoretic bound, runs in exponential time. In Appendix G we present a polynomial time algorithm with matching regret which requires \(a_{t},d_{t}\) to be independent.

There are a couple of technical challenges in order to get low regret against \(\mathcal{F}\) and prove Theorem 3.2. First, even for in-expectation regret bound, we cannot directly use a standard algorithm like Hedge, since \(\mathcal{F}\) contains infinite actions. Instead, we work with finite approximations of \(\mathcal{F}\); for accuracy \(\epsilon>0\) let \(\mathcal{F}_{\epsilon}\subseteq\mathcal{F}\) such that

\[\forall f\in\mathcal{F},\exists f_{\epsilon}\in\mathcal{F}_{\epsilon}:\quad f(u )\leq f_{\epsilon}(b)\leq f(0)+\epsilon,\ \forall\epsilon\in[0,1] \tag{5}\]

i.e., for every \(f\) in the original set \(\mathcal{F}\) there exists some function \(f_{\epsilon}\) in the new set \(\mathcal{F}_{\epsilon}\) such that \(f_{\epsilon}\) is at least \(f\), but is never greater by more than \(\epsilon\). Previous work shows that there is always an \(\mathcal{F}_{\epsilon}\) with \(|\mathcal{F}_{\epsilon}|\leq\exp(\mathcal{O}(L/\epsilon))\). (30, Corollary 2.7.2)

The above bound on the cardinality of \(\mathcal{F}_{\epsilon}\) is exponential in \(1/\epsilon\). As explained in the introduction, using a standard online learning algorithm could only prove \(\mathcal{O}(T^{2/3})\) regret bounds. However, as Theorem 3.2 suggests, we can get much stronger \(\tilde{\mathcal{O}}(\sqrt{T})\) regret bounds. We solve this issue by utilizing the structure of \(\mathcal{F}\), similar to (Gilard et al., 2017; Gilard et al., 2017). We create a hierarchical tree structure where the leaves of the tree are the functions of \(\mathcal{F}\). Leaves whose distance is small represent bidding functions that are close in \(L_{\infty}\) distance. Next, a non-leaf node above the leaf nodes can calculate a bidding function by combining the bidding functions of its children. Because its children are very 'close,' we can design algorithms so that the output has small regret with respect to its best child. Similarly, every non-leaf node does the same with its children, with nodes closer to the root having larger regret. This results in \(\mathcal{O}(\sqrt{T})\) regret instead of \(\mathcal{O}(T^{2/3})\). We develop this tree algorithm in Section 3.3.

In Section 3.2, we develop the algorithm that is used by the non-leaf nodes and that utilizes the proximity of its children's bids. We present this algorithm in the general language of online learning. The structure that this algorithm takes advantage of is that there is a "good" action: it is at most \(\Delta\) sub-optimal compared to any other action, in every round. This leads to \(\mathcal{O}(\sqrt{\Delta T\log K})\) regret,which offers a great improvement over the regret of \(\mathcal{O}(\sqrt{f\log K})\) that Hedge has when \(\Delta\ll 1\).

Another technical challenge we face is regarding the discretization error. A naive assumption is that using \(\mathcal{F}_{\varepsilon}\) instead of \(\mathcal{F}\) leads to \(\mathcal{O}(\varepsilon)\) error every round. However, this is not the case: Let \(f,f_{\varepsilon}\) as described in (5). Using \(f_{\varepsilon}\) instead of \(f\) in a round \(t\) results in at most \(\psi_{t}\varepsilon\) error if bidding \(f(\upsigma_{t})\) wins the auction (since \(f_{\varepsilon}(\upsigma_{t})\) also wins). However, if \(f(\upsigma_{t})<d_{t}\leq f_{\varepsilon}(\upsigma_{t})\) it might be the case that \(r_{t}(f)=0\gg r_{t}(f_{\varepsilon})\). For example, consider first-price with \(\chi_{t}=\psi_{t}=1\), \(q_{t}=\varepsilon\), \(f(\upsigma_{t})=1-\varepsilon\), \(f(\upsigma_{t})=1\), and \(d_{t}=1-\varepsilon/2\), in which case \(r_{t}(f_{\varepsilon})=-(1-\varepsilon)\ll r_{t}(f)=0\).

The safe bid of Assumption 3.1 solve this discretization issue. If a bid \(b+\varepsilon\) is in danger of leading to a negative reward (i.e., \(\inf_{d_{t}}r_{t}(b+\varepsilon)<0\)), we can use the safe bid instead to guarantee at least as good reward for any \(d_{t}\), ensuring \(\mathcal{O}(\varepsilon)\) less reward than \(r_{t}(b)\). We present this in Section 3.3. We note that one can circumvent this issue when maximizing quasi-linear utility with no constraints (i.e., when \(\chi_{t}=\psi_{t}=1\)) by making sure that the class \(\mathcal{F}\) contains only functions such that \(f(\upsigma)\leq v\), which is the solution of (Gardner, 2017). However, we cannot limit \(\mathcal{F}\) in such a way since \(\upsigma_{t},\psi_{t}\) change dynamically.

Finally, to complete the proof of Theorem 3.2, in Section 3.4, we reduce the problem of bounding interval regret to bounding normal regret. The whole structure of our algorithm (including the primal/dual framework) is shown in Fig. 1.

Our resulting primal algorithm works by chaining multiple sub-algorithms, as shown in Fig. 1. The standard way to employ this chaining is to use each algorithm's outputting action. However, since our goal is a regret bound with high probability, the success of every algorithm is conditioned on the success of all its sub-algorithms. This creates noise in the high probability bounds, scaling with the number of sub-algorithms.

To overcome this challenge, we employ a different technique. Instead of an action, each algorithm outputs the distribution from which it would have sampled its action. These distributions satisfy a regret bound with probability 1, making chaining multiple algorithms much more stable since the sampling of an action happens only once and not for every sub-algorithm.

### Time-varying Ranges and Good Actions

In this section we develop the algorithm that we need for the non-leaf nodes of the tree algorithm, which takes advantage of the proximity of the rewards of its actions. We present the algorithm in the general language of online learning when there is a set \([K]\) of actions and an arbitrary reward function \(r_{t}(\cdot)\) for every round \(t\) which the learner observes after round \(t\).

There has been extensive work on this setting, under various different assumptions that make the problem easier or harder. The contribution of this section, Theorem 3.5, is twofold. First, our algorithm is agnostic to the future range of the rewards. Specifically, we assume that the reward of round \(t\) is in the range \([0,U_{t}]\) for some adversarially chosen \(U_{t}>0\) and the learner observes \(U_{t}\) when picking her action \(a_{t}\) in round \(t\). We assume that \(U_{1}\leq U_{2}\leq\ldots\leq U_{T}=U\). If \(U\) is known in advance, then using Hedge leads to regret that scales linearly with \(U\). We achieve the same dependency without knowing \(U\). This also improves the quadratic dependency on \(U\) of previous work (Gardner, 2017, Theorem 8.1).

Our second contribution in online learning when there is a \(\Delta\)-good action. The formal definition is in Definition 3.4, but simply put a \(\Delta\)-good action is at most \(\Delta\cdot U_{t}\) sub-optimal compared to any other action in every round \(t\). Definition 3.4 extends the original definition of (Gardner, 2017) for time-varying reward ranges \(U_{1},\ldots,U_{T}\).

**Definition 3.4** (Good action).: For rewards \(r_{t}:[K]\rightarrow[0,U_{t}]\), a \(\Delta\)-good action \(g\in[K]\) satisfies \(r_{t}(g)\geq r_{t}(a)-\Delta U_{t}\), \(\forall a\in[K],t\in[T]\).

Taking \(U_{t}=1\) yields the definition of (Gardner, 2017). Note that \(\Delta\in[0,1]\) since \(0\leq r_{t}(a)\leq U_{t}\).

We now present the algorithm for the above setting. Our algorithm is the Hedge algorithm but with a carefully selected step size \(\eta_{t}\). In particular, the probability of playing action \(a\) in round \(t\) is proportional to \(\exp(\eta_{t}R_{t-1}(a))\), where \(R_{t-1}(a)=\sum_{t^{\prime}\leq t-1}r_{t^{\prime}}(a)\) and \(\eta_{t}\propto 1/U_{t}\). We believe that this step size is of independent interest and can be used in any online learning setting to get regret bounds for time-varying ranges that match classical ones. Our regret bound is \(\mathcal{O}(U\sqrt{f\Delta\log K})\), which matches the one in (Gardner, 2017), without assuming \(U_{t}=U\) for every \(t\) and that \(U\) is known. The full algorithm can be found in Algorithm 1.

```
Input: Total rounds \(T\), actions \([K]\), sub-optimality of good action \(\Delta\)  Initialize cumulative reward of each action \(R_{0}(a)=0\quad\forall a\in[K]\) for\(t\in[T]\)do  Receive range \([0,U_{t}]\) and calculate step size \(\eta_{t}=\frac{1}{U_{t}}\sqrt{\frac{\log K}{T\Delta}}\)  Calculate probability distribution \(\rho_{t}(a)=\exp\left(\eta_{t}R_{t-1}(a)\right)/\sum_{a^{\prime}}\exp\left( \eta_{t}R_{t-1}(a^{\prime})\right)\quad\forall a\in[K]\)  Sample and play action \(a_{t}\sim\rho_{t}(a)\)  Receive rewards \(r_{t}:[K]\rightarrow[0,U_{t}]\)  Update cumulative rewards \(R_{t}(a)=r_{t}(a)+R_{t-1}(a)\quad\forall a\in[K]\)  end for
```

**ALGORITHM 1**Hedge for time-varying ranges and good actions

We now present our regret bound. As mentioned before, we bound the regret of the action distributions \(p_{1}(\cdot),\ldots,p_{T}(\cdot)\) that Algorithm 1 generates instead of the regret of the sampled actions. This implies a matching bound on the expected regret. Using standard concentration inequalities we can get bounds with high probability. However, the most useful application of outputting distributions instead of actions is that chaining multiple algorithms becomes easier. This allows for stronger high-probability guarantees: the overall regret bound is dependent only on one sampling process, the one performed by the top-level algorithm.

Figure 1. The algorithm structure of the entire primal/dual framework in our setting.

**Theorem 3.5**.: _Assume that an adaptive adversary picks the reward function \(r_{t}:[K]\rightarrow[0,U_{t}]\) in every round \(t\), where \(U_{1}\leq\ldots\leq U_{T}\). Assume that there is a \(\Delta\)-good action, with \(\Delta\geq\nicefrac{{4\log K}}{{T}}\). Then the action distributions \(p_{1},\ldots,p_{T}\) of Algorithm 1 guarantee \(\forall\tau\in[T]\)_

\[\max_{a\in[K]}\sum_{t\in[\tau]}r_{t}(a)-\sum_{t\in[\tau]}\sum_{a\in[K]}p_{t}(a )r_{t}(a)\leq 4U_{\tau}\sqrt{T\Delta\log K}.\]

Algorithm 1 dynamically adapts to the time varying reward ranges due to \(\eta_{t}\in U/U_{t}\). Because of this, if the adversary picks \(U_{t}\gg U_{t-1}\), our algorithm adapts to the new ranges and picks the action of round \(t\) accordingly. We believe this technique is very versatile and can be used to modify existing no-regret algorithms to work in the space of time-varying reward ranges. We show this in the bandit information setting in Theorem F.4. We defer the full proof of Theorem 3.5, along with the proofs of the other results of this section to Appendix D. In Appendix D we also include a high probability version of the above theorem, Theorem D.2 with \(\mathcal{O}(U\sqrt{T\Delta\log(T/\delta)})\) additional error. To retain regret that depends on \(T\Delta\) instead of \(T\), we cannot directly apply a standard concentration inequality and instead show that our rewards have low variance that depends on \(\Delta\) to get the improved bound.

### Algorithm for Lipschitz Bidding Functions

In this section we present the result that has low regret compared to the best \(L\)-Lipschitz function in the class \(\mathcal{F}\), when maximizing the reward function \(r_{t}(\cdot)\) as defined in (4).

The biggest novelty of this section is making sure that "similar" bidding functions result in similar reward. To that end, let \(f,f_{\ell}:[0,1]\rightarrow[0,1]\) such that \(f(v)\leq f_{\ell}(v)\leq f(v)+\epsilon\) for all \(v\in[0,1]\). Bidding function \(f\) is meant to represent an arbitrary function from \(\mathcal{F}\) while \(f_{\ell}\) is meant to represent a function from \(\mathcal{F}_{t}\), the discrete cover of \(\mathcal{F}\). We want to have low error when using \(f_{\ell}\) instead of \(f\).

As we discussed in Section 3.1, \(f_{\ell}\) might lead to \(r_{t}(f_{\ell})\propto r_{t}(f_{\ell})\) if \(f_{\ell}(v_{t})\geq d_{t}>f(v_{t})\). We solve this issue by ensuring the bids we use never lead to negative reward, using Assumption 3.1. In our learning algorithm, each "action" (e.g. the \([K]\) actions in Theorem 3.5) represents a bidding function \(f_{\ell}\in\mathcal{F}_{t}\). However, using the action that represents \(f_{\ell}\) will not lead to bidding \(f_{\ell}(v_{t})\). Instead, when bid \(f_{\ell}(v_{t})\) could lead to negative reward for some \(d_{t}\) (recall \(d_{t}\) is unknown when bidding) then we replace that bid with \(b_{t}^{o}\), the safe bid of that round. Because of Assumption 3.1, we can both calculate when bid \(f_{\ell}(v_{t})\) could lead to negative reward and guarantee that in that case the safe bid will lead to more reward. This trick guarantees that the reward of the action that corresponds to \(f_{\ell}\) is at most \(\max\{\chi_{t},\psi_{t}\}\cdot\epsilon\) worse than \(r_{t}(f)\). We emphasize that this step is necessary to guarantee bounded discretization error.

After using the above trick, the functions of \(\mathcal{F}_{t}\) are placed on a tree, with functions that are close in the tree implying that they are close in \(L_{\infty}\) distance. The resulting algorithm is similar to the one in (Grover and Leskovec, 2017). There are two key differences. First, the leaves of the tree suggest bids that use the above modified bids to ensure no-negative reward. Second, each non-leaf node combines the bids of its children to create a new bid distribution by using Theorem 3.5 to adapt to the time-varying ranges and take advantage of the \(\Delta\)-good arm. We next present the regret bound we get and defer the algorithm's full description and its proof in Appendix D.3.

**Theorem 3.6**.: _For \(\tau\in[T]\) let \(U_{\tau}=\max_{t\leq\tau}\{\chi_{t},\psi_{t}\}\) and \(\mathcal{F}\) be the set of \(L\)-Lipschitz bidding functions for \(L\geq 1\). There exists an algorithm that generates bid distributions \(q_{t}\) that with probability \(1\),_

\[\sup_{f\in\mathcal{F}}\sum_{t=1}^{\tau}r_{t}(f)-\sum_{t=1}^{\tau}\sum_{b}q_{t} (b)r_{t}(b)\leq\mathcal{O}\Big{(}U_{\tau}\sqrt{LT}\log T\Big{)}.\]

### Reduction from Regret to Interval Regret

We now show how to turn the regret bound of Theorem 3.6 to an interval regret bound. Recall that an interval regret bound is required to apply Theorem 2.1. We achieve the desired result by proving a general reduction from regret to interval regret, for any online learning problem with full information feedback.

Our reduction combines multiple online learning algorithms. Specifically, we consider \(T\) different algorithms. The \(t\)-th algorithm (\(t\in[T]\)) "starts" in round \(t\) and has low regret in the intervals \([t,t^{\prime}]\), for \(t^{\prime}>t\). For every interval, one of the \(T\) algorithm has low regret but it is unclear how to get a _single_ algorithm with low regret in _every_ interval. We combine the output of each algorithm into a single distribution of action, using another online learning algorithm. For this meta-algorithm, we consider Algorithm 1, with the \(K=T\) actions being the aforementioned \(T\) algorithms. This results in low _interval regret_ with a \(\mathcal{O}(\sqrt{T\log T})\) additional error.

Before mentioning our full result, we note one additional technique we have to use. Under the above description, it is unclear how the meta-algorithm handles inactive algorithms, i.e. algorithms that have not been started yet. This is partially resolved by constraining the meta-algorithm to sample only active algorithms. However, this does not decide what is the reward assigned to inactive algorithms (recall the final step of Algorithm 1). We resolve this by assigning them reward equal to the expected reward of the meta-algorithm under only the active algorithms. This reward structure ends up being equivalent to re-sampling an action if a inactive algorithm is sampled. We state the full result next.

**Theorem 3.7**.: _Let \(A\) be a set of actions and \(r_{t}:A\rightarrow[0,U_{t}]\) be the reward function picked by an adaptive adversary. For every \(r_{1}\in[T]\) let \(\mathcal{A}_{r_{t}}\) be an algorithm that generates distributions \(q_{t}^{r_{1}}(\cdot)_{t\geq 1}\), over the actions \(A\) such that for all \(r_{2}\geq\tau_{1}\)_

\[\sup_{a\in A}\sum_{t\in[\tau_{1},\tau_{2}]}r_{t}(a)-\sum_{t\in[\tau_{1},\tau_{ 2}]}\operatorname*{\mathbb{E}}_{a\rightarrow\eta_{t}^{a}}\left[r_{t}(a) \right]\leq\operatorname*{\mathbb{Reg}}_{\tau_{1}}(\tau_{2})\]

_Then there is an algorithm that can generate action distributions \(q_{1}(\cdot),\ldots,q_{T}(\cdot)\) such that for all \([\tau_{1},\tau_{2}]\subseteq[T]\):_

\[\sup_{a\in A_{t}\in[\tau_{1},\tau_{2}]}r_{t}(a)-\sum_{t\in[\tau_{1},\tau_{2}]} \operatorname*{\mathbb{E}}_{a\rightarrow\eta_{t}}\left[r_{t}(a)\right]\leq \operatorname*{\mathbb{Reg}}_{\tau_{1}}(\tau_{2})+4U_{\tau_{2}}\sqrt{T\log T}.\]

The full description of our algorithm is in Algorithm 3, which is in Appendix D.4, along with the proof of Theorem 3.7. Combining the above theorem with Theorem 3.6 gives the following result.

**Corollary 3.8**.: _In the same setting as Theorem 3.6, there is an algorithm that generates distributions over bids \(q_{1}(\cdot),\ldots,q_{T}(\cdot)\) such that with probability \(1\), for every \(1\leq\tau_{1}<\tau_{2}\leq T\) it holds_

\[\sup_{f\in\mathcal{F}}\sum_{t=1}^{\tau_{2}}r_{t}(f)-\sum_{t=1}^{\tau_{2}}\sum_{b }q_{t}(b)r_{t}(b)\leq\mathcal{O}\Big{(}U_{\tau_{1}}\sqrt{LT}\log T\Big{)}\]Corollary 3.8 immediately implies Theorem 3.2 using standard concentration inequalities. We include these calculations in Appendix D for completeness.

## 4. Exact satisfaction of the ROI constraint

In this section we show how we can turn every algorithm that has an approximate satisfaction of the ROI constraint into one with exact satisfaction. This reduction (Lemma 4.2), together with Theorem 3.3, lead to the following theorem.

**Theorem 4.1**.: _In the same setting as Theorem 3.3, there exists an algorithm that always satisfies the budget and ROI constraints and with probability \(1-\delta\) has regret \(\frac{1}{\beta\beta}\rho(\sqrt{LT}\log T+\sqrt{T\log(1/\delta)})\)._

Theorem 4.1 follows from the following lemma, which combines two algorithms to get the desired reduction from approximate satisfaction of the ROI constraint to an exact one. One algorithm maximizes the objective and has low ROI violation with high probability. The other algorithm is much simpler: it maximizes value minus payment, i.e., the ROI constraint. By running the second algorithm for enough rounds, we can accumulate enough'slack' to mitigate the violation caused by the first algorithm.

**Lemma 4.2**.: _Assume that there is an algorithm \(\mathcal{A}_{1}\) such that for every \(\delta>0\), with probability at least \(1-\delta\), when running on any set of rounds \(\mathcal{T}_{1}\subseteq[T]\) it generates bids that have_

* _regret at most_ \(\mathsf{Reg}_{\delta}(|\mathcal{T}_{1}|)\)_._
* _total ROI violation at most_ \(V_{\delta}(|\mathcal{T}_{1}|)\)_,_
* _and another algorithm_ \(\mathcal{A}_{2}\) _such that_
* _its bid_ \(b_{t}\) _in round_ \(t\) _satisfies_ \(1\left[b_{t}\geq d_{t}\right](v_{t}-p(b_{t},d_{t}))\geq 0\)_._
* _for every_ \(\delta>0\)_, with probability at least_ \(1-\delta\)_, when run in any set of rounds_ \(\mathcal{T}_{2}\subseteq[T]\) _it generates bids_ \(\{b_{t}\}_{t\in\mathcal{T}_{2}}\) _such that_ \(\sum_{t\in\mathcal{T}_{1}}\left[b_{t}\geq d_{t}\right](v_{t}-p(b_{t},d_{t}))\geq Q _{2}(\mathcal{T}_{2})\)_._

_Consider bidding \(\partial\) on rounds where the remaining budget is less than \(1\), using \(\mathcal{A}_{1}\) on rounds \(t\) when \(\sum_{t^{\prime}\leq t-1}\left[b_{t}\geq d_{t}\right](v_{t}-p(b_{t},d_{t}))\geq 1\), and \(\mathcal{A}_{2}\) on other rounds. This yields exact satisfaction of the ROI constraint. Moreover, for any \(\delta>0\), with probability at least \(1-2\delta\) it has regret at most \(\mathsf{Reg}_{\delta}(\mathcal{T})+2Q_{\delta}^{-1}(V_{\delta}(T)+2)\) where \(Q_{\delta}^{-1}(\cdot)\) is the inverse function of \(Q_{\delta}(\cdot)\)._

The conditions of the two algorithms sketch the lemma's proof (the full proof is in Appendix E, along with the proof of Theorem 4.1). \(\mathcal{A}_{1}\) violates the ROI constraint by at most \(V(T)\) (for simplicity we drop the dependence on \(\delta\)) and the second algorithm, in order to make up that violation, needs to be run for about \(Q^{-1}(V(T))\) rounds. This has two effects on the total regret. First, \(\mathcal{A}_{1}\) is run for \(Q^{-1}(V(T))\) fewer rounds, potentially missing out on any reward on those rounds. Second, \(\mathcal{A}_{2}\) can use at most \(Q^{-1}(V(T))\) of the budget, making the overall algorithm have to stop at most \(Q^{-1}(V(T))\) rounds earlier. This entails the desired bound.

We briefly explain how we get Theorem 4.1 from Lemma 4.2. Theorem 3.3 satisfies the constraints for \(\mathcal{A}_{1}\). \(\mathcal{A}_{2}\) is the algorithm of Theorem 3.2 by setting \(\chi_{t}=\hat{\psi}_{t}=1\) in \(r_{t}(\cdot)\) of (4). This makes \(\mathsf{Reg}(T_{1})=V(T_{1})=\frac{1}{\beta\beta}\tilde{\mathcal{O}}(T_{1})\) and \(Q(T_{2})=\mathcal{H}_{2}-\tilde{\mathcal{O}}(\sqrt{T_{2}})\); the last equality follows from the assumption on \(\beta\), (see Equation (2)).

**Necessity of \(\beta\).** In Appendix E we present an example that shows dependency on \(\beta\) is necessary in our regret bounds. Specifically, as \(\beta\) decreases, the regret of any algorithm that exactly satisfies the ROI constraint increases polynomially in \(1/\beta\). We show this for second-price auctions, to simplify the problem of regret minimization.

**Theorem 4.3**.: _In second-price auctions any algorithm with strict satisfaction of the ROI constraint cannot guarantee regret less than \((1-2\beta)\sqrt{T\frac{1}{2\pi\beta(1-\beta)}}\) when compared to the optimum LP value (e.g., see (1)) for every constant \(\beta<1/2\)._

## 5. Bandit information

In this section we study online learning in the bandit information setting. After bidding on round \(t\), the bidder does not observe the highest competing bid \(d_{t}\). Instead, she only gets to observe a Boolean value that indicates whether she wins this round, along with the price she paid if she wins, i.e., \(1\left[b_{t}\geq d_{t}\right]\) and \(1\left[b_{t}\geq d_{t}\right]p(b_{t},d_{t})\). Note that this setting is completely different between first-price and second-price auctions. In second-price, if the bidder wins a certain round, she gets to observe \(d_{t}\) and the same is true whenever \(p(b,d)=qb+(1-q)d\) for \(q>0\). In contrast, when the bidder participates in strictly first-price auctions, she can never observe \(d_{t}\). Next, we show that this is a crucial distinction that makes first-price auctions much harder: any algorithm has to suffer \(\Omega(T^{2/3})\) regret,in contrast to the \(\tilde{\mathcal{O}}(\sqrt{T})\) regret bounds for second-price auctions (Gardner and Boyd, 2014; Boyd, 2014). To complement the negative result, in Appendix F.2 we offer an algorithm with \(\tilde{\mathcal{O}}(T^{3/4})\) regret.

**Regret Lower Bound.** An \(\Omega(T^{2/3})\) bound is known for quasi-linear utility maximization and no constraints by (Barbieri et al., 2015), which follows from the matching bound of (Barbieri et al., 2015). Instead, we show a lower bound for value maximization with a budget constraint. In particular, our lower bound holds even if the value is fixed across rounds.

**Theorem 5.1**.: _There exists an instance in first-price auctions with no ROI constraint, \(\rho=1/4\), and \(v_{t}=1\) such that, any value-maximizing algorithm with only bandit feedback has regret \(\Omega(T^{2/3})\)._

The problem described in Theorem 5.1 seems straightforward at first glance: the buyer wants to maximize the number of wins while adhering to the budget constraint. For example, if the CDF of \(d_{t}\) is continuous and strictly increasing, one could consider that the bid \(b^{*}\) such that \(b^{*}\)\(\mathbb{P}\left[b^{*}>d_{t}\right]=\rho\), i.e., the bid that depletes the budget in expectation, is optimal. The problem of (approximately) finding such a bid \(b^{*}\) is not hard, since it can be reduced to the problem of noisy binary search (Gardner and Boyd, 2014). However, while this approach would work for second-price auctions, it does not work for first-price auctions. The reason is that our original hypothesis, that a single bid every round is optimal, is erroneous. There are strictly increasing and continuous CDFs for \(d_{t}\) where, to maximize the number of wins while staying within budget, the bidder needs to use two distinct bids. In particular, the value of using the optimal two bids and the single optimal bid can be as big as a factor of \(2\).

In our proof we study a CDF \(F\) for \(d_{t}\) where there are infinite pairs of bids that, if mixed properly, attain the optimal solution. Next, an adversary perturbs \(F\) by moving some mass to some bid \(b^{*}\) from bid \(b^{*}+\epsilon\), making bid \(b^{*}\) more 'valuable'. This entails that any algorithm that does not use \(b^{*}\) enough faces considerable regret. The proof is completed by arguments similar to the ones in (Barbieri et al., 2015): the bandit information that the bidder receives requires any algorithm to waste multiple rounds using sub-optimal bids before finding \(b^{*}\). We include the full proof in Appendix F.1.

[MISSING_PAGE_FAIL:9]

wang23ao.html
* [2003] Martin Zinkevich. 2003. Online Convex Programming and Generalized Infinitesimal Gradient Ascent. In _Machine Learning, Proceedings of the Twentieth International Conference (ICML 2003), August 21-24, 2003, Washington, DC, USA,_.
* [2004] Tom Fawcett and Nina Mishra (Eds.). AAAI Press, Washington, DC, USA,_ 928-936. [http://www.aaai.org/Library/ICML/2003/exml03-120.php](http://www.aaai.org/Library/ICML/2003/exml03-120.php)
* [2005]

## Appendix A Further Related Work

**Online bidding in truthful auctions**: Feng et al. [12] study online bidding in sequential truthful auctions under budget and ROI constraints in a stochastic environment. Their algorithm guarantees \(\tilde{O}(\sqrt{T})\) regret with respect to the best bidding sequence and satisfies exactly both the ROI and budget constraints. Their results are an extension of the results of Balseiro and Gur [6], Balseiro et al. [7] where they study the same setting without ROI constraints. On the other hand, our paper studies a more general class of (possibly) non-truthful auctions and provides an algorithm that has the same regret guarantee. Balseiro and Gur [6], Balseiro et al. [7] also study the adversarial setting, where the value and the highest competing bid are not sampled by a stationary distribution but are picked by an adversary. In this setting, it is impossible to achieve regret that is sublinear in \(T\), so they bound the competitive ratio, i.e. the multiplicative error, instead. Aside from truthful auctions, [7] also extend these guarantees to settings where the learner gets to observe every parameter of a round before picking a decision, e.g., in auctions observe the highest competing bid before bidding.

**Online bidding without constraints**: Another line of work studies online bidding without constraints. [18] study quasi-linear utility maximization in first-price auctions, while [11] study the maximization of arbitrary Lipschitz continuous functions. Both use an algorithm with a tree structure similar to ours; we comment on the similarity/differences in Section 3.3. Balseiro et al. [5] study contextual online learning, which result into a \(\tilde{O}(T^{2/3})\) regret bound for quasi-linear utility maximizers in first-price auctions with bandit feedback. More recently, Kumar et al. [25] develop a \(\tilde{O}(\sqrt{T})\) regret algorithm for first-price auctions with finite number of potential bids; they provide a \(\tilde{O}(\log T)\) regret for stochastic inputs. Kleinberg and Leighton [23] study online pricing, where the learner wants to learn how to price an item to maximize revenue; one of their results implies that the above regret bound is tight.

**Online learning with budgets**: _Bandits with Knapsacks_ is a class of online learning problems where the learner has a general action space and multiple budget constraints [1, 2, 4, 13, 20, 22]. Bernasconi et al. [8], Kumar and Kleinberg [24], Slivkins et al. [29] study the same setting when the budget can also increase in some rounds.

**Online learning without constraints**: Finally, the problem of online learning without constraints has received extensive attention. [19] and [28] are excellent textbooks. The most commonly used algorithms for settings with finite number of actions are Hedge for full information feedback [16] and EXP3 for bandit feedback [3]. For online convex optimization (where there are infinite number of actions) the most commonly used algorithm is Online Gradient Descent [32].

## Appendix B Limitation of Pacing multipliers

**Gap between Lipschitz bidding functions and Pacing multipliers.** Consider a value maximizer in first-price auctions with total budget \(T/2\). Assume that her values are either \(1/2\) or \(1\), each with probability \(1/2\). Also assume that the highest competing bid every round is \(1/2\). The best Lipschitz bidding function is to bid \(1/2\) every round: this stays within budget (in expectation) and leads to a total value of \(\frac{1}{4}T\). In contrast, no fixed pacing multiplier can win all rounds and stay within budget. In particular the only pacing multipliers worth considering is bidding half or all of the value. In turns out that the best the bidder can do is bid her value with probability \(1/2\) and half her value with probability \(1/2\), leading to total value \(\frac{1}{2}T\). This proves that the difference between the two benchmarks is \(\frac{1}{8}T\), even in this very simple example.

**ROI Constraint for Pacing Multiplier in first-price auctions.** Another example that showcases the limitation of the best Pacing multiplier benchmark is value maximizing in first-price auctions. Here, an online learner who wants to compete against the best pacing multiplier does not have to consider the ROI constraint at all. This follows because the optimal such bidding would never use a pacing multiplier that would violate that constraint (i.e., bid above the value). In contrast, an optimal general bidding function for value maximization might bid above the bidder's value in some rounds, as long as it wins other rounds where the bid is sufficiently less than the value.

## Appendix C Deferred Text of Section 2

We now present the assumption that [10] make for their results. They assume that there must exist a distribution \(F\in\Delta(\mathcal{F})\) of functions such that if the player bids according to \(F\) then for some \(\alpha\geq 0\) on expectation: (a) the payment of the player is no more than \(\rho-\alpha\), and (b) the value earned by the player is at least the payment plus \(\alpha\). Formally, \(\exists F\in\Delta(\mathcal{F})\):

(6)

The above conditions imply that substituting \(F\) in problem (1), both constraints are satisfied with a slack of \(\alpha\). In the absence of a ROI constraint, we would have \(\alpha=\rho\). Given (6) and that \(\alpha>0\), the regret bounds of [10] depend on \(\alpha\) and become worse as \(\alpha\) becomes smaller.

We now prove how (2) implies (6) with \(\alpha=\beta\rho\). We require that the function \(f(v)=0\) is included in \(\mathcal{F}\) and bidding \(0\) guarantees \(0\) payment. Let \(f_{\beta}\) be the bidding function that makes the guarantee in (2). We define \(F\) to be the following distribution of functions: \(f_{\beta}\) with probability \(\rho\) and the \(0\) bid with probability \(1-\rho\). In this case we have

\[\begin{split}&\mathop{\mathbb{E}}_{f\sim F}\mathop{\mathbb{E}}_{( \alpha,d)}\left[(u-p(f(v),d))\right]1\left[f(v)\geq d\right]\end{split} \tag{7}\]

where the first inequality holds by \(1\left[0\geq d\right]p(0,d)=0\) and the second by (2). This proves the first inequality of (6). For the second constraint of (6) we have

\[\begin{array}{l}\mathop{\mathbb{E}}\limits_{f\sim F}\mathop{\mathbb{E}}\limits_{(a, d)}\left[p\big{(}f((v),d)\big{)}1\left[f(v)\geq d\right]\right]^{\prime}\\ =\ \rho\mathop{\mathbb{E}}\limits_{(a,d)}\left[p\big{(}f_{\beta}(v),d)1\left[f_{ \beta}(v)\geq d\right]\right]\\ \leq\ \rho(1-\beta)\end{array}\]

where in the last inequality we used by (2) and \(v\leq 1\). The above two inequalities prove (6) for \(\alpha=\rho\beta\), as claimed.

## Appendix D Deferred Proofs and Text of Section 3

In this section we present the deferred proofs and text of Section 3.

### Deferred Proof for safe bid in auctions

Here, we show that any mixture of first and second-price auction satisfies Assumption 3.1 and more specifically Condition (iii).

We start with first-price auctions, i.e., \(p(b,d)=b\). For simplicity, we start with a simpler safe bid than the one we claimed in the main body of the paper, \(b_{t}^{\alpha}=0\). Conditions (a) and (b) are obvious. For Condition (c) we notice that \(\inf_{d_{t}}r_{t}(b)<0\iff\forall b>\forall\alpha t\). For such bids \(b\), \(r_{t}(b)\leq 0\) for all \(d_{t}\) which makes Condition (c) follow from \(r_{t}(0)\geq 0\).

We now move to second-price, i.e., \(p(b,d)=d\), where a safe bid is \(b_{t}^{\alpha}=\min\left\{\frac{1}{b_{t}}\log_{t}{b_{t}}\right\}\). Condition (b) follows from definition and Condition (a) follows by calculating \(r_{t}(b_{t}^{\alpha})=(\chi_{t\alpha}t_{\beta}-\psi_{d}d_{t})^{\ast}\). For condition (c), we notice that \(\inf_{d_{t}}r_{t}(b)<0\iff b>\frac{d_{t}}{b_{t}}n_{t}\); this is because \(r_{t}(b)<0\iff b\geq d_{t}>\frac{d_{t}}{b_{t}}n_{t}\) and the last inequality can be satisfied iff \(b>\frac{d_{t}}{b_{t}}n_{t}\). For such, \(r_{t}(b_{t}^{\alpha})<r_{t}(b)\) would hold only if the bid \(b_{t}^{\alpha}\) could win an auction that \(b\) would not, which is impossible since \(b>b_{t}^{\alpha}\); this implies (c).

We note that the above safe bid \(b_{t}^{\alpha}\) satisfies something much stronger than Condition (c), as we mentioned in Section 1. For every \(d_{t}\), it holds that \(b_{t}^{\alpha}\in\arg\max_{b}r_{t}(b)\).

We now focus on the most general case, a mix of first and second price, i.e., \(p(b,d)=qb+(1-q)d\) for some \(q\in[0,1]\). Here the safe bid for second-price also works here: \(b_{t}^{\alpha}=\min\left\{\frac{1}{b_{t}}n_{t},1\right\}\). In this case \(r_{t}(b_{t}^{\alpha})=(1-q)(\chi_{t\alpha}t_{\beta}-\psi_{d}t_{\beta})^{\ast}\), which proves Condition (b). Similar to before, \(\inf_{d_{t}}r_{t}(b)<0\iff b>\frac{d_{t}}{b_{t}}n_{t}\) in which case an analysis like the ones above proves Condition (c).

### Deferred Proofs from Section 3.2

We first prove Theorem 3.5, the main theorem of Section 3.2.

Proof of Theorem 3.5.: We first shift the rewards: since Hedge remains the same if a (possibly time-dependent) constant is added to the rewards, we set for all \(t\), \(a\)

\[r_{t}(a)\gets r_{t}(a)+\Delta U_{t}-\max_{a^{\prime}\in[K]}r_{t}(a^{ \prime})\]

This means that now the rewards are \(r_{t}:[K]\rightarrow[-(1-\Delta)U_{t},\Delta U_{t}]\) and specifically for the good action, \(r_{t}(g)\geq 0\).

Now let \(W_{t}=\sum_{a}\exp(\eta_{t}R_{t-1}(a))\) and \(\theta=\sqrt{\frac{\log L}{T\Delta}}\). Notice that the probability to play action \(a\) in round \(t\) is \(p_{t}(a)=\frac{\exp(\eta_{t}R_{t-1}(a))}{W_{t}}\).

We have that

\[\frac{1}{W_{t}}\sum_{a}\exp(\eta_{t}R_{t}(a)) \tag{7}\] \[= \sum_{a}\frac{\exp(\eta_{t}R_{t-1}(a))}{W_{t}}\exp(\eta_{t}r_{t}( a))\] \[= \sum_{a}p_{t}(a)\exp(\eta_{t}r_{t}(a))\] \[\leq \exp\left(\eta_{t}(1-\eta_{t}U_{t})\sum_{a}p_{t}(a)r_{t}(a)+\eta_ {t}^{2}U_{t}\Delta U_{t}\right)\] \[= \exp\left(\eta_{t}(1-\theta)\sum_{a}p_{t}(a)r_{t}(a)+\theta^{2} \Delta\right) \tag{8}\]

where we get the last equality by substituting \(\eta_{t}=\frac{\theta}{U_{t}}\) and in order to prove the last inequality we first prove the following proposition.

**Proposition D.1**.: _Let \(X\) be a random variable such that \(\mathbb{E}\left[X\right]=x\), \(c_{1}\leq X\leq c_{2}\), with \(c_{2}\geq 0\). Then, for any \(0<\eta\leq\frac{1}{\max\left\{|c_{1}|,|c_{2}|\right\}|}\),_

\[\mathbb{E}\left[\exp(\eta X)\right]\leq\exp\left(\eta x(1-\eta(c_{2}-c_{1}))+ \eta^{2}c_{2}(c_{2}-c_{1})\right).\]

Proof.: Let \(\sigma^{2}=\mathbb{E}\left[(X-x)^{2}\right]\) and \(c=\max\left\{|c_{1}|,|c_{2}|\right\}\). We have that

\[\mathbb{E}\left[\exp(\eta X)\right] =\ \mathbb{E}\left[\exp(\eta(X-x))\right]\exp(\eta x)\] \[\leq\ \exp\left(\frac{\sigma^{2}}{c^{2}}\left(\epsilon^{\eta c}-1-\eta c\right)\right)\exp(\eta x)\] \[\leq\ \exp\left(\frac{\sigma^{2}}{c^{2}}\eta^{2}c^{2}\right)\exp(\eta x)\] \[=\ \exp\left(\sigma^{2}\eta^{2}\right)\exp(\eta x)\]

where the first inequality follows from Bernstein's inequality9 and the last inequality follows by the fact that since \(\eta c\leq 1\) we get \(\epsilon^{\eta c}\leq 1+\eta c+(\eta c)^{2}\). We now bound

Footnote 9: See Lemma 7.26 in [https://www.stat.cmu.edu/~larry/~sml/Concentration.pdf](https://www.stat.cmu.edu/~larry/~sml/Concentration.pdf).

\[\sigma^{2}=\mathbb{E}\left[(X-x)^{2}\right]\]

\[\leq\mathbb{E}\left[(c_{2}-X)^{2}\right]\leq(c_{2}-c_{1})\,\mathbb{E}\left[c_{2}-X\right]=(c_{2}-c_{1})(c_{2}-x)\]

where the first inequality follows from the fact that \(\mathbb{E}\left[(X-y)^{2}\right]\) is minimized when \(y=x=\mathbb{E}\left[X\right]\), i.e., when it is equal to the variance. The second inequality follows from \(c_{2}-X\geq 0\) and \(X\geq c_{1}\). Rearranging proves the proposition. 

Now the inequality in (7) follows from the proposition by setting \(X=r_{t}(a)\) with probability \(p_{t}(a)\), \(c_{1}=-(1-\Delta)U_{t}\), and \(c_{2}=\Delta U_{t}\) and noticing that \(\eta_{t}=\frac{\theta}{U_{t}}\leq\frac{1}{U_{t}}=\frac{1}{1-c_{1}}\leq\frac{1}{ \max\left\{|c_{1}|,|c_{2}|\right\}}\).

Taking the logarithm of (7) we get

\[\frac{1}{\eta_{t}}\log\left(\frac{\sum_{a}\exp(\eta_{t}R_{t}(a))}{\sum_{a}\exp( \eta_{t}R_{t-1}(a))}\right)\leq(1-\theta)\sum_{a}p_{t}(a)r_{t}(a)+U\theta\Delta\]

or equivalently

\[\frac{1}{\eta_{t}}\log\frac{\sum_{a}\exp(\eta_{t}R_{t}(a))}{K}-\frac{1}{\eta_{t }}\log\frac{\sum_{a}\exp(\eta_{t}R_{t-1}(a))}{K} \tag{9}\] \[\leq(1-\theta)\sum_{a}p_{t}(a)r_{t}(a)+U\theta\Delta\]In the above equation we use the fact that

\[\frac{1}{\eta_{t}}\log\frac{\sum_{a}\exp(\eta_{t}R_{t}(a))}{K}\geq\frac{1}{\eta_{t +1}}\log\frac{\sum_{a}\exp(\eta_{t+1}R_{t}(a))}{K}\]

which follows from the fact that \(\eta_{t+1}\geq\eta_{t}\) and the fact that the function

\[\left(\frac{1}{K}\sum_{i=1}^{K}x_{i}^{\eta}\right)^{1/\eta}\]

is increasing in \(\eta\) for \(x_{1}>0\). This makes the previous inequality

\[\frac{1}{\eta_{t+1}}\log\frac{\sum_{a}\exp(\eta_{t+1}R_{t}(a))}{K}-\frac{1}{ \eta_{t}}\log\frac{\sum_{a}\exp(\eta_{t}R_{t-1}(a))}{K}\]

\[\leq(1-\theta)\sum_{a}p_{t}(a)r_{t}(a)+U\theta\Delta\]

Fix \(\tau\in[T]\). We add the above for all \(t\in[\tau-1]\) along with (9) for \(t=\tau\) and simplify the telescopic sum to get

\[\frac{1}{\eta_{\tau}}\log\frac{\sum_{a}\exp(\eta_{\tau}R_{t}(a))} {K}-\frac{1}{\eta_{1}}\log\frac{\sum_{a}\exp(0)}{K} \tag{10}\] \[\leq(1-\theta)\sum_{t\in[\tau]}\sum_{a}p_{t}(a)r_{t}(a)+U\theta T\Delta\]

Using the fact that \(\sum_{a}\exp(\eta_{\tau}R_{t}(a))\geq\exp(\eta_{\tau}R_{t}^{*})\) (where \(R_{t}^{*}=\max_{a}R_{\tau}(a)\)) and substituting \(\eta_{\tau}=\frac{\theta}{U_{\tau}}\) and \(\theta=\sqrt{\frac{\log K}{\Omega}}\) we get

\[R_{\tau}^{*}-U_{\tau}\sqrt{\Omega\log K}\leq(1-\theta)\sum_{t\in[\tau]}\sum_{a }p_{t}(a)r_{t}(a)+U_{\tau}\sqrt{\Omega\log K} \tag{11}\]

Using the fact that \(R_{\tau}^{*}\geq 0\) (since the reward of the good arm is always non-negative) we can use (10) to prove

\[\sum_{t\in[\tau]}\sum_{a}p_{t}(a)r_{t}(a)\geq-\frac{2}{1-\theta}U_{\tau}\sqrt{ \overline{\Omega\log K}}\geq-4U_{\tau}\sqrt{\overline{\Omega\log K}} \tag{12}\]

where we use the fact that \(\theta=\sqrt{\frac{\log K}{\Omega}}\leq 1/2\) since \(\Delta\geq\frac{4\log K}{\overline{I}}\). We rearrange the terms in (10) to get

\[R_{\tau}^{*}-\sum_{t\in[\tau]}\sum_{a}p_{t}(a)r_{t}(a) \leq 2U_{\tau}\sqrt{\overline{\Omega\log K}}-\theta\sum_{t\in[\tau]} \sum_{a}p_{t}(a)r_{t}(a)\] \[\leq 2U_{\tau}\sqrt{\overline{\Omega\log K}}+4U_{\tau}\sqrt{\overline {\Omega\log K}}\] \[\leq 4U_{\tau}\sqrt{\overline{\Omega\log K}}\]

where for the second inequality we used (11) and for the final inequality we used \(\theta\leq\frac{1}{2}\). This proves the theorem. 

We now state and prove the high probability version of Theorem 3.5.

**Theorem D.2**.: _In the same setting as Theorem 3.5, Algorithm 1 guarantees the following high probability bound: for every \(\delta>0\) probability at least \(1-\delta\), it holds that_

\[\forall\tau\in[T]:\quad\max_{a\in[K]}\sum_{t\in[\tau]}r_{t}(a)- \sum_{t\in[\tau]}r_{t}(a_{t})\] \[\leq 4U_{\tau}\Big{(}\sqrt{\overline{\Omega\log K}}+\max\left\{ \sqrt{\overline{\Omega\log(T/\delta)}},\log(T/\delta)\right\}\Big{)}\]

The high probability bound does not follow from a simple application of the Azuma-Heffoffding inequality, since the range of \(\sum_{t}r_{t}(a_{t})\) can be \(\Omega(UT)\) making the resulting error \(O(U\sqrt{\overline{f\log(1/\delta)}})\) and not \(O(\sqrt{\overline{\Omega\log(1/\delta)}})\) like in the above. Instead, we use Freedman's inequality, which offers a bound based on \(\sum_{t}\text{Var}\big{[}r_{t}(a_{t})\big{]}\) which we prove is \(O(U^{2}T\Delta)\). This allows us to get the improved dependence on \(\Delta\).

Proof of Theorem D.2.: For every \(t\), let \(X_{t}=\sum_{a}p_{t}(a)r_{t}(a)\) and \(Y_{t}=\sum_{t=1}^{T}(X_{t}-r_{t}(a_{\tau}))\). The theorem follows by showing that for every \(\delta>0\)

\[\mathbb{P}\left[\forall\tau\in[T]:Y_{\tau}\leq 4U_{\tau}\max\left\{\sqrt{ \overline{\Omega\log(T/\delta)}},\log(T/\delta)\right\}\right]\geq 1-\delta. \tag{134}\]

We are going to use Freedman's inequality [15, Theorem 1.6] on the sequence \(Y_{0}\), \(Y_{1}\), \(\ldots\) which we first prove is a martingale with respect to the the history of the rounds (we denote with \(\mathbb{E}[t]\): the expectation conditioned on the history of the rounds up to \(t\), i.e., the actions that the player and the adversary has take up to \(t\)): for every \(t\geq 1\)

\[\mathbb{E}_{t-1}\left[Y_{t}-Y_{t-1}\right]=\mathbb{E}_{t-1}\left[X_{t}-r_{t}(a_ {t})\right]=0\]

where the last inequality holds because \(a_{t}=a\) with probability \(p_{t}(a)\). This proves the martingale property. We now notice that \(|Y_{t}-Y_{t-1}|\leq U_{t}\) and that

\[\mathbb{E}_{t-1}\left[(Y_{t}-Y_{t-1})^{2}\right]\] \[= \mathbb{E}_{t-1}\left[(X_{t}-r_{t}(a_{t}))^{2}\right]\] \[\leq \mathbb{E}_{t-1}\left[(\Delta U_{t}-r_{t}(a_{t}))^{2}\right]\] \[\leq U_{t}\,\mathbb{E}_{t-1}\left[\Delta U_{t}-r_{t}(a_{t})\right]= \Delta U_{t}^{2}-U_{t}X_{t} \tag{135}\]

where we notice that in the first inequality we use the fact that \(\mathbb{E}_{t-1}\left[r_{t}(a_{t})\right]=X_{t}\) and that \(\mathbb{E}_{t-1}\left[(X_{t}-r_{t}(a_{t}))^{2}\right]\) is the conditional variance of \(r_{t}(a_{t})\), which means that \(\mathbb{E}_{t-1}\left[(c-r_{t}(a_{t}))^{2}\right]\) is minimized when \(c=\mathbb{E}_{t-1}\left[r_{t}(a_{t})\right]=X_{t}\). For the second inequality we used that \(-(1-\Delta)U_{t}\leq r_{t}(a)\leq\Delta U_{t}\). We now have that

\[\sum_{t\in[\tau]}\mathbb{E}_{t-1}\left[(Y_{t}-Y_{t-1})^{2}\right]\] \[\leq \sum_{t\in[\tau]}\left(\Delta U_{t}^{2}-U_{t}X_{t}\right)=U_{\tau }^{2}T\Delta-U_{\tau}\sum_{t\in[\tau]}X_{t}\] \[\leq U_{\tau}^{2}T\Delta-U_{\tau}\left(\max_{a\in[K]}\sum_{t=1}^{T}r_ {t}(a)-4U_{\tau}\sqrt{\overline{\Omega\log K}}\right)\] (Theorem 3.5) \[\leq U_{\tau}^{2}T\Delta+4U_{\tau}^{2}\sqrt{\overline{\Omega\log K}} \big{(}r_{t}(g)\geq 0\big{)}\] \[\leq 3U_{\tau}^{2}T\Delta\] \[\leq 3U_{\tau}^{2}T\Delta. \tag{136}\]

Now using Freedman's inequality gives us that for all \(\varepsilon>0\)

\[\mathbb{P}\left[Y_{\tau}<\varepsilon\right]\geq 1-\exp\left(-\frac{\varepsilon^{2} /2}{3U_{\tau}^{2}T\Delta+U_{\tau}\varepsilon/3}\right) \tag{137}\]

Let \(\delta>0\) such that

\[\varepsilon=U_{\tau}\max\left\{\sqrt{12}\sqrt{\overline{\Omega\log(1/\delta)}},\frac{4}{3}\log(1/\delta)\right\}. \tag{138}\]

This and a union bound over all \(\tau\) proves the lemma as long as we prove that

\[\frac{\varepsilon^{2}/2}{3U_{\tau}^{2}T\Delta+U_{\tau}\varepsilon/3}\geq\log( 1/\delta) \tag{139}\]

or equivalently

\[\varepsilon^{2}\geq 6U_{\tau}^{2}T\Delta\log(1/\delta)+\frac{2}{3}U_{\tau} \varepsilon\log(1/\delta) \tag{140}\]The above inequality is true because, by the definition of \(\delta\) in (12),

\[\varepsilon^{2}\geq 12U_{t}^{2}T\Delta\log(1/\delta)\quad\text{ and }\quad \varepsilon\geq\frac{4}{3}U_{t}\log(1/\delta)\]

Multiplying the second inequality with \(\varepsilon\) and adding them gives us the desired bound on \(\varepsilon^{2}\). 

### Deferred Proof and Algorithm of Section 3.3

As we mention at the beginning of Section 3, we focus on subsets of \(\mathcal{F}\) that approximate \(\mathcal{F}\) and have finite cardinality. We use a slightly different notation and define the sets \(\mathcal{F}_{0},\mathcal{F}_{1},\ldots,\mathcal{F}_{M}\) (for some \(M\in\mathbb{N}\)) such that for every \(i=0,\ldots,M\) it holds that

\[\forall f\in\mathcal{F},\exists f^{\prime}\in\mathcal{F}_{1}:\quad f(\varepsilon )\leq f^{\prime}(\varepsilon)\leq f(\varepsilon)+2^{-i},\;\forall\varepsilon \in[0,1]. \tag{13}\]

As we mentioned in Section 3.3, instead of directly using a function \(f_{M}\in\mathcal{F}_{M}\) and its bid \(f_{M}(v_{t})\) in round \(t\), we modify that bid, since for certain values of \(d_{t}\), \(r_{t}(f_{M})\) might be negative. This is where we use Assumption 3.1 and define

\[b_{t}^{f_{M}}=\begin{cases}f_{M}(v_{t}),&\text{if }\text{ind}_{d_{t}}r_{t} \left(f_{M}(v_{t})\right)\geq 0\\ b_{t}^{\circ},&\text{if }\text{ind}_{d_{t}}r_{t}\left(f_{M}(v_{t})\right)<0\end{cases} \tag{14}\]

where \(b_{t}^{\circ}\) is as defined in Assumption 3.1, depending on the payment function. \(b_{t}^{f_{M}}\) is never worse than \(f_{M}(v_{t})\), since \(r_{t}(b_{t}^{f_{M}})\geq r_{t}(f_{M})\) and \(r_{t}(b_{t}^{f_{M}})\geq 0\), which follow from Assumption 3.1. This guarantees that our reward is always non-negative, which as we discussed in Section 3.1 is the key to bidding according to \(\mathcal{F}_{M}\) and have \(O(2^{-M})\) error compared to using the full \(\mathcal{F}\).

We use the functions in \(\mathcal{F}_{0},\mathcal{F}_{1},\ldots,\mathcal{F}_{M}\) to create a tree. For \(i=0,\ldots,M\) the \(i\)-th level of the tree has \(|\mathcal{F}_{1}|\) nodes, each representing an \(f_{i}\in\mathcal{F}_{i}\). We connect these nodes by defining each node's parent: for every \(i=1,\ldots,M\) and \(f_{i}\in\mathcal{F}_{1}\), \(P(f_{i})\) is the parent of \(f_{i}\) such that \(P(f_{i})\in\mathcal{F}_{1-1}\) and \(\left\|f_{i}-P(f_{i-1})\right\|_{\infty}\leq 2^{i+1}\). We note that such a \(P(f_{i})\) always exists because of (13). The parent function \(P(\cdot)\) subsequently defines the children \(C(f_{i})\) and leaves \(\mathcal{L}(f_{i})\) of a node \(f_{i}\), \(i=0,\ldots,M-1\). Finally, we assume that \(|\mathcal{F}_{0}|=1\) (which does not violate (13)), making the tree have a unique root.

Using this tree, in every round \(t\) the algorithm creates a distribution of bids in the following way. First, each leaf \(f_{M}\in\mathcal{F}_{M}\) calculates the bid \(b_{t}^{f_{M}}\) as defined in Eq. (14); this bid defines a trivial bid distribution \(q_{t}^{f_{M}}(\cdot)\) which suggests the bid \(b_{t}^{f_{M}}\) with probability \(1\). On the \(i\)-th level where \(i<M\), each non-leaf node \(f_{i}\in\mathcal{F}_{i}\) uses a distribution \(p_{t}^{f_{i}}(\cdot)\) over its children \(C(f_{i})\) and the bid distribution \(q_{t}^{f_{M}}(\cdot)\) of each child \(f_{i+1}\in C(f_{i})\) to define its own bid distribution \(q_{t}^{f_{i}}(\cdot)\). This node \(f_{i}\) runs an instance of Algorithm 1 to calculate the distribution over its children \(p_{t}^{f_{i}}(\cdot)\). This recursive calculation defines the bid distribution of the root, \(q_{t}^{f_{i}}(\cdot)=q_{t}(\cdot)\), which is the output of the algorithm.

We show the full algorithm in Algorithm 2, which has one slight modification compared to the process described above: each non-leaf node considers one more bid in addition to the bids suggested by its children. This bid is the maximum bid suggested by any of its leaves. This additional bid is key to the guarantee of our algorithm since it is the action that is \(\Delta\)-good (recall Definition 3.4). This allows us to use the improved regret bound of Theorem 3.5 which is crucial: a node on the \(i\)-th level can have as many as \(\Theta(\exp(2^{i}))\) children, which, if \(\Delta\) was a constant, would lead to terrible regret bounds. Instead, we show that the additional action makes \(\Delta\approx 2^{-i}\) which makes the regret of every non-leaf node \(\tilde{O}(\sqrt{T})\).

```
0: Number of rounds \(T\), Lipschitz parameter \(L\), number of levels of tree \(M\)
0: For every \(i=0,1,\ldots,M\), let \(\mathcal{F}_{i}\) be as described in (13)
1: // Description of tree structure
1: Let \(P(f_{i})\in\mathcal{F}_{i-1}\) such that \(\left\|P(f_{i})-f_{i}\right\|_{\infty}\leq 2^{i+1}\), \(\forall i=1,\ldots,M\),
2:\(f_{i}\in\mathcal{F}_{i}\) // Parent of \(f_{i}\)
3:for\(i=M-1,M-2,\ldots,0\) and \(f_{i}\in\mathcal{F}_{i}\)do
4: Let \(C(f_{i})=\{f_{i+1}\in\mathcal{F}_{i+1}:f_{i}=P(f_{i+1})\}\) // Children of \(f_{i}\)
5: Let \(\mathcal{L}(f_{i})=\bigcup_{f_{i+1}\in\mathcal{C}(f_{i})}\mathcal{L}(f_{i+1})\) // Leaves of \(f_{i}\)
6: Let \(\mathcal{M}(f_{i})\) be an instance of Algorithm 1, \(\Delta=2^{i+1}\) and
7:\(K=\left\|C(f_{i})\right\|+1\) // Algorithm for \(f_{i}\), with actions its children and the good action
8:endfor
9:for\(t\in[T]\)do
10: Receive \(v_{t}\), \(v_{t}\), \(\psi_{t}\) and calculate \(U_{t}=\max_{r\in\mathcal{T}}\left\{\chi_{r},\psi_{r}\right\}\) // \(U_{t}\) is the upper bound of rewards
11: For every \(f_{M}\in\mathcal{F}_{M}\) calculate \(b_{t}^{f_{M}}\) as in Eq. (14) // Improve bid \(f_{M}(v_{t})\) using safe bid
12: and let \(q_{t}^{f_{M}}(\cdot)\) be the bid distribution that bids \(b_{t}^{f_{M}}\) with probability \(1\) // \(f_{M}\)'s suggestion
13:// Recursive construction of bid distributions
14:for\(i=M-1,M-2,\ldots,0\) and \(f_{i}\in\mathcal{F}_{i}\)do
15: Calculate \(g_{t}^{f_{M}}=\max_{f_{M}\in\mathcal{L}(f_{i})}p_{t}^{f_{M}}\) // \(f_{i}\)'s good bid
16: Get \(p_{t}^{f_{i}}(\cdot)\) from \(\mathcal{M}(f_{i})\) after passing \(U_{t}\) // Distribution over \(C(f_{i})\cup\{g_{t}^{f_{i}}\}\)
17: Calculate bid distribution \(q_{t}^{f_{i}}(\cdot)\) over bids \(\{p_{t}^{f_{M}}\}_{f_{M}\in\mathcal{L}(f_{i})}\)
18: where \(q_{t}^{f_{i}}\left(p_{t}^{f_{M}}\right)\) equals
19:endfor
20: Sample and use bid \(b_{t}\sim q_{t}^{f_{i}}(\cdot)=q_{t}(\cdot)\) // Sample bid
21: according to the root
22: Receive \(d_{t}\) // Get \(d_{t}\), making \(r_{t}(\cdot)\) calculable
23:// Update algorithms of non-leaf nodes
24:for\(i=0,1,\ldots,M\) and \(f\in\mathcal{F}_{i}\)do
25: Let \(r_{t}(g_{t}^{f_{i}})=r_{t}(g_{t}^{f_{i}})\) // Reward of good bid
26: Let \(\tilde{r}_{t}(f_{i+1})=\sum_{b}q_{t}^{f_{i}}(b)r_{t}(b)\), for every \(f_{i+1}\in\mathcal{C}_{t+1}\)
27:// Reward of each child of \(f_{i}\)
28: Pass above \(\tilde{r}(\cdot)\) to \(\mathcal{A}(f_{i})\) // Update \(f_{i}\)'s algorithm
29:endfor
30:endfor
31:
```

**ALGORITHM 2** Tree algorithm

We now use Algorithm 2 to prove Theorem 3.6.

Proof of Theorem 3.6.: Fix \(M=\lceil\log_{2}\sqrt{T}\rceil\). We first make the observation that Algorithm 2 is well defined: in order to calculate \(b_{t}^{f_{M}}\) for every \(f_{M}\in\mathcal{F}_{M}\) we only need knowledge of \(q_{t}\), \(\chi_{t}\), \(\psi_{t}\) and not \(d_{t}\), as explained in Assumption 3.1. We also note that the rewards\(\tilde{r}_{t}(\cdot)\) that are fed into each \(\mathcal{A}(f_{i})\) are in the range \([0,U_{t}]\) and \(U_{1}\leq U_{2}\leq\ldots\), as needed for the guarantee of Theorem 3.5. The lower bound for the rewards comes from the fact that every bid used in round \(t\) is \(b_{t}^{fat}\) for some \(f_{M}\in\mathcal{F}_{M}\), which because of (14) and Assumption 3.1 guarantees non-negative reward. The upper bound follows from the definition of \(r_{t}(\cdot)\) and the fact that values and bids are in \([0,1]\).

We now show that for every \(i<M\) and \(f_{i}\in\mathcal{F}_{i}\), the good bid, \(g_{t}^{f}\), is \(2^{+i+3}\)-good with respect to the bids used by \(f_{i}\), i.e. \(\{b_{t}^{fat}\}_{fit\in\mathcal{L}(f_{i})}\). We prove that

\[r_{t}\left(g_{t}^{f_{i}}\right)\geq r_{t}\left(b_{t}^{fat}\right)-2^{-i+3}U_{ t},\quad\forall f_{M}\in\mathcal{L}(f_{i}) \tag{15}\]

which implies \(\tilde{r}_{t}(g_{t}^{f_{i}})\geq\tilde{r}_{t}(f_{i+1})-2^{-i+3}U_{t}\) for all \(f_{i+1}\in\mathcal{C}(f_{i})\), since \(\tilde{r}_{t}(g_{t}^{f_{i}})=r_{t}(g_{t}^{f_{i}})\) and \(\tilde{r}_{t}(f_{i+1})\) is a convex combination of \(\{r_{t}(b_{t}^{fat})\}_{fit\in\mathcal{L}(f_{i})}\).

Fix \(f_{M}\in\mathcal{L}(f_{i})\). We distinguish two cases to prove (15) for this \(f_{M}\):

* If \(b_{t}^{fat}\) loses the auction in round \(t\) (\(b_{t}^{fat}<d_{t}\)), then \(r_{t}(b_{t}^{fat})=0\) and (15) follows from \(r_{t}(g_{t}^{f_{i}})\geq 0\).
* If \(b_{t}^{fat}\) wins the auction in round \(t\), then \(g_{t}^{f_{i}}\geq b_{t}^{fat}\) and therefore \(g_{t}^{f_{i}}\) also wins the auction in round \(t\). This means that \(1\left[b_{t}^{fat}\geq d_{t}\right]=1\left[g_{t}^{f_{i}}\geq d_{t}\right]=1\) and so, in order to prove (15) we have to prove that the payment of \(g_{t}^{f_{i}}\) is not more than the payment of \(b_{t}^{fat}\) plus \(2^{-i+3}\). The last statement follows from the Lesheltziness of \(p(\cdot,d_{t})\) (Assumption 3.1) and the fact that \(|g_{t}^{f_{i}}-b_{t}^{fat}|\leq 2^{-i+3}\) which follows by the following: For every \(f_{M},f_{M}^{\prime}\in\mathcal{L}(f_{i})\) it holds that \(\left\|f_{M}-f_{M}^{\prime}\right\|_{\infty}\leq 2^{-i+3}\) since \[\left\|f_{M}-f_{M}^{\prime}\right\|_{\infty}\leq\sum_{j=0}^{M-i-1}\left\|p^{ j+1}(f_{M})-p^{j}(f_{M})\right\|_{\infty}\] \[\leq\sum_{j=0}^{M-i-1}2^{-M+j+2}\leq 2^{-i+2}\]

where \(P^{j}(\cdot)\) is the application of the parent function \(P\)\(j\) times, the first inequality uses the triangle inequality, and the second uses the definition of the the parent function \(P\). The fact that \(\left\|f_{M}-f_{M}^{\prime}\right\|_{\infty}\leq 2^{-i+3}\) follows from the above using the triangle inequality and the fact that \(|g_{t}^{f_{i}}-b_{t}^{fat}|\leq 2^{-i+3}\) follows from the fact that \(g_{t}^{f_{i}}=b_{t}^{fat}\) for some \(f_{M}^{\prime}\in\mathcal{L}(f_{i})\).

Now we summarize the setting of each algorithm \(\mathcal{A}(f_{i})\), for \(f_{i}\in\mathcal{F}_{i}\), \(i<M\):

* The reward range is \([0,U_{t}]\) in round \(t\), where \(U_{t}=\max\{\chi_{f_{i}},\psi_{t}\}\).
* In every round there is an action that is \(\Delta_{t}\)-good, where \(\Delta_{t}:=2^{t+3}\).
* There are at most \(K_{t}\) actions, where \(K_{t}:=\exp(C_{\mathrm{Lip}}D2^{t+1})+1\leq\exp(C_{\mathrm{Lip}}D2^{t+2})\) where last inequality holds because \(C_{\mathrm{Lip}}L\geq 1\).

Let \(\tilde{R}_{T}(f_{i})=\sum_{t=1}^{T}\tilde{r}_{t}(f_{i})\) denote the total reward of algorithm \(\mathcal{A}(f_{i})\) and similarly define \(\tilde{R}_{T}(g_{t}^{f_{i}})\) the total reward of the good bids of \(\mathcal{A}(f_{i})\). Because of the guarantee of each algorithm (Theorem 3.5) we have that with probability \(1\):

\[\max_{f_{M}\in\mathcal{C}(f_{i})\cup\{g^{f_{i}}\}}\tilde{R}_{T}(f_{i+1})-\sum_ {f_{M+1}\in\mathcal{C}(f_{i})\cup\{g^{f_{i}}\}}p_{t}^{f_{i}}(f_{i+1})\tilde{R} _{T}(f_{i+1}) \tag{16}\] \[\leq 4U\sqrt{T\Delta_{t}\log K_{t}}\leq 23U\sqrt{C_{\mathrm{Lip}}LT}\]

We now bound the error because we bid according to the bidding functions \(\mathcal{F}_{M}\) and not \(\mathcal{F}\). For any \(f\in\mathcal{F}\) let \(f_{M}\in\mathcal{F}_{M}\) be such that \(f_{M}\geq f\) and \(\|f-f_{M}\|_{\infty}\leq 2^{-M}\). For every round \(t\) we have

\[r_{t}(f)\] \[= 1\left[f(\sigma_{t})\geq d_{t}\right]\left(\chi_{t}\sigma_{t}- \psi_{t}p(f(\sigma_{t}),d_{t})\right)\] \[\leq 1\left[f_{M}(\sigma_{t})\geq d_{t}\right]\left(\chi_{t}\sigma_{t}- \psi_{t}p(f(\sigma_{t}),d_{t})\right)^{+}\] \[\leq 1\left[f_{M}(\sigma_{t})\geq d_{t}\right]\left(\chi_{t}\psi_{t}- \psi_{t}p(f_{M}(\sigma_{t}),d_{t})\right)^{+}+U_{t}Z^{-M}\] \[= \left(r_{t}(f_{M})\right)^{+}+U_{t}Z^{-M}\leq\tilde{r}_{t}(f_{M})+U _{t}Z^{-M}\]

where in the first inequality we used that \(f_{M}\geq f\), in the second inequality that \(p(\cdot,d_{t})\) is \(1\)-Lipschitz, in the third that \(\|f-f_{M}\|_{\infty}\leq 2^{-M}\), and in the final one that \(\tilde{r}_{t}(f_{M})\geq(r_{t}(f_{M}))^{+}\); recall that \(\tilde{r}_{t}(f_{M})=r_{t}(b_{t}^{fat})\).

The above implies

\[\sup_{f\in\mathcal{F}}\sum_{t=1}^{T}r_{t}(f)\leq\max_{f_{M}\in\mathcal{F}_{M}} \tilde{R}_{t}(f_{M})+UT2^{-M} \tag{17}\]

Let \(f_{M}^{\prime}\) be a maximizer of the r.h.s. in the inequality above and for every \(i<M\), let \(f_{i}^{\prime\prime}\) be the ancestor of \(f_{M}^{\prime\prime}\) in the \(i\)-th level. Using this notation we prove

\[\sup_{f\in\mathcal{F}}\sum_{t=1}^{T}r_{t}(f)-\tilde{R}_{T}(f_{0}) \leq UT2^{-M}+\tilde{R}_{T}(f_{M}^{\prime\prime})-\tilde{R}_{t}(f_{0})\] \[= UT2^{-M}+\sum_{j=0}^{M-1}\left(\tilde{R}_{T}(f_{j+1}^{\prime\prime })-\tilde{R}_{T}(f_{j}^{\prime})\right)\] \[\leq UT2^{-M}+\sum_{j=0}^{M-1}23U\sqrt{C_{\mathrm{Lip}}LT}\] \[= UT2^{-M}+23UM\sqrt{C_{\mathrm{Lip}}LT}\]

where the first inequality holds by (17) and the second one by (16). Picking \(M=\lfloor\log_{2}\sqrt{T}\rfloor\) the above becomes

\[\sup_{f\in\mathcal{F}}\sum_{t=1}^{T}r_{t}(f)-\tilde{R}_{T}(f_{0})\leq 2U\sqrt{T}+\frac{23}{2\log 2}U\sqrt{C_{\mathrm{Lip}}LT}\log T\]

The above is the claimed regret bound since \(\tilde{r}_{t}(f_{0})=\sum_{b}q_{t}^{f_{0}}r_{t}(b)\).

### Deferred Proofs and Algorithm of Section 3.4

We first present in Algorithm 3 the reduction from standard no-regret to no interval regret. We use that to prove Theorem 3.7.

**Input:** Number of rounds \(T\), action space \(A\), algorithms \(\{\mathcal{A}_{\Pi}\}_{r\in[T]}\) over action space \(A\)

Initialize an instance \(\mathcal{A}\) of Algorithm 1 with \(\Delta=1\) and \(K=T\)

for\(t\in[T]\)do

Receive reward range \([0,U_{t}]\)

for\(r_{1}\leq t\)do

Pass \(U_{t}\) to \(\mathcal{A}_{\Pi_{t}}\) and receive \(q_{t}^{\tau_{1}}(\cdot)\) // Distribution over actions of \(\mathcal{A}_{\Pi_{t}}\)

end

Pass \(U_{t}\) to \(\mathcal{A}\) and receive \(p_{t}(\cdot)\) // Distribution over algorithms of \(\mathcal{A}\)

Calculate for every action \(a\): \(q_{t}(a)=\frac{\sum_{T\leq t}p_{t}(r_{1})q_{t}^{\eta_{1}}(a)}{\sum_{T\leq t}p_ {t}(r_{1})}\)

// Distribution of actions by sampling an algorithm

\(\mathcal{A}_{\Pi_{t}},t\leq\tau_{1}\) and then an action from \(q_{t}^{\tau_{1}}(\cdot)\)

Sample and output \(a_{t}\sim q_{t}(\cdot)\)

Receive function \(r_{t}\cdot A\rightarrow[0,U_{t}]\)

Pass \(r_{t}(\cdot)\) to \(\mathcal{A}_{\Pi}\) for \(r_{1}\leq t\) // \(\mathcal{A}_{\Pi_{t}}\) internal update

Calculate \(\tilde{r}_{t}(\tau_{1})=\tilde{r}_{a}\cdot q_{t}^{\tau_{1}}\left[r_{t}(a) \right]\) for \(r_{1}\leq t\) // Expected reward of \(q_{t}^{\tau_{1}}(\cdot)\)

Calculate \(\tilde{r}_{t}^{\theta}=\mathbb{E}_{a\sim q_{t}}\left[r_{t}(a)\right]\) // Expected reward of \(q_{t}(\cdot)\)

Update \(\mathcal{A}\) with reward \(\tilde{r}_{t}(\tau_{1})\) for \(r_{1}\leq t\) // \(\mathcal{A}\) update for active algorithms

and with reward \(\tilde{r}_{t}^{\theta}\) for \(r_{1}\leq t\) // \(\mathcal{A}\) update for inactive algorithms

end

end

**Algorithm 3** Reduction from regret to interval regret

Proof of Theorem 3.7.: We first extend the definition of \(\tilde{r}_{t}(\cdot)\) for inactive algorithms. This makes

\[\tilde{r}_{t}(\tau_{1})=\begin{cases}\mathbb{E}_{a\sim q_{t}^{\eta_{1}}}\left[ r(t)\right],&\text{if }r_{1}\leq t\\ \tilde{r}_{t}^{\theta},&\text{if }r_{1}>t\end{cases}.\]

Now we re-write \(\tilde{r}_{t}^{\theta}\), the expected reward if the action is sampled according to \(q_{t}(\cdot)\):

\[\tilde{r}_{t}^{\theta}=\mathbb{E}_{a\sim q_{t}}\left[r_{t}(a)\right]=\frac{1}{ \sum_{\tau_{1}\leq t}p_{t}(\tau_{1})\sum_{\tau_{1}\leq t}\left(p_{t}(\tau_{1}) \tilde{r}_{t}(\tau_{1})\right)}. \tag{18}\]

We notice that \(\tilde{r}_{t}(\cdot)\) has the same reward range as \(r_{t}(\cdot)\). Theorem 3.5 for algorithm \(\mathcal{A}\) gives us a regret guarantee by every round \(\tau_{2}\):

\[\max_{\tau_{1}\in[\tau_{1}]}\sum_{t\in[\tau_{2}]}\tilde{r}_{t}(\tau_{1})-\sum_{ t\in[\tau_{2}]}\sum_{\tau_{1}\in[T]}p_{t}(\tau_{1})\tilde{r}_{t}(\tau_{1})\leq 4U_{ \tau_{2}}\sqrt{T\log T}\]

which implies that for all intervals \([\tau_{1},\tau_{2}]\subseteq[T]\)

\[\sum_{t\in[\tau_{2}]}\tilde{r}_{t}(\tau_{1})-\sum_{t\in[\tau_{1}]}\sum_{\tau_{1 }\in[T]}p_{t}(\tau_{1})\tilde{r}_{t}(\tau_{1})\leq 4U_{\tau_{2}}\sqrt{T\log T} \tag{19}\]

We are going to show that (19) implies our theorem. First we prove that for every round \(t\),

\[\sum_{\tau_{1}\in[T]}p_{t}(\tau_{1})\tilde{r}_{t}(\tau_{1}) =\sum_{\tau_{1}\leq t}p_{t}(\tau_{1})\tilde{r}_{t}(\tau_{1})+\sum _{\tau_{1}>t}p_{t}(\tau_{1})\tilde{r}_{t}^{\theta}\] \[=\tilde{r}_{t}^{\theta}\sum_{\tau_{1}\leq t}p_{t}(\tau_{1})+ \tilde{r}_{t}^{\theta}\sum_{\tau_{1}>t}p_{t}(\tau_{1})\] \[=\tilde{r}_{t}^{\theta}\]

where the second equality holds by (18).

The above and the fact that \(\tilde{r}_{t}(\tau_{1})=\tilde{r}_{t}^{\theta}\) for \(r_{1}>t\) makes (19) imply that for all intervals \([\tau_{1},\tau_{2}]\subseteq[T]\)

\[\sum_{t\leq\tau_{1}}\tilde{r}_{t}(\theta)+\sum_{t\in[\tau_{1},\tau_{2}]}\tilde {r}_{t}(\tau_{1})-\sum_{t\in[\tau_{2}]}\tilde{r}_{t}(\theta)\leq 4U_{\tau_{2}}\sqrt{T\log T}\]

or equivalently that for all such intervals \([\tau_{1},\tau_{2}]\subseteq[T]\)

\[\sum_{t\in[\tau_{1},\tau_{2}]}\tilde{r}_{t}(\tau_{1})-\sum_{t\in[\tau_{1}, \tau_{2}]}\tilde{r}_{t}(\theta)\leq 4U_{\tau_{2}}\sqrt{T\log T}.\]

Given the regret bound of each algorithm \(\mathcal{A}_{\Pi}\) by round \(\tau_{2}\) the above implies that for all intervals \([\tau_{1},\tau_{2}]\subseteq[T]\)

\[\sup_{a}\sum_{t\in[\tau_{1},\tau_{2}]}r_{t}(a)-\sum_{t\in[\tau_{1},\tau_{2}]} \tilde{r}_{t}(\theta)\leq 4U_{\tau_{2}}\sqrt{T\log T}+\mathbb{Reg}_{\tau_{1}}(\tau_{2}).\]

which is the desired regret bound. 

Using a simple concentration inequality and the union bound, we prove Theorem 3.2 from Corollary 3.8.

Proof of Theorem 3.2.: Fix \(1\leq\tau_{1}<\tau_{2}\leq T\). For \(t\in[\tau_{1},\tau_{2}]\) define \(X_{t}=r_{t}(b_{t})-\sum_{b}q_{t}(b)r_{t}(b)\) and \(M_{t}=\sum_{r\in[\tau_{1},t]}X_{t}\). We notice that the sequence \(M_{t}\) is a martingale with respect to the history of the previous rounds \(\mathcal{H}_{t-1}\) (player's and adversary's decisions): for every \(t\)

\[\mathbb{E}\left[M_{t}-Mt-1\right]\left|\mathcal{H}_{t-1}\right|=\mathbb{E} \left[X_{t}\right|\mathcal{H}_{t-1}\right]=0\]

In addition we notice that \(|X_{t}|\leq U_{t}\) since \(r_{t}(b)\in[0,U_{t}]\). This allows us to use Azuma's inequality, proving that for every \(\delta\in[0,1]\), with probability at least \(1-\delta\) it holds

\[M_{t_{2}}\geq-U_{\tau_{2}}\sqrt{2(\tau_{2}-\tau_{1})\log(1/\delta)}\]

which implies that with probability at least \(1-\delta\)

\[\sum_{t=\tau_{1}}^{\tau_{2}}r_{t}(b_{t})-\sum_{t=\tau_{1}}^{\tau_{2}}\sum_{b}q_ {t}(b)r_{t}(b)\geq-U_{\tau_{2}}\sqrt{2T\log(1/\delta)}\]

Using the union bound over all \(1\leq\tau_{1}<\tau_{2}\leq T\) we get that for every \(\delta\in[0,1]\) with probability at least \(1-\delta\) it holds that for all \(1\leq\tau_{1}<\tau_{2}\leq T\)

\[\sum_{t=\tau_{1}}^{\tau_{2}}r_{t}(b_{t})-\sum_{t=\tau_{1}}^{\tau_{2}}\sum_{b}q_ {t}(b)r_{t}(b)\geq-U_{\tau_{2}}\sqrt{2T\log\frac{\binom{T}{2}}{\delta}}\]

Using Corollary 3.8 we get the theorem. 

## Appendix E Deferred Proofs of Section 4

We first prove the reduction of how to turn approximate ROI satisfaction to an exact one.

Proof of Lemma 4.2.: We first notice that since \(\mathcal{A}_{2}\) never has value less than payment and \(\mathcal{A}_{1}\) is run only when the accumulated value is at least \(1\) higher than the payment, the ROI constraint is never going to be violated. Now we need to prove the total value guarantee.

Assume that the high probability bounds of the two algorithms are true (which happens with probability at least \(1-2\delta\) for any \(\delta\) due to the union bound). Let \(r\) be the last round when algorithm \(\mathcal{A}_{2}\) is run. Let \(\mathcal{T}_{1}\) be the rounds up to \(r\) where algorithm \(\mathcal{A}_{1}\) is run and \(\mathcal{T}_{2}\) be the rounds up to \(r\) where algorithm \(\mathcal{A}_{2}\) is run; note that \(|\mathcal{T}_{2}|\) is the total number of rounds \(\mathcal{A}_{2}\) is run in total. We now have

\[\sum_{t\in[\tau_{1}]}1\left\{b_{t}\geq d_{t}\right\}\left(o_{t}-p(b_{t},d_{t}) \right)\geq Q_{\delta}(|\mathcal{T}_{2}|)-V_{\delta}(|\mathcal{T}_{1}|)\]where the inequality follows from the ROI guarantees of the two algorithms. Using the fact that on round \(\tau\) we run \(\mathcal{A}_{2}\) which upper bounds the above quantity by \(2\) we get

\[Q_{\delta}(|\mathcal{T}_{2}|)\leq 2+V_{\delta}(|\mathcal{T}_{1}|)\leq 2+V_{ \delta}(T)\]

Using the definition that \(Q_{\delta}^{-1}(V_{\delta}(T,))\) is the solution to \(Q_{\delta}(\cdot)=V_{\delta}(T)\) we get

\[|\mathcal{T}_{2}|\leq Q_{\delta}^{-1}(V_{\delta}(T))\]

This proves that the total number of rounds \(\mathcal{T}_{1}\) was run is at least \(T-Q_{\delta}^{-1}(1+V(T))\). This means that the total regret is at most

\[\mathsf{Reg}_{\delta}\Big{(}T-Q_{\delta}^{-1}(1+V(T))\Big{)}+2Q_{\delta}^{-1}( 1+V_{\delta}(T))\]

where the second term represents the rounds \(\mathcal{A}_{2}\) was run instead of \(\mathcal{A}_{1}\) and the loss because of the budget consumption of \(\mathcal{A}_{2}\), which is at most \(Q_{\delta}^{-1}(V_{\delta}(T))\) making the overall algorithm run out of budget \(Q_{\delta}^{-1}(V_{\delta}(T))\) rounds earlier, missing out on that much utility. 

We now prove Theorem 4.1.

Proof of Theorem 4.1.: As we explained in Section 4 there are algorithms that satisfy the assumptions of Lemma 4.2 with

\[\mathsf{Reg}_{\delta}(T)=V_{\delta}(T)=\frac{1}{\rho\beta}\,\mathcal{O}\Big{(} \sqrt{LT}\,\log T+\sqrt{T\,\log(1/\beta)}\Big{)}\]

and

\[Q_{\delta}(T_{2})=\beta T_{2}-\mathcal{O}\Big{(}\sqrt{LT_{2}}\log T_{2}+\sqrt{ T_{2}\log(T_{2}/\beta)}\Big{)}=\Omega(\beta T_{2})\]

where the last inequality follows from

\[\beta=\alpha\bigg{(}\sqrt{\frac{L}{T}}\,\log T+\sqrt{\frac{\log(T/\beta)}{T}} \bigg{)}\]

since otherwise the regret statement is vacuous.

The theorem follows by algebraic calculations. 

We now prove Theorem 4.3.

Proof of Theorem 4.3.: Each round the value/highest-competing-bid distribution is the following

\[(v_{t},d_{t})=\begin{cases}(1,0),&\text{w.p. }\beta\\ (\frac{1-2\beta}{1-\beta},1),&\text{w.p. }1-\beta\end{cases}\]

It is not hard to see that the LP optimum holds \(1\) every round and on expectation has reward \(\mathsf{OPT}=1-\beta\) and ROI violation of \(0\).

Let \(R_{t}\) be the cumulative "ROI amount" that any algorithm has collected in round \(t\), i.e. the total value minus the total price paid. Because the algorithm needs to satisfy the ROI constraint with probability \(1\), for all rounds it must hold that \(R_{t}\geq 0\). This means that the best any algorithm can do is to bid \(1\) in round \(t\) if \(R_{t-1}\geq\frac{\beta}{1-\beta}\) (thus guaranteeing to always win) or bid less than \(1\) if \(R_{t-1}<\frac{\beta}{1-\beta}\) (thus guaranteeing to win only if \(d_{t}=0\)).

Let \(N_{t}\) be the number of rounds the algorithm bid less than \(1\) and missed an item with \(d_{t}=1\). The regret of the algorithm is \(N_{T}\frac{1-2\beta}{1-\beta}\) so we need to calculate \(\mathbb{E}\left[N_{T}\right]\).

Let \(R_{t}^{\prime}\) be the cumulative "ROI amount" if the algorithm won every item. We notice that

\[R_{t}-R_{t}^{\prime}=\frac{\beta}{1-\beta}N_{t}\]

since the difference does not change from round to round if the algorithm wins the item but increases if the the algorithms misses a high value item. Since \(R_{t}\geq 0\) and it holds that

\[N_{T}=\min_{t}N_{t}\geq-\frac{1-\beta}{\beta}\min_{t}R_{t}^{\prime}\]

We now note that \(R_{t}^{\prime}\) is an unbiased random walk, since

\[R_{t}^{\prime}-R_{t-1}^{\prime}=\begin{cases}1,&\text{w.p. }\beta\\ \frac{\beta}{1-\beta},&\text{w.p. }1-\beta\end{cases}\]

and \(\mathbb{E}[R_{t}^{\prime}-R_{t-1}^{\prime}]=0\) and \(\text{Var}\big{[}R_{t}^{\prime}-R_{t-1}^{\prime}\big{]}=\frac{\beta}{1-\beta}\). We will show that

\[\mathbb{E}\left[\min_{t}R_{t}^{\prime}\right]\leq-\sqrt{T\frac{\beta}{2\pi(1- \beta)}},\text{ which in turn implies that}\]

which implies that the expected regret of the algorithm wrt to the LP optimum is

\[(1-2\beta)\sqrt{T\frac{1}{2\pi\beta(1-\beta)}}\]

which proves the theorem.

We now prove that \(\mathbb{E}\left[\min_{t}R_{t}^{\prime}\right]\leq-\sqrt{T\frac{\beta}{2\pi(1- \beta)}}s\). We have that

\[\mathbb{E}\left[\min_{t=0,\dots,T}R_{t}^{\prime}\right] =\mathbb{E}\left[\min_{t=0,\dots,T}\min\left\{0,R_{t}^{\prime} \right\}\right]\] \[\leq\mathbb{E}\left[\min\left\{0,R_{T}^{\prime}\right\}\right]\] \[=-\frac{1}{2}\mathbb{E}\left[\left|R_{T}^{\prime}\right|\right]\] \[\approx-\frac{1}{2}\mathbb{E}\left[\left|\left(Q\sqrt{T\frac{ \beta}{1-\beta}}\right)\right|\right|\right]\] \[=-\frac{1}{2}\sqrt{T\frac{\beta}{1-\beta}\sqrt{\frac{2}{\pi}}}\]

where the second equality holds because \(\mathbb{E}\left[R_{T}^{\prime}\right]=\mathbb{E}\left[\max\{0,R_{T}^{\prime} \}\right]+\mathbb{E}\left[\min\{0,R_{T}^{\prime}\}\right]=0\) and \(\mathbb{E}\left[R_{T}^{\prime}\right]=\mathbb{E}\left[\max\{0,R_{T}^{\prime} \}\right]-\mathbb{E}\left[\min\{0,R_{T}^{\prime}\}\right]\), the next one by the Central Limit Theorem for large \(T\), and the last equality uses standard facts of \(G(0,\sqrt{T\frac{\beta}{1-\beta}})\), the \(0\)-mean Gaussian with standard deviation \(\sqrt{T\frac{\beta}{1-\beta}}\).

We note that instead of using the central limit theorem one could explicitly use the fact that \(R_{T}^{\prime}=M\big{(}1+\frac{\beta}{1-\beta}\big{)}-T\frac{\beta}{1-\beta}\) where \(M\) is a binomial random variable with \(T\) tries and probability of success \(b\) to calculate

\[\mathbb{E}\left[\big{|}R_{T}^{\prime}\big{|}\right] =\] \[= \sqrt{\frac{2\beta}{\pi(1-\beta)}}\sqrt{T}-\mathcal{O}\bigg{(}\frac {1}{\sqrt{T}}\bigg{)}\]

which leads to a similar bound.

Deferred Proofs and Algorithm of Section 5

We first present in Appendix F.1 the deferred proof of Theorem F.4, the lower bound on the regret for budgeted first-price auctions with only bandit information. Next we present an upper bound on the regret, in Appendix F.2.

### Deferred Proof for Regret Lower Bound

In this section we prove Theorem 5.1.

Proof of Theorem 5.1.: Fix the player's budget, \(\rho=1/4\). Define the following

* \(K=2T^{1/3}\) for some positive \(c\) that will be defined later.
* \(\epsilon=\frac{1}{3K}\).
* For \(i=0,1,2,\ldots,K\) let \(d_{i}=1/3+i\epsilon\). Note \(d_{0}=1/3\) and \(d_{K}=2/3\).

We will consider that \(d_{i}\) can only be \(0\), \(1\), or one of the values in \(\{d_{i}\}_{i=0,\ldots,K-1}\); note that even though we defined the value \(d_{K}\), \(d_{i}\) cannot take that value. We will consider different distributions that can generate \(d_{i}\), each specified by a CDF. We first define the base CDF-like distribution:

\[F_{\text{b}}(x)=\frac{3}{4-x} \tag{20}\]

We use \(\text{P}_{\text{b}}\) and \(\text{E}_{\text{b}}\) to denote the probability and expectation when \(d_{i}\) is generated by \(F_{\text{b}}\), which means that for any \(x=0,d_{0},d_{1},\ldots,d_{K-1}\), \(\text{P}_{\text{b}}\left[d_{i}\leq x\right]=F_{\text{b}}(x)\) and \(\text{P}_{\text{b}}\left[d_{i}\leq 1\right]=1\). More precisely, even though we do not use the description of the probability density function, we have

\[\text{P}_{\text{b}}\left[d_{i}=x\right]=\begin{cases}F_{\text{b}}(0)=3/4&,\text { if }x=0\\ F_{\text{b}}(d_{0})-F_{\text{b}}(0)=3/44&,\text{ if }x=d_{0}=1/3\\ F_{\text{b}}(d_{i})-F_{\text{b}}(d_{i-1})=\Theta(\epsilon)&,\text{ if }x=d_{i},i\in[K-1]\\ 1-F_{\text{b}}(d_{K-1})&,\text{ if }x=1\\ 0&,\text{ otherwise}\end{cases}.\]

We note that \(F_{\text{b}}(d_{K-1})<F_{\text{b}}(d_{K})=1/10\); this guarantees that our distribution is well defined.

Given the base CDF \(F_{\text{b}}\) we now define a different CDF-like function, \(F_{j}\) for every \(j=0,1,\ldots,K-1\). The distribution of \(d_{i}\) associated with \(F_{j}\) is going to be identical to the one associated with \(F_{\text{b}}\), except for the probability of

\[F_{j}(x)=\begin{cases}F_{\text{b}}(x),&\text{ if }x\notin[d_{j},d_{j+1})\\ F_{\text{b}}(d_{j+1}),&\text{ if }x\in[d_{j},d_{j+1})\end{cases} \tag{21}\]

We use \(P_{j}\) and \(E_{j}\) to denote the probability and expectation when \(d_{i}\) is generated by \(F_{j}\). This means that \(\mathbb{P}_{j}\left[d_{i}\leq x\right]=\mathbb{P}_{\text{b}}\left[d_{i}\leq x\right]\) for all \(x=0,d_{0},d_{1},\ldots,d_{j-1},d_{j+1},\ldots,d_{K-1},1\) and \(\mathbb{P}_{j}\left[d_{i}\leq d_{j}\right]=\mathbb{P}_{\text{b}}\left[d_{i}\leq d _{j+1}\right]\).

We are going to assume that before round \(t\), \(j\) is picked adversarially. We now prove what a lower bound on the value of the optimal solution under \(F_{j}\).

**Lemma F.1**.: _When \(d_{i}\) is generated according to \(F_{j}\) for any \(j=0,\ldots,K-1\) as explained above, then the value of the optimal solution is_

\[\mathsf{OPT}_{j}\geq\frac{13}{16}T+\frac{3}{32}T\epsilon\]

Proof.: We consider the strategy that bids \(d_{j}\) with probability \(\frac{11-3(i+1)\epsilon}{12(1+3i\epsilon)}\) and bids \(0\) otherwise. The expected per round payment of this strategy is

\[\frac{11-3(i+1)\epsilon}{12(1+3i\epsilon)}d_{j}F_{j}(d_{j})=\frac {11-3(i+1)\epsilon}{12(1+3i\epsilon)}\left(\frac{1}{3}+i\epsilon\right)\frac{3 }{4-(\frac{1}{3}+(i+1)\epsilon)}\] \[=\frac{1}{4}\]

which means it satisfies the budget constraint in expectation, since \(\rho=1/4\). The expected per-round value of this solution is

\[\frac{11-3(i+1)\epsilon}{12(1+3i\epsilon)}F_{j}(d_{j})+\bigg{(}1- \frac{11-3(i+1)\epsilon}{12(1+3i\epsilon)}\bigg{)}F_{j}(0)\] \[=\frac{11-3(i+1)\epsilon}{12(1+3i\epsilon)}\frac{3}{4-(\frac{1}{3 }+(i+1)\epsilon)}+\bigg{(}1-\frac{11-3(i+1)\epsilon}{12(1+3i\epsilon)}\bigg{)} \frac{3}{4}\] \[=\frac{13}{16}+\frac{3\epsilon}{16(1+3i\epsilon)}\geq\frac{13}{16 }+\frac{3\epsilon}{16(1+3K\epsilon)}\]

where the last inequality follows from \(i\leq K\). Substituting \(\epsilon=\frac{1}{3K}\) we get the lemma. 

In round \(t\) the player bids \(b_{t}\) and observes \(x_{t}\in\{0,1\}\) (if she won or not). We are going to assume that the player runs some deterministic algorithm, which comes w.l.o.g. since the environment is randomized. This means that the player's bid \(b_{t}\) in round \(t\) is a deterministic function of \(x_{1},\ldots,x_{t-1}\). We denote \(x=x_{1:T}\). We also assume w.l.o.g. that the player's bids are always one of \(0,d_{0},\ldots,d_{K-1},1\), since any other bid is suboptimal. Let \(N_{i}\) be the total number of times the player bids \(d_{i}\) and \(M_{i}\) be the total number of times the player bids \(d_{i}\) and wins. We prove the following.

**Lemma F.2**.: _Let \(g:\{0,1\}^{T}\rightarrow\mathbb{R}\) be a function defined on \(x\). Then, for every \(j\), it holds that_

\[\left|\mathbb{E}_{j}\,g(x)-\mathbb{E}_{\text{b}}\,g(x)\right|\leq\left(\max_{x }|g(x)|\right)\epsilon\sqrt{2\,\mathbb{E}_{\text{b}}\left[M_{j}\right]}\]

Proof.: For any \(j\) and \(i\) we have

\[\left|\mathbb{E}_{j}\,f(x)-\mathbb{E}_{\text{b}}\,f(x)\right| =\left|\sum_{x\in\{0,1\}^{T}}f(x)\left(\mathbb{P}_{j}\left[x \right]-\mathbb{P}_{\text{b}}\left[x\right]\right)\right|\] \[\leq\left(\max_{x}|f(x)|\right)\sum_{x\in\{0,1\}^{T}}\left| \mathbb{P}_{j}\left[x\right]-\mathbb{P}_{\text{b}}\left[x\right]\right|\] \[=\left(\max_{x}|f(x)|\right)\left|\mu_{j}-\mu_{0}\right|_{1} \tag{199}\]

where \(\mu_{j}\) and \(\mu_{0}\) are the probability distributions on \(x\) given that \(d_{t}\) is sampled from \(F_{j}\) and \(F_{\text{b}}\), respectively. Using the properties of the KL divergence, we have that

\[\left|\mu_{j}-\mu_{0}\right|_{1}^{2}\leq 2D_{\text{KL}}\left(\mu_{\text{b}} \left|\mu_{j}\right)\right.\]

Now fix some sequence \(x\). Conditioned on \(x_{1:t-1}\), \(b_{t}\) is deterministic. In addition, if \(b_{t}\neq d_{j}\) it holds

\[\mu_{\text{b}}(x_{t}=1|x_{1:t-1})=\mu_{j}(x_{t}=1|x_{1:t-1})\]

which, if \(b_{t}\neq d_{j}\), implies

\[D_{\text{KL}}\left(\mu_{\text{b}}(x_{t}=|x_{1:t-1})\right)\left|\mu_{j}(x_{t}= |x_{1:t-1})\right.=0\]When \(b_{t}=d_{j}\) it holds that

\[\mu_{0}(x_{t}=1|x_{1:t-1})=F_{\rm b}(d_{j})=\frac{3}{4-(d_{0}+j\epsilon)}\]

\[\mu_{j}(x_{t}=1|x_{1:t-1})=F_{j}(d_{j})=F_{\rm b}(d_{j+1})=\frac{3}{4-(d_{0}+( j+1)\epsilon)}\]

which implies that if \(b_{t}=d_{j}\)

\[D_{\rm KL}\left(\mu_{0}(x_{t}=\cdot|x_{1:t-1})\left\|\mu_{j}(x_{ t}=\cdot|x_{1:t-1})\right)\right.\] \[= D_{\rm KL}\left(\text{Bern}(F_{\rm b}(d_{j}))\left\|\text{Bern}(F _{\rm b}(d_{j+1}))\right)\right.\] \[= F_{\rm b}(d_{j})\log\frac{F_{\rm b}(d_{j})}{F_{\rm b}(d_{j+1})} +(1-F_{\rm b}(d_{j}))\log\frac{1-F_{\rm b}(d_{j})}{1-F_{\rm b}(d_{j+1})}\] \[\leq F_{\rm b}(d_{j})\left(\frac{F_{\rm b}(d_{j})}{F_{\rm b}(d_{j+1} )}-1\right)+(1-F_{\rm b}(d_{j}))\left(\frac{1-F_{\rm b}(d_{j})}{1-F_{\rm b}(d _{j+1})}-1\right)\] \[= 3,\frac{\epsilon^{2}}{(1-d_{j})(4-d_{j+1})^{2}}\ \leq\ \frac{81}{100}\epsilon^{2}\]

where \(\text{Bern}(p)\) is a Bernoulli random variable with mean \(p\), the first inequality follows by using \(\log x\leq x-1\) for all \(x>0\) and the last inequality follows by using \(d_{j}\), \(d_{j+1}\leq 2/3\). This implies that for any \(b_{t}\),

\[D_{\rm KL}\left(\mu_{0}(x_{t}=\cdot|x_{1:t-1})\left\|\mu_{j}(x_{ t}=\cdot|x_{1:t-1})\right.\right)\leq\frac{81}{100}\epsilon^{2}\left[b_{t}(x)=d_{j}\right]\]

Taking expectations over \(x\sim\mu_{0}\) and adding over \(t\) we get

\[D_{\rm KL}\left(\mu_{0}\left\|\mu_{j}\right\|\mu_{j}\right)\leq\frac{81}{100} \epsilon^{2}\operatorname{E}_{\rm b}\left[N_{j}\right]\leq\frac{99}{100} \epsilon^{2}\operatorname{E}_{\rm b}\left[M_{j}\right]\leq\epsilon^{2} \operatorname{E}_{\rm b}\left[M_{j}\right]\]

where the last inequality follows from the fact that \(\operatorname{E}_{\rm b}\left[M_{j}\right]=F_{\rm b}(d_{j})\operatorname{E}_{ \rm b}\left[N_{j}\right]\) and \(F_{\rm b}(d_{j})\geq 9/11\). Combining this with what we proved before we get

\[\left\|\operatorname{E}_{\rm b}f(x)-\operatorname{E}_{\rm b}f(x)\right\|\leq \left(\max_{x}\left|f(x)\right|\right)\epsilon\sqrt{2\operatorname{E}_{\rm b} \left[M_{j}\right]}\]

which proves the claim. 

Now note that since the agent's payment is at least \(d_{j}M_{j}\), it must always hold \(d_{j}M_{j}\leq T\rho\), implying \(M_{j}\leq T\rho/d_{j}\leq\frac{3}{4}T\). Applying Lemma F.2 for \(f(x)=M_{j}\) we get that for any \(j\)

\[\operatorname{E}_{j}M_{j}\leq\operatorname{E}_{\rm b}M_{j}+\frac{3\sqrt{2}}{4 }T\epsilon\sqrt{\operatorname{E}_{\rm b}M_{j}}\]

We notice that because it must hold \(\sum_{j}d_{j}M_{j}\leq T\rho\), there must be some \(j\) such that \(\operatorname{E}_{\rm b}M_{j}\leq\frac{3}{4K}T\). Fix that \(j\) and use that in the above inequality, making the above inequality for that \(j\)

\[\operatorname{E}_{j}M_{j}\leq\frac{3T}{4K}+\frac{3\sqrt{2}}{4}T\epsilon\sqrt{ \frac{3T}{4K}}=\frac{3}{4}\frac{T}{K}+\frac{3\sqrt{6}\ T^{3/2}\epsilon}{8}\]

Recalling that \(K=2T^{1/3}\) and \(\epsilon=1/(3K)\) we get

\[\operatorname{E}_{j}M_{j}\leq\frac{3}{8}T^{2/3}+\frac{\sqrt{3}}{16}T\]

Since \(\operatorname{E}_{j}M_{j}=F_{j}(d_{j})\operatorname{E}_{j}N_{j}\) and \(F_{j}(d_{j})=\frac{3}{4-d_{j+1}}\geq 9/11\) (which follows from \(d_{j+1}\geq 1/3\)) the above becomes

\[\operatorname{E}_{j}N_{j}\leq\frac{33}{56}T^{2/3}+\frac{11\sqrt{3}}{144}T:=UT \tag{22}\]

Using the above upper bound on \(\operatorname{E}_{j}N_{j}\), we are going to upper bound the value the player can earn in the \(j\)-th instance. To do that, we are going to consider that the player knows that she is playing against the distribution of \(\operatorname{P}_{j}\left[\cdot\right]\) but is restricted by (22). In addition, we consider that the player can satisfy the budget constraint in expectation, since this only increases the budget she can earn. Given this setting, the player's value is upper bounded by the following LP, where \(n_{i}\) represents the expected number of times the player bids \(d_{i}\), \(t_{0}\) is the expected number of times the player bids \(0\), and \(\ell_{1}\) is the expected number of times the player bids \(1\):

\[\max_{d_{i},\ell_{1},n_{0},\ldots,n_{K-1}} F_{j}(0)\ell_{0}+\ell_{1}+\sum_{i=0}^{K-1}F_{j}(d_{i})n_{i}\] \[\ell_{1}+\sum_{i=0}^{K-1}d_{i}F_{j}(d_{i})n_{i}\leq\frac{T}{4}\] \[\ell_{0}+\ell_{1}+\sum_{i=0}^{K-1}n_{i}\leq T\] \[n_{j}\leq UT\]

We upper bound the value of the above using its dual:

\[\min_{\lambda,\mu,\nu} \lambda\frac{T}{4}+\mu T+\nu UT\] \[\mu\geq F_{j}(0)\] \[\lambda+\mu\geq 1\] \[\lambda d_{i}F_{j}(d_{i})+\mu\geq F_{j}(d_{i}),\quad\forall i\neq j\] \[\lambda d_{j}F_{j}(d_{j})+\mu+\nu\geq F_{j}(d_{j})\]

We notice that the solution \(\lambda=1/4\), \(\mu=3/4\), \(\nu=\epsilon/4\) is feasible (which follows from some simple but lengthy algebra). This means that the player's expected reward is at most

\[T\left(\frac{13}{16}+\frac{U\epsilon}{4}\right)\]

Using Lemma F.1 we get that the expected regret it at least

\[\operatorname{Reg} \geq \frac{3}{32}T\epsilon-\frac{\epsilon}{4}\left(\frac{33}{56}T^{2/3 }+\frac{11\sqrt{3}}{144}T\right)\] \[= \frac{1}{64}T^{2/3}-\frac{11}{448}T^{1/3}-\frac{11\sqrt{3}}{3456}T^{ 2/3}\qquad\left(\epsilon=\frac{T^{-1/3}}{6}\right)\] \[\approx 0.01T^{2/3}-0.02T^{1/3}\]

which is \(\Omega(T^{2/3})\), as promised. 

### Regret Upper bound for Bandit information

In this section we present and prove an upper bound on the regret when learning with bandit feedback. Our regret bound is in the order of \(\tilde{O}(T^{3/4})\), which is slightly higher than the lower bound in Theorem 5.1. It remains to be interesting open question to achieve the optimal \(\tilde{O}(T^{2/3})\) regret bound.

**Theorem F.3**.: _There is a polynomial time algorithm for value or quasi-linear utility maximization under Assumption 3.1 such that, for every \(\delta>0\) with probability at least \(1-\delta\) its regret and ROI violation is at most_

\[\frac{1}{\beta\rho}\Omega\left(\left(L^{1/4}T^{3/4}+T^{1/2}L^{1/2}\right)\log \frac{LT}{\delta}\right).\]

_In addition, if \(\beta=\Omega\left(T^{-1/4\epsilon}(L^{1/4}+L^{1/2}T^{-1/4})\sqrt{\log(TL/d)}\right)\) for some constant \(\epsilon>0\), the above can be turned in an algorithm with exact ROI satisfaction regret that is \(1/\beta\) times worse._

Theorem F.3 is based on the following theorem, Theorem F.4, which offers an algorithm with \(\tilde{O}(\sqrt{TK})\) high probability interval regret bound for the Lagrangian.

```
**ALGORITHM 4**No interval regret algorithm for bandit information with for time-varying ranges

To use this algorithm, we discretize the interval \([0,1]\) into \(N\) values \(\{i/N\}_{i\in[N]}\) and \(K\) bids \(\{j/K\}_{j\in[K]}\). Then for each \(i\in[N]\) we run an instance of the algorithm of Theorem F.4, which is used for round \(t\) when \(v_{t}\leq i/N<v_{t}+1/N\) and outputs a bid \(j_{t}/K\). As in Section 3, we do not directly use the bid suggested by the algorithms, since it might lead to a negative reward in \(r_{t}(\cdot)\); we use the safe bid of Assumption 3.1 when it is possible to get a negative reward. This roughly leads to a total regret bound of \(\tilde{\mathcal{O}}(\sqrt{TNK})\), along with a discretization error of \(\mathcal{O}(T(L/N+1/K))\). Appropriately picking \(N,K\) gives the regret bound.

Theorem F.4 provides the \(U_{\tau_{t}}\tilde{\mathcal{O}}(\sqrt{TK})\) interval regret bound for every interval \([\tau_{1},\tau_{2}]\). In algorithm used is similar to the EXP-SIX algorithm that (Hardt et al., 2017) uses to bound the regret of the best sequence of actions and that (Ghosh and Hosh, 2017) use to bound the interval regret. However, our algorithm is not the same as EXP-SIX: we modify the algorithm to get a regret bound that scales linearly with \(U_{\tau_{2}}\) instead of \(U_{\tau_{2}}^{2}\) as shown in (Ghosh and Hosh, 2017).

**Theorem F.4**.: _Suppose there are \(K\) actions and the reward of round \(t\), \(r_{t}:[K]\rightarrow[0,U_{t}]\), is picked by an adaptive adversary. There exists an algorithm that generates actions \(a_{1},\ldots,a_{T}\) such that for every \(\delta>0\), with probability at least \(1-\delta\), we have that for all \(1\leq\tau_{1}<\tau_{2}\leq T\)_

\[\max_{a\in[K]}\sum_{t=\tau_{1}}^{\tau_{2}}r_{t}(a)-\sum_{t=\tau_{1}}^{\tau_{2} }r_{t}(a)\leq\mathcal{O}\bigg{(}U_{\tau_{2}}\cdot\left(\sqrt{TK}+K\right)\log \frac{TK}{\delta}\bigg{)}\]

We first present the algorithm for Theorem F.4 which low interval regret. The algorithm is a modification of the algorithm of (Hardt et al., 2017) so that it works for time-varying ranges. We present the algorithm in Algorithm 4.
```
1:Input: Number of rounds \(T\), number of actions \(K\)
2:Set \(\sigma=\frac{1}{\delta}\), \(\xi=\frac{2}{\sqrt{TK}}\), \(\theta=\frac{1}{\sqrt{TK}}\)
3:Initialize for each action \(w_{1}(a)=1\quad\forall a\in[K]\)
4:for\(t\in[T]\)do
5: Calculate \(p_{t}(a)=\frac{w_{2}(a)}{\sum_{a^{\prime}}w(a)}\)
6: Sample and play \(a_{t}\sim p_{t}(\cdot)\)
7: Receive \(\ell_{t}(a)\)
8: Calculate \(\tilde{\ell}_{t}(a)=\frac{a_{t}(a)}{p_{t}(a)+\xi}1\left[a=a_{t}\right]\) for all \(a\in[K]\)
9: Receive loss range \([0,U_{t+1}]\) and calculate \(\eta_{t+1}=\frac{\theta}{U_{t+1}}\)
10: Calculate \(w_{t+1}(a)=\)
11:\((1-\sigma)w_{t}(a)\exp(-\eta_{t+1}\tilde{\ell}_{t}(a))+\xi\sum_{a^{\prime}}w_ {t}(a^{\prime})\exp(-\eta_{t+1}\tilde{\ell}_{t}(a^{\prime}))\)
12:end ```
**ALGORITHM 4**No interval regret algorithm for bandit information with for time-varying ranges

We now prove Theorem F.4.
```
1:Input: Number of rounds \(T\), number of actions \(K\)
2:Set \(\sigma=\frac{1}{\delta}\), \(\xi=\frac{2}{\sqrt{TK}}\), \(\theta=\frac{1}{\sqrt{TK}}\)
3:Initialize for each action \(w_{1}(a)=1\quad\forall a\in[K]\)
4:for\(t\in[T]\)do
5: Calculate \(p_{t}(a)=\frac{w_{2}(a)}{\sum_{a^{\prime}}w(a)}\)
6: Sample and play \(a_{t}\sim p_{t}(\cdot)\)
7: Receive \(\ell_{t}(a)\)
8: Calculate \(\tilde{\ell}_{t}(a)=\frac{a_{t}(a)}{p_{t}(a)+\xi}1\left[a=a_{t}\right]\) for all \(a\in[K]\)
9: Receive loss range \([0,U_{t+1}]\) and calculate \(\eta_{t+1}=\frac{\theta}{U_{t+1}}\)
10: Calculate \(w_{t+1}(a)=\)
11:\((1-\sigma)w_{t}(a)\exp(-\eta_{t+1}\tilde{\ell}_{t}(a))+\xi\sum_{a^{\prime}}w_ {t}(a^{\prime})\exp(-\eta_{t+1}\tilde{\ell}_{t}(a^{\prime}))\)

[MISSING_PAGE_POST]

[MISSING_PAGE_EMPTY:20]

probability at least \(1-\delta\), for every \(\tau_{1}\leq\tau_{2}\)

\[\max_{j\in[K]}\sum_{t\in\mathcal{T}_{1}(\tau_{1},\tau_{2}]}\tilde{r}_ {t}^{i}(j)-\sum_{t\in\mathcal{T}_{1}(\tau_{1},\tau_{2}]}\tilde{r}_{t}^{i}(j_{t})\] \[\leq U_{\tau_{2}}O\left(\left(\sqrt{T_{1}K}+K\right)\log\frac{T_{1 }K}{\delta}\right)\]

We do the above process for every \(i\) and use it as an algorithm10. Doing this for every \(i\) and using the union bound we get that for every \(\delta>0\) with probability at least \(1-\delta\), for every \(i\in[N]\) and \(\tau_{1}\leq\tau_{2}\)

Footnote 10: For rounds where \(\omega_{t}=0\) we have not defined an algorithm; in those rounds we can had \(0\) (which is optimal) to guarantee no regret; for simplicity however we assume that \(\omega_{t}>0\).

\[\max_{j\in[K]}\sum_{t\in\mathcal{T}_{1}(\tau_{1},\tau_{2}]}\tilde{ r}_{t}^{i_{t}}(j)-\sum_{t\in\mathcal{T}_{1}(\tau_{1},\tau_{2}]}\tilde{r}_{t}^{i_{t}}(j_{t})\] \[\leq U_{\tau_{2}}O\left(\left(\sqrt{T_{1}K}+K\right)\log\frac{T_{1 }KN}{\delta}\right)\] \[= U_{\tau_{2}}O\left(\left(\sqrt{T_{1}\frac{T^{1/4}}{L^{1/4}}}+ \frac{T^{1/4}}{L^{1/4}}\right)\log\frac{LT}{\delta}\right)\hskip 56.905512pt \begin{pmatrix}N=\lfloor L^{1/4}/L^{1/4}\rfloor\\ K=\lceil L^{1/4}/L^{1/4}\rfloor\end{pmatrix} \tag{30}\]

Fix \(\tau_{1}\), \(\tau_{2}\). We want to use (30) to upper bound

\[\sup_{f\in\mathcal{T}}\sum_{f=\tau_{1}}^{\tau_{2}}r_{t}(f)-\sum_{f=\tau_{1}}^{ \tau_{2}}r_{t}(\tilde{b}_{t,j_{t}})\]

Fix \(f\in\mathcal{F}\) and define \(j_{1},\ldots,j_{N}\in[K]\) such that \(\tilde{b}_{j_{t}}\) (recall \(\tilde{b}_{j}=j/K\)) is the bid that is above \(f(\omega)\) for every \(v\in(v_{i-1},v_{i}]\) and as small as possible, i.e., for all \(i\in[N]\) it holds

\[\tilde{b}_{j_{t}}=\left[K\sup_{v\in(\tilde{v}_{i-1},\tilde{v}_{i})}f(v)\right]/K\]

We notice that for all \(i\in[N]\) and \(v\in(v_{i-1},v_{i}]\): \(\tilde{b}_{j_{t}}\in[f(v),f(v)+\frac{L}{N}+\frac{1}{K})\) (by \(L\)-Lipschitz of \(f\)). We now have

\[r_{t}(f) = \mathbb{1}\left[f(v_{t})\geq d_{t}\right]\left(\chi_{t}v_{t}-\psi _{t}p\big{(}f(v_{t}),d_{t}\big{)}\right)\] \[\leq \mathbb{1}\left[\tilde{b}_{j_{t}}\geq d_{t}\right]\left(\chi_{t} \tilde{v}_{i_{t}}-\psi_{t}p\bigg{(}\tilde{b}_{j_{t}}-\frac{L}{N}-\frac{1}{K}.d _{t}\bigg{)}\right)^{+}\] \[\leq \mathbb{1}\left[\tilde{b}_{j_{t}}\geq d_{t}\right]\left(\chi_{t} \tilde{v}_{i_{t}}-\psi_{t}p\bigg{(}\tilde{b}_{j_{t}},d_{t}\bigg{)}\right)^{+} \psi_{t}\bigg{(}\frac{L}{N}+\frac{1}{K}\bigg{)}\] \[\leq \tilde{r}_{t}^{i_{t}}(j_{t})+\psi_{t}\bigg{(}\frac{L}{N}+\frac{1} {K}\bigg{)}\]

where the last inequality follows because the bid that corresponds to \(j_{t}\) in round \(t\) is the safe bid of that round whose reward is non-negative and at least as good as \(\tilde{b}_{j_{t}}\)'s. Summing the above over \(t\in[\tau_{1},\tau_{2}]\) and taking a sup over \(f\) and a max over \(j_{1},\ldots,j_{N}\) we get

\[\sup_{f\in\mathcal{F}}\sum_{t=\tau_{1}}^{\tau_{2}}r_{t}(f)\] \[\leq \max_{j_{t}\sim\max_{j_{t}}}\sum_{t\in\mathcal{T}_{1}}\tilde{r}_ {t}^{i_{t}}(j_{t})+U_{\tau_{2}}\mathbb{T}\bigg{(}\frac{L}{N}+\frac{1}{K} \bigg{)}\] \[= \sum_{i\in[N]}\max_{j\in[K]}\sum_{t\in\mathcal{T}_{1}(\tau_{1}, \tau_{2}]}\tilde{r}_{t}^{i_{t}}(j)+U_{\tau_{2}}T^{\frac{1}{2}}L^{\frac{1}{4}} \begin{pmatrix}N\geq L^{1/4}\tau_{1}^{\frac{1}{4}}\\ K\geq T^{1/4}\end{pmatrix}\] \[\leq \sum_{t\in[\tau_{1},\tau_{2}]}\tilde{r}_{t}^{i_{t}}(j_{t})\] \[+\sum_{i\in[N]}U_{\tau_{2}}O\left(\left(\sqrt{T_{1}\frac{T^{1}}{L ^{\frac{1}{4}}}}+\frac{T^{\frac{1}{4}}}{L^{\frac{1}{4}}}\right)\log\frac{LT}{ \delta}\right)\] \[+U_{\tau_{2}}T^{\frac{1}{2}}L^{\frac{1}{4}}\] (by (30)) \[= \sum_{t\in[\tau_{1},\tau_{2}]}\tilde{r}_{t}^{i_{t}}(j_{t})\] \[+U_{\tau_{2}}O\left(\left(\mathbb{1}^{L}\frac{T^{\frac{1}{4}}}{L ^{\frac{1}{4}}}+(TL)^{\frac{1}{4}}\right)\log\frac{LT}{\delta}+T^{\frac{1}{4}}L ^{\frac{1}{4}}\right)\] \[= \sum_{t\in[\tau_{1},\tau_{2}]}\tilde{r}_{t}^{i_{t}}(j_{t})\] \[+U_{\tau_{2}}O\left(\left(\mathbb{1}^{L}\frac{T^{\frac{1}{4}}}{L ^{\frac{1}{4}}}+(TL)^{\frac{1}{4}}\right)\log\frac{LT}{\delta}\right) \tag{31}\]

where the second to last inequality we substituted \(N=\lfloor L^{3/4}T^{1/4}\rfloor\) and we used the fact that \(\sum_{i}\sqrt{T_{i}}\leq\sqrt{NT}\) since \(\mathbb{1}_{i}T_{i}=T\). By noticing that \(\tilde{r}_{t}^{i}(j_{t})\leq r_{t}(\tilde{b}_{j_{t},t})+U_{t}(1/K+1/N)\) and bounding \(T(1/N+1/K)=O(L^{1/4}T^{3/4})\) we get the high probability interval regret bound on the rewards \(r_{t}(\cdot)\). Using Theorem 2.1 we get the desired result.

The tight satisfaction of the ROI constraint follows by using Lemma 4.2. The first algorithm is the one we describe above. The second algorithm is the primal algorithm described above with \(\chi_{t}=\psi_{t}=1\), which achieves \(Q(\tau,\delta)=\tau\beta-O((L^{1/4}x^{3/4}+\tau^{1/2}L^{1/2})\log\frac{LT}{ \delta})\).

## Appendix G Polynomial time algorithm for full information feedback

In this section, we present a polynomial time algorithm that has regret guarantees matching the ones in Theorems 3.3 and 4.1, when the value and the highest competing bid are independent.

**Theorem G.1**.: _Assume that the value \(v_{t}\) and highest competing bid \(d_{t}\) are sampled independently. There is a polynomial time algorithm with full information feedback for value or quasi-linear utility maximization when the payment function satisfies Assumption 3.1 such that, for every \(\delta>0\) with probability at least \(1-\delta\), the algorithm has regret against the class of \(L\)-Lipschitz continuous functions and ROI violation at most \(\frac{1}{\beta\beta}O(\sqrt{T\log(TL/\delta)})\). In addition, if \(\beta=\Omega\big{(}T^{-1/2+\epsilon}\log(TL/\delta)\big{)}\) for some constant \(\epsilon>0\), it can be turned into an algorithm with exact ROI satisfaction and with regret that is \(1/\beta\) times worse._

The algorithm for the above theorem is similar to the one in Theorem F.3: discretize the values and run a separate online learning algorithm for each of those values. The important difference is that, instead of running/updating each algorithm only when we observe its corresponding value, we run every algorithm in every round \(t\), even if the value \(o_{t}\) is completely different than the one the algorithm represents. This allows each algorithm to run for many more rounds, making it 'learn' faster. The assumption that \(o_{t}\) and \(d_{t}\) are independent is crucial since the \(d_{t}\) of every round can be used for every algorithm.

We note that the above technique cannot directly be used for bandit information, since we do not observe \(d_{t}\) and therefore the observed reward is dependent on the bidding. [5] use this technique, along with the assumption that the value distribution is known, to get regret bounds that would imply to \(\tilde{O}\big{(}T^{2/3}\big{)}\) regret for bandit information. However, their bounds are only in expectation and for the entire horizon, not every interval. We leave as future work extending these techniques to get regret matching the one in Theorem 5.1.

Proof.: We use a scheme similar to the one used in the proof of Theorem F.3. Fix \(N=\lfloor LT\rfloor\) and \(K=T\). Let \(\tilde{v}_{i}=i/N\) for \(i\in[N]\) and \(\tilde{b}_{j}=j/N\) for \(j\in[N]\). For every \(i\in[N]\) define \(r^{i}_{t}:[K]\rightarrow\mathbb{R}_{\geq 0}\) such that

\[r^{i}_{t}(j)=1\left[\tilde{b}_{i,j}\geq d_{t}\right]\left(\chi_{t}\tilde{v}_{ i}-\psi_{t}p(\tilde{b}_{t,j},d_{t})\right)\]

where \(\tilde{b}_{t,j}\) is either \(\tilde{b}_{j}\) or the safe bid (Assumption 3.1) of \(\tilde{r}^{i}_{t}(\cdot)\).

Define for every round \(i_{t}=\lceil\tau_{t}N\rceil\) (i.e. the \(i\) that corresponds to the value that is closest and above to \(v_{t}\)). For every \(i\in[N]\) let \(\mathcal{A}_{t}\) be an instance of the algorithm in Theorem 3.5 for \(\Delta=1\) with \(K\) actions that has also been modified to have low interval regret, using Theorem 3.7. Unlike the bandit setting, here we run \(\mathcal{A}_{t}\) even in rounds where \(i_{t}\neq i\). In every round \(\mathcal{A}_{t}\) outputs an action \(j^{i}_{t}\in[K]\) which corresponds to the bid \(\tilde{b}_{t,j^{i}_{t}}\). The reward of the \(j\)-th action in round \(t\) is \(\tilde{r}^{i}_{t}(j)\). The bid we use in round \(t\) is the one suggested by algorithm \(\mathcal{A}_{t_{t}}\), \(\tilde{b}_{t,j^{i}_{t^{i}_{t}}}\).

Using Theorems 3.5 and 3.7, an application of Azuma's inequality and a union bound over \(i\), we have that with probability at least \(1-\delta\) for every \(1\leq\tau_{1}<\tau_{2}\leq T\) and every \(i\in[N]\):

\[\max_{j\in[K]}\sum_{l=\tau_{1}}^{\tau_{2}}r^{i}_{t}(j)-\sum_{l=\tau_{1}}^{\tau_ {2}}r^{i}_{t}(j^{i}_{t})\leq U_{\mathrm{r}2}O\Big{(}\sqrt{T\log(TKN/\delta)} \Big{)} \tag{32}\]

Fix \(\tau_{1}\), \(\tau_{2}\). To get our regret bound we have to upper bound

\[\sup_{f\in\mathcal{F}}\sum_{l=\tau_{1}}^{\tau_{2}}r_{t}(f)-\sum_{l=\tau_{1}}^{ \tau_{2}}\sum_{i}1\left[t_{l}=i\right]r_{t}(\tilde{b}_{t,j^{i}_{t}})\]

Fix \(f\in\mathcal{F}\) and define \(j_{1},\ldots,j_{N}\in[K]\) such that for all \(i\in[N]\)

\[\tilde{b}_{j_{i}}=\left\lceil K\sup_{\mathrm{o}\in(\tilde{b}_{i-1},\tilde{b}_ {i})}f(\mathrm{o})\right\rceil/K\]

We notice that for all \(i\in[N]\) and \(o\in(v_{i-1},v_{i}]\): \(\tilde{b}_{j_{i}}\in[f(o),f(o)+\frac{k}{N}+\frac{1}{K})\) (by \(L\)-Lipschitz of \(f\)). We now have

\[r_{t}(f) = 1\left[f(v_{t})\geq d_{t}\right]\left(\chi_{t}\tilde{v}_{i}-\psi _{t}p(f(v_{t}),d_{t})\right)\] \[\leq 1\left[\tilde{b}_{j_{i_{t}}}\geq d_{t}\right]\left(\chi_{t} \tilde{v}_{i_{t}}-\psi_{t}p\left(\tilde{b}_{j_{t}}-\frac{L}{N}-\frac{1}{K},d_ {t}\right)\right)^{+}\] \[\leq 1\left[\tilde{b}_{j_{i_{t}}}\geq d_{t}\right]\left(\chi_{t} \tilde{v}_{i_{t}}-\psi_{t}p\left(\tilde{b}_{j_{t}},d_{t}\right)\right)^{+}+ \psi_{t}\left(\frac{L}{N}+\frac{1}{K}\right)\] \[\leq \tilde{r}^{i_{t}}_{t}(i_{t})+\psi_{t}\left(\frac{L}{N}+\frac{1}{ K}\right)\]

where in the second to last inequality we used the fact that \(p(\cdot,d)\) is 1-Lipschitz and in the last inequality follows because the bid that corresponds to \(j_{i_{t}}\) in round \(t\) is the safe bid of that round whose reward is non-negative and at least as good as \(\tilde{b}_{j_{t}}\)'s. Summing the above over \(t\in[\tau_{1},\tau_{2}]\) and taking a sup over \(f\) and a max over \(j_{1},\ldots,j_{N}\) we get

\[\sup_{f\in\mathcal{F}}\sum_{l=\tau_{1}}^{\tau_{2}}r(f) \leq \max_{j_{1},\ldots,j_{N}}\sum_{l=\tau_{1}}^{\tau_{2}}r^{i_{t}}_{t }(j_{t})+U_{\tau_{2}}T\left(\frac{L}{N}+\frac{1}{K}\right) \tag{33}\] \[\leq \sum_{i\in[N]}\max_{j^{\prime}\in[K]}\sum_{l=\tau_{1}}^{\tau_{2} }1\left[t_{l}=i\right]\tilde{r}^{i}_{t}(j^{\prime})+2U_{\tau_{2}}\]

where in the last inequality we used that \(N\geq\lfloor TL\rfloor\) and \(K=T\).

We now prove a high probability bound on \(\sum_{l=\tau_{1}}^{\tau_{2}}1\left[t_{l}=i\right]\tilde{r}^{i}_{t}(j^{\prime})\), for a fixed \(j^{*}\). Using Azuma's inequality we can prove that for all \(\delta>0\) with probability at least \(1-\delta\),

\[\sum_{l=\tau_{1}}^{\tau_{2}}1\left[t_{l}=i\right]\tilde{r}^{i}_{t}(j^{*})\leq \sum_{l=\tau_{2}}^{\tau_{2}}\mathbb{P}\left[t_{l}=i\right]\tilde{r}^{i}_{t}(j^ {*})+O\Big{(}U_{\tau_{2}}\sqrt{T\log(1/\delta)}\Big{)}\]

Note that to use Azuma's inequality we have to rely on the fact that \(i_{t}\) and \(\tilde{r}^{i}_{t}(j^{*})\) are independent conditioned on the history of rounds up to \(t-1\), since \(\tilde{r}^{i}_{t}(j^{*})\) does not depend on \(o_{t}\) but only \(d_{t}\).

By letting \(\mathbb{P}\left[t_{l}=i\right]=q_{i}\) and taking a union bound over all \(j_{e}\in[K]\) and all \(i\in[N]\), we have that with probability at least \(1-\delta\) for all \(j^{*}_{t}\), \(t_{l}\), and \(\tau_{1}\), we have

\[\sum_{l=\tau_{1}}^{\tau_{2}}1\left[t_{l}=i\right]\tilde{r}^{i}_{t}(j^{*})\leq \sum_{l=\tau_{1}}^{\tau_{2}}q_{i}\tilde{r}^{i}_{t}(j^{*})+O\Big{(}U_{\tau_{ 2}}\sqrt{T\log(TKN/\delta)}\Big{)}\]

Substituting \(N\) and \(K\), the above makes (33)

\[\sup_{f\in\mathcal{F}}\sum_{l=\tau_{1}}^{\tau_{2}}r_{t}(f)\ \leq \sum_{i\in[N]}q_{i}\max_{j^{\prime}\in[K]}\sum_{l=\tau_{1}}^{\tau_{2}}r^{i}_{t }(j^{*})+O\Big{(}U_{\tau_{2}}\sqrt{T\log(TL/\delta)}\Big{)} \tag{34}\]

We now bound \(q_{i}\max_{j^{\prime}}\sum_{l=\tau_{1}}^{\tau_{2}}r^{i}_{t}(j^{*})\) for some \(i\). By (32) we have

\[q_{i}\max_{j^{\prime}}\sum_{l=\tau_{1}}^{\tau_{2}}r^{i}_{t}(j^{*}) \leq q_{i}\sum_{l=\tau_{1}}^{\tau_{2}}r^{i}_{t}(j^{*}_{t})+q_{i}U_{\tau_{ 2}}O\Big{(}\sqrt{T\log(TL/\delta)}\Big{)}\] \[\leq \sum_{l=\tau_{1}}^{\tau_{2}}1\left[t_{l}=i\right]\tilde{r}^{i}_{t} (j^{*}_{t})+q_{i}U_{\tau_{2}}O\Big{(}\sqrt{T\log(TKN/\delta)}\Big{)}\] \[+q_{i}U_{\tau_{2}}O\Big{(}\sqrt{T\log(TL/\delta)}\Big{)}\] \[= \sum_{l=\tau_{1}}^{\tau_{2}}1\left[t_{l}=i\right]\tilde{r}^{i}_{t}(j^{ \prime}_{t})+q_{i}U_{\tau_{2}}O\Big{(}\sqrt{T\log(TL/\delta)}\Big{)}\]

where in the last inequality we used Azuma's inequality, which heavily depends on the fact that \(i_{t}\) and \(\tilde{r}^{i}_{t}(j^{\prime}_{t})\) are independent 

[MISSING_PAGE_FAIL:23]