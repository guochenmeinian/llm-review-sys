# LogSpecT: Feasible Graph Learning Model from Stationary Signals with Recovery Guarantees

 Shangyuan Liu

The Chinese University of Hong Kong

shangyuanliu@link.cuhk.edu.hk &Linglingzhi Zhu

The Chinese University of Hong Kong

llzzhu@se.cuhk.edu.hk &Anthony Man-Cho So

The Chinese University of Hong Kong

manchoso@se.cuhk.edu.hk

###### Abstract

Graph learning from signals is a core task in graph signal processing (GSP). A significant subclass of graph signals called the stationary graph signals that broadens the concept of stationarity of data defined on regular domains to signals on graphs is gaining increasing popularity in the GSP community [10, 20, 25]. The most commonly used model to learn graphs from these stationary signals is _SpecT_[31], which forms the foundation for nearly all the subsequent, more advanced models. Despite its strengths, the practical formulation of the model, known as _rSpecT_, has been identified to be susceptible to the choice of hyperparameters. More critically, it may suffer from infeasibility as an optimization problem. In this paper, we introduce the first condition that ensures the infeasibility of rSpecT and design a novel model called _LogSpecT_, along with its practical formulation _rLogSpecT_ to overcome this issue. Contrary to rSpecT, our novel practical model rLogSpecT is always feasible. Furthermore, we provide recovery guarantees of rLogSpecT from modern optimization tools related to epi-convergence, which could be of independent interest and significant for various learning problems. To demonstrate the practical advantages of rLogSpecT, a highly efficient algorithm based on the linearized alternating direction method of multipliers (L-ADMM) that allows closed-form solutions for each subproblem is proposed with convergence guarantees. Extensive numerical results on both synthetic and real networks not only corroborate the stability of our proposed methods, but also highlight their comparable and even superior performance than existing models.

## 1 Introduction

Learning with graphs has proved its relevance in many practical areas, such as life science [36, 37], signal processing [13, 14, 38, 39], and financial engineering [1, 21], to just name a few. However, there are many cases that the graphs are not readily prepared and only the data closely related to the graphs can be observed. Hence, a core task in Graph Signal Processing (GSP) is to learn the underlying graph topology based on the interplay between data and graphs [22].

Among these commonly used data properties, an assumption that is referred to as the graph signal stationarity [10] is gaining attention [30, 20, 25]. Graph signal stationarity is the extension of the notion of stationarity from the regular space/time domain to the irregular domain (i.e. graphs). The latter is a traditional hypothesis in signal processing to capture a special type of statistical relationship between samples of a temporal signal. It is a cornerstone of many signal processing methods. Although the graph signal stationarity property is proposed more from a theoretic end, thetechniques based on this idealistic assumption pave the way for the development of the following more advanced and applicable models [35, 34]. Furthermore, several works have shown that some real datasets can be approximately viewed as stationary or partially explained by the stationarity assumption. For instance, [25] revealed that the well-known USPS dataset and the CMUPIE set of cropped faces exhibit near stationarity. [10] found that certain weather data could be explained by stationary graph signals. Additionally, [31] highlighted the relevance of the stationarity assumption in learning protein structure. [43] applied the stationary assumption to US Senate Roll Calls and achieved good performance.

The predominant methods to process stationary graph signals and learn topology under the stationarity assumption are the spectral-template-based models. The start of this line of works is [31], which proposed a vanilla model called _SpecT_[31] to learn graphs from stationary graph signals. Many extensions of this fundamental model have been made since then to accommodate the more realistic and complicated settings, e.g. joint inference of multiple graphs [32, 27], learning with streaming graph signals [33], learning with hidden nodes [4], learning from both smooth and stationary graph signals [5]. In practice, SpecT requires the unknown data covariance matrix. Hence, a robust formulation called _rSpecT_ is proposed [31], which replaces the unknown covariance matrix with its estimate and introduces a hyperparameter to reflect the estimation inaccuracy. Unfortunately, the model is sensitive to this hyperparameter and improper tuning of it may jeopardize the model performance or lead to model infeasibility.

The current approach to selecting an appropriate value is heuristic. It finds the smallest one that allows for a feasible solution. This method has two shortcomings. On one hand, It is computationally costly. The smallest value is the exact solution to a second-order conic programming, which is solved approximately with computational methods. Any approximate solution that is smaller than the exact one will make rSpecT infeasible. On the other hand, such an approach lacks theoretical guarantees as how the smallest value behaves as the number of observations increases is unknown. This issue makes the existing recovery guarantees invalid. To the best of our knowledge, only a few works have focused on how to understand the performance of the robust formulation rSpecT. [24] empirically showed that the feasible set of the robust formulation approximates the original one as more samples are collected. [23] provided the first recovery guarantee for rSpecT. Their work exploits the fact that the objective is the \(\ell_{1}\)-norm and the constraints are linear [44]. However, the conditions needed in their work are not only restrictive but also hard to check, as they require the full rankness of a large-scale matrix related to random samples. Another model [34] tries to circumvent the model infeasibility issue by turning a constraint into a penalty. However, this approach introduces another hyperparameter that is neither easy to tune nor amenable to theoretical analysis. Also, this hyperparameter should go to infinity heuristically when more and more samples are collected, which may exacerbate model instability.

In this paper, we propose an alternative formulation of SpecT that can bypass the aforementioned issues. We first provide a condition that ensures the infeasibility of the fundamental model rSpecT. Then, we propose a novel formulation called _LogSpecT_ and its practical formulation _rLogSpecT_ based on the spectral template and incorporating a log barrier. The inclusion of a log barrier as a regularizer on the degrees is inspired by its extensive application in graph learning from smooth graph signals [15, 16, 19, 47] and the discussion in [7] emphasizing that restricting the degrees to preclude isolated nodes is crucial to learning graphs with special structures. It is worth noting that the approach in [7], which directly imposes constraints, may exacerbate the infeasibility issue in our problem. Although rLogSpecT still requires a parameter to reflect the estimation error of the unknown covariance matrix, it no longer suffers from the infeasibility issue associated with the improper choice of the parameter. Furthermore, we provide the decaying rate of the parameter that can guarantee the recovery of rLogSpecT. This not only aids in the parameter tuning, but also establishes a connection between rLogSpecT and LogSpecT through non-asymptotic recovery analysis. These theoretical results are derived using contemporary optimization tools related to epi-convergence [29]. Unlike the current guarantees for rSpecT that are built on an \(\ell_{1}\) analysis model [44], our approach based on epi-convergence is not confined to the specific types of optimization problems (e.g. the combination of the \(\ell_{1}\)-norm and log barrier in the objective function) and consequently admits broader applications that can be of independent interest.

In the algorithmic aspect, we design a linearized alternating direction method of multipliers (L-ADMM) to solve rLogSpecT. The subproblems of L-ADMM admit closed-form solutions and can be implemented efficiently due to the linearization technique. Also, we provide the convergence result of the proposed method. Finally, we conduct extensive experiments on both synthetic data and real networks. Notably, the infeasibility issue of rSpecT frequently occurs in experiments on real networks, thereby emphasizing its practical significance beyond theoretical concerns. Furthermore, we observe that even when the classical models are set to be feasible, our novel models (LogSpecT and rLogSpecT) exhibit improved accuracy and stability, particularly in the case of synthetic BA graphs. This empirically illustrates that although our models are initially proposed to circumvent the infeasibility issue, they are superior alternatives to classical methods in the general cases.

### Notation

The notation we use in this paper is standard. We use \([m]\) to denote the set \(\{1,2,\ldots,m\}\) for any positive integer \(m\). Let the Euclidean space of all real matrices be equipped with the inner product \(\langle\bm{X},\bm{Y}\rangle\coloneqq\mathrm{tr}(\bm{X}^{\top}\bm{Y})\) for any matrices \(\bm{X},\bm{Y}\) and denote the induced Frobenius norm by \(\|\cdot\|_{F}\) (or \(\|\cdot\|_{2}\) when the argument is a vector). For any \(\bm{X}\in\mathbb{R}^{m\times n}\), we use \(\mathbb{B}(\bm{X},\rho)\) to denote the closed Euclidean ball centering at \(\bm{X}\) with radius \(\rho\). Let \(\|\cdot\|\) be the operator norm, \(\|\bm{X}\|_{1,1}\coloneqq\sum_{i,j}|\bm{X}_{ij}|\), \(\|\bm{X}\|_{\infty,\infty}\coloneqq\max_{i,j}|\bm{X}_{ij}|\), and let \(\mathrm{diag}(\bm{X})\) be vector formed by the diagonal entries of \(\bm{X}\). For a column vector \(\bm{x}\), let \(\mathrm{Diag}(\bm{x})\) be the diagonal matrix whose diagonal elements are given by \(\bm{x}\). Given a closed and convex set \(\mathcal{C}\), we use \(\Pi_{\mathcal{C}}(\bm{w})\coloneqq\mathrm{argmin}_{\bm{w}\in\mathcal{C}}\|\bm{ v}-\bm{w}\|_{2}\) to denote the projection of the point \(\bm{w}\) onto the set \(\mathcal{C}\). We use \(\bm{1}\) (resp. \(\bm{0}\)) to denote an all-one vector (resp. all-zero vector) whose dimension will be clear from the context. For a set \(\mathcal{S}\) and any real number \(\alpha\), let \(\alpha\mathcal{S}\coloneqq\{\alpha x\mid x\in\mathcal{S}\}\), \(\mathcal{S}\bm{1}\coloneqq\{\bm{x}\bm{1}\mid\bm{x}\in\mathcal{S}\}\), and \(\iota_{\mathcal{S}}(\cdot)\) be the indicator function of \(\mathcal{S}\). For two non-empty and compact sets \(\mathcal{X}\) and \(\mathcal{Y}\), the distance between them is defined as \(\text{dist}(\mathcal{X},\mathcal{Y})\coloneqq\sup_{\bm{X}\in\mathcal{X}}\inf_{ \bm{Y}\in\mathcal{Y}}\|\bm{X}-\bm{Y}\|_{F}\)1.

Footnote 1: It reduces to the classic point-to-set (resp. point-to-point) distance when \(\mathcal{Y}\) (resp. \(\mathcal{X}\) and \(\mathcal{Y}\)) is a singleton.

## 2 Preliminaries

Let \(\mathcal{G}=(\mathcal{V},\mathcal{E})\) be a graph, where \(\mathcal{V}=[m]\) is the set of nodes and \(\mathcal{E}\subset\mathcal{V}\times\mathcal{V}\) is the set of edges. Let \(\bm{S}\) be the weight matrix associated with the graph \(\mathcal{G}\), where \(\bm{S}_{ij}\) represents the weight of the edge between nodes \(i\) and \(j\). In this paper, we consider undirected graphs without self-loops. The set of adjacency matrices for such graphs is \(\mathcal{S}\coloneqq\{\bm{S}\in\mathbb{R}^{m\times m}\mid\bm{S}=\bm{S}^{\top},~{}\mathrm{diag}(\bm{S})=\bm{0},~{}\bm{S}\geq\bm{0}\}\). Suppose that the adjacency matrix \(\bm{S}\) admits the eigen-decomposition \(\bm{S}=\bm{U}\bm{\Lambda}\bm{U}^{\top}\), where \(\bm{\Lambda}\) is a diagonal matrix and \(\bm{U}\) is an orthogonal matrix. A graph filter is a linear operator \(h:\mathbb{R}^{m\times m}\to\mathbb{R}^{m\times m}\) defined as \(h(\bm{S})=\sum_{i=0}^{p}h_{i}\bm{S}^{i}=\bm{U}\left(\sum_{i=0}^{p}h_{i}\bm{ \Lambda}^{i}\right)\bm{U}^{\top}\), where \(p>0\) is the order of the graph filter and \(\{h_{i}\}_{i=0}^{p}\) are the filter coefficients. According to the convention, we have \(\bm{S}^{0}=\bm{I}\).

A graph signal can be represented by a vector \(\bm{x}\in\mathbb{R}^{m}\), where the \(i\)-th element \(x_{i}\) is the signal value associated with node \(i\). A signal \(\bm{x}\) is said to be stationary if it is generated from

\[\bm{x}=h(\bm{S})\bm{w},\] (1)

where \(\bm{w}\) satisfies \(\mathbb{E}[\bm{w}]=\bm{0}\) and \(\mathbb{E}[\bm{w}^{\top}\bm{w}]=\bm{I}\). Simple calculations give that the covariance matrix of \(\bm{x}\), which is denoted by \(\bm{C}_{\infty}\), shares the same eigenvectors with \(\bm{S}\). Hence, we have the constraint

\[\bm{C}_{\infty}\bm{S}=\bm{S}\bm{C}_{\infty}.\] (2)

Based on this, the following fundamental model SpecT is proposed to learn graphs from stationary signals without the knowledge of graph filters [31; 34]:

\[\min_{\bm{S}}~{}\|\bm{S}\|_{1,1},~{}\text{s.t.}~{}~{}~{}\bm{C}_{\infty}\bm{S}= \bm{S}\bm{C}_{\infty},~{}\bm{S}\in\mathcal{S}\cap\left\{\bm{S}\in\mathbb{R}^{m \times m}:\sum\nolimits_{j=1}^{m}\bm{S}_{1j}=1\right\},\] (SpecT)

where the constraint \(\sum_{j=1}^{m}\bm{S}_{1j}=1\) is used to preclude the trivial optimal solution \(\bm{S}^{*}=\bm{0}\). When \(\bm{C}_{\infty}\) is unknown and only \(n\) i.i.d samples of \(\{\bm{x}_{i}\}\) from (1) are available, the robust formulation, which is based on the estimate \(\bm{C}_{n}\) of \(\bm{C}_{\infty}\) and called _rSpecT_, is used:

\[\min_{\bm{S}}~{}\|\bm{S}\|_{1,1},~{}\text{s.t.}~{}~{}~{}\|\bm{C}_{n}\bm{S}-\bm{ S}\bm{C}_{n}\|_{F}\leq\delta,~{}\bm{S}\in\mathcal{S}\cap\left\{\bm{S}\in\mathbb{R}^{m \times m}:\sum\nolimits_{j=1}^{m}\bm{S}_{1j}=1\right\}.\] (rSpecT)

For this robust formulation, the recovery guarantee is studied empirically in [24] and theoretically in [23] under some conditions that are restrictive and hard to check.

## 3 Infeasibility of rSpecT and Novel Models

Even though rSpecT has gained much popularity, there are few works that discuss the choice of the hyperparameter \(\delta\) and how it affects the model feasibility. In this section, we present a condition under which rSpecT is always infeasible and then propose an alternative formulation. To motivate our results, let us consider the following 2-node example.

**Example 3.1**.: _Consider a simple graph containing 2 nodes. Then, the set given by the second constraint of rSpecT is \(\mathcal{S}\cap\{\bm{S}\in\mathbb{R}^{m\times m}:\sum_{j=1}^{m}\bm{S}_{1j}=1 \}=[0,1;1,0]\), which is a singleton. Suppose that the sample covariance matrix is \(\bm{C}_{n}=[h_{11},h_{12};h_{12},h_{22}]\). Then, the constraint \(\|\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}\|_{F}\leq\delta\) is reduced to \(2(h_{11}-h_{22})^{2}\leq\delta^{2}\). Hence, when \(h_{11}\neq h_{22}\) and \(\delta<\sqrt{2}\left|h_{11}-h_{22}\right|\), rSpecT has no feasible solution._

Before delving into the general case, we introduce a linear operator \(\bm{B}\in\mathbb{R}^{m^{2}\times m(m-1)/2}\) that maps the vector \(\bm{x}\in\mathbb{R}_{+}^{(m-1)m/2}\) to the vectorization of an adjacency matrix \(\bm{S}\in\mathcal{S}\) of a simple, undirected graph:

\[\left(\bm{B}\bm{x}\right)_{m(i-1)+j}=\begin{cases}x_{i-j+\frac{i-1}{2}(2m-j)},&\text{if}\;\;i>j,\\ 0,&\text{if}\;\;i=j,\\ x_{j-i+\frac{i-1}{2}(2m-i)},&\text{if}\;\;i<j,\end{cases}\] (3)

where \(i,j\in[m]\). We also define \(\bm{A}_{n}\coloneqq\bm{I}\otimes\bm{C}_{n}-\bm{C}_{n}\otimes\bm{I}\in\mathbb{ R}^{m^{2}\times m^{2}}\), so that the first constraint of rSpecT can be rewritten as \(\|\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}\|_{F}\leq\delta\iff\left\|\bm{A}_{n}\text {vec}(\bm{S})\right\|_{2}\leq\delta\), where \(\text{vec}(\cdot)\) is the vectorization operator. We now give a condition that guarantees the infeasibility of rSpecT.

**Theorem 3.2**.: _Consider the linear system_

\[\bm{A}_{n}\bm{B}\bm{y}=\bm{0},\;\;\bm{y}\leq\bm{0},\;\;\sum\nolimits_{i=1}^{ m-1}y_{i}\neq\bm{0},\] (4)

_where \(\bm{y}\in\mathbb{R}^{\frac{m(m-1)}{2}}\). If (4) has no feasible solution, then there exists a \(\bar{\delta}_{n}>0\) such that rSpecT is infeasible for all \(\delta_{n}\in[0,\bar{\delta}_{n})\)._

**Remark 3.3**.: _From Theorem 3.2 we can infer that for any fixed \(n\), the linear system (4) has no solution when \(\bm{A}_{n}\bm{B}\) has full column rank (e.g., Example 3.1). This leads to the infeasibility of rSpecT with \(\delta_{n}\in[0,\bar{\delta}_{n})\). As remarked in [31], one should tackle the feasibility issue of rSpecT with caution._

The failure of rSpecT (SpecT) lies in the existence of the constraint \((\bm{S}\bm{1})_{1}=1\), which is used to preclude the trivial solution \(\bm{S}^{*}=\bm{0}\). For this reason, we resort to an alternative approach to bypassing the trivial solution. When the graphs are assumed to have no isolated node, the log barrier is commonly applied [15]. In these cases, the zero solution is naturally precluded. This observation inspires us to propose the following novel formulation, which combines the log barrier with the spectral template (2) to learn graphs without isolated nodes from stationary signals:

\[\begin{split}&\min_{\bm{S}}\;\|\bm{S}\|_{1,1}-\alpha\bm{1}^{ \top}\log(\bm{S}\bm{1})\\ &\text{s.t.}\;\;\;\bm{S}\in\mathcal{S},\;\;\bm{S}\bm{C}_{\infty}= \bm{C}_{\infty}\bm{S},\end{split}\] (LogSpecT)

where \(\|\cdot\|_{1,1}\) is a convex relaxation of \(\|\cdot\|_{0}\) promoting graph sparsity, \(\bm{1}^{\top}\log(\bm{S}\bm{1})\) is the penalty to guarantee the nonexistence of isolated nodes, and \(\alpha\) is the tuning parameter. As can be seen from the following proposition, the hyperparameter \(\alpha\) in LogSpecT only affects the scale of edge weights instead of the graph connectivity structure.

**Proposition 3.4**.: _Let \(\operatorname{Opt}(\bm{C},\alpha)\) be the optimal solution set of LogSpecT with input covariance matrix \(\bm{C}\) and parameter \(\alpha>0\). Then, for any \(\gamma>0\), it follows that_

\[\operatorname{Opt}(\bm{C},\alpha)=\gamma\operatorname{Opt}(\bm{C},\alpha/ \gamma)=\alpha\operatorname{Opt}(\bm{C},1).\]

**Remark 3.5**.: _The result of Proposition 3.4 spares us from tuning the hyperparameter \(\alpha\) when we are coping with binary graphs. In fact, certain normalization will eliminate the impact of different values of \(\alpha\) and preserve the connectivity information. Hence, we may simply set \(\alpha=1\) in implementation._

Note that the true covariance matrix \(\bm{C}_{\infty}\) in LogSpecT is usually unknown and an estimate \(\bm{C}_{n}\) from \(n\) i.i.d samples is available. To tackle the estimation inaccuracy, we introduce the following robustformulation:

\[\begin{split}\min_{\bm{S}}&\|\bm{S}\|_{1,1}-\alpha\bm{1}^ {\top}\log(\bm{S}\bm{1})\\ \text{s.t.}&\bm{S}\in\mathcal{S},\ \ \|\bm{SC}_{n}-\bm{C}_{ n}\bm{S}\|_{F}^{2}\leq\delta_{n}^{2}.\end{split}\] (rLogSpecT)

This formulation substitutes \(\bm{C}_{\infty}\) with \(\bm{C}_{n}\) and relaxes the equality constraint to an inequality constraint with a tolerance threshold \(\delta_{n}\). Contrary to rSpecT, we prove that rLogSpecT is always feasible.

**Proposition 3.6**.: _For \(\delta_{n}>0\) and \(\bm{C}_{n}\) with any fixed \(n\), rLogSpecT always has a nontrivial feasible solution._

## 4 Recovery Guarantee of rLogSpecT

In this section, we investigate the non-asymptotic behavior of rLogSpecT when more and more i.i.d samples are collected. For the sake of brevity, we denote \(f\coloneqq\|\cdot\|_{1,1}-\alpha\bm{1}^{\top}\log\left(\cdot\bm{1}\right)\). The theoretical recovery guarantee is as follows:

**Theorem 4.1**.: _If \(\delta_{n}\geq 2\rho\|\bm{C}_{n}-\bm{C}_{\infty}\|\) with given \(\rho\coloneqq\max\{f^{*},\alpha m,\alpha m(\log\alpha-1)\}\), then there exist constants \(c_{1},\tilde{c}_{1},\tilde{c}_{2}>0\) such that_

\[\text{(i)}\ |f_{n}^{*}-f^{*}|\leq\varepsilon_{n}\text{; \ \ \ (ii)}\ \mathrm{dist}(\mathcal{S}^{n,*},\mathcal{S}_{2 \varepsilon_{n}}^{*})\leq\varepsilon_{n}\text{; \ \ \ (iii)}\ \mathrm{dist}(\mathcal{S}^{n,*}\bm{1},\mathcal{S}_{0}^{*}\bm{1})\leq \tilde{c}_{1}\varepsilon_{n}+\tilde{c}_{2}\sqrt{\varepsilon_{n}}\text{,}\]

_where \(\varepsilon_{n}\coloneqq c_{1}(\delta_{n}+2\rho\|\bm{C}_{n}-\bm{C}_{\infty}\|)\), \(\mathcal{S}^{n,*}\) is the optimal solution set of rLogSpecT, \(f^{*}\) (resp. \(f_{n}^{*}\)) denotes the optimal value of LogSpecT (resp. rLogSpecT), and_

\[\mathcal{S}_{\varepsilon}^{*}\coloneqq\{\bm{S}\in\mathcal{S}\mid\bm{SC}_{ \infty}=\bm{C}_{\infty}\bm{S},\ f(\bm{S})\leq f^{*}+\varepsilon\}\]

_is the \(\varepsilon\)-suboptimal solution set of LogSpecT._

**Remark 4.2**.: (i) _Compared with the conclusion_ (ii) _in the Theorem 4.1, the conclusion_ (iii) _links the optimal solution sets of rLogSpecT and LogSpecT instead of the sub-optimal solutions._

(ii) _A byproduct of the proof (see Appendix E.2 for details) shows that the optimal node degree vector set (\(\mathcal{S}_{0}^{*}\bm{1}\)) is a singleton. However, there is no guarantee of the uniqueness of \(\bm{S}^{*}\) itself. We will discuss the impact of such non-uniqueness on model performance in Section 6.4._

**Remark 4.3**.: _The proof of Theorem 4.1 relies on two important optimization concepts: Epi-convergence and truncated Hausdorff distance. Epi-convergence is closely related to the asymptotic solution behavior of approximate minimization problems, and the truncated Hausdorff distance is used to characterize the epi-convergence non-asymptotically. With the help of the Kemmochi condition, which allows us to explicitly calculate the truncated Hausdorff distance, we are able to study the non-asymptotic behavior of the optimal value and optimal solutions of the models. We refer the reader to Appendix E and also [28, Chapter 7], [29, Chapter 6.J] for more details._

**Corollary 4.4**.: _Under the assumptions in Theorem 4.1, it follows that if \(\delta_{n}\to 0\), then_

\[\lim_{n\to\infty}\mathrm{dist}(\mathcal{S}^{n,*},\mathcal{S}_{0}^{*})=0.\] (5)

**Remark 4.5**.: _From the strong law of large numbers, if we choose \(\delta_{n}=\mathcal{O}(\|\bm{C}_{n}-\bm{C}_{\infty}\|)\), then almost surely one has \(\lim_{n\to\infty}\|\bm{C}_{n}-\bm{C}_{\infty}\|=0\) and consequently \(\delta_{n}\to 0\). Hence, Corollary 4.4 shows that (5) holds almost surely._

For the remaining part of this section, we study the choice of \(\delta_{n}\) under certain statistical assumptions. A large number of distributions (e.g., Gaussian distributions, exponential distributions and any bounded distributions) can be covered by the sub-Gaussian distribution (cf. [41, Section 2.5]), whose formal definition is as follows.

**Definition 4.6** (Sub-Gaussian Distributions).: _The probability distribution of a random vector \(\bm{w}\) is called sub-Gaussian if there are \(C,v>0\) such that for every \(t>0\), \(\mathbb{P}(\|\bm{w}\|_{2}>t)\leq Ce^{-vt^{2}}\)._

Consider the case that \(\bm{w}\) in the generative model (1) follows a sub-Gaussian distribution. The following result is adapted from [40, Proposition 2.1].

**Lemma 4.7**.: _Suppose that \(\bm{w}\) in the generative model (1) follows a sub-Gaussian distribution. Then, \(\bm{x}\) follows a sub-Gaussian distribution, and with probability larger than \(1-\mathcal{O}(\frac{1}{n})\), one has \(\|\bm{C}_{n}-\bm{C}_{\infty}\|\leq\mathcal{O}(\sqrt{\log n/n})\)._Equipped with non-asymptotic results in Theorem 4.1, we choose \(\delta_{n}\) with a specific decaying rate.

**Corollary 4.8**.: _If the input \(\bm{w}\) in (1) follows a sub-Gaussian distribution and \(\delta_{n}=\mathcal{O}(\sqrt{\log n/n})\), then the assumptions in Theorem 4.1 hold with probability larger than \(1-\mathcal{O}(\frac{1}{n})\)._

Corollary 4.8 together with Theorem 4.1 illustrates the non-asymptotic convergence of optimal function value/suboptimal solution set/optimal node degree vector of rLogSpect from \(n\) i.i.d samples to the ideal model LogSpect with the convergence rate \(\mathcal{O}(\varepsilon_{n})/\mathcal{O}(\varepsilon_{n})/\mathcal{O}( \sqrt{\varepsilon_{n}})\), where \(\varepsilon_{n}=\mathcal{O}(|\bm{C}_{n}-\bm{C}_{\infty}|)\leq\mathcal{O}( \sqrt{\log n/n})\) for sub-Gaussian \(\omega\). This matches the convergence rate \(\mathcal{O}(\sqrt{\log n/n})\) of classic spectral template models, e.g., Proposition 2 in [31] and Theorem 2 in [23] for the SpecT model, which shows that LogSpecT is also competitive on recovery rate.

## 5 Linearized ADMM for Solving rLogSpecT

In this section, we design a linearized ADMM algorithm to solve rLogSpecT that admits closed-form solutions for the subproblems. The ADMM-type algorithms have been successfully applied to tackle various graph learning tasks [46; 42].

Firstly, we reformulate rLogSpecT such that it fits the ADMM scheme:

\[\min_{\bm{S},\bm{Z},\bm{q}} \langle\bm{S},\bm{1}\bm{1}^{\top}\rangle-\alpha\bm{1}^{\top}\log \bm{q}+\iota_{\mathcal{S}}(\bm{S})+\iota_{\mathcal{B}(\bm{0},\delta_{n})}(\bm {Z})\] (6) s.t. \[\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}=\bm{Z},\ \ \bm{q}=\bm{S}\bm{1}.\]

The augmented Lagrangian function of problem (6) is

\[L(\bm{S},\bm{Z},\bm{q},\bm{\Lambda},\bm{\lambda}_{2}) =\langle\bm{1}\bm{1}^{\top},\bm{S}\rangle-\alpha\bm{1}^{\top}\log \bm{q}+\iota_{\mathcal{S}}(\bm{S})+\iota_{\mathcal{B}(\bm{0},\delta_{n})}(\bm {Z})+\langle\bm{\Lambda},\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}-\bm{Z}\rangle\] \[\quad+\bm{\lambda}_{2}^{\top}\left(\bm{q}-\bm{S}\bm{1}\right)+ \frac{\rho}{2}\|\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}-\bm{Z}\|_{F}^{2}+\frac{\rho} {2}\|\bm{q}-\bm{S}\bm{1}\|_{2}^{2}.\]

Update of primal variables \(\bm{Z}\) and \(\bm{q}\)Since \(\bm{Z}\) and \(\bm{q}\) are separable given \(\bm{S}\), we update the primal variables in two blocks: \(\bm{S}\) and \((\bm{Z},\bm{q})\). More specifically, the update of \((\bm{Z},\bm{q})\) in the \(k\)-th iteration is

\[(\bm{Z}^{(k+1)},\bm{q}^{(k+1)})\coloneqq\operatorname{argmin}_{(\bm{Z},\bm{q} )}L(\bm{S}^{(k)},\bm{Z},\bm{q},\bm{\Lambda}^{(k)},\bm{\lambda}_{2}^{(k)}),\] (7)

which admits the following closed-form solution:

**Proposition 5.1**.: _The update (7) can be explicitly rewritten as_

\[\bm{Z}^{(k+1)}=\min\left\{1,\frac{\delta_{n}}{\|\tilde{\bm{Z}}\|_{F}}\right\} \tilde{\bm{Z}},\quad\bm{q}^{(k+1)}=\frac{\tilde{\bm{q}}+\sqrt{\tilde{\bm{q}}^{ 2}+4\alpha/\rho\bm{1}}}{2},\]

_where \(\tilde{\bm{Z}}=\bm{C}_{n}\bm{S}^{(k)}-\bm{S}^{(k)}\bm{C}_{n}+\frac{\bm{ \Lambda}^{(k)}}{\rho}\), \(\tilde{\bm{q}}=\bm{S}^{(k)}\bm{1}-\frac{1}{\rho}\bm{\lambda}_{2}^{(k)}\)._

Update of primal variables \(\bm{S}\)The ADMM update of \(\bm{S}\) does not admit a closed-form solution. Hence, we solve the linearized version \(\hat{L}_{k}\) of the augmented Lagrangian function \(L\) when all the variables except \(\bm{S}\) are fixed. It is given by

\[\hat{L}_{k}(\bm{S})=\langle\bm{C}^{(k)},\bm{S}\rangle+\frac{\rho\tau}{2}\|\bm{ S}-\bm{S}^{(k)}\|_{F}^{2}+\iota_{\mathcal{S}}(\bm{S}),\]

where \(\bm{C}^{(k)}\coloneqq\bm{1}\bm{1}^{\top}+\bm{C}_{n}\bm{\Lambda}^{(k)}-\bm{ \Lambda}^{(k)}\bm{C}_{n}-\bm{\lambda}_{2}^{(k)}\bm{1}^{\top}+\rho(\bm{S}^{(k)} \bm{C}_{n}^{2}+\bm{C}_{n}^{2}\bm{S}^{(k)}-2\bm{C}_{n}\bm{S}^{(k)}\bm{C}_{n}+ \bm{Z}^{(k+1)}\bm{C}_{n}-\bm{C}_{n}\bm{Z}^{(k+1)}-\bm{q}^{(k+1)}\bm{1}^{\top}+ \bm{S}^{(k)}\bm{1}\bm{1}^{\top})\) and \(\tau\) is the parameter for linearization. Therefore, the update of \(\bm{S}\) in the \(k\)-th iteration is

\[\bm{S}^{(k+1)}\coloneqq\operatorname{argmin}_{\bm{S}\in\mathcal{S}}\hat{L}_{k}( \bm{S})=\Pi_{\mathcal{S}}(\bm{S}^{(k)}-\bm{C}^{(k)}/\rho\tau),\] (8)

where \(\Pi_{\mathcal{S}}(\bm{X})\) is the projection of \(\bm{X}\) onto the closed and convex set \(\mathcal{S}\) and can be computed by

\[(\Pi_{\mathcal{S}}(\bm{X}))_{ij}=\begin{cases}\frac{1}{2}\max\{0,X_{ij}+X_{ji}\},&\text{if}\ \,i\neq j,\\ 0,&\text{if}\ \,i=j.\end{cases}\]Update of dual variables and parametersFinally, we update the dual variables \(\bm{\Lambda}\) and \(\bm{\lambda}_{2}\) via gradient ascent steps of the augmented Lagrangian function:

\[\bm{\Lambda}^{(k+1)} \coloneqq\bm{\Lambda}^{(k)}+\rho(\bm{C}_{n}\bm{S}^{(k+1)}-\bm{S}^{( k+1)}\bm{C}_{n}-\bm{Z}^{(k+1)}),\] (9) \[\bm{\lambda}_{2}^{(k+1)} \coloneqq\bm{\lambda}_{2}^{(k)}+\rho(\bm{q}^{(k+1)}-\bm{S}^{(k+1) }\bm{1}).\] (10)

Together with the updating rule for the augmented parameter \(\rho\), we complete the whole algorithm. The details are presented in Appendix F.

Complexity of each iterationTo illustrate the efficiency of L-ADMM, we calculate the complexity of each subproblem. In the update of \(\bm{Z}\) and \(\bm{q}\), the most time consuming part is to calculate \(\bm{C}_{n}\bm{S}^{(k)}\). When the number of nodes \(m\) is larger than the sample size \(n\), we rewrite \(\bm{C}_{n}\bm{S}^{(k)}\) as \((1/n\bm{X})(\bm{X}^{\top}\bm{S}^{(k)})\), where \(\bm{X}\in\mathbb{R}^{m\times n}\) is the data matrix. In this case, the complexity is in the order of \(\mathcal{O}(nm^{2})\). When \(m\) is smaller than \(n\), we first calculate \(C_{n}\) and then multiply it with \(\bm{S}^{(k)}\). This gives the complexity \(\mathcal{O}(nm^{2})\). Similarly, the complexity needed to update \(\bm{S}\) is \(\mathcal{O}(nm^{2}+mn^{2})\). The update of the dual variables can be decomposed as the summation of components calculated when updating the primal variables. In summary, the total complexity of each iteration is \(\mathcal{O}(nm^{2}+mn^{2})\).

Convergence of L-ADMMFor the convergence analysis of L-ADMM, we treat \((\bm{Z},\bm{q})\) as one variable, and the two constraints \(\bm{C}_{n}\bm{S}-\bm{SC}_{n}=\bm{Z}\) and \(\bm{q}=\bm{S}\bm{1}\) can be written into a single one:

\[[\bm{I}\otimes\bm{C}_{n}-\bm{C}_{n}\otimes\bm{I};\bm{I}\otimes\bm{1}^{\top}] \operatorname{vec}(\bm{S})=[\operatorname{vec}(\bm{Z});\bm{q}].\]

Then we can apply a two-block proximal ADMM (i.e., L-ADMM) to the problem by alternatingly updating \(\bm{S}\) (see details in Appendix F.4 for this part) and \((\bm{Z},\bm{q})\). Consequently, the convergence result in [45, Theorem 4.2] can be invoked directly to derive the following theorem.

**Theorem 5.2**.: _If \(\tau>m+\|\bm{C}_{n}\otimes\bm{I}_{m}-\bm{I}_{m}\otimes\bm{C}_{n}\|^{2}\), then \(\lim_{k\to\infty}f(\bm{S}^{(k)})=f_{n}^{*}\)._

## 6 Experiments

In this section, we evaluate our proposed algorithm and models via numerical experiments. The experiments are conducted on both synthetic and real networks. We apply the standard metrics [18]: F-measure, Precision, and Recall to assess the quality of learned graphs. The source code is available at: https://github.com/StevenSYL/NeurIPS2023-LogSpecT.

### Data Generation

Random Graphs.In the experiments, we consider two types of synthetic graphs, namely, the Erdos-Renyi (ER) graph [9] and the Barabasi-Albert model graph (BA) [2]. The ER graphs are generated by placing an edge between each pair of nodes independently with probability \(p=0.2\) and the weight on each edge is set to 1. The BA graphs are generated by having two connected nodes initially and then adding new nodes one at a time, where each new node is connected to exactly one previous node that is randomly chosen with a probability proportional to its degree at the time.

Graph Filters and Signals.Three graph filters are used in the experiments. The first one is the low-pass graph filter (lowpass-EXP) \(h(\bm{S})=\exp(\frac{1}{2}\bm{S})\). The second one is the high-pass graph filter (highpass-EXP) \(h(\bm{S})=\exp(-\bm{S})\). The last one is a quadratic graph filter (QUA) \(h(\bm{S})=\bm{S}^{2}+\bm{S}+\bm{I}\). Note that the quadratic graph filter is neither low-pass nor high-pass. We will also use random graph filters developed from the above ones for experiments on real networks. They will be introduced when applied. The stationary graph signals are generated from the generative model (1). The input graph signal \(\bm{w}\sim\mathcal{N}(\bm{0},\bm{I}_{m})\) is a random vector following the normal distribution.

### How to Infer Binary Graphs

Many practical tasks require binary graphs instead of weighted graphs. However, the results from LogSpect and rLogSpecT are generally weighted. In this section, we tackle the issue of how to convert a weighted graph to a binary one. Firstly, we normalize each edge in the graph \(\bm{W}\) by dividing it over the maximal weight, which yields a collection of values ranging from \(0\) to \(1\). Our task is then to select a threshold \(\varepsilon\) to round these values to \(0\) or \(1\) and construct a binary graph \(\bm{W}^{*}\) accordingly. Mathematically, this procedure is captured by the formula:\[(W^{*})_{ij}=\begin{cases}1,&\text{if }\,W_{ij}/\max\{W_{i^{\prime}j^{\prime}} \}\geq\varepsilon,\\ 0,&\text{if }\,W_{ij}/\max\{W_{i^{\prime}j^{\prime}}\}<\varepsilon.\end{cases}\]

To choose the threshold \(\varepsilon\), we either use a training-based strategy or a searching-based strategy. The training-based one searches the best \(\varepsilon\) on \(k\) graphs and applies the value to the newly learned graph. The searching-based one simply searches for \(\varepsilon\) that yields the best performance for a graph.

### Convergence of L-ADMM

We present the convergence performance of L-ADMM in this section. Since there does not literally exist customized algorithm for rLogSpecT, we compare our L-ADMM with CVXPY [8]. The solver used in CVXPY is MOSEK. We conduct the experiments on 100-node BA graphs with 10000 stationary graph signals generated from low-pass EXP graph filter. The parameter \(\delta\) is set as \(10\sqrt{\log n/n}\). For L-ADMM algorithm, the target accuracy is set as \(10^{-6}\) and the initialization is set as zero. The running time for L-ADMM takes around **20** seconds while the solver takes over **110** seconds. The primal residual and dual residual of L-ADMM in each iteration are plot in Figure 1. The results corroborate the efficiency of our proposed algorithm. Furthermore, the locally linear convergence can be observed from the experiment. This implies that L-ADMM converges with fast speed to high accuracy. It remains an open question to prove the property theoretically.

### Experiments on Synthetic Networks

To evaluate the efficacy of LogSpecT and rLogSpecT, we compare them with SpecT and rSpecT on synthetic data. Notice that the prior of no isolated nodes has been incorporated in practice by adding restrictions on the smallest degree. This approach introduces an additional hyperparameter and may exacerbate the infeasibility issue in robust formulation. Also, no recovery guarantees are developed for this trick. For these reasons, we still compare LogSpect \(\&\) rLogSpecT with SpecT \(\&\) rSpecT.

Figure 1: L-ADMM residual on 100-node graph Figure 2: rLogSpecT with \(\delta_{n}=0.2\sqrt{\log n/n}\)

**Performance of LogSpecT**. We first compare the performance of the ideal models: LogSpecT and SpecT on the two types of random graphs with three graph filters. We conduct experiments on graphs with nodes ranging from 20 to 60 and use the searching-based strategy to set threshold \(\varepsilon^{*}\). After 10 repetitions, we report the average results in Figure 3. The left column presents the performance of LogSpecT and the right column presents that of SpecT. Firstly, we observe that on ER graphs, both models achieve good performance. They nearly recover the graphs perfectly. However, the performance on BA graphs differs. In this case, LogSpecT can work efficiently. The learned graphs from LogSpecT enjoy much higher F-measure values than those from SpecT. Secondly, the comparison between different graph filters shows that different graph filters have few impacts on recovery performance for both LogSpecT and SpecT. Finally, we observe that the outputs of LogSpecT on BA graphs tend to possess higher F-measure when the number of nodes increases. This suggests that LogSpecT may behave better on larger networks. However, such phenomena cannot be observed from SpecT results.

**Performance of rLogSpecT**. Since LogSpecT persuasively outperforms SpecT, we only present the performance of rLogSpecT when more samples are collected. As we have mentioned before, the optimal solution to LogSpecT is not necessarily unique. Thus, we do not expect to be able to show how rLogSpecT's optimal solution converges to LogSpecT's optimal solution. Moreover, the non-uniqueness may jeopardize the performance of rLogSpecT intuitively. However, the following experiment on BA graphs shows that the learned graphs from rLogSpecT with the binary-graph-transforming strategy tend to approach the ground truth when enough samples are collected.

In this experiment, the sample size \(n\) is chosen from \(10\) to \(10^{6}\) and \(\delta_{n}\) is set as \(0.2\sqrt{\log n/n}\). We rely on the training-based strategy to obtain the best threshold \(\varepsilon^{*}\) from 10 randomly chosen training graphs. We then calculate the F-measure of the learned binary graph in the testing set. The result is reported in Figure 2. It shows that rLogSpecT works for all three graph filters on BA graphs and tends to possess higher F-measure values when more and more signals are collected. This indicates that similar to LogSpecT, rLogSpecT is efficient for different types of graph filters on BA graphs, including the high-pass ones. For more experiments and discussions, we refer readers to Appendix G.

### Experiments on Real Networks

In this set of experiments, we compare the performance of LogSpecT (resp. rLogSpecT) with SpecT (resp. rSpecT) and other methods from the statistics and GSP communities on _Protein_ database and _Reddit_ database from [6]. The _Protein_ database is a Bioinformatics dataset, where nodes are secondary structure elements (SSEs) and there is an edge between two nodes if they are neighbors in the amino-acid sequence or in 3D space. The _Reddit_ database is a social network dataset. In this dataset, each graph corresponds to an online discussion thread, where nodes correspond to users, and there is an edge between two nodes if at least one of them responds to another's comments. We choose graphs in databases whose numbers of nodes are smaller than 50 and generate stationary graph signals from the generative model (1), with the graph filtering chosen as \(H(\bm{S})=\exp\frac{1}{2}\bm{S}\). Our experiments include in total 871 testing graphs in the _Protein_ database and 309 in _Reddit_ database.

**Infeasibility of rSpecT**. For these real networks, we first check whether the infeasibility issue encountered by rSpecT is significant. To this end, we adopt the random graph filters \(t_{1}\bm{S}^{2}+t_{2}\bm{S}+t_{3}\bm{I}\), where \(t_{i},i=1,2,3\) are random variables following a Gaussian distribution with \(\mu=0\) and \(\sigma=2\). Then, we calculate the smallest \(\delta_{n}\) such that rSpecT is feasible. If the smallest \(\delta_{n}>0\), rSpecT is likely to be encountered with the infeasibility issue. The results with different numbers of graph signals observed are shown in Table 1.

The experiment results present a decrease in the mean value of \(\delta_{\min}\) when more samples are used. However, a high frequency of the infeasibility issue occurring in these real datasets cannot be mitigated by the increasing sample size. These observations highlight the necessity of the careful treatment for choosing \(\delta\) in rSpecT again.

\begin{table}
\begin{tabular}{|c|c|c|c|c|c|c|} \hline  & \multicolumn{3}{c|}{Protein} & \multicolumn{3}{c|}{Reddit} \\ \hline sample size & 10 & 100 & 1000 & 10 & 100 & 1000 \\ \hline frequency & 0.980 & 0.999 & 0.994 & 0.984 & 1 & 1 \\ \hline mean of \(\delta_{\min}\) & 38.514 & 26.012 & 14.813 & 1094.788 & 830.642 & 531.006 \\ \hline \end{tabular}
\end{table}
Table 1: Likelihood of infeasibility

**Performance of different graph learning models**. In this section, the stationary graph signals are generated by the low-pass-EXP filter. We choose the famous statistical method called (thresholded) correlation [17] and the first GSP method that applies the log barrier to graph inference [15] as the baselines. The optimal threshold for the correlation method is selected from \(0.1\) to \(0.6\) and we search in \(\{0.01,0.1,1,10,100,1000\}\) to obtain the best hyperparameter in Kalofolias' model. The parameter \(\delta_{n}\) in rLogSpecT is set as \(10\sqrt{\log n/n}\) and in rSpecT it is set as the smallest value that allows a feasible solution [31]. We also rely on the searching-based strategy to convert the learned weighted graphs from (r)SpecT & (r)LogSpecT.

The results of the ideal models with the true covariance matrix \(\bm{C}_{\infty}\) applied are collected in Figure 4. We observe that on the real graphs, LogSpecT achieves the best performance on average (median represented by the red line). Also, compared with SpecT, LogSpecT performs more stably. We remark that since the graph signals are not necessarily smooth, Kalofolias' model cannot provide guaranteed performance, especially on the Reddit networks.

Figure 5 compares the performance of four different methods when different numbers of signals are observed.2 When the sample size increases, the models focusing on stationarity property can recover the graphs more accurately while correlation method and Kalofolias' method fail to exploit the signal information. This can also be inferred from the experiment results in Figure 4 since the models fail to achieve good performance from full information, let alone from partial information. The experiment also shows that when a fixed number of samples are observed, the learned graphs from rLogSpecT approximate the ground truth better than rSpecT. This further corroborates the superiority of rLogSpecT on graph learning from stationary signals.

Footnote 2: The model in [34] is a substitute of rSpecT to approximate SpecT and its hyperparameter is hard to determine. Hence, we omit the performance of that model.

## 7 Conclusion

In this paper, we directly tackle the infeasibility issue encountered in graph learning from stationary graph signals [31] and propose the first condition that guarantees the model infeasibility. To overcome this, we propose an efficient alternative. The recovery guarantees of its robust formulation are analyzed with advanced optimization tools, which may find broader applications in learning tasks. Compared with current literature [23], these theoretical results require less stringent conditions. We also design an L-ADMM algorithm that allows for efficient implementation and theoretical convergence. Extensive experiments on both synthetic and real data are conducted in this paper. The results show that our proposed model can significantly outperform the existing ones.

We believe this work represents an important step beyond the fundamental model SpecT. Its general formulation allows for the transfer of the current extensions made on SpecT. Testing our proposed models with these extensions is one future direction. Also, we notice that although the recovery guarantees for robust formulations are clear, the estimation performance analysis for the ideal-case models (i.e. SpecT and LogSpecT) is still incomplete. Investigating the exact recovery conditions is another future direction.

[MISSING_PAGE_FAIL:11]

* [17] Eric D. Kolaczyk. _Statistical Analysis of Network Data: Methods and Models_. Springer-Verlag, New York, NY, USA, 2009.
* [18] D. Christopher Manning, Hinrich Schutze, and Prabhakar Raghavan. _Introduction to Information Retrieval_. Cambridge University Press, 2008.
* [19] Hermina Petric Maretic and Pascal Frossard. Graph laplacian mixture model. _IEEE Transactions on Signal and Information Processing over Networks_, 6:261-270, 2020.
* [20] Antonio G Marques, Santiago Segarra, Geert Leus, and Alejandro Ribeiro. Stationary graph processes and spectral estimation. _IEEE Transactions on Signal Processing_, 65(22):5911-5926, 2017.
* [21] Gautier Marti, Frank Nielsen, Mikolaj Binkowski, and Philippe Donnat. A review of two decades of correlations, hierarchies, networks and clustering in financial markets. _Progress in Information Geometry_, pages 245-274, 2021.
* [22] Gonzalo Mateos, Santiago Segarra, Antonio G Marques, and Alejandro Ribeiro. Connecting the dots: Identifying network structure via graph signal processing. _IEEE Signal Processing Magazine_, 36(3):16-43, 2019.
* [23] Madeline Navarro, Yuhao Wang, Antonio G Marques, Caroline Uhler, and Santiago Segarra. Joint inference of multiple graphs from matrix polynomials. _Journal of Machine Learning Research_, 23(76):1-35, 2022.
* [24] Bastien Pasdeloup, Vincent Gripon, Gregoire Mercier, Dominique Pastor, and Michael G Rabbat. Characterization and inference of graph diffusion processes from observations of stationary signals. _IEEE transactions on Signal and Information Processing over Networks_, 4(3):481-496, 2017.
* [25] Nathanael Perraudin and Pierre Vandergheynst. Stationary signal processing on graphs. _IEEE Transactions on Signal Processing_, 65(13):3462-3477, 2017.
* [26] Raksha Ramakrishna, Hoi-To Wai, and Anna Scaglione. A user guide to low-pass graph signal processing and its applications: Tools and applications. _IEEE Signal Processing Magazine_, 37(6):74-85, 2020.
* [27] Samuel Rey, Andrei Buciulea, Madeline Navarro, Santiago Segarra, and Antonio G Marques. Joint inference of multiple graphs with hidden variables from stationary graph signals. In _Proceedings of 2022 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP 2022)_, pages 5817-5821. IEEE, 2022.
* [28] R Tyrrell Rockafellar and Roger J-B Wets. _Variational analysis_, volume 317. Springer Science & Business Media, 2009.
* [29] Johannes O Royset and Roger JB Wets. _An Optimization Primer_. Springer, 2021.
* [30] Santiago Segarra, Sundeep Prabhakar Chepuri, Antonio G Marques, and Geert Leus. Statistical graph signal processing: Stationarity and spectral estimation. _Cooperative and Graph Signal Processing_, pages 325-347, 2018.
* [31] Santiago Segarra, Antonio G Marques, Gonzalo Mateos, and Alejandro Ribeiro. Network topology inference from spectral templates. _IEEE Transactions on Signal and Information Processing over Networks_, 3(3):467-483, 2017.
* [32] Santiago Segarra, Yuhao Wang, Caroline Uhler, and Antonio G Marques. Joint inference of networks from stationary graph signals. In _Proceedings of the 51st Asilomar Conference on Signals, Systems, and Computers_, pages 975-979. IEEE, 2017.
* [33] Rasoul Shafipour, Abolfazl Hashemi, Gonzalo Mateos, and Haris Vikalo. Online topology inference from streaming stationary graph signals. In _2019 IEEE Data Science Workshop (DSW)_, pages 140-144. IEEE, 2019.
* [34] Rasoul Shafipour and Gonzalo Mateos. Online topology inference from streaming stationary graph signals with partial connectivity information. _Algorithms_, 13(9):228, 2020.

* [35] Rasoul Shafipour, Santiago Segarra, Antonio G Marques, and Gonzalo Mateos. Network topology inference from non-stationary graph signals. In _2017 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)_, pages 5870-5874. IEEE, 2017.
* [36] Stephen M Smith, Karla L Miller, Gholamreza Salimi-Khorshidi, Matthew Webster, Christian F Beckmann, Thomas E Nichols, Joseph D Ramsey, and Mark W Woolrich. Network modelling methods for fmri. _Neuroimage_, 54(2):875-891, 2011.
* [37] Oliver Stegle, Sarah A Teichmann, and John C Marioni. Computational and analytical challenges in single-cell transcriptomics. _Nature Reviews Genetics_, 16(3):133-145, 2015.
* [38] Yuichi Tanaka and Yonina C Eldar. Generalized sampling on graphs with subspace and smoothness priors. _IEEE Transactions on Signal Processing_, 68:2272-2286, 2020.
* [39] Yuichi Tanaka, Yonina C Eldar, Antonio Ortega, and Gene Cheung. Sampling signals on graphs: From theory to applications. _IEEE Signal Processing Magazine_, 37(6):14-30, 2020.
* [40] Roman Vershynin. How close is the sample covariance matrix to the actual covariance matrix? _Journal of Theoretical Probability_, 25(3):655-686, 2012.
* [41] Roman Vershynin. _High-dimensional probability: An introduction with applications in data science_, volume 47. Cambridge University Press, 2018.
* [42] Xiaolu Wang, Chaorui Yao, Haoyu Lei, and Anthony Man-Cho So. An efficient alternating direction method for graph learning from smooth signals. In _Proceedings of 2021 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP 2021)_, pages 5380-5384. IEEE, 2021.
* [43] Chenyue Zhang, Yiran He, and Hoi-To Wai. Product graph learning from multi-attribute graph signals with inter-layer coupling. In _Proceedings of 2023 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP 2023)_, pages 1-5. IEEE, 2023.
* [44] Hui Zhang, Ming Yan, and Wotao Yin. One condition for solution uniqueness and robustness of both l1-synthesis and l1-analysis minimizations. _Advances in Computational Mathematics_, 42(6):1381-1399, 2016.
* [45] Xiaoqun Zhang, Martin Burger, and Stanley Osher. A unified primal-dual algorithm framework based on bregman iteration. _Journal of Scientific Computing_, 46(1):20-46, 2011.
* [46] Licheng Zhao, Yiwei Wang, Sandeep Kumar, and Daniel P Palomar. Optimization algorithms for graph laplacian estimation via admm and mm. _IEEE Transactions on Signal Processing_, 67(16):4231-4244, 2019.
* [47] Shuai Zheng, Zhenfeng Zhu, Zhizhe Liu, Zhenyu Guo, Yang Liu, Yuchen Yang, and Yao Zhao. Multi-modal graph learning for disease prediction. _IEEE Transactions on Medical Imaging_, 41(9):2207-2216, 2022.

Organization of the Appendix

The appendix includes the missing proofs, detailed discussions of some argument in the main body and more numerical experiments. We organize the appendix as follows:

* The proof of infeasibility condition (Theorem 3.2) is provided in Section B.
* Explanations on conditions derived in Theorem 3.2 are included in Section C.
* The proof of properties of the proposed model (r)LogSpecT (Proposition 3.4\(\&\) 3.6) is given in Section D and some additional properties are discussed.
* The truncated Hausdorff distance based proof details of Theorem 4.1 and Corollary 4.4 are given in Section E.
* Details of L-ADMM and its convergence analysis are in Section F.
* Additional experiments and discussions on synthetic and real data are included in Section G.

## Appendix B Proof of Theorem 3.2

Since the linear system (4) has no solution, we know from Farkas' lemma that the following system has solutions:

\[\begin{cases}\begin{bmatrix}\bm{I}_{m-1}&\bm{0}_{\frac{(m-1)(m-2)}{2}}\end{bmatrix} \bm{B}^{\top}\bm{A}_{n}^{\top}\bm{x}<\bm{0}_{(m-1)\times 1},\\ \begin{bmatrix}\bm{0}_{\frac{(m-1)(m-2)}{2}\times(m-1)}&\bm{I}_{\frac{(m-1)(m-2 )}{2}}\end{bmatrix}\bm{B}^{\top}\bm{A}_{n}^{\top}\bm{x}\leq\bm{0}_{\frac{(m-1)( m-2)}{2}\times 1}.\end{cases}\end{cases}\] (11)

Let \(\bm{x}^{*}\in\mathbb{R}^{m^{2}}\) be a solution to (11). Denote \(\bm{x}_{+}\coloneqq\max\{\bm{x}^{*},\bm{0}\}\), \(\bm{x}_{-}\coloneqq\max\{-\bm{x}^{*},\bm{0}\}\). Then, there exists \(c\in(0,1]\) such that

\[\bm{B}^{\top}\bm{A}_{n}^{\top}(\bm{x}_{+}-\bm{x}_{-})+c\bm{1}_{m^{2}}^{\top}( \bm{x}_{+}+\bm{x}_{-})[\bm{1}_{m-1};\bm{0}_{\frac{(m-1)(m-2)}{2}}]\leq\bm{0}.\]

Define \(y\coloneqq-\bm{1}_{m^{2}}^{\top}(\bm{x}_{+}+\bm{x}_{-})\), \(z\coloneqq c\bm{1}_{m^{2}}^{\top}(\bm{x}_{+}+\bm{x}_{-})\) and set \(\bar{\delta}=c\). For all \(\delta\in[0,\bar{\delta})\), \((\bm{x}_{+},\bm{x}_{-},y,z)\) is a solution to the following linear system:

\[\begin{cases}\bm{B}^{\top}\bm{A}_{n}^{\top}(\bm{x}_{+}-\bm{x}_{-})+z[\bm{1}_{ m-1};\bm{0}_{\frac{(m-1)(m-2)}{2}}]\leq\bm{0},\\ \bm{1}_{m^{2}}^{\top}(\bm{x}_{+}+\bm{x}_{-})+y\leq 0,\\ \delta y+z>0,\\ \bm{x}_{+},\bm{x}_{-},-y\geq\bm{0}.\end{cases}\]

Again, from Farkas' lemma, this implies that the following linear system does not have a solution:

\[\begin{cases}\begin{aligned} \bm{A}_{n}\bm{B}\bm{s}+t\bm{1}_{m^{2}}& \geq\bm{0},\\ \bm{A}_{n}\bm{B}\bm{s}-t\bm{1}_{m^{2}}&\leq\bm{0},\\ t&\leq\delta,\\ \begin{bmatrix}\bm{1}_{m-1}&\bm{0}_{\frac{(m-1)(m-2)}{2}}\end{bmatrix}\bm{s}= 1,\end{cases}\end{cases}\] (12)

where \(\bm{s}\in\mathbb{R}^{m(m-1)/2}\) and \(t\in\mathbb{R}\). Since (12) is equivalent to:

\[\begin{cases}\|\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}\|_{\infty,\infty}\leq\delta, \\ (\bm{S}\bm{1})_{1}=1,\\ \bm{S}\in\mathcal{S},\end{cases}\] (13)

the above argument indicates that (13) does not have a solution. Suppose rSpecT has a feasible solution \(\bm{S}^{\prime}\), then

\[\|\bm{C}_{n}\bm{S}^{\prime}-\bm{S}^{\prime}\bm{C}_{n}\|_{\infty,\infty}\leq\| \bm{C}_{n}\bm{S}^{\prime}-\bm{S}^{\prime}\bm{C}_{n}\|_{F}\leq\delta.\]

Hence, \(\bm{S}^{\prime}\) is also a solution to (13). However, (13) does not have a solution. We can conclude that rSpecT is infeasible in this case.

Explanations on Sufficient Conditions in Theorem 3.2

We elaborate more on the infeasibility condition that \(\bm{A}_{n}\bm{B}\) has full column rank. An application of the condition is Example 3.1. Specifically, we know that in this case,

\[\bm{B}=\begin{pmatrix}0\\ 1\\ 1\\ 0\end{pmatrix}\quad\text{and}\quad\bm{A}_{n}=\begin{pmatrix}0&h_{12}&-h_{12}&0 \\ h_{12}&h_{22}-h_{11}&0&-h_{12}\\ -h_{12}&0&h_{11}-h_{22}&h_{12}\\ 0&-h_{12}&h_{12}&0\end{pmatrix}.\]

This implies that

\[\bm{A}_{n}\bm{B}=\begin{pmatrix}0\\ h_{22}-h_{11}\\ h_{11}-h_{22}\\ 0\end{pmatrix}.\]

Hence, when \(h_{11}\neq h_{22}\), \(\bm{A}_{n}\bm{B}\) has full column rank. This means that when \(\delta\) is small enough (from Example 3.1 we know \(\tilde{\delta}=\sqrt{2}|h_{11}-h_{22}|\)), the model rSpecT is infeasible.

## Appendix D Proofs of Properties of (r)LogSpecT

### Proof of Proposition 3.4

Since the constraint set \(\mathcal{S}\) is a cone, it follows that for all \(\gamma>0\), \(\gamma\mathcal{S}=\mathcal{S}\). Then, we know that

\[\operatorname{Opt}(\bm{C},\alpha) =\operatorname*{argmin}_{\bm{S}\in\mathcal{S},\bm{C}\bm{S}=\bm{S} \bm{C}}\|\bm{S}\|_{1,1}-\alpha\bm{1}^{\top}\log(\bm{S}\bm{1})\] \[=\gamma\cdot\operatorname*{argmin}_{\bm{\gamma}\in\mathcal{S}, \bm{C}\gamma\mathcal{S}=\gamma\bm{S}\bm{C}}\|\gamma\bm{S}\|_{1,1}-\alpha\bm{1 }^{\top}\log(\gamma\bm{S}\bm{1})\] \[=\gamma\cdot\operatorname*{argmin}_{\bm{S}\in\frac{1}{\gamma} \mathcal{S},\bm{C}\bm{S}=\bm{S}\bm{C}}\gamma\|\bm{S}\|_{1,1}-\alpha\bm{1}^{ \top}\log(\bm{S}\bm{1})\] \[=\gamma\cdot\operatorname*{argmin}_{\bm{S}\in\mathcal{S},\bm{C} \bm{S}=\bm{S}\bm{C}}\|\bm{S}\|_{1,1}-\frac{\alpha}{\gamma}\bm{1}^{\top}\log( \bm{S}\bm{1})\] \[=\gamma\operatorname{Opt}(\bm{C},\alpha/\gamma),\]

where the third equality is from the basic calculus rule of the logarithm function. Set \(\gamma=\alpha\) and then \(\operatorname{Opt}(\bm{C},\alpha)=\alpha\operatorname{Opt}(\bm{C},1)\), which completes the proof.

### Proof of Proposition 3.6

The proof will be conducted by constructing a feasible solution for rLogSpecT. Recall that \(\bm{A}_{n}=\bm{I}\otimes\bm{C}_{n}-\bm{C}_{n}\otimes\bm{I}\) and the matrix \(\bm{B}\in\mathbb{R}^{m^{2}\times m(m-1)/2}\) that maps a non-negative vector to the vectorization of a valid adjacency matrix. Let \(\bm{S}=\min\{\frac{\delta}{\|\bm{A}_{n}\bm{B}\bm{s}\|_{2}},1\}\cdot\text{mat}( \bm{B}\bm{s})\) with \(\bm{s}\in\mathbb{R}^{(m-1)m/2}\) being a non-negative vector, where \(\text{mat}(\cdot)\) is the matricization operator. Note that

\[\text{vec}(\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n})=(\bm{I}\otimes\bm{C}_{n}-\bm{C} _{n}\otimes\bm{I})\,\text{vec}(\bm{S})=\bm{A}_{n}\text{vec}(\bm{S}).\]

Then, we know that

\[\|\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}\|_{F}=\|\text{vec}(\bm{C}_{n}\bm{S}-\bm{S }\bm{C}_{n})\|_{2}=\min\left\{\frac{\delta}{\|\bm{A}_{n}\bm{B}\bm{s}\|_{2}},1 \right\}\cdot\|\bm{A}_{n}\bm{B}\bm{s}\|_{2}\leq\delta.\]

Thus, the given \(\bm{S}\) is a feasible solution for rLogSpecT and it completes the proof.

### Properties of optimal solutions and values of (r)LogSpecT

In this section, we further discuss some properties of the optimal solutions/value of the proposed models, which are useful for deriving the recovery guarantee. More specifically, we obtain an upper bound on the optimal solutions (which may not be unique) independent of the sample size \(n\) and the inaccuracy parameter \(\delta_{n}\). Also, a lower bound of optimal values follows.

**Proposition D.1**.: _The following statements hold:_

* _For an optimal solution_ \(\bm{S}^{*}\) _(resp._ \(\bm{S}^{*}_{n}\)_) to LogSpecT (resp. rLogSpecT with any given sample size_ \(n\)_), it follows that_ \[\|\bm{S}^{*}\|_{1,1}=\alpha m\;\;\text{and}\;\;\|\bm{S}^{*}_{n}\|_{1,1}\leq \alpha m,\;\;\forall\delta_{n}>0.\]
* _If_ \(\delta_{n}\geq 2\alpha m\|\bm{C}_{n}-\bm{C}_{\infty}\|\)_, then_ \[\alpha m(1-\log\alpha)\leq f^{*}_{n}\leq f^{*},\;\;\forall n,\] _where_ \(f^{*}\) _(resp._ \(f^{*}_{n}\)_) denotes the optimal value of LogSpecT (resp. rLogSpecT)._

For the first statement, let us consider the Karush-Kuhn-Tucker (KKT) conditions of LogSpecT and rLogSpecT. Since the LogSpecT is a convex problem and Slater's condition holds, the KKT conditions are necessary and sufficient for the optimality, i.e., there exists \((\bm{\Lambda}_{1},\bm{\Lambda}_{2})\in\mathbb{R}^{m\times m}\times\mathcal{N }_{\mathcal{S}}(\bm{S}^{*})\) such that

\[\begin{cases}\nabla_{\bm{S}}(\|\bm{S}^{*}\|_{1,1}-\alpha\bm{1}^{\top}\log(\bm {S}^{*}\bm{1}))+\bm{C}_{\infty}\bm{\Lambda}_{1}-\bm{\Lambda}_{1}\bm{C}_{\infty }+\bm{\Lambda}_{2}=\bm{0},\\ \bm{C}_{\infty}\bm{S}^{*}=\bm{S}^{*}\bm{C}_{\infty},\\ \bm{S}^{*}\in\mathcal{S},\end{cases}\] (14)

where \(\mathcal{N}_{\mathcal{S}}(\bm{S}^{*})\coloneqq\{\bm{N}\in\mathbb{R}^{m\times m }:\sup_{\bm{X}\in\mathcal{S}}\left<\bm{X}-\bm{S}^{*},\bm{N}\right>\leq 0\}\) is the normal cone of \(\mathcal{S}\) at \(\bm{S}^{*}\), and \(\nabla\|\bm{S}^{*}\|_{1,1}\) is well-defined since \(\|\cdot\|_{1,1}=\langle\cdot,\bm{1}\bm{1}^{\top}\rangle\) at \(\bm{S}^{*}\geq 0\), which is differentiable. Taking further calculation gives that

\[\nabla\|\bm{S}^{*}\|_{1,1}=\bm{1}\bm{1}^{\top},\quad(\nabla_{\bm{S}}\bm{1}^{ \top}\log(\bm{S}^{*}\bm{1}))_{ij}=\frac{1}{(\bm{S}^{*}\bm{1})_{i}}.\]

Combining this with (14) by taking inner product of both sides with \(\bm{S}^{*}\), we obtain that

\[\sum_{i,j}(\bm{S}^{*})_{ij}-\alpha\sum_{i,j}\frac{(\bm{S}^{*})_{ij}}{(\bm{S}^ {*}\bm{1})_{i}}+\langle\bm{\Lambda}_{1},\bm{C}_{\infty}\bm{S}^{*}-\bm{S}^{*} \bm{C}_{\infty}\rangle+\langle\bm{\Lambda}_{2},\bm{S}^{*}\rangle=0.\] (15)

From the structure of \(\mathcal{S}\) and the fact that \(\Lambda_{2}\in\mathcal{N}_{\mathcal{S}}(\bm{S}^{*})\), one has that \(\langle\bm{\Lambda}_{2},\bm{S}^{*}\rangle=0\). Also, note that \(\bm{C}_{\infty}\bm{S}^{*}=\bm{S}^{*}\bm{C}_{\infty}\). Hence, the equation (15) can be simplified as the desired result:

\[\|\bm{S}^{*}\|_{1,1}=\sum_{i,j}(\bm{S}^{*})_{ij}=\alpha\sum_{i,j}\frac{(\bm{S} ^{*})_{ij}}{(\bm{S}^{*}\bm{1})_{i}}=\alpha\sum_{i=1}^{m}\sum_{j=1}^{m}\frac{ (\bm{S}^{*})_{ij}}{(\bm{S}^{*}\bm{1})_{i}}=\alpha m.\]

The KKT conditions of rLogSpecT indicate that there exist \(\lambda_{1}\geq 0\), \(\bm{\Lambda}_{2}\in\mathcal{N}_{\mathcal{S}}(\bm{S}^{*}_{n})\) and \(\bm{Q}\in\partial\|\bm{C}_{n}\bm{S}^{*}_{n}-\bm{S}^{*}_{n}\bm{C}_{n}\|_{F}\) (i.e., the subgradient of the function \(\bm{S}\mapsto\|\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}\|_{F}\) at \(\bm{S}^{*}_{n}\)) such that

\[\begin{cases}\nabla_{\bm{S}}(\|\bm{S}^{*}_{n}\|_{1,1}-\alpha\bm{1}^{\top}\log( \bm{S}^{*}_{n}\bm{1}))+\lambda_{1}\bm{Q}+\bm{\Lambda}_{2}=\bm{0},\\ \lambda_{1}(\|\bm{C}_{n}\bm{S}^{*}_{n}-\bm{S}^{*}_{n}\bm{C}_{n}\|_{F}-\delta_{ n})=0,\\ \bm{S}^{*}_{n}\in\mathcal{S}.\end{cases}\] (16)

Moreover, from the definition of the convex subdifferential we know that \(0\geq\|\bm{C}_{n}\bm{S}^{*}_{n}-\bm{S}^{*}_{n}\bm{C}_{n}\|_{F}-\langle\bm{Q}, \bm{S}^{*}_{n}\rangle\). Thus, after taking inner product of both sides of the equation (16) with \(\bm{S}^{*}_{n}\), it follows that:

\[0 =\sum_{i,j}(\bm{S}^{*}_{n})_{ij}-\alpha m+\lambda_{1}\langle\bm{ Q},\bm{S}^{*}_{n}\rangle+\langle\bm{\Lambda}_{2},\bm{S}^{*}_{n}\rangle\] \[\geq\sum_{i,j}(\bm{S}^{*}_{n})_{ij}-\alpha m+\lambda_{1}\|\bm{C} _{n}\bm{S}^{*}_{n}-\bm{S}^{*}_{n}\bm{C}_{n}\|_{F}+\langle\bm{\Lambda}_{2},\bm{S}^ {*}_{n}\rangle\] \[=\sum_{i,j}(\bm{S}^{*}_{n})_{ij}-\alpha m+\lambda_{1}\delta_{n},\]

which implies that \(\sum_{i,j}(\bm{S}^{*}_{n})_{ij}\leq\alpha m-\lambda_{1}\delta_{n}\leq\alpha m\). This completes the proof of the first statement.

For the second statement, we first prove that \(v_{n}^{*}\) and \(v^{*}\) are larger than \(\alpha m(1-\log\alpha)\). Define the auxiliary function \(g:\mathbb{R}\to\mathbb{R}\) such that \(g(x)\coloneqq x-\alpha\log x\) for any \(x\in\mathbb{R}_{+}\), whose minimum is attained at \(\alpha\). Since for any \(\bm{S}\in\mathcal{S}\),

\[f(\bm{S})=\sum_{i=1}^{m}g\left(\sum_{j=1}^{m}S_{ij}\right),\]

where \(f\) is the objective in LogSpecT, it follows that

\[f(\bm{S})\geq\sum_{i=1}^{m}g(\alpha)=\alpha m(1-\log\alpha).\]

This implies that \(v_{n}^{*}\) and \(v^{*}\) are larger than \(\alpha m(1-\log\alpha)\). Next, we will show \(v_{n}^{*}\leq v^{*}\). Consider any optimal solution \(\bm{S}^{*}\) to LogSpecT. We show that it is feasible for rLogSpecT.

\[\|\bm{C}_{n}\bm{S}^{*}-\bm{S}^{*}\bm{C}_{n}\| =\|\bm{C}_{n}\bm{S}^{*}-\bm{C}_{\infty}\bm{S}^{*}+\bm{S}^{*}\bm{C} _{\infty}-\bm{S}^{*}\bm{C}_{n}\|\] \[\leq 2\|\bm{S}^{*}\|_{1,1}\|\bm{C}_{n}-\bm{C}_{\infty}\|\leq 2 \alpha m\|\bm{C}_{n}-\bm{C}_{\infty}\|\leq\delta_{n},\]

where the equality comes from \(\bm{C}_{\infty}\bm{S}^{*}=\bm{S}^{*}\bm{C}_{\infty}\), the first inequality comes from the fact that \(\|\bm{X}\bm{Y}\|\leq\|\bm{X}\|_{F}\|\bm{Y}\|\leq\|\bm{X}\|_{1,1}\|\bm{Y}\|\), the second one comes from the first statement and the last one is due to \(\delta_{n}\geq 2\alpha m\|\bm{C}_{n}-\bm{C}_{\infty}\|\). Hence, \(\bm{S}^{*}\) is feasible for rLogSpecT, which indicates that \(v_{n}^{*}\leq v^{*}\). The proof is completed.

## Appendix E Proof of Theorem 4.1 & Corollary 4.4

### Truncated Hausdorff distance

In this section, we introduce an advanced technique in optimization that is efficient in analyzing the recovery guarantee of robust formulations. Before that, we introduce the concept of truncated Hausdorff distance between two sets.

**Definition E.1** (Truncated Hausdorff Distance [29, 6.J]).: _For any \(\rho\geq 0\), the truncated Hausdorff distance between two sets \(\mathcal{C}\) and \(\mathcal{D}\) is defined as:_

\[\hat{\mathrm{d}}_{\rho}(\mathcal{C},\mathcal{D})=\max\{\mathrm{dist}(\mathcal{ C}\cap\mathbb{B}(\bm{0},\rho),\mathcal{D}),\mathrm{dist}(\mathcal{D}\cap \mathbb{B}(\bm{0},\rho),\mathcal{C})\}.\]

It turns out that the distance between the optimum of two minimization problems can be bounded with the truncated Hausdorff distance of the epigraphs under some conditions. The result is captured in the following lemma.

**Lemma E.2** ([29, Theorem 6.56]).: _Let \(\rho\in[0,\infty)\). Suppose that the extended-real-valued lower semicontinuous functions \(f,g:\mathbb{R}^{n}\to\overline{\mathbb{R}}\) satisfy_

* \(\inf f,\inf g\in[-\rho,\rho]\)_,_
* \(\operatorname*{argmin}f,\operatorname*{argmin}g\subseteq\mathbb{B}(\bm{0},\rho)\)_._

_Then, it follows that_

\[|\inf f-\inf g|\leq\hat{\mathrm{d}}_{\rho}(\operatorname*{epi}f,\operatorname* {epi}g).\lx@note{footnote}{For a function $f:\mathbb{R}^{n}\to\overline{\mathbb{R}}$, its epigraph is defined as $\operatorname*{epi}f:=\{(\bm{x},y)\mid y\geq f(\bm{x})\}$.}\] (17)

_Suppose further that \(\varepsilon\geq 2\,\hat{\mathrm{d}}_{\rho}(\operatorname*{epi}f,\operatorname* {epi}g)\), then one has_

\[\mathrm{dist}(\bm{x}_{g}^{*},\varepsilon\cdot\operatorname*{argmin}f)\leq\hat{ \mathrm{d}}_{\rho}(\operatorname*{epi}f,\operatorname*{epi}g),\] (18)

_where \(\varepsilon\cdot\operatorname*{argmin}f\) is the \(\varepsilon\)-suboptimal solution set of \(f\) that is defined as \(\varepsilon\cdot\operatorname*{argmin}f\coloneqq\{\bm{x}\in\mathrm{dom}\,f:f(\bm{x })\leq\inf f+\varepsilon\}\), and \(\bm{x}_{g}^{*}\) is a minimizer of \(g\)._

From the above lemma, we know that if two optimization problems are close enough (in the sense of truncated Hausdorff distance), then the optimum of them should be close to each other. Hence, in order to apply this result, we need to bound the truncated Hausdorff distance in an explicit way, which is solved by the following Kenmochi condition.

**Lemma E.3** (Kenmochi Condition [29, Proposition 6.58]).: _Let \(\rho\in[0,\infty)\). Then, for \(f,g:\mathbb{R}^{n}\to\mathbb{R}\) with nonempty epigraphs, one has that_

\[\hat{\mathrm{d}}_{\rho}(\mathrm{epi}\,f,\mathrm{epi}\,g)=\inf\left\{\eta>0: \inf_{\mathbb{B}(\bm{x},\eta)}g\leq\max\{f(\bm{x}),-\rho\}+\eta,\;\forall\bm{x }\in[f\leq\rho]\cap\mathbb{B}(\bm{0},\rho)\right\},\]

_where \([f\leq\rho]\coloneqq\{\bm{x}\in\mathbb{R}^{n}:f(\bm{x})\leq\rho\}\)._

### Proof of Theorem 4.1

Before presenting the proof, we first introduce the following lemma.

**Lemma E.4** (Hoffman's Error Bound [12]).: _Consider the set \(\mathcal{S}\coloneqq\{\bm{x}\in\mathbb{R}^{n}:\bm{A}\bm{x}\leq\bm{b}\}\). There exists \(C>0\) such that for any \(\bm{x}\in\mathbb{R}^{n}\), one has_

\[\text{\rm dist}(\bm{x},\mathcal{S})\leq C\cdot\|(\bm{A}\bm{x}-\bm{b})_{+}\|_{ 2}.\]

For the sake of brevity, we denote

\[\bar{f}_{n}(\bm{S}) \coloneqq\|\bm{S}\|_{1,1}-\alpha\bm{1}^{\top}\log(\bm{S}\bm{1})+ \iota_{\mathbb{R}_{-}}(\|\bm{C}_{n}\bm{S}-\bm{S}\bm{C}_{n}\|_{F}-\delta_{n})+ \iota_{\mathcal{S}}(\bm{S}),\] \[\bar{f}(\bm{S}) \coloneqq\|\bm{S}\|_{1,1}-\alpha\bm{1}^{\top}\log(\bm{S}\bm{1})+ \iota_{\{0\}}(\|\bm{C}_{\infty}\bm{S}-\bm{S}\bm{C}_{\infty}\|_{F})+\iota_{ \mathcal{S}}(\bm{S}).\]

Hence, the optimization problem LogSpecT (resp. rLogSpecT) is equivalent to \(\inf\bar{f}\) (resp. \(\inf\bar{f}_{n}\)).

Now, we aim to use Lemma E.3 to bound \(\hat{\mathrm{d}}_{\rho}(\mathrm{epi}\,\bar{f},\mathrm{epi}\,\bar{f}_{n})\). Let \(\bm{S}\in\mathcal{S}\cap\mathbb{B}(\bm{0},\rho)\) satisfy

\[\bar{f}(\bm{S})\leq\rho\quad\text{and}\quad\bm{S}\bm{C}_{\infty}=\bm{C}_{ \infty}\bm{S}.\]

Then, we know that

\[\|\bm{S}\bm{C}_{n}-\bm{C}_{n}\bm{S}\|_{F}\leq 2\|\bm{S}\|_{F}\|\bm{C}_{n}-\bm{C} _{\infty}\|\leq 2\rho\|\bm{C}_{n}-\bm{C}_{\infty}\|\leq\delta_{n},\]

and consequently \(\bm{S}\) is in the domain of \(\bar{f}_{n}\). Then, it follows that for any \(\eta>0\), we have

\[\inf_{\mathbb{B}(\bm{S},\eta)}\bar{f}_{n}\leq\bar{f}_{n}(\bm{S})=\bar{f}(\bm{S })\leq\max\{\bar{f}(\bm{S}),-\rho\},\quad\forall\bm{S}\in[\bar{f}\leq\rho] \cap\mathbb{B}(\bm{0},\rho).\] (19)

Before verifying the reverse side of the Kenmochi condition, we first consider the non-emptiness of \([\bar{f}_{n}\leq\rho]\cap\mathbb{B}(\bm{0},\rho)\). Since

\[\delta_{n}\geq 2\rho\|\bm{C}_{n}-\bm{C}_{\infty}\|\geq 2\alpha m\|\bm{C}_{n}- \bm{C}_{\infty}\|,\]

it follows from Proposition D.1 that \(\|\bm{S}_{n}^{*}\|_{1,1}\leq\alpha m\leq\rho\) and \(f_{n}^{*}\leq f^{*}\leq\rho\), which implies that \([\bar{f}_{n}\leq\rho]\cap\mathbb{B}(\bm{0},\rho)\) is nonempty. Let \(\bm{S}_{n}\in[\bar{f}_{n}\leq\rho]\cap\mathbb{B}(\bm{0},\rho)\). Then, one has that

\[\bm{S}_{n}\in\mathcal{S}\ \ \text{and}\ \ \ \|\bm{C}_{n}\bm{S}_{n}-\bm{S}_{n}\bm{C}_{n }\|_{F}\leq\delta_{n}.\]

Hence, it follows that

\[\|\bm{C}_{\infty}\bm{S}_{n}-\bm{S}_{n}\bm{C}_{\infty}\|\leq 2\|\bm{S}_{n}\|_{F}\| \bm{C}_{\infty}-\bm{C}_{n}\|+\|\bm{C}_{n}\bm{S}_{n}-\bm{S}_{n}\bm{C}_{n}\|_{F} \leq 2\rho\|\bm{C}_{\infty}-\bm{C}_{n}\|+\delta_{n}.\]

Also, note that there exists \(\beta>0\) such that \((\bm{S}_{n}\bm{1})_{i}\geq\beta\) for all \(i\in[m]\) as \(\bar{f}_{n}\leq\rho\) and \(\|\bm{S}_{n}\|_{1,1}-\alpha\bm{1}^{\top}\log(\bm{S}_{n}\bm{1})\to\infty\) when \(\bm{S}_{n}\to\bm{0}\). Thus, applying Lemma E.4 to the linear system

\[\tilde{\mathcal{S}}\coloneqq\{\bm{S}\in\mathbb{R}^{m\times m}:\bm{S}\bm{C}_{ \infty}=\bm{C}_{\infty}\bm{S},\;\bm{S}\in\mathcal{S},\;(\bm{S}\bm{1})_{i}\geq \beta,\;\forall i\in[m]\}\]

yields that there exists \(\tilde{c}>0\) such that

\[\text{\rm dist}(\bm{S}_{n},\tilde{\mathcal{S}})\leq\tilde{c}\cdot(2\rho\|\bm{C}_ {\infty}-\bm{C}_{n}\|+\delta_{n}).\]

Hence, there exists \(\tilde{\bm{S}}\) in the domain of \(\bar{f}\) such that

\[\|\bm{S}_{n}-\tilde{\bm{S}}\|_{F}\leq\tilde{c}\cdot(2\rho\|\bm{C}_{\infty}-\bm{ C}_{n}\|+\delta_{n})\ \ \text{and}\ \ \ (\tilde{\bm{S}}\bm{1})_{i}\geq\beta,\ \forall i\in[m].\]Since the function \(\bm{S}\mapsto\|\bm{S}\|_{1,1}-\alpha\bm{1}^{\top}\log(\bm{S}\bm{1})\) is locally Lipschitz continuous when \((\bm{S}\bm{1})_{i}\geq\beta\), there exists \(L>0\) such that

\[\bar{f}(\tilde{\bm{S}})=\|\tilde{\bm{S}}\|_{1,1}-\alpha\bm{1}^{\top }\log(\tilde{\bm{S}}\bm{1}) \leq\|\bm{S}_{n}\|_{1,1}-\alpha\bm{1}^{\top}\log(\bm{S}_{n}\bm{1}) +L\|\bm{S}_{n}-\tilde{\bm{S}}\|_{F}\] \[=f_{n}(\bm{S}_{n})+L\|\bm{S}_{n}-\tilde{\bm{S}}\|_{F}\] \[\leq\bar{f}_{n}(\bm{S}_{n})+L\tilde{c}\cdot(2\rho\|\bm{C}_{\infty} -\bm{C}_{n}\|+\delta_{n}).\]

Setting \(c_{1}\geq\max\{1,L\}\cdot\tilde{c}\), one can obtain that for any \(\bm{S}_{n}\in[\bar{f}_{n}\leq\rho]\cap\mathbb{B}(\bm{0},\rho)\)

\[\inf_{\mathbb{B}(\bm{S}_{n},\eta)}\bar{f}\leq\bar{f}(\tilde{\bm{S}})\leq\bar{ f}_{n}(\bm{S}_{n})+c_{1}\cdot(2\rho\|\bm{C}_{\infty}-\bm{C}_{n}\|+\delta_{n}) \leq\max\{\bar{f}_{n}(\bm{S}_{n}),-\rho\}+\eta,\] (20)

where \(\eta\coloneqq c_{1}\cdot(2\rho\|\bm{C}_{\infty}-\bm{C}_{n}\|+\delta_{n})\). Combining inequality (19) and (20), we can conclude that

\[\hat{\mathrm{d}}_{\rho}(\operatorname{epi}\bar{f},\operatorname{epi}\bar{f}_{n} )\leq c_{1}\cdot(2\rho\|\bm{C}_{\infty}-\bm{C}_{n}\|+\delta_{n}).\] (21)

In order to derive the conclusion (i) and (ii), it remains to check the requirements in Lemma E.2. Since \(\rho\geq\alpha m\), the first statement of Proposition D.1 shows that the optimal solutions to \(\inf\bar{f}\) and \(\inf\bar{f}_{n}\) lie in \(\mathbb{B}(\bm{0},\rho)\). Since \(\rho\geq f^{*}\) and \(-\rho\leq\alpha m(1-\log\alpha)\), the second statement of the proposition shows that \(\inf\bar{f},\inf\bar{f}_{n}\in[-\rho,\rho]\). Hence, applying Lemma E.2 completes the proof of the first two statements.

To prove conclusion (iii), we first make the following two claims:

1. \(\mathcal{S}_{0}^{*}\bm{1}\) is a singleton, whose element is denoted by \(\bm{S}^{*}\bm{1}\),
2. For any \(\bar{\varepsilon}\in[0,\infty)\), there exists a \(\delta(\bar{\varepsilon})>0\) such that for all \(0\leq\varepsilon\leq\bar{\varepsilon}\) and \(\bm{S}_{\varepsilon}\in\mathcal{S}_{\varepsilon}^{*}\), one has that \[\|\bm{S}_{\varepsilon}\bm{1}-\bm{S}^{*}\bm{1}\|_{2}\leq\delta(\bar{\varepsilon} )\cdot\sqrt{\varepsilon}.\] (22)

Granting these and with the help of Theorem 4.1 (ii), we can derive that for all \(\bm{S}_{n}^{*}\in\mathcal{S}^{n,*}\)

\[\operatorname{dist}(\bm{S}_{n}^{*}\bm{1},\mathcal{S}_{0}^{*}\bm{1 })=\|\bm{S}_{n}^{*}\bm{1}-\bm{S}^{*}\bm{1}\|_{2} \leq\|\bm{S}_{n}^{*}\bm{1}-\bm{S}_{2\varepsilon_{n}}\bm{1}\|_{2}+ \|\bm{S}_{2\varepsilon_{n}}\bm{1}-\bm{S}^{*}\bm{1}\|_{2}\] \[\leq\sqrt{m}\operatorname{dist}(\bm{S}_{n}^{*},\mathcal{S}_{2 \varepsilon_{n}}^{*})+\|\bm{S}_{2\varepsilon_{n}}\bm{1}-\bm{S}^{*}\bm{1}\|_{2}\] \[\leq\tilde{c}_{1}\varepsilon_{n}+\tilde{c}_{2}\sqrt{\varepsilon_{ n}},\]

where \(\tilde{c}_{1}\), \(\tilde{c}_{2}\) are positive constants, and \(\bm{S}_{2\varepsilon_{n}}\in\mathcal{S}_{2\varepsilon_{n}}^{*}\) satisfies \(\|\bm{S}_{n}^{*}-\bm{S}_{2\varepsilon_{n}}\|_{F}=\operatorname{dist}(\bm{S}_{n }^{*},\mathcal{S}_{2\varepsilon_{n}}^{*})\) (whose existence is guaranteed since \(\mathcal{S}_{\varepsilon}^{*}\) is convex and compact). Hence,

\[\operatorname{dist}(\mathcal{S}^{n,*}\bm{1},\mathcal{S}_{0}^{*}\bm{1})\leq \tilde{c}_{1}\varepsilon_{n}+\tilde{c}_{2}\sqrt{\varepsilon_{n}}.\]

To proceed, it remains to prove the claims. Define an auxiliary function \(h:\mathbb{R}^{m}\to\mathbb{R}\) as \(h(\bm{x})=\sum_{i=1}^{m}x_{i}-\alpha\sum_{i=1}^{m}\log x_{i}\) for each \(\bm{x}\in\mathbb{R}_{+}^{m}\). Consider the following optimization problem:

\[\min_{\bm{x}} h(\bm{x})\] (23) s.t. \[\bm{x}\in\{\bm{S}\bm{1}\in\mathbb{R}^{m}\mid\bm{S}\text{ that is feasible for LogSpecT}\}.\]

For the sake of brevity, denote the \(\varepsilon\)-suboptimal solution set of (23) as \(\mathcal{H}_{\varepsilon}^{*}\). In the remaining part, we will first show that \(\mathcal{S}_{\varepsilon}^{*}\bm{1}=\mathcal{H}_{\varepsilon}^{*}\) and then, by the strict convexity of \(h\), the desired two claims hold.

The first step is to show that the optimal function value of the problem (23) satisfies \(h^{*}=f^{*}\). Since it is obvious that \(\tilde{\bm{x}}=\bm{S}^{*}\bm{1}\) is feasible for (23), \(h^{*}\leq h(\tilde{\bm{x}})=f(\bm{S}^{*})=f^{*}\). Suppose to the contrary that \(h^{*}<f^{*}\), from the fact that the objective function is coercive and continuous and the feasible set is closed, there exists \(\bm{\bar{S}}\) such that it is feasible for LogSpecT and \(\bm{x}^{*}=\bm{\bar{S}}\bm{1}\), where \(\bm{x}^{*}\) is an optimal solution to (23). Since \(h^{*}=h(\bm{x}^{*})=h(\bm{\bar{S}}\bm{1})=f(\bm{\bar{S}})\), this contradicts the fact that \(f(\bm{\bar{S}})\geq f^{*}\). Hence, \(h^{*}=f^{*}\). Next, we will show that \(\mathcal{S}_{\varepsilon}^{*}\bm{1}=\mathcal{H}_{\varepsilon}^{*}\). Consider any \(\varepsilon\)-suboptimal solution \(\bm{\bar{S}}\in\mathcal{S}_{\varepsilon}^{*}\), i.e.,

\[h(\bm{S}\bm{1})=f(\bm{S})\leq f^{*}+\varepsilon=h^{*}+\varepsilon.\]

Hence, \(\bm{S}\bm{1}\in\mathcal{H}_{\varepsilon}^{*}\) and it implies that \(\mathcal{S}_{\varepsilon}^{*}\bm{1}\subseteq\mathcal{H}_{\varepsilon}^{*}\). On the other hand, for any \(\varepsilon\)-suboptimal solution \(\bm{x}\in\mathcal{H}_{\varepsilon}^{*}\), there exists \(\bm{S}\) that is feasible for LogSpecT such that \(\bm{x}=\bm{S}\bm{1}\). Thus,

\[f(\bm{S})=h(\bm{x})\leq h^{*}+\varepsilon=f^{*}+\varepsilon.\]This implies that \(\bm{S}\in\mathcal{S}_{\varepsilon}^{*}\) and consequently \(\mathcal{H}_{\varepsilon}^{*}\subseteq\mathcal{S}_{\varepsilon}^{*}\bm{1}\). Hence, \(\mathcal{H}_{\varepsilon}^{*}=\mathcal{S}_{\varepsilon}^{*}\bm{1}\).

Since \(h\) is strictly convex, its optimal solution set \(\mathcal{H}_{0}^{*}\) is a singleton. Then, \(\mathcal{S}_{0}^{*}\bm{1}=\mathcal{H}_{0}^{*}\) is a singleton, which proves the first claim. For the second claim, we know that for any \(\bm{S}_{\varepsilon}\in\mathcal{S}_{\varepsilon}^{*}\) there exists \(\bm{x}_{\varepsilon}\in\mathcal{H}_{\varepsilon}^{*}\) such that

\[\|\bm{S}_{\varepsilon}\bm{1}-\bm{S}^{*}\bm{1}\|_{2}=\|\bm{x}_{\varepsilon}- \bm{x}^{*}\|_{2},\] (24)

where \(\bm{x}^{*}\in\mathcal{H}_{0}^{*}\). The coerciveness of \(h\) asserts that \(\bm{x}_{\varepsilon}\) and \(\bm{x}^{*}\) are bounded. This together with the fact that \(h\) is strongly convex on any bounded set, illustrates that there exists \(\mu>0\) such that

\[h(\bm{x}_{\varepsilon})\geq h(\bm{x}^{*})+\langle\nabla h(\bm{x}^{*}),\bm{x} _{\varepsilon}-\bm{x}^{*}\rangle+\frac{1}{\mu}\|\bm{x}_{\varepsilon}-\bm{x}^ {*}\|_{2}^{2}\geq h(\bm{x}^{*})+\frac{1}{\mu}\|\bm{x}_{\varepsilon}-\bm{x}^{*} \|_{2}^{2},\] (25)

where the second inequality comes from the global optimality of \(\bm{x}^{*}\). Combining (24) and (25) gives that

\[\|\bm{S}_{\varepsilon}\bm{1}-\bm{S}^{*}\bm{1}\|_{2}=\|\bm{x}_{\varepsilon}- \bm{x}^{*}\|_{2}\leq\sqrt{\mu(h(\bm{x}_{\varepsilon})-h(\bm{x}^{*}))}\leq \sqrt{\mu\varepsilon}.\]

This completes the proof of the claims.

### Proof of Corollary 4.4

Suppose to the contrary that there exists a sequence \(\{\bm{S}_{n}^{*}\}_{n}\), where the \(n\)th element is an optimal solution to rLogSpecT with sample size \(n\), such that

\[\mathrm{dist}(\bm{S}_{n}^{*},\mathcal{S}_{0}^{*})\not\to 0.\]

From Proposition D.1, we know that \(\{\bm{S}_{n}^{*}\}_{n}\) is bounded, and consequently, has a convergent subsequence. Without loss of generality, we may assume that the sequence itself is convergent and the limiting point is \(\bm{S}^{*}\). Note that

\[\|\bm{C}_{n}\bm{S}_{n}^{*}-\bm{S}_{n}^{*}\bm{C}_{n}\|_{F}\leq\delta_{n},\ \ \bm{C}_{n}\to\bm{C}_{\infty}\ \ \text{and}\ \ \delta_{n}\to 0.\]

Hence, \(\bm{C}_{\infty}\bm{S}^{*}=\bm{S}^{*}\bm{C}_{\infty}\). This indicates that \(\bm{S}^{*}\) is feasible for LogSpecT. Then, from Theorem 4.1, we know that \(f(\bm{S}_{n}^{*})=f_{n}^{*}\to f^{*}\), which leads to \(f(\bm{S}^{*})=f^{*}\) since \(f(\cdot)=\|\cdot\|_{1,1}-\alpha\bm{1}^{\top}\log(\cdot\bm{1})\) is continuous. Together with the fact that \(\bm{S}^{*}\) is feasible, we conclude that \(\bm{S}^{*}\) is an optimal solution to LogSpecT. This further implies that \(\mathrm{dist}(\bm{S}_{n}^{*},\mathcal{S}_{0}^{*})\to 0\), which is a contradiction.

### Proof of Lemma 4.7

Recall the generative model (1). Since \(\bm{w}\) follows a sub-Gaussian distribution, it can be shown that for every \(t>0\),

\[\mathbb{P}(\|\bm{x}\|_{2}>t)\leq\mathbb{P}\left(\|\bm{w}\|_{2}>\frac{t}{\| \mathcal{H}(\bm{S})\|}\right)\leq Ce^{-\mathrm{v}^{\prime}t^{2}},\]

for some positive constant \(v^{\prime}\), which means that \(\bm{x}\) also follows a sub-Gaussian distribution. Thus, due to the sub-Gaussian property, \(\|\bm{C}_{n}-\bm{C}_{\infty}\|\) can be explictly bounded by the following lemma.

**Lemma E.5** ([40, Proposition 2.1]).: _Consider sub-Gaussian, identical, independent random vectors \(\bm{x}_{1},\bm{x}_{2},\ldots,\bm{x}_{n}\in\mathbb{R}^{m}\) with \(n>m\). Then for all \(\varepsilon>0\), it follows that_

\[\mathbb{P}\left(\left\|\frac{1}{n}\sum_{i=1}^{n}\bm{x}_{i}\bm{x}_{i}^{\top}- \mathbb{E}[\bm{x}\bm{x}^{\top}]\right\|_{2}\leq\varepsilon\right)\geq 1-2e^{2m-l \varepsilon^{2}n},\]

_for some constant \(l>0\)._

Setting \(\varepsilon^{2}=(4/l)\log(2n)m/n\), Lemma E.5 indicates that with high probability (lower bounded by \(1-n^{-1}\)),

\[\|\bm{C}_{n}-\bm{C}_{\infty}\|\leq\mathcal{O}\left(\sqrt{\frac{\log n}{n}} \right).\]

## Appendix F Derivations of L-ADMM and Convergence Analysis

This section includes the details of L-ADMM for rLogSpecT.

### Proof of Proposition 5.1

Note that the minimization problem (7) is separable for \(\bm{Z}\) and \(\bm{q}\), and can be split into two subproblems:

\[\min_{\bm{Z}\in\mathbb{B}(\bm{0},\delta_{n})}\|\bm{C}_{n}\bm{S}^{(k) }-\bm{S}^{(k)}\bm{C}_{n}+\bm{\Lambda}^{(k)}/\rho-\bm{Z}\|_{F}^{2},\] (26) \[\min_{\bm{q}}\ -\alpha\bm{1}^{\top}\log\bm{q}+\bm{\lambda}_{2}^{(k) \top}(\bm{q}-\bm{S}^{(k)}\bm{1})+\frac{\rho}{2}\|\bm{q}-\bm{S}^{(k)}\bm{1}\|_{ 2}^{2}.\] (27)

For problem (26), the optimal solution is the projection of \(\bm{C}_{n}\bm{S}^{(k)}-\bm{S}^{(k)}\bm{C}_{n}+\bm{\Lambda}^{(k)}/\rho\) onto \(\mathbb{B}(\bm{0},\delta_{n})\), which is given by

\[\bm{Z}^{(k+1)}=\min\left\{1,\frac{\delta_{n}}{\|\tilde{\bm{Z}}\|_{F}}\right\} \tilde{\bm{Z}}\ \ \text{with}\ \ \tilde{\bm{Z}}=\bm{C}_{n}\bm{S}^{(k)}-\bm{S}^{(k)}\bm{C}_{n}+\bm{\Lambda}^{( k)}/\rho.\]

For problem (27), the first-order optimality condition gives

\[-\alpha 1/\bm{q}+\bm{\lambda}_{2}^{(k)}+\rho(\bm{q}-\bm{S}^{(k)}\bm{1})=0.\]

This together with the fact that the objective function is convex implies that

\[\bm{q}^{(k+1)}=\frac{\tilde{\bm{q}}+\sqrt{\tilde{\bm{q}}^{2}+4\alpha/\rho\bm{ 1}}}{2}\ \ \text{with}\ \ \tilde{\bm{q}}=\frac{1}{\rho}(\rho\bm{S}^{(k)}\bm{1}-\bm{\lambda}_{2}^{(k)}).\]

### Calculation of \(\Pi_{\mathcal{S}}(\cdot)\)

The projection of \(\bm{X}\) to \(\mathcal{S}\) can be calculated via an optimization problem:

\[\min_{\bm{S}} \ \|\bm{X}-\bm{S}\|_{F}^{2}\] s.t. \[\bm{S}^{\top}=\bm{S},\] \[S_{ii}=0,\ i=1,2,\ldots,m,\] \[S_{ij}\geq 0,\ \forall i,j,\]

which is equivalent to

\[\min \sum_{i<j}\left((X_{ij}-S_{ij})^{2}+(X_{ji}-S_{ij})^{2}\right)\] s.t. \[S_{ij}\geq 0,\ \forall i<j,\] \[S_{ii}=0,\ \forall i.\]

Hence

\[(\Pi_{\mathcal{S}}(\bm{X}))_{ij}=\begin{cases}\frac{1}{2}\max\{0,X_{ij}+X_{ji }\},&\quad i\neq j,\\ 0,&\quad i=j.\end{cases}\]

### Stopping criterion and updating rule of \(\rho\)

We follow the procedures in [3] to update \(\rho\) in each iteration. Similarly, we define the primal residual and dual residual as follows:

\[p_{\mathrm{res}}^{(k+1)} =\sqrt{\|\bm{Z}^{(k+1)}-\bm{C}_{n}\bm{S}^{(k+1)}+\bm{S}^{(k+1)} \bm{C}_{n}\|_{F}^{2}+\|\bm{q}^{(k+1)}-\bm{S}^{(k+1)}\bm{1}\|_{2}^{2}},\] \[d_{\mathrm{res}}^{(k+1)} =\rho^{(k)}\left(\bm{C}_{n}(\bm{S}^{(k+1)}-\bm{S}^{(k)})-(\bm{S}^ {(k+1)}-\bm{S}^{(k)})\bm{C}_{n}+\bm{1}^{\top}(\bm{S}^{(k+1)}-\bm{S}^{(k)})\bm{ 1}\right).\]

The aim of updating \(\rho\) is to control the decaying speed of \(p_{\mathrm{res}}\) and \(d_{\mathrm{res}}\) such that their difference is not too large. To this end, we update \(\rho\) adaptively following the scheme:

\[\rho^{(k+1)}\coloneqq\begin{cases}2\rho^{(k)},&\text{if }p_{\mathrm{res}}^{(k+1)}>5d_{ \mathrm{res}}^{(k+1)},\\ \rho^{(k)}/2,&\text{if }d_{\mathrm{res}}^{(k+1)}>5p_{\mathrm{res}}^{(k+1)},\\ \rho^{(k)},&\text{otherwise}.\end{cases}\]

When \(p_{\mathrm{res}}\) and \(d_{\mathrm{res}}\) are both smaller than the threshold \(\varepsilon=10^{-5}\), we stop the algorithm.

### Convergence analysis

Define \(\bm{D}\coloneqq\mathrm{Diag}(\bm{1}_{m}^{\top},\dots,\bm{1}_{m}^{\top})\in\mathbb{ R}^{m\times m^{2}}\). Then, \(\bm{D}\) satisfies \(\bm{D}\mathrm{vec}(\bm{S})=\bm{S}\bm{1}\) and \(\|\bm{D}^{\top}\bm{D}\|=m\). Denote

\[\bm{Q}\coloneqq\tau\bm{I}-\bm{D}^{\top}\bm{D}-\bm{A}_{n}^{\top}\bm{A}_{n}.\]

Then the linearized ADMM update (8) of \(\bm{S}\) can be written as:

\[\min_{\bm{S}}\ L(\bm{S})+\frac{\rho}{2}\|\mathrm{vec}(\bm{S})-\mathrm{vec}( \bm{S}^{(k)})\|_{\bm{Q}},\]

where \(\|\bm{x}\|_{\bm{Q}}\coloneqq\bm{x}^{\top}\bm{Q}\bm{x}\). Since \(\tau>m+\|\bm{A}_{n}\|^{2}\), we know that \(\bm{Q}\) is positively definite. Consequently, by treating \((\bm{Z},\bm{q})\) as one variable, we can apply Theorem 4.2 in [45] and directly obtain the result.

## Appendix G More Experiments and Discussions on Synthetic and Real Data

### Influence of graph filters

To make a fair comparison between rSpecT and rLogSpecT, we test rSpecT on BA graphs with the same graph filters and the results are reported in Figure 6. It is obvious that rSpecT fails in these cases and cannot benefit from the increase in sample size. This is reasonable since SpecT fails on BA graphs as indicated in Figure 3, let alone the approximation formulation rSpecT.

We further test rLogSpecT on ER graphs with different numbers of signals observed. The parameter \(\delta_{n}\) is set as \(20\sqrt{\log n/n}\) and the results are reported in Figure 7. The figure shows that for graph filters that are not high-pass, rLogSpecT can achieve nearly perfect recovery when the sample size is large enough. Also, compared with the performance on BA graphs, rLogSpecT works better on ER graphs. This observation is in accordance with the conclusion from Figure 3 that LogSpecT performs better on ER graphs than BA ones. We further notice that the difference between the low-pass graph filter and the high-pass one is huge. To check the conjecture that rLogSpecT generally performs better on low-pass graph filters, we choose different graph filters \(\exp(t\bm{S})\) with \(t\) ranging from \(-2\) to \(2\) and conduct the experiments on ER graphs. When the graph shifting operator is the adjacency matrix, the positive low-pass parameter \(t\) corresponds to low-pass graph filters and the negative \(t\) corresponds to the high-pass ones [26, 11]. We omit the case when \(t=0\) since this filter does not contain any graph information (note that \(\exp(0\bm{S})=\bm{I}\)).

We then repeat the experiments for 50 times and report the average results in Figure 8. The comparison between the performance of low-pass graph filters and high-pass graph filters indicates that the low-pass graph filters generally outperforms the high-pass ones. A closer look at the results shows that the performance grows faster when the absolute value of \(t\) is smaller. And eventually, the graph filter with smaller absolute value of \(t\) prevails. This observation is interesting since Figure 3 indicates that the choice of graph filters has few impacts on the model performance. One explanation is that both low-pass graph filters and high-pass graph filters attenuate some frequencies of the graph and the larger absolute value of \(t\) leads to the more loss of information carried by finite signals.

Figure 6: Performance of rSpecT on BA graphs. Figure 7: rLogSpecT on ER graphs with \(\delta_{n}=20\sqrt{\log n/n}\).

### Experiments on USPS dataset

USPS dataset is a handwritten digit dataset. As shown in [25], it is nearly stationary with respect to the nearest neighbour graph. This dataset collects images of handwritten digits. In the experiment, each pixel is viewed as a node and the value on the pixel is view as the graph signal. We follow the approach in [25] to construct the 20 nearest neighbour graph, on which the data is verified to be nearly stationary. More specifically, we pick the 1296 digit 1 images. The weights between two nodes are decided by the Gaussian radial basis function. It turns out that the stationarity measure \(s:=\|\operatorname{diag}(\bm{U}^{\top}\bm{C}_{n}\bm{U})\|_{2}/\|\bm{U}^{\top} \bm{C}_{n}\bm{U}\|_{F}\) equals 0.78 in this dataset. Here \(\bm{U}\) is the eigen-matrix of the constructed graph and \(\bm{C}_{n}\) is the covariance matrix of the observed graph signals. We view the 20 nearest neighbour graph as the groundtruth and compare the learned graph from rLogSpecT with it. We present the subgraphs consisting of the top 10 nodes with the largest degrees in the two graphs respectively in Figure 9. The F-measure of these two subgraphs is 0.96. This result corroborates the efficiency of our proposed rLogSpecT model.

Figure 8: Effect of Low-Pass Parameter: different performance of graph filters \(\exp(t\bm{S})\) with \(t\) ranging from \(-2\) to \(2\).

Figure 9: Graph Learning on USPS dataset. (**Left**: subgraph of the symmetric 20 nearest neighbour graph. **Right**: subgraph of the learned graph from rLogSpecT. The F-measure is 0.96)