# \(\epsilon\)-Softmax: Approximating One-Hot Vectors for

Mitigating Label Noise

Jialiang Wang\({}^{1}\)1

Xiong Zhou\({}^{1}\)1

Deming Zhai\({}^{1}\)

Junjun Jiang\({}^{1}\)

Xiangyang Ji\({}^{2}\)

Xianming Liu\({}^{1}\)\({}^{\dagger}\)

\({}^{1}\)Faculty of Computing, Harbin Institute of Technology

\({}^{2}\)Department of Automation, Tsinghua University

cswjl@stu.hit.edu.cn\({}^{*}\), cszx@hit.edu.cn\({}^{*}\), csxm@hit.edu.cn\({}^{\dagger}\)

Equal contribution \({}^{\dagger}\)Corresponding author

###### Abstract

Noisy labels pose a common challenge for training accurate deep neural networks. To mitigate label noise, prior studies have proposed various robust loss functions to achieve noise tolerance in the presence of label noise, particularly symmetric losses. However, they usually suffer from the underfitting issue due to the overly strict symmetric condition. In this work, we propose a simple yet effective approach for relaxing the symmetric condition, namely \(\epsilon\)-\(\mathbf{softmax}\), which simply modifies the outputs of the softmax layer to approximate one-hot vectors with a controllable error \(\epsilon\). Essentially, \(\epsilon\)-\(\mathbf{softmax}\)_not only acts as an alternative for the softmax layer, but also implicitly plays the crucial role in modifying the loss function_. We prove theoretically that \(\epsilon\)-\(\mathbf{softmax}\) can achieve noise-tolerant learning with controllable excess risk bound for almost any loss function. Recognizing that \(\epsilon\)-\(\mathbf{softmax}\)-enhanced losses may slightly reduce fitting ability on clean datasets, we further incorporate them with one symmetric loss, thereby achieving a better trade-off between robustness and effective learning. Extensive experiments demonstrate the superiority of our method in mitigating synthetic and real-world label noise. The code is available at https://github.com/cswjl/eps-softmax.

## 1 Introduction

In recent years, deep neural networks (DNNs) have achieved remarkable advancements across various machine learning tasks [1; 2]. Despite its significant success, the prevalence of noisy labels in real-world datasets is a pervasive issue, often stemming from human bias or a lack of relevant professional knowledge [2]. The application of supervised learning methods directly to data with noisy labels consistently results in a decline in model performance [3]. Moreover, the ability to generalize from weak learners plays a pivotal role in the alignment of large language models [4]. Consequently, the pursuit of noise-tolerant learning has emerged as a compelling and significant challenge within the domain of weakly supervised learning, garnering increased attention in recent years [5; 6; 7; 8].

The literature presents several strategies for remedying this issue, with the design of robust loss functions standing out as a particularly popular approach due to its simplicity and broad applicability. Some previous works [9; 10; 5] theoretically proved that a loss function is noise-tolerant to label noise under mild conditions if it is symmetric:

\[\sum_{k=1}^{K}L(f(\mathbf{x}),k)=C,\quad\forall\mathbf{x}\in\mathcal{X},\forall f \in\mathcal{H}\] (1.1)

where \(k\in[K]\) is the label corresponding to each class, \(C\) is a constant, and \(\mathcal{H}\) is the hypothesis class.

Furthermore, Asymmetric Loss Functions (ALFs) [7] are proposed as an extension of symmetric losses, which are designed for clean-label-dominant noise. However, both symmetric and asymmetriclosses, such as Mean Absolute Error (MAE) [5] and Asymmetric Unhinged Loss (AUL) [7], encounter the underfitting problem and prove challenging to optimize [5; 6; 7]. The fitting ability of existing symmetric loss functions is constrained by the overly strict symmetric condition in Equation 1.1[7]. Some approaches aim to improve the classical symmetric loss MAE by incorporating the robustness of the MAE and the rapid convergence of the Cross Entropy (CE). Examples include Generalized Cross Entropy (GCE) [11], Symmetric Cross Entropy (SCE) [12], and Jensen-Shannon Divergence Loss (JS) [13]. However, these loss functions often mechanically select an intermediate value between the derivatives of CE and MAE, essentially representing a trade-off between fitting ability and robustness. This prompts a crucial question: _How can we simultaneously achieve both robustness and effective learning?_

Zhou et al. [14] proposed an alternative approach to achieve the symmetric condition, diverging from the development of a new robust loss function. By restricting the hypothesis class \(\mathcal{H}\), which restricts the outputs of the prediction function \(f\) to one-hot vectors, any loss function can inherently become symmetric, i.e., \(\sum_{k=1}^{K}L(f(\mathbf{x}),k)=C,\forall\mathbf{x}\in\mathcal{X},\forall L \in\mathcal{L}\). However, a notable challenge arises from the fact that directly mapping outputs to one-hot vectors constitutes a non-differentiable operation. Accordingly, the crux of the matter lies in formulating an effective method to constrain the outputs to one-hot vectors. Previous attempts, such as temperature-dependent softmax [14], sparseness constraint [15], sparse regularization [14], and variance enlargement [16], have aimed to approximate one-hot vectors through the application of regularization methods. Nevertheless, these methods lack predictability, fail to achieve a quantitative approximation to one-hot vectors, and exhibit limited effectiveness, particularly at higher noise rates. Up to this point, a reliable approach for rigorously enforcing one-hot vector outputs remains elusive. Addressing this gap continues to pose a significant challenge in realizing the symmetric condition.

In this paper, we present a simple yet effective and theoretically sound approach for approximating outputs to one-hot vectors, which we term \(\epsilon\)-\(\mathbf{softmax}\). This method serves as a valuable alternative to the conventional softmax function in mitigating label noise. The distinctive attribute of \(\epsilon\)-\(\mathbf{softmax}\) lies in its guarantee to possess a controllable approximation error \(\epsilon\) to one-hot vectors, thus achieving perfect constraint for the hypothesis class. This approach is universally applicable across diverse models and loss functions, as it only needs to implement a simple layer resembling softmax. Specifically, the process of applying our \(\epsilon\)-\(\mathbf{softmax}\) is outlined as follows:

\[\begin{array}{ll}\boxed{\mathbf{Step\ 1.}}&\mathbf{p}(\cdot|\mathbf{x}) \leftarrow\mathbf{softmax}(h(\mathbf{x})),\\ \mathbf{Step\ 2.}&p_{t}\gets p_{t}+m,\text{ where }t=\arg\max_{k\in[K]}p_{k} \\ \mathbf{Step\ 3.}&\mathbf{p}(\cdot|\mathbf{x})\leftarrow\mathbf{p}(\cdot| \mathbf{x})/(m+1).\end{array}\]

Herein, \(\mathbf{p}(\cdot|\mathbf{x})\) represents the prediction probabilities, \(p_{k}\) denotes the \(k\)-th element of the vector \(\mathbf{p}(\cdot|\mathbf{x})\), and \(h(\mathbf{x})\) denotes the logits. Step 1 obtains the original predictions by the softmax function. Step 2 involves a hyperparameter \(m\geq 0\) to amplify the maximum term in the predictions with a controllable approximation error to one-hot vectors. Step 3 performs a normalization to make predictions sum to one, which also reduces the values of non-maximum terms.

The above description underscores that \(\epsilon\)-\(\mathbf{softmax}\) as a plug-and-play module applicable to any classifier incorporating a softmax layer. Through the adjustment of the parameter \(m\), our approach allows for the quantitative approximation of output to one-hot vectors, and thus owns the ability for mitigating label noise in classification. The main contributions of our work are highlighted as follows:

* We propose a simple yet effective scheme, \(\epsilon\)-\(\mathbf{softmax}\), for mitigating label noise. This scheme operates as a plug-and-play module, seamlessly integrating with any classifier that incorporates a softmax layer through just two additional lines of code.
* We offer rigorous theoretical analyses, which indicate that \(\epsilon\)-\(\mathbf{softmax}\) is capable of controllably approximating one-hot vectors. Consequently, \(\epsilon\)-\(\mathbf{softmax}\)-enhanced loss functions can achieve noise-tolerant learning and Bayes optimal top-\(k\) error.
* We develop practical loss functions that enhance noise-tolerant learning. These include integration with MAE, achieving a better trade-off between robustness and effective learning. Extensive experimental results demonstrate the superiority of our method.

## 2 Preliminary

Problem Formulation.In a typical supervised classification scenario, let \(\mathcal{X}\subset\mathbb{R}^{d}\) represent the \(d\)-dimensional input space, and \(\mathcal{Y}=[K]=\{1,2,...,K\}\) is the label space, where \(K\) is the number of classes. We are provided with a labeled dataset \(\mathcal{S}=\{(\mathbf{x}_{n},y_{n})\}_{n=1}^{N}\), where each \((\mathbf{x}_{n},y_{n})\) is drawn \(i.i.d.\) from an underlying distribution \(\mathcal{D}\) over \(\mathcal{X}\times\mathcal{Y}\). The classifier \(f\) is a mapping from the sample space to the label space, the prediction label \(\hat{y}=\arg\max_{k}f(\mathbf{x})_{h}\). Here, the prediction function \(f:\mathcal{X}\rightarrow\Delta_{K}\) estimates the probability \(\mathbf{p}(\cdot|\mathbf{x})\), and \(\Delta_{K}=\{\mathbf{u}\in[0,1]^{K}:\mathbf{1}^{\top}\mathbf{u}=1\}\) represents the probability simplex. Typically, the function \(f\) is expressed as \(f=\mathbf{softmax}\circ h\), where \(h\) denotes the logits input to the softmax layer. In the context of deep learning, \(h\) is commonly a neural network. The objective or loss function is defined as a measure of distance \(L:\Delta_{K}\times\Delta_{K}\rightarrow\mathbb{R}\). For a classification problem, the loss function is characterized by \(L(\mathbf{u},\mathbf{e}_{y})\), where \(\mathbf{e}_{y}\) represents the one-hot vector with its \(y\)-th element set to 1. In this study, we consider the loss functional \(\mathcal{L}\), where \(\forall L\in\mathcal{L}\), \(L(\mathbf{u},\mathbf{v})=\sum_{k=1}^{K}\ell(u_{k},v_{k})\) with a basic loss function \(\ell\). For brevity, we slightly abuse notation by defining \(L(\mathbf{u},k)=L(\mathbf{u},\mathbf{e}_{k})\).

Label Noise Model.In the context of learning with noisy labels, the accessible training set is the noisy counterpart \(\tilde{\mathcal{S}}=\{(\mathbf{x}_{n},\tilde{y}_{n})\}_{n=1}^{N}\) rather than the clean set \(\mathcal{S}\). We characterize the noise corruption process as the flipping of the clean label of \(\mathbf{x}\) into its noisy version \(\tilde{y}\) with a probability denoted as \(\eta_{\mathbf{x},\tilde{y}}=p(\tilde{y}|\mathbf{x},y)\). \(\eta_{\mathbf{x}}=\sum_{k\neq y}\eta_{\mathbf{x},k}\) denotes the noise rate for \(\mathbf{x}\). Our focus is on two prevalent types of label noise [6; 7] :

- _Symmetric or uniform noise:_\(\eta_{\mathbf{x},y}=1-\eta\) and \(\eta_{\mathbf{x},k\neq y}=\frac{\eta}{K-1}\),

- _Asymmetric or class-conditional noise:_\(\eta_{\mathbf{x},y}=1-\eta_{y}\) and \(\sum_{k\neq y}\eta_{\mathbf{x},k}=\eta_{y}\),

where \(\eta_{\mathbf{x}}=\eta\) for symmetric noise, \(\eta_{\mathbf{x}}=\eta_{y}\) denotes the noise rate for the \(y\)-th class, and \(\eta_{\mathbf{x},i}\) is not necessarily equal to \(\eta_{\mathbf{x},j}\), \(i\neq j\) for asymmetric noise.

We also empirically consider learning with human-annotated noisy labels.

Expected Risk and Noise Tolerance.In learning with clean labels, given a loss function \(L\in\mathcal{L}\) and a prediction function \(f\), the expected risk with respect to \(f\) is defined as: \(\mathcal{R}_{L}(f)=\mathbb{E}_{(\mathbf{x},y)\sim\mathcal{D}}[L(f(\mathbf{x}),y)]\). The objective is to learn an optimal classifier \(f^{*}\) that minimizes the expected risk, i.e., \(f^{*}\in\arg\min_{f\in\mathcal{F}}\mathcal{R}_{L}(f)\).

In the case of learning with noisy labels, the corresponding noisy expected risk with respect to \(f\) is defined as:

\[\mathcal{R}_{L}^{\eta}(f)=\mathbb{E}_{\mathcal{D}}\big{[}(1-\eta_{\mathbf{x}} )L(f(\mathbf{x}),y)+\sum_{k\neq y}\eta_{\mathbf{x},k}L(f(\mathbf{x}),k)\big{]},\] (2.1)

where \(\sum_{k\neq y}\eta_{\mathbf{x},k}L(f(\mathbf{x}),k)\) is the noisy part that usually poses challenges in training accurate DNNs.

A loss function \(L\) is claimed to be _noise-tolerant_ if the global minimizer \(f_{\eta}^{*}\) of \(\mathcal{R}_{L}^{\eta}(f)\) also minimizes \(\mathcal{R}_{L}(f)\), that is, \(f_{\eta}^{*}\in\arg\min_{f}\mathcal{R}_{L}(f)\).

All-\(k\) Consistency.Consistency is an important property of a loss function. A standard consistency is for achieving Bayes optimal top-1 error. We consider much stronger consistency for achieving Bayes optimal top-\(k\) error for any \(k\in[K]\). To this end, we introduce some definitions about top-\(k\) consistency [17; 8].

For any vector \(\mathbf{f}\in\mathbb{R}^{K}\), we let \(r_{k}(\mathbf{f})\) denote a top-\(k\) selector that selects the \(k\) indices of the largest entries of \(\mathbf{f}\) by breaking ties arbitrarily. Given a data \((\mathbf{x},y)\), its top-\(k\) error is defined as \(\text{err}_{k}(f,\mathbf{x},y)=\mathbb{I}(y\notin r_{k}(f(\mathbf{x})))\). The goal of a classification algorithm under the top-\(k\) error metric is to learn a predictor \(f\) that minimizes the \(\text{err}_{k}\) expected risk: \(\mathcal{R}_{\text{err}_{k}}(f)=\mathbb{E}_{(\mathbf{x},y)\sim\mathcal{D}}[ \text{err}_{k}(f,\mathbf{x},y)]\).

For a fixed \(k\in[K]\), a loss function \(L\) is top-\(k\) consistent if for any sequence of measurable functions \(f:\mathcal{X}\rightarrow\Delta_{K}\), we have the global minimizer \(f^{*}\) of \(\mathcal{R}_{L}(f)\) also minimizes \(\mathcal{R}_{\text{err}_{k}}(f)\), that is, \(f^{*}\in\arg\min_{f}\mathcal{R}_{\text{err}_{k}}(f)\). If the above holds for all \(k\in[K]\), it is referred to as _All-\(k\) consistency_.

Methodology and Theoretical Investigation

The symmetry condition in Equation 1.1, theoretically ensures that a symmetric loss function can be noise-tolerant [5]. Existing methods primarily focus on designing new loss functions. Those derived based on this design principle exhibit drawbacks, such as being challenging to optimize [5; 6] and prone to encounter the gradient explosion problem [7]. In this work, we take an alternative approach by proposing to constrain the hypothesis class \(\mathcal{H}\) such that any loss functions will be approximately symmetric thereby rendering them robust to label noise.

### Robustness

We introduce \(\epsilon\)**-softmax**x to make the output \(f(\mathbf{x})\) approximate one-hot vectors. The implementation of \(\epsilon\)**-softmax**x is easy to follow, as outlined in the gray box of the Introduction Section 1, requiring just two additional lines of code alongside the standard softmax layer. This underscores that \(\epsilon\)**-softmax**x is a plug-and-play module applicable to any classifier that incorporates a softmax layer. In this following, we investigate in theory how \(\epsilon\)**-softmax**x realizes the controllable approximation of outputs to one-hot vectors, thereby enhancing the noise tolerance of any loss function.

Approximating One-Hot Vectors.We first introduce the concept of \(\epsilon\)-relaxation for a hypothesis class and then prove \(\epsilon\)**-softmax**x can strictly approximate outputs to one-hot vectors with a controllable error.

**Definition 1** (\(\epsilon\)-relaxation).: _Given a fixed vector \(\mathbf{v}\) and its permutation set \(\mathcal{P_{\mathbf{v}}}\)1, the \(\epsilon\)-relaxation of \(\mathcal{P_{\mathbf{v}}}\) is defined as the hypothesis class \(\mathcal{H_{\mathbf{v},\epsilon}}\), in which any hypothesis \(f\in\mathcal{H_{\mathbf{v},\epsilon}}\) outputs vectors in the \(\epsilon\)-ball of \(\mathcal{P_{\mathbf{v}}}\), i.e., \(\mathcal{H_{\mathbf{v},\epsilon}}=\{f:\min_{\mathbf{u}\in\mathcal{P_{\mathbf{v }}}}\|f(\mathbf{x})-\mathbf{u}\|_{2}\leq\epsilon,\forall\mathbf{x}\}\)._

Footnote 1: For example, consider the vector \(\mathbf{v}=[v_{1},v_{2}]\), its permutation set is defined as \(\mathcal{P_{\mathbf{v}}}=\{[v_{1},v_{2}],[v_{2},v_{1}]\}\).

Without loss of generality, we consider \(\mathbf{v}\) as a one-hot vector, which is common in machine learning, to facilitate the implementation and analysis. We then denote the permutation set of the one-hot vector as \(\mathcal{P_{\mathbf{e}_{1}}}\), where all elements are also one-hot vectors. In accordance with Definition 1, we can further derive that:

**Lemma 1**.: \(\epsilon\)**-softmax** _can achieve \(\epsilon\)-relaxation for one-hot vectors:_

\[\min_{\mathbf{u}\in\mathcal{P_{\mathbf{e}_{1}}}}\|f(\mathbf{x})-\mathbf{u}\| _{2}\leq\epsilon=\frac{\sqrt{1-1/K}}{m+1},\] (3.1)

_where \(f(\mathbf{x})=\epsilon\)**-softmax**x \(\circ h(\mathbf{x})\)._

Lemma 1 suggests that \(\epsilon\)**-softmax**x effectively enables \(f(\mathbf{x})\) to approximate one-hot vectors with a controllable error \(\frac{\sqrt{1-1/K}}{m+1}\).

Robustness Guarantee.We then establish theoretical guarantees for the robustness in mitigating label noise, where the constrained hypothesis class \(\mathcal{H_{\mathbf{e}_{1},\epsilon}}\) is considered.

Zhou et al. [14] established the excess risk bound [18] under symmetric noise, which holds when outputs fall within an \(\epsilon\)-relaxation of a permutation set. We prove a more comprehensive conclusion by considering asymmetric noise, of which symmetric noise is a special case.

**Theorem 1** (Excess Risk Bound under Asymmetric Noise).: _In a multi-class classification problem, if the loss function \(L\in\mathcal{L}\) satisfies \(|\sum_{k=1}^{K}(L(\mathbf{u}_{1},k)-L(\mathbf{u}_{2},k))|\leq\delta\) when \(\|\mathbf{u}_{1}-\mathbf{u}_{2}\|_{2}\leq\epsilon\), and \(\delta\to 0\) as \(\epsilon\to 0\), then for asymmetric label noise \(\eta_{\mathbf{x},k}<\left(1-\eta_{y}\right),\forall k\neq y\), if \(\mathcal{R}_{L}(f^{*})=0\), the excess risk bound for \(f\in\mathcal{H_{\mathbf{v},\epsilon}}\) can be expressed as_

\[\mathcal{R}_{L}(f^{*}_{\eta})\leq 2\delta+\frac{2c\delta}{a},\] (3.2)

_where \(c=\mathbb{E}_{\mathcal{D}}\left(1-\eta_{y}\right)\), \(a=\min_{\mathbf{x},k}(1-\eta_{y}-\eta_{\mathbf{x},k})\), \(f^{*}_{\eta}\) and \(f^{*}\) denote the global minimum of \(\mathcal{R}^{\eta}_{L}(f)\) and \(\mathcal{R}_{L}(f)\), respectively._

Theorem 1 demonstrate that under mild conditions for symmetric and asymmetric label noise, any loss function can be made noise-tolerant when the function \(f(\mathbf{x})\) increasingly approximates a permutation set \(\mathcal{P_{\mathbf{v}}}\) (i.e., \(\delta\to 0\) as \(\epsilon\to 0\)).

\(\epsilon\)-Softmax-Enhanced Loss Functions.Lemma 1 enable \(f(\mathbf{x})=\epsilon\)-\(\mathbf{softmax}\circ h(\mathbf{x})\) in closely approximating a one-hot vector, aligns with the principle outlined in Theorem 1 within the framework of the hypothesis class \(\mathcal{H}_{\mathbf{e}_{1},\epsilon}\). Hence, \(\epsilon\)-\(\mathbf{softmax}\) progressively enhances the noise tolerance of any loss function as the hyperparameter \(m\) approaches infinity (\(\epsilon\to 0\) as \(m\rightarrow\infty\) and the discrepancy \(\delta\to 0\)).

In this paper we consider CE loss and Focal loss (FL) [19]. We combine them with \(\epsilon\)-\(\mathbf{softmax}\), denoted as CE\({}_{\epsilon}\) and FL\({}_{\epsilon}\). \(\epsilon\)-\(\mathbf{softmax}\) approach is effective in adapting them to become more resilient to noise, ensuring better performance in the presence of label noise.

### Consistency

Fundamentally, \(\epsilon\)-\(\mathbf{softmax}\)_not only acts as an alternative for the softmax layer, but also plays the crucial role in modifying the loss function_. Consistency is an important property of a loss function. A standard consistency is for achieving Bayes optimal top-1 error. We show much stronger consistency for achieving Bayes optimal top-\(k\) error for any \(k\in[K]\) of the CE loss when combined with \(\epsilon\)-\(\mathbf{softmax}\). To establish the All-\(k\) consistency, we first introduce some existing results of sufficient condition of top-\(k\) consistency by top-\(k\) calibration [17; 8].

Let \(P_{k}(\mathbf{f},\mathbf{q})\) denote that \(\mathbf{f}\) is top-\(k\) preserving with respect to the underlying label distribution \(\mathbf{q}\), i.e., if for all \(l\in[K],q_{l}>q_{[k+1]}\Rightarrow f_{l}>f_{[k+1]}\), and \(q_{l}<q_{[k]}\Rightarrow f_{l}<f_{[k]}\). Here, \(q_{[k]}\) denotes he \(k\)-th greatest entry of \(\mathbf{q}\). For example, if \(\mathbf{q}=[0.2,0.4,0.4]\), then \(q_{[1]}=0.4,q_{[2]}=0.4,q_{[3]}=0.2\).

**Definition 2** (All-\(k\) calibrated).: _For a fixed \(k\in[K]\), a loss function \(L\) is called top-\(k\) calibrated if for all \(\mathbf{q}\in\Delta_{K}\) it holds that:_

\[\inf_{f\in\mathbb{R}^{K}:\neg P_{k}(f,\mathbf{q})}\mathcal{R}_{L}(f)>\inf_{f \in\mathbb{R}^{K}}R_{L}(f).\] (3.3)

_A loss function is called All-\(k\) calibrated if the loss function \(L\) is top-\(k\) calibrated for all \(k\in[K]\)._

Yang and Koyejo [17] demonstrate that suppose \(L\) is a nonnegative top-\(k\) calibrated loss function, then \(L\) is top-\(k\) consistent. Furthermore, Zhu et al. [8] show that if \(f^{*}=\arg\min_{f}R_{L}(f)\) is rank preserving with respect to \(\mathbf{q}\), then \(L\) is All-\(k\) calibrated. \(\mathbf{f}\) is called rank preserving w.r.t \(\mathbf{q}\), i.e., if for any pair \(q_{i}<q_{j}\) it holds that \(f_{i}<f_{j}\).

Then we establish comprehensive All-\(k\) consistency for CE\({}_{\epsilon}\) as follows:

**Lemma 2**.: _For one-hot label \(\mathbf{e}_{y}\), CE\({}_{\epsilon}\) is All-\(k\) calibrated and All-\(k\) consistency._

**Theorem 2**.: _For any label \(\mathbf{q}\in\Delta_{K}\), let \(y=\arg\max_{k\in[K]}q_{k}\) and \(t=\arg\max_{k\in[K]}p_{k}\), if \(t=y\) and \(q_{y}-\max_{k\neq y}q_{k}>\frac{m}{m+1}\), CE\({}_{\epsilon}\) is All-\(k\) calibrated and All-\(k\) consistency._

Lemma 2 and Theorem 2 mean that CE\({}_{\epsilon}\) performs well not only on the top-1 prediction, but also on the top-\(k\) predictions for any \(k\in[K]\). We show the All-\(k\) consistency property of different losses in Table 1, the consistency of other losses refer to [8].

### Gradient Analysis of \(\epsilon\)-Softmax.

To provide a comprehensive understanding of \(\epsilon\)-\(\mathbf{softmax}\) in mitigating label noise, we further analyze the gradient of the CE loss when combined with \(\epsilon\)-\(\mathbf{softmax}\). The gradient of \(L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)\) with respect to the model \(h(\mathbf{x})\) can be derived as follows:

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{\partial h(\mathbf{x })}=\left\{\begin{aligned} -\frac{1}{p_{y}+m}\cdot\frac{\partial p_{y}}{ \partial h(\mathbf{x})},& t=y\\ -\frac{1}{p_{y}}\cdot\frac{\partial p_{y}}{\partial h(\mathbf{x})},& t \neq y\end{aligned}\right.,\] (3.4)

where \(f=\epsilon\)-\(\mathbf{softmax}\circ h\), \(\mathbf{p}(\mathbf{x})=\mathbf{softmax}(h(\mathbf{x}))\) denotes the probabilities by standard softmax, and \(t=\arg\max_{k\in[K]}p_{k}\) is the class with the largest value in prediction probabilities.

Remark.The gradient in Equation 3.4 shows that CE\({}_{\epsilon}\) will be equivalent to the standard CE if the maximum prediction is not the target class (i.e., \(t\neq y\)), in which the division of \(m+1\) in probabilities

\begin{table}
\begin{tabular}{c|c c c c c c c c c c} \hline \hline Loss & CE & MAE & NCE & GCE & SCE & AUL & AGCE & AEL & LDR-KL & CE\({}_{\epsilon}\) \\ \hline All-\(k\) Consistency & ✓ & ✗ & ✗ & ✓ & ✓ & ✗ & ✗ & ✗ & ✓ & ✓ \\ \hline \hline \end{tabular}
\end{table}
Table 1: All-\(k\) consistency between different loss functions.

is omitted due to the partial deviation. Conversely, when the prediction class \(t\) matches the target class \(y\), the gradient undergoes dynamic scaling by \(\frac{p_{w}}{p_{\epsilon}+m}\). This scaling results in smaller gradients, akin to a form of soft early-stopping [20], which facilitates the mitigation of overfitting to noisy labels. Such a characteristic enables Deep Neural Networks (DNNs) to efficiently fit clean samples in the early phases of training [21; 20], while simultaneously preventing the overfitting of noisy labels in the later stages of the training process. As illustrated in Figure 1, \(\text{CE}_{\epsilon}\) achieves a stable test accuracy curve, even in the challenging scenario with 0.8 symmetric label noise, without overfitting to noisy labels. On the contrary, CE with the standard softmax tends to rapidly overfit to noisy labels after the early phase of training, leading to poor performance.

### Better Trade-off between Robustness and Effective Learning

It can be noted that the incorporation of \(\epsilon\)-\(\mathbf{softmax}\) somewhat sacrifices the fitting ability of the CE loss on clean datasets, as shown in Figure 1(a). Therefore, we need to enhance the fitting ability using additional techniques. Inspired by the Active Passive Loss [6], we propose to accommodate with the symmetric loss MAE. For instance, we formulate the combination of \(\text{CE}_{\epsilon}\) and MAE (a.k.a., \(\text{CE}_{\epsilon}\)+MAE) as follows

\[L_{\text{CE}_{\epsilon}+\text{MAE}}=\alpha\cdot L_{\text{CE}_{\epsilon}}+ \beta\cdot L_{\text{MAE}},\] (3.5)

ditto for \(\text{FL}_{\epsilon}\)+MAE.

**Lemma 3**.: _For any loss function \(L_{\epsilon}\) with \(\epsilon\)-\(\mathbf{softmax}\) and symmetric loss function \(L_{\text{symmetric}}\) defined in Equation 1.1, the excess risk bound of \(\alpha\cdot L_{\epsilon}+\beta\cdot L_{\text{symmetric}}\) is equivalent to that of \(\alpha\cdot L_{\epsilon}\)._

Lemma 3 suggests that the \(\epsilon\)-\(\mathbf{softmax}\)-enhanced loss function \(L_{\epsilon}\) can be seamlessly integrated with any symmetric loss function while not modifying the inherent robustness. As can be noticed in Figure 1(c) and Figure 1(d), \(\text{CE}_{\epsilon}\)+MAE not only depicts strong fitting capabilities but also achieves better noise tolerance. More interestingly, the test accuracy on clean datasets obtained by \(\text{CE}_{\epsilon}\)+MAE even exceeds that of the standard CE loss.

Strict Convexity of \(\text{CE}_{\epsilon}\)+MAE.To elaborate on how the combination of \(\text{CE}_{\epsilon}\) and MAE can overcome the underfitting issue, we conduct an in-depth analysis from the optimization perspective. When the prediction \(t=y\), the gradients of \(\text{CE}_{\epsilon}\), CE and MAE w.r.t. \(p_{y}\in(0,1]\), are \(-\frac{1}{p_{y}+m}\), \(-\frac{1}{p_{y}}\) and \(-2\), respectively. As can be seen, CE and \(\text{CE}_{\epsilon}\) are strictly convex, while MAE exhibits linearity. Moreover, CE has stronger convexity compared to \(\text{CE}_{\epsilon}\) (specifically, the gradient of CE changes more rapidly as \(1/p_{y}^{2}>1/(p_{y}+m)^{2}\)), rendering CE more susceptible to overfitting noisy labels while \(\text{CE}_{\epsilon}\) suffering from underfitting for large \(m\), as illustrated in Figure 1(a) and Figure 1(b). Conversely, owing to the linearity, MAE treats every sample equally, making it robust to label noise but leading to more training time for convergence [11]. Hence, the combination of \(\text{CE}_{\epsilon}\) and MAE, which notably forms a strictly convex function (where the convexity can be controlled by \(m\)), can provide better trade-off between robustness and effective learning.

Association with APL.Additionally, our proposed \(\text{CE}_{\epsilon}\)+MAE coincides with the concept of active and passive losses in [6]. Specifically, for a loss function denoted as \(L(f(\mathbf{x}),y)=\ell_{1}(f(\mathbf{x}),y)+\sum_{k\neq y}\ell_{2}(f(\mathbf{x }),k)\), \(L\) is active if \(\ell_{2}(f(\mathbf{x}),k)=0\) for any \(k\neq y\), and \(L\) is passive if \(\ell_{2}(f(\mathbf{x}),k)\neq 0\) for some \(k\neq y\). Active losses only explicitly maximize the target probability \(f(\mathbf{x})_{y}\), while passive losses also explicitly minimize non-target probabilities \(\{f(\mathbf{x})_{k}\}_{k\neq y}\). For example, CE is an active loss, while MAE is passive. Based on these two loss terms, Ma et al. [6] proposed to combine a robust active loss and a robust passive loss into an "Active Passive Loss" (APL) framework for improving

Figure 1: Test accuracies on CIFAR-10 under symmetric noise with different \(m\), where the red box represents the zoomed-in accuracies of the last 20 epochs. (a) and (b) illustrate \(\text{CE}_{\epsilon}\) with 0 (clean) and 0.8 noise rates, respectively. (c) and (d) illustrate \(\text{CE}_{\epsilon}\)+MAE (\(\alpha=0.01,\beta=5\)) similarly.

sufficient learning with underfitting losses. Note that CE\({}_{\epsilon}\) is also active, thus CE\({}_{\epsilon}\)+MAE coincides with the APL framework and further mitigates the underfitting issue.

To further validate CE\({}_{\epsilon}\)+MAE, we incorporate it with sample selection, pseudo-label prediction [22], and MixUp [23], culminating in a semi-supervised learning algorithm we term CE\({}_{\epsilon}\)+MAE (Semi). The algorithm details can be found in the Appendix C. In our experiments, we use "CE\({}_{\epsilon}\)+MAE (Semi)" to ensure a fair comparison with other hybrid methods with sample selection and semi-supervised learning (SSL). No additional techniques are utilized for "CE\({}_{\epsilon}\)+MAE".

## 4 Experiments

In this section, we conduct extensive experiments to validate the superiority of \(\epsilon\)-**softmax** in mitigating label noise. Complete experimental setting and results can be found in the Appendix D and E.

### Evaluation on Benchmark Datasets

We evaluate our proposed methods on benchmark datasets CIFAR-10 / CIFAR-100 [24] with synthetic label noise, following [6; 7].

Baselines.We consider several baseline methods for comparison, including Standard CE and FL [19]; MAE; GCE [11]; NLNL [25]; SCE [12]; APL [6], including NCE+MAE, NCE+RCE, and NFL+RCE; AFLs [7], including NCE+AEL, NCE+AGCE, and NCE+AUL; LDR-KL [8]; and LogitClip [26], including CE+LC.

\begin{table}
\begin{tabular}{c|c|c c c c|c c c c} \multirow{2}{*}{**CIFAR-10**} & \multirow{2}{*}{**Clean**} & \multicolumn{6}{c|}{**Symmetric Noise Rate (\(\eta\))**} & \multicolumn{6}{c}{**Asymmetric Noise Rate (\(\eta\))**} \\  & & 0.2 & 0.4 & 0.6 & 0.8 & 0.1 & 0.2 & 0.3 & 0.4 \\ \hline CE & 90.50u.35 & 75.47u.02.7 & 58.46u.01.2 & 39.16u.00.3 & 18.95u.03.8 & 65.98u.03.1 & 83.82u.004 & 79.35u.06.7 & 75.28u.05 \\ FL & 89.70u.24 & 74.50u.18 & 58.23u.04.0 & 38.69u.06 & 19.47u.7u.4 & 86.64u.01.2 & 83.08u.07 & 79.34u.03.7 & 74.68u.03.1 \\ GCE & 89.42u.21 & 86.87u.06 & 82.24u.25 & 68.43u.26 & 25.82u.1 & 83.84u.30 & 26.17u.02 & 80.72u.02.4 & 74.01u.53 \\ NLNL & 90.73u.20 & 73.70u.05 & 63.90u.04.4 & 50.68u.40 & 27.95u.34.5 & 88.54u.02.5 & 84.74u.00.8 & 81.26u.04.3 & 76.97u.05 \\ SCE & 91.30u.08 & 87.58u.05 & 79.47u.04 & 59.14u.07 & 25.88u.09 & 89.87u.02 & 86.48u.02.5 & 81.30u.18 & 74.99u.01 \\ NCE+MAE & 89.02u.20 & 86.79u.23 & 86.04u.14 & 75.93u.44 & 46.96u.07 & 88.80u.02.7 & 85.53u.08 & 81.10u.02.5 & 74.98u.08 \\ NCE+RCE & 91.03u.28 & 88.41u.26 & 85.13u.36 & 79.20u.06 & 55.28u.21.6 & 90.25u.08 & 88.11u.02.3 & 83.53u.08.18 & **79.43u.21** \\ NFL+RCE & 91.08u.29 & 89.00u.02.3 & 85.90u.10 & 79.79u.52 & 55.47u.23 & 89.99u.03.5 & 88.33u.02.6 & 85.27u.01.3 & 79.05u.05 \\ NCE+AUL & 91.06u.24 & 89.11u.07 & 85.79u.10 & 76.75u.20 & 57.59u.84 & 9.01u.82.02 & 88.30u.04 & 85.28u.04 & 79.14u.36 \\ NCE+AEGCE & 91.13u.11 & 89.00u.28 & 85.91u.10 & **80.36u.30** & 48.99u.84 & 89.99u.09 & 89.36u.01 & 88.57u.31u.2 & **79.28u.37** \\ NCE+AEL & 88.43u.25 & 88.64u.03 & 83.06u.27 & 75.15u.3 & 43.22u.46 & 87.59u.38 & 85.89u.04 & 82.87u.04.16 & 77.58u.12 \\ LDR-KL & 91.38u.35 & 89.01u.09 & 85.46u.01 & 74.93u.34 & 37.8u.80 & 90.24u.18 & 88.38u.02 & 85.03u.16 & 77.68u.07 \\ CE+LC & 90.06u.41 & 85.66u.02 & 79.18u.57 & 53.87u.05 & 21.04u.07 & 87.99u.06 & 84.01u.00 & 79.71u.51 & 74.34u.03 \\ \hline
**CE\({}_{\epsilon}\)+MAE** & 91.40u.12 & **89.29u.04** & **85.93u.10** & 79.52u.14 & **58.96u.70** & **90.30u.01** & **88.62u.18** & **85.66u.12** & 78.91u.02 \\
**FL\({}_{\epsilon}\)+MAE** & 91.11u.03 & **89.13u.25** & **86.15u.29** & **79.81u.27** & **58.02u.12** & **90.39u.15** & **88.40u.07** & 85.31u.17 & 79.04u.010 \\ \hline \hline \end{tabular} 
\begin{tabular}{c|c|c|c c c|c c c c} \multirow{2}{*}{*}{**CIFAR-100**} & \multirow{2}{*}{**Clean**} & \multicolumn{6}{c}{**Symmetric Noise Rate (\(\eta\))**} & \multicolumn{6}{c}{**Asymmetric Noise Rate (\(\eta\))**} \\  & & 0.2 & 0.4 & 0.6 & 0.8 & 0.1 & 0.2 & 0.3 & 0.4 \\ \hline CE & 70.79u.58 & 56.21u.04 & 39.31u.74 & 22.38u.74 & 7.33u.10 & 16.51u.00.74 & 58.26u.31 & 49.99u.04.54 & 41.15u.04 \\ FL & 70.58u.34 & 56.32u.41 & 40.83u.52 & 22.44u.54 & 7.68u.03 & 65.0u.04.6 & 58.12u.04 & 51.16u.32 & 41.46u.38 \\ GCE & 70.57u.25 & 64.55u.36 & 56.60u.61 & 45.19u.02 & 19.85u.08 & 63.94u.28 & 60.89u.06 & 53.36u.54 & 40.82u.05 \\ NLNL & 68.72u.06 & 46.99u.31 & 30.29u.61 & 16.60u.90 & 11.01u.24 & 29.5u.12 & 59.5u.12 & 59.10u.96 & 42.81u.13 & 35.10u.02 \\ SCE & 70.41u.20 & 52.53u.76 & 40.23u.29 & 21.44u.52 & 7.63u.04 & 64.54u.30 & 57.62u.00 & 75.71u.09 & 41.01u.04 \\ NCE+MAE & 67.69u.05 & 63.21u.04 & 57.91u.05 & 45.26u.04 & 32.72u.99 & 65.70u.04 & 62.87u.04 & 55.82u.19 & 41.86u.02 \\ NCE+RCE & 67.89u.47 & 64.60u.02 & 58.64u.10 & 45.25u.50 & 24.87u.05 & 62.02u.08 & 63.18u.03 & 55.05u.32 & 41.21u.06 \\ NPL+RCE & 68.28u.30 & 64.57u.03 & 57.66u.8u.04 & 47.45u.70 & 42.5u.32 & 40.51u.86 & 53.63u.00 & 55.33u.05 & 40.82u.07 \\ NCE+AUL & 69.55u.06Results.Table 2 presents the test accuracy of various loss functions under symmetric and asymmetric label noise. As can be seen, our proposed \(\epsilon\)-**softmax**-enhanced loss functions, CE\({}_{\epsilon}\)+MAE and FL\({}_{\epsilon}\)+MAE, demonstrate remarkable performance, ranking among the top-2 in most cases across both datasets. These methods consistently outperform others such as GCE, SCE, NLNL, NCE+MAE and LDR-KL, regardless of the noise rates. In scenarios of clean labels, CE\({}_{\epsilon}\)+MAE and FL\({}_{\epsilon}\)+MAE also exhibit strong fitting abilities, outperforming NCE+RCE and NCE+AGCE. In particular, on CIFAR-100 with 0.4 asymmetric noise, most robust loss functions have no effect, but our methods achieve over 48% accuracy, significantly outperforming all other methods. These findings underscore the robustness and effectiveness of \(\epsilon\)-**softmax**-enhanced loss functions, delivering their excellent performance in various noise scenarios.

Ablation Experiments.We perform detailed ablation experiments to further explore the role of each component and hyperparameter \(m\) in our CE\({}_{\epsilon}\)+MAE, experimental results are shown in Table 3. We can observe that CE will severely fit the noise label, and the symmetric loss MAE is difficult to optimize. CE+MAE (i.e., \(m=0\)) is a trade-off between robustness and fitting ability, increasing noise tolerance at the cost of reducing fitting ability on clean labels, consistent with previous works [11, 12, 13]. In particular, our CE\({}_{\epsilon}\)+MAE shows remarkable properties. As the parameter \(m\) experiences a moderate increase, CE\({}_{\epsilon}\)+MAE not only achieves noise tolerance for symmetric and asymmetric noise, but also achieves effective learning for the clean scenario. Additionally, the experimental results suggest that strict constraints are better suited for symmetric noise, while looser constraints are more effective for asymmetric noise.

Visualization.We conduct a further analysis to compare the effectiveness of CE\({}_{\epsilon}\)+MAE and traditional CE in learning representations. We train models with different label noise and use the trained models to extract feature representations of the test set by t-SNE [27]. The visualizations for CIFAR-10 symmetric noise are depicted in Figure 2. Notably, the embeddings generated by CE show evident overfitting to label noise, as seen in the blending of embeddings from distinct classes. In sharp contrast, embeddings from the CE\({}_{\epsilon}\)+MAE method consistently form clear, well-separated clusters, demonstrating its superior ability to learn robust and distinct representations under noisy label conditions.

### Evaluation on Human-Annotated Datasets

We further conduct comparison studies on human-annotated datasets CIFAR-10N/CIFAR-100N [28], following the experiment setting in [28].

\begin{table}
\begin{tabular}{c|c|c|c|c} \hline \hline \multirow{2}{*}{**CIFAR-100**} & \multirow{2}{*}{**Clean**} & \multicolumn{2}{c|}{**Symmetric**} & \multicolumn{1}{c}{**Asymmetric**} \\  & & 0.4 & 0.8 & 0.4 \\ \hline CE & 70.79±0.58 & 39.31±0.74 & 73.33±0.10 & 41.15±1.04 \\ MAE & 5.31±1.19 & 2.78±1.68±1.23±0.98 & 3.11±0.26 \\ CE\({}_{\epsilon}\)+MAE (\(m=0\)) & 69.3±0.51 & 37.00±0.49 & 11.65±0.18 & 41.53±0.97 \\ CE\({}_{\epsilon}\)+MAE (\(m=1e2\)) & 70.55±0.47 & 39.39±0.77 & 13.05±0.58 & **48.51±0.36** \\ CE\({}_{\epsilon}\)+MAE (\(m=1e4\)) & 70.83±0.18 & **59.20±0.42** & **26.30±0.46** & 40.36±0.96 \\ CE\({}_{\epsilon}\)+MAE (\(m=1e5\)) & 67.72±0.88 & 56.41±0.22 & 22.14±0.56 & 7.56±1.10 \\ \hline \hline \end{tabular}
\end{table}
Table 3: Ablation experiments on CIFAR-100. The results “mean\(\pm\)std” are reported over 3 random runs and the best results are **boldfaced**. If \(m=0\), CE\({}_{\epsilon}\)+MAE equals CE+MAE.

Figure 2: Visualizations of learned representations on CIFAR-10 with symmetric label noise. The x-axis and y-axis represent the first and second dimensions of the 2D embeddings, respectively.

[MISSING_PAGE_FAIL:9]

Results.In Table 5, we showcase the accuracies achieved on WebVision, ILSVRC12 and Clothing1M by various leading methods. Notably, our CE\({}_{\epsilon}\)+MAE method outshines others, achieving the highest results on all real-world datasets. It surpasses CE by approximately 5.5% on WebVision and 6.5% on ILSVRC12. For Clothing1M, we finetune a pretrained ResNet-50, so the differences between the methods are relatively small, but our method still achieves the best accuracy. These results underline the robustness and efficacy of the \(\epsilon\)-**softmax**-enhanced loss function in real-world scenarios.

## 5 Conclusion

In this paper, we introduced \(\epsilon\)-**softmax**ax, a simple yet effective and theoretically sound scheme for noise-tolerant learning. Our method is not only easy to implement but also can be seamlessly integrated with any softmax-based DNNs, requiring just two additional lines of code. Our rigorous and comprehensive theoretical analysis reveals that \(\epsilon\)-**softmax** effectively alleviates the common issue of overfitting to noisy labels. Furthermore, we propose to incorporate \(\epsilon\)-**softmax**-enhanced loss functions with MAE, achieving better trade-off between effective learning and robustness. Extensive experimental results demonstrate the superior performance of our method in mitigating label noise.

## Broader Impacts

This work has the potential to advance the development of machine learning methods that can be deployed in contexts where it is costly to gather accurate annotations. This is an important issue in applications such as medicine, where machine learning has great potential societal impact. This work will not have negative social impacts.

## Acknowledgements

This work was supported by National Natural Science Foundation of China under Grants 92270116, 62071155 and 632B2031, and in part by the Fundamental Research Funds for the Central Universities (Grant No. HIT.DZJJ.2023075).

## References

* [1] Yann LeCun, Yoshua Bengio, and Geoffrey Hinton. Deep learning. _nature_, 521(7553):436-444, 2015.
* [2] Bo Han, Quanming Yao, Tongliang Liu, Gang Niu, Ivor W Tsang, James T Kwok, and Masashi Sugiyama. A survey of label-noise representation learning: Past, present and future. _arXiv preprint arXiv:2011.04406_, 2020.
* [3] Devansh Arpit, Stanislaw Jastrzebski, Nicolas Ballas, David Krueger, Emmanuel Bengio, Maxinder S Kanwal, Tegan Maharaj, Asja Fischer, Aaron Courville, Yoshua Bengio, et al. A closer look at memorization in deep networks. In _International conference on machine learning_, pages 233-242. PMLR, 2017.
* [4] Collin Burns, Pavel Izmailov, Jan Hendrik Kirchner, Bowen Baker, Leo Gao, Leopold Aschenbrenner, Yining Chen, Adrien Ecoffet, Manas Joglekar, Jan Leike, et al. Weak-to-strong generalization: Eliciting strong capabilities with weak supervision. _arXiv preprint arXiv:2312.09390_, 2023.
* [5] Aritra Ghosh, Himanshu Kumar, and P Shanti Sastry. Robust loss functions under label noise for deep neural networks. In _Proceedings of the AAAI conference on artificial intelligence_, volume 31, 2017.
* [6] Xingjun Ma, Hankun Huang, Yisen Wang, Simone Romano, Sarah Erfani, and James Bailey. Normalized loss functions for deep learning with noisy labels. In _International conference on machine learning_, pages 6543-6553. PMLR, 2020.

* Zhou et al. [2021] Xiong Zhou, Xianming Liu, Junjun Jiang, Xin Gao, and Xiangyang Ji. Asymmetric loss functions for learning with noisy labels. In _International conference on machine learning_, pages 12846-12856. PMLR, 2021.
* Zhu et al. [2023] Dixian Zhu, Yiming Ying, and Tianbao Yang. Label distributionally robust losses for multi-class classification: Consistency, robustness and adaptivity. In _International Conference on Machine Learning_, pages 43289-43325. PMLR, 2023.
* Manwani and Sastry [2013] Naresh Manwani and PS Sastry. Noise tolerance under risk minimization. _IEEE transactions on cybernetics_, 43(3):1146-1151, 2013.
* Van Rooyen et al. [2015] Brendan Van Rooyen, Aditya Menon, and Robert C Williamson. Learning with symmetric label noise: The importance of being unhinged. _Advances in neural information processing systems_, 28, 2015.
* Zhang and Sabuncu [2018] Zhilu Zhang and Mert Sabuncu. Generalized cross entropy loss for training deep neural networks with noisy labels. _Advances in neural information processing systems_, 31, 2018.
* Wang et al. [2019] Yisen Wang, Xingjun Ma, Zaiyi Chen, Yuan Luo, Jinfeng Yi, and James Bailey. Symmetric cross entropy for robust learning with noisy labels. In _Proceedings of the IEEE/CVF international conference on computer vision_, pages 322-330, 2019.
* Englesson and Azizpour [2021] Erik Englesson and Hossein Azizpour. Generalized jensen-shannon divergence loss for learning with noisy labels. _Advances in Neural Information Processing Systems_, 34:30284-30297, 2021.
* Zhou et al. [2021] Xiong Zhou, Xianming Liu, Chenyang Wang, Deming Zhai, Junjun Jiang, and Xiangyang Ji. Learning with noisy labels via sparse regularization. In _Proceedings of the IEEE/CVF international conference on computer vision_, pages 72-81, 2021.
* Hoyer [2004] Patrik O Hoyer. Non-negative matrix factorization with sparseness constraints. _Journal of machine learning research_, 5(9), 2004.
* Zhou et al. [2024] Xiong Zhou, Xianming Liu, Hao Yu, Jialiang Wang, Zeke Xie, Junjun Jiang, and Xiangyang Ji. Variance-enlarged poisson learning for graph-based semi-supervised learning with extremely sparse labeled data. In _The Twelfth International Conference on Learning Representations_, pages 1-19, 2024.
* Yang and Koyejo [2020] Forest Yang and Sanmi Koyejo. On the consistency of top-k surrogate losses. In _International Conference on Machine Learning_, pages 10727-10735. PMLR, 2020.
* Bartlett et al. [2006] Peter L Bartlett, Michael I Jordan, and Jon D McAuliffe. Convexity, classification, and risk bounds. _Journal of the American Statistical Association_, 101(473):138-156, 2006.
* Lin et al. [2017] Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Dollar. Focal loss for dense object detection. In _Proceedings of the IEEE international conference on computer vision_, pages 2980-2988, 2017.
* Bai et al. [2021] Yingbin Bai, Erkun Yang, Bo Han, Yanhua Yang, Jiatong Li, Yinian Mao, Gang Niu, and Tongliang Liu. Understanding and improving early stopping for learning with noisy labels. _Advances in Neural Information Processing Systems_, 34:24392-24403, 2021.
* Han et al. [2018] Bo Han, Quanming Yao, Xingrui Yu, Gang Niu, Miao Xu, Weihua Hu, Ivor Tsang, and Masashi Sugiyama. Co-teaching: Robust training of deep neural networks with extremely noisy labels. _Advances in neural information processing systems_, 31, 2018.
* Sohn et al. [2020] Kihyuk Sohn, David Berthelot, Nicholas Carlini, Zizhao Zhang, Han Zhang, Colin A Raffel, Ekin Dogus Cubuk, Alexey Kurakin, and Chun-Liang Li. Fixmatch: Simplifying semi-supervised learning with consistency and confidence. _Advances in neural information processing systems_, 33:596-608, 2020.
* Zhang et al. [2018] Hongyi Zhang, Moustapha Cisse, Yann N Dauphin, and David Lopez-Paz. mixup: Beyond empirical risk minimization. In _International Conference on Learning Representations_, 2018.
* Krizhevsky et al. [2009] Alex Krizhevsky, Geoffrey Hinton, et al. Learning multiple layers of features from tiny images. 2009.

* Kim et al. [2019] Youngdong Kim, Junho Yim, Juseung Yun, and Junmo Kim. NInl: Negative learning for noisy labels. In _Proceedings of the IEEE/CVF international conference on computer vision_, pages 101-110, 2019.
* Wei et al. [2023] Hongxin Wei, Huiping Zhuang, Renchunzi Xie, Lei Feng, Gang Niu, Bo An, and Yixuan Li. Mitigating memorization of noisy labels by clipping the model prediction. In _International Conference on Machine Learning_, pages 36868-36886. PMLR, 2023.
* Van der Maaten and Hinton [2008] Laurens Van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. _Journal of machine learning research_, 9(11), 2008.
* Wei et al. [2021] Jiaheng Wei, Zhaowei Zhu, Hao Cheng, Tongliang Liu, Gang Niu, and Yang Liu. Learning with noisy labels revisited: A study using real-world human annotations. In _International Conference on Learning Representations_, 2021.
* Patrini et al. [2017] Giorgio Patrini, Alessandro Rozza, Aditya Krishna Menon, Richard Nock, and Lizhen Qu. Making deep neural networks robust to label noise: A loss correction approach. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 1944-1952, 2017.
* Xia et al. [2019] Xiaobo Xia, Tongliang Liu, Nannan Wang, Bo Han, Chen Gong, Gang Niu, and Masashi Sugiyama. Are anchor points really indispensable in label-noise learning? _Advances in neural information processing systems_, 32, 2019.
* Liu and Guo [2020] Yang Liu and Hongyi Guo. Peer loss functions: Learning from noisy labels without knowing noise rates. In _International conference on machine learning_, pages 6226-6236. PMLR, 2020.
* Wei and Liu [2021] Jiaheng Wei and Yang Liu. When optimizing f-divergence is robust with label noise. In _International Conference on Learning Representations_, 2021.
* Wei et al. [2022] Jiaheng Wei, Hangyu Liu, Tongliang Liu, Gang Niu, Masashi Sugiyama, and Yang Liu. To smooth or not? when label smoothing meets noisy labels. In _International Conference on Machine Learning_, pages 23589-23614. PMLR, 2022.
* Li et al. [2021] Xuefeng Li, Tongliang Liu, Bo Han, Gang Niu, and Masashi Sugiyama. Provably end-to-end label-noise learning without anchor points. In _International conference on machine learning_, pages 6403-6413. PMLR, 2021.
* Zhou et al. [2023] Xiong Zhou, Xianming Liu, Deming Zhai, Junjun Jiang, and Xiangyang Ji. Asymmetric loss functions for noise-tolerant learning: Theory and applications. _IEEE Transactions on Pattern Analysis and Machine Intelligence_, 2023.
* Yu et al. [2019] Xingrui Yu, Bo Han, Jiangchao Yao, Gang Niu, Ivor Tsang, and Masashi Sugiyama. How does disagreement help generalization against label corruption? In _International Conference on Machine Learning_, pages 7164-7173. PMLR, 2019.
* Wei et al. [2020] Hongxin Wei, Lei Feng, Xiangyu Chen, and Bo An. Combating noisy labels by agreement: A joint training method with co-regularization. In _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition_, pages 13726-13735, 2020.
* Liu et al. [2020] Sheng Liu, Jonathan Niles-Weed, Narges Razavian, and Carlos Fernandez-Granda. Early-learning regularization prevents memorization of noisy labels. _Advances in neural information processing systems_, 33:20331-20342, 2020.
* Li et al. [2020] Junnan Li, Richard Socher, and Steven CH Hoi. Dividemix: Learning with noisy labels as semi-supervised learning. In _International Conference on Learning Representations_, 2020.
* Cheng et al. [2021] Hao Cheng, Zhaowei Zhu, Xingyu Li, Yifei Gong, Xing Sun, and Yang Liu. Learning with instance-dependent label noise: A sample sieve approach. In _International Conference on Learning Representations_, 2021.
* Zhu et al. [2021] Zhaowei Zhu, Tongliang Liu, and Yang Liu. A second-order approach to learning with instance-dependent label noise. In _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition_, pages 10113-10123, 2021.

* Liu et al. [2022] Sheng Liu, Zhihui Zhu, Qing Qu, and Chong You. Robust training under label noise by over-parameterization. In _International Conference on Machine Learning_, pages 14153-14172. PMLR, 2022.
* Zhu et al. [2023] Renyu Zhu, Haoyu Liu, Runze Wu, Minmin Lin, Tangjie Lv, Changjie Fan, and Haobo Wang. Rethinking noisy label learning in real-world annotation scenarios from the noise-type perspective. _arXiv preprint arXiv:2307.16889_, 2023.
* Li et al. [2017] Wen Li, Limin Wang, Wei Li, Eirikur Agustsson, and Luc Van Gool. Webvision database: Visual learning and understanding from web data. _arXiv preprint arXiv:1708.02862_, 2017.
* Deng et al. [2009] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale hierarchical image database. In _2009 IEEE Conference on Computer Vision and Pattern Recognition_, pages 248-255, 2009. doi: 10.1109/CVPR.2009.5206848.
* Xiao et al. [2015] Tong Xiao, Tian Xia, Yi Yang, Chang Huang, and Xiaogang Wang. Learning from massive noisy labeled data for image classification. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 2691-2699, 2015.
* Cubuk et al. [2020] Ekin D Cubuk, Barret Zoph, Jonathon Shlens, and Quoc V Le. Randaugment: Practical automated data augmentation with a reduced search space. In _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition workshops_, pages 702-703, 2020.
* Xia et al. [2020] Xiaobo Xia, Tongliang Liu, Bo Han, Nannan Wang, Mingming Gong, Haifeng Liu, Gang Niu, Dacheng Tao, and Masashi Sugiyama. Part-dependent label noise: Towards instance-dependent label noise. _Advances in Neural Information Processing Systems_, 33:7597-7610, 2020.

Limitation and Discussion

The limitation of \(\epsilon\)-\(\mathbf{softmax}\) is that it may slightly reduce fitting ability on clean case. Therefore, we propose to combine the \(\epsilon\)-\(\mathbf{softmax}\)-enhanced loss with the symmetric loss MAE. Consequently, our practical loss functions utilized for noise-tolerant learning exhibit a hybrid form similar to GCE and SCE, but their meanings are significantly different.

**Comparing with GCE and SCE.** GCE is a hybrid of CE and MAE var the negative Box-Cox transformation [11]. SCE combines CE with Reverse CE (RCE), where the RCE component actually acts as a scaled version of the MAE. This relationship is unveiled through the following derivation, adapted from Section 4.3 in SCE [12]: \(L_{\text{RCE}}=-\sum_{k=1}^{K}p(k\mid\mathbf{x})\log q(k\mid\mathbf{x})=-p(y\mid \mathbf{x})\log 1-\sum_{k\neq y}p(k\mid\mathbf{x})A=-A\sum_{k\neq y}p(k\mid \mathbf{x})=-A(1-p(y\mid\mathbf{x}))=-\frac{\Lambda}{2}L_{\text{MAE}}\). Consequently, SCE essentially translates to CE+MAE. Hence, GCE and SCE increases the fitting ability but reduces the robustness because of the CE term. Conversely, our CE\({}_{\epsilon}\) is inherently robust. The combination of CE\({}_{\epsilon}\) and MAE does not reduce the robustness, as demonstrated by Lemma 3, and also improves the fitting ability. We perform further experiments comparing with GCE and CE+MAE (SCE), the results can be seen in Table 6. Our CE\({}_{\epsilon}\)+MAE obtains obviously the best results at all noise rates, significantly outperforming GCE and CE+MAE (SCE).

Meanwhile, we further compare our \(\epsilon\)-\(\mathbf{softmax}\) with temperature-dependent softmax.

**Comparing with Temperature-Dependent Softmax. \(\mathbf{softmax}(\frac{h(x)}{\tau})\)**, where \(\tau\) is the temperature parameter, is a useful technique for making outputs sparse [14]. Compared to our \(\epsilon\)-\(\mathbf{softmax}\), temperature-dependent softmax does not achieve a quantitative approximation to a one-hot vector for each output, and therefore cannot achieve a controllable excess risk bound. We also perform further experiments cimparing with temperature-dependent softmax. For simplicity, we refer to CE with temperature-dependent softmax as CE\({}_{\tau}\), the results can be seen in Table 6. Our CE\({}_{\epsilon}\)+MAE obtains obviously the best results at all noise rates, significantly outperforming temperature-dependent softmax.

## Appendix B Proof of Theorems

**Lemma 1**.: \(\epsilon\)**-\(\mathbf{softmax}\)** _can achieve \(\epsilon\)-relaxation for one-hot vectors:_

\[\min_{\mathbf{u}\in\mathcal{P}_{\mathbf{e_{1}}}}\|f(\mathbf{x})-\mathbf{u}\|_ {2}\leq\epsilon=\frac{\sqrt{1-1/K}}{m+1},\] (B.1)

_where \(f(\mathbf{x})=\epsilon\cdot\mathbf{softmax}\circ h(\mathbf{x})\)._

\begin{table}
\begin{tabular}{c|c|c|c} \hline \hline
**CIFAR-100** & **Clean** & **Symmetric** & **Asymmetric** \\  & 0.4 & 0.8 & 0.4 \\ \hline CE & 70.79±0.58 & 39.31±0.74 & 7.33±0.10 & 41.15±1.04 \\ MAE & 5.31±1.19 & 2.78±1.68 & 2.13±0.98 & 3.11±0.26 \\ GCE (\(q=0.3\)) & 70.31±0.95 & 38.72±0.87 & 6.43±0.17 & 38.79±1.47 \\ GCE (\(q=0.5\)) & 70.57±0.25 & 50.61±0.64 & 8.16±0.40 & 38.58±0.55 \\ GCE (\(q=0.7\)) & 65.22±1.57 & 56.60±1.61 & 18.23±0.25 & 40.82±0.85 \\ GCE (\(q=0.9\)) & 18.72±2.43 & 17.61±2.25 & 19.85±0.83 & 13.96±1.99 \\ CE\({}_{\tau}\)+MAE (\(\tau=0.3\)) & 700.0±1.51 & 36.87±12.12 & 14.61±0.47 & 40.37±3.10 \\ CE\({}_{\tau}\)+MAE (\(\tau=0.5\)) & 69.57±0.46 & 47.99±0.48 & 13.62±0.24 & 45.53±1.19 \\ CE\({}_{\tau}\)+MAE (\(\tau=0.7\)) & 70.11±0.71 & 36.08±2.21 & 10.58±0.20 & 46.92±0.45 \\ CE\({}_{\tau}\)+MAE (\(\tau=0.9\)) & 69.32±0.27 & 36.34±1.47 & 11.19±0.04 & 42.27±0.92 \\ \hline CE\({}_{\epsilon}\)+MAE (\(m=0\)) & 69.33±0.51 & 39.72±0.67 & 11.65±0.18 & 41.53±0.97 \\ CE\({}_{\epsilon}\)+MAE (\(m=1e2\)) & 70.55±0.47 & 48.39±0.53 & 13.05±0.58 & **48.51±0.36** \\ CE\({}_{\epsilon}\)+MAE (\(m=1e4\)) & 70.83±0.18 & **59.20±0.42** & **26.30±0.46** & 40.36±0.96 \\ CE\({}_{\epsilon}\)+MAE (\(m=1e5\)) & 67.72±0.88 & 54.99±1.05 & 22.14±0.36 & 7.56±1.10 \\ \hline \hline \end{tabular}
\end{table}
Table 6: Last epoch test accuracies (%) of ablation and compaction experiments on CIFAR-100. The results "mean\(\pm\)std" are reported over 3 random runs. The best results are **boldfaced** and the best results of each method are underlined. If \(m=0\), CE\({}_{\epsilon}\)+MAE equals CE+MAE.

Proof.: \[\min_{u\in\mathcal{P}_{\mathbf{e}_{1}}}\left\|f(\mathbf{x})- \mathbf{u}\right\|_{2} =\frac{\sqrt{1-2p_{t}+\sum_{k=1}^{K}p_{k}^{2}}}{m+1}\] \[=\frac{\sqrt{1-p_{t}-\sum_{k=1}^{K}p_{k}(p_{t}-p_{k})}}{m+1}\] \[\leq\frac{\sqrt{1-p_{t}}}{m+1}\leq\frac{\sqrt{1-1/K}}{m+1}.\]

**Theorem 1** (Excess Risk Bound under Asymmetric Noise).: _In a multi-class classification problem, if the loss function \(L\in\mathcal{L}\) satisfies \(|\sum_{k=1}^{K}(L(\mathbf{u}_{1},k)-L(\mathbf{u}_{2},k))|\leq\delta\) when \(\|\mathbf{u}_{1}-\mathbf{u}_{2}\|_{2}\leq\epsilon\), and \(\delta\to 0\) as \(\epsilon\to 0\), then for asymmetric label noise \(\eta_{\mathbf{x},k}<\left(1-\eta_{y}\right),\forall k\neq y\), if \(\mathcal{R}_{L}(f^{*})=0\), the excess risk bound for \(f\in\mathcal{H}_{\mathbf{v},\epsilon}\) can be expressed as_

\[\mathcal{R}_{L}(f_{\eta}^{*})\leq 2\delta+\frac{2c\delta}{a},\] (B.2)

_where \(c=\mathbb{E}_{\mathcal{D}}\left(1-\eta_{y}\right)\), \(a=\min_{\mathbf{x},k}(1-\eta_{y}-\eta_{\mathbf{x},k})\), \(f_{\eta}^{*}\) and \(f^{*}\) denote the global minimum of \(\mathcal{R}_{L}^{\eta}(f)\) and \(\mathcal{R}_{L}(f)\), respectively._

Proof.: \[R_{L}^{\eta}(f) =\mathbb{E}_{\mathcal{D}}\left[\left(1-\eta_{y}\right)L(f( \mathbf{x}),y)\right]+\mathbb{E}_{\mathcal{D}}\left[\sum_{k\neq y}\eta_{ \mathbf{x},k}L(f(\mathbf{x}),k)\right]\] \[\leq\mathbb{E}_{\mathcal{D}}\left[\left(1-\eta_{y}\right)\left(C +\delta-\sum_{k\neq y}L(f(\mathbf{x}),k)\right)\right]+\mathbb{E}_{\mathcal{D }}\left[\sum_{k\neq y}\eta_{\mathbf{x},k}L(f(\mathbf{x}),k)\right]\] \[=(C+\delta)\mathbb{E}_{\mathcal{D}}(1-\eta_{y})-\mathbb{E}_{ \mathcal{D}}\left[\sum_{k\neq y}(1-\eta_{y}-\eta_{\mathbf{x},k})L(f(\mathbf{x }),k)\right]\]

where \(C=\sum_{k=1}^{K}L(\mathbf{v},k)\), ditto

\[R_{L}^{\eta}(f)\geq(C-\delta)\mathbb{E}_{\mathcal{D}}(1-\eta_{y})-\mathbb{E}_ {\mathcal{D}}\left[\sum_{k\neq y}(1-\eta_{y}-\eta_{\mathbf{x},k})L(f(\mathbf{ x}),k)\right]\]

hence,

\[\left(R_{L}^{\eta}\left(f^{*}\right)-R_{L}^{\eta}(f_{\eta}^{*})\right)\leq 2\delta\mathbb{E}_{\mathcal{D}}(1-\eta_{y})+\] \[\mathbb{E}_{\mathcal{D}}\sum_{k\neq y}(1-\eta_{y}-\eta_{\mathbf{x },k})\left[L(f_{\eta}^{*}(\mathbf{x}),k)-L\left(f^{*}(\mathbf{x}),k)\right]\]

According to the assumption \(R_{L}(f^{*})=0\), we have \(L(f^{*}(\mathbf{x}),y)=0\) then \(L(f^{*}(\mathbf{x}),k)=\frac{C}{k-1}\) where \(k\neq y\). Since \(L(f_{\eta}^{*}(\mathbf{x}),k)-L(f^{*}(\mathbf{x}),k)\leq 0\) where \(k\neq y\), the second term on the right of the inequality is a non-positive value. And \(R_{L}^{\eta}\left(f^{*}\right)-R_{L}^{\eta}(f_{\eta}^{*})\geq 0\). So we have

\[\left|\mathbb{E}_{\mathcal{D}}\sum_{k\neq y}(1-\eta_{y}-\eta_{\mathbf{x},k}) \left(L(f_{\eta}^{*}(\mathbf{x}),k)-L(f^{*}(\mathbf{x}),k)\right)\right|\leq 2c\delta,\]

where \(c=\mathbb{E}_{\mathcal{D}}\left(1-\eta_{y}\right)\).

Let \(a=\min_{\mathbf{x},k}(1-\eta_{y}-\eta_{\mathbf{x},k})\), we have \(\left|\mathbb{E}_{\mathcal{D}}\sum_{k\neq y}\left(L(f_{\eta}^{*}(\mathbf{x}),k )-L(f^{*}(\mathbf{x}),k)\right)\right|\leq\frac{2c\delta}{a}\). Note that \(f_{\eta}^{*},f^{*}\in\mathcal{H}_{\mathbf{v},\epsilon}\) means that \(|\sum_{k}\left(L(f_{\eta}^{*}(\mathbf{x}),k)-L(f^{*}(\mathbf{x}),k)\right)|\leq 2\delta\), then we obtain

\[\left|\mathbb{E}_{\mathcal{D}}\left(L(f_{\eta}^{*}(\mathbf{x}),y)-L(f^{*}( \mathbf{x}),y)\right)\right|\leq 2\delta+\frac{2c\delta}{a},\]that is, \(\mathcal{R}_{L}(f_{q}^{*})\leq\mathcal{R}_{L}(f^{*})+2\delta+\frac{2c\delta}{a}=2 \delta+\frac{2c\delta}{a}\). 

**Lemma 2**.: _For one-hot label \(\mathbf{e}_{y}\), \(\text{CE}_{\epsilon}\) is All-\(k\) calibrated and All-\(k\) consistency._

Proof.: Here \(f=\epsilon\text{-}\mathbf{softmax}\circ h\), \(\mathbf{p}(\cdot|\mathbf{x})=\mathbf{softmax}(h(\mathbf{x}))\) denotes the probabilities by standard softmax, \(p_{k}\in(0,1]\) and \(t=\arg\max_{k\in[K]}p_{k}\) is the class with the largest value in prediction probabilities.

if \(t=y\):

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{ \partial h(y|\mathbf{x})} =\frac{\partial-\log\frac{p_{y}+m}{m+1}}{\partial p_{y}}\cdot \frac{\partial p_{y}}{\partial h(y|\mathbf{x})}=-\frac{1}{m+1}\cdot\frac{m+1} {p_{y}+m}\cdot\frac{\partial p_{y}}{\partial h(y|\mathbf{x})}\] \[=-\frac{1}{p_{y}+m}\cdot\frac{\partial p_{y}}{\partial h(y| \mathbf{x})}=-\frac{p_{y}}{p_{y}+m}(1-p_{y}).\]

By the first-order optimality condition \(\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{\partial h(\mathbf{ x})}=0\), we have: \(p_{y}=1\). Hence, for any \(k\neq y\), we have \(e_{k}=0<e_{y}\) and \(p_{k}<p_{y}\).

if \(t\neq y\):

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{ \partial h(y|\mathbf{x})} =\frac{\partial-\log\frac{p_{y}}{m+1}}{\partial p_{y}}\cdot \frac{\partial p_{y}}{\partial h(y|\mathbf{x})}=-\frac{1}{m+1}\cdot\frac{m+1} {p_{y}}\cdot\frac{\partial p_{y}}{\partial h(y|\mathbf{x})}\] \[=-\frac{1}{p_{y}}\cdot\frac{\partial p_{y}}{\partial h(y|\mathbf{ x})}=-(1-p_{y}).\]

By the first-order optimality condition \(\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{\partial h(\mathbf{ x})}=0\), we have: \(p_{y}=1\). Hence, for any \(k\neq y\), we have \(e_{k}=0<e_{y}\) and \(p_{k}<p_{y}\).

Hence, \(\text{CE}_{\epsilon}\) is All-\(k\) calibrated. Since \(\text{CE}_{\epsilon}\) is nonnegative, so \(\text{CE}_{\epsilon}\) is All-\(k\) consistency. 

**Theorem 2**.: _For any label \(\mathbf{q}\in\Delta_{K}\), let \(y=\arg\max_{k\in[K]}q_{k}\) and \(t=\arg\max_{k\in[K]}p_{k}\), if \(t=y\) and \(q_{y}-\max_{k\neq y}q_{k}>\frac{m}{m+1}\), \(\text{CE}_{\epsilon}\) is All-\(k\) calibrated and All-\(k\) consistency._

Proof.: For \(\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),\mathbf{q})}{\partial h(y |\mathbf{x})}\), we have:

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),\mathbf{q} )}{\partial h(y|\mathbf{x})} =-q_{t}\frac{m+1}{p_{t}+m}\cdot\frac{1}{m+1}\cdot\frac{\partial p _{t}}{\partial h(t|\mathbf{x})}-\sum_{k\neq t}q_{k}\frac{1}{p_{k}}\cdot\frac{ \partial p_{k}}{\partial h(t|\mathbf{x})}\] \[=-q_{t}\frac{1}{p_{t}+m}p_{t}(1-p_{t})-\sum_{k\neq t}q_{k}\frac{1 }{p_{k}}(-p_{k}p_{t}).\]

By the first-order optimality condition \(\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),\mathbf{q})}{\partial h(y |\mathbf{x})}=0\), we have:

\[q_{t}\frac{1}{p_{t}+m}p_{t}(1-p_{t})=\sum_{k\neq t}q_{k}p_{t}\] \[\Rightarrow q_{t}\frac{1}{p_{t}+m}(1-p_{t})=1-q_{t}\] \[\Rightarrow p_{t}=q_{t}(1+m)-m\]

Since, \(\frac{m}{m+1}<q_{t}\leq 1\), we can get \(0<p_{t}\leq 1\).

For \(\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),\mathbf{q})}{\partial h(j \neq y|\mathbf{x})}\), we have:

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),\mathbf{q})}{ \partial h(j\neq y|\mathbf{x})} =-q_{t}\frac{1}{p_{t}+m}\cdot\frac{\partial p_{t}}{\partial h(j| \mathbf{x})}-\sum_{k\neq t,j}q_{k}\frac{1}{p_{k}}\cdot\frac{\partial p_{k}}{ \partial h(j|\mathbf{x})}-q_{j}\frac{1}{p_{j}}\cdot\frac{\partial p_{j}}{ \partial h(j|\mathbf{x})}\] \[=-q_{t}\frac{1}{p_{t}+m}(-p_{j}p_{t})-\sum_{k\neq t,j}q_{k}\frac {q}{p_{k}}(-p_{j}p_{k})+q_{j}(p_{j}-1)\]By the first-order optimality condition \(\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),\mathbf{q})}{\partial h(j \neq y|\mathbf{x})}=0\), we have:

\[q_{t}\frac{p_{j}p_{t}}{p_{t}+m}+\sum_{k\neq t,j}q_{k}p_{j}+q_{j}p _{j}=q_{j}\] \[\Rightarrow\ \ p_{j}=\frac{q_{j}}{\frac{q_{t}p_{t}}{p_{t}+m}+\sum_{k \neq t,j}q_{k}+q_{j}}=\frac{q_{j}}{\frac{q_{t}p_{t}}{p_{t}+m}+1-q_{t}}\]

Substituting \(p_{t}=q_{t}(1+m)-m\), we can get \(p_{j}=q_{j}(m+1)\). Since \(q_{t}>\frac{m}{m+1}\), so \(q_{j}<\frac{1}{m+1}\) and \(0<p_{j}<1\).

For \(i,j\neq t\), if \(q_{i}<q_{j}\), we have \(p_{i}<p_{j}\). Consider \(q_{k\neq t}\) and \(q_{t}\), because of the condition \(q_{y}-q_{k\neq y>\frac{m}{m+1}}\), we have \(q_{k}<q_{t}\), \(q_{t}-q_{k}=q_{t}(1+m)-m-q_{k}(m+1)>0\).

Hence, \(\text{CE}_{\epsilon}\) is All-\(k\) calibrated. Since \(\text{CE}_{\epsilon}\) is nonnegative, so \(\text{CE}_{\epsilon}\) is All-\(k\) consistency. 

**The gradient of \(\text{CE}_{\epsilon}\).**

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{\partial h(\mathbf{ x})}=\left\{\begin{array}{ll}-\frac{1}{p_{y}+m}\cdot\frac{\partial p_{y}}{ \partial h(\mathbf{x})},&t=y\\ -\frac{1}{p_{y}}\cdot\frac{\partial p_{y}}{\partial h(\mathbf{x})},&t\neq y \end{array},\right.\] (B.3)

where \(f=\epsilon\text{-}\mathbf{softmax}\circ h\), \(\mathbf{p}(\mathbf{x})=\mathbf{softmax}(h(\mathbf{x}))\) denotes the probabilities by standard softmax, and \(t=\arg\max_{k\in[K]}p_{k}\) is the class with the largest value in prediction probabilities.

Proof.: The proof is similar to Theorem 2.

if \(t=y\):

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{\partial h (\mathbf{x})} =\frac{\partial-\log\frac{p_{y}+m}{m+1}}{\partial p_{y}}\cdot \frac{\partial p_{y}}{\partial h(\mathbf{x})}=-\frac{1}{m+1}\cdot\frac{m+1}{p_ {y}+m}\cdot\frac{\partial p_{y}}{\partial h(\mathbf{x})}\] \[=-\frac{1}{p_{y}+m}\cdot\frac{\partial p_{y}}{\partial h(\mathbf{ x})}.\]

if \(t\neq y\):

\[\frac{\partial L_{\text{CE}_{\epsilon}}(f(\mathbf{x}),y)}{\partial h( \mathbf{x})} =\frac{\partial-\log\frac{p_{y}}{m+1}}{\partial p_{y}}\cdot\frac{ \partial p_{y}}{\partial h(\mathbf{x})}=-\frac{1}{m+1}\cdot\frac{m+1}{p_{y}} \cdot\frac{\partial p_{y}}{\partial h(\mathbf{x})}\] \[=-\frac{1}{p_{y}}\cdot\frac{\partial p_{y}}{\partial h(\mathbf{x})}.\]

**Lemma 3**.: _For any loss function \(L_{\epsilon}\) with \(\epsilon\text{-}\mathbf{softmax}\) and symmetric loss function \(L_{\text{symmetric}}\) defined in Equation 1.1, the excess risk bound of \(\alpha\cdot L_{\epsilon}+\beta\cdot L_{\text{symmetric}}\) is equivalent to that of \(\alpha\cdot L_{\epsilon}\)._

Proof.: For \(\mathbf{u}_{1},\mathbf{u}_{2}\in\mathcal{H}_{\mathbf{v},\epsilon}\) and \(\mathbf{u}_{3},\mathbf{u}_{4}\in\Delta_{K}\), we have

\[|\sum_{k=1}^{K}\left(\alpha\cdot L_{\epsilon}(\mathbf{u}_{1},k)+ \beta\cdot L_{\text{symmetric}}(\mathbf{u}_{3},k)\right)-\sum_{k=1}^{K}\left( \alpha\cdot L_{\epsilon}(\mathbf{u}_{2},k)+\beta\cdot L_{\text{symmetric}}( \mathbf{u}_{4},k)\right)|\] \[= |\sum_{k=1}^{K}\alpha\cdot L_{\epsilon}(\mathbf{u}_{1},k)-\sum_{k =1}^{K}\alpha\cdot L_{\epsilon}(\mathbf{u}_{2},k)+0|\] \[= \alpha\cdot|\sum_{k=1}^{K}\cdot L_{\epsilon}(\mathbf{u}_{1},k)- \sum_{k=1}^{K}\cdot L_{\epsilon}(\mathbf{u}_{2},k)|\] \[\leq \alpha\cdot\delta\]

## Appendix C The Algorithm of \(\text{CE}_{\epsilon}\)+MAE (Semi)

```
1:Input: The noisy labeled dataset \(\tilde{\mathcal{S}}=\{(\mathbf{x}_{n},\tilde{y}_{n}),n=1,\cdots,N\}\), initialized model \(f\), loss function \(L_{\text{CE}_{\epsilon}+\text{MAE}}\), total epochs \(T_{\text{all}}\), robust learning epochs \(T_{\text{robust}}\) and trade-off parameter \(\lambda\)
2:for epoch \(=1\) to \(T_{\text{robust}}\) do:
3: Train \(f\) on \(\tilde{\mathcal{S}}\) var \(L_{\text{CE}_{\epsilon}+\text{MAE}}\)
4:endfor
5:for epoch \(=T_{\text{robust}}\) to \(T_{\text{all}}\) do:
6: Sample selection: Divide the dataset \(\mathcal{S}\) into labeled (clean) dataset \(\mathcal{S}_{l}=\{(\mathbf{x}_{n},y_{n}),n=1,\cdots,|\mathcal{S}_{l}|\}\) and unlabeled (noisy) dataset \(\mathcal{S}_{u}=\{(\mathbf{x}_{n}),n=1,\cdots,|\mathcal{S}_{u}|\}\)
7:for each minibatch \(\mathcal{D}_{l}\in\mathcal{S}_{l}\) and \(\mathcal{D}_{u}\in\mathcal{S}_{u}\) do:
8:\(q_{n}=\text{argmax}(f(x_{n})),\quad x_{n}\in\mathcal{D}_{u}\quad\#\) Pseudo-label prediction
9:\(\tilde{\mathcal{D}}_{u}\{(\hat{x}_{n},q_{n})\}=\text{Augment }(\mathcal{D}_{u}\{(x_{n},q_{n})\})\)
10:\(\mathcal{W}=\text{shuffle}(\text{concat}(\mathcal{D}_{l},\tilde{\mathcal{D}}_{u}))\)
11:\(\mathcal{D}^{\prime}_{l}=\text{MixUp}(\mathcal{D}_{l},\mathcal{W}_{n})\quad n=1,\cdots,|\mathcal{D}_{l}|\)
12:\(\mathcal{D}^{\prime}_{u}=\text{MixUp}(\mathcal{D}_{u},\mathcal{W}_{n+|\mathcal{ D}_{l}|})\quad n=1,\cdots,|\mathcal{D}_{u}|\)
13:\(\text{Loss}_{l}=L_{\text{CE}_{\epsilon}+\text{MAE}}(f,\mathcal{D}^{\prime}_{l})\)
14:\(\text{Loss}_{u}=L_{\text{CE}_{\epsilon}+\text{MAE}}(f,\mathcal{D}^{\prime}_{u})\)
15:\(\text{Loss}=\text{Loss}_{l}+\lambda\cdot\text{Loss}_{u}\)
16: Train \(f\) on Loss
17:endfor
18:endfor
19:return\(f\) ```

**Algorithm Details and Parameters.** Reference to [20], we set \(T_{\text{robust}}=65\), \(T_{\text{robust}}=300\) and learning rate decay 0.1 at [60, 160, 260] epochs. Other experimental settings are the same as the CIFAR-N experiment [28] in the Appendix D.

For sample selection: We simply select \(k\) samples from each class with the least loss as clean samples. For CIFAR-10N, we set \(k=2500\) for "Worst" case and 3500 for others. For CIFAR-100N, we set \(k=250\) for "Noisy" case and 350 for others. In practice, if \(k>|\text{sample\_num}|\), we set \(k=|\text{sample\_num}|-20\).

For pseudo-label prediction: In the actual training, we do the pseudo-label prediction using two standard augment versions from the sample. We add the probabilities and divide by 2 to make the pseudo-label prediction. At the same time, we set the threshold \(\sigma=0.2\) and discard the samples whose prediction probability is less than the threshold.

For the Augment to \(\mathcal{D}_{u}\), we employ RandAugment [47]. We set the trade-off parameter \(\lambda\) to grow linearly from 0 to 1 over 200 epochs. The MixUp parameter \(\alpha\) is set to 0.75 for epochs less than 100, and adjusted to 4 for epochs greater than 100. \(\text{CE}_{\epsilon}\)+MAE \(m=1e4,\alpha=0.5,\beta=1\) is the same as the CIFAR-N experiment for the robust learning stage and \(m=10,\alpha=1,\beta=1\) for the semi-supervised learning stage. In \(\text{CE}_{\epsilon}\)+MAE (Semi), we ensemble the outputs of two networks during inference and exchange the samples selected by the two networks during training, as is customary for methods that train two networks simultaneously [21, 36, 39, 38].

## Appendix D Experiments

### Evaluation on Benchmark Datasets

Noise Generation.We follow the approach of previous studies [6, 7] to experiment with two types of synthetic label noise: symmetric (uniform) noise and asymmetric (class-conditional) noise. In the case of symmetric label noise, we intentionally corrupt the training labels by randomly flipping labels within each class to incorrect labels in other classes. As for asymmetric label noise, we flip the labelswithin a specific sets of classes: For CIFAR-10, the flips occur from \(\text{TRUCK}\rightarrow\text{AUTOMOBILE}\), \(\text{BIRD}\rightarrow\text{AIRPLANE}\), \(\text{DEER}\rightarrow\text{HORSE}\), and \(\text{CAT}\leftrightarrow\text{DOG}\). For CIFAR-100, the 100 classes are grouped into 20 super-classes, each containing 5 sub-classes, and we flip the labels within the same super-class into the next.

Experimental Setting.We follow the same experimental settings in [6; 7]: An 8-layer CNN is used for CIFAR-10 and a ResNet-34 for CIFAR-100. The networks are trained for 120 and 200 epochs for CIFAR-10 and CIFAR-100 with batch size 128. We use the SGD optimizer with momentum 0.9 and cosine learning rate annealing. The weight decay is set to \(1\times 10^{-4}\) and \(1\times 10^{-5}\) for CIFAR-10 and CIFAR-100. The initial learning rate is set to 0.01 for CIFAR-10 and 0.1 for CIFAR-100. Clipping the gradient norm to 5.0 and the minimum allowable value for \(\log\) to \(1\times 10^{-8}\). Typical data augmentations including random shift and horizontal flip are applied to CIFAR-10; random shift, horizontal flip and random rotation are applied to CIFAR-100.

Parameters Setting.We set the parameter settings which match their original papers for all baseline methods [6; 7]. Specifically, for FL, we set \(\gamma=0.5\). For GCE, we set \(q=0.7\) for CIFAR-10, and \(q=[0.5,0.5,0.7,0.7,0.9]\) for CIFAR-100 clean and symmetric noise (\(\eta\in[0,0.2,0.4,0.6,0.8]\)), \(q=0.7\) asymmetric noise. For SCE, we set \(A=-4\), \(\alpha=0.1\), \(\beta=1\) for CIFAR-10, and \(\alpha=6\), \(\beta=0.1\) for CIFAR-100. For APL (NCE+MAE, NCE+RCE and NFL+RCE), we set \(\alpha=1,\beta=1\) for CIFAR-10, and \(\alpha=10\), \(\beta=0.1\) for CIFAR-100. For NCE+AUL, we set \(a=6.3,q=1.5,\alpha=1,\beta=4\) for CIFAR-10, and \(a=6,q=3,\alpha=10,\beta=0.015\) for CIFAR-100. For NCE+AGCE, we set \(a=6,q=1.5,\alpha=1,\beta=4\) for CIFAR-10, and \(a=1.8,q=3,\alpha=10,\beta=0.1\) for CIFAR-100. For NCE+AEL, we set \(a=5,\alpha=1,\beta=4\) for CIFAR-10, and \(a=1.5,\alpha=10,\beta=0.1\) for CIFAR-100. For CE+LC, we set \(\delta=[1,1,1,1.5,1.5]\) for CIFAR-10 clean and symmetric noise (\(\eta\in[0,0.2,0.4,0.6,0.8]\)) and \(\delta=2.5\) for CIFAR-10 asymmetric noise. We set \(\delta=2.5\) for CIFAR-100 asymmetric noise and \(\delta=0.5\) for others. For LDR-KL, We set \(\lambda=10\) for CIFAR-10 and 1 for CIFAR-100. For our CE\({}_{\epsilon}\)+MAE, we set \(\beta=5,m=1e5,\alpha=0.01\) for CIFAR-10 symmetric, and \(m=1e3,\alpha=0.02\) for asymmetric. For CIFAR-100, we set \(\beta=1\), \(m=1e4\) and \(\alpha=[0.1,0.05,0.03,0.0125,0.0075]\) for clean and symmetric noise (\(\eta\in[0,0.2,0.4,0.6,0.8]\)), and \(m=1e2\), \(\alpha=[0.015,0.007,0.005,0.004]\) for asymmetric noise (\(\eta\in[0.1,0.2,0.3,0.4]\)). For our FL\({}_{\epsilon}\)+MAE, we set \(\gamma=0.1\) and others are same as CE\({}_{\epsilon}\)+MAE. For NLNL, we use the results in [7] directly.

### Evaluation on Human-Annotated Datasets

Experimental Setting.We follow the experimental settings in [28]: Train a Resnet-34 using SGD for 100 epochs with initial learning rate 0.1, momentum 0.9, and weight decay 0.0005. Set the learning rate decay 0.1 at 60 epochs. Standard data augmentation including random shift and horizontal flip are applied. Best epoch test accuracies are compared. The results of the comparison methods are taken directly from [28] and the original papers [35; 43].

Parameters Setting.For our CE\({}_{\epsilon}\)+MAE, we set \(m=1e4,\alpha=0.5,\beta=1\) for CIFAR-10N/100N. CE\({}_{\epsilon}\)+MAE (Semi) has been covered in detail in the previous section C.

### Evaluation on Real-World Dataset WebVision

Experimental Setting.For WebVision, the training details follow [7]: We use the mini WebVision setting [6; 7] and train a ResNet-50 using SGD for 250 epochs with initial learning rate 0.4, nesterov momentum 0.9 and weight decay \(3\times 10^{-5}\) and batch size 256. The learning rate is multiplied by 0.97 after each epoch of training. All the images are resized to \(224\times 224\). Typical data augmentations including random width/height shift, color jittering, and horizontal flip are applied. We train the model on Webvision and evaluate the trained model on the same 50 concepts on the corresponding WebVision and ILSVRC12 validation sets.

For Clothing1M, we use ResNet-50 pre-trained on ImageNet similar to [46]. All the images are resized to \(224\times 224\). We use SGD with a momentum of 0.9, a weight decay of \(1\times 10^{-3}\), and batch size of 256. We train the network for 10 epochs with a learning rate of \(5\times 10^{-3}\) and a decay of 0.1 at 5 epochs. Typical data augmentations including random shift and horizontal flip are applied.

Parameters Setting.We set the best parameter settings which match their original papers for all baseline methods [6; 7]. Specifically, for GCE, we set \(q=0.7\) for WebVision and 0.6 for Clothing1M.

[MISSING_PAGE_FAIL:20]

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: The main claims made in the abstract and introduction accurately reflect the paper's contributions and scope. Specifically, we provide a simple yet effective method for mitigating label noise with elaborated descriptions and theoretical results. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: We have discussed the limitations of the work in the Appendix A. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof?Answer: [Yes] Justification: We provide the full set of assumptions in the main paper and all proofs in Appendix B. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: We describe the experiment details in the Appendix D and submit the code for reproducibility in the supplementary materials. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code**Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: We have submitted the code for with sufficient instructions to faithfully reproduce the main experimental results. And the datasets are obtained from open source. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: We have specified all the training and test details in Appendix D. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: For all experiments, we include error bars for added clarity. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).

* The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)
* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: We provide the information in the experiment details. All experiments are implemented by PyTorch and are conducted on NVIDIA GeForce RTX 4090. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: We promise that the research conducted in the paper conforms, in every respect, with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: We have discussed broader impact of this work. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.

* Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.
* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: We do not use pretrained language models, image generators, etc. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licensees for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: The existing asserts in this paper are properly credited an are the license and terms of use explicitly mentioned and properly respected with appropriate citations. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.

* If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.
* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: We do not introduce any new assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.