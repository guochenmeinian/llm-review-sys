[MISSING_PAGE_EMPTY:1]

instance, semantic and panoptic segmentation [1; 2; 3; 4; 5; 6; 7]. Most recently, we are observing a clear trend toward more flexible segmentation models in different aspects: 1) From closed-set to open-vocabulary segmentation. Many recent works proposed to either leverage contrastive learning methods or pretrained multi-modal foundation models (_e.g._, CLIP [8]) to make the segmentation models more transferable to unseen concepts [9; 10; 11; 12]; 2) From generic to referring segmentation. In addition to generic segmentation that segments an image thoroughly given a predetermined set of concepts, language-based referring segmentation provides a user-friendly way of segmenting a specific region referred by an arbitrary text phrase [13; 14; 15; 16; 17]; and 3) From one-shot to interactive segmentation. In practice, segmentation models do not necessarily produce satisfactory masks in one round. As such, people are also studying how to progressively refine the segmentation results through intimate interactions between humans and models [18; 19; 20; 21].

Despite the aforementioned efforts taken to design more powerful and feasible segmentation models, we are still lacking a universal segmentation interface that is capable of accommodating various types of human prompts and tackling different segmentation tasks as studied in individual works. In contrast, Large Language Models (LLMs) have already emerged as such a universal interaction interface for language tasks, from early models like GPT-3 [22] and T5 [23], to conversational agent [24] augmented by advanced prompting [25; 26; 27] and chain-of-thought [28; 29; 30]. In this work, we strive for a universal interface for _segmenting everything everywhere all at once_ in an image. On this interface, we are targeted at unifying all segmentation tasks with a single model in a promptable manner. To achieve this goal, we propose a new prompting scheme in mask decoder that has four important properties: _versatility_, _compositionality_, _interactivity_, and _semantic-awareness_. Specifically, we propose to encode points, masks, text, boxes, and even a referred region from another image into prompts in the same joint visual-semantic space. As such, our model can deal with any combination of the input prompts, leading to strong compositionality. To enable interactivity, we further introduce memory prompts for condensing the previous segmentation information followed by communication with other prompts. As for semantic awareness, our model can provide an open-set semantic label to any output segmentation.

With the proposed prompting scheme, we build a segment-everything-everywhere model called _SEEM_ comprised of a simple Transformer encoder-decoder architecture [31; 6] with an extra text encoder [11; 32]. In _SEEM_, the decoding process emulates a generative LLM but with a multimodality-in-multimodality-out interface. An image encoder and text encoder are used as the prompt encoder to encode all types of queries, which are fed into the decoder. Concretely, we encode all spatial queries, namely, points, boxes, scribbles and masks into _visual prompts_ by pooling their corresponding visual features from the image encoder, and use the text encoder to convert text queries into _text prompts_. By training on diverse segmentation tasks, our model learns to deal with various prompts, align the visual and text prompts, and promote their synergy via cross-attention between them. As a result, our single model after pretraining attains competitive performance across all segmentation tasks. Since the prompts of all \(5\) different types are mapped to the _joint visual-semantic space_, we can feasibly combine prompts to resolve the ambiguity to obtain better segmentation results and enable zero-shot adaptation to unseen user prompts. Furthermore, our model can immediately generalize to the case of using an exemplar image segment as the prompt and video object segmentation in a zero-shot fashion. In addition to its strong generalization capability, _SEEM_ is also more efficient for interactive segmentation compared with the counterparts like SimpleClick [32]. Since we take the prompts as input to the decoder, when doing multi-round interactions with humans, our model only needs to run the feature extractor once at the beginning and lightweight decoding each per round. To the end, we build a segmentation interface with a single pre-trained model that can segment every object with semantics (everything), cover every pixel in the image (everywhere), and support all possible compositions of prompts (all at once). In summary, our contributions are threefold:

* We design a new prompting scheme that can encode various user intents into prompts in a _joint visual-semantic space_, enabling strong flexibility for various segmentation tasks and generalization capability to unseen prompts or their combinations.
* We build _SEEM_, a universal and interactive segmentation interface that integrates the newly designed prompting mechanism into a lightweight decoder for _all_ segmentation tasks, leading to a model possessing properties of versatility, compositionality, interactivity, and semantic awareness.
* We conduct extensive experiments and visualizations to show that our model has strong performance on many segmentation tasks including open-vocabulary generic segmentation, interactive segmentation, referring segmentation, and segmentation tasks with combined prompts.

## 2 Related Work

**Interactive segmentation.** Interactive segmentation is the task of segmenting objects by interactively taking user inputs. It has been a longstanding problem and has achieved considerable progress [33; 34; 35; 20; 21; 36]. Generally, the interaction types can take various forms, such as clicks, boxes, polygons, and scribbles, among which click-based interaction models are the most prevalent. Concurrent to our work, SAM [36] proposed a promptable segmentation model trained on 11 million images and 1.1 billion masks. It takes user interactions as prompts for general segmentation. Though SAM demonstrates strong zero-shot performance, it produces segmentations without semantic meaning. In addition, its prompt types are limited to points, boxes, and text, whereas our model can also take in a referred region from another image as a prompt.

**Generic segmentation.** Segmentation of visual concepts has been a persistent challenge in the field of computer vision, as evidenced by its extensive literature [37; 38; 39; 40]. Generic segmentation techniques encompass several subtasks, including instance segmentation, semantic segmentation, and panoptic segmentation [4; 2; 3], each focusing on a different semantic level. For example, semantic segmentation aims to identify and label each pixel within an image based on its corresponding semantic class [41; 6; 42]. On the other hand, instance segmentation involves grouping pixels that belong to the same semantic class into separate object instances [4; 43; 7]. Recently, the Detection Transformer (DETR)[31], a model based on the Transformer [44] architecture, has made significant advances in segmentation [45; 6; 7; 46; 47] tasks. However, these approaches cannot recognize objects absent in the training set, which constrains the model to a limited vocabulary size.

**Unified vision models.** Unified vision models [11; 48; 49; 36; 50] have recently drawn a lot of attention because of their advantage in generalizing to various tasks and flexibility. These models can deal with multiple vision tasks or data distributions. Among them, some [11; 48; 49] train multiple tasks together with only one model and thus can deal with all training tasks without finetuning on each target task. On the other hand, SAM [36] and SegGPT [50] propose training strategies that enable their models to handle new tasks and data distributions in a zero-shot manner. The second approach is more favorable since there is no need to resolve conflicts among tasks during training.

## 3 Method

### Model Design

_SEEM_ employs a generic encoder-decoder architecture but also employs a sophisticated interaction scheme between queries and prompts, as shown in Fig. 2 (a). Given an input image \(\mathbf{I}\in\mathcal{R}^{H\times W\times 3}\), an image encoder is first used to extract image features \(\mathbf{Z}\). Then, _SEEM_-Decoder predicts the masks \(\mathbf{M}\) and semantic concepts \(\mathbf{C}\) based on the query outputs \(\mathbf{O}_{h}^{m}\) (mask embeddings) and \(\mathbf{O}_{h}^{c}\) (class embeddings), which interact with text, visual, and memory prompts \(\langle\mathbf{P}_{t},\mathbf{P}_{v},\mathbf{P}_{m}\rangle\):

\[\langle\mathbf{O}_{h}^{m},\mathbf{O}_{h}^{c}\rangle =\mathbf{Decoder}(\mathbf{Q}_{h};\langle\mathbf{P}_{t},\mathbf{P }_{v},\mathbf{P}_{m}\rangle|\mathbf{Z})\] (1) \[\mathbf{M} =\mathbf{MaskPredictor}(\mathbf{O}_{h}^{m})\] (2) \[\mathbf{C} =\mathbf{ConceptClassifier}(\mathbf{O}_{h}^{c})\] (3)

Figure 2: Overview of _SEEM_- Decoder. (a) _SEEM_ encodes image, text, and human inputs into _joint visual-semantic space_ as queries, features, and prompts, and then decodes queries to class and mask embeddings. (b) With the benefit of _SEEM_ decoder, the machine loop enables memorizing history mask information, and the human loop provides new corrections to the next round.

where \(\mathbf{Q}_{h}\) is the learnable queries, and \(\mathbf{P}_{t}\), \(\mathbf{P}_{v}\), \(\mathbf{P}_{m}\) represent the text prompts, visual prompts, and memory prompts, respectively. During training, \(\mathbf{Q}_{h}\) is duplicated for generic, referring, and interactive segmentation, as shown in Fig. 3. The corresponding prompts interact with their queries through self-attention. The learnable queries can freely interact with all prompts at inference time, thereby enabling zero-shot composition. Our design is inspired by the successful practice in X-Decoder [11]. However, we highlight the differences in Eq. (1), marked in red, which allow for a universal model for image segmentation with the following properties:

Versatile. In _SEEM_, we introduce visual prompts \(\mathbf{P}_{v}\) to handle _all_ non-textual inputs, such as points, boxes, scribbles, _and_ a referred region from another image. These non-textual queries are beneficial to disambiguate the user's intent when textual prompts alone fail to identify the correct segment. For interactive segmentation, previous works either convert spatial queries to masks and feed them into the image backbone [20] or use different prompt encoders for each input type (points, boxes) [36]. The first approach can be too heavy in applications because each interaction requires the image to go through the feature extractor. The second approach is hard to generalize to unseen prompts. To address these limitations, we propose a visual sampler (Fig. 2 (a)) to convert all kinds of non-textual queries to visual prompts that lie in the same visual embedding space:

\[\mathbf{P}_{v}=\mathbf{VisualSampler}(\mathbf{s},\hat{\mathbf{Z}})\] (4)

where \(\hat{\mathbf{Z}}\) is the feature maps extracted from either the target image (_i.e._, \(\hat{\mathbf{Z}}=\mathbf{Z}\)) or a referred image, and \(s\in\{\texttt{points},\texttt{box},\texttt{scribbles},\texttt{polygons}\}\) are the sampling locations specified by the user. We first pool the corresponding region from the image feature through point sampling [6]. For all visual prompts, we interpolate at most 512 point feature vectors uniformly from the region specified by the prompt. A notable merit of our proposed method is that the visual prompts are naturally well-aligned with the textual prompts, as our model continuously learns a common visual-semantic space through panoptic and referring segmentation.

Compositional. In practice, a user may cast their intent using different or combined prompt types. Hence, a compositional approach to prompting is essential for real-world applications. However, we confront two issues during model training. First, the training data usually only covers a single type of interaction (e.g., none, textual, visual). Second, although we use visual prompts to unify all non-textual prompts and align them with textual prompts, their embedding spaces remain inherently different. To mitigate this problem, we propose to match prompts of different types with different outputs. Considering that visual prompts \(\mathbf{P}_{v}\) come from image features while textual prompts \(\mathbf{P}_{t}\) come from the text encoder, we select matched output indices for visual and textual prompts by matching them with the mask embeddings \(\mathbf{O}_{h}^{m}\) or class embeddings \(\mathbf{O}_{h}^{c}\), respectively:

\[ID_{v} \leftarrow\mathbf{Match}(\mathbf{O}_{h}^{m}\cdot\mathbf{P}_{v}+ \mathbf{IoU}_{mask})\] (5) \[ID_{t} \leftarrow\mathbf{Match}(\mathbf{O}_{h}^{c}\cdot\mathbf{P}_{t}+ \mathbf{IoU}_{mask})\] (6)

where \(\mathbf{IoU}_{mask}\) is the IoU between ground-truth and predicted masks. The proposed separate matching method outperforms approaches that only match with either \(\mathbf{O}_{h}^{m}\) or \(\mathbf{O}_{h}^{c}\) for all prompts.

After training, our model becomes familiar with all prompt types and supports a variety of compositions, such as no prompts, one prompt type, or both visual and textual prompts using the same model and weights. _In particular, the visual and textual prompts can be simply concatenated and fed to SEEM-Decoder, even though it was never trained in this way._

Interactive. Interactive segmentation usually cannot be completed in one shot and requires multiple interaction rounds for refinement, similar to conversational agents like ChatGPT. In _SEEM_, we

Figure 3: Queries and prompt interaction during training and evaluation. (a) Learnable queries are duplicated as object, grounding, and visual queries with the same set of weights for each task. (b) Attention mask between any two kinds of tokens (denoted as \(qpm\) in Algorithm. 1). Tentative means the interaction is not trained but able to do inference without any modification.

[MISSING_PAGE_FAIL:5]

[MISSING_PAGE_FAIL:6]

6.0 mIoU, and 9.3 AP50 points for the tiny model. And this gap is retained for the base and large model. Specifically, this number is computed by class embeddings \(\mathbf{O}_{h}^{c}\) (Output-Q-Textual). The margin is even larger when computed with mask embeddings \(\mathbf{O}_{h}^{m}\) (Output-Q-Visual) as shown in Table 5. Further, we benchmark the vanilla composition (Ensemble) that directly combines visual and text mask output probabilities as shown in Table 5 row 2.

**Interactive segmentation** As shown in Table 1, our approach achieves comparable performance with the specialized models, e.g. RITM, SimpleClick, and better performance than SAM [36] (B) which is trained with \(\times 100\) more segmentation data than ours. Notably, unlike existing interactive models, _SEEM_ is the first interface that supports not only classical segmentation tasks but also a wide range of user input types, including text, points, scribbles, boxes, and images, providing strong compositional capabilities as shown in Table 2,5.

**User input type of interactive segmentation** In Table 2, we compare 1-IoU of _SEEM_ with other strong baselines SimpleClick and SAM with \(5\) common types of prompts on three datasets. 1-IoU indicates the mean IoU of all images with a single click. The prompt types include point, stroke, scribble, and box. The results show that our _SEEM_ achieves the best performance in the extremely limited number of clicks over all three datasets.

**Video object segmentation** Without any modification, our model is able to do (interactive) video object segmentation in a zero-shot manner through the visual prompt (by replacing the current image visuals prompt with the visual prompts from another image). As shown in Table 3, without any observation of DAVIS/VOS dataset [71, 72], our approach is able to achieve close performance in a zero-shot manner with a fully supervised method on DAVIS17 dataset [72]. Meanwhile, our model is able to do interactive video object segmentation on DAVIS16-Interactive [72] and achieves comparable performance with the supervised baselines with one single click of the first frame.

\begin{table}
\begin{tabular}{c c c c c|c c c c c c c c c} \hline \multirow{2}{*}{Ablation} & \multirow{2}{*}{Fix} & \multirow{2}{*}{\#Iter} & \multirow{2}{*}{Pos} & \multirow{2}{*}{Neg} & \multirow{2}{*}{OCO} & \multicolumn{4}{c}{Referring Segmentation} & \multicolumn{2}{c}{Pascal VOC} & \multicolumn{4}{c}{DAVIS17} \\  & & & & & & & & & & & & & & & \\  & & & & & & & & & & & & & & & \\ \hline Baseline & Y & 0 & ✓ & ✗ & 50.7 & 39.5 & 60.8 & 57.9 & 63.3 & 71.6 & 1.4 & 54.3 & 59.6 & 55.8 & 63.5 \\ \hline \(\times\) LVIS & ✓ & 2 & ✓ & ✓ & 51.0 & 39.8 & 62.2 & 58.6 & 63.9 & 72.6 & 1.57 & 4.91 & 59.5 & 55.9 & 63.1 \\ \hline \(\times\) Negative & ✓ & 0 & ✓ & ✓ & 50.9 & 39.8 & 61.4 & 58.8 & 64.0 & 72.6 & 1.81 & 54.1 & 60.1 & 56.3 & 63.9 \\ \(\times\) Scratch & ✗ & 3 & ✓ & ✓ & 50.2 & 39.5 & 60.7 & 51.4 & 59.2 & 67.0 & 1.45 & 4.41 & 60.6 & 57.7 & 63.4 \\ \hline \(\times\) & ✓ & 1 & ✓ & ✓ & 50.7 & 39.7 & 60.5 & 58.3 & 63.4 & 71.3 & 1.76 & 51.4 & 59.2 & 55.4 & 63.0 \\ \(\times\) lier & ✓ & 2 & ✓ & ✓ & 50.5 & 39.5 & 61.0 & 58.0 & 63.2 & 71.6 & 1.78 & 52.0 & 59.6 & 56.2 & 63.0 \\ \(\times\) & ✓ & 3 & ✓ & ✓ & 50.4 & 39.5 & 61.0 & 58.0 & 63.0 & 71.5 & 1.55 & 4.67 & 59.9 & 56.4 & 63.5 \\  & ✓ & 5 & ✓ & ✓ & 50.6 & 39.4 & 60.9 & 58.4 & 63.4 & 71.6 & 1.54 & 4.59 & 59.7 & 56.3 & 63.1 \\ \hline \end{tabular}
\end{table}
Table 4: **Ablation study** on interaction strategy. “#Iter” denotes the maximum training iteration on interactive segmentation in a single forward. “Negative” means adding negative tokens during interactive segmentation. “Scratch” means the model trains from scratch.

\begin{table}
\begin{tabular}{c c c|c|c c c c c c c c c c c} \hline \multirow{2}{*}{**Method**} & \multirow{2}{*}{**Segmentation Data**} & \multirow{2}{*}{Type} & \multirow{2}{*}{**Refe-Type**} & \multirow{2}{*}{Zhou} & \multirow{2}{*}{Regular} & \multirow{2}{*}{DAVIS17} & \multirow{2}{*}{DAVIS16-Encoder} & \multirow{2}{*}{Neutron-Encoder} & \multirow{2}{*}{Neutron-Encoder} & \multirow{2}{*}{2MR} \\  & & & & & & & & & & & & & & & & & \\  & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS 6.01.01} & \multirow{2}{*}{Mask} & ✗ & ✗ & 67.4 & 64.9 & 60.9 & 60.9 & - & 71.3 & 73.3 & 65.5 & 78.2 & 72.1 \\  & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS 0.113M} & \multirow{2}{*}{Mask} & ✗ & ✗ & 60.5 & 62.2 & 72.7 & - & - & 70.6 & 60.9 & - & 61.2 & 60.7 & 60.9 & - & 61.2 \\  & & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS 0.235M} & \multirow{2}{*}{Volo} & \multirow{2}{*}{Mask} & ✗ & ✗ & 63.1 & 53.1 & 57.4 & - & - & 60.2 & 62.8 & 62.4 & 60.7 & 61.7 & 65.0 \\  & & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS 0.135M} & \multirow{2}{*}{Mask} & ✗ & ✗ & 64.1 & 53.1 & 57.4 & - & - & 60.2 & 60.1 & 58.1 & 58.9 & 58.3 & 59.7 \\  & & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS 0.135M} & \multirow{2}{*}{Mask} & ✗ & ✗ & 64.1 & 53.1 & 57.4 & - & - & - & 60.2 & 58.1 & 58.1 & 58.6 & 72.7 & 66.2 \\  & & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS 0.135M} & \multirow{2}{*}{Mask} & ✗ & ✗ & 64.1 & 53.1 & 57.4 & - & - & - & 60.2 & 58.1 & 58.6 & 72.7 & 66.2 \\  & & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS 0.135M} & \multirow{2}{*}{Mask} & ✗ & ✗ & 64.1 & 53.1 & 57.4 & - & - & - & 60.7 & 58.5 & 58.6 & 72.4 & 60.7 & 63.0 \\  & & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS-DAVIS 0.135M} & \multirow{2}{*}{Mask} & ✗ & ✗ & 64.1 & 53.1 & 57.4 & - & - & - & 70.6 & 58.1 & 58.9 & 58.6 & 72.4 \\  & & & & & & & & & & & & & & & & & & & & & \\ \hline \multirow{2}{*}{30.15} & \multirow{2}{*}{VOS-AVIS-DAVIS-DAVIS 0.135M} & \multirow{2}{*}{Mask} & ✗ & ✗ & 64.1 & 53.1 & 58.0

### Ablation Study

We conduct an ablation study on all the training segmentation tasks and zero-shot video object segmentation, dissecting each component of our model. The results are presented in Table 4.

_LVIS mask annotation will improve interactive segmentation results._ We replace the COCO mask with an overlap IoU larger than 0.7 with LVIS mask during training. This will improve the performance on interactive segmentation with 0.3 and 0.2 point gain on NoC0.9 and NoC0.85.

_Training from scratch only hurts referring segmentation performance._ We compare the _SEEM_ model trained with X-Decoder pre-trained checkpoint or the checkpoint initialized with UniCL or Florence vision and language backbone (+Scratch). It indicates that training from scratch will slightly improve the performance on interactive segmentation but hurt the referring segmentation performance.

_Increase interactive training iterations does help._ As shown in Table 4, increasing the training iteration (the first N-1 iteration is without gradient) from 1 to 5 will gradually improve the interactive segmentation performance from 5.41 to 4.59 on NoC0.9. As the computation cost increases with more clicks, we use iteration 3 for the main paper results.

### Qualitative Results

We further qualitatively evaluate _SEEM_. Based on the proposed prompting scheme and decoder design, with the same suite of parameters, _SEEM_ supports a wide range of visual input types.

**Visual prompt interactive segmentation**. In Fig. 4, we show the visualization of using _SEEM_ to segment objects in an interactive way. The user can segment objects of interest by simply clicking or drawing a scribble. Taking these prompts, _SEEM_ can simultaneously produce both masks and semantic labels for the objects. Note that our model is open-vocabulary, which empowers it to label unseen categories when given the candidate vocabulary (i.e., cheetah and butterfly in Fig. 4). When no vocabulary is given, _SEEM_ can segment in a class-agnostic manner.

**Text referring segmentation**. We show the text referring to segmentation visualization results in Fig. 5. The results demonstrate that our model is semantic-aware of open-vocabulary concepts and

Figure 4: Click/scribble-based segmentation. _SEEM_ supports arbitrary formats of clicks or scribbles by users. Moreover, it simultaneously gives the semantic label for the segmented mask, which is not possible in SAM [36].

Figure 5: Text to mask or text referring segmentation. The referred text is shown on the masks. _SEEM_ adapts to various types of input images in the domain of cartoons, movies, and games.

attributes to understand language. In addition, _SEEM_ is able to generalize to unseen scenarios like cartoons, movies, and games.

**Visual referring segmentation**. In Fig.6, we show _SEEM_'s segmentation results when prompted with referring regions from another image. By simply drawing a click or scribble on one referring image, _SEEM_ can take it as input and segment objects with similar semantics on other images. Notably, this referring segmentation has a powerful generalization capability to images of other domains. For example, by referring to the elephant in the forest, another object of the same category can be segmented well under drastically different scenes like cartoons, plush toys, and grassland.

**Video object segmentation**. In Fig.7, we further show _SEEM_'s referring segmentation ability on the video object segmentation task in a zero-shot manner. By referring to the objects in the first frame with scribbles, _SEEM_ can precisely segment the corresponding objects in the following frames, even when the following objects change in appearance by blurring or intensive deformations.

## 5 Conclusion

We presented _SEEM_, which can segment everything (all semantics) everywhere (all pixels) all at once (all possible prompt compositions). Apart from performing generic open-vocabulary segmentation, _SEEM_ can interactively take different types of visual prompts from the user, including click, box, polygon, scribble, text, and referring region from another image. These visual prompts are mapped into a _joint visual-semantic space_ with a prompt encoder, which makes our model versatile to various prompts and can flexibly compose different prompts. Extensive experiments indicate that our model yields competitive performance on several open-vocabulary and interactive segmentation benchmarks. Further studies revealed the robust generalization ability of our model in accurately segmenting images based on diverse user intents. We hope our work will serve as a stepping stone toward a universal and interactive interface for image segmentation and beyond.

Figure 6: **Zero-shot** visual referring segmentation with _SEEM_. Given a referring image with simple spatial hints, _SEEM_ can segment the regions which are semantically similar in different target images.

Figure 7: **Zero-shot** video object segmentation using the first frame plus one stroke. From top to bottom, the videos are “parkour” and “horsejump-low” from DAVIS [73], and video 101 from YouCook2 [74]. _SEEM_ precisely segments referred objects even with significant appearance changes caused by blurring or intensive deformations.

Acknowledgements.We would like to express our gratitude to Lei Zhang for his generous support. And express the appreciated for the valuable suggestions from Zhenyuan Yang, and discussion with Xiaoyu Xiang. In addition, this work was supported in part by NSF CAREER IIS2150012, NASA 80NSSC21K0295, the Institute of Information and communications Technology Planning and Evaluation (IITP) grant funded by the Korea government (MSIT) (No. 2022-0-00871, Development of AI Autonomy and Knowledge Enhancement for AI Agent Collaboration).

## References

* [1] Jianbo Shi and Jitendra Malik. Normalized cuts and image segmentation. _IEEE Transactions on pattern analysis and machine intelligence_, 22(8):888-905, 2000.
* [2] Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos, Kevin Murphy, and Alan L Yuille. Deeplab: Semantic image segmentation with deep convolutional nets, atrous convolution, and fully connected crfs. _IEEE transactions on pattern analysis and machine intelligence_, 40(4):834-848, 2017.
* [3] Alexander Kirillov, Kaiming He, Ross Girshick, Carsten Rother, and Piotr Dollar. Panoptic segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 9404-9413, 2019.
* [4] Kaiming He, Georgia Gkioxari, Piotr Dollar, and Ross Girshick. Mask r-cnn. In _Proceedings of the IEEE international conference on computer vision_, pages 2961-2969, 2017.
* [5] Huiyu Wang, Yukun Zhu, Hartwig Adam, Alan Yuille, and Liang-Chieh Chen. Max-deeplab: End-to-end panoptic segmentation with mask transformers. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 5463-5474, 2021.
* [6] Bowen Cheng, Ishan Misra, Alexander G Schwing, Alexander Kirillov, and Rohit Girdhar. Masked-attention mask transformer for universal image segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 1290-1299, 2022.
* [7] Feng Li, Hao Zhang, Shilong Liu, Lei Zhang, Lionel M Ni, Heung-Yeung Shum, et al. Mask dino: Towards a unified transformer-based framework for object detection and segmentation. _arXiv preprint arXiv:2206.02777_, 2022.
* [8] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In _International Conference on Machine Learning_, pages 8748-8763. PMLR, 2021.
* [9] Golnaz Ghiasi, Xiuye Gu, Yin Cui, and Tsung-Yi Lin. Open-vocabulary image segmentation. _arXiv preprint arXiv:2112.12143_, 2021.
* [10] Zheng Ding, Jieke Wang, and Zhuowen Tu. Open-vocabulary panoptic segmentation with maskclip. _arXiv preprint arXiv:2208.08984_, 2022.
* [11] Xueyan Zou, Zi-Yi Dou, Jianwei Yang, Zhe Gan, Linjie Li, Chunyuan Li, Xiyang Dai, Harkirat Behl, Jianfeng Wang, Lu Yuan, et al. Generalized decoding for pixel, image, and language. _arXiv preprint arXiv:2212.11270_, 2022.
* [12] Mengde Xu, Zheng Zhang, Fangyun Wei, Han Hu, and Xiang Bai. Side adapter network for open-vocabulary semantic segmentation. _arXiv preprint arXiv:2302.12242_, 2023.
* [13] Chenxi Liu, Zhe Lin, Xiaohui Shen, Jimei Yang, Xin Lu, and Alan Yuille. Recurrent multimodal interaction for referring image segmentation. In _Proceedings of the IEEE International Conference on Computer Vision_, pages 1271-1280, 2017.
* [14] Linwei Ye, Mrigank Rochan, Zhi Liu, and Yang Wang. Cross-modal self-attention network for referring image segmentation. In _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition_, pages 10502-10511, 2019.

* [15] Jiannan Wu, Yi Jiang, Peize Sun, Zehuan Yuan, and Ping Luo. Language as queries for referring video object segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 4974-4984, 2022.
* [16] Shijia Huang, Feng Li, Hao Zhang, Shilong Liu, Lei Zhang, and Liwei Wang. A unified mutual supervision framework for referring expression segmentation and generation. _arXiv preprint arXiv:2211.07919_, 2022.
* [17] Jiang Liu, Hui Ding, Zhaowei Cai, Yuting Zhang, Ravi Kumar Satzoda, Vijay Mahadevan, and R Manmatha. Polyformer: Referring image segmentation as sequential polygon generation. 2023.
* [18] Konstantin Sofiuk, Ilia A. Petrov, and Anton Konushin. Reviving iterative training with mask guidance for interactive segmentation, 2021.
* [19] Ho Kei Cheng, Yu-Wing Tai, and Chi-Keung Tang. Modular interactive video object segmentation: Interaction-to-mask, propagation and difference-aware fusion. In _CVPR_, 2021.
* [20] Qin Liu, Zhenlin Xu, Gedas Bertasius, and Marc Niethammer. Simpleclick: Interactive image segmentation with simple vision transformers. _arXiv preprint arXiv:2210.11006_, 2022.
* [21] Xi Chen, Zhiyan Zhao, Yilei Zhang, Manni Duan, Donglian Qi, and Hengshuang Zhao. Focalclick: towards practical interactive image segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 1300-1309, 2022.
* [22] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al. Language models are few-shot learners. _Advances in neural information processing systems_, 33:1877-1901, 2020.
* [23] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J Liu. Exploring the limits of transfer learning with a unified text-to-text transformer. _The Journal of Machine Learning Research_, 21(1):5485-5551, 2020.
* [24] OpenAI. Gpt-4 technical report, 2023.
* [25] Taylor Shin, Yasaman Razeghi, Robert L Logan IV, Eric Wallace, and Sameer Singh. Autoprompt: Eliciting knowledge from language models with automatically generated prompts. _arXiv preprint arXiv:2010.15980_, 2020.
* [26] Zihao Zhao, Eric Wallace, Shi Feng, Dan Klein, and Sameer Singh. Calibrate before use: Improving few-shot performance of language models. In _International Conference on Machine Learning_, pages 12697-12706. PMLR, 2021.
* [27] Xiang Lisa Li and Percy Liang. Prefix-tuning: Optimizing continuous prompts for generation. _arXiv preprint arXiv:2101.00190_, 2021.
* [28] Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Ed Chi, Quoc Le, and Denny Zhou. Chain of thought prompting elicits reasoning in large language models. _arXiv preprint arXiv:2201.11903_, 2022.
* [29] Takeshi Kojima, Shixiang Shane Gu, Michel Reid, Yutaka Matsuo, and Yusuke Iwasawa. Large language models are zero-shot reasoners. _arXiv preprint arXiv:2205.11916_, 2022.
* [30] Timo Schick, Jane Dwivedi-Yu, Roberto Dessi, Roberta Raileanu, Maria Lomeli, Luke Zettlemoyer, Nicola Cancedda, and Thomas Scialom. Toolformer: Language models can teach themselves to use tools. _arXiv preprint arXiv:2302.04761_, 2023.
* [31] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, and Sergey Zagoruyko. End-to-end object detection with transformers. In _European Conference on Computer Vision_, pages 213-229. Springer, 2020.
* [32] Hao Zhang, Feng Li, Xueyan Zou, Shilong Liu, Chunyuan Li, Jianfeng Gao, Jianwei Yang, and Lei Zhang. A simple framework for open-vocabulary segmentation and detection. _arXiv preprint arXiv:2303.08131_, 2023.

* [33] Yin Li, Jian Sun, Chi-Keung Tang, and Heung-Yeung Shum. Lazy snapping. _ACM Transactions on Graphics (ToG)_, 23(3):303-308, 2004.
* [34] Leo Grady. Random walks for image segmentation. _IEEE transactions on pattern analysis and machine intelligence_, 28(11):1768-1783, 2006.
* [35] Ning Xu, Brian Price, Scott Cohen, Jimei Yang, and Thomas S Huang. Deep interactive object selection. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 373-381, 2016.
* [36] Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alexander C. Berg, Wan-Yen Lo, Piotr Dollar, and Ross Girshick. Segment anything, 2023.
* [37] King-Sun Fu and JK Mui. A survey on image segmentation. _Pattern recognition_, 13(1):3-16, 1981.
* [38] Pedro F Felzenszwalb, Ross B Girshick, David McAllester, and Deva Ramanan. Object detection with discriminatively trained part-based models. _IEEE transactions on pattern analysis and machine intelligence_, 32(9):1627-1645, 2009.
* [39] Zhengxia Zou, Zhenwei Shi, Yuhong Guo, and Jieping Ye. Object detection in 20 years: A survey. _arXiv preprint arXiv:1905.05055_, 2019.
* [40] Shervin Minaee, Yuri Y Boykov, Fatih Porikli, Antonio J Plaza, Nasser Kehtarnavaz, and Demetri Terzopoulos. Image segmentation using deep learning: A survey. _IEEE transactions on pattern analysis and machine intelligence_, 2021.
* [41] Liang-Chieh Chen, George Papandreou, Florian Schroff, and Hartwig Adam. Rethinking atrous convolution for semantic image segmentation. _arXiv preprint arXiv:1706.05587_, 2017.
* [42] Jonathan Long, Evan Shelhamer, and Trevor Darrell. Fully convolutional networks for semantic segmentation. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 3431-3440, 2015.
* [43] Daniel Bolya, Chong Zhou, Fanyi Xiao, and Yong Jae Lee. Yolact: Real-time instance segmentation. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 9157-9166, 2019.
* [44] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz Kaiser, and Illia Polosukhin. Attention is all you need. _Advances in neural information processing systems_, 30, 2017.
* [45] Zhiqi Li, Wenhai Wang, Enze Xie, Zhiding Yu, Anima Anandkumar, Jose M Alvarez, Ping Luo, and Tong Lu. Panoptic segformer: Delving deeper into panoptic segmentation with transformers. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 1280-1289, 2022.
* [46] Jitesh Jain, Jiachen Li, MangTik Chiu, Ali Hassani, Nikita Orlov, and Humphrey Shi. Oneformer: One transformer to rule universal image segmentation. _arXiv preprint arXiv:2211.06220_, 2022.
* [47] Hao Zhang, Feng Li, Huaizhe Xu, Shijia Huang, Shilong Liu, Lionel M Ni, and Lei Zhang. Mpformer: Mask-piloted transformer for image segmentation. _arXiv preprint arXiv:2303.07336_, 2023.
* [48] Bin Yan, Yi Jiang, Jiannan Wu, Dong Wang, Ping Luo, Zehuan Yuan, and Huchuan Lu. Universal instance perception as object discovery and retrieval. _arXiv preprint arXiv:2303.06674_, 2023.
* [49] Jiasen Lu, Christopher Clark, Rowan Zellers, Roozbeh Mottaghi, and Aniruddha Kembhavi. Unified-io: A unified model for vision, language, and multi-modal tasks. _arXiv preprint arXiv:2206.08916_, 2022.
* [50] Xinlong Wang, Xiaosong Zhang, Yue Cao, Wen Wang, Chunhua Shen, and Tiejun Huang. Seggpt: Segmenting everything in context. _arXiv preprint arXiv:2304.03284_, 2023.

* [51] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Dollar, and C Lawrence Zitnick. Microsoft coco: Common objects in context. In _ECCV_, 2014.
* [52] Licheng Yu, Patrick Poirson, Shan Yang, Alexander C Berg, and Tamara L Berg. Modeling context in referring expressions. In _European Conference on Computer Vision_, pages 69-85. Springer, 2016.
* [53] Zhao Yang, Jiaqi Wang, Yansong Tang, Kai Chen, Hengshuang Zhao, and Philip HS Torr. Lavt: Language-aware vision transformer for referring image segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 18155-18165, 2022.
* [54] Qin Liu, Meng Zheng, Benjamin Planche, Srikrishna Karanam, Terrence Chen, Marc Niethammer, and Ziyan Wu. Pseudoclick: Interactive image segmentation with click imitation. In _Computer Vision-ECCV 2022: 17th European Conference, Tel Aviv, Israel, October 23-27, 2022, Proceedings, Part VI_, pages 728-745. Springer, 2022.
* [55] Alexander Kolesnikov, Andre Susano Pinto, Lucas Beyer, Xiaohua Zhai, Jeremiah Harmsen, and Neil Houlsby. UViM: A unified modeling approach for vision with learned guiding codes. _arXiv preprint arXiv:2205.10337_, 2022.
* [56] Ting Chen, Saurabh Saxena, Lala Li, Tsung-Yi Lin, David J Fleet, and Geoffrey Hinton. A unified sequence interface for vision tasks. _arXiv preprint arXiv:2206.07669_, 2022.
* [57] Xinlong Wang, Wen Wang, Yue Cao, Chunhua Shen, and Tiejun Huang. Images speak in images: A generalist painter for in-context visual learning, 2023.
* [58] Jianwei Yang, Chunyuan Li, and Jianfeng Gao. Focal modulation networks. _arXiv preprint arXiv:2203.11926_, 2022.
* [59] Mingyu Ding, Bin Xiao, Noel Codella, Ping Luo, Jingdong Wang, and Lu Yuan. Davit: Dual attention vision transformers. _arXiv preprint arXiv:2204.03645_, 2022.
* [60] Jianwei Yang, Chunyuan Li, Pengchuan Zhang, Bin Xiao, Ce Liu, Lu Yuan, and Jianfeng Gao. Unified contrastive learning in image-text-label space. In _CVPR_, 2022.
* [61] Lu Yuan, Dongdong Chen, Yi-Ling Chen, Noel Codella, Xiyang Dai, Jianfeng Gao, Houdong Hu, Xuedong Huang, Boxin Li, Chunyuan Li, Ce Liu, Mengchen Liu, Zicheng Liu, Yumao Lu, Yu Shi, Lijuan Wang, Jianfeng Wang, Bin Xiao, Zhen Xiao, Jianwei Yang, Michael Zeng, Luowei Zhou, and Pengchuan Zhang. Florence: A new foundation model for computer vision. _arXiv preprint arXiv:2111.11432_, 2021.
* [62] Zheng Lin, Zheng-Peng Duan, Zhao Zhang, Chun-Le Guo, and Ming-Ming Cheng. Focus-cut: Diving into a focus view in interactive segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 2637-2646, 2022.
* [63] Huaijia Lin, Xiaojuan Qi, and Jiaya Jia. Agss-vos: Attention guided single-shot video object segmentation. In _ICCV_, 2019.
* [64] Joakim Johnander, Martin Danelljan, Emil Brissman, Fahad Shahbaz Khan, and Michael Felsberg. A generative appearance model for end-to-end video object segmentation, 2018.
* [65] Zhihui Lin, Tianyu Yang, Maomao Li, Ziyu Wang, Chun Yuan, Wenhao Jiang, and Wei Liu. Swem: Towards real-time video object segmentation with sequential weighted expectation-maximization. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 1362-1372, 2022.
* [66] Ho Kei Cheng and Alexander G. Schwing. XMem: Long-term video object segmentation with an Atkinson-shiftrin memory model. In _ECCV_, 2022.
* [67] Qiang Wang, Li Zhang, Luca Bertinetto, Weiming Hu, and Philip HS Torr. Fast online object tracking and segmentation: A unifying approach. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, 2019.

* [68] Jiannan Wu, Yi Jiang, Peize Sun, Zehuan Yuan, and Ping Luo. Language as queries for referring video object segmentation. _arXiv preprint arXiv:2201.00487_, 2022.
* [69] Jinyu Yang, Mingqi Gao, Zhe Li, Shang Gao, Fangjing Wang, and Feng Zheng. Track anything: Segment anything meets videos, 2023.
* [70] Renrui Zhang, Zhengkai Jiang, Ziyu Guo, Shilin Yan, Junting Pan, Hao Dong, Peng Gao, and Hongsheng Li. Personalize segment anything model with one shot, 2023.
* [71] Ning Xu, Linjie Yang, Yuchen Fan, Dingcheng Yue, Yuchen Liang, Jianchao Yang, and Thomas Huang. Youtube-vos: A large-scale video object segmentation benchmark. _arXiv preprint arXiv:1809.03327_, 2018.
* [72] Jordi Pont-Tuset, Federico Perazzi, Sergi Caelles, Pablo Arbelaez, Alex Sorkine-Hornung, and Luc Van Gool. The 2017 davis challenge on video object segmentation. _arXiv preprint arXiv:1704.00675_, 2017.
* [73] Federico Perazzi, Jordi Pont-Tuset, Brian McWilliams, Luc Van Gool, Markus Gross, and Alexander Sorkine-Hornung. A benchmark dataset and evaluation methodology for video object segmentation. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 724-732, 2016.
* [74] Luowei Zhou, Chenliang Xu, and Jason Corso. Towards automatic learning of procedures from web instructional videos. In _Proceedings of the AAAI Conference on Artificial Intelligence_, volume 32, 2018.