# Acceleration Exists! Optimization Problems When Oracle Can Only Compare Objective Function Values

 Aleksandr Lobanov

MIPT, Skoltech, ISP RAS

lobbsasha@mail.ru &Alexander Gasnikov

Innopolis, MIPT, MI RAS

gasnikov@yandex.ru &Andrei Krasnov

MIPT, Innopolis

krasnov.an@phystech.edu

###### Abstract

Frequently, the burgeoning field of black-box optimization encounters challenges due to a limited understanding of the mechanisms of the objective function. To address such problems, in this work we focus on the deterministic concept of Order Oracle, which only utilizes order access between function values (possibly with some bounded noise), but without assuming access to their values. As theoretical results, we propose a new approach to create non-accelerated optimization algorithms (obtained by integrating Order Oracle into existing optimization "tools") in non-convex, convex, and strongly convex settings that are as good as both SOTA coordinate algorithms with first-order oracle and SOTA algorithms with Order Oracle up to logarithm factor. Moreover, using the proposed approach, _we provide the first accelerated optimization algorithm using the Order Oracle_. And also, using an already different approach we provide the asymptotic convergence of _the first algorithm with the stochastic Order Oracle concept_. Finally, our theoretical results demonstrate effectiveness of proposed algorithms through numerical experiments.

## 1 Introduction

The black box problem has garnered extensive attention in diverse scientific and engineering domains, reflecting the challenge of optimizing systems with complex and opaque objective functions, prompting the exploration of innovative solutions Conn et al. (2009); Kimiaei and Neumaier (2022).

This paper focuses on solving a standard general optimization problem in the following form:

\[\min_{x\in\mathbb{R}^{d}}\left\{f(x):=\mathbb{E}_{\xi\sim\mathcal{D}}f_{\xi}(x )\right\},\] (1)

where \(f:\mathbb{R}^{d}\rightarrow\mathbb{R}\) is a possibly non-convex, possibly stochastic function. This problem configuration encompasses a broad range of applications in ML scenarios, e.g. empirical risk minimization,where \(\mathcal{D}\) denotes distribution across training data points, and \(f_{\xi}(x)\) represents loss of model \(x\) on data point \(\xi\).

When the objective function \(f(x)\) has exclusive access to a zero-order oracle Rosenbrock (1960), problem (1) falls under the classification of a black-box optimization problem. This class of problems is actively studied in various application settings, e.g., deep learning Chen et al. (2017); Gao et al. (2018), federated learning Dai et al. (2020); Alashqar et al. (2023); Patel et al. (2022), reinforcement learning Choromanski et al. (2018); Mania et al. (2018), overparameterized models Lobanov and Gasnikov (2023), online optimization (Agarwal et al., 2010; Bach and Perchet, 2016; Akhavan et al., 2022), multi-armed bandits Shamir (2017); Lattimore and Gyorgy (2021), hyperparameter settings Bergstra and Bengio (2012); Hernandez-Lobato et al. (2014); Nguyen and Balasubramanian (2022), and control system performance optimization Bansal et al. (2017); Xu et al. (2022). It is important to highlight that the zero-order oracle presupposes awareness of the objective function's value \(f(x_{k})\) at a specific point \(x_{k}\) (which may be inexact), enabling the development of effective gradient-free algorithms tailored to various problem scenarios Gasnikov et al. (2022a).

In this paper, we consider concept of zero-order oracle, termed _Order Oracle_, to address problem (1):

\[\phi(x,y)=\text{sign}\left[f(x)-f(y)+\delta(x,y)\right],\] (2)

where \(|\delta(x,y)|\leq\Delta\) is some bounded noise. The Order Oracle has the capability to compare two functions; however, in contrast to the zero-order oracle, it lacks the ability to calculate or utilize the actual value of the objective function. This concept closely mirrors the challenges encountered in real-world black-box optimization problems. The motivation for the proposed oracle concept becomes more evident when considering the ongoing developments in generative models. Companies like Valio and SberAI have already embraced the active involvement of AI in dessert creation. Notably, Valio, as illustrated in Figure 1*, employed AI to determine the optimal concentration of milk for chocolate bars based on available data. However, envision a scenario where AI creates customized chocolate for an individual by adjusting the concentration of ingredients. In such a case, a flavor comparison procedure, depicted in one iteration, would involve determining the preference _order_. Given that tastes can be closely aligned, introducing bounded noise in oracle (2) mitigates the potential for errors.

To address the initial deterministic problem (1) with the Order Oracle (2), we propose a novel approach to algorithm design that uses class of coordinate descent methods (CD) Bubeck et al. (2015) as an optimization "tool" to integrate our oracle into multidimensional optimization. This approach is good in that we use linear search (where the Order Oracle is directly used) to determine not only the iteration step size, but also the gradient coordinate of the objective function. Thus demonstrating that the proposed algorithms are also adaptive. And for solving the initial stochastic problem (1) with the Order Oracle, we propose an approach based on normalized SGD, providing asymptotic convergence.

### Our contributions

More specifically, our contributions are the following:

* We provide a novel approach to design algorithms for solving deterministic optimization problems (1) with Order Oracle (2) that achieves SOTA convergence results up to logarithm factor in the non-convex, convex, and strongly convex settings (see Table 1 and Algorithm 1).
* By using the approach proposed in this paper to create algorithms for solving deterministic optimization problem (1) with the Order Oracle (2), we have shown, on an example of strongly convex functions, that acceleration in such an oracle concept exists (see Algorithm 2 and Theorem 4.1). Moreover, we have shown how the convergence results of the accelerated algorithm can be improved when the problem is low-dimensional (the algorithm described in Appendix G shows convergence that even the Ellipsoid method cannot).
* We provide the first algorithm for solving a problem (1) with the stochastic Order Oracle concept, where the _order_ between two functions on the same realization is determined.
* Through numerical experiments (see Section 7), we validate our theoretical results by comparing with first-order algorithms, as well as providing practical recommendations for implementing the first accelerated algorithm with the Order Oracle (2) (see Algorithm 2).

Figure 1: Valioâ€™s chocolate

### Main assumptions and notations

Before discussing related works, we present the notation and main assumptions we use in our work.

Notation.We use \(\langle x,y\rangle:=\sum_{i=1}^{d}x_{i}y_{i}\) to denote standard inner product of \(x,y\in\mathbb{R}^{d}\). We denote Euclidean norm in \(\mathbb{R}^{d}\) as \(\|x\|:=\sqrt{\sum_{i=1}^{d}x_{i}^{2}}\). In particular, this norm \(\|x\|:=\sqrt{\langle x,x\rangle}\) is related to the inner product. We use \(\mathbf{e}_{i}\in\mathbb{R}^{d}\) to denote the \(i\)-th unit vector. We define the norms \(\|x\|_{[\alpha]}:=\sqrt{\sum_{i=1}^{d}L_{i}^{\alpha}x_{i}^{2}}\) and \(\|x\|_{[\alpha]}^{*}:=\sqrt{\sum_{i=1}^{d}L_{i}^{\alpha}x_{i}^{2}}\). We denote by \(\nabla f(x)\) the full gradient of function \(f\) at point \(x\in\mathbb{R}^{d}\), and by \(\nabla_{i}f(x)\) the \(i\)-th coordinate gradient. The sum of constant \(L_{i}\) denotes as \(S_{\alpha}:=\sum_{i}^{d}L_{i}^{\alpha}\). We use \(S^{d}(r):=\left\{x\in\mathbb{R}^{d}:\|x\|=r\right\}\) to denote Euclidean sphere. We use \(\tilde{O}(\cdot)\) to hide the logarithmic coefficients. We denote \(f^{*}:=f(x^{*})\) as the solution to initial problem.

For all our theoretical results, we assume that \(f(x)\) is \(L_{i}\)-smooth with respect to its \(i\)-th coordinate:

**Assumption 1.1** (Smoothness).: A function \(f:\mathbb{R}^{d}\to\mathbb{R}\) is \(L\)-coordinate-Lipschitz for \(L_{1},L_{2},...,L_{d}>0\) if for any \(i\in[d]\), \(x\in\mathbb{R}^{d}\) and \(h\in\mathbb{R}\) the following inequality holds:

\[|\nabla_{i}f(x+h\mathbf{e}_{i})-\nabla_{i}f(x)|\leq L_{i}|h|.\]

The smoothness assumption of the function is widely used in the optimization literature (e.g. Boyd and Vandenberghe, 2004; Nesterov et al., 2018). However, Assumption 1.1 is specific and frequently utilized in the context of optimization via the CD method Lin et al. (2014); Zhang and Xiao (2017); Mangold et al. (2023). This assumption means that for every input point \(x\), if we alter its \(i\)-th coordinate by at most \(h\), then the corresponding gradient \(\nabla_{i}f(x+h\mathbf{e}_{i})\) differs from \(\nabla_{i}f(x)\) by at most \(L_{i}\) times \(|h|\).

Throughout this paper we assume that function \(f(x)\) can be (strongly) convex w.r.t. the norm \(\|\cdot\|_{[1-\alpha]}\):

**Assumption 1.2**.: A function \(f:\mathbb{R}^{d}\to\mathbb{R}\) is \(\mu_{1-\alpha}\geq 0\) strongly convex w.r.t. the norm \(\|\cdot\|_{[1-\alpha]}\) if for any \(x,y\in\mathbb{R}^{d}\) the following inequality holds:

\[f(y)\geq f(x)+\langle\nabla f(x),y-x\rangle+\frac{\mu_{1-\alpha}}{2}\left\|y-x \right\|_{[1-\alpha]}^{2}.\]

Many works in convex optimization rely on the (strong) convexity assumption, as evidenced by references such as Duchi (2016); Shi et al. (2019); Asi et al. (2021). Since our work employs norms \(\|\cdot\|_{[1-\alpha]}\) to derive theoretical estimates, Assumption 1.2 deviates slightly from the standard. However, this assumption of \(\mu_{1-\alpha}\) (strong) convexity is extensively used in the following literature: Nesterov (2012); Lee and Sidford (2013); Allen-Zhu et al. (2016). Assumption 1.2 can conform to standard form of \(\mu\) (strong) convexity via Euclidean norm if \(\alpha=1\). This assumption is convex provided \(\mu_{1-\alpha}=0\).

### Paper organization

Further, this paper has the following structure. In Section 2, we provide a related work discussion. We present and analyze the non-accelerated algorithm in Section 3. Then in Section 4, we discuss the feasibility of accelerating the proposed algorithm in the concept of Order Oracle and provide theoretical guarantees. We provide the first algorithm that utilizes the stochastic concept of the Order Oracle in Section 5. In Section 6, we discuss the current results of this work. Through numerical experiments in Section 7, we validate the theoretical results. While Section 8 concludes the paper.

## 2 Related Works

The literature in the field of optimization is already extensive and continuously expanding, encompassing various problem formulations and assumptions. In this section, we provide an overview of the most relevant contributions to our work. Namely both CD methods and algorithms with Order Oracle.

Algorithms with Order Oracle.In the field of black-box optimization problem, special attention has been paid to algorithms that use only the Order Oracle. For example, Stochastic Three Points Method was proposed in Bergou et al. (2020), which uses an oracle that compares three function values at once and achieves the following oracle complexity in the strongly convex case \(\mathcal{O}\left(dL/\mu\log 1/\varepsilon\right)\). A little later, the authors of Gorbunov et al. (2019) modified the Stochastic Three Points Method to thecase of importance sampling, improving the oracle complexity estimate in the strongly convex case \(\mathcal{O}\left(S_{\alpha}/\mu\log 1/\varepsilon\right)\). Already in 2021, Saha et al. (2021) provided another algorithm in which the oracle compares two function values only once per iteration. The analysis of this algorithm is based on the Sign SGD and achieves oracle complexity in the strongly convex case \(\mathcal{O}\left(dL/\mu\log 1/\varepsilon\right)\). The work of Tang et al. (2023) showed that the Order Oracle is also extensively used in _Reinforcement Learning with Human Feedback_, providing only in the non-convex case an estimate on oracle complexity \(\mathcal{O}\left(d/\varepsilon^{2}\right)\). In this paper, we propose an alternative approach for creating optimization algorithms (via line search method), which achieves SOTA convergence results with logarithm accuracy in a class of non-accelerated algorithms, and provide the first accelerated algorithm with the Order Oracle.

Coordinate descent (CD) methods.In addition to full-gradient algorithms for smooth first-order optimization, coordinate descent algorithms are categorized into accelerated and non-accelerated algorithms. Non-accelerated algorithms typically converge at rates \(1/\varepsilon\) and \(1/\mu\) in convex (\(\mu=0\)) and strongly convex (\(\mu>0\)) cases, respectively, while accelerated algorithms achieve rates \(1/\sqrt{\varepsilon}\) and \(1/\sqrt{\mu}\) in convex and strongly convex cases, respectively. This classification dates back to 1983 when Nesterov introduced the optimal convergence rates for first-order algorithms Nesterov (1983). However, the fundamental difference between coordinate descent and full-gradient descent lies in the step taken along the \(i\)-th coordinate of the gradient (directional derivative). Monograph Bubeck et al. (2015) has demonstrated that if the direction is chosen uniformly, coordinate descent may require up to \(d\) times more iterations than full-gradient descent. However, authors in Nesterov (2012) have shown that considering smoothness along the direction \(L_{i}\) can improve the number of iterations \(\mathcal{O}\left(S_{\alpha}R_{[1-\alpha]}^{2}/\varepsilon\right)\) and \(\mathcal{O}\left(S_{\alpha}/\mu_{1-\alpha}\log\frac{1}{\varepsilon}\right)\) in convex and strongly convex cases, respectively, where \(R_{[1-\alpha]}=\sup_{x\in\mathbb{R}^{d}:f(x)\leq f(x_{0})}\left\|x-x^{*} \right\|_{[1-\alpha]}\) for \(\alpha\in[0,1]\). In the same paper Nesterov (2012), the authors demonstrated the potential for acceleration in coordinate descent through the scheme proposed in Nesterov (1983). Subsequently, in Lee and Sidford (2013), they analyzed and presented an accelerated version of coordinate descent (ACDM), along with the corresponding number of required \(\mathcal{O}\left(\sqrt{dS_{\alpha}R_{[1-\alpha]}^{2}/\varepsilon}\right)\) and \(\mathcal{O}\left(\sqrt{dS_{\alpha}/\mu_{1-\alpha}}\log\frac{1}{\varepsilon}\right)\) iterations in convex and strongly convex cases, respectively. It is noteworthy that, at that time, this iteration complexity was deemed unimprovable. However, a few years later, both Nesterov and Stich (2017) and Allen-Zhu et al. (2016) independently provided same results, demonstrating that it is indeed possible to enhance the iteration complexity for accelerated coordinate descent methods by modifying the probability of choosing the \(i\)-th coordinate: \(L_{i}^{\alpha/2}/S_{\alpha/2}\). In this paper, we propose a coordinate descent algorithm with an Order Oracle (2), demonstrating that it achieves the same iteration complexity as first-order algorithms. Furthermore, based on accelerated coordinate descent Nesterov and Stich (2017), we establish on the strongly convex case that even with an Order Oracle, acceleration can be attained, resulting in the most favorable estimates on iteration complexity known to date.

## 3 Non-Accelerated Methods

In this section, we begin to present our main results, by introducing algorithms tailored to address the initial problem (1) utilizing the Order Oracle (2). Given the demand for this oracle concept, we furnish convergence guarantees and conduct comparisons with algorithms employing alternative oracles.

Our approach for developing a new algorithm involves incorporating the Order Oracle into an existing optimization method using linear search. We opt for linear search as the integration tool due to its compatibility with the Order Oracle concept. However, the choice of optimization method to which this linear search can be applied poses a crucial question. After careful consideration, we determined that the _coordinate descent method_ (CDM) is the most suitable candidate. In each iteration, the CDM, given a step size \(\zeta_{k}>0\) and starting point \(x_{0}\in\mathbb{R}^{d}\), proceeds as follows:

\[x_{k+1}=x_{k}-\underbrace{\zeta_{k}\nabla_{i_{k}}f(x_{k})}_{\eta_{k}}\mathbf{ e}_{i_{k}},\] (3)

where \(i_{k}\) is the coordinate index drawn from \([d]\). Note that the coordinate descent method step (3) requires both a step size \(\zeta_{k}\) and a gradient coordinate value \(\nabla_{i_{k}}f(x_{k})\), which are scalars. Thus, by employing linear search \(\eta_{k}=\operatorname*{arg\,min}_{\eta}\{f(x_{k}+\eta\mathbf{e}_{i_{k}})\}\) at each iteration, we can optimally determine both the direction of steepest descent and the step size to traverse along this direction, resulting in a fully adaptive algorithm. The next consideration is the strategy for coordinate selection at each iteration. Following the trend initiated by Nesterov (2012), we use a more general sampling distribution than the uniform one, obtaining already _random coordinate descent_ (RCD). Specifically, for \(\alpha>0\), we assume that a random generator \(\mathcal{R}_{\alpha}(L)\) independently selects \(i_{k}\) from the following distribution:

\[p_{\alpha}(i)=L_{i}^{\alpha}/S_{\alpha},\quad i\in[d].\] (4)

We are now ready to introduce a method designed to solve problem (1) utilizing the oracle concept (2).

This algorithm falls under the category of coordinate methods and is named _random coordinate descent with order oracle_ (OrderRCD), see Algorithm 1. It should be noted that the inherent "stochasticity" of problem (1) is artificially induced by randomized procedure used to select the \(i\)-th coordinate (4). Here, \(\xi\) denotes the \(i\)-th coordinate, and \(\mathcal{D}\) represents distribution \(p_{\alpha}(i)\) from (4). The _golden ratio method_ (GRM) serves as the linear search algorithm, which is where the Order Oracle is used. It is known that GRM (which is described in Appendix C.2) requires \(N=\mathcal{O}\left(\log 1/\epsilon\right)\) iterations to achieve the desired accuracy \(\epsilon\) (in terms of function) of the solution to the linear search problem (namely, \(\eta_{k}=\text{argmin}_{\eta}\{f(x_{k}+\eta\mathbf{e}_{i_{k}})\}\)).

Next, we present our theoretical results, demonstrating through convergence analyses that random coordinate descent with order oracle (OrderRCD) exhibits competitive iteration complexity compared to _first-order algorithms_ when applied to _non-convex_, _convex_, or _strongly convex_ functions.

### Non-convex setting

**Theorem 3.1** (non-convex).: _Let function f(x) satisfies Assumption 1.1, \(N\) is the number of iterations, \(F_{0}=f(x_{0})-f(x^{*})\), then Algorithm 1 (OrderRCD) with oracle (2) guarantees an error:_

\[\frac{1}{N}\sum_{k=0}^{N-1}\left(\left\|\nabla f(x_{k})\right\|_{[1-\alpha]}^ {*}\right)^{2}\leq\mathcal{O}\left(\frac{S_{\alpha}F_{0}}{N}+S_{\alpha} \epsilon+S_{\alpha}\Phi\Delta\right),\]

_where \(\epsilon\) is the accuracy of solving linear search problem by function and \(\Phi=\frac{1+\sqrt{5}}{2}\) is golden ratio._

The convergence results of Theorem 3.1 imply the existence of a point \(k\in[N]\) where \((\left\|\nabla f(x_{k})\right\|_{[1-\alpha]}^{*})^{2}\leq\mathcal{O}\left( \frac{S_{\alpha}F_{0}}{N}\right)\) holds true. Additionally, Theorem 3.1 indicate that, to achieve the desired accuracy \(\varepsilon\) (according to the gradient norm), Algorithm 1 requires \(N=\mathcal{O}\left(S_{\alpha}F_{0}/\varepsilon^{2}\right)\) iterations and \(T=\tilde{\mathcal{O}}\left(S_{\alpha}F_{0}/\varepsilon^{2}\right)\) calls to the oracle (2). The maximum admissible noise level ensuring the desired accuracy should not exceed \(\sim\varepsilon^{2}\). Notably, the convergence rate of random coordinate descent with the order oracle (OrderRCD), assuming minimal noise (\(\Delta\leq\varepsilon^{2}\)), is equal to _first-order method_: random coordinate descent (RCD). It is also characteristic (within the coordinate methods class) to be inferior to _gradient descent_(Ghadimi and Lan, 2013, under \(L\) smoothness assumption). For instance, in the case when \(\alpha=1\), the convergence rates \(\mathcal{O}\left(LF_{0}/N\right)\) is better because \(L\leq\sum_{i=1}^{d}L_{i}\). Not surprisingly, in terms of oracle complexity, Algorithm (1) is logarithmically inferior to first-order algorithms. This discrepancy reflects the "cost" associated with employing GRM, where the \(\tilde{O}(\cdot)\) to hide the _logarithmic coefficient_ representing the number of oracle calls in the GRM, _contingent upon its accuracy \(\epsilon\)_. A detailed proof of Theorem 3.1 is given in Appendix D.1.

### Convex setting

We now prove an analogous theorem on the convergence of the algorithm when the function is convex, i.e., additionally assuming that Assumption 1.2 is satisfied with \(\mu_{1-\alpha}=0\).

**Theorem 3.2** (convex).: _Let function \(f(x)\) satisfies Assumption 1.1 (\(L\)-Smoothness) and Assumption 1.2 (convexity, \(\mu_{1-\alpha}=0\)), then Algorithm 1 (OrderRCD) with oracle (2) guarantees an error:_

\[\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\mathcal{O}\left(\frac{S_{\alpha}R _{[1-\alpha]}^{2}}{N}+\frac{2S_{\alpha}R_{[1-\alpha]}^{2}\left(\epsilon+\Phi \Delta\right)}{F_{N-1}}\right),\]

_where \(\epsilon\) is an inner problem accuracy, \(R_{[1-\alpha]}=\sup_{x\in\mathbb{R}^{d}:f(x)\leq f(x_{0})}\left\|x-x^{*} \right\|_{[1-\alpha]}\), and \(\Phi=\frac{1+\sqrt{5}}{2}\)._In comparison to Theorem 3.1 (non-convex setting), the convergence results of Algorithm 1 demonstrate improvement under the assumption of function convexity (Assumption 1.2 with \(\mu_{1-\alpha}=0\)). Specifically, according to Theorem 3.2, random coordinate descent with order oracle (OrderRCD) requires \(N=\mathcal{O}(S_{\alpha}R_{[1-\alpha]}^{2}/\varepsilon)\) iterations and \(T=\tilde{\mathcal{O}}(S_{\alpha}R_{[1-\alpha]}^{2}/\varepsilon)\) oracle calls to achieve the desired accuracy \(\varepsilon\) (where \(\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\varepsilon\)). However, in cases where \(\Delta>0\), the condition for maximum noise remains unchanged compared to the non-convex setting. Furthermore, the iteration complexity \(N\) aligns with that of the first-order algorithm, (_random coordinate descent_ (RCD) Nestetrov, 2012). Similarly, akin to Theorem 3.2, the convergence rate of _gradient descent_ (Nesterov et al., 2018, under assuming \(L\) smoothness and convexity) outperforms that of Algorithm 1. Moreover, when \(\alpha=0\) (corresponding to a _uniform distribution_ with probability \(p_{\alpha}(i)=1/d\)), OrderRCD (like all coordinate methods) necessitates \(d\) times more iterations than gradient descent. Concerning oracle complexity \(T\), a logarithmic coefficient is evident, correlating with the number of oracle calls per iteration of Algorithm 1, line 2. For a comprehensive proof of Theorem 3.2, refer to Appendix D.2.

### Strongly convex setting

In this section we consider case when function is strongly convex (see Assumption 1.2, \(\mu_{1-\alpha}>0\)).

**Theorem 3.3** (strongly convex).: _Let function \(f(x)\) satisfies Assumption 1.1 (\(L\)-Smoothness) and Assumption 1.2 (convexity, \(\mu_{1-\alpha}>0\)), then Algorithm 1 with oracle (2) has a linear convergence rate:_

\[\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\left(1-\frac{\mu_{1-\alpha}}{S_{ \alpha}}\right)^{N}F_{0}+\frac{2S_{\alpha}\epsilon}{\mu_{1-\alpha}}+\frac{2cS_ {\alpha}\Phi\Delta}{\mu_{1-\alpha}},\]

_where \(c\) is some constant, \(\epsilon\) is the GRM accuracy (by function) and \(\Phi=\frac{1+\sqrt{5}}{2}\) is golden ratio._

As depicted in Theorem 3.3 Algorithm 1 exhibits a linear convergence rate, achieving the desired accuracy \(\varepsilon\) in \(N=\mathcal{O}\left(S_{\alpha}/\mu_{1-\alpha}\log\frac{1}{\varepsilon}\right)\) iterations and \(T=\tilde{\mathcal{O}}\left(S_{\alpha}/\mu_{1-\alpha}\log\frac{1}{\varepsilon}\right)\) oracle calls. Furthermore, there's an enhancement in the maximum noise level \(\Delta\), reaching \(\sim\mu_{1-\alpha}\varepsilon\). It's notable that a weaker strong convexity condition was employed in the proof of Theorem 3.3 (see Appendix D.3):

\[\left\|\nabla f(x)\right\|_{[1-\alpha]}^{2}\geq 2\mu_{1-\alpha}(f(x)-f(x^{*}) ),\forall x\in\mathbb{R}^{d}.\] (5)

This condition (in the case \(\alpha=1\)), also known as the Polyak-Lojasiewicz or Gradient-dominated functions condition Polyak (1963); Lojasiewicz (1963); Karimi et al. (2016); Belkin (2021), encompasses a broad class of functions: convex functions, strongly convex functions, sum of squares (e.g. where considering a system of non-linear equations), invex and _non-convex functions_, as well as over-parameterized systems. Also it is shown in Yue et al. (2023) that _non-accelerated algorithms (like Algorithm 1) are optimal for \(L\)-smooth_ problems under the Polyak-Lojasiewicz condition (5).

**High probability deviations bounds.** Given that OrderRCD method in strongly convex setting demonstrates a linear convergence rate and employs a randomization in coordinate selection, we can derive exact estimates of _high deviation probabilities_ using Markov's inequality Anikin et al. (2015):

\[\mathcal{P}\left(f(x_{N(\varepsilon\sigma)})-f^{*}\geq\varepsilon\right)\leq \sigma\frac{\mathbb{E}\left[f(x_{N(\varepsilon\sigma)}\right]-f^{*}}{ \varepsilon\sigma}\leq\sigma.\]

## 4 Accelerated Method

Random coordinate descent with order oracle (OrderRCD) demonstrates efficiency in the class of coordinate methods. The number of iterations \(N\) required to achieve the desired accuracy \(\varepsilon\) is fully identical to random coordinate descent (RCD), which is the best among the non-accelerated methods in this class, and are also not inferior to existing competitors with Order Oracle. This fact confirms that our proposed approach to developing a novel optimization algorithm is successful. However, Algorithm 1 is still not optimal because it belongs to non-accelerated algorithms. Nevertheless, Section 3 gives hope for the possibility of acceleration among algorithms using the oracle concept (2).

In this section, we demonstrate on the example of the strongly convex (Assumption 1.2 is satisfied with constant \(\mu_{1-\alpha}>0\)) problem (1) that _acceleration_ in the class of optimization algorithms using the Order Oracle (2) _exists_! For simplicity, we consider the case when \(\Delta=0\).

Our approach to creating an accelerated algorithm closely mirrors the one proposed in Section 3, which involves adapting an existing optimization method (from the class of coordinate algorithms) to the Order Oracle using linear search method (namely, golden ratio method, GRM). Among the accelerated algorithms in the class of coordinate descent, two stand out: (_accelerated coordinate descent method_ (ACDM), Nesterov and Stich, 2017) and (_accelerated coordinate descent method with non-uniform sampling_ (NU-ACDM), Allen-Zhu et al., 2016). These algorithms boost the same convergence rate and are considered among the best available today. Therefore, we select one of them (specifically, ACDM) as the base algorithm to adapt to our oracle concept (2). At each iteration, the ACDM, given parameters such as \(\alpha_{k}\), \(\beta_{k}\), \(a_{k+1}\), \(A_{k+1}\), \(B_{k+1}\), Lipschitz coordinate constant \(L_{i}\), strong convexity \(\mu_{1-\alpha}\), distribution \(p_{\beta}(i)\), and a starting point \(x_{0}=z_{0}\), proceeds as follows:

\[y_{k}=(1-\alpha_{k})x_{k}+\alpha_{k}w_{k},\] \[x_{k+1}=y_{k}-(1/L_{i_{k}})\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{ k}},\] (6) \[z_{k+1}=w_{k}-\frac{a_{k+1}}{L_{i_{k}}^{1-\alpha}B_{k+1}p_{\beta }(i)}\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}},\] (7)

where \(w_{k}=(1-\beta_{k})z_{k}+\beta_{k}y_{k}\). Looking at the \(x_{k+1}\) update (6), it seems that it should not be difficult to determine the step size \(1/L_{i_{k}}\) and the value of the gradient coordinate \(\nabla_{i_{k}}f(y_{k})\) using a linear search, as demonstrated in Algorithm 1. However, substituting the same \(\eta_{k}\) instead of \((1/L_{i_{k}})\nabla_{i_{k}}f(y_{k})\) into the \(z_{k+1}\) update (7) isn't straightforward. The step with linear search is larger than the original step of \((1/L_{i_{k}})\nabla_{i_{k}}f(y_{k})\), potentially leading to a paradoxical situation where the step worsens with linear search. This is because there is no guarantee that the function \(f\) is monotonically decreasing along the sequences \(\{z_{k}\}_{k=0}^{\infty}\) and \(\{x_{k}\}_{k=0}^{\infty}\)Nesterov (1983). Nevertheless, we have successfully addressed this challenge and we are ready to present the first accelerated algorithm utilizing only the Order Oracle: the _accelerated coordinate descent method with order oracle_.

It is evident from Algorithm 2 that the challenge was addressed by incorporating a secondary linear search, ensuring that the update step in \(z_{k+1}\) with linear search is at least as effective as (7). However, unlike Algorithm 1, OrderACDM cannot be deemed fully adaptive as it necessitates knowledge of the strong convexity constant \(\mu_{1-\alpha}\) and the Smoothness constant \(L_{i}\) (which disappears in the case where \(\alpha=0\)). Despite this, we are ready to present the main advantage of Algorithm: Faster convergence rate of Accelerated Coordinate Descent Method with Order Oracle.

**Theorem 4.1**.: _Let function \(f(x)\) is strongly convex (Assumption 1.2), \(L\)-Smoothness (Assumption 1.1) and \(L_{[1-\alpha]}\)-Smoothness+, then Algorithm 2 (OrderACDM) with oracle (2) guarantees an error_

Footnote â€ : We assume that for any \(x,y\in\mathbb{R}^{d}\) it holds: \(f(y)\leq f(x)+\langle\nabla f(x),y-x\rangle+\frac{L_{[1-\alpha]}}{2}\left\|y-x \right\|_{[1-\alpha]}^{2}\).

\[\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\left(1-\frac{\sqrt{\mu_{1-\alpha} }}{S_{\alpha/2}}\right)^{N}F_{0},\]

_where \(F_{0}=f(x_{0})-f(x^{*})\), \(S_{\alpha/2}=\sum_{i=1}^{d}L_{i}^{\alpha/2}\)._

Compared to the results of Section 3, the convergence rate demonstrated in Theorem 4.1 is superior, _confirming the potential for acceleration_ in algorithms utilizing the Order Oracle. To achieve the desired accuracy \(\varepsilon\), Algorithm 2 (OrderACDM) requires \(N=\mathcal{O}\left(S_{\alpha/2}/\sqrt{\mu_{1-\alpha}}\log\frac{1}{\varepsilon}\right)\) iterations

[MISSING_PAGE_FAIL:8]

is satisfied, we can perhaps consider that OrderRCD has optimal iteration complexity (see, Yue et al., 2023). However, when the other conditions are satisfied, this is not the case, since Algorithm 1 belongs to non-accelerated algorithms. Therefore, we believe that Section 4 provides a vector for the development of the question of optimality by showing an OrderACDM, which can perhaps be considered optimal in terms of iteration complexity. However, in the case of a _low-dimensional problem_, we can take a "Private communication" approach proposed Yurii Nesterov (for a more detailed description, see Appendix G) to create a more efficient algorithm using only oracle (2).

Before move to the numerical experiments, it's important to note that accelerated Algorithm 2 employs the golden ratio method (GRM) twice per iteration. This might raise concerns about its computational efficiency. However, in practice, we found that OrderACDM converges efficiently, comparable to the first-order algorithm, even when utilizing the golden ratio method only once. For a detailed analysis of the numerical experiments, refer to next Section 7 and Appendix B.

## 7 Numerical Experiments

In this section, we investigate the performance of the proposed algorithms in the corresponding Sections 3 and 4 on a numerical experiment. We compare OrderRCD (see Algorithm 1) and OrderACDM (see Algorithm 2), which utilize deterministic oracle concept (2) with existing first-order state-of-the-art algorithms. The goal is to highlight our theoretical results.

The optimization problem (1) has a standard quadratic form: \(\min_{x\in\mathbb{R}^{d}}f(x):=\frac{1}{2}\left\langle x,Ax\right\rangle- \left\langle b,x\right\rangle+c\), where \(A\in\mathbb{R}^{d\times d}\), \(b\in\mathbb{R}^{d}\), and \(c\in\mathbb{R}\). We use a uniform distribution (\(\alpha=0\)) to choose the active coordinate, then the distribution (4) has the following form: \(p_{0}(i)=1/d\). For such a problem, the assumptions of \(L\)-Coordinate-Lipschitz smoothness (Assumption 1.1) and \(\mu_{1-\alpha}\)-strong convexity (Assumption 1.2) are satisfied, where \(L_{i}=A_{ii}\). In all experiments, we employ the golden ratio method (GRM) to solve the linear search problem with a precision of \(\epsilon=10^{-8}\).

In Figure 2, we compare the convergence _random coordinate descent with order oracle_ (OrderRCD) and _accelerated coordinate descent method with order oracle_ (OrderACDM) with the SOTA non-accelerated algorithms: _random coordinate descent_ (RCD) from Nesterov (2012), as well as _gradient descent_ (GD). Non-accelerated coordinate algorithms, both for first-order oracle (RCD) and for our oracle concept (OrderRCD), are observed to lag behind gradient descent, confirming our theoretical derivations in Section 3. Interestingly, the random coordinate descent with order oracle even _outperforms its first-order counterpart_, despite the limitations associated with oracle usage (only Order Oracle (2) available). This observation can be attributed to the adaptiveness of Algorithm 1, as OrderRCD employs an exact step in the steepest descent direction obtained using the golden ratio method (GRM) at each iteration. Additionally, we can observe perhaps the most significant result demonstrated in Figure 2: _acceleration in our oracle concept_ (2) _exists_! We see that accelerated coordinate descent method with order oracle outpaces the convergence speed of all non-accelerated algorithms, including first-order coordinate (RCD) and full-gradient (GD) methods. In this experiment, OrderACDM was implemented using the method described in Algorithm 2 with \(\zeta_{k}=0\) (i.e., with one golden ratio method); RCD and GD used a constant step size, specifically \(1/L_{i}\) and \(1/L\).

## 8 Conclusion

We proposed a new approach to design optimization algorithms using only the deterministic concept of Order Oracle (2) by providing theoretical guarantees (showing SOTA results up to logarithm factor) for non-accelerated algorithms in non-convex, convex and strongly convex settings. We also discussed under which condition the Algorithm 1 is optimal (under the Polyak-Lojasiewicz condition). Using the proposed approach, we have shown that acceleration in the deterministic concept of the Order Oracle exists, thereby opening up a whole range of potential research. Furthermore, we have shown how the evaluation of the accelerated algorithm (so still convex tuning) can be improved by considering low-dimensional problems. Moreover, we provided first-of-its-kind theoretical guarantees for an algorithm utilizing the stochastic concept of Order Oracle (8). Finally, we demonstrated the effectiveness of the proposed algorithms (OrderRCD and OrderACDM) on numerical experiments, thereby validating the theoretical results. We provided practical recommendations for implementation of these algorithms.

Figure 2: Comparison of algorithms proposed with non-accelerated first-order algorithms.

## 9 Authors' Affiliation Clarification

MIPT \(=\)_Moscow Institute of Physics and Technology, Dolgoprudny, Russia_;

Skoltech \(=\)_Skolkovo Institute of Science and Technology, Moscow, Russia_;

ISP RAS \(=\)_Ivannikov Institute for System Programming of the Russian Academy of Sciences, Moscow, Russia_;

\(\text{Innopolis}=\)_Research Center for Artificial Intelligence, Innopolis University, Innopolis, Russia_;

MI RAS \(=\)_Steklov Mathematical Institute of Russian Academy of Sciences, Moscow, Russia_.

## 10 Acknowledgments and Disclosure of Funding

This research has been financially supported by The Analytical Center for the Government of the Russian Federation (Agreement No. 70-2021-00143 01.11.2021, IGK 000000D730324P540002). The authors are grateful to Eduard Gorbunov, Andrey Neznamov, Alexander Vedyakhin.

## References

* Agafonov et al. [2023] Artem Agafonov, Dmitry Kamzolov, Pavel Dvurechensky, Alexander Gasnikov, and Martin Takac. Inexact tensor methods and their application to stochastic convex optimization. _Optimization Methods and Software_, pages 1-42, 2023.
* Agarwal et al. [2010] Alekh Agarwal, Ofer Dekel, and Lin Xiao. Optimal algorithms for online convex optimization with multi-point bandit feedback. In _Colt_, pages 28-40. Citeseer, 2010.
* Ajalloeian and Stich [2020] Ahmad Ajalloeian and Sebastian U Stich. On the convergence of sgd with biased gradients. _arXiv preprint arXiv:2008.00051_, 2020.
* Akhavan et al. [2021] Arya Akhavan, Massimiliano Pontil, and Alexandre Tsybakov. Distributed zero-order optimization under adversarial noise. _Advances in Neural Information Processing Systems_, 34:10209-10220, 2021.
* Akhavan et al. [2022] Arya Akhavan, Evgenii Chzhen, Massimiliano Pontil, and Alexandre Tsybakov. A gradient estimator via l1-randomization for online zero-order optimization with two point feedback. _Advances in Neural Information Processing Systems_, 35:7685-7696, 2022.
* Alashqar et al. [2023] BA Alashqar, AV Gasnikov, DM Dvinskikh, and AV Lobanov. Gradient-free federated learning methods with \(l_{1}\) and \(l_{2}\)-randomization for non-smooth convex stochastic optimization problems. _Computational Mathematics and Mathematical Physics_, 63(9):1600-1653, 2023.
* Allen-Zhu et al. [2016] Zeyuan Allen-Zhu, Zheng Qu, Peter Richtarik, and Yang Yuan. Even faster accelerated coordinate descent using non-uniform sampling. In _International Conference on Machine Learning_, pages 1110-1119. PMLR, 2016.
* Anikin et al. [2015] A Anikin, P Dvurechensky, A Gasnikov, A Golov, A Gornov, Yu Maximov, M Mendel, and V Spokoiny. Modern efficient numerical approaches to regularized regression problems in application to traffic demands matrix calculation from link loads. In _Proceedings of International conference ITAS-2015_, 2015.
* Asi et al. [2021] Hilal Asi, Vitaly Feldman, Tomer Koren, and Kunal Talwar. Private stochastic convex optimization: Optimal rates in l1 geometry. In _International Conference on Machine Learning_, pages 393-403. PMLR, 2021.
* Bach and Perchet [2016] Francis Bach and Vianney Perchet. Highly-smooth zero-th order online optimization. In _Conference on Learning Theory_, pages 257-283. PMLR, 2016.
* Bansal et al. [2017] Somil Bansal, Roberto Calandra, Ted Xiao, Sergey Levine, and Claire J Tomlin. Goal-driven dynamics learning via bayesian optimization. In _2017 IEEE 56th Annual Conference on Decision and Control (CDC)_, pages 5168-5173. IEEE, 2017.
* Belkin [2021] Mikhail Belkin. Fit without fear: remarkable mathematical phenomena of deep learning through the prism of interpolation. _Acta Numerica_, 30:203-248, 2021.
* Bergou et al. [2020] El Houcine Bergou, Eduard Gorbunov, and Peter Richtarik. Stochastic three points method for unconstrained smooth minimization. _SIAM Journal on Optimization_, 30(4):2726-2749, 2020.
* Bergstra and Bengio [2012] James Bergstra and Yoshua Bengio. Random search for hyper-parameter optimization. _Journal of machine learning research_, 13(2), 2012.
* Boyd and Vandenberghe [2004] Stephen P Boyd and Lieven Vandenberghe. _Convex optimization_. Cambridge university press, 2004.
* Boyd et al. [2016]* Bubeck et al. (2015) Sebastien Bubeck et al. Convex optimization: Algorithms and complexity. _Foundations and Trends(r) in Machine Learning_, 8(3-4):231-357, 2015.
* Chen et al. (2017) Pin-Yu Chen, Huan Zhang, Yash Sharma, Jinfeng Yi, and Cho-Jui Hsieh. Zoo: Zeroth order optimization based black-box attacks to deep neural networks without training substitute models. In _Proceedings of the 10th ACM workshop on artificial intelligence and security_, pages 15-26, 2017.
* Choromanski et al. (2018) Krzysztof Choromanski, Mark Rowland, Vikas Sindhwani, Richard Turner, and Adrian Weller. Structured evolution with compact architectures for scalable policy optimization. In _International Conference on Machine Learning_, pages 970-978. PMLR, 2018.
* Conn et al. (2009) Andrew R Conn, Katya Scheinberg, and Luis N Vicente. _Introduction to derivative-free optimization_. SIAM, 2009.
* Dai et al. (2020) Zhongxiang Dai, Bryan Kian Hsiang Low, and Patrick Jaillet. Federated bayesian optimization via thompson sampling. _Advances in Neural Information Processing Systems_, 33:9687-9699, 2020.
* Duchi (2016) John Duchi. Lecture notes for statistics 311/electrical engineering 377. _URL: https://stanford. edu/class/stats311/Lectures/full notes. pdf. Last visited on_, 2:23, 2016.
* Gao et al. (2018) Ji Gao, Jack Lanchantin, Mary Lou Soffa, and Yanjun Qi. Black-box generation of adversarial text sequences to evade deep learning classifiers. In _2018 IEEE Security and Privacy Workshops (SPW)_, pages 50-56. IEEE, 2018.
* Gasnikov et al. (2022a) Alexander Gasnikov, Darina Dvinskikh, Pavel Dvurechensky, Eduard Gorbunov, Aleksander Beznosikov, and Alexander Lobanov. Randomized gradient-free methods in convex optimization. _arXiv preprint arXiv:2211.13566_, 2022a.
* Gasnikov et al. (2022b) Alexander Gasnikov, Anton Novitskii, Vasiliu Novitskii, Farshed Abdukhakimov, Dmitry Kamzolov, Aleksandr Beznosikov, Martin Takac, Pavel Dvurechensky, and Bin Gu. The power of first-order smooth optimization for black-box non-smooth problems. In _International Conference on Machine Learning_, pages 7241-7265. PMLR, 2022b.
* Ghadimi and Lan (2013) Saeed Ghadimi and Guanghui Lan. Stochastic first-and zeroth-order methods for nonconvex stochastic programming. _SIAM Journal on Optimization_, 23(4):2341-2368, 2013.
* Glasgow et al. (2022) Margalit R Glasgow, Honglin Yuan, and Tengyu Ma. Sharp bounds for federated averaging (local sgd) and continuous perspective. In _International Conference on Artificial Intelligence and Statistics_, pages 9050-9090. PMLR, 2022.
* Gorbunov et al. (2019) Eduard Gorbunov, Adel Bibi, Ozan Sener, El Hucine Bergou, and Peter Richtarik. A stochastic derivative free optimization method with momentum. In _International Conference on Learning Representations_, 2019.
* Gorbunov et al. (2020) Eduard Gorbunov, Marina Danilova, and Alexander Gasnikov. Stochastic optimization with heavy-tailed noise via accelerated gradient clipping. _Advances in Neural Information Processing Systems_, 33:15042-15053, 2020.
* Gurbuzbalaban et al. (2021) Mert Gurbuzbalaban, Umut Simsekli, and Lingjiong Zhu. The heavy-tail phenomenon in sgd. In _International Conference on Machine Learning_, pages 3964-3975. PMLR, 2021.
* Hernandez-Lobato et al. (2014) Jose Miguel Hernandez-Lobato, Matthew W Hoffman, and Zoubin Ghahramani. Predictive entropy search for efficient global optimization of black-box functions. _Advances in neural information processing systems_, 27, 2014.
* Huang et al. (2022) Feihu Huang, Shangqian Gao, Jian Pei, and Heng Huang. Accelerated zeroth-order and first-order momentum methods from mini to minimax optimization. _The Journal of Machine Learning Research_, 23(1):1616-1685, 2022.
* Jiang et al. (2019) Bo Jiang, Haoyue Wang, and Shuzhong Zhang. An optimal high-order tensor method for convex optimization. In _Conference on Learning Theory_, pages 1799-1801. PMLR, 2019.
* Karimi et al. (2016) Hamed Karimi, Julie Nutini, and Mark Schmidt. Linear convergence of gradient and proximal-gradient methods under the polyak-lojasiewicz condition. In _Machine Learning and Knowledge Discovery in Databases: European Conference, ECML PKDD 2016, Riva del Garda, Italy, September 19-23, 2016, Proceedings, Part I 16_, pages 795-811. Springer, 2016.
* Kimiaei and Neumaier (2022) Morteza Kimiaei and Arnold Neumaier. Efficient unconstrained black box optimization. _Mathematical Programming Computation_, 14(2):365-414, 2022.
* Krizhevsky et al. (2014)Nikita Kornilov, Ohad Shamir, Aleksandr Lobanov, Darina Dvinskikh, Alexander Gasnikov, Innokentiy Andreevich Shibaev, Eduard Gorbunov, and Samuel Horvath. Accelerated zeroth-order method for non-smooth stochastic convex optimization problem with infinite variance. In _Thirty-seventh Conference on Neural Information Processing Systems_, 2023.
* Kurz [2016] Heinz D Kurz. Hermann heinrich gossen (1810-1858). In _Handbook on the History of Economic Analysis Volume I_. Edward Elgar Publishing, 2016.
* Lattimore and Gyorgy [2021] Tor Lattimore and Andras Gyorgy. Improved regret for zeroth-order stochastic convex bandits. In _Conference on Learning Theory_, pages 2938-2964. PMLR, 2021.
* Lee and Sidford [2013] Yin Tat Lee and Aaron Sidford. Efficient accelerated coordinate descent methods and faster algorithms for solving linear systems. In _2013 ieee 54th annual symposium on foundations of computer science_, pages 147-156. IEEE, 2013.
* Lin et al. [2014] Qihang Lin, Zhaosong Lu, and Lin Xiao. An accelerated proximal coordinate gradient method. _Advances in Neural Information Processing Systems_, 27, 2014.
* Lobanov and Gasnikov [2023] Aleksandr Lobanov and Alexander Gasnikov. Accelerated zero-order sgd method for solving the black box optimization problem under "overparametrization" condition. In _International Conference on Optimization and Applications_, pages 72-83. Springer, 2023.
* Lojasiewicz [1963] Stanislaw Lojasiewicz. Une propriete topologique des sous-ensembles analytiques reels. _Les equations aux derivees partielles_, 117:87-89, 1963.
* Mangold et al. [2023] Paul Mangold, Aurelien Bellet, Joseph Salmon, and Marc Tommasi. High-dimensional private empirical risk minimization by greedy coordinate descent. In _International Conference on Artificial Intelligence and Statistics_, pages 4894-4916. PMLR, 2023.
* Mania et al. [2018] Horia Mania, Aurelia Guy, and Benjamin Recht. Simple random search of static linear policies is competitive for reinforcement learning. _Advances in Neural Information Processing Systems_, 31, 2018.
* Nesterov [2012] Yu Nesterov. Efficiency of coordinate descent methods on huge-scale optimization problems. _SIAM Journal on Optimization_, 22(2):341-362, 2012.
* Nesterov [2021] Yurii Nesterov. Implementable tensor methods in unconstrained convex optimization. _Mathematical Programming_, 186:157-183, 2021.
* Nesterov and Stich [2017] Yurii Nesterov and Sebastian U Stich. Efficiency of the accelerated coordinate descent method on structured optimization problems. _SIAM Journal on Optimization_, 27(1):110-123, 2017.
* Nesterov et al. [2018] Yurii Nesterov et al. _Lectures on convex optimization_, volume 137. Springer, 2018.
* Evgen'evich Nesterov [1983] Yurii Evgen'evich Nesterov. A method of solving a convex programming problem with convergence rate o\(\backslash\)bigl(k^2\(\backslash\)bigr). In _Doklady Akademii Nauk_, volume 269, pages 543-547. Russian Academy of Sciences, 1983.
* Nguyen and Balasubramanian [2022] Anthony Nguyen and Krishnakumar Balasubramanian. Stochastic zeroth-order functional constrained optimization: Oracle complexity and applications. _INFORMS Journal on Optimization_, 2022.
* Patel et al. [2022] Kumar Kshitij Patel, Aadirupa Saha, Lingxiao Wang, and Nathan Srebro. Distributed online and bandit convex optimization. In _OPT 2022: Optimization for Machine Learning (NeurIPS 2022 Workshop)_, 2022.
* Polyak [1963] Boris T Polyak. Gradient methods for the minimisation of functionals. _USSR Computational Mathematics and Mathematical Physics_, 3(4):864-878, 1963.
* Polyak and Tsypkin [1980] Boris Teodorovich Polyak and Yakov Zalmanovich Tsypkin. Optimal pseudogradient adaptation algorithms. _Avtomatika i Telemekhanika_, (8):74-84, 1980.
* Rosenbrock [1960] HoHo Rosenbrock. An automatic method for finding the greatest or least value of a function. _The computer journal_, 3(3):175-184, 1960.
* Saha et al. [2021] Aadirupa Saha, Tomer Koren, and Yishay Mansour. Dueling convex optimization. In _International Conference on Machine Learning_, pages 9245-9254. PMLR, 2021.
* Shamir [2017] Ohad Shamir. An optimal algorithm for bandit and zero-order convex optimization with two-point feedback. _The Journal of Machine Learning Research_, 18(1):1703-1713, 2017.
* Shi et al. [2019] Bin Shi, Simon S Du, Weijie Su, and Michael I Jordan. Acceleration via symplectic discretization of high-resolution differential equations. _Advances in Neural Information Processing Systems_, 32, 2019.
* Shi et al. [2019]Sebastian U Stich and Sai Praneeth Karimireddy. The error-feedback framework: Better rates for sgd with delayed gradients and compressed updates. _The Journal of Machine Learning Research_, 21(1):9613-9648, 2020.
* Tang et al. [2023] Zhiwei Tang, Dmitry Rybin, and Tsung-Hui Chang. Zeroth-order optimization meets human feedback: Provable learning via ranking oracles. In _ICML 2023 Workshop The Many Facets of Preference-Based Learning_, 2023.
* Xu et al. [2022] Wenjie Xu, Colin N Jones, Bratislav Svetozarevic, Christopher R Laughman, and Ankush Chakrabarty. Vabo: Violation-aware bayesian optimization for closed-loop control performance optimization with unmodeled constraints. In _2022 American Control Conference (ACC)_, pages 5288-5293. IEEE, 2022.
* Yue et al. [2023] Pengyun Yue, Cong Fang, and Zhouchen Lin. On the lower bound of minimizing polyak-lojasiewicz functions. In _The Thirty Sixth Annual Conference on Learning Theory_, pages 2948-2968. PMLR, 2023.
* Zhang and Xiao [2017] Yuchen Zhang and Lin Xiao. Stochastic primal-dual coordinate method for regularized empirical risk minimization. _Journal of Machine Learning Research_, 18(84):1-42, 2017.

## Appendix A A Few More Words on the Motivation Behind the Order Oracle Concept

In this Section, we would like to emphasize the motivation behind the problem statement discussed in this paper. In particular, we would like to demonstrate the applicability of this work.

### Perfect coffee for everyone

As already demonstrated in Section 1 (Introduction) with the example of chocolate, the deterministic concept of the Order Oracle has many potential applications. However, this research was initiated due to a challenge one of the co-authors faced during the realization of _a startup: the creation of an ideal coffee machine that can make the perfect drink for each customer_. This startup has just started its life cycle. At the moment we have designed a coffee machine that is functioning at the testing stage (see the photo of the machine in Figure 3 and the 3D model in Figure 4).

Brief description of the coffee machine.A coffee machine that can make the perfect coffee. By varying the proportions of strong Robusta beans, which give a bitter "Starbucks flavor", and mild Arabica beans, we can find the perfect level of bitterness and coffee strength. By varying the amount of milk and cream we can find the right level of milkiness and fat content. We can also adjust the amount of other ingredients such as sugar, ice, lemon juice, chocolate, different syrups to make sure that the customer will definitely like this coffee.

### Order Oracle: a zero-order oracle close to reality

In this Subsection, we would like to show that the oracle concept considered in this paper is perhaps the closest to reality.

One of the key criteria for evaluating optimization algorithms is oracle complexity. Oracles are commonly used in theoretical estimates, where they offer insights into the function's behavior. Forinstance, the first-order oracle is prevalent in machine learning literature: the authors of Gorbunov et al. (2020); Gurbuzbalaban et al. (2021); Huang et al. (2022) use the oracle to obtain the gradient value \(\nabla f(x_{k})\) of a function at a given point \(x_{k}\). And in Stich and Karimireddy (2020); Ajalloeian and Stich (2020); Glasgow et al. (2022), the authors assume some adversarial environment where the oracle is inaccurate, i.e., the oracle produces the gradient of the function at a given point with some adversarial noise (adversarial refers to the noise that accumulates over iterations). The authors of Nesterov (2012); Lee and Sidford (2013); Mangold et al. (2023) also refer their oracles that produce only the gradient coordinate of the function \(\nabla_{i}f(x_{k})\) at a given point \(x_{k}\) to a first-order oracle. However, this oracle formally can also be referred to the so-called gradient-free oracle Gasnikov et al. (2022), since the algorithm does not use the whole gradient, but only the directional derivative. The following works Jiang et al. (2019); Nesterov (2021); Agafonov et al. (2023) use a higher-order oracle to obtain information, for example, about the Hesse matrix of a function at a given point. But there are oracle concepts closer to reality, for example in Bach and Perchet (2016); Shamir (2017); Akhavan et al. (2021); Gasnikov et al. (2022); Kornilov et al. (2023) the authors develop algorithms that use only information about the function value \(f(x)\), possibly with some adversarial noise. Such a concept is very common in the field of black-box optimization. In this paper we consider a concept of zero-order oracle: the Order Oracle (2), which is even closer to reality, where even the function value is not available to us, but only the order between two functions (the possibility to compare). Moreover, we take into account the presence of noise (which seems to be natural in applied realities) in such an oracle.

### Why is a convex/concave function being considered?

In this Subsection, we would like to emphasize the organicity of considering the convexity/concave assumption of the objective function of the original problem (1).

"_In terms of the law of diminishing utility, the utility function is a concave function in ordinary coordinates:_" In economic science there is a concept of "utility". Usually this term is used when describing a consumer who makes a set of several goods (like a basket in a supermarket). Each such set has some utility for the consumer, and he tries to maximize it. We do not consider a consumer who makes a set of goods, but a consumer who makes the goods themselves from a set of their characteristics. We believe that here the consumer is already maximizing a "preference function" to emphasize the difference with the "utility function". For convenience, we consider all characteristics to be useful (the larger the diagonal of the TV set, the more the consumer likes it). "Harmful" characteristics, such as price, we simply replace with the inverse, because the inverse price 1/p will already be useful (among goods with the same characteristics, it is logical to assume that the consumer will choose the cheaper one). Gossen's first law sounds as follows: "The magnitude [intensity] of pleasure decreases continuously if we continue to satisfy one and the same enjoyment without interruption until satiety is ultimately reached" Kurz (2016). It is more commonly referred to as the law of diminishing marginal utility of goods. The decreasing marginal utility of a good actually means that the derivative or gradient of the utility function decreases as the quantity of the "useful attribute" increases. This leads us to the concavity of the utility function. It is therefore natural to assume that _the "preference function" will also be concave_.

## Appendix B Additional Numerical Experiments

In this Section, we provide additional experiments that solve the problem discussed in Section 7. We also give practical recommendations for implementing the accelerated Algorithm 2 in practice.

In Figure 5, we investigate effect of adversarial noise \(\delta(x,y)\) from deterministic oracle concept (2) on a random coordinate descent with order oracle (OrderRCD). We used (\(\delta(x,y)=\Delta\cdot\cos x\cdot\sin y\)) as the adversarial deterministic noise, where \(\Delta\) (s.t. \(|\delta(x,y)|\leq\Delta\)) is the maximum noise level. In Figure 5, we see that the adversarial noise justifies its name as it accumulates over iterations. In addition, we observe that the convergence of the non-accelerated coordinate method depends directly on the maximum noise level \(\Delta\), namely, the lower the noise level, the more accurately the algorithm converges. And finally we see that our theoretical results from Section 3 are confirmed, which indicate that the asymptote to which the algorithm converges can be controlled by the maximum noise level \(\Delta\), for example, in this case, when \(\alpha=0\), the condition for achieving the desired accuracy \(\varepsilon\) looks as follows: \(\Delta\leq\mu_{1-\alpha}\varepsilon/d\). Or we can rephrase this condition: the OrderRCD has a linear convergence rate to the asymptote depending on level noise \(\Delta\).

In Figure 6, we illustrate the advantage of employing Algorithm 2 with one method of line search (\(\zeta_{k}=0\)). We can observe that the method proposed in Section 4, the accelerated coordinate descent with order oracle (OrderACDM with two GRM), indeed qualifies as accelerated (thus affirming the theoretical findings of Section 4) as it outperforms gradient descent (GD), which can be considered a boundary between non-accelerated and accelerated coordinate methods. However, this algorithm significantly lags behind the accelerated coordinate descent method (ACDM, Nesterov and Stich, 2017). The reason may be the delayed momentum effect caused by using the golden ratio method (GRM) a second time (see line 10 of Algorithm 2). Addressing this may involve utilizing the golden section method only once per iteration in Algorithm 2 (that is, substitute \(\zeta_{k}=0\) into line 10). Indeed, we observe that when using the golden section method once per iteration in Algorithm 2, the OrderACDM enhances convergence rate and does not fall behind its first-order counterpart (ACDM) which confirms our theoretical results. That is why we recommend to utilize in practice accelerated coordinate descent method with order oracle (OrderACDM, see Algorithm 2) with only one the golden ratio method (GRM) per iteration.

Technical Information.All experiments were performed on an INTEL CORE i5 2.10 GHz processor. The performance of each Figure depended on the particular algorithm, for example, _gradient descent_ (GD) performed 40000 iterations in 0.1 second, while _random coordinate descent_ (RCD) and _accelerated coordinate descent method_ (ACDM) performed 40000 iterations in 0.2 seconds and 0.4 seconds respectively. But Algorithms 1 and 2 proposed in this paper, by virtue of using linear search at each iteration performed 40000 iterations in 02:02 minutes and 02:13 minutes respectively.

## Appendix C Auxiliary Results

In this section we provide auxiliary materials that are used in the proof of Theorems.

### Basic inequalities and assumptions

Basic inequalities.For all \(a,b\in\mathbb{R}^{d}\) (\(d\geq 1\)) the following equality holds:

\[\|a\|^{2}+\|b\|^{2}=2\left\langle a,b\right\rangle+\|a-b\|^{2},\] (10)

\[\left\langle a,b\right\rangle\leq\|a\|\cdot\|b\|.\] (11)

Coordinate-Lipschitz-smoothness.Throughout this paper, we assume that the smoothness condition (Assumption 1.1) is satisfied. This inequality can be represented in the equivalent form:

\[f(x+h\mathbf{e}_{i})\leq f(x)+h\nabla_{i}f(x)+\frac{L_{i}h^{2}}{2},\] (12)

where \(L_{1},L_{2},...,L_{d}>0\) for any \(i\in[d],x\in\mathbb{R}^{d}\) and \(h\in\mathbb{R}\).

Lipschitz-smoothness.To prove Theorem 4.1, we additionally assume \(L_{[1-\alpha]}\)-smoothness w.r.t. the norm \(\|\cdot\|_{[1-\alpha]}\):

\[f(y)\leq f(x)+\langle\nabla f(x),y-x\rangle+\frac{L_{[1-\alpha]}}{2}\left\|y-x \right\|_{[1-\alpha]}^{2},\quad\forall x,y\in\mathbb{R}^{d}.\] (13)

### The Golden Ratio Method (GRM)

Algorithms 1 and 2, presented in Section 3 and 4, respectively, use the Golden Ratio Method (GRM) at least once per iteration. This method utilizes the oracle concept (2) considered in this paper and has the following form (See Algorithm 3).

```
1:Input: Interval \([a,b]\)
2:Initialization: Choose constants \(\epsilon>0\) (desired accuracy), put the constant \(\rho=\frac{1}{\Phi}=\frac{\sqrt{5}-1}{2}\)
3:\(y\gets a+(1-\rho)(b-a)\)
4:\(z\gets a+\rho(b-a)\)
5:while\(b-a>\epsilon\)do
6:if\(\phi(y,z)=-1\)then
7:\(b\gets z\)
8:\(z\gets y\)
9:\(y\gets a+(1-\rho)(b-a)\)
10:else
11:\(a\gets y\)
12:\(y\gets z\)
13:\(z\gets a+\rho(b-a)\)
14:endif
15:endwhile
16:Return:\(\frac{a+b}{2}\) ```

**Algorithm 3** Golden Ratio Method (GRM)

We utilize the Golden Ratio Method to find a solution to the following one-dimensional problem:

\[\eta_{k}=\operatorname*{arg\,min}_{\eta\in\mathbb{R}}f(x_{k}+\eta\mathbf{e}_{i _{k}}).\]

Using the well-known fact about the golden ratio method that GRM is required to do \(N=\mathcal{O}\left(\log\frac{1}{\epsilon}\right)\) (where \(\epsilon\) is the accuracy of the solution to the linear search problem (by function)), we derive the following corollaries from the solution of this problem:

* In Section 4 (Accelerated Algorithms), for simplicity, we consider the scenario when the Order Oracle (2) is not subject to an adversarial noise (\(\Delta=0\)) and the golden ratio method solves the inner problem exactly (\(\epsilon\simeq 0\)). Then we can observe the following: \[f(x_{k}+\eta_{k}\mathbf{e}_{i_{k}})\leq f(x_{k}+\eta\mathbf{e}_{i_{k}}), \qquad\quad\forall\eta\in\mathbb{R}.\] (14)
* In Section 3 ("Non-Accelerated Algorithms"), we consider the scenario when the Order Oracle (2) is subjected to an adversarial noise (\(\Delta>0\)). Then from the convergence results ( by function) of the golden ratio method (GRM) we can observe the following: \[f(x_{k}+\eta_{k}\mathbf{e}_{i_{k}})\leq f(x_{k}+\eta\mathbf{e}_{i_{k}})+ \epsilon+c\Phi\Delta,\qquad\quad\forall\eta\in\mathbb{R},\] (15) where \(c\) is some constant, \(\epsilon\) is the GRM accuracy (by function) and \(\Phi=\frac{1+\sqrt{5}}{2}\) is golden ratio.

It is worth noting that we consider convergence of the golden ratio in terms of function, because we assume that our Order Oracle may be subject to adversarial noise. If we talk about convergence by argument, there may be no convergence at all with a noisy concept of the Order Oracle. Thus, in the final corollary (15), we consider the scenario where adversarial noise accumulates over iterations, resulting in the following observation: the golden ratio method converges towards the \(\mathcal{O}\left(\Delta\right)\) asymptote.

Proof of Convergence for Non-Accelerated Algorithm 1

In this section, we furnish the omitted proofs for the theorems presented in Section 3.

### Proof of Theorem 3.1

From Assumption 1.1 we obtain:

\[f\left(x_{k}+\eta_{k}\mathbf{e}_{i_{k}}\right)-f(x_{k}) \overset{\eqref{eq:1}}{\leq}f\left(x_{k}-\frac{1}{L_{i_{k}}} \nabla_{i_{k}}f(x_{k})\mathbf{e}_{i_{k}}\right)-f(x_{k})+\epsilon+c\Phi\Delta\] \[\overset{\eqref{eq:1}}{\leq}-\frac{1}{L_{i_{k}}}(\nabla_{i_{k}}f (x_{k}))^{2}+\frac{1}{2L_{i_{k}}}(\nabla_{i_{k}}f(x_{k}))^{2}+\epsilon+c\Phi\Delta\] \[=-\frac{1}{2L_{i_{k}}}(\nabla_{i_{k}}f(x_{k}))^{2}+\epsilon+c\Phi\Delta,\] (16)

where \(\eta_{k}=\arg\min_{\eta\in\mathbb{R}}f(x_{k}+\eta\mathbf{e}_{i_{k}})\). We use this as follows:

\[\mathbb{E}\left[f(x_{k+1})\right]-f(x_{k}) =\mathbb{E}\left[f\left(x_{k}+\eta_{k}\mathbf{e}_{i_{k}}\right) \right]-f(x_{k})\] \[\overset{\eqref{eq:1}}{\leq}-\sum_{i=1}^{d}p_{\alpha}(i)\frac{1 }{2L_{i}}(\nabla_{i}f(x_{k}))^{2}+\sum_{i=1}^{d}p_{\alpha}(i)\left(\epsilon+c \Phi\Delta\right)\] \[=-\frac{1}{2S_{\alpha}}\left(\|\nabla f(x_{k})\|_{[1-\alpha]}^{* }\right)^{2}+\epsilon+c\Phi\Delta.\]

Rearranging the terms and summing over all \(k\), we have

\[\sum_{k=0}^{N-1}\frac{1}{2S_{\alpha}}\left(\|\nabla f(x_{k})\|_{[ 1-\alpha]}^{*}\right)^{2} \leq\sum_{k=0}^{N-1}\left(F_{k}-F_{k+1}\right)+\sum_{k=0}^{N-1} \epsilon+\sum_{k=0}^{N-1}c\Phi\Delta\] \[\leq F_{0}+F_{N}+N\epsilon+Nc\Phi\Delta\] \[\leq F_{0}+N\epsilon+Nc\Phi\Delta,\]

where \(F_{k}=\mathbb{E}\left[f(x_{k})\right]-f(x^{*})\).

Dividing both sides by number of iterations \(N\), we obtain the convergence rate for the non-convex case:

\[\frac{1}{N}\sum_{k=0}^{N-1}\left(\|\nabla f(x_{k})\|_{[1-\alpha]}^{*}\right)^ {2}\leq\frac{2S_{\alpha}}{N}F_{0}+2S_{\alpha}\epsilon+2S_{\alpha}c\Phi\Delta.\]

This convergence results imply the existence of a point \(k\in[N]\) where holds true:

\[\left(\|\nabla f(x_{k})\|_{[1-\alpha]}^{*}\right)^{2}\leq\mathcal{O}\left( \frac{S_{\alpha}F_{0}}{N}+S_{\alpha}\epsilon+S_{\alpha}\Phi\Delta\right).\]

Then, achieving the desired accuracy \(\varepsilon\), where \(\|\nabla f(x_{k})\|_{[1-\alpha]}^{*}\leq\varepsilon\), requires

\[N=\mathcal{O}\left(\frac{S_{\alpha}F_{0}}{\varepsilon^{2}}\right),\quad\quad \quad T=\tilde{\mathcal{O}}\left(\frac{S_{\alpha}F_{0}}{\varepsilon^{2}}\right)\]

iterations and oracle calls respectively, provided the maximum noise does not exceed \(\Delta\lesssim\varepsilon^{2}/S_{\alpha}\).

### Proof of Theorem 3.2

From Assumption 1.1 we obtain:

\[f\left(x_{k}+\eta_{k}\mathbf{e}_{i_{k}}\right)-f(x_{k})\overset{\eqref{eq:1}} {\leq}f\left(x_{k}-\frac{1}{L_{i_{k}}}\nabla_{i_{k}}f(x_{k})\mathbf{e}_{i_{k}} \right)-f(x_{k})+\epsilon+c\Phi\Delta\]\[\overset{\eqref{eq:12}}{\leq}-\frac{1}{L_{i_{k}}}(\nabla_{i_{k}}f(x_{k}))^{2}+ \frac{1}{2L_{i_{k}}}(\nabla_{i_{k}}f(x_{k}))^{2}+\epsilon+c\Phi\Delta\] \[=-\frac{1}{2L_{i_{k}}}(\nabla_{i_{k}}f(x_{k}))^{2}+\epsilon+c\Phi\Delta,\] (17)

where \(\eta_{k}=\arg\min_{\eta\in\mathbb{R}}f(x_{k}+\eta\mathbf{e}_{i_{k}})\). We use this as follows:

\[\mathbb{E}\left[f(x_{k+1})\right]-f(x_{k}) =\mathbb{E}\left[f\left(x_{k}+\eta_{k}\mathbf{e}_{i_{k}}\right) \right]-f(x_{k})\] \[\overset{\eqref{eq:12}}{\leq}-\sum_{i=1}^{d}p_{\alpha}(i)\frac{1 }{2L_{i}}(\nabla_{i}f(x_{k}))^{2}+\sum_{i=1}^{d}p_{\alpha}(i)\left(\epsilon+c \Phi\Delta\right)\] \[=-\frac{1}{2S_{\alpha}}\left(\left\|\nabla f(x_{k})\right\|_{[1 -\alpha]}^{*}\right)^{2}+\epsilon+c\Phi\Delta.\] (18)

Denote \(F_{k}=\mathbb{E}\left[f(x_{k})\right]-f(x^{*})\). Note that the above calculation can be used to show \(f(x_{k+1})\leq f(x_{k})\), then we have

\[F_{k} \overset{\oplus}{\leq}\left\langle\nabla f(x_{k}),x_{k}-x^{*}\right\rangle\] \[\overset{\eqref{eq:12}}{\leq}\left\|x_{k}-x^{*}\right\|_{[1- \alpha]}\left\|\nabla f(x_{k})\right\|_{[1-\alpha]}^{*}\] \[\leq R_{[1-\alpha]}\left\|\nabla f(x_{k})\right\|_{[1-\alpha]}^{ *},\] (19)

where in 1 we used Assumption 1.2 with \(\mu_{1-\alpha}=0\), and a new notation for convenience, which looks as follows \(R_{[1-\alpha]}=\sup_{x\in\mathbb{R}^{d};f(x)\leq f(x_{0})}\left\|x-x^{*} \right\|_{[1-\alpha]}\).

Then substituting (19) into (18) we obtain:

\[F_{k+1}\leq F_{k}-\frac{1}{2S_{\alpha}R_{[1-\alpha]}^{2}}F_{k}^{2}+\epsilon+ c\Phi\Delta.\]

Rewriting this inequality, we obtain:

\[\frac{1}{2S_{\alpha}R_{[1-\alpha]}^{2}}F_{k}^{2}\leq F_{k}-F_{k+1}+\epsilon+ c\Phi\Delta.\]

Next, we divide both sides by \(F_{k+1}F_{k}\):

\[\frac{1}{2S_{\alpha}R_{[1-\alpha]}^{2}}\cdot\frac{F_{k}}{F_{k+1}}\leq\frac{1} {F_{k+1}}-\frac{1}{F_{k}}+\frac{\epsilon+c\Phi\Delta}{F_{k+1}F_{k}}.\]

Using the fact that \(\frac{1}{2S_{\alpha}R_{[1-\alpha]}^{2}}\leq\frac{1}{2S_{\alpha}R_{[1-\alpha]} ^{2}}\frac{F_{k}}{F_{k+1}}\) we obtain the following:

\[\frac{1}{2S_{\alpha}R_{[1-\alpha]}^{2}}\leq\frac{1}{F_{k+1}}-\frac{1}{F_{k}}+ \frac{\epsilon+c\Phi\Delta}{F_{k+1}F_{k}}.\]

When summing over all \(k\)

\[\sum_{k=0}^{N-1}\frac{1}{2S_{\alpha}R_{[1-\alpha]}^{2}}\leq\sum_{k=0}^{N-1} \left(\frac{1}{F_{k+1}}-\frac{1}{F_{k}}\right)+\sum_{k=0}^{N-1}\frac{\epsilon +c\Phi\Delta}{F_{k+1}F_{k}},\]

we get:

\[N\frac{1}{2S_{\alpha}R_{[1-\alpha]}^{2}} \leq\frac{1}{F_{N}}-\frac{1}{F_{0}}+\frac{N\left(\epsilon+c\Phi \Delta\right)}{F_{N}F_{N-1}}\] \[\leq\frac{1}{F_{N}}+\frac{N\left(\epsilon+c\Phi\Delta\right)}{F_{N }F_{N-1}}.\]Taking into account the fact that \(F_{N-1}=\mathbb{E}\left[f(x_{N-1})\right]-f(x^{*})\geq\varepsilon\) and rewriting the expression we obtain the convergence rate for the convex case:

\[\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\frac{2S_{\alpha}R_{[1-\alpha]}^{2} }{N}+\frac{2S_{\alpha}R_{[1-\alpha]}^{2}}{\varepsilon}\left(\epsilon+c\Phi \Delta\right).\]

Then, achieving the desired accuracy \(\varepsilon\), where \(\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\varepsilon\), requires

\[N=\mathcal{O}\left(\frac{S_{\alpha}R_{[1-\alpha]}^{2}}{\varepsilon}\right), \hskip 28.452756ptT=\tilde{\mathcal{O}}\left(\frac{S_{\alpha}R_{[1-\alpha]}^{2 }}{\varepsilon}\right)\]

iterations and oracle calls respectively, provided the maximum noise does not exceed the following value \(\Delta\lesssim\varepsilon^{2}/(S_{\alpha}R_{[1-\alpha]}^{2})\).

### Proof of Theorem 3.3

From Assumption 1.1 we obtain:

\[f\left(x_{k}+\eta_{k}\mathbf{e}_{i_{k}}\right)-f(x_{k}) \overset{\eqref{eq:f(x_k+1)}}{\leq}f\left(x_{k}-\frac{1}{L_{i_{k}}} \nabla_{i_{k}}f(x_{k})\mathbf{e}_{i_{k}}\right)-f(x_{k})+\epsilon+c\Phi\Delta\] \[\overset{\eqref{eq:f(x_k+1)}}{\leq}-\frac{1}{L_{i_{k}}}(\nabla_{ i_{k}}f(x_{k}))^{2}+\frac{1}{2L_{i_{k}}}(\nabla_{i_{k}}f(x_{k}))^{2}+\epsilon+c\Phi\Delta\] \[=-\frac{1}{2L_{i_{k}}}(\nabla_{i_{k}}f(x_{k}))^{2}+\epsilon+c\Phi\Delta,\] (20)

where \(\eta_{k}=\arg\min_{\eta\in\mathbb{R}}f(x_{k}+\eta\mathbf{e}_{i_{k}})\). We use this as follows:

\[\mathbb{E}\left[f(x_{k+1})\right]-f(x_{k}) =\mathbb{E}\left[f\left(x_{k}+\eta_{k}\mathbf{e}_{i_{k}}\right) \right]-f(x_{k})\] \[\overset{\eqref{eq:f(x_k+1)}}{\leq}-\sum_{i=1}^{d}p_{\alpha}(i) \frac{1}{2L_{i}}(\nabla_{i}f(x_{k}))^{2}+\sum_{i=1}^{d}p_{\alpha}(i)\left( \epsilon+c\Phi\Delta\right)\] \[=-\frac{1}{2S_{\alpha}}\left(\left\|\nabla f(x_{k})\right\|_{[1- \alpha]}^{*}\right)^{2}+\epsilon+c\Phi\Delta.\] (21)

By strong convexity, we have

\[f(x_{k})-f(x^{*}) \overset{\eqref{eq:f(x_k+1)}}{\leq}\langle\nabla f(x_{k}),x_{k} -x^{*}\rangle-\frac{\mu_{1-\alpha}}{2}\left\|x_{k}-x^{*}\right\|_{[1-\alpha]}\] \[\overset{\eqref{eq:f(x_k+1)}}{\leq}\left\|\nabla f(x_{k})\right\| _{[1-\alpha]}^{*}\cdot\left\|x_{k}-x^{*}\right\|_{[1-\alpha]}-\frac{\mu_{1- \alpha}}{2}\left\|x_{k}-x^{*}\right\|_{[1-\alpha]}\] \[\leq\frac{1}{\mu_{1-\alpha}}\left(\left\|\nabla f(x_{k})\right\| _{[1-\alpha]}^{*}\right)^{2},\]

where in 1 we used Assumption 1.2 with \(\mu_{1-\alpha}>0\). Then, using this inequality in (21) we have

\[\mathbb{E}\left[f(x_{k+1})\right]-f(x^{*})\leq\left(1-\frac{\mu_{1-\alpha}}{2 S_{\alpha}}\right)(f(x_{k})-f(x^{*}))+\epsilon+c\Phi\Delta.\]

Applying recursion we obtain a linear convergence rate:

\[\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\left(1-\frac{\mu_{1-\alpha}}{2S_ {\alpha}}\right)^{N}(f(x_{0})-f(x^{*}))+\frac{2S_{\alpha}\epsilon}{\mu_{1- \alpha}}+\frac{2cS_{\alpha}\Phi\Delta}{\mu_{1-\alpha}}.\]

Then, achieving the desired accuracy \(\varepsilon\), where \(\mathbb{E}\left[f(x_{N})\right]-f(x^{*})\leq\varepsilon\), requires

\[N=\mathcal{O}\left(\frac{S_{\alpha}}{\mu_{1-\alpha}}\log\frac{1}{\varepsilon} \right),\hskip 28.452756ptT=\tilde{\mathcal{O}}\left(\frac{S_{\alpha}}{\mu_{1- \alpha}}\log\frac{1}{\varepsilon}\right)\]

iterations and oracle calls respectively, provided the maximum noise does not exceed the following value \(\Delta\lesssim\mu_{1-\alpha}\varepsilon/S_{\alpha}\).

Proof of Convergence for Accelerated Algorithm 2

Denote \(\omega_{k}=(1-\beta_{k})z_{k}+\beta_{k}y_{k}\). Then

\[y_{k}=\frac{(1-\alpha_{k})x_{k}}{1-\alpha_{k}\beta_{k}}+\frac{\alpha_{k}(1-\beta _{k})}{1-\alpha_{k}\beta_{k}}\cdot\frac{\omega_{k}-\beta_{k}y_{k}}{1-\beta_{k} }=\frac{(1-\alpha_{k})x_{k}+\alpha_{k}\omega_{k}}{1-\alpha_{k}\beta_{k}}-\frac {\alpha_{k}\beta_{k}y_{k}}{1-\alpha_{k}\beta_{k}}.\]

Thus, in method we have the following representation:

\[y_{k}=(1-\alpha_{k})x_{k}+\alpha_{k}\omega_{k}.\] (22)

Let the solution of initial problem denote \(x^{*}=x_{*}=\arg\min_{x\in\mathbb{R}^{d}}f(x)\), then from Assumption 1.1 we obtain:

\[\frac{2L_{i_{k}}^{\alpha}a_{k+1}^{2}}{B_{k+1}^{2}p_{\beta}^{2}(i_ {k})}\left(f(\underbrace{y_{k}+\eta_{k}\mathbf{e}_{i_{k}}}_{x_{k+1}})-f(y_{k} )\right)\stackrel{{\eqref{eq:22}}}{{\leq}}\frac{2L_{i_{k}}^{ \alpha}a_{k+1}^{2}}{B_{k+1}^{2}p_{\beta}^{2}(i_{k})}\left(f\left(y_{k}-\frac{1 }{L_{i_{k}}}\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}}\right)-f(y_{k})\right)\] \[\stackrel{{\eqref{eq:22}}}{{\leq}}-\frac{a_{k+1}^{2 }}{L_{i_{k}}^{1-\alpha}B_{k+1}^{2}p_{\beta}^{2}(i_{k})}\left(\nabla_{i_{k}}f(y _{k})\right)^{2}\pm\left\|\omega_{k}-x_{*}\right\|_{[1-\alpha]}^{2}\] \[=-L_{i_{k}}^{1-\alpha}\left[(\omega_{k}^{(i_{k})}-x_{*}^{(i_{k})} )^{2}+\left(\frac{a_{k+1}}{L_{i_{k}}^{1-\alpha}B_{k+1}p_{\beta}(i_{k})}\nabla _{i_{k}}f(y_{k})\right)^{2}\right]-\sum_{i\neq i_{k}}L_{i}^{1-\alpha}(\omega_{ k}^{(i)}-x_{*}^{(i)})^{2}\] \[\qquad+\left\|\omega_{k}-x_{*}\right\|_{[1-\alpha]}^{2}\] \[\stackrel{{\eqref{eq:22}}}{{=}}-L_{i_{k}}^{1-\alpha} \left[\left(\omega_{k}^{(i_{k})}-x_{*}^{(i_{k})}-\frac{a_{k+1}}{L_{i_{k}}^{1- \alpha}B_{k+1}p_{\beta}(i_{k})}\nabla_{i_{k}}f(y_{k})\right)^{2}+\frac{2a_{k+1 }}{L_{i_{k}}^{1-\alpha}B_{k+1}p_{\beta}(i_{k})}\left\langle\nabla_{i_{k}}f(y_ {k}),\omega_{k}^{(i_{k})}-x_{*}^{(i_{k})}\right\rangle\right]\] \[\qquad-\sum_{i\neq i_{k}}L_{i}^{1-\alpha}(\omega_{k}^{(i)}-x_{*} ^{(i)})^{2}+\left\|\omega_{k}-x_{*}\right\|_{[1-\alpha]}^{2}\] \[=-\left\|\omega_{k}-\frac{a_{k+1}}{L_{i_{k}}^{1-\alpha}B_{k+1}p_{ \beta}(i_{k})}\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}}-x_{*}\right\|_{[1- \alpha]}^{2}+\left\|\omega_{k}-x_{*}\right\|_{[1-\alpha]}^{2}\] \[\qquad-\frac{2a_{k+1}}{B_{k+1}p_{\beta}(i_{k})}\left\langle\nabla _{i_{k}}f(y_{k}),\omega_{k}^{(i_{k})}-x_{*}^{(i_{k})}\right\rangle+\frac{2}{ \mu_{1-\alpha}}\left\langle\nabla f(x_{*}),z_{k+1}-x_{*}\right\rangle\] \[\stackrel{{\eqref{eq:22}}}{{\leq}}-\left\|\omega_{k} -\frac{a_{k+1}}{L_{i_{k}}^{1-\alpha}B_{k+1}p_{\beta}(i_{k})}\nabla_{i_{k}}f(y_ {k})\mathbf{e}_{i_{k}}-x_{*}\right\|_{[1-\alpha]}^{2}+\left\|\omega_{k}-x_{*} \right\|_{[1-\alpha]}^{2}\] \[\qquad-\frac{2a_{k+1}}{B_{k+1}p_{\beta}(i_{k})}\left\langle \nabla_{i_{k}}f(y_{k}),\omega_{k}^{(i_{k})}-x_{*}^{(i_{k})}\right\rangle- \left\|z_{k+1}-x_{*}\right\|_{[1-\alpha]}^{2}+\frac{2}{\mu_{1-\alpha}}\left( f(z_{k+1})-f(x_{*})\right)\] \[\stackrel{{\eqref{eq:22}}}{{\leq}}-\left\|z_{k+1}-x _{*}\right\|_{[1-\alpha]}^{2}+\left\|\omega_{k}-x_{*}\right\|_{[1-\alpha]}^{2}- \frac{2a_{k+1}}{B_{k+1}p_{\beta}(i_{k})}\left\langle\nabla_{i_{k}}f(y_{k}), \omega_{k}^{(i_{k})}-x_{*}^{(i_{k})}\right\rangle\] \[\qquad+\frac{2}{\sigma_{1-\alpha}}\left[f(z_{k+1})-f(x_{*})+f(x_ {*})-f\left(\omega_{k}-\frac{a_{k+1}}{L_{i_{k}}^{1-\alpha}B_{k+1}p_{\beta}(i_{k} )}\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}}\right)\right]\] \[\stackrel{{\eqref{eq:22}}}{{\leq}}-\left\|z_{k+1}-x _{*}\right\|_{[1-\alpha]}^{2}+\left\|\omega_{k}-x_{*}\right\|_{[1-\alpha]}^{2}- \frac{2a_{k+1}}{B_{k+1}p_{\beta}(i_{k})}\left\langle\nabla_{i_{k}}f(y_{k}), \omega_{k}^{(i_{k})}-x_{*}^{(i_{k})}\right\rangle,\] (23)where in 1 we used Assumption 1.2 with \(\mu_{1-\alpha}>0\).

Denote \(r_{k}^{2}=\left\|z_{k}-x_{*}\right\|_{[1-\alpha]}^{2}\) and \(\omega_{k}=(1-\beta_{k})z_{k}+\beta_{k}y_{k}\), then due to convexity of the norm function it follows:

\[\left\|\omega_{k}-x_{*}\right\|_{[1-\alpha]}^{2}\leq(1-\beta_{k})\left\|z_{k}- x_{*}\right\|_{[1-\alpha]}^{2}+\beta_{k}\left\|y_{k}-x_{*}\right\|_{[1-\alpha]}^{2}.\] (24)

Substituting (24) into (23) we obtain

\[B_{k+1}r_{k+1}^{2} \stackrel{{\eqref{eq:24}}}{{\leq}}(1-\beta_{k})B_{k +1}r_{k}^{2}+\beta_{k}B_{k+1}\left\|y_{k}-x_{*}\right\|_{[1-\alpha]}^{2}\] \[\qquad-\frac{2a_{k+1}}{p_{\beta}(i_{k})}\left\langle\nabla_{i_{k }}f(y_{k})\mathbf{e}_{i_{k}},\omega_{k}^{i_{k}}-x_{*}^{i_{k}}\right\rangle+ \frac{2L_{i_{k}}^{\alpha}a_{k+1}^{2}}{B_{k+1}p_{\beta}^{2}(i_{k})}\left(f(y_{k })-f(x_{k+1})\right)\] \[\stackrel{{\gtrless}}{{\leq}}B_{k}r_{k}^{2}+\beta_ {k}B_{k+1}\left\|y_{k}-x_{*}\right\|_{[1-\alpha]}^{2}-\frac{2a_{k+1}}{p_{\beta }(i_{k})}\left\langle\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}},\omega_{k}^{i_{ k}}-x_{*}^{i_{k}}\right\rangle+\frac{2L_{i_{k}}^{\alpha}a_{k+1}^{2}S_{\beta}^{2}}{B_{k+1 }p_{\beta}^{2}(i_{k})}\left(f(y_{k})-f(x_{k+1})\right)\] \[\stackrel{{\gtrless}}{{\leq}}B_{k}r_{k}^{2}+\beta_ {k}B_{k+1}\left\|y_{k}-x_{*}\right\|_{[1-\alpha]}^{2}-\frac{2a_{k+1}}{p_{\beta }(i_{k})}\left\langle\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}},\omega_{k}^{i_{ k}}-x_{*}^{i_{k}}\right\rangle+\frac{2L_{i_{k}}^{\alpha}a_{k+1}^{2}S_{\beta}^{2}}{B_{k+1 }L_{i_{k}}^{2}}\left(f(y_{k})-f(x_{k+1})\right)\] \[\stackrel{{\gtrless}}{{=}}B_{k}r_{k}^{2}+\beta_{k}B _{k+1}\left\|y_{k}-x_{*}\right\|_{[1-\alpha]}^{2}-\frac{2a_{k+1}}{p_{\beta}(i _{k})}\left\langle\nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}},\omega_{k}^{i_{k}}- x_{*}^{i_{k}}\right\rangle+\frac{2a_{k+1}^{2}S_{\beta}^{2}}{B_{k+1}}\left(f(y_{k})-f(x_{k+1}) \right),\]

where in 1 we use that \((1-\beta_{k})B_{k+1}=B_{k+1}-\sigma_{1-\alpha}a_{k+1}=B_{k}\), and in 2 we use that \(\alpha=2\beta\).

Note that \(\mathbb{E}\left[f(x_{k+1})\right]=\sum_{i=1}^{d}p_{\beta}(i)f(x_{k+1})\). Therefore, taking expectation we obtain:

\[\mathbb{E}\left[B_{k+1}r_{k+1}^{2}\right] \leq B_{k}r_{k}^{2}+\beta_{k}B_{k+1}\left\|y_{k}-x_{*}\right\|_{[1 -\alpha]}^{2}-\mathbb{E}\left[\frac{2a_{k+1}}{p_{\beta}(i_{k})}\left\langle \nabla_{i_{k}}f(y_{k})\mathbf{e}_{i_{k}},\omega_{k}^{i_{k}}-x_{*}^{i_{k}}\right\rangle\right]\] \[\qquad+\frac{2a_{k+1}^{2}S_{\beta}^{2}}{B_{k+1}}\left(f(y_{k})- \mathbb{E}\left[f(x_{k+1})\right]\right)\] \[\leq B_{k}r_{k}^{2}+\beta_{k}B_{k+1}\left\|y_{k}-x_{*}\right\|_{[1- \alpha]}^{2}-\sum_{i=1}^{d}p_{\beta}(i)\frac{2a_{k+1}}{p_{\beta}(i)}\left\langle \nabla_{i}f(y_{k})\mathbf{e}_{i},\omega_{k}^{i}-x_{*}^{i}\right\rangle\] \[\qquad+\frac{2a_{k+1}^{2}S_{\beta}^{2}}{B_{k+1}}\left(f(y_{k})- \mathbb{E}\left[f(x_{k+1})\right]\right)\] \[=B_{k}r_{k}^{2}+\beta_{k}B_{k+1}\left\|y_{k}-x_{*}\right\|_{[1- \alpha]}^{2}+2a_{k+1}\left\langle\nabla f(y_{k}),x_{*}-\omega_{k}\right\rangle +\frac{2a_{k+1}^{2}S_{\beta}^{2}}{B_{k+1}}\left(f(y_{k})-\mathbb{E}\left[f(x_{ k+1})\right]\right).\]

Since \(\omega_{k}\stackrel{{\eqref{eq:24}}}{{=}}y_{k}+\frac{1-\alpha_{k}}{ \alpha_{k}}(y_{k}-x_{k})\), we obtain

\[2a_{k+1}\left\langle\nabla f(y_{k}),x_{*}-\omega_{k}\right\rangle =2a_{k+1}\left\langle\nabla f(y_{k}),x_{*}-y_{k}+\frac{1-\alpha_{k}}{ \alpha_{k}}(x_{k}-y_{k})\right\rangle\] \[\stackrel{{\gtrless}}{{\leq}}2a_{k+1}\left(f(x_{*})- f(y_{k})\right)-a_{k+1}\sigma_{1-\alpha}\left\|x_{*}-y_{k}\right\|_{[1-\alpha]}^{2}\] \[\qquad+2a_{k+1}\frac{1-\alpha_{k}}{\alpha_{k}}\left(f(x_{k})-f(y _{k})\right)\] \[\stackrel{{\gtrless}}{{=}}2a_{k+1}f(x_{*})-2A_{k+1}f(y _{k})+2A_{k}f(x_{k})-a_{k+1}\sigma_{1-\alpha}\left\|x_{*}-y_{k}\right\|_{[1- \alpha]}^{2},\] (25)

where in 1 we use Assumption 1.2 with \(\mu_{1-\alpha}>0\) and in 2 we use that \(a_{k+1}\frac{1-\alpha_{k}}{\alpha_{k}}=a_{k+1}\frac{1-\frac{\alpha_{k+1}}{ \alpha_{k+1}}}{\frac{\alpha_{k+1}}{\lambda_{k+1}}}=A_{k+1}-a_{k+1}=A_{k}\).

\[\mathbb{E}\left[B_{k+1}r_{k+1}^{2}\right]\

[MISSING_PAGE_EMPTY:23]

**Lemma F.1**.: _Let the function \(f\) be \(L\)-smooth (for all \(x,y\in\mathbb{R}^{d}\) it holds: \(f(y,\xi)\leq f(x,\xi)+\left\langle\nabla f(x,\xi),y-x\right\rangle+\frac{L}{2} \left\|y-x\right\|^{2}\)), \(\gamma=\frac{\left\|\nabla f(x,\xi)\right\|}{\sqrt{dL}}\) and \(\mathbf{e}\in S^{d}(1)\), then the following holds:_

\[\phi(x+\gamma\mathbf{e},x-\gamma\mathbf{e},\xi)\mathbf{e}=\operatorname{sign} \left[\left\langle\nabla f(x,\xi),\mathbf{e}\right\rangle\right]\mathbf{e}.\]

Proof.: From the Assumption of \(L\)-smoothness of the function \(f\) we have:

\[\left\langle\nabla f(x,\xi),\gamma\mathbf{e}\right\rangle-\frac{L \gamma^{2}}{2} \leq f(x+\gamma\mathbf{e},\xi)-f(x,\xi)\leq\left\langle\nabla f (x,\xi),\gamma\mathbf{e}\right\rangle+\frac{L\gamma^{2}}{2};\] \[-\left\langle\nabla f(x,\xi),\gamma\mathbf{e}\right\rangle- \frac{L\gamma^{2}}{2} \leq f(x-\gamma\mathbf{e},\xi)-f(x,\xi)\leq-\left\langle\nabla f (x,\xi),\gamma\mathbf{e}\right\rangle+\frac{L\gamma^{2}}{2}.\]

Subtracting the inequalities, we obtain

\[\left|f(x+\gamma\mathbf{e},\xi)-f(x-\gamma\mathbf{e},\xi)-2\gamma\left\langle \nabla f(x,\xi),\mathbf{e}\right\rangle\right|\leq L\gamma^{2}.\]

Consequently, if \(L\gamma^{2}\leq\gamma|\left\langle\nabla f(x,\xi),\mathbf{e}\right\rangle|\), we have that

\[\phi(x+\gamma\mathbf{e},x-\gamma\mathbf{e},\xi)\mathbf{e}=\operatorname{sign} \left[\left\langle\nabla f(x,\xi),\mathbf{e}\right\rangle\right]\mathbf{e}.\]

Let's analyse \(\mathcal{P}_{\mathbf{e}}\left(L\gamma\leq|\left\langle\nabla f(x,\xi), \mathbf{e}\right\rangle|\right)\). It is known that for \(\mathbf{u}\sim\mathcal{N}\left(0,I\right)\), \(\mathbf{e}:=\frac{\mathbf{u}}{\left\|\mathbf{u}\right\|}\) is a vector uniformly distributed on the unit Euclidean sphere. Then the following is true:

\[\mathcal{P}_{\mathbf{e}}\left(|\left\langle\nabla f(x,\xi), \mathbf{e}\right\rangle|\geq L\gamma\right) =\mathcal{P}_{\mathbf{u}}\left(|\left\langle\nabla f(x,\xi), \mathbf{u}\right\rangle|\geq L\gamma\|\mathbf{u}\|\right)\] \[\leq\mathcal{P}_{\mathbf{u}}\left(|\left\langle\nabla f(x,\xi), \mathbf{u}\right\rangle|\geq 2L\gamma\sqrt{d\log 1/\tilde{\beta}}\right)+ \mathcal{P}_{\mathbf{u}}\left(\|\mathbf{u}\|\geq 2\sqrt{d\log 1/\tilde{\beta}}\right)\] \[\leq\mathcal{P}_{\mathbf{u}}\left(|\left\langle\nabla f(x,\xi), \mathbf{u}\right\rangle|\geq 2L\gamma\sqrt{d\log 1/\tilde{\beta}}\right)+\tilde{ \beta},\]

where we used the well-known fact that \(\forall\tilde{\beta}\): \(\mathcal{P}_{\mathbf{u}}\left(\|\mathbf{u}\|\leq 2\sqrt{d\log 1/\tilde{\beta}} \right)\geq 1-\tilde{\beta}\). On the other hand, since \(\left\langle\nabla f(x,\xi),\mathbf{u}\right\rangle\sim\mathcal{N}\left(0, \left\|\nabla f(x,\xi)\right\|^{2}\right)\), then for all \(\gamma>0\) we obtain

\[\mathcal{P}\left(|\left\langle\nabla f(x,\xi),\mathbf{u}\right\rangle|\leq \gamma\right)\leq\frac{2\gamma}{\left\|\nabla f(x,\xi)\right\|\sqrt{2\pi}}\leq \frac{\gamma}{\left\|\nabla f(x,\xi)\right\|}.\]

Combining the inequalities, we have that \(\phi(x+\gamma\mathbf{e},x-\gamma\mathbf{e},\xi)\mathbf{e}=\operatorname{sign }\left[\left\langle\nabla f(x,\xi),\mathbf{e}\right\rangle\right]\mathbf{e}\) except with probability at most

\[\inf_{\tilde{\beta}>0}\left\{\tilde{\beta}+\frac{2L\gamma\sqrt{d\log 1/ \tilde{\beta}}}{\left\|\nabla f(x,\xi)\right\|}\right\}\leq\frac{3L\gamma}{ \left\|\nabla f(x,\xi)\right\|}\sqrt{d\log\frac{\left\|\nabla f(x,\xi)\right\| }{\sqrt{d}L\gamma}}\stackrel{{\Box}}{{=}}0=\beta,\]

where in 1 we take \(\gamma=\frac{\left\|\nabla f(x,\xi)\right\|}{\sqrt{d}L}\). Thus, given the condition on the smoothing parameter, the statement of the Lemma is satisfied with probability 1.

**Lemma F.2**.: _Let vector \(\nabla f(x,\xi)\in\mathbb{R}^{d}\) and vector \(\mathbf{e}\in S^{d}(1)\), then we have_

\[\mathbb{E}\left[\operatorname{sign}\left[\left\langle\nabla f(x,\xi), \mathbf{e}\right\rangle\right]\mathbf{e}\right]=\frac{c}{\sqrt{d}}\cdot\frac{ \nabla f(x,\xi)}{\left\|\nabla f(x,\xi)\right\|},\]

_where \(c\in[\frac{1}{20},1]\) is some universal constant._

Proof.: Without loss of generality, we can assume \(\left\|\nabla f(x,\xi)\right\|=1\), as normalizing \(\left\|\nabla f(x,\xi)\right\|\) does not impact the left-hand side. First, let's demonstrate that \(\mathbb{E}\left[\operatorname{sign}\left[\left\langle\nabla f(x,\xi), \mathbf{e}\right\rangle\right]\mathbf{e}\right]=\zeta\nabla f(x,\xi)\) for some \(\zeta\in\mathbb{R}\). Consider the reflection matrix along \(\nabla f(x,\xi)\) given by:

\[P=2\nabla f(x,\xi)\nabla f(x,\xi)^{\mathsf{T}}-I,\]

[MISSING_PAGE_FAIL:25]

Description of the "Private Communication" Approach

In this section, we describe an approach privately communicated to us by Yurii Nesterov to create a more efficient algorithm for _low-dimensional_ problems, compared to the gradient-based methods proposed in this paper, using only the Order Oracle (2).

Consider the following method for solving the problem of minimizing a convex Lipschitz function (with Lipschitz constant \(L\)) on a square in \(\mathbb{R}^{2}\) with side \(R\). A _horizontal line_ (blue line) is drawn through the center of the square. On the interval carved from the square of this line, with accuracy \(\sim\varepsilon/\log(LR/\varepsilon)\) (by function) we solve the one-dimensional optimization (line search) problem. At the found point (blue point), the direction of the function gradient (which is determined via the Order Oracle) is calculated and it is determined in which of the two rectangles it "looks"; this rectangle is "discarded". A _vertical line_ (red line) is drawn through the center of the remaining rectangle, and on the segment carved by this line in the rectangle, also with accuracy \(\sim\varepsilon/\log(LR/\varepsilon)\) (by function) solves the problem of one-dimensional optimization (line search) problem. At the found point (red point), the direction of the function gradient (which is determined via the Order Oracle) is calculated and it is determined in which of the two rectangles it "looks"; this rectangle is "discarded". As a result of this procedure, the linear size of the original square is halved (green square). The schematic of the performance of the algorithm is shown in Figure 7.

**Corollary G.1**.: _It is not difficult to show that after \(\log(LR/\varepsilon)\) repetitions of such a procedure we can find with \(\varepsilon\) accuracy (by function) the solution of the original problem._

## Appendix G

Figure 7: Schematic of algorithm

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: For convenience, we have also added a Subsection "_Our contributions_" to Section 1 (Introduction). Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: See Section 1 (Introduction) where we formulate the problem statement. See also the statement of Theorems, where we provide conditions under which the theoretical results are guaranteed, and the discussion of them. In addition, we discuss in Section 6 (Discussion) how the algorithm would behave if we move away from the assumptions under consideration, e.g., the gradient dominance assumption (Polyak-Lojasiewicz condition). Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs**Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes] Justification: The main assumptions and notations can be found in Section 1 (Introduction). Each theoretical statement contains conditions (assumptions) under which a particular result is guaranteed. And also after each theoretical result (discussion) there is a link to the Appendix section with a detailed proof. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: Section 7 (Experiments) presents a particular problem formulation (1), which demonstrates the performance of the proposed algorithms with its counterparts in a numerical experiment. Also, both in the main Section 7 and in the additional Numerical Experiments Section (Appendix B), detailed information on the hyperparameters used and other information necessary to reproduce the experiments is provided. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset).

4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [No] Justification: We believe that the presented experiments contain well-described information that allows us to implement the code on ourselves without difficulty. However, if the Reviewers or Area Chair feel that the information provided is not sufficient for reproducibility of the experiments, we will certainly add a link to an anonymous repository with the code. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: In both the main Section 7 and the supplementary Section (Appendix B), we have provided experiments with detailed information including, for example, parameter values, adversarial noise function, etc. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [No]Justification: Unfortunately running experiments several times to calculate statistics and error bars would be too computationally expensive Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) * The assumptions made should be given (e.g., Normally distributed errors). * It should be clear whether the error bar is the standard deviation or the standard error of the mean. * It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified. * For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates). * If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: Detailed information is provided in the section with additional experiments (see Appendix B, Technical Information) Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: Research conforms with NeurIPS Code of Ethics Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts**Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA] Justification: This work does not have a negative social impact Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations. * The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster. * The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. * If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: Presented research doesn't need safeguards Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: All the used assets are cited Guidelines: * The answer NA means that the paper does not use existing assets.

* The authors should cite the original paper that produced the code package or dataset.
* The authors should state which version of the asset is used and, if possible, include a URL.
* The name of the license (e.g., CC-BY 4.0) should be included for each asset.
* For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.
* If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.
* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
13. **New Assets** Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: This work provides as new assets unique theoretical results that are verified by numerical experiment. If necessary, we will provide a code license after acceptance of the paper Guidelines: * The answer NA means that the paper does not release new assets. * Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc. * The paper should discuss whether and how consent was obtained from people whose asset is used. * At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
14. **Crowdsourcing and Research with Human Subjects** Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects Guidelines: * The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. * Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper. * According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
15. **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects** Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA]Justification: The paper does not involve crowdsourcing nor research with human subjects Guidelines:

* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.