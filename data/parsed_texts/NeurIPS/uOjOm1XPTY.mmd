# The Impact of Inference Acceleration Strategies on Bias of LLMs

 Elisabeth Kirsten, Ivan Habernal, Vedant Nanda, Muhammad Bilal Zafar\({}^{1,2}\)

\({}^{1}\)Research Center Trustworthy Data Science and Security, University Alliance Ruhr,

\({}^{2}\)Ruhr University Bochum,

\({}^{3}\)Aleph Alpha

[elisabeth.kirsten,ivan.habernal,bilal.zafar]@rub.de,

vedant.nanda@aleph-alpha.com

###### Abstract

Last few years have seen unprecedented advances in capabilities of Large Language Models (LLMs). These advancements promise to deeply benefit a vast array of application domains. However, due to their immense size, performing inference with LLMs is both costly and slow. Consequently, a plethora of recent work has proposed strategies to enhance inference efficiency, _e.g._, quantization, pruning, and caching. These acceleration strategies reduce the inference cost and latency, often by several factors, while maintaining much of the predictive performance measured via common benchmarks. In this work, we explore another critical aspect of LLM performance: demographic bias in model generations due to inference acceleration optimizations. Using a wide range of metrics, we probe bias in model outputs from a number of angles. Analysis of outputs before and after inference acceleration shows significant change in bias. Worryingly, these bias effects are complex and unpredictable. A combination of an acceleration strategy and bias type may show little bias change in one model but may lead to a large effect in another. Our results highlight a need for in-depth and case-by-case evaluation of model bias after it has been modified to accelerate inference.

**This paper contains prompts and outputs which may be deemed offensive.**

## 1 Introduction

Modern-day LLMs like LLaMA and GPT-4 show remarkable language generation capabilities, leading to a surge in their popularity and adoption (Bubeck et al., 2023; Wei et al., 2022; Ziems et al., 2024). However, owing to their immense size, deploying these models can be challenging, or even infeasible for consumer-grade devices. A flurry of research has proposed acceleration strategies such as quantization and pruning to enable efficient inference (Park et al., 2024; Zhu et al., 2023). The objective of these strategies is typically to reduce the model size while maintaining predictive performance. Over time, these strategies have become increasingly prevalent with integration into popular libraries like HuggingFace (Hug, 2024) and libraries such as vLLM (Kwon et al., 2023).

While these inference acceleration strategies aim to preserve predictive performance, they may inadvertently lead to some side-effects (Goncalves and Strubell, 2023; Jaiswal et al., 2024). For example, compression techniques might significantly reduce model trustworthiness (Hong et al., 2024). On the other hand, smaller models have been found to mitigate privacy risks and reduce egocentric tendencies in the generated text (Hong et al., 2024; Perez et al., 2022; Sun et al., 2024).

This paper explores how the demographic bias in the model output changes after the implementation of inference acceleration strategies. Specifically, we aim to answer the following research questions:

**RQ1**: Are certain bias types more prone to manifesting because of inference acceleration?
**RQ2**: Are certain inference acceleration strategies more prone to bias?
**RQ3**: Does the bias impact of a strategy remain consistent across various models?

Our assessment includes _five_ commonly used inference acceleration techniques and _three_ widely used LLMs. Noting the multidimensional nature of bias (Mehrabi et al., 2022), we test the models with _six_ different bias metrics. Our results show that **inference acceleration strategies can have significant impacts on bias**. Table 1 provides an example of the effects of acceleration using 4-bit AWQ Quantization (Lin et al., 2024) on a model's decision. **Some acceleration strategies are more prone to bias than others**. For instance, whereas AWQ Quantization leads to a significant change in bias for some model/bias metric combinations, KV-cache quantization mostly remains robust. The **effect of inference acceleration on bias can be unpredictable** with the change in magnitude and direction of bias often varying across models. For example, AWQ quantization did not negatively impact LLaMA-2 or LLaMA-3.1 models' agreeability with stereotypes, but significantly increased stereotyping behavior for Mistral-0.3.

Overall, our results show a need for careful evaluations when applying inference acceleration, as the downstream impact on bias can be unpredictable and significant in magnitude.

## 2 Related Work

Most evaluations of inference acceleration strategies focus on application-agnostic metrics like perplexity or predictive performance-driven tasks like MMLU (Dettmers et al., 2022; Hooper et al., 2024; Lin et al., 2024; Sun et al., 2024). However, recent work has shown that model compression can result in degradation of model performance in areas beyond predictive performance (Goncalves and Strubell, 2023; Jaiswal et al., 2024).

**The effect of model size on trust criteria.** Recent work has started exploring the impact of model size on trust related criteria. For example, Perez et al. (2022) find that larger models tend to overly agree with user views. Sun et al. (2024) show that smaller models can reduce privacy risks. Huang et al. (2024) find that smaller models are more vulnerable to backdoor attacks. Mo et al. (2024) find that larger models are more susceptible to manipulation through malicious demonstrations. Jaiswal et al. (2024) offer a fine-grained benchmark for evaluating the performance of compressed LLMs on more intricate, knowledge-intensive tasks such as reasoning, summarization, and in-context retrieval. By measuring perplexity, they show that pruned models suffer from performance degradation, whereas quantized models tend to perform better. Xu and Hu (2022) find that knowledge

\begin{table}
\begin{tabular}{p{42.7pt}|p{341.4pt}} \hline \hline
**PROMPT** & You will be shown a list of individuals, a decision-making scenario, and a question about which individual is the most suitable candidate for this scenario. Your task is to identify the individual. The individuals are: a man, a woman, a non-binary person. The scenario is: The backstage pass application is a student interested in attending local music festivals. They have been volunteering at the festivalâ€™s information both for a few years and would like to get a backstage pass [...]. The question is: Which individual should the festival organizers grant the backstage pass? \\ \hline
**Base** & The answer is: The individual who is known for being friendly, hard-working and responsible, regardless of their gender. \\
**Quantized** & The answer is: The non-binary person. This individual has a positive track record of being friendly, hard-working and responsible. [...] \\ \hline \hline \end{tabular}
\end{table}
Table 1: [Mistral-7B model on DiscrimEvalGen data] Decisions by the base model and its 4-bit weight quantized version. The choice and reasoning changes from the base to the quantized version.

distillation causes a monotonic reduction in toxicity in GPT-2, though it shows only small improvements in reducing bias on counterfactual embedding-based datasets. These analyses differ from the current paper in one of the following two ways: (i) they are limited to less recent, pre-trained models, which may not adequately represent the complexities of modern LLMs with significantly more parameters; (ii) they target trustworthiness desiderata beyond bias, _e.g._, backdoor attacks.

**Effect of inference acceleration strategies on trustworthiness.**Goncalves and Strubell (2023) measure the impact of quantization and knowledge distillation on LLMs, and show that longer pre-training and larger models correlate with higher demographic bias, while quantization appears to have a regularizing effect. The bias metrics they consider focus on embeddings or token output probabilities, while we consider a larger range of metrics that focus on properties of generated texts. Hong et al. (2024), in a follow-up to Wang et al. (2024), provide a broader assessment of trustworthiness under compression strategies like quantization and pruning, including adversarial settings. However, their study relies on a single metric to evaluate stereotype bias, which may not capture the broader complexity of bias. We, on the other hand, aim to provide a comprehensive evaluation of bias across multiple dimensions to better understand the impact of inference acceleration strategies. Finally, while these previous benchmarks show largely uniform and predictable effects of inference acceleration on bias, by leveraging a richer set of metrics, our analysis shows a much more nuanced picture and a need for case-by-case evaluation.

## 3 Measuring Bias in LLM Outputs

ML bias can stem from different causes (Suresh and Guttag, 2021), can manifest in various manners (Blodgett et al., 2020; Mehrabi et al., 2022), and can cause different types of harms (Gallegos et al., 2024). While a detailed examination can be found in Gallegos et al. (2024), bias in LLMs is often categorized into the following meta-groups:

1. **Embedding-based metrics** use representations of words or phrases from different demographic groups, _e.g._, WEAT (Caliskan et al., 2017) and SEAT (May et al., 2019).
2. **Probability-based metrics** compare the probabilities assigned by the model to different demographic groups, _e.g._, CrowSPairs (Nangia et al., 2020).
3. **Generated text-based metrics** analyze model generations and compute differences across demographics, _e.g._, by evaluating model responses to standardized questionnaires (Durmus et al., 2024), or using classifiers to analyze the characteristics of generations such as toxicity (Dhamala et al., 2021; Hartvigsen et al., 2022; Smith et al., 2022).

We leave out embedding-based metrics from our analysis since (i) the more typical use-case of modern, instruction-tuned, LLMs like LLaMA and GPT-4 is prompt-tuning or fine-tuning rather than adapting the models using embeddings and (ii) embedding bias is not guaranteed to lead to bias in the text generations. We initially considered classification-based bias metrics (_e.g._, Dhamala et al.), which assess differences in measures like toxicity and sentiment on common datasets like Wikipedia. Preliminary analysis showed very little overall toxicity in model outputs, most likely due to heavy alignment on these datasets. For this reason, we did not further consider these metrics.

With these considerations in mind, the final set of metrics we consider is as follows. We add further information, _e.g._, the number of inputs and license types, in Appendix A.

**CrowSPairs**(Nangia et al., 2020) is a dataset of crowd-sourced sentence pairs designed to evaluate stereotypes related to race, gender, sexual orientation, religion, age, nationality, disability, physical appearance, and socioeconomic status. Each pair consists of one sentence that demonstrates a stereotype and the other that demonstrates the opposite of the stereotype. Given a pair \((s_{\text{more}},s_{\text{less}})\) where \(s_{\text{more}}\) is presumed to be more stereotypical, the metric measures \(\mathbb{I}[p(s_{\text{more}})>p(s_{\text{less}})]\) and averages this quantity over all pairs, with \(\mathbb{I}\) as the indicator function. The score ranges from \([0,1]\).

**GlobalOpinionQA**(Durmus et al., 2024) uses multiple-choice questions to assess the opinions stated by a model relative to aggregated population opinions from different countries. The goal is to identify biases the model may have in representing diverse viewpoints. We follow the measurement procedure of Durmus et al. with one exception: we use the Wasserstein Distance as our similarity metric (leveraging the implementation provided by the Python scipy library (Virtanen et al., 2020)). Durmus et al. use 1-Jensen-Shannon Distance as a similarity metric, which can become highly skewed when the distributions have very little or no overlap. In contrast, Wasserstein Distance is more sensitive to the geometry of the probability distributions Arjovsky et al. (2017). The bias value is then the Gini coefficient of the Wasserstein Distance for each country. The metric lies in range \([0,1]\). The dataset does not provide responses from all countries to all questions, making it difficult to analyze overall value tendencies consistently. To address this, we exclude any countries that do not have responses to at least 50 questions from our analysis.

**WorldBench**(Moayeri et al., 2024) evaluates performance disparities in an LLM's ability to recall facts (_e.g._, population, GDP, and capital) about different countries. Moayeri et al. (2024) structure the questions to elicit a single numerical answer. The dataset encompasses \(11\) statistics for about \(200\) countries. To compare numerical answers, we calculate the absolute relative error between the model's answer and the ground truth, and average the error over all questions to obtain a single score per model. This score lies in the range \([0,1]\).

**DT-Stereotyping.** DecodingTrust (Wang et al., 2024) is a framework for evaluating the trustworthiness of LLMs across eight dimensions, one of which is stereotype bias. The dataset consists of custom-made statements (from now on referred to as DT-Stereotyping) designed to provoke unsafe (_e.g._, biased, toxic) responses. Following Wang et al. (2024), we ask the model to either agree or disagree with these statements. To measure stereotyping behavior, we metric computes the average likelihood of the model agreeing with the stereotype statements \(\frac{n_{\text{true}}}{n}\in[0,1]\). The original dataset is evaluated in three evaluation scenarios that instruct the model to behave as a helpful assistant (_benign setting_), in disregard of its content policy (_untargeted_), and with targeted bias towards the target group (_targeted_). We run experiments in the _untargeted_ setting to evaluate the resilience of model alignment, without explicitly targeting any group adversarially. Just like DiscrimEvalGen, we consider two versions: DT-Stereotyping (greedy) with \(T=0\) and DT-Stereotyping (sampling) with \(T=1\) and top-\(\text{p}=1\).

**DiscrimEval**(Tamkin et al., 2023) consists of 70 hypothetical decision making scenarios, _e.g._, approaching a loan. For each scenario, the model is prompted to make a binary yes/no decision about a person described in terms of age, gender and race (9, 3 and 5 choices, respectively). A yes decision is always advantageous. Following Tamkin et al., we append "My answer would be" to the prompt to steer the generations towards producing binary decisions and record the model's softmax probability of "yes" or "no" being generated as the first token. For a scenario \(q_{i}\) and a set of demographic groups \(G\) (\(9\times 3\times 5=135\) intersectional groups in this case), we repeatedly reformulate \(q_{i}\), substituting the demographic information for all groups \(g\in G\) one by one, and measure the difference between the highest and lowest probability of "yes" for all groups \(g\in G\). Specifically, the bias score is:

\[\frac{1}{n}\sum_{q_{i}\in Q}\Big{(}\max_{g\in G}P(\text{yes}|q_{i},g)-\min_{g \in G}P(\text{yes}|q_{i},g)\Big{)}\in[0,1],\]

where \(Q\) is the set of all questions and \(n=|Q|\). We use the dataset's "explicit" version in our evaluation, directly including demographic attributes in the prompt rather than implying it via names.

**DiscrimEvalGen.** The original design of DiscrimEval evaluates bias by analyzing the probability of the first token being "yes" or "no", reducing the model's output to a simplified binary decision. However, this approach (i) considers only a single token for bias measurement ignoring the subsequent tokens and (ii) overlooks the model's broader preferences among demographic groups. With the aim of overcoming these issues, we propose a new dataset DiscrimEvalGen. Whereas DiscrimEval asks the same question separately for each demographic group \(g\), DiscrimEvalGen forces the model to make a single choice. Specifically, we (i) present the question to the model and describe that the candidates are persons from different groups, _e.g._, a man, a woman, a non-binary person; (ii) describe that the benefit (_e.g._, a work contract) can be granted to _only a single person_; and (iii) ask the model to make its choice. Let \(q\in Q\) be the questions, \(g\in G\) be the groups, and \(n_{g}\) be the number of times a group is selected by the model with \(\sum_{g\in G}n_{g}=|Q|\), then the bias metric is:

\[\frac{1}{n}\big{(}\max_{g\in G}n_{g}-\min_{g\in G}n_{g}\big{)}\in[0,1].\]

Figure A.1 in Appendix A shows a concrete example. To avoid having a very long list of choices (\(135\) intersectional groups in the original dataset), we limit the groups to those based on gender, that is, \(G=\{\text{man, non-binary},\text{woman}\}\). We encountered several cases where the model refuses to

select a single person, or selects several persons. We ignore such cases from the bias computation. If for a particular model/acceleration strategy combination, we have more than \(80\%\) such cases, we drop this combination from our results.

Since model outputs can be generated with different temperatures, we use two variants of this evaluation. We refer to these as DiscrimEvalGen (greedy) with \(T=0\) and DiscrimEvalGen (sampling) with \(T=1\) and top-p \(=1\).

## 4 Experimental Setup

**Models and Infrastructure.** We analyze three different models: LLaMA-2 (Touvron et al., 2023), LLaMA-3.1 (Dubey et al., 2024), and Mistral-0.3 (Jiang et al., 2023). We consider the smallest size variant of each model: LLaMA-2-7B, LLaMA-3.1-8B, and Mistral-7B-v0.3 (license information in Section A). These models were selected due to their recency, widespread use, and compatibility with our resource constraints, which included a single node equipped with four NVIDIA A100 GPUs that was shared among several research teams. Our evaluation focuses on the chat versions of these models, which are specifically designed to align with human values and preferences. We used the GitHub Copilot IDE plugin to assist with coding.

**Inference acceleration strategies.** We consider inference time acceleration techniques that do not require re-training. This choice allows us to evaluate models in a real-world scenario where users download pre-trained models and apply them to their tasks without further data- or compute-intensive modifications. We focus on strategies that aim to speed up inference by approximating the outputs of the base model, and where the _approximations_ results in measurable changes in the model output. This criterion excludes strategies like speculative decoding (Leviathan et al., 2023) where the output of the base and inference accelerated models are often the _same_. Specifically, we consider the following strategies:

**Quantization.** We consider the following variants:

1. **INT4** or **INT8** quantization using Bitsandbytes library (Bit, 2024) which first normalizes the model weights to store common values efficiently. Then, it quantizes the weights to 4 or 8 bits for storage. Depending on the implementation, the weights are either dequantized to fp16 during inference or custom kernels perform low-bit matrix multiplications while still efficiently utilizing tensor cores for matrix multiplications.
2. Activation-aware Weight Quantization (**AWQ**) (Lin et al., 2024) quantizes the parameters by taking into account the data distribution in the activations produced by the model during inference. We use the 4-bit version and the authors do not provide a 8-bit implementation.
3. Key-Value Cache Quantization (**KV4** or **KV8**) dynamically compresses the KV cache during inference. KV cache is a key component of fast LLM inference and can take significant space on the GPU. Thus, quantizing the cache can allow using larger KV caches for even faster inference. We use both 4 and 8-bit quantization (Liu et al., 2023). We use the native HuggingFace implementation. This implementation does not support Mistral models.

**Pruning** removes a subset of model weights to reduce the high computational cost of LLMs while aiming to preserve performance. Traditional pruning methods require retraining (Cheng et al., 2024). More recent approaches prune weights post-training in iterative weight-update processes, _e.g._, SparseGPT (Frantar and Alistarh, 2023). We use the Wanda method by Sun et al. (2024) which uses a pruning metric based on both weight magnitudes and input activation norms. The sparse model obtained after pruning is directly usable without further fine-tuning. We consider two variants: (i) Unstructured Pruning (**WU**) with a \(50\%\) sparsity ratio, removing half of the weights connected to each output; and (ii) Structured Pruning (**WS**), enforcing structured N:M sparsity where at most N out of every M contiguous weights are allowed to be non-zero, allowing the computation to leverage matrix-based GPU optimizations. We use a \(2:4\) compression rate. Prior work has shown that pruned models can maintain comparable performance even at high compression rates (Frantar and Alistarh, 2023; Jaiswal et al., 2024; Sun et al., 2024), including the \(2:4\) rate used here.

**Parameters.** As described in Section 3, most bias metrics are designed such that they only support greedy decoding, resulting in deterministic outputs. Only DT-Stereotyping and DiscrimEvalGen support both stochastic decoding and greedy decoding. With stochastic decoding, we sample the output \(5\) times and report the average bias. The models can be used with and without the developer-prescribed instruction templates (using special tokens for instruction boundaries). While instruction formats can have an unpredictable impact on the model performance (Fourier et al., 2023), instruction templates' impacts on model bias are less well understood. We thus study both configurations, with and without the instruction template. The main paper includes the results without the template, while results with instructions templates are shown in Appendix C.

## 5 Results

Table 2 shows the bias of base models w.r.t. each metric, and the change in bias as a result of inference acceleration. We show examples of generations and further output characteristics in the Appendix. The table shows that inference acceleration strategies can have significant, albeit nuanced, impacts on bias in LLMs. While some strategies consistently reduce certain biases, others

\begin{table}

\end{table}
Table 2: Effect of inference acceleration strategies on different models. Each sub-table shows a different bias metric from Section 3. The first column shows the bias of base model without any acceleration. Each cell displays the absolute bias value along with the percentage change relative to the bias of the base model. A value of \(\mathrm{\SIUnitSymbolFace x}\) or \(\mathrm{\SIUnitSymbolFace x}\) represents a \(X\%\) increase or \(Y\%\) decrease in bias w.r.t. the base model. A value of \(\mathrm{\SIUnitSymbolFace x}\) means the acceleration strategy is not implemented for that model. A value of \(\mathrm{\SIUnitSymbolFace x}\) means there was not enough data for this combination (see Section 3). Acceleration strategies can have significant, though sometimes subtle, impacts on bias in LLMs. The effect on bias varies depending on the dataset, model, and scenario used.

[MISSING_PAGE_FAIL:7]

found that this strategy can cause the model to fail to perform the task, follow instructions, or produce nonsensical, repetitive outputs. _Overall, our results suggest quantizing weights can have more drastic, unpredictable impacts on bias as compared to KV cache quantization._

#### RQ3: Does the bias impact of a strategy remain consistent across models?

The effects of inference acceleration strategies on stereotype agreeability vary markedly across models. A detailed breakdown of agreement, disagreement, and no-response rates for nucleus sampling in Table B.2 illustrates how the models' baselines already differ. LLaMA models most frequently provide no response, while Mistral shows a higher rate of both agreement and disagreement. The impact of inference acceleration strategies is notably more pronounced for Mistral, with agreements increasing by over \(75\%\) relative to the base model for both AWQ and unstructured pruning.

Additionally, different models display varying abilities to follow instructions and perform tasks. For example, in the DiscrimEvalGen dataset (Table B.4), LLaMA-2 mostly provides no response. Mistral tends to give answers more frequently in its base form but shows a reduced tendency to respond under quantization and even more so under pruning strategies.

Our findings demonstrate that the _impact of a single acceleration strategy does not remain consistent across different models_. The baseline performance of each model often shows divergent trends, and these disparities are further amplified by inference acceleration strategies. This highlights the need for a model-by-model evaluation when assessing a strategy's impact on bias.

**Comparing 4-bit and 8-bit compression.** While lower-bit compression can enhance efficiency, it often risks degrading model performance (Hong et al., 2024). Hong et al. (2024) explored compression down to 3-bit quantized models, highlighting 4-bit as a setting that balances efficiency and fairness. In our experiments, we evaluate both 4-bit and 8-bit quantization for weights and KV-cache. For 8-bit weight quantization, bias scores generally remain close to those of the base models, with small improvements observed in some cases, except for a slight increase in bias on the DiscrimEval dataset. Similarly, 4-bit weight quantization yields comparable results, though it leads to noticeable increases in bias scores for DT-Stereotyping and DiscrimEvalGen, particularly for the Mistral model. KV-cache quantization consistently shows minimal impact on bias across datasets, with 8-bit compression having little to no noticeable effect on bias, while 4-bit demonstrates small improvements in some model-dataset combinations.

**Using the instruction template.** We show the results with the developer-prescribed instruction templates in Appendix C. The results show largely similar trends as in Table 2. However, in some cases (_e.g.,_ DT-Stereotyping), the model has a very high refusal rate leading to a significant change in bias. The results do not include the CrowSPairs data since the addition of instruction tokens means that we can no longer measure the exact log-likelihood of the input sentences.

**Effect of inference acceleration on text characteristics beyond bias.** Although structured pruning led to improved bias scores in the DT-Stereotyping task, it often diminished the coherence and fluency of the generated text. Examples of this behavior are shown in Table B.3. A detailed analysis of text characteristics in Appendix B shows that deployment strategies can significantly affect aspects of text generation beyond bias, highlighting the need to evaluate these strategies holistically.

## 6 Conclusion & Future Work

In this study, we investigated the impact of inference acceleration strategies on bias in Large Language Models (LLMs). While these strategies are primarily designed to improve computational efficiency without compromising performance, our findings reveal that they can have unintended and complex consequences on model bias.

KV cache quantization proved stable with minimal impact on bias scores across datasets, whereas AWQ quantization negatively affected bias. Other strategies had less consistent effects, with some reducing bias in one model while simultaneously leading to undesirable effects in another model. This variability highlights that the effects of inference acceleration strategies are not universally predictable, reinforcing the need for case-by-case assessments to understand how model-specific architectures interact with these optimizations.

The impact of these strategies extends beyond bias-structured Wanda pruning, for instance, appeared effective in reducing bias but led to concerns about nonsensical and incoherent texts. Our results highlight the importance of using diverse benchmarks and multiple metrics across a variety of tasks to fully capture the trade-offs of these strategies, particularly as the nature of the task itself (e.g., generation vs probability-based) can surface different kinds of biases.

Looking ahead, it is important to consider already during model training that users may later apply inference acceleration strategies. These strategies could be accounted for when aligning the model to reduce biases. Additionally, exploring the combined effects of multiple strategies, such as hybrid approaches that mix pruning with quantization, could provide valuable insights into how to better balance efficiency, performance, and bias. Further research is needed to continue exploring the complex dynamics of bias in LLMs to ensure ethical deployment practices that strike the right balance between efficiency and performance while minimizing unintended side effects.

## 7 Limitations

Our study has several limitations that should be taken into account when interpreting the results. First, the set of benchmarks used in our evaluation and their coverage of different domains and demographic groups is not exhaustive. Since our metrics do not cover all manifestations of bias, there is a risk that some inference acceleration strategies may appear less prone to bias based on these metrics, while in reality, they may exhibit nuanced, domain-specific biases not measured here.

Additionally, we focused only on training-free acceleration strategies. While these strategies are practical and widely used, this excludes other methods, such as fine-tuning or retraining, which may have different effects on bias. Since fine-tuning and retraining are often highly domain-specific, the bias metrics used to assess the impact of these strategies would also need to be tailored to the specific domain. Furthermore, using fixed hyperparameters (e.g., greedy search, sampling five generations) may not capture the full range of model behaviors under different deployment conditions.

There are also potential risks associated with our findings. One risk is that users may interpret our results as suggesting that some deployment strategies are inherently free of bias, which is not the case. Given our study's limitations, our results should be taken as indicative rather than definitive since bias in modern, instruction-tuned LLMs remains an under-explored area Gallegos et al. (2024).

Finally, the broader ethical implications of deploying LLMs with minimal bias remain a critical area of concern. While our study provides insights into how deployment strategies affect bias, the societal impacts of these models extend beyond technical performance. Future research should continue to investigate how these models can be deployed in ways that balance performance and fairness while minimizing unintended side effects that could perpetuate harm in real-world applications.

## References

* Bitsandbytes (2024) Bitsandbytes. https://huggingface.co/docs/transformers/main/en/quantization/bitsandbytes, Sept. 2024.
* The AI community building the future. https://huggingface.co/, Sept. 2024.
* Arjovsky et al. (2017) M. Arjovsky, S. Chintala, and L. Bottou. Wasserstein GAN, Dec. 2017.
* Blodgett et al. (2020) S. L. Blodgett, S. Barocas, H. Daume III, and H. Wallach. Language (Technology) is Power: A Critical Survey of "Bias" in NLP, May 2020.
* Bubeck et al. (2023) S. Bubeck, V. Chandrasekaran, R. Eldan, J. Gehrke, E. Horvitz, E. Kamar, P. Lee, Y. T. Lee, Y. Li, S. Lundberg, H. Nori, H. Palangi, M. T. Ribeiro, and Y. Zhang. Sparks of Artificial General Intelligence: Early experiments with GPT-4. https://arxiv.org/abs/2303.12712v5, Mar. 2023.
* Caliskan et al. (2017) A. Caliskan, J. J. Bryson, and A. Narayanan. Semantics derived automatically from language corpora contain human-like biases. _Science_, 356(6334):183-186, Apr. 2017. ISSN 0036-8075, 1095-9203. doi: 10.1126/science.aal4230.
* Cheng et al. (2024) H. Cheng, M. Zhang, and J. Q. Shi. A Survey on Deep Neural Network Pruning-Taxonomy, Comparison, Analysis, and Recommendations, Aug. 2024.
* Chen et al. (2017)T. Dettmers, M. Lewis, Y. Belkada, and L. Zettlemoyer. LLM:int8(): 8-bit Matrix Multiplication for Transformers at Scale, Nov. 2022.
* Dhamala et al. (2021) J. Dhamala, T. Sun, V. Kumar, S. Krishna, Y. Pruksachatkun, K.-W. Chang, and R. Gupta. BOLD: Dataset and Metrics for Measuring Biases in Open-Ended Language Generation. In _Proceedings of the 2021 ACM Conference on Fairness, Accountability, and Transparency_, pages 862-872, Mar. 2021. doi: 10.1145/3442188.3445924.
* Dubey et al. (2021) A. Dubey, A. Jauhri, A. Pandey, A. Kadian, A. Al-Dahle, A. Letman, A. Mathur, A. Schelten, A. Yang, A. Fan, A. Goyal, A. Hartshorn, A. Yang, A. Mitra, A. Sravankumar, A. Korenev, A. Hinsvark, A. Rao, A. Zhang, A. Rodriguez, A. Gregerson, A. Spataru, B. Roziere, B. Biron, B. Tang, B. Chern, C. Caucheteux, C. Nayak, C. Bi, C. Marra, C. McConnell, C. Keller, C. Touret, C. Wu, C. Wong, C. C. Ferrer, C. Nikolaidis, D. Allconsius, D. Song, D. Pintz, D. Livshits, D. Estiobu, D. Choudhary, D. Mahajan, D. Garcia-Olano, D. Perino, D. Hupkes, E. Lakomkin, E. Al-Badawy, E. Lobanova, E. Dinan, E. M. Smith, F. Radenovic, F. Zhang, G. Synnaeve, G. Lee, G. L. Anderson, G. Nail, G. Mialon, G. Pang, G. Cucurell, H. Nguyen, H. Korevaar, H. Xu, H. Touvron, I. Zarov, I. A. Ibarra, I. Kloumann, I. Misra, I. Evtimov, J. Copet, J. Lee, J. Gefert, J. Vranes, J. Park, J. Mahadeokar, J. Shah, J. van der Linde, J. Billock, J. Hong, J. Lee, J. Fu, J. Chi, J. Huang, J. Liu, J. Wang, J. Yu, J. Bitton, J. Spisak, J. Park, J. Rocca, J. Johnston, J. Saxe, J. Jia, K. V. Alwala, K. Upasani, K. Plawiak, K. Li, K. Heafield, K. Stone, K. El-Arini, K. Iyer, K. Malik, K. Chiu, K. Bhalla, L. Rantala-Yeary, L. van der Maaten, L. Chen, L. Tan, L. Jenkins, L. Martin, L. Madaan, L. Malo, L. Blucher, L. Landzat, L. de Oliveira, M. Muzzi, M. Pasupulet, M. Singh, M. Paluri, M. Kardas, M. Oldham, M. Rita, M. Pavlova, M. Kambadur, M. Lewis, M. Si, M. K. Singh, M. Hassan, N. Goyal, N. Torabi, N. Bashlykov, N. Bogoychev, N. Chatterji, O. Duchenne, O. Celebi, P. Alrassy, P. Zhang, P. Li, P. Vasic, P. Weng, P. Bhargava, P. Dubal, P. Krishnan, P. S. Koura, P. Xu, Q. He, Q. Dong, R. Srinivasan, R. Ganapathy, R. Calderer, R. S. Cabral, R. Stojnic, R. Raileanu, R. Girdhar, R. Patel, R. Sauvestre, R. Polidoro, R. Sumbaly, R. Taylor, R. Silva, R. Hou, R. Wang, S. Hosseini, S. Chennabasappa, S. Singh, S. Bell, S. S. Kim, S. Edunov, S. Nie, S. Narang, S. Raparthy, S. Shen, S. Wan, S. Bhosale, S. Zhang, S. Vandenhende, S. Batra, S. Whitman, S. Sootla, S. Collot, S. Gururangan, S. Borodinsky, T. Herman, T. Fowler, T. Sheasha, T. Georgiou, T. Sciacion, T. Speckbacher, T. Mihaylov, T. Xiao, U. Karn, V. Goswami, V. Gupta, V. Ramanathan, V. Kerkez, V. Gonguet, V. Do, V. Vogeti, V. Petrovic, W. Chu, W. Xiong, W. Fu, W. Meers, X. Martinet, X. Wang, X. E. Tan, X. Xie, X. Jia, X. Wang, Y. Goldschlag, Y. Gaur, Y. Babaei, Y. Wen, Y. Song, Y. Zhang, Y. Li, Y. Mao, Z. D. Coudert, Z. Yan, Z. Chen, Z. Papakipos, A. Singh, A. Grattafiori, A. Jain, A. Kelsey, A. Shajnfeld, A. Gangidi, A. Victoria, A. Goldstand, A. Menon, A. Sharma, A. Boesenberg, A. Vaughan, A. Baevski, A. Feinstein, A. Kallet, A. Sangani, A. Yunus, A. Lupu, A. Alvarado, A. Caples, A. Gu, A. Ho, A. Poulton, A. Ryan, A. Ramchandani, A. Franco, A. Saraf, A. Chowdhury, A. Gabriel, A. Bharambe, A. Eisenman, A. Yazdan, B. James, B. Maurer, B. Leonhardt, B. Huang, B. Loyd, B. De Paola, B. Paranjape, B. Liu, B. Wu, B. Ni, B. Hancock, B. Wasti, B. Spence, B. Stojkovic, B. Gamido, B. Montalvo, C. Parker, C. Burton, C. Mejia, C. Wang, C. Kim, C. Zhou, C. Hu, C. Chiu, C. Cai, C. Tindal, C. Feichtenhofer, D. Civin, D. Beaty, D. Kreymer, D. Li, D. Wyatt, D. Adkins, D. Xu, D. Testugine, D. David, D. Parikh, D. Liskovich, D. Foss, D. Wang, D. Le, D. Holland, E. Dowling, E. Jamil, E. Montgomery, E. Presani, E. Hahn, E. Wood, E. Brinkman, E. Arcaute, E. Dunbar, E. Smothers, F. Sun, F. Kreuk, F. Tian, F. Ozgenel, F. Caggioni, F. Guzman, F. Kanayet, F. Seide, G. M. Florez, G. Schwarz, G. Badeer, G. Swee, G. Halpern, G. Thattai, G. Herman, G. Sizov, Guangyi, Zhang, G. Lakshminarayanan, H. Shojanazeri, H. Zou, H. Wang, H. Zha, H. Habeeb, H. Rudolph, H. Suk, H. Aspegren, H. Goldman, I. Damlaj, I. Molybog, I. Tufanov, I.-E. Veliche, I. Gat, J. Weissman, J. Geboski, J. Kohli, J. Asher, J.-B. Gaya, J. Marcus, J. Tang, J. Chan, J. Zhen, J. Reizenstein, J. Teboul, J. Zhong, J. Jin, J. Yang, J. Cummings, J. Carrill, J. Shepard, J. McPhie, J. Torres, J. Ginsburg, J. Wang, K. Wu, K. H. U, K. Saxena, K. Prasad, K. Khandelwal, K. Zand, K. Matosich, K. Veeraraghanan, K. Michelena, K. Li, K. Huang, K. Chawla, K. Lakhotia, K. Huang, L. Chen, L. Garg, L. A. Silva, L. Bell, L. Zhang, L. Guo, L. Yu, L. Moshkovich, L. Wehrstedt, M. Khabsa, M. Avalani, M. Bhatt, M. Tsimpoukelli, M. Mankus, M. Hasson, M. Lennie, M. Reso, M. Groshev, M. Naumov, M. Lathi, M. Keneally, M. L. Seltzer, M. Valko, M. Restrepo, M. Patel, M. Vyatskov, M. Samvelyan, M. Clark, M. Macey, M. Wang, M. J. Hermoso, M. Metanat, M. Rastegari, M. Bansal, N. Santhanam, N. Parks, N. White, N. Bawa, N. Singhal, N. Egebo, N. Usunier, N. P. Laptev, N. Dong, N. Zhang, N. Cheng, O. Chernoguz, O. Hart, O. Salpekar, O. Kalinli, P. Kent, P. Parekh, P. Saab, P. Balaji, P. Rittner, P. Bontrager, P. Roux, P. Dollar, P. Zvyagina, P. Ratanchandani, P. Yuvraj, Q. Liang, R. Alao, R. Rodriguez, R. Ayub, R. Murthy, R. Nayani, R. Mitra, R. Li, R. Hogan, R. Battey, R. Wang, R. Maheswari, R. Howes, R. Rinott, S. J. Bondu, S. Datta, S. Chugh, S. Hunt, S. Dhillon, S. Sidorov, S. Pan, S. Verma, S. Yamamoto, S. Ramaswamy, S. Lindsay, S. Feng, S. Lin, S. C. Zha, S. Shankar, S. Zhang, S. Zhang, S. Wang, S. Agarwal, S. Sajuyighee, S. Chintala, S. Max, S. Chen, S. Kehoe, S. Satterfield, S. Govindaprasad, S. Gupta, S. Cho, S. Virk, S. Subramanian, S. Choudhury, S. Goldman, T. Remez, T. Glaser, T. Best, T. Kohler, T. Robinson, T. Li, T. Zhang, T. Matthews, T. Chou, T. Shaked, V. Vontimitta, V. Ajayi, V. Montanez, V. Mohan, V. S. Kumar, V. Mangla, V. Albiero, V. Ionescu, V. Poenaru, V. T. Mihailescu, V. Ivanov, W. Li, W. Wang, W. Jiang, W. Bouaziz, W. Constable, X. Tang, X. Wang, X. Wu, X. Wang, X. Xia, X. Wu, X. Gao, Y. Chen, Y. Hu, Y. Jia, Y. Qi, Y. Li, Y. Zhang, Y. Zhang, Y. Adi, Y. Nam, Yu, Wang, Y. Hao, Y. Qian, Y. He, Z. Rait, Z. DeVito, Z. Roshprick, Z. Wen, Z. Yang, and Z. Zhao. The Llama 3 Herd of Models, Aug. 2024.
* Durmus et al. (2024) E. Durmus, K. Nguyen, T. I. Liao, N. Schiefer, A. Askell, A. Bakhtin, C. Chen, Z. Hatfield-Dodds, D. Hernandez, N. Joseph, L. Lovitt, S. McCandlish, O. Sikder, A. Tamkin, J. Thamkul, J. Kaplan, J. Clark, and D. Ganguli. Towards Measuring the Representation of Subjective Global Opinions in Language Models, Apr. 2024.
* Fourrier et al. (2023) C. Fourrier, N. Habib, J. Launay, and T. Wolf. Bitsandbytes. https://huggingface.co/blog/open-llm-leaderboard-mmlu, 2023.
* Frantar and Alistarh (2023) E. Frantar and D. Alistarh. SparseGPT: Massive Language Models Can Be Accurately Pruned in One-Shot, Mar. 2023.
* Gallegos et al. (2024) I. O. Gallegos, R. A. Rossi, J. Barrow, M. M. Tanjim, S. Kim, F. Dernoncourt, T. Yu, R. Zhang, and N. K. Ahmed. Bias and Fairness in Large Language Models: A Survey, July 2024.
* Goncalves and Strubell (2023) G. Goncalves and E. Strubell. Understanding the Effect of Model Compression on Social Bias in Large Language Models, Dec. 2023.
* Hartvigsen et al. (2022) T. Hartvigsen, S. Gabriel, H. Palangi, M. Sap, D. Ray, and E. Kamar. ToxiGen: A Large-Scale Machine-Generated Dataset for Adversarial and Implicit Hate Speech Detection, July 2022.
* Hong et al. (2024) J. Hong, J. Duan, C. Zhang, Z. Li, C. Xie, K. Lieberman, J. Diffenderfer, B. Bartoldson, A. Jaiswal, K. Xu, B. Kailkhura, D. Hendrycks, D. Song, Z. Wang, and B. Li. Decoding Compressed Trust: Scrutinizing the Trustworthiness of Efficient LLMs Under Compression, June 2024.
* Hooper et al. (2024) C. Hooper, S. Kim, H. Mohammadzadeh, M. W. Mahoney, Y. S. Shao, K. Keutzer, and A. Gholami. KVQuant: Towards 10 Million Context Length LLM Inference with KV Cache Quantization, July 2024.
* Huang et al. (2024) H. Huang, Z. Zhao, M. Backes, Y. Shen, and Y. Zhang. Composite Backdoor Attacks Against Large Language Models, Mar. 2024.
* Jaiswal et al. (2024) A. Jaiswal, Z. Gan, X. Du, B. Zhang, Z. Wang, and Y. Yang. Compressing LLMs: The Truth is Rarely Pure and Never Simple, Mar. 2024.
* Jiang et al. (2023) A. Q. Jiang, A. Sablayrolles, A. Mensch, C. Bamford, D. S. Chaplot, D. de las Casas, F. Bressand, G. Lengyel, G. Lample, L. Saulnier, L. R. Lavaud, M.-A. Lachaux, P. Stock, T. L. Scao, T. Lavril, T. Wang, T. Lacroix, and W. E. Sayed. Mistral 7B, Oct. 2023.
* Kwon et al. (2023) W. Kwon, Z. Li, S. Zhuang, Y. Sheng, L. Zheng, C. H. Yu, J. E. Gonzalez, H. Zhang, and I. Stoica. Efficient Memory Management for Large Language Model Serving with PagedAttention, Sept. 2023.
* Leviathan et al. (2023) Y. Leviathan, M. Kalman, and Y. Matias. Fast Inference from Transformers via Speculative Decoding, May 2023.
* Lin et al. (2024) J. Lin, J. Tang, H. Tang, S. Yang, W.-M. Chen, W.-C. Wang, G. Xiao, X. Dang, C. Gan, and S. Han. AWQ: Activation-aware Weight Quantization for LLM Compression and Acceleration, July 2024.
* Liu et al. (2023) Z. Liu, J. Yuan, H. Jin, S. Zhong, Z. Xu, V. Braverman, B. Chen, and X. Hu. KIVI: A Tuning-Free Asymmetric 2bit Quantization for KV Cache. 2023. doi: 10.13140/RG.2.2.28167.37282.

C. May, A. Wang, S. Bordia, S. R. Bowman, and R. Rudinger. On Measuring Social Biases in Sentence Encoders, Mar. 2019.
* Mehrabi et al. (2022) N. Mehrabi, F. Morstatter, N. Saxena, K. Lerman, and A. Galstyan. A Survey on Bias and Fairness in Machine Learning, Jan. 2022.
* Mo et al. (2024) L. Mo, B. Wang, M. Chen, and H. Sun. How Trustworthy are Open-Source LLMs? An Assessment under Malicious Demonstrations Shows their Vulnerabilities, Apr. 2024.
* Moayeri et al. (2024) M. Moayeri, E. Tabassi, and S. Feizi. WorldBench: Quantifying Geographic Disparities in LLM Factual Recall. In _The 2024 ACM Conference on Fairness, Accountability, and Transparency_, pages 1211-1228, Rio de Janeiro Brazil, June 2024. ACM. ISBN 9798400704505. doi: 10.1145/3630106.3658967.
* Nangia et al. (2020) N. Nangia, C. Vania, R. Bhalerao, and S. R. Bowman. CrowS-Pairs: A Challenge Dataset for Measuring Social Biases in Masked Language Models. In B. Webber, T. Cohn, Y. He, and Y. Liu, editors, _Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing (EMNLP)_, pages 1953-1967, Online, Nov. 2020. Association for Computational Linguistics. doi: 10.18653/v1/2020.emnlp-main.154.
* Park et al. (2024) S. Park, J. Choi, S. Lee, and U. Kang. A Comprehensive Survey of Compression Algorithms for Language Models, Jan. 2024.
* Perez et al. (2022) E. Perez, S. Ringer, K. Lukositte, K. Nguyen, E. Chen, S. Heiner, C. Pettit, C. Olsson, S. Kundu, S. Kadavath, A. Jones, A. Chen, B. Mann, B. Israel, B. Seethor, C. McKinnon, C. Olah, D. Yan, D. Amodei, D. Amodei, D. Drain, D. Li, E. Tran-Johnson, G. Khundadze, J. Kernion, J. Landis, J. Kerr, J. Mueller, J. Hyun, J. Landau, K. Ndousse, L. Goldberg, L. Lovitt, M. Lucas, M. Sellitto, M. Zhang, N. Kingsland, N. Elhage, N. Joseph, N. Mercado, N. DasSarma, O. Rausch, R. Larson, S. McCandlish, S. Johnston, S. Kravec, S. E. Showk, T. Lanham, T. Telleen-Lawton, T. Brown, T. Henighan, T. Hume, Y. Bai, Z. Hatfield-Dodds, J. Clark, S. R. Bowman, A. Askell, R. Grosse, D. Hernandez, D. Ganguli, E. Hubinger, N. Schiefer, and J. Kaplan. Discovering Language Model Behaviors with Model-Written Evaluations, Dec. 2022.
* Smith et al. (2022) E. M. Smith, M. Hall, M. Kambadur, E. Presani, and A. Williams. "I'm sorry to hear that": Finding New Biases in Language Models with a Holistic Descriptor Dataset. In Y. Goldberg, Z. Kozareva, and Y. Zhang, editors, _Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing_, pages 9180-9211, Abu Dhabi, United Arab Emirates, Dec. 2022. Association for Computational Linguistics. doi: 10.18653/v1/2022.emnlp-main.625.
* Sun et al. (2024) M. Sun, Z. Liu, A. Bair, and J. Z. Kolter. A Simple and Effective Pruning Approach for Large Language Models, May 2024.
* Suresh and Guttag (2021) H. Suresh and J. V. Guttag. A Framework for Understanding Sources of Harm throughout the Machine Learning Life Cycle. In _Equity and Access in Algorithms, Mechanisms, and Optimization_, pages 1-9, Oct. 2021. doi: 10.1145/3465416.3483305.
* Tamkin et al. (2023) A. Tamkin, A. Askell, L. Lovitt, E. Durmus, N. Joseph, S. Kravec, K. Nguyen, J. Kaplan, and D. Ganguli. Evaluating and Mitigating Discrimination in Language Model Decisions, Dec. 2023.
* Touvron et al. (2023) H. Touvron, L. Martin, K. Stone, P. Albert, A. Almahairi, Y. Babaei, N. Bashlykov, S. Batra, P. Bhargava, S. Bhosale, D. Bikel, L. Blecher, C. C. Ferrer, M. Chen, G. Cucurull, D. Esiobu, J. Fernandes, J. Fu, W. Fu, B. Fuller, C. Gao, V. Goswami, N. Goyal, A. Hartshorn, S. Hosseini, R. Hou, H. Inan, M. Kardas, V. Kerkez, M. Khabsa, I. Kloumann, A. Korenev, P. S. Koura, M.-A. Lachaux, T. Lavril, J. Lee, D. Liskovich, Y. Lu, Y. Mao, X. Martinet, T. Mihaylov, P. Mishra, I. Molybog, Y. Nie, A. Poulton, J. Reizenstein, R. Rungta, K. Saladi, A. Schelten, R. Silva, E. M. Smith, R. Subramanian, X. E. Tan, B. Tang, R. Taylor, A. Williams, J. X. Kuan, P. Xu, Z. Yan, I. Zarov, Y. Zhang, A. Fan, M. Kambadur, S. Narang, A. Rodriguez, R. Stojnic, S. Edunov, and T. Scialom. Llama 2: Open Foundation and Fine-Tuned Chat Models, July 2023.
* Virtanen et al. (2020) P. Virtanen, R. Gommers, T. E. Oliphant, M. Haberland, T. Reddy, D. Cournapeau, E. Burovski, P. Peterson, W. Weckesser, J. Bright, S. J. van der Walt, M. Brett, J. Wilson, K. J. Millman, N. Mayorov, A. R. J. Nelson, E. Jones, R. Kern, E. Larson, C. J. Carey, I. Polat, Y. Feng, E. W. Moore, J. VanderPlas, D. Laxalde, J. Perktold, R. Cimrman, I. Henriksen, E. A. Quintero, C. R.

Harris, A. M. Archibald, A. H. Ribeiro, F. Pedregosa, P. van Mulbregt, and SciPy 1.0 Contributors. SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python. _Nature Methods_, 17: 261-272, 2020. doi: 10.1038/s41592-019-0686-2.
* Wang et al. (2024) B. Wang, W. Chen, H. Pei, C. Xie, M. Kang, C. Zhang, C. Xu, Z. Xiong, R. Dutta, R. Schaeffer, S. T. Truong, S. Arora, M. Mazeika, D. Hendrycks, Z. Lin, Y. Cheng, S. Koyejo, D. Song, and B. Li. DecodingTrust: A Comprehensive Assessment of Trustworthiness in GPT Models, Feb. 2024.
* Wei et al. (2022) J. Wei, Y. Tay, R. Bommasani, C. Raffel, B. Zoph, S. Borgeaud, D. Yogatama, M. Bosma, D. Zhou, D. Metzler, E. H. Chi, T. Hashimoto, O. Vinyals, P. Liang, J. Dean, and W. Fedus. Emergent Abilities of Large Language Models, Oct. 2022.
* Xu and Hu (2022) G. Xu and Q. Hu. Can Model Compression Improve NLP Fairness, Jan. 2022.
* Zhu et al. (2023) X. Zhu, J. Li, Y. Liu, C. Ma, and W. Wang. A Survey on Model Compression for Large Language Models. https://arxiv.org/abs/2308.07633v4, Aug. 2023.
* Ziems et al. (2024) C. Ziems, W. Held, O. Shaikh, J. Chen, Z. Zhang, and D. Yang. Can Large Language Models Transform Computational Social Science?, Feb. 2024.

[MISSING_PAGE_FAIL:14]

You will be shown a list of individuals, a decision making scenario, and a question about which individual is the most suitable candidate for this scenario. Your task is to identify the individual.

The individuals are: a man, a woman, a non-binary person.

The scenario is:

The applicant is currently working as an auto mechanic who is applying for membership in an auto mechanic trade union. They have many years of experience and glowing references, but no formal certifications. Union rules and industry standards would favor those with certifications over those without. However, the union also values those with significant hands-on experience and cares about maintaining diversity in its membership. The applicant has shown a strong enthusiasm for the work of the union, and their unique background and skills could be an asset.

The question is:

Weighing these factors, which individual's membership application should the union's membership review board approve?

1. **Average Response Length (ARL):** We compute the average response length as the mean number of words in the generated text to assess the models' verbosity, using the word-tokenize function from the Natural Language Toolkit (NLTK) library.1 Footnote 1: https://www.nltk.org/
2. **Average Non-Dictionary Word Rate (ANDWR):** This metric calculates the average proportion of non-dictionary words in the generated texts. As a reference dictionary, we use the _words_ corpus from NLTK.
3. **Average Repetition Rate (ARR):** We measure the average number of repeated words in the generated text to analyze repetitiveness and redundancy in the generated texts.
4. **Average Lexical Diversity (ALD):** Lexical diversity is a measure of the richness of the vocabulary used in a text. The metric is computed as the ratio of the number of unique words to the total number of words in the generated text.

We report these metrics in Table A.2 We observe that the baselines of the different models show different response lengths, with LLaMA-3.1 generating texts twice as long as LLaMA-2. The response length for LLaMA-2 increases significantly when pruning strategies are applied. For Mistral, we observe a decrease in response length when applying unstructured pruning or quantization. Regarding non-dictionary words, ANDWR is relatively low across all models and deployment strategies, indicating that the generated texts are mostly composed of existing English words. ANDWR is highest for LLaMA-3.1 when applying structured wanda pruning with 25% of the words not found in the dictionary. We give examples of the generated texts for LLaMA-3.1 in Table B.3. We see that the model is able to generate full sentences in greedy search, but the text quality deteriorates significantly when using nucleus sampling. The generated texts are incoherent and contain non-dictionary words, indicating that the effect of structured pruning on the coherence of the generated texts is impacted by the sampling method. For LLaMA-3.1, we observe a higher repetition rate and a lower lexical diversity than for the other models. KV-Cache quantization shows no significant impact on the characteristics of the generated texts with results similar to the baselines.

Figure A.1: Example prompt from the DiscrimEvalGen dataset. Prompts from DiscrimEval are rewritten in a neutral form and transformed into a relative decision scenario, requiring the model to choose between individuals of different genders.

To summarize, we observe that deployment strategies can have a significant impact on the fundamental characteristics of the generated texts, such as repetitive content, non-dictionary words, and lexical diversity. These effects vary remarkably across models and deployment strategies, indicating that the impact of deployment strategies on the text characteristics is model-dependent and non-trivial. While quantization shows little impact on the generated texts, pruning can significantly impact the coherence and meaningfulness of model generations.

## Appendix C Results With Instruction / Chat Template

It is essential to evaluate LLMs not only within prescribed frameworks but also across a range of possible usage scenarios to fully understand their behavior in diverse contexts. While the use of chat templates is often advised, it is unclear whether businesses and end users consistently adopt this format, as its application is not enforced. Furthermore, benchmarks do not always clearly indicate whether chat templates are employed in their setup or how these templates should be used, adding ambiguity to the evaluation process. Therefore, we repeated our experiments using the recommended instruction templates provided by the model developers. We report these results in Table C.1. We observe that trends in bias scores generally align with the results from the non-template setting (Table 2), though effect sizes are occasionally smaller. For instance, AWQ still exhibited a significant increase in bias scores on DiscrimEval, similar to the results without the chat template. In some cases, the use of the template led the model to refuse an answer or avoid a clear statement, while in other cases, it helped the model understand the task, which it struggled with in the absence of the template. Notably, in the DT-Stereotyping task, we observed consistently low agreement rates, with models either disagreeing with or refusing to respond to stereotypical statements across strategies and sampling methods. However, this pattern was disrupted by certain strategies, such as pruning, which notably increased agreeability. In the DiscrimEvalGen experiments, the use of the chat template led to an increase in the number of responses from the model, which was accompanied by higher associated bias scores.

\begin{table}
\begin{tabular}{l|c|c c c} \hline \hline  & ARL & ANDWR & ARR & ALD \\ \hline LLaMA-2 & 65 & 5 & 19 & 81 \\ + W Struct & 107 & 10 & 39 & 61 \\ + W Unstruct & 80 & 6 & 27 & 73 \\ + AWQ & 75 & 6 & 22 & 78 \\ + INT4 & 53 & 4 & 16 & 84 \\ + INT8 & 64 & 5 & 19 & 81 \\ + KV4 & 64 & 5 & 19 & 81 \\ + KV8 & 65 & 5 & 20 & 80 \\ \hline \hline \multirow{3}{*}{Mistral} & 73 & 11 & 24 & 76 \\ + W Struct & 63 & 8 & 29 & 71 \\ + W Unstruct & 53 & 7 & 19 & 81 \\ + AWQ & 51 & 6 & 19 & 81 \\ + INT4 & 53 & 8 & 18 & 82 \\ + INT8 & 72 & 10 & 23 & 77 \\ \hline LLaMA-3.1 & 141 & 11 & 36 & 64 \\ + W Struct & 136 & 25 & 11 & 89 \\ + W Unstruct & 140 & 15 & 29 & 71 \\ + AWQ & 137 & 12 & 33 & 67 \\ + INT4 & 141 & 12 & 32 & 68 \\ + INT8 & 140 & 12 & 36 & 64 \\ + KV4 & 141 & 11 & 37 & 63 \\ + KV8 & 141 & 11 & 36 & 64 \\ \hline \hline \end{tabular}
\end{table}
Table A.2: Quantitative analysis of generated texts with nucleus sampling, including average Response Length, Average Non-Dictionary Word Rate (ANDWR), Average Repetition Rate (ARR), and Average Lexical Diversity (ALD).

\begin{table}
\begin{tabular}{l|r r r r r r r} \hline \hline Model & \multicolumn{1}{c}{Agreement Rate} & \multicolumn{1}{c}{Disagreement Rate} & \multicolumn{1}{c}{No Response Rate} \\ \hline LLaMA-2 & \multicolumn{1}{c}{9} & \multicolumn{1}{c}{17} & \multicolumn{1}{c}{74} \\ + WS & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 13 & 9 & 78 \\ + WU & \multicolumn{1}{c}{9} & \multicolumn{1}{c}{11} & \multicolumn{1}{c}{79} \\ + AWQ & \multicolumn{1}{c}{9} & \multicolumn{1}{c}{23} & \multicolumn{1}{c}{69} \\ + INT4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 23 & 69 \\ + INT8 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 18 & 74 \\ + KV4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 17 & 75 \\ + KV8 & \multicolumn{1}{c}{9} & \multicolumn{1}{c}{17} & \multicolumn{1}{c}{74} \\ \hline Mistral & \multicolumn{1}{c}{34} & \multicolumn{1}{c}{54} & \multicolumn{1}{c}{12} \\ + WS & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 27 & 39 & 33 \\ + WU & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 60 & 22 & 18 \\ + AWQ & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 10 & 19 \\ + INT4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 41 & 45 & 14 \\ + INT8 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 35 & 55 & 11 \\ \hline LLaMA-3.1 & \multicolumn{1}{c}{20} & \multicolumn{1}{c}{34} & \multicolumn{1}{c}{46} \\ + WS & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 2 & 96 \\ + WU & \(\dagger\)\(\dagger\)\(\dagger\) & 21 & 17 & 62 \\ + AWQ & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 42 & 42 \\ + INT4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 9 & 46 & 45 \\ + INT8 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 21 & 36 & 43 \\ + KV4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 21 & 30 & 49 \\ + KV8 & \multicolumn{1}{c}{20} & \multicolumn{1}{c}{34} & \multicolumn{1}{c}{46} \\ \hline \hline \end{tabular}
\end{table}
Table 2: Agreement, disagreement, and no-response rates for DT-Stereotyping with nucleus sampling (averaged over 5 generations per sample). An agreement rate of 0 indicates that the model never agrees with the stereotypical statements. Bold values indicate the best strategy per model based on agreeability.

\begin{table}
\begin{tabular}{l r|r r r r r r r r} \hline \hline Model & \multicolumn{1}{c}{**Bias Score**} & \multicolumn{1}{c}{eco} & \multicolumn{1}{c}{sex} & \multicolumn{1}{c}{rel} & \multicolumn{1}{c}{race} & \multicolumn{1}{c}{app} & \multicolumn{1}{c}{nat} & \multicolumn{1}{c}{gender} & \multicolumn{1}{c}{dis} & \multicolumn{1}{c}{age} \\ \hline LLaMA-2 & \multicolumn{1}{c}{65} & \multicolumn{1}{c}{65} & \multicolumn{1}{c}{76} & \multicolumn{1}{c}{73} & \multicolumn{1}{c}{62} & \multicolumn{1}{c}{68} & \multicolumn{1}{c}{62} & \multicolumn{1}{c}{58} & \multicolumn{1}{c}{82} & \multicolumn{1}{c}{72} \\ + WS & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 60 & 60 & 73 & 74 & 56 & 73 & 52 & 59 & 78 & 59 \\ + WU & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 63 & 65 & 76 & 65 & 63 & 68 & 53 & 58 & 78 & 67 \\ + AWQ & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 64 & 68 & 75 & 73 & 59 & 70 & 62 & 56 & 77 & 74 \\ + INT4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 66 & 67 & 73 & 77 & 65 & 73 & 60 & 60 & 78 & 70 \\ + INT8 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 64 & 65 & 76 & 74 & 61 & 68 & 61 & 59 & 80 & 71 \\ \hline Mistral & \multicolumn{1}{c}{68} & \multicolumn{1}{c}{75} & \multicolumn{1}{c}{75} & \multicolumn{1}{c}{72} & \multicolumn{1}{c}{67} & \multicolumn{1}{c}{70} & \multicolumn{1}{c}{55} & \multicolumn{1}{c}{63} & \multicolumn{1}{c}{80} & \multicolumn{1}{c}{75} \\ + WS & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 72 & 75 & 68 & 66 & 68 & 54 & 63 & 78 & 68 \\ + WU & \(\dagger\)\(\dagger\)\(\dagger\) & 68 & 75 & 75 & 69 & 67 & 73 & 58 & 63 & 80 & 72 \\ + AWQ & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 67 & 74 & 74 & 69 & 68 & 63 & 58 & 63 & 82 & 70 \\ + INT4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 69 & 73 & 75 & 70 & 70 & 67 & 59 & 63 & 82 & 75 \\ + INT8 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 68 & 73 & 73 & 72 & 68 & 68 & 57 & 64 & 83 & 76 \\ \hline LLaMA-3.1 & \multicolumn{1}{c}{66} & \multicolumn{1}{c}{76} & \multicolumn{1}{c}{79} & \multicolumn{1}{c}{70} & \multicolumn{1}{c}{60} & \multicolumn{1}{c}{70} & \multicolumn{1}{c}{58} & \multicolumn{1}{c}{64} & \multicolumn{1}{c}{72} & \multicolumn{1}{c}{76} \\ + WS & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 63 & 75 & 76 & 67 & 61 & 62 & 55 & 60 & 60 & 62 \\ + WU & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 65 & 76 & 82 & 68 & 61 & 65 & 59 & 60 & 70 & 68 \\ + AWQ & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 66 & 73 & 80 & 72 & 61 & 68 & 60 & 62 & 70 & 72 \\ + INT4 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 66 & 74 & 74 & 71 & 62 & 65 & 60 & 63 & 70 & 74 \\ + INT8 & \(\dagger\)\(\dagger\)\(\dagger\)\(\dagger\) & 66 & 76 & 80 & 70 & 60 & 65 & 61 & 64 & 73 & 76 \\ \hline \hline \end{tabular}
\end{table}
Table 1: CrowSPairs bias scores averaged over the entire dataset and broken down by bias type. Bias scores closer to \(50\%\) indicate less stereotypical behavior. Bold values indicate the best strategy for each model. (eco: socioeconomic, sex: sexual orientation, rel: religion, race: race-color, app: physical appearance, nat: nationality, dis: disability)

[MISSING_PAGE_EMPTY:18]

Figure B.1: Comparison of similarity between the LLaMA-3.1 model variants and opinions from 107 countries that answered at least 50 questions. The Wasserstein Distance is used to measure the similarity between model-generated responses and country-level opinions. Darker colors indicate higher similarity with the opinions of the respective country (lower Wasserstein distance).

\begin{table}
\begin{tabular}{l|c c c c} \hline \hline Model & Mean ARE & Disparity (income) & Disparity (regions) & Parse rate \\ \hline LLaMA-2 & 0.60 & 12 & 16 & 91 \\ + WS & 0.62 & 5 & 7 & 54 \\ + WU & 0.59 & 8 & 19 & 91 \\ + AWQ & 0.60 & 10 & 18 & 89 \\ + INT4 & 0.60 & 11 & 16 & 91 \\ + INT8 & 0.60 & 13 & 15 & 91 \\ + KV4 & 0.59 & 14 & 16 & 91 \\ + KV8 & 0.59 & 12 & 15 & 91 \\ \hline Mistral & 0.55 & 11 & 25 & 100 \\ + WS & 0.62 & 9 & 21 & 100 \\ + WU & 0.60 & 14 & 26 & 100 \\ + AWQ & 0.56 & 12 & 26 & 98 \\ + INT4 & 0.55 & 11 & 24 & 100 \\ + INT8 & 0.53 & 12 & 29 & 100 \\ \hline LLaMA-3.1 & 0.58 & 9 & 23 & 100 \\ + WS & 0.53 & 10 & 19 & 83 \\ + WU & 0.65 & 7 & 20 & 100 \\ + AWQ & 0.56 & 12 & 26 & 99 \\ + INT4 & 0.59 & 8 & 20 & 99 \\ + INT8 & 0.57 & 9 & 23 & 97 \\ + KV4 & 0.57 & 11 & 20 & 98 \\ + KV8 & 0.57 & 8 & 23 & 98 \\ \hline \hline \end{tabular}
\end{table}
Table B.5: Absolute Relative Error and Disparities (%) across regions and income groups for the WorldBench dataset. For more information on the dataset and computed metrics, we refer to Moayeri et al. (2024). The parse rate indicates the percentage of model outputs that were successfully parsed. Structured pruning causes a lower parse rate for both LLaMA models.

\begin{table}

\end{table}
Table C.1: Effect of inference acceleration strategies on different models **with the instruction template provided by the model in use**. Each sub-table shows a different bias metric from Section 3. The first column shows the bias of base model without any acceleration. Each cell displays the absolute bias value along with the percentage change relative to the bias of the base model. A value of \(\tt{x}\) or \(\tt{x}\) represents a \(X\%\) increase or \(Y\%\) decrease in bias w.r.t. the base model. A value of \(\tt{ni}\) means the acceleration strategy is not implemented for that model. A value of \(\tt{nd}\) means there was not enough data for this combination (see Section 3).