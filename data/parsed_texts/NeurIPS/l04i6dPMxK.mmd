# Bandits with Abstention under Expert Advice

 Stephen Pasteris\({}^{1*}\) Alberto Rumi\({}^{2,3}\) Maximilian Thiessen\({}^{4}\) Shota Saito\({}^{5}\)

**Atsushi Miyauchi\({}^{3}\) Fabio Vitale\({}^{3}\) Mark Herbster\({}^{5}\)**

\({}^{1}\)The Alan Turing Institute \({}^{2}\)University of Milan \({}^{3}\)CENTAI Institute

\({}^{4}\)TU Wien \({}^{5}\)University College London

\({}^{*}\)spasteris@turing.ac.uk

###### Abstract

We study the classic problem of prediction with expert advice under bandit feedback. Our model assumes that one action, corresponding to the learner's abstention from play, has no reward or loss on every trial. We propose the _confidence-rated bandits with abstentions_ (CBA) algorithm, which exploits this assumption to obtain reward bounds that can significantly improve those of the classical Exp4 algorithm. Our problem can be construed as the aggregation of confidence-rated predictors, with the learner having the option to abstain from play. We are the first to achieve bounds on the expected cumulative reward for general confidence-rated predictors. In the special case of specialists we achieve a novel reward bound, significantly improving the previous bounds of SpecialistExp (treating abstention as another action). We discuss how CBA can be applied to the problem of adversarial contextual bandits with the option of abstaining from selecting any action. We are able to leverage a wide range of inductive biases, outperforming previous approaches both theoretically and in preliminary experimental analysis. Additionally, we achieve a reduction in runtime from quadratic to almost linear in the number of contexts for the specific case of metric space contexts.

## 1 Introduction

We study the classic problem of prediction with expert advice under bandit feedback. The problem is structured as a sequence of trials. During each trial, each expert recommends a probability distribution over the set of possible actions. The learner then selects an action and observes and incurs the (potentially negative) reward associated with that action on that particular trial. In practical applications, errors often lead to severe consequences, and consistently making predictions is neither safe nor economically practical. For this reason, the abstention option has gained a lot of interest in the literature, both in the batch and online setting (Chow, 1957, 1970; Hendrickx et al., 2021; Cortes et al., 2018). Similarly to previous works, this paper is based on the assumption that one of the actions always has zero reward: such an action is equivalent to an abstention of the learner from play. Besides the rewards being bounded, we make no additional assumptions regarding how the rewards or expert predictions are generated. In this paper, we present an efficient algorithm CBA (Confidence-rated \(\underline{\textbf{B}}\)andits with \(\underline{\textbf{Abstentions}}\)) which exploits the abstention action to get reward bounds that can be dramatically higher than those of Exp4 (Auer et al., 2002). In the worst case, our reward bound essentially matches that of Exp4 so that CBA can be seen as a strict improvement, since the time-complexities of the two algorithms are, up to a factor logarithmic in the time horizon, identical in the general case.

Our problem can also be seen as that of aggregating _confidence-rated predictors_(Blum and Mansour, 2007; Gaillard et al., 2014; Luo and Schapire, 2015) when the learner has the option of abstaining from taking actions. When the problem is phrased in this way, at the start of each trial, each predictor recommends a probability distribution over the actions (which now may not include an action withzero reward) but with a confidence rating. A low confidence rating can mean that either the predictor thinks that all actions are bad (so that the learner should abstain) or simply does not know which action is the best. Previous works on confidence-rated experts measure the performance of their algorithm in terms of the sum of _scaled_ per-trial rewards. In contrast to previous algorithms, our approach allows for the derivation of bounds on the expected cumulative reward of CBA.

This formulation enables us to extend our work to the problem of adversarial contextual bandits with the abstention option, which has not been studied before. Previous work has considered the abstention option in the standard (context-free) adversarial bandit setting or in stochastic settings (Cortes et al., 2018, 2020; Neu and Zhivotovskiy, 2020), but not in the contextual and adversarial case. Moreover, their results and methods cannot be applied to confidence-rated predictors. To get more intuition on this setup, we can think of any deterministic policy that maps contexts into actions. Any such policy can be viewed as a classifier, with _foreground_ classes associated with each action and a _background_ class associated with abstaining. Our learning bias is represented by a set of information we refer to as the _basis_, which we formally define later. It encodes contextual structural assumptions that hold exclusively for the foreground classes and are provided to the algorithm a priori. A particular type of basis is generated by a set of potential clusters that can overlap. Alternatively, a basis can also be created using balls generated by any kind of distance function, which groups contexts believed to be close together. For this latter family of basis, we can also achieve a significant speedup in the per-trial time complexity of CBA. This result is very different (and incomparable) to other results about adversarial bandits in metric spaces (Pasteris et al., 2023, 2020).

### Additional related work

The non-stochastic multi-armed bandit problem, initially introduced by Auer et al. (2002), has been a subject of significant research interest. Auer et al. (2002) also considered the multi-armed bandit problem with expert advice, introducing the Exp4 algorithm. Exp4 evolved the field of multi-armed bandits to encompass more complex scenarios, particularly the contextual bandit (Lattimore and Szepesvari, 2020). Contextual bandits are an extension of the classical multi-armed bandit framework, where an agent makes a sequence of decisions while taking into account contextual information. Our work is also related to the multi-class classification with bandit feedback, called _weak reinforcement_(Auer and Long, 1999). An action in our bandit setting corresponds to a class in the multi-class classification framework.

As discussed in the introduction, a key aspect of this work is the option to abstain from making any decision. In the batch setting (Chow, 1957, 1970), this option is usually referred to as "rejection". These works study whether to use or reject a specific model prediction based on specific requests (see Hendrickx et al. (2021) for a survey). In online learning, "rejection" can be the possibility of abstention by the learner. These works usually rely on a cost associated with the abstention action. Neu and Zhivotovskiy (2020) studied the magnitude of the cost associated with abstention in an expert setting with bounded losses. They state that if the cost is lower than half of the amplitude of the interval of the loss, it is possible to derive bounds that are independent of the time. In Cortes et al. (2018), a non-contextual and partial information setting with the option of abstention is studied. The sequel model (Cortes et al., 2020) regards this model as a special case of their stochastic feedback graph model. Schreuder and Chzhen (2021) studied the fairness setting when using the option of abstaining as it may lead to discriminatory predictions.

One specific scenario where prior algorithms can establish cumulative reward bounds is as follows: on any given trial, the predictors are _specialists_(Freund et al., 1997), having either full confidence (a.k.a. _awake_) or no confidence (a.k.a. _asleep_). The SpecialistExp algorithm by Herbster et al. (2021), a bandit version of the standard specialist algorithm, achieves regret bounds with respect to any subset of specialists where exactly one specialist is awake on each trial. We differ from this work as abstention is an algorithmic choice. Instead of sleeping in the rounds where the specialist is not active, the specialist will vote for abstention, which is a proper action of our algorithm. In Section 5.2, we present an illustrative problem involving learning balls in a space equipped with a metric. This example demonstrates our capability to significantly improve on SpecialistExp. For this problem, we also present subroutines that significantly speed up CBA.

Problem formulation and notation

We consider the classic problem of prediction with expert advice under bandit feedback. In this problem we have _\(K+1\) actions_, _\(E\) experts_, and _\(T\) trials_. On each trial \(t\):

1. Each expert suggests, to the learner, a probability distribution over the \(K+1\) actions.
2. The learner selects an action \(a_{t}\).
3. The reward incurred by action \(a_{t}\) on trial \(t\) (which is in \([-1,1]\)) is revealed to the learner.

We note that the experts' suggestions and the rewards (associated with each action) are chosen a-priori and hence do not depend on the learner's actions. The aim of the learner is to maximize the cumulative reward obtained by its selected actions. As discussed in Section 1, we consider the case in which there is an action (the abstention action) that incurs zero reward on every trial.

We denote our action set by \([K]\cup\{\Box\}\) where \(\Box\) is the abstention action. For each trial \(t\in[T]\) we define the vector \(\bm{r}_{t}\in[-1,1]^{K}\) such that for all \(a\in[K]\,,r_{t,a}\) is the reward obtained by action \(a\) on trial \(t\). Moreover, we define \(r_{t,\Box}:=0\) which is the reward of the abstention action \(\Box\).

It will be useful for us to represent probability distributions over the actions by vectors in the set:

\[\mathcal{A}:=\{\bm{s}\in[0,1]^{K}\,|\,\|\bm{s}\|_{1}\leq 1\}\,.\]

Any vector \(\bm{s}\in\mathcal{A}\) represents the probability distribution over actions which assigns, for all \(a\in[K]\), a probability of \(s_{a}\) to action \(a\), and assigns a probability of \(1-\|\bm{s}\|_{1}\) to the abstention action \(\Box\), where \(\|\bm{s}\|_{1}\) denotes 1-norm of \(\bm{s}\). We write \(a\sim\bm{s}\) to represent that action \(a\) is drawn from the probability distribution \(\bm{s}\). We will refer to the elements of the set \(\mathcal{A}\) as _stochastic actions_.

A _policy_ is any element of \(\mathcal{A}^{T}\) (noting that any such policy is a matrix in \([0,1]^{T\times K}\)). Any policy \(\bm{e}\in\mathcal{A}^{T}\) defines a stochastic sequence of actions: on every trial \(t\in[T]\) an action \(a\in[K]\cup\{\Box\}\) being drawn as \(a\sim\bm{e}_{t}\). Note that if the learner plays according to a policy \(\bm{e}\in\mathcal{A}^{T}\), then on each trial \(t\) it obtains an expected reward of \(\bm{r}_{t}\cdot\bm{e}_{t}\), where the operator \(\cdot\) denotes the dot product. Note that each expert is equivalent to a policy. Thus, for all \(i\in[E]\) we denote the \(i\)-th expert by \(\bm{e}^{i}\in\mathcal{A}^{T}\). Hence, at the start of each trial \(t\in[T]\), the learner views the sequence \(\langle\bm{e}^{i}_{t}\,|\,i\in[E]\rangle\).

We can also view the experts as _confidence-rated predictors_ over the set \([K]\): for each \(i\in[E]\) and \(t\in[T]\), the vector \(\bm{e}^{i}_{t}\) can be viewed as suggesting the probability distribution \(\bm{e}^{i}_{t}/\|\bm{e}^{i}_{t}\|_{1}\) over \([K]\), but with confidence \(\|\bm{e}^{i}_{t}\|_{1}\). We denote this confidence by \(c_{t,i}:=\|\bm{e}^{i}_{t}\|_{1}\) and write \(\bm{c}_{t}:=(c_{t,1},\ldots,c_{t,E})\).

In this work, we will refer to the _unnormalized relative entropy_ defined by:

\[\Delta(\bm{u},\bm{v}):=\sum_{i\in[E]}u_{i}\ln\left(\frac{u_{i}}{v_{i}}\right) -\|\bm{u}\|_{1}+\|\bm{v}\|_{1}\]

for any \(\bm{u},\bm{v}\in\mathbb{R}^{E}_{+}\). We will also use the Iverson bracket notation \([\![\textsc{Pred}]\!]\) as the indicator function, meaning that it is equal to \(1\) if Pred is true, and \(0\) otherwise. All the proofs are in the Appendix.

## 3 Main result

Our main result is represented by a bound on the cumulative reward of our algorithm CBA. We note that any _weight_ vector \(\bm{u}\in\mathbb{R}^{E}_{+}\) induces a matrix \(\bm{\pi}(\bm{u})\in\mathbb{R}^{T\times K}_{+}\) defined by

\[\bm{\pi}(\bm{u}):=\sum_{i\in[E]}u_{i}\bm{e}^{i},\]

which is the linear combination of the experts with coefficients given by \(\bm{u}\). However, only some of such linear combinations generate valid policies. Thus, we define

\[\mathcal{V}:=\{\bm{u}\in\mathbb{R}^{E}_{+}\,|\,\bm{\pi}(\bm{u})\in\mathcal{A}^ {T}\}\]

as the set of all weight vectors that generate valid policies. Particularly, note that \(\bm{u}\in\mathcal{V}\) if and only if, on every trial \(t\), the weighted sum of the confidences \(\bm{u}\cdot\bm{c}_{t}\) is no greater than one. Given some \(\bm{u}\in\mathcal{V}\), we define

\[\rho(\bm{u}):=\sum_{t\in[T]}\bm{r}_{t}\cdot\bm{\pi}_{t}(\bm{u})\,,\]which would be the expected cumulative reward of the learner if it was to follow the policy \(\bm{\pi}(\bm{u})\). We point out that the learner does not know \(\mathcal{V}\) or the function \(\bm{\pi}\) a-priori.

The following theorem (proved in Appendix A) allows us to bound the regret of CBA with respect to any valid linear combination \(\bm{u}\) of experts.

**Theorem 3.1**.: CBA _takes parameters \(\eta\in(0,1)\) and \(\bm{w}_{1}\in\mathbb{R}_{+}^{E}\). For any \(\bm{u}\in\mathcal{V}\) the expected cumulative reward of CBA is bounded below by:_

\[\sum_{t\in[T]}\mathbb{E}[r_{t,a_{t}}]\geq\mathbb{E}[\rho(\bm{u})]-\frac{ \Delta(\bm{u},\bm{w}_{1})}{\eta}-\eta(12K+2)T\,,\]

_where the expectations are with respect to the randomization of CBA's strategy. The per-trial time complexity of CBA is in \(\mathcal{O}(KE)\)._

We now compare our bound to those of previous algorithms. Firstly, Exp4 can only achieve bounds relative to a \(\bm{u}\in\mathcal{V}\) with \(\|\bm{u}\|_{1}=1\), in which case it essentially matches our bound but with \(12K+2\) replaced by \(8K+8\). Hence, for any \(\bm{u}\in\mathcal{V}\) the Exp4 bound essentially replaces the term \(\rho(\bm{u})\) in our bound by \(\rho(\bm{u})/\|\bm{u}\|_{1}\). Note that \(\|\bm{u}\|_{1}\) could be as high as the number of experts which implies we can dramatically outperform Exp41.

Footnote 1: Precisely, if for each expert there exists a trial in which the confidence is 1, then we have \(0\leq\|u\|_{1}\leq E\). Otherwise can be high as \(0\leq\|u\|_{1}\leq E/c^{*}\), where \(c^{*}=\max_{t\in[T]}c_{t}^{t}\).

Secondly, when viewing our experts as confidence-rated predictors, we note that previous algorithms for this setting only give bounds on a weighted sum of the per-trial rewards where the weight on each trial is \(\bm{u}\cdot\bm{c}_{t}\) for some \(\bm{u}\in\mathcal{V}\). This is only a cumulative reward bound when \(\bm{u}\cdot\bm{c}_{t}=1\) for all \(t\in[T]\), and finding such a \(\bm{u}\) is typically impossible. When there does exist \(\bm{u}\) that satisfies this constraint, the reward relative to \(\bm{u}\) is essentially the same as for us (Blum and Mansour, 2007). However, there will often be another value of \(\bm{u}\) that will give us a much better bound, as we show in Section 5.2.

## 4 The CBA algorithm

The CBA algorithm is given in Algorithm 1. In this section, we describe its derivation via a modification of the classic _mirror descent_ algorithm.

Our modification of mirror descent is based on the following mathematical objects. For all \(t\in[T]\) we first define:

\[\mathcal{V}_{t}:=\{\bm{v}\in\mathbb{R}_{+}^{E}|\,\|\bm{\pi}_{t}(\bm{v})\|_{1} \leq 1\}\,,\]

which is the set of all weight vectors that give rise to linear combinations producing valid stochastic actions at trial \(t\). Given some \(t\in[T]\), we define our _objective function_\(\rho_{t}:\mathcal{V}_{t}\to[-1,1]\) as

\[\rho_{t}(\bm{v}):=\bm{r}_{t}\cdot\bm{\pi}(\bm{v})\text{ for all }\bm{v}\in \mathcal{V}_{t}.\]

Like mirror descent, CBA maintains, on each trial \(t\in[T]\), a weight vector \(\bm{w}_{t}\in\mathbb{R}_{+}^{E}\). However, unlike mirror descent on the simplex, we do not keep \(\bm{w}_{t}\) normalized, but we will instead project it into \(\mathcal{V}_{t}\) at the start of trial \(t\), producing a vector \(\tilde{\bm{w}}_{t}\). Also, unlike mirror descent, CBA does not use the actual gradient (which it does not know) of \(\rho_{t}\) at \(\tilde{\bm{w}}_{t}\), but (inspired by the Exp3 algorithm) uses an unbiased estimator instead. Specifically, on each trial \(t\in[T]\), CBA does the following:

1. Set \(\tilde{\bm{w}}_{t}\leftarrow\operatorname*{argmin}_{\bm{v}\in\mathcal{V}_{t}} \Delta(\bm{v},\bm{w}_{t})\).
2. Randomly construct a vector \(\bm{g}_{t}\in\mathbb{R}^{E}\) such that \(\mathbb{E}[\bm{g}_{t}]=\nabla\rho_{t}(\tilde{\bm{w}}_{t})\).
3. Set \(\bm{w}_{t+1}\leftarrow\operatorname*{argmin}_{\bm{v}\in\mathbb{R}_{+}^{E}}( \eta\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{v})+\Delta(\bm{v},\tilde{\bm{w}}_{t }))\).

This naturally raises two questions: how is \(a_{t}\) selected and how is \(\bm{g}_{t}\) constructed? On each trial \(t\in[T]\) we define

\[\bm{s}_{t}:=\sum_{i\in[E]}\tilde{w}_{t,i}\bm{e}_{t}^{i}\,,\]

which is the stochastic action generated by the linear combination \(\tilde{\bm{w}}_{t}\), and select \(a_{t}\sim\bm{s}_{t}\). Note that:

\[\mathbb{E}[r_{t,a_{t}}]=\rho_{t}(\tilde{\bm{w}}_{t})\,,\] (1)which confirms that \(\rho_{t}\) is our objective function at trial \(t\). Once \(r_{t,a_{t}}\) is revealed to us we can proceed to construct the gradient estimator \(\bm{g}_{t}\). It is important that we construct this estimator in a specific way. Inspired by Exp4 we first define a reward estimator \(\tilde{\bm{r}}_{t}\) such that for all \(a\in[K]\) we have:

\[\hat{r}_{t,a}:=1-\llbracket a=a_{t}\rrbracket(1-r_{t,a_{t}})/s_{t,a_{t}}\,.\]

This reward estimate is unbiased as:

\[\mathbb{E}[\hat{r}_{t,a}]=1-\Pr[a=a_{t}](1-r_{t,a})/s_{t,a}=r_{t,a}\,.\]

We then define, for all \(i\in[E]\), the component:

\[g_{t,i}:=\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t}\,.\]

Note that for all \(i\in[E]\) we have:

\[\mathbb{E}[g_{t,i}]=\bm{e}_{t}^{i}\cdot\mathbb{E}[\tilde{\bm{r}}_{t}]=\bm{e}_ {t}^{i}\cdot\bm{r}_{t}=\partial_{i}\rho_{t}(\tilde{\bm{w}}_{t})\]

so that \(\mathbb{E}[\bm{g}_{t}]=\nabla\rho_{t}(\tilde{\bm{w}}_{t})\) as required.

Now that we defined the process by which CBA operates we must show how to compute \(\tilde{\bm{w}}_{t}\) and \(\bm{w}_{t+1}\). First we show how to compute \(\tilde{\bm{w}}_{t}\) from \(\bm{w}_{t}\). If \(\|\bm{c}_{t}\|_{1}\leq 1\) it holds that \(\bm{w}_{t}\in\mathcal{V}_{t}\) so we immediately have \(\tilde{\bm{w}}_{t}=\bm{w}_{t}\). Otherwise we must find \(\tilde{\bm{w}}_{t}\in\mathbb{R}_{+}^{E}\) that minimizes \(\Delta(\tilde{\bm{w}}_{t},\bm{w}_{t})\) subject to the constraint:

\[\sum_{i\in[E]}\tilde{\bm{w}}_{t,i}c_{t,i}=1\,,\]

which is equivalent to the constraint that \(\|\bm{\pi}(\tilde{\bm{w}}_{t})\|_{1}=1\). Hence, by Lagrange's theorem there exists \(\lambda\) such that:

\[\nabla_{\tilde{\bm{w}}_{t}}\bigg{(}\Delta(\tilde{\bm{w}}_{t},\bm{w}_{t})+ \lambda\sum_{i\in[E]}\tilde{w}_{t,i}c_{t,i}\bigg{)}=0\]

which is solved by setting, for all \(i\in[E]\,\):

\[\tilde{w}_{t,i}:=w_{t,i}\exp(-\lambda c_{t,i})\,.\]The constraint is then satisfied if \(\lambda\) is such that:

\[\sum_{i\in[E]}c_{t,i}w_{t,i}\exp(-\lambda c_{t,i})=1\,.\]

Since this function is monotonic decreasing, \(\lambda\) can be found by interval bisection. For this computation step, we treat our numerical precision as a constant in our time complexity. In Appendix A.1, we show that, even if the numerical precision is unbounded, we incur a time complexity equal to that of Exp4, up to a factor logarithmic in \(T\), adding only 1 to the regret.

Turning to the computation of \(\boldsymbol{w}_{t+1}\,,\) since it is unconstrained it is found by the equation:

\[\nabla_{\boldsymbol{w}_{t+1}}(\boldsymbol{g}_{t}\cdot\boldsymbol{w}_{t+1}+ \eta^{-1}\Delta(\boldsymbol{w}_{t+1},\tilde{\boldsymbol{w}}_{t}))=0\,.\]

which is solved by setting, for all \(i\in[E]\,\):

\[w_{(t+1),i}:=\tilde{w}_{t,i}\exp(\eta g_{t,i})\,.\] (2)

## 5 Adversarial contextual bandits with abstention

One main application of CBA is in the problem of adversarial contextual bandits with a finite context set. In this problem, we have a finite set of _contexts_\(\mathcal{X}\). A-priori nature selects a sequence:

\[\langle(x_{t},\boldsymbol{r}_{t})\in\mathcal{X}\times[-1,1]^{K}\,|\,t\in[T] \rangle\,,\]

but does not reveal it to the learner. For all \(t\in[T]\) we define \(r_{t,\square}:=0\). On each trial \(t\in[T]\) the following happens:

1. The context \(x_{t}\) is revealed to the learner.
2. The learner selects an action \(a_{t}\in[K]\cup\{\square\}\).
3. The learner sees and incurs reward \(r_{t,a_{t}}\in[-1,1]\).

We will assume that we are given, a-priori, a set \(\mathcal{B}\subseteq 2^{\mathcal{X}}\) that we call the _basis_. We call each element of \(\mathcal{B}\) a _basis element_ (which is a set of contexts). We will later introduce various potential bases, determined by the nature of the context's structure: points within a metric space, nodes within a graph, and beyond. Importantly, our method is capable of accommodating any type of basis and, thus, any potential inductive bias that might be present in the data.

Given our basis we run our algorithm CBA with each expert corresponding to a pair \((B,k)\in\mathcal{B}\times[K]\). The expert corresponding to each pair \((B,k)\) will deterministically choose action \(k\) when the current context \(x_{t}\) is in \(B\), and abstain otherwise.

**Corollary 5.1**.: _Given any basis \(\mathcal{B}\) of cardinality \(N\) and any \(M\in\mathbb{N}\) we can implement CBA such that for any sequence of disjoint basis elements \(\langle B_{j}\,|\,j\in[M]\rangle\) with corresponding actions \(\langle b_{j}\in[K]\,|\,j\in[M]\rangle\) we have:_

\[\sum_{t\in[T]}\mathbb{E}[r_{t,a_{t}}]\geq\sum_{t\in[T]}\sum_{j\in[M]}[\![x_{t }\in B_{j}]\!]r_{t,b_{j}}-\sqrt{2M\ln(N)(6K+1)T}\,.\]

_The per-trial time complexity of this implementation of CBA is in \(\mathcal{O}(KN)\)._

Proof.: The choice of experts for CBA that leads to Corollary 5.1 is defined by the set of pairs so that \(E=NK\) and for each \(B\in\mathcal{B}\) and action \(a\in[K]\) there exists an unique \(i\in[E]\) such that for all \(t\in[T]\) and \(b\in[K]\) we have:

\[e_{t,b}^{i}:=[\![x_{t}\in B]\!][\![b=a]\!]\,.\]

By choosing \(w_{1,i}:=M/NK\) for all \(i\in[E]\,\), and choosing

\[\eta:=(M\ln(N)/(6K+1)T)^{-1/2}\,,\]

Theorem 3.1 implies the reward bound in Corollary 5.1. The per-trial time complexity of a direct implementation of CBA for this set of experts would be \(\mathcal{O}(KN)\)We briefly comment on the term:

\[\sum_{j\in[M]}[\![x_{t}\in B_{j}]\!]r_{t,b_{j}}\;,\]

that appears in the theorem statement. If \(x_{t}\) does not belong to any of the sets in \(\langle B_{j}\,|\,j\in[M]\rangle\) then this term is equal to zero (which is the reward of abstaining). Otherwise, since the sets are disjoint, \(x_{t}\) belongs to exactly one of them and the term is equal to the reward induced by the action that corresponds to that set. In other words, the total cumulative reward is bounded relative to that of the policy that abstains whenever \(x_{t}\) is outside the union of the sets and otherwise selects the action corresponding to the set that \(x_{t}\) lies in.

Note the vast improvement of our reward bound over that of SpecialistExp with abstention as one of the actions. Let's assume our context set is a metric space and our basis is the set of all balls. In order to get a reward bound for SpecialistExp, the sets in which the specialists are awake must partition the set \(\mathcal{X}\). This means that we must add to our \(M\) balls a disjoint covering (by balls) of the complement of the union of the original \(M\) balls. Note that the added balls correspond to the sets in which the specialists predicting the abstention action are awake. Typically this would require a huge number of balls so that the total number of specialists is huge (much larger than \(M\)); this huge number of specialists essentially replaces the term \(M\) in our reward bound (we illustrate an example in Figure 1).

Furthermore, in Appendix D, we show that the same implementation of CBA is capable of learning a weighted set of _overlapping_ basis elements, as long as the sum of the weights of the basis elements covering any context is bounded above by one, which SpecialistExp cannot do in general.

As we will see below, the practical bases we propose have a moderate size of \(|\mathcal{B}|=\mathcal{O}(|\mathcal{X}|^{2})\) leading to a per-step runtime of \(\mathcal{O}(K|\mathcal{X}|^{2})\) for CBA in this contextual bandit problem. In Section 5.2, we show how to significantly improve the runtime for a broad family of bases.

### A lower bound

In this section, we show that CBA is, up to an \(\mathcal{O}(\ln(|\mathcal{B}|))\) factor, essentially best possible on this contextual bandit problem:

**Proposition 5.2**.: _Take any learning algorithm. Given any basis \(\mathcal{B}\) and any \(M\in\mathbb{N}\), for any sequence of disjoint basis elements \(\langle B_{j}\,|\,j\in[M]\rangle\) there exists a sequence of corresponding actions \(\langle b_{j}\in[K]\,|\,j\in[M]\rangle\) such that an adversary can force:_

\[\sum_{t\in[T]}\sum_{j\in[M]}[\![x_{t}\in\mathcal{B}_{j}]\!]r_{t,b_{j}}-\sum_{ t\in[T]}\mathbb{E}[r_{t,a_{t}}]\in\Omega\left(\sqrt{MKT}\right)\;.\]

Figure 1: Illustrative example of abstention where we cover the foreground and background classes with metric balls. We consider two clusters (blue and orange) as the foreground and one background class (white), using the shortest path \(d_{\infty}\) metric. Using abstention, we can cover two clusters with one ball for each and abstain the background with no balls required (Fig. 1(a)). In contrast, if we treat the background class as another class, it would require significantly more balls to cover the background class, as seen by the 10 gray balls in Fig. 1(b). If the number of balls to cover significantly increases like in this case, the bound involving the number of balls also gets significantly worse.

### Efficient learning with balls

In practice we can often quantify the similarity between any pair of contexts. That is, the contexts form a metric space, equipped with a _distance_ function \(d:\mathcal{X}\times\mathcal{X}\to\mathbb{R}_{+}\) known to the learner a-priori. For example, contexts could have feature vectors in \(\mathbb{R}^{m}\) (and the metric is the standard Euclidean distance or cosine similarity) or be nodes in a graph with the metric given by the shortest-path distance. A natural basis for this situation is the set of metric _balls_. Specifically, a ball is any set \(B\subseteq\mathcal{X}\) in which there exists some \(x\in\mathcal{X}\) and \(\delta\in\mathbb{R}_{+}\) with:

\[B=\left\{z\in\mathcal{X}\,|\,d(x,z)\leq\delta\right\}.\]

For this broad family of bases2 we can achieve the following speed-up, relying on a a sophisticated data structure based on binary trees.

Footnote 2: Actually we require a weaker condition. We only use the fact that for each context \(z\in\mathcal{X}\) we have a set \(\mathcal{B}_{z}=\{B_{1}^{z},\ldots,B_{z}^{z}\}\) of monotonically increasing basis elements, that is, \(B_{i}^{z}\subseteq B_{j}^{z}\) for \(i<j\), and the whole basis is formed by the union of these: \(\mathcal{B}=\bigcup_{z\in\mathcal{X}}\mathcal{B}_{z}\).

**Theorem 5.3**.: _Let \(N:=|\mathcal{X}|\). Given any \(M\in\mathbb{N}\) we can implement_ CBA _such that for any sequence of disjoint balls \(\langle B_{j}\,|\,j\in[M]\rangle\) with corresponding actions \(\langle b_{j}\in[K]\,|\,j\in[M]\rangle\) we have:_

\[\sum_{t\in[T]}\mathbb{E}[r_{t,a_{t}}]\geq\sum_{t\in[T]}\sum_{j\in[M]}[\![x_{t }\in B_{j}]\!]r_{t,b_{j}}-\sqrt{4M\ln(N)(6K+1)T}\,.\]

_The per-trial time complexity of this implementation of_ CBA _is in \(\mathcal{O}(KN\ln(N))\)._

As there are at most \(\mathcal{O}(N^{2})\) metric balls, this improves the runtime of the direct CBA implementation from \(\mathcal{O}(KN^{2})\) to \(\mathcal{O}(KN\ln(N))\), that is almost linear per step. All the details are in Appendix B.

## 6 Experiments

This section conducts preliminary experiments, the code is available at GitHub3. We evaluate our method to compare existing algorithms using graph data, since it is common to consider graph structures under the confidence-rated expert setting (Cesa-Bianchi et al., 2013; Herbster et al., 2021). As mentioned above, the bases used in our algorithm can be constructed arbitrarily, allowing to encompass different inductive biases based on applications. Thus, we consider some representative bases used on learning tasks on graphs before, each leading to different inductive priors on the contexts. We provide a short description of the bases here and refer to Appendix E for more details.

Figure 2: Results regarding the number of mistakes over time, the four main settings are presented from left to right: the Stochastic Block Model, Gaussian graph, Cora graph and LastFM Asia graph. In this context, D1, D2, and D-INF represent the \(p\)-norm bases, LVC represents the community detection basis, and INT represents the interval basis. The baselines, EXP3 for each context, Contextual Bandit with similarity, and GABA-II, are denoted as EXP3, CBSim, and GABA, respectively, and are represented with dashed lines. All the figures display the data with 95% confidence intervals over 20 runs, calculated using the standard error multiplied by the \(z\)-score 1.96.

**Effective \(p\)-resistance basis \(d_{p}\)**: Balls given by the metric

\[d_{p}(i,j):=\left(\min_{\begin{subarray}{c}\bm{u}\in\mathbb{R}^{N}\\ u_{i}-u_{j}=1\end{subarray}}\sum_{s,t\in V}|u_{s}-u_{t}|^{p}\right)^{-1/p}.\]

We use \(d_{1}\), \(d_{2}\), and \(d_{\infty}\)(Herbster and Lever, 2009).

**Louvain method basis (LVC)**: Communities returned by the Louvain method (Blondel et al., 2008), processed by the greedy peeling algorithm (Lanciano et al., 2024).

**Geodesic intervals basis (INT)**: All sets of the form \(I(x,y):=\{z\in\mathcal{X}\mid z\text{ is on a shortest $x$-$y$ path}\}\) for all \(x,y\in\mathcal{X}\)(Pelayo, 2013; Thiessen and Gartner, 2021).

Let \(N\) be the cardinality of \(|\mathcal{X}|\). For all three basis types, we immediately get an \(\mathcal{O}(KN^{2})\) runtime per step of CBA as there are \(\mathcal{O}(N^{2})\) basis elements. Moreover, for \(d_{p}\) balls and the LVC basis we can use the more efficient \(\mathcal{O}(KN\ln N)\) implementation through Theorem 5.3. We empirically evaluate our approach in the context of online multi-class node classification on a given graph with bandit feedback. At each time step, the algorithm is presented with a node chosen uniformly at random and must either predict an action from the set of possible actions \([K]\) or abstain. The node can accept (resulting in a positive reward) or reject (resulting in a negative reward) the suggestion based on its preferred class with a certain probability. In a real-world application, this models a scenario where each user has a category preference (such as music genre or interest). When the item we decide to present matches their interest, there is a high probability of receiving a reward.

We compare our approach CBA using each of these bases on real-world and artificial graphs against the following baselines: an implementation of ContextualBandit from Slivkins (2011), the GABA-II algorithm proposed by Herbster et al. (2021), and an EXP3 instance for each data point. We use the following graphs for evaluation.

**Stochastic block model.** We use an established synthetic graph, _stochastic block model_(Holland et al., 1983). This graph is generated by spawning an arbitrary number of disjoint cliques representing the foreground classes. Then an arbitrary number of background points are generated and connected to every possible point with a low probability. Figure 2(a) are displayed the results for the case of \(F=160\) nodes for each foreground class and \(B=480\) nodes for the background class. Connecting each node of the background class with a probability of \(1/\sqrt{FB}\).

**Gaussian graph.** The points on this graph are generated in a two-dimensional space using five different Gaussian distributions with zero mean. Four of them are positioned at the corners of the unit square, representing the foreground classes and having a relatively low standard deviation. Meanwhile, the fifth distribution, representing the background class, is centered within the square and is characterized by a larger standard deviation. The points are linked in a \(k\)-nearest neighbors graph. In Figure 2(b) are displayed the results for 160 nodes for each foreground class and a standard deviation of 0.2, 480 nodes for the background class with a standard deviation of 1.75, along with a 7-nearest neighbors graph.

**Real-world dataset.** We tested our approach on the Cora dataset (Sen et al., 2008) and the LastFM Asia dataset (Leskovec and Krevl, 2014). While both of these graphs contain both features and a graph, we exclusively utilized the largest connected component of each graph, resulting in 2485 nodes and 5069 edges for the Cora graph and 7624 nodes and 27806 edges for the LastFM Asia graph. Subsequently, we randomly chose a subset of three out of the original seven and eighteen classes, respectively, to serve as the background class. Additionally, we selected 15% of the nodes from the foreground classes randomly to represent noise points, and we averaged the results over multiple runs, varying the labels chosen for noise. Both in Figures 2(c) and 2(d) we averaged over 5 different label sets as noise. For the LastFM Asia graph, we exclusively tested the LVC bases, as it is the most efficient one to compute given the large size of the graph.

**Results.** The results from both synthetically generated tests (Figures 2(a) and 2(b)) demonstrate the superiority of our method when compared to the baselines. In particular, \(d_{\infty}\)-balls delivered exceptional results for both graphs, implying that \(d_{\infty}\)-balls effectively cover the foreground classes as expected. For the Cora dataset (Figure 2(c)), we observed that our method outperforms GABA-II only when employing the community detection basis. This similarity in performance is likely attributed to the dataset's inherent lack of noise. Worth noting that the method we employed to inject noise into the dataset may not have been the optimal choice for this specific context. However, it isessential to highlight that our primary focus revolves around the abstention criteria, which plays a central role in ensuring the robustness of our model in the presence of noise. For the LastFM Asia dataset, our objective was to assess the practical feasibility of the model on a larger graph. We tested the LVC bases as they were the most promising and most efficient to compute. We outperform the baselines in our evaluation as shown in Figure 2(d) and further discussed in Appendix F.

In summary, our first results confirm what we expected: our approach excels when we choose basis functions that closely match the context's structure. However, it also encounters difficulties when the chosen basis functions are not a good fit for the context. In Appendix F, the results for a wide range of different parameters used to generate the previously described graphs are displayed.

## Acknowledgement

SP acknowledges the following funding. Research funded by the Defence Science and Technology Laboratory (Dstl) which is an executive agency of the UK Ministry of Defence providing world class expertise and delivering cutting-edge science and technology for the benefit of the nation and allies. The research supports the Autonomous Resilient Cyber Defence (ARCD) project within the Dstl Cyber Defence Enhancement programme. AR acknowledges the support from the NeurIPS 2024 Financial Assistance. MT acknowledges support from a DOC fellowship of the Austrian academy of sciences (OAW). SS acknowledges the support by Huawei for his Ph.D study at UCL.

## References

* Alamgir and von Luxburg (2011) Morteza Alamgir and Ulrike von Luxburg. Phase transition in the family of \(p\)-resistances. In _Proc. NIPS_, pages 379-387, 2011.
* Auer and Long (1999) Peter Auer and Philip M Long. Structural results about on-line learning models with and without queries. _Mach. Learn._, 36:147-181, 1999.
* Auer et al. (2002) Peter Auer, Nicolo Cesa-Bianchi, Yoav Freund, and Robert E Schapire. The nonstochastic multiarmed bandit problem. _SIAM J. Comput._, 32(1):48-77, 2002.
* Beck (2017) Amir Beck. _First-Order Methods in Optimization_. SIAM, 2017.
* Blondel et al. (2008) Vincent D Blondel, Jean-Loup Guillaume, Renaud Lambiotte, and Etienne Lefebvre. Fast unfolding of communities in large networks. _J. Stat. Mech. Theory Exp._, 2008(10):P10008, 2008.
* Blum and Mansour (2007) Avrim Blum and Yishay Mansour. From external to internal regret. _J. Mach. Learn. Res._, 8(6), 2007.
* Bressan et al. (2021) Marco Bressan, Nicolo Cesa-Bianchi, Silvio Lattanzi, and Andrea Paudice. Exact recovery of clusters in finite metric spaces using oracle queries. In _Proc. COLT_, 2021.
* Cesa-Bianchi et al. (2013) Nicolo Cesa-Bianchi, Claudio Gentile, and Giovanni Zappella. A gang of bandits. In _Proc. NIPS_, volume 26, 2013.
* Chow (1970) C Chow. On optimum recognition error and reject tradeoff. _IEEE Trans. Inf. Theory_, 16(1):41-46, 1970.
* Chow (1957) Chi-Keung Chow. An optimum character recognition system using decision functions. _IRE Trans. Electron. Comput._, EC-6(4):247-254, 1957.
* Cortes et al. (2018) Corinna Cortes, Giulia DeSalvo, Claudio Gentile, Mehryar Mohri, and Scott Yang. Online learning with abstention. In _Proc. ICML_, pages 1059-1067, 2018.
* Cortes et al. (2020) Corinna Cortes, Giulia DeSalvo, Claudio Gentile, Mehryar Mohri, and Ningshan Zhang. Online learning with dependent stochastic feedback graphs. In _Proc. ICML_, pages 2154-2163, 2020.
* Doyle and Snell (1984) Peter G Doyle and J Laurie Snell. _Random Walks and Electric Networks_, volume 22 of _The Carus Mathematical Monographs_. American Mathematical Society, 1984.
* Floyd (1962) Robert W Floyd. Algorithm 97: shortest path. _Commun. ACM_, 5(6):345, 1962.
* Fortunato (2010) Santo Fortunato. Community detection in graphs. _Phys. Rep._, 486(3):75-174, 2010.
* Fortunato et al. (2018)

[MISSING_PAGE_FAIL:11]

CBA analysis

Here we prove Theorem 3.1 from the modification of mirror descent (and the specific construction of \(\bm{g}_{t}\)) given in Section 4. Whenever we take expectations in this analysis they are over the draw of \(a_{t}\) from \(\bm{s}_{t}\) for some \(t\in[T]\). As for mirror descent, our analysis hinges on the following classic lemma:

**Lemma A.1**.: _Given any convex set \(\mathcal{C}\subseteq\mathbb{R}_{+}^{E}\), any convex function \(\xi:\mathbb{R}_{+}^{E}\to\mathbb{R}\), any \(\bm{q}\in\mathcal{C}\) and any \(\bm{z}\in\mathbb{R}_{+}^{E}\) with:_

\[\bm{q}=\operatorname{argmin}_{\bm{v}\in\mathcal{C}}(\xi(\bm{v})+\Delta(\bm{v},\bm{z}))\,,\]

_then for all \(\bm{u}\in\mathcal{C}\) we have:_

\[\xi(\bm{u})+\Delta(\bm{u},\bm{z})\geq\xi(\bm{q})+\Delta(\bm{u},\bm{q})\,.\]

Proof.: Theorem 9.12 in Beck [2017] shows that the theorem holds if \(\Delta\) is Bregman divergence. In our case \(\Delta\) is indeed a Bregman divergence: that of the convex function \(f:\mathbb{R}_{+}^{E}\to\mathbb{R}\) for all \(\bm{v}\in\mathbb{R}_{+}^{E}\) defined by:

\[f(\bm{v}):=\sum_{i\in[E]}v_{i}\ln(v_{i}),\]

which concludes the proof. 

Proof of Theorem 3.1.: Choose any \(\bm{u}\in\mathcal{V}\) and \(t\in[T]\). We immediately have \(\mathcal{V}\subseteq\mathcal{V}_{t}\) by definition, and therefore \(\bm{u}\in\mathcal{V}_{t}\). Hence, by setting \(\xi\) such that \(\xi(\bm{v}):=0\) for all \(\bm{v}\in\mathbb{R}_{+}^{E}\), setting \(\mathcal{C}\in\mathcal{V}_{t}\) and setting \(\bm{z}=\bm{w}_{t}\) in Lemma A.1 we have \(\bm{q}=\tilde{\bm{w}}_{t}\) so that:

\[\Delta(\bm{u},\bm{w}_{t})\geq\Delta(\bm{u},\tilde{\bm{w}}_{t})\,.\] (3)

Alternatively, by setting \(\xi\) such that \(\xi(\bm{v}):=\eta\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{v})\) for all \(\bm{v}\in\mathbb{R}_{+}^{E}\), setting \(\mathcal{C}=\mathbb{R}_{+}^{E}\) and setting \(\bm{z}=\tilde{\bm{w}}_{t}\) in Lemma A.1 we have \(\bm{q}=\bm{w}_{t+1}\) so that:

\[\eta\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{u})+\Delta(\bm{u},\tilde{\bm{w}}_{ t})\geq\eta\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{w}_{t+1})+\Delta(\bm{u},\bm{w}_{ t+1})\,.\] (4)

Since \(\mathbb{E}[\bm{g}_{t}]=\nabla\rho_{t}(\tilde{\bm{w}}_{t})\) and \(\rho_{t}\) is linear we have:

\[\mathbb{E}[\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{u})]=\rho_{t}(\tilde{\bm{w} }_{t})-\rho_{t}(\bm{u})\,.\] (5)

In what follows we use the fact that for all \(x\leq 1\) we have:

\[x(1-\exp(x))\geq-2x^{2}\,.\] (6)

For all \(i\in[E]\), we have, by definition, that \(g_{t,i}=\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t}\) so by Equation (2) we have:

\[\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{w}_{t+1})=\sum_{i\in[E]}\tilde{w}_{t,i }\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t}(1-\exp(\eta\bm{e}_{t}^{i}\cdot\hat{\bm{r }}_{t}))\,.\]

Since, for all \(a\in[K]\), we have \(\hat{r}_{t,a}\leq 1\) and hence, as \(\eta<1\) and, for all \(i\in[E]\) we have \(\|\bm{e}_{t}^{i}\|_{1}\leq 1\), we can invoke Equation (6), which gives us:

\[\eta\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{w}_{t+1})\geq-2\sum_{i\in[E]} \tilde{w}_{t,i}(\eta\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t})^{2}\,.\] (7)

By definition of \(\hat{\bm{r}}_{t}\) we have, for all \(i\in[E]\), that:

\[\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t}=\|\bm{e}_{t}^{i}\|_{1}+e_{t,a_{t}}^{i}(1-r _{t,a_{t}})/s_{t,a_{t}}\leq c_{t,i}+2e_{t,a_{t}}^{i}/s_{t,a_{t}}\]

so that since, for all \(a\in[K]\), we have \(\Pr[a_{t}=a]=s_{t,a}\) we also have:

\[\mathbb{E}[(\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t})^{2}]\leq c_{t,i}^{2}+\sum_{a \in[K]}(2e_{t,a}^{i}c_{t,i}+4(e_{t,a}^{i})^{2}/s_{t,a})\,.\] (8)

Since, for all \(i\in[E]\)  and \(a\in[K]\), we have \(e_{t,a}^{i}\leq 1\) and \(c_{t,i}\leq 1\) and hence also \(c_{t,i}^{2}\leq c_{t,i}\)  we then have:

\[\mathbb{E}[(\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t})^{2}]\leq(2K+1)c_{t,i}+4\sum_{a \in[K]}e_{t,a}^{i}/s_{t,a}\,.\] (9)Note that since \(\tilde{\bm{w}}_{t}\in\mathcal{V}_{t}\) we have:

\[\sum_{i\in[E]}\tilde{w}_{t,i}c_{t,i}\leq 1\,.\] (10)

Also, by definition of \(\bm{s}_{t}\) we have:

\[\sum_{i\in[E]}\tilde{w}_{t,i}\sum_{a\in[K]}e^{i}_{t,a}/s_{t,a}=\sum_{a\in[K]} \frac{1}{s_{t,a}}\sum_{i\in[E]}\tilde{w}_{t,i}e^{i}_{t,a}=\sum_{a\in[K]}\frac{1} {s_{t,a}}s_{t,a}=K\,.\] (11)

Multiplying Inequality (9) by \(\tilde{w}_{t,i}\), summing over all \(i\in[E]\), and then substituting in Inequality (10) and Equation (11) gives us:

\[\sum_{i\in[E]}\tilde{w}_{t,i}\mathbb{E}[(\bm{e}^{i}_{t}\cdot\tilde{\bm{r}}_{t} )^{2}]\leq(2K+1)+4K=6K+1\,.\] (12)

Taking expectations on Inequality (7) and substituting in Inequality (12) (after taking expectations) gives us:

\[\mathbb{E}[\eta\bm{g}_{t}\cdot(\tilde{\bm{w}}_{t}-\bm{w}_{t+1})]\geq-\eta^{2} (12K+2)\,.\] (13)

Taking expectations (over the draw \(a_{t}\sim\bm{s}_{t}\)) on Inequality (4), substituting in Inequalities (3), (5) and (13), and then rearranging gives us:

\[\Delta(\bm{u},\bm{w}_{t})-\mathbb{E}[\Delta(\bm{u},\bm{w}_{t+1})]\geq\eta( \rho_{t}(\bm{u})-\rho_{t}(\tilde{\bm{w}}_{t}))-\eta^{2}(12K+2)\,.\]

Summing this inequality over all \(t\in[T]\), taking expectations (over the entire sequence of action draws) and noting that \(\Delta(\bm{u},\bm{w}_{T+1})>0\) gives us:

\[\Delta(\bm{u},\bm{w}_{1})\geq\eta\sum_{t\in[T]}\mathbb{E}[\rho_{t}(\bm{u})- \rho_{t}(\tilde{\bm{w}}_{t})]-\eta^{2}(12K+2)T\,.\]

Substituting in Equation (1) and rearranging then gives us, by definition of \(\rho\) and \(\rho_{t}\), the required goal:

\[\sum_{t\in[T]}\mathbb{E}[r_{t,a_{t}}]\geq\mathbb{E}[\rho(\bm{u})]-\Delta(\bm{ u},\bm{w}_{1})/\eta-\eta(12K+2)T\,.\]

### Unbounded precision case

We will now show how to handle the case in which our numerical precision is unbounded, incurring a time complexity equal, up to a factor logarithmic in \(T\), to that of Exp4 and adding only 1 to the regret. This additive factor, however, can be made arbitrarily small.

Let us restrict ourselves to compare against \(\bm{u}\) with \(\|\bm{u}\|_{\infty}\leq Z\) for some arbitrary \(Z\). Note that this always has to be the case when each expert has a confidence of at least \(1/Z\) on some trial. Our time complexity will be logarithmic in \(Z\). At the beginning of trial \(t\) we will now project (via the unnormalised relative entropy) \(\bm{w}_{t}\) into the set \(\{\bm{v}\in\mathbb{R}^{E}\mid\|\bm{v}\|_{\infty}\leq Z\}\) which simply requires clipping its components. Since the set \(\{\bm{v}\in\mathbb{R}^{E}\mid\|\bm{v}\|_{\infty}\leq Z\}\) is convex and contains our comparator \(\bm{u}\) this will not affect our regret bound.

For any \(q\in\mathbb{R}\) let \(\mathcal{V}_{t}(q)\) be the set of all \(\bm{v}\) with \(\bm{v}\cdot\bm{c}_{t}\leq q\). We note that given, for all \(t\in[T]\), a value \(q_{t}\in[1-1/T,1]\) we have that there exists \(\hat{\bm{u}}\in\bigcap_{t}\mathcal{V}_{t}(q_{t})\) such that the cumulative reward of \(\bm{\pi}(\hat{\bm{u}})\) is no less than that of \(\bm{\pi}(\bm{u})\) minus \(1\). This means that, on any trial \(t\) we can, instead of projecting into the set \(\mathcal{V}_{t}\), project into the set \(\mathcal{V}_{t}(q_{t})\) for some \(q_{t}\in[1-1/T,1]\) and add no more than one to the regret (by considering \(\hat{\bm{u}}\) as the comparator instead of \(\bm{u}\)).

So the problem (for the projection step at time \(t\) if necessary) is now to project into the set of all \(\{\bm{v}\,|\,\bm{v}\cdot\bm{c}\leq q_{t}\}\) for some arbitrary \(q_{t}\in[1-1/T,1]\). Following our use of Lagrange multipliers, this means that we need to find \(\lambda>0\) with \(\sum_{i}c_{t,i}w_{t,i}\exp(-\lambda c_{t,i})\in[1-1/T,1]\). So consider the function \(f\) defined by \(f(\lambda^{\prime}):=\sum_{i}c_{t,i}w_{t,i}\exp(-\lambda^{\prime}c_{t,i})\).

Consider \(\lambda^{\prime}:=ZE\ln(ZE)\) and take any \(i\in[E]\). Since \(w_{t,i}\leq Z\) we have that when \(c_{t,i}<1/ZE\) then \(c_{t,i}w_{t,i}\exp(-\lambda^{\prime}c_{t,i})\leq c_{t,i}w_{t,i}<1/E\) and that when \(c_{t,i}\geq 1/ZE\) then \(c_{t,i}w_{t,i}\exp(-\lambda^{\prime}c_{t,i})\leq Z\exp(-\lambda^{\prime}/ZE)=1/E\). This implies that \(f(\lambda^{\prime})\leq 1\) and hence (since \(f\) is monotonic decreasing) an acceptable \(\lambda\) lies in \([0,ZE\ln(ZE)]\).

For general \(\lambda^{\prime}\) we note that \(\nabla f(\lambda^{\prime})=-\sum_{i}c_{t,i}^{2}w_{t,i}\exp(-\lambda^{\prime}c_{t, i})\geq-f(\lambda^{\prime})\). This means that \(|\nabla f(\lambda)|\leq 1\). Since the length of the interval \([1-1/T,1]\) is \(1/T\) this means that the length of the interval containing acceptable values of \(\lambda\) is at least \(1/T\).

So we have shown that either \(\lambda=ZE\ln(ZE)\) is acceptable or the range of acceptable values of \(\lambda\) is of length \(1/T\) and lies in \([0,ZE\ln(ZE)]\) (which has length \(ZE\ln(ZE)\)). The ratio of these lengths is \(ZET\ln(ZE)\) so interval bisection will find an acceptable value of \(\lambda\) in \(O(\ln(ZET\ln(ZE)))=O(\ln(EZT))\) steps.

So we have a time complexity \(O(EK+E\ln(EZT))\) and we have only added \(1\) to the regret (although this additive factor can be made arbitrarily small).

## Appendix B Efficient implementation proof

We here prove the time complexity of Theorem 5.3. The per-trial time complexity of a direct implementation of CBA for this set of experts would be \(\mathcal{O}(KN^{2})\). We now show how to implement CBA in a per-trial time of only \(\mathcal{O}(KN\ln(N))\). To do this first note that we can assume, without loss of generality, that for all \(q,x,z\in\mathcal{X}\) with \(x\neq z\) we have \(d(q,x)\neq d(q,z)\) since ties can be broken arbitrarily and balls can be duplicated.

Given \(x,z\in\mathcal{X}\), \(a\in[K]\) and \(t\in[T]\) we let \(y_{t,a}(x,z):=w_{t,i}\) and \(\tilde{y}_{t,a}(x,z):=\tilde{w}_{t,i}\) where \(i\) is the index of the expert corresponding to the ball-action pair with ball: \(\{q\in\mathcal{X}\,|\,d(x,q)\leq d(x,z)\}\), and action \(a\). Given \(x,z\in\mathcal{X}\) let \(\mathcal{E}(x,z):=\{q\in\mathcal{X}\,|\,d(x,q)\geq d(x,z)\}\). It is straightforward to derive the following equations for the quantities in CBA at trial \(t\in[T]\). First we have:

\[\|\bm{c}_{t}\|_{1}=\sum_{a\in[K]}\sum_{x\in\mathcal{X}}\sum_{z\in\mathcal{E}( x,x_{t})}y_{t,a}(x,z)\,.\]

For all \(x,z\in\mathcal{X}\) and \(a\in[K]\) we have the following:

* If \(\|\bm{c}_{t}\|_{1}{\leq}1\) or \(z\notin\mathcal{E}(x,x_{t})\) then \(\tilde{y}_{t,a}(x,z){=}y_{t,a}(x,z)\).
* If \(\|\bm{c}_{t}\|_{1}>1\) and \(z\in\mathcal{E}(x,x_{t})\) then \(\tilde{y}_{t,a}(x,z)=y_{t,a}(x,z)/\|\bm{c}_{t}\|_{1}\).

For all \(a\in[K]\) we have:

\[s_{t,a}=\sum_{x\in\mathcal{X}}\sum_{z\in\mathcal{E}(x,x_{t})}\tilde{y}_{t,a}( x,z)\,.\]

Finally, for all \(x,z\in\mathcal{X}\) and \(a\in[K]\) we have the following:

\[y_{(t+1),a}(x,z)=\begin{cases}\tilde{y}_{t,a}(x,z)&\text{if }z\notin\mathcal{E}(x,x _{t})\,,\\ \tilde{y}_{t,a}(x,z)\exp(\eta\bm{e}_{t}^{i}\cdot\hat{\bm{r}}_{t})&\text{if }z\in \mathcal{E}(x,x_{t})\,.\end{cases}\]

Hence, to implement CBA we need, for each \(x\in\mathcal{X}\) and \(a\in[K]\), a data structure that implicitly maintains a function \(h:\mathcal{X}\rightarrow\mathbb{R}^{+}\) and has the following two subroutines, that take parameters \(q\in\mathcal{X}\) and \(p\in\mathbb{R}_{+}\).

1. \(\textsc{Query}(q)\): Compute \(\sum_{z\in\mathcal{E}(x,q)}h(z)\).
2. \(\textsc{Update}(q,p)\): Set \(h(z)\gets ph(z)\) for all \(z\in\mathcal{E}(x,q)\).

Now fix \(x\in\mathcal{X}\) and \(a\in[K]\). Let \(h\) be as above. On each trial \(t\in[T]\) and for all \(z\in\mathcal{X}\), \(h(z)\) will start equal to \(y_{t,a}(x,z)\) and change to \(\tilde{y}_{t,a}(x,z)\) and then \(y_{(t+1),a}(x,z)\) by applying the Update subroutine.

We now show how to implement these subroutines implicitly in a time of \(\mathcal{O}(\ln(N))\) as required. Without loss of generality, assume that \(N=2^{n}\) for some \(n\in\mathbb{N}\). Our data structure is based on a balanced binary tree \(\mathcal{D}\) whose leaves are the elements of \(\mathcal{X}\) in order of increasing distance from \(x\). This implies that for any \(z\in\mathcal{X}\) we have that \(\mathcal{E}(x,z)\) is the set of leaves that do not lie on the left of \(z\). Given a node \(v\in\mathcal{D}\) we let \(\Uparrow(v)\) be the set of ancestors of \(v\) and let \(\Downarrow(v)\) be the set of all \(z\in\mathcal{X}\) which are descendants of \(v\). For any internal node \(v\) let \(\triangleleft(v)\) and \(\triangleright(v)\) be the left and right children of \(v\) respectively.

We maintain functions \(\phi,\psi:\mathcal{D}\to\mathbb{R}_{+}\,\) such that for all \(v\in\mathcal{D}\) we have:

\[\psi(v)\prod_{v^{\prime}\in\Uparrow(v)}\phi(v^{\prime})=\sum_{z\in\Uparrow(v) }h(z)\,.\] (14)

The pseudo-code for the subroutines Query and Update are given in Algorithms 2 and 3 respectively. We now prove their correctness. We first consider the Query subroutine with parameter \(q\in\mathcal{X}\). From Equation (14) we see that, by (reverse) induction on \(i\in[n]\cup\{0\}\), we have:

\[\sigma_{i}\prod_{v^{\prime}\in\Uparrow(\gamma_{i})\setminus\{\gamma_{i}\}} \phi(v^{\prime})=\sum_{z\in\Uparrow(\gamma_{i})\cap\mathcal{E}(x,q)}h(z)\,.\]

Since \(\gamma_{0}\) is the root of \(\mathcal{D}\), we have \(\sigma_{0}=\sum_{z\in\mathcal{E}(x,q)}h(z)\) as required. Now consider the Update subroutine with parameters \(q\in\mathcal{X}\) and \(p\in\mathbb{R}_{+}\). Let \(h\) be the implicitly maintained function before the subroutine is called. For Equation (14) to hold after the subroutine is called we need:

\[\psi(v)\prod_{v^{\prime}\in\Uparrow(v)}\phi(v^{\prime})=\sum_{z\in\Downarrow(v) }h^{\prime}(z)\,.\] (15)

where for all \(z\in\mathcal{X}\) we have:

\[h^{\prime}(z):=\llbracket z\notin\mathcal{E}(x,q)\rrbracket h(z)+\llbracket z \in\mathcal{E}(x,q)\rrbracket ph(z)\,.\]

We shall now show that Equation (15) does indeed hold after the subroutine is called, which will complete the proof. To show this we consider each step of the subroutine in turn. After Step 2 we have (via induction) that:

* For all \(v\in\Uparrow(q)\) we have \(\phi(v)=1\).
* For all \(v\in\mathcal{D}\setminus\Uparrow(q)\) we have: \[\psi(v)\prod_{v^{\prime}\in\Uparrow(v)}\phi(v^{\prime})=\sum_{z\in\Uparrow(v) }h(z)\,.\]

So, since \(\mathcal{E}(x,q)\) is the set of all \(z\in\mathcal{X}\) that do not lie to the left of \(q\) in \(\mathcal{D}\) we have that, after Step 4 of the algorithm, the following holds:

* For all \(v\in\Uparrow(q)\) we have \(\phi(v)=1\),
* For all \(v\in\mathcal{D}\setminus\Uparrow(q)\) we have: \[\psi(v)\prod_{v^{\prime}\in\Uparrow(v)}\phi(v^{\prime})=\sum_{z\in\Downarrow(v )}h^{\prime}(z)\,.\]

Hence, by induction, we have that, after Step 5 of the algorithm, it is the case that for all \(v\in\Uparrow(q)\) we have: \(\psi(v)=\sum_{z\in\Uparrow(v)}h^{\prime}(z)\,.\) So since \(\phi(v)=1\) for all \(v\in\Uparrow(q)\) and Step 5 does not alter \(\phi(v)\) or \(\psi(v)\) for any \(v\in\mathcal{D}\setminus\Uparrow(q)\) we have Equation (15).

Lower bound proof

**Proposition C.1**.: _Take any learning algorithm. Given any basis \(\mathcal{B}\) and any \(M\in\mathbb{N}\) then for any sequence of disjoint basis elements \(\langle B_{j}\,|\,j\in[M]\rangle\) there exists a sequence of corresponding actions \(\langle b_{j}\in[K]\,|\,j\in[M]\rangle\) such that an adversary can force:_

\[\sum_{t\in[T]}\sum_{j\in[M]}\llbracket x_{t}\in\mathcal{B}_{j}\rrbracket r_{t, b_{j}}-\sum_{t\in[T]}\mathbb{E}[r_{t,a_{t}}]\in\Omega(\sqrt{MKT})\]

Proof.: In this scenario, at each time step, either a single expert (i.e., the basis element containing the current context \(x_{t}\)) is active, making predictions based on its label, or no expert is active, prompting the learner to abstain and thus incur zero reward or cost.

Therefore we define \(T^{\prime}=\{t\in[T]\,|\,\sum_{j\in[M]}\llbracket x_{t}\in\mathcal{B}_{j} \rrbracket=1\}\) as the set of timesteps in which the learner is going to play. Since the concept of abstention is that our algorithm is not going to pay anything for the timesteps in which we abstain, we can see that:

\[\sum_{t\in[T]}\sum_{j\in[M]}\llbracket x_{t}\in\mathcal{B}_{j}\rrbracket r_{t, b_{j}}-\sum_{t\in[T]}\mathbb{E}[r_{t,a_{t}}]=\sum_{t\in T^{\prime}}r_{t,b_{j}}- \sum_{t\in T^{\prime}}\mathbb{E}[r_{t,a_{t}}]\,,\]

For any ball \(j\in[M]\), we define \(T_{j}=\{t\in[T^{\prime}]\,|\,\llbracket x_{t}\in\mathcal{B}_{j}\rrbracket\}\). Following the ideas of Seldin and Lugosi (2016), for any of the sets \(T_{j}\) we can create a multi-armed bandit instance as the one described in the lower bound by Auer et al. (2002). Note that in the lower bound construction, the abstention arm would be a forehand known suboptimal arm, which results in a lower bound of the order \(c\sqrt{(K-1)T}\), for the constant \(c=\frac{\sqrt{2}-1}{\sqrt{32\ln(4/3)}}>0\). Since the presented context \(x_{t}\) is chosen adversarially at each time step, we can ensure that each basis element is activated for \(|T^{\prime}|/M\) time steps, obtaining:

\[\sum_{j\in[M]}\left(\sum_{s\in T^{\prime}_{j}}r_{s,b_{j}}-\sum_{ s\in T^{\prime}_{j}}\mathbb{E}[r_{s,a_{s}}]\right) \geq\sum_{j\in[M]}c\sqrt{(K-1)|T^{\prime}_{j}|}\] \[=\sum_{j\in[M]}c\sqrt{(K-1)|T^{\prime}|/M}\] \[=c\sqrt{M(K-1)|T^{\prime}|}\]

As we can choose \(|T^{\prime}|\) to be any fraction of T, we end up with the desired lower bound of the order \(\Omega(\sqrt{MKT})\), which matches, up to logarithmic factors, the cumulative reward bound presented in Theorem 5.3. 

## Appendix D Overlapping balls extension

In this section, we present the theorem that allows us to present the results of overlapping balls as expressed in Section 5.2. Note that Theorem 5.3 is the special case of Theorem D.1 when the balls are disjoint and \(u_{j}=1\) for all \(j\in[M]\).

**Theorem D.1**.: _Let \(M\in\mathbb{N}\) and \(\{(B_{j},b_{j},u_{j})\,|\,j\in[M]\}\) be any sequence such that \(B_{j}\) is a ball, \(b_{j}\in[K]\) is an action, and \(u_{j}\in[0,1]\) is such that for all \(x\in\mathcal{X}\) we have:_

\[\sum_{j\in[M]}\llbracket x\in B_{j}\rrbracket u_{j}\leq 1\,.\]

_For all \(t\in[T]\) define:_

\[r_{t}^{*}:=\sum_{j\in[M]}\llbracket x_{t}\in B_{j}\rrbracket u_{j}r_{t,b_{j}}\,,\]_which represents the reward of the policy induced by \(\{(B_{j},b_{j},u_{j})\,|\,j\in[M]\}\) on trial \(t\). The regret of CBA, with the set of experts given in Section 5.2 and with correctly tuned parameters, is then bounded by:_

\[\sum_{t\in[T]}r_{t}^{*}-\sum_{t\in[T]}\mathbb{E}[r_{t,a_{t}}]\in\mathcal{O} \left(\sqrt{\ln(KN)KT\sum_{j\in[M]}u_{j}}\right)\,.\]

_Its per-trial time complexity is:_

\[\mathcal{O}(KN\ln(N))\,.\]

Proof.: Direct from Theorem 3.1 using the experts (with efficient implementation) given in Section 5.2 

## Appendix E The details of the graph bases

This section expands the definition and explanations for the bases we used in the Experiment. Remember that we refer to any set of experts that correspond to set-action pairs of the form \((B,k)\in 2^{X}\times[K]\) as a _basis elements_, and a set of basis elements as _basis_.

### \(p\)-seminorm balls on graphs

As we see in Sec. 5.2, the CBA seems to work only for vector data. However, in the following sections, we explore how our CBA algorithm can be applied to graph data by creating a ball structure over the graph.

We first introduce the notations of a graph. A graph is a pair of _nodes_\(V:=[N]\) and _edges_\(E\). An edge connects two nodes, and we assume that our graph is _undirected_ and _weighted_. For each edge \(\{i,j\}\in E\), we denote its weight by \(c_{ij}\). For convenience, for each pair of nodes \(i,j\) with \(\{i,j\}\notin E\), we define \(c_{ij}=0\).

To form a ball over a graph, a family of metrics we are particularly interested in is given by \(p\)-norms on a given graph \(G\). Let

\[d_{p}(i,j):=\left(\min_{\begin{subarray}{c}\bm{u}\in\mathbb{R}^{N}\\ u_{i}-u_{j}=1\end{subarray}}\sum_{s,t\in V}c_{st}|u_{s}-u_{t}|^{p}\right)^{-1 /p}\,.\] (16)

which is a well-defined metric for \(p\in[1,\infty)\) if the graph is connected and may be defined for \(p=\infty\) by taking the appropriate limits. When \(p=2\) this is the square root of the _effective resistance_ circuit between nodes \(i\) and \(j\) which comes from interpreting the graph as an electric circuit where the edges are unit resistors and the denominator of Equation (16) is the power required to maintain a unit voltage difference between \(u\) and \(v\)[Doyle and Snell, 1984]. More generally, \(d_{p}(i,j)^{p}\) is known as \(p\)-(effective) resistance [Herbster and Lever, 2009, Alamgir and von Luxburg, 2011, Saito and Herbster, 2023]. When \(p\in\{1,2,\infty\}\) there are natural interpretation of the \(p\)-resistance. In the case of \(p=1\), we have that the effective is equal to one over the number of edge-disjoint paths between \(i\) and \(j\) which is equivalently one over the minimal cut that separates \(i\) from \(j\). When \(p=2\) it is the effective resistance as discussed above. And finally when \(p=\infty\) we have that \(d_{\infty}\) is the geodesic distance (shortest path) between \(i\) and \(j\). Note that, interestingly, there are at most \(2N\) distinct balls for \(d_{1}\); as opposed to the general bound \(O(N^{2})\) on the number of metric balls. This follows since \(d_{1}\) is an _ultrametric_. A nice feature of metric balls is that they are ordinal, i.e., we can take an increasing function of the distance and the distinct are unchanged. The time complexity for each ball is as follows. For \(d_{1}\) ball, we compute every pair of distance in \(\mathcal{O}(N^{3})\) using the Gomory-Hu tree [Gomory and Hu, 1961]. For \(d_{2}\) ball, it is actually enough to compute the pseudoinverse of graph Laplacian once, which costs \(\mathcal{O}(N^{3})\)[Doyle and Snell, 1984]. For \(d_{\infty}\) ball, we can compute every pair of distance in \(\mathcal{O}(N^{3})\) by Floyd-Warshall algorithm [Floyd, 1962].

### Community detection bases

In this section, we consider only bases formed via a set of subsets (a.k.a clusters) \(C\subseteq 2^{[N]}\). Each of these subsets induces \(K\) basis elements: one for each action \(a\in[K]\). Specifically, the basis element \(\beta:[N]\to[K_{\square}]\) corresponding to the pair \((C,a)\) is such that \(\beta(x)\) is equal to \(a\) whenever \(x\in C\) and equal to \(\square\) otherwise. Hence, in this section, we equate a basis with a set of subsets of \([N]\).

We can compute a basis for a given graph \(G=(V,E)\) using community detection algorithms. Community detection is one of the most well-studied operations for graphs, where the goal is to find a partition \(\{C_{1},\ldots,C_{q}\}\) of \(V\) (i.e., \(\bigcup_{i=1}^{q}C_{i}=V\) and \(C_{i}\cap C_{j}=\emptyset\) for \(i\neq j\)) so that each \(C_{i}\) is densely connected internally but sparsely connected to the rest of the graph [Fortunato, 2010]. There are many community detection algorithms, all of which can be used here, but the most popular algorithm is the Louvain method [Blondel et al., 2008]. We briefly describe how this algorithm works. The algorithm starts with an initial partition \(\{\{v\}\mid v\in V\}\) and aggregates the clusters iteratively: For each \(v\in V\), compute the gain when moving \(v\) from its current cluster to its neighbors' clusters and indeed move it to a cluster with the maximum gain (if the gain is positive). Note that the gain is evaluated using _modularity_, i.e., the most popular quality function for community detection [Newman and Girvan, 2004]. The algorithm repeats this process until no movement is possible. Then the algorithm aggregates each cluster to a single super node (with appropriate addition of self-loops and change of edge weights) and repeats the above process on the coarse graph as long as the coarse graph is updated. Finally, the algorithm outputs the partition of \(V\) in which each cluster corresponds to each super node in the latest coarse graph. Note that it is widely recognized that the Louvain method works in \(\mathcal{O}(N\log N)\) in practice [Traag, 2015].

To obtain a finer-grained basis, we apply the so-called greedy peeling algorithm for each \(C_{i}\) in the output of the Louvain method. For \(C_{i}\subseteq V\) and \(v\in\hat{C}_{i}\), we denote by \(d_{C_{i}}(v)\) the degree of \(v\) in the induced subgraph \(G[C_{i}]\). For \(G[C_{i}]\), the greedy peeling iteratively removes a node with the smallest degree in the currently remaining graph and obtains a sequence of node subsets from \(C_{i}\) to a singleton. Specifically, it works as follows: Set \(j\leftarrow|C_{i}|\) and \(C_{i}^{(j)}\gets C_{i}\). For each \(j=|C_{i}|,\ldots,2\), compute \(v_{\text{min}}\in\arg\min\{d_{C_{i}^{(j)}}(v)\mid v\in C_{i}^{(j)}\}\) and \(C_{i}^{(j-1)}\gets C_{i}^{(j)}\setminus\{v_{\text{min}}\}\). Using a sophisticated data structure, this algorithm runs in linear time [Lanciano et al., 2024].

In summary, our community detection basis is the collection of node subsets \(\{C_{i}^{(j)}\mid i=1,\ldots,q,\,j=1,\ldots,|C_{i}|\}\) together with \(\{\{v\}\mid v\in V\}\) for completeness.

### Graph convexity bases

An alternative to metric balls and communities are, for example, (geodesically) convex sets in a graph. They correspond to the inductive bias that if two nodes prefer the same action, then also the nodes on a shortest path between the two tend to prefer the same action. Geodesically convex sets are well-studied [van De Vel, 1993, Pelayo, 2013] and have been recently used in various learning settings on graphs [Bressan et al., 2021, Thiessen and Gartner, 2021]. Similarly to convex sets in the Euclidean space, a set \(C\) of nodes is _convex_ if the nodes of any shortest path with endpoints in \(C\) are in \(C\), as well. More formally, the (geodesic) _interval_\(I(u,v)=\{x\in V:x\text{ is on a shortest path between }u\text{ and }v\}\) of two nodes \(u\) and \(v\) contains all the nodes on a shortest path between them. For a set of node \(A\) we define \(I(A)=\cup_{a,b\in A}I(a,b)\) as a shorthand notation for the union of all pairwise intervals in \(A\). A set \(A\) is (geodesically) convex iff \(I(A)=A\) and the _convex hull_\(\operatorname{conv}(A)\) of a set \(A\) is the (unique) smallest convex set containing \(A\). Note that for \(u,v\in V\), \(I(u,v)\) and \(\operatorname{conv}(\{u,v\})\) are typically different sets. Indeed, \(I(u,v)\) is in general non-convex, as nodes on a shortest path between two nodes in \(I(u,v)\) (except for \(u,v\)) are not necessarily contained in \(I(u,v)\). As the total number of convex sets can be exponential in \(N\), e.g., all subsets of a complete subgraph are convex, we consider the basis consisting of all intervals: \(I(u,v)\) for \(u,v\in[N]\). This involves \(\mathcal{O}(N^{2})\) basis elements, each of size \(\mathcal{O}(N)\). With a simple modification of the Floyd Warshall [Floyd, 1962] algorithm, computing the interval basis takes \(\mathcal{O}(N^{3})\) time complexity.

## Appendix F Additional experimental results

We thoroughly explored various configurations for the three graphs described in our experimental setup in Section 6. We run our experiments with an Intel Xeon Gold 6312U processor and 256 GB of RAM ECC 3200 MHz. Figure 3 displays different settings for the number of nodes in each clique and noise levels.

As we compare the computational complexity of each basis in Section E and the main results, the most intense computational load in the experiments will arise from the calculation of the basis, which can be seen as an initialization step in our algorithm. The proposed methods have varying computational complexities, and an arbitrarily complex function can be employed to compute the basis. Remark that, in the usual complexity comparison among online learning algorithms using experts, we compare the complexity _given_ the experts. Practically, we use pre-computed bases or even human experts. Also note that due to the expensive complexity of the \(p\)-balls and the convex sets seen in Section E, we only conduct the LVC for LastFM Asia.

In Figure 4, we present multiple settings for generating the Gaussian graph. Here the title of each plot is "Foreground \(x\),\(y\); Background \(x^{\prime}\),\(y^{\prime}\); \(k\)-NN," which is explained as follows: \(x\) represents the number of nodes in each foreground class, \(x^{\prime}\) represents the number of nodes in the background class, \(y\) represents the standard deviation of the Gaussians generating the foreground class, \(y^{\prime}\) represents the standard deviation of the Gaussian generating the background class, and \(k\) represents the number of nearest neighbors used to generate the graph.

In Figure 5, we present the various labels chosen as noise for the Cora graph. In Figure 2(c), we presented the averages of all these different configurations. Here, we can see that the main behavior of the various bases is roughly maintained independently of the different labels chosen to be masked as background class.

In Figure 6, we present the various labels chosen as noise for the LastFM Asia graph. This graph comprises nodes representing LastFM users in Asian countries and edges representing mutual follower connections. Vertex features are extracted based on the artists liked by the users. During this initial analysis, we arbitrarily chose three out of eighteen possible labels to serve as the background class. In Figure 2(d), we presented the averages of all these different configurations. Varying the chosen background classes also produces different results, this is indeed due to the inherent lack of noise in the dataset. It is nice to see that regardless of the noise labels chosen, the behavior of our algorithm is always good, showing, as expected, that based on the amount of noise, we can just improve.

Figure 3: Stochastic Block Model results, dotted lines represent different baselines, while solid lines are used to represent various results.

Figure 4: Gaussian graph results, dotted lines represent different baselines, while solid lines are used to represent various results.

Figure 5: Cora results, dotted lines represent different baselines, while solid lines are used to represent various results

Figure 6: LastFM Asia results, dotted lines represent different baselines, while solid lines are used to represent various results

## Impact Statement

Given the theoretical nature of our work, we cannot foresee the shape of positive or negative societal impacts which this work may have in future.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: All the claims are supported in the main body. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: The limitations and future work are discussed in the introduction and in the experimental results analysis. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.

3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes] Justification: We explicitly write the assumptions of all the theoretical claims. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: We provided the experimental codes. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.

5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: We cited the datasets which we use in the experiments. Also, these datasets are publicly available and widely used in the community. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: We provided the details in the main body as well as in the Appendix. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: We provided error bars and did statistical tests in the main body. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).

* The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)
* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: We explicitly write the computing resources we used in the experiments in the Appendix. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: We have read and followed NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: We provided the dedicated section for this. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.

* Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.
* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: The paper poses no such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: We used the datasets that are widely used in the community. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.

* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: The paper does not release new assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.