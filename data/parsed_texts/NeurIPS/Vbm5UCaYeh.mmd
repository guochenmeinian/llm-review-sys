# Efficient Algorithms for Generalized Linear Bandits with Heavy-tailed Rewards

 Bo Xue\({}^{1,2}\), Yimu Wang\({}^{3}\), Yuanyu Wan\({}^{4}\), Jinfeng Yi\({}^{5}\), Lijun Zhang\({}^{6,7,}\)

\({}^{1}\)Department of Computer Science, City University of Hong Kong, Hong Kong, China

\({}^{2}\)The City University of Hong Kong Shenzhen Research Institute, Shenzhen, China

\({}^{3}\)Cheriton School of Computer Science, University of Waterloo, Waterloo, Canada

\({}^{4}\)School of Software Technology, Zhejiang University, Ningbo, China

\({}^{5}\)JD AI Research, Beijing, China

\({}^{6}\)National Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China

\({}^{7}\)Peng Cheng Laboratory, Shenzhen, China

boxue4-c@my.cityu.edu.hk, yimu.wang@uwaterloo.ca, wanyy@zju.edu.cn

yijinfeng@jd.com, zhanglj@lamda.nju.edu.cn

Lijun Zhang is the corresponding author.

###### Abstract

This paper investigates the problem of generalized linear bandits with heavy-tailed rewards, whose \((1+\epsilon)\)-th moment is bounded for some \(\epsilon\in(0,1]\). Although there exist methods for generalized linear bandits, most of them focus on bounded or sub-Gaussian rewards and are not well-suited for many real-world scenarios, such as financial markets and web-advertising. To address this issue, we propose two novel algorithms based on truncation and mean of medians. These algorithms achieve an almost optimal regret bound of \(\widetilde{O}(dT^{\frac{1}{1+\epsilon}})\), where \(d\) is the dimension of contextual information and \(T\) is the time horizon. Our truncation-based algorithm supports online learning, distinguishing it from existing truncation-based approaches. Additionally, our mean-of-medians-based algorithm requires only \(O(\log T)\) rewards and one estimator per epoch, making it more practical. Moreover, our algorithms improve the regret bounds by a logarithmic factor compared to existing algorithms when \(\epsilon=1\). Numerical experimental results confirm the merits of our algorithms.

## 1 Introduction

The multi-armed bandits (MAB) is a powerful framework to model the sequential decision-making process with limited information (Robbins, 1952), which has been found applications in various areas such as medical trails (Villar _et al._, 2015) and advertisement placement (Bubeck and Cesa-Bianchi, 2012). In the classical \(K\)-armed bandit problem, an agent selects one of the \(K\) arms and receives a reward drawn independently and identically distributed from an unknown distribution associated with the chosen arm. The goal of the agent is to maximize the cumulative rewards through the trade-off between exploration and exploitation, i.e., pulling the arms that may potentially give better outcomes while also exploiting the knowledge gained from previous trials to select the optimal arm.

One fundamental limitation of MAB is that it ignores contextual information in some scenarios such as advertisement placement (Lattimore and Szepesvari, 2020), where features of users and products can provide valuable guidance for decision making. In these cases, decisions should not only rely on rewards from previous epochs but also the contextual information from both past and current epochs. Stochastic Linear Bandits (SLB) has emerged as the most popular model in the last decade to address this limitation, assuming a linear relationship between the contextual vector and the expected reward[Auer, 2002; Dani _et al._, 2008; Abbasi-yadkori _et al._, 2011; Hu _et al._, 2021; Alieva _et al._, 2021; Yang _et al._, 2022; He _et al._, 2022; Bengs _et al._, 2022]. However, in many real-world applications, such as social network [Filippi _et al._, 2010], the assumption of Poisson or logistic relation between the expected reward and contextual vector has demonstrated better performance, which motivates the study of generalized linear bandits (GLB). In each round, the agent first observes a decision set \(\mathcal{D}_{t}\subset\mathbb{R}^{d}\) composed of contextual vectors. Then, the agent selects an arm \(\bm{x}_{t}\in\mathcal{D}_{t}\) and receives a reward \(y_{t}\) satisfying the expectation,

\[\mathrm{E}[y_{t}|\bm{x}_{t}]=\mu(\bm{x}_{t}^{\top}\bm{\theta}_{*})\] (1)

where \(\bm{\theta}_{*}\) is the inherent vector and \(\mu(\cdot)\) is the link function, such as the identity function or the logistic function. The performance of the agent is measured by the regret such that

\[R(T)=\sum_{t=1}^{T}\left(\mu(\tilde{\bm{x}}_{t}^{\top}\bm{\theta}_{*})-\mu( \bm{x}_{t}^{\top}\bm{\theta}_{*})\right)\]

where \(\tilde{\bm{x}}_{t}=\operatorname*{argmax}_{\bm{x}\in\mathcal{D}_{t}}\mu(\bm{ x}^{\top}\bm{\theta}_{*})\) represents the optimal arm in the set \(\mathcal{D}_{t}\).

Extensive research has been conducted on the GLB, with most assuming sub-Gaussian rewards [Filippi _et al._, 2010; Li _et al._, 2012, 2017; Jun _et al._, 2017; Lu _et al._, 2019; Zhou _et al._, 2019; Han _et al._, 2021; Li and Wang, 2022]. However, it has been observed that in certain sequential decision-making scenarios, such as financial markets [Cont and Bouchaud, 2000], the occurrence of extreme returns is much more frequent than the standard normal distribution. This phenomenon is known as heavy-tailed behavior [Foss _et al._, 2013], where the existing algorithms are not suitable. To address this limitation, in this study, we focus on the GLB with heavy-tailed rewards [Bubeck _et al._, 2013], i.e., the reward obtained at \(t\)-th round satifies the condition

\[\mathrm{E}[|y_{t}|^{1+\epsilon}]\leq u\]

for some \(\epsilon\in(0,1]\) and \(u>0\). Different from the traditional sub-Gaussian setting, heavy-tailed rewards do not decay exponentially and the estimation of expected rewards is significantly impacted.

According to the distinguishing characteristic of heavy-tailed distributions where extreme values occur with high probability, previous studies have developed three main strategies to address the issue in parameter estimation [Audibert and Catoni, 2011; Hsu and Sabato, 2014; Zhang and Zhou, 2018; Ray Chowdhury and Gopalan, 2019; Lugosi and Mendelson, 2021; Zhong _et al._, 2021; Huang _et al._, 2022; Diakonikolas _et al._, 2022; Gorbunov _et al._, 2022; Kamath _et al._, 2022; Li and Liu, 2022; Gou _et al._, 2023]. One such strategy is truonuAudibert and Catoni [2011], which mitigates the impact of extreme values by truncating them. A recently proposed strategy is the mean of medians approach [Zhong _et al._, 2021], which involves partitioning the samples drawn from the heavy-tailed distribution into multiple groups, taking the median within each group, and computing the mean of these medians. It intuitively reduces the impact of extreme samples, as extreme samples are distributed to both sides, thus the median value is more robust. The third strategy is median of means [Hsu and Sabato, 2014], which adjusts the order of calculating mean and taking the median in the mean of medians strategy.

Most existing algorithms for heavy-tailed bandit problems are derived from aforementioned three strategies, with a primary focus on the SLB model [Medina and Yang, 2016; Shao _et al._, 2018; Xue _et al._, 2020]. To provide a comprehensive overview and facilitate comparison, we present a summary of our results and previous findings on linear bandits with heavy-tailed rewards in Table 1. For the sake of clarity, the presented regret bounds in Table 1 are under the assumption that the rewards have finite variance. The computational complexity only takes into account multiplication and division operations. Although Shao _et al._ [2018] and Xue _et al._ [2020] achieve nearly optimal regret for

\begin{table}
\begin{tabular}{l l l l l} \hline  & Regret & CC\_Truncation & CC\_MoM & Arms & Model \\ \hline Medina and Yang [2016] & \(O(dT^{\frac{3}{4}})\) & \(O(d^{2}T)\) & \(O(d^{2}T/\log T)\) & infinite & SLB \\ Shao _et al._ [2018] & \(\widetilde{O}(d\sqrt{T})\) & \(O(d^{3}T+d^{2}T^{2})\) & \(O(d^{2}T\cdot\log T)\) & infinite & SLB \\ Xue _et al._ [2020] & \(\widetilde{O}(\sqrt{dT})\) & \(O(d^{2}T^{2})\) & \(O(d^{2}T)\) & finite & SLB \\ This work & \(\widetilde{O}(d\sqrt{T})\) & \(O(d^{2}T)\) & \(O(d^{2}T/\log T)\) & infinite & GLB \\ \hline \end{tabular}
\end{table}
Table 1: Summary of the existing work for the linear bandits with heavy-tailed rewards. CC is the abbreviation of computational complexity.

infinite-armed and finite-armed SLB, respectively, their algorithms are computationally expensive. The latest work utilizing the mean of medians approach demonstrates efficiency but is limited to symmetric rewards (Zhong et al., 2021). Therefore, designing efficient heavy-tailed algorithms for GLB with symmetric and asymmetric rewards is an interesting and non-trivial challenge.

Through the delicate employment of heavy-tailed strategies, our contributions to the generalized linear bandit problem with heavy-tailed rewards can be summerized as follows:

* We develop two novel algorithms, CRTM and CRMM, which utilize the truncation strategy and mean of medians strategy, respectively. Both algorithms exhibit a sublinear regret bound of \(\widetilde{O}(dT^{\frac{1}{1+\epsilon}})\), which is amid optimal as the lower bound is \(\Omega(dT^{\frac{1}{1+\epsilon}})\)(Shao et al., 2018).
* CRTM reduces the computational complexity from \(O(T^{2})\) to \(O(T)\) when compared to existing truncation-based algorithms (Shao et al., 2018; Xue et al., 2020), while CRMM reduces the number of estimator required per round from \(O(\log T)\) to only one, as compared to existing median-of-means-based algorithms (Shao et al., 2018; Xue et al., 2020).
* When \(\epsilon=1\), the regret bounds of CRTM and CRMM improves a logarithmic factor of order \(\frac{1}{2\alpha}\) and \(\frac{1}{2\alpha}-\frac{1}{2}\) for some \(\alpha\in(0,1)\), respectively, over the recently proposed method of Zhong et al. (2021)2. Notably, CRTM extends the method of Zhong et al. (2021) from symmetric rewards to general case, making CRTM more practical. Footnote 2: For \(\epsilon_{1}>\epsilon_{2}>0\), if the \((1+\epsilon_{1})\)-th moment of rewards exists, then the \((1+\epsilon_{2})\)-th moment of rewards is bounded (Xue et al., 2020). Thus, CRTM and CRMM achieve this regret improvement when \(\epsilon\geq 1\).
* We conduct numerical experiments to demonstrate that our proposed algorithms not only achieve a lower regret bound but also require fewer computational resources when applied to heavy-tailed bandit problems.

## 2 Related Work

In this section, we briefly review the related work on linear bandits. Through out the paper, the \(p\)-norm of a vector \(\bm{x}\in\mathbb{R}^{d}\) is \(\|\bm{x}\|_{p}=(|x_{1}|^{p}+\ldots+|x_{d}|^{p})^{1/p}\). Given a positive definite matrix \(\mathbf{A}\in\mathbb{R}^{d\times d}\), the weighted Euclidean norm of the vector \(\bm{x}\) is \(\|\bm{x}\|_{\mathbf{A}}=\sqrt{\bm{x}^{\top}\mathbf{A}\bm{x}}\).

### Generalized Linear Bandits

Filippi et al. (2010) was the first to address the generalized linear bandit problem and proposed an algorithm with a regret bound of \(\widetilde{O}(d\sqrt{T})\). However, their algorithm is not efficient as it requires storing all the action-feedback pairs encountered so far and performing maximum likelihood estimation at each step. A notable improvement was presented by Zhang et al. (2016) with the introduction of an efficient algorithm called OL\({}^{2}\)M, whose space and time complexity at each epoch does not grow over time and achieves a \(\widetilde{O}(d\sqrt{T})\) regret. However, their algorithm is limited to the logistic link function. Later, Jun et al. (2017) extended OL\({}^{2}\)M to generic link functions while still maintaining the \(\widetilde{O}(d\sqrt{T})\) regret bound. Ding et al. (2021) proposed another efficient generalized linear bandit algorithm following the line of Thompson sampling scheme.

The main challenge in the bandit problem is the trade-off between exploration and exploitation. To address this issue, the most commonly used approach is the confidence-region-based method, specifically for the linear bandit model with infinite arms (Dani et al., 2008; Abbasi-yadkori et al., 2011; Zhang et al., 2016). Here we take the algorithm OL\({}^{2}\)M to give a brife introduction to this approach (Zhang et al., 2016). With the arrival of a new trial \((\bm{x}_{t},y_{t})\) in the \(t\)-th epoch, OL\({}^{2}\)M first constructs a surrogate loss \(\ell_{t}(\bm{\theta})\) satisfying \(\nabla\ell_{t}(\bm{\theta})=(-y_{t}+\mu(\bm{x}_{t}^{\top}\bm{\theta}))\bm{x}_ {t}\). Then, OL\({}^{2}\)M employs a variant of the online Newton step (ONS) to update the estimated parameters, i.e.,

\[\hat{\bm{\theta}}_{t+1}^{N}=\operatorname*{argmin}_{\bm{\theta}\in\mathbb{R}^ {d}}\frac{\|\bm{\theta}-\hat{\bm{\theta}}_{t}^{N}\|_{\mathbf{V}_{t+1}}^{2}}{2 }+\langle\bm{\theta}-\hat{\bm{\theta}}_{t}^{N},\nabla\ell_{t}(\hat{\bm{\theta }}_{t}^{N})\rangle.\] (2)

Here, \(\mathbf{V}_{t+1}=\mathbf{V}_{t}+\frac{\kappa}{2}\bm{x}_{t}\bm{x}_{t}^{\top}\) for \(\kappa>0\), and the initialized matrix \(\mathbf{V}_{1}=\lambda\mathbf{I}_{d}\) for \(\lambda>0\). Subsequently, OL\({}^{2}\)M constructs a confidence region \(\mathcal{C}_{t+1}\) centered at the estimated parameter \(\hat{\bm{\theta}}_{t+1}^{N}\), such that

\[\mathcal{C}_{t+1}=\left\{\bm{\theta}\in\mathbb{R}^{d}\|\|\bm{\theta}-\hat{\bm{ \theta}}_{t}^{N}\|_{\mathbf{V}_{t+1}}^{2}\leq\gamma_{t+1}\right\}\] (3)where \(\gamma_{t+1}=O(d\log t)\) indicating the uncertainty of the estimation and the unknown parameter \(\bm{\theta}_{*}\) lies in this region with high probability. Finally, OL\({}^{2}\)M selects the most promising arm \(\bm{x}_{t+1}\) according to the principle of "optimization in the face of uncertainty", i.e.,

\[(\bm{x}_{t+1},\tilde{\bm{\theta}}_{t+1})=\operatorname*{argmax}_{\bm{x}\in \mathcal{D}_{t+1},\bm{\theta}\in\mathcal{C}_{t+1}}\langle\bm{x},\bm{\theta}\rangle.\] (4)

### Bandit Learning with Heavy-tailed Rewards

Most of the existing work developed heavy-tailed bandit algorithms using truncation and median of means strategies (Bubeck _et al._, 2013; Medina and Yang, 2016; Shao _et al._, 2018; Xue _et al._, 2020; Huang _et al._, 2022). Bubeck _et al._ (2013) first conducted extensive research on multi-armed bandits with heavy-tailed rewards and achieved a logarithmic regret bound. Medina and Yang (2016) extended it to the SLB model and introduced two algorithms that achieve regret bounds of \(\widetilde{O}(dT^{\frac{2+\epsilon}{2(1+\epsilon)}})\) and \(\widetilde{O}(d^{\frac{1}{2}}T^{\frac{1+2\epsilon}{1+3\epsilon}}+dT^{\frac{1+ \epsilon}{1+3\epsilon}})\), respectively. Shao _et al._ (2018) improved upon the results of Medina and Yang (2016) by a more delicate application of heavy-tailed strategies, achieving a regret bound of \(\widetilde{O}(dT^{\frac{1}{1+\epsilon}})\). Xue _et al._ (2020) investigated the case with finite arms and provided two algorithms that attained regret bounds of \(\widetilde{O}(d^{\frac{1}{2}}T^{\frac{1}{1+\epsilon}})\). Recently, Zhong _et al._ (2021) proposed the mean of medians estimator for the super heavy-tailed bandit problem, but the rewards are limited to symmetric distributions. Applying this estimator to the GLB algorithm of Jun _et al._ (2017) yields a heavy-tailed GLB algorithm that achieves the regret bound of \(O(d(\log T)^{\frac{1}{2\alpha}+\frac{1}{2}}T^{\frac{1}{2}})\) for some \(\alpha\in(0,1)\). To illustrate the basic idea of adopting different heavy-tailed strategies in the bandit model, we briefly describe three representative algorithms.

For the algorithm exploiting truncation strategy, we take the algorithm TOFU as an instance (Shao _et al._, 2018). With the trials up to round \(t\), TOFU truncates the rewards \(d\) times as follows,

\[\overline{Y}_{t}^{i}=\left[y_{1}\mathbb{I}_{|u_{1}^{i}(t)y_{1}|\leq h_{t}}, \ldots,y_{t}\mathbb{I}_{|u_{t}^{i}(t)y_{t}|\leq h_{t}}\right],i=1,2,\ldots,d\] (5)

where \(h_{t}=O(t^{\frac{1-\epsilon}{2(1+\epsilon)}})\) is the truncated criterion, and \(u_{\tau}^{i}(t)\) denotes the element in the \(i\)-th row and \(\tau\)-th column of matrix \(\widetilde{\mathbf{V}}_{t+1}^{-1/2}\mathbf{A}_{t}\), \(\mathbf{A}_{t}=[\bm{x}_{1},\bm{x}_{2},\ldots,\bm{x}_{t}]\in\mathbb{R}^{d\times t}\) is the matrix composed of selected arms and \(\widetilde{\mathbf{V}}_{t+1}=\mathbf{A}_{t}\mathbf{A}_{t}^{\top}+\mathbf{I}_{d}\). Using these truncated rewards, TOFU conducts an estimator as \(\tilde{\bm{\theta}}_{t+1}=\widetilde{\mathbf{V}}_{t+1}^{-1/2}[\bm{u}_{1}^{1} \cdot\overline{Y}_{t}^{1},\ldots,\bm{u}_{t}^{d}\cdot\overline{Y}_{t}^{d}]\) with \(\bm{u}_{t}^{i}\cdot\overline{Y}_{t}^{i}=\sum_{\tau=1}^{t}u_{\tau}^{i}(t)y_{\tau }\mathbb{I}_{|u_{\tau}^{i}y_{\tau}|\leq h_{t}}\). TOFU then constructs a confidence region centered on this estimator and selects the promising arm, similar to (3) and (4). Notice that the scalarized parameters \(\{u_{\tau}^{i}(t)\}_{\tau=1}^{t}\) are updated at each epoch, requiring TOFU to store the learning history and truncate all rewards at each epoch. Thus, TOFU is not an online method.

For the algorithm exploiting median of means strategy, it's common to play the chosen arm \(r\) times and get \(r\) sequences of rewards \(\{Y_{t}^{j}\}_{j=1}^{r}\), where \(Y_{t}^{j}=[y_{1}^{j},\ldots,y_{t}^{j}]\) is the \(j\)-th reward sequence up to epoch \(t\). MENU executes least square estimation for each reward sequence and get \(r\) estimators, i.e.,

\[\hat{\bm{\theta}}_{t+1}^{j}=\operatorname*{argmin}_{\bm{\theta}\in\mathbb{R}^{ d}}\lVert\mathbf{A}_{t}^{\top}\bm{\theta}-Y_{t}^{j}\rVert_{2}^{2}+\lVert\bm{ \theta}\rVert_{2}^{2},\;j=1,2,\ldots,r\] (6)

where \(r=O(\log T)\)(Shao _et al._, 2018). Then, the median of means strategy adopted by MENU is operated as follows,

\[m_{j}=\text{median of }\left\{\lVert\hat{\bm{\theta}}_{t+1}^{j}-\hat{\bm{ \theta}}_{t+1}^{s}\rVert_{\widetilde{\mathbf{V}}_{t+1}}:s=1,\ldots,r\right\}.\] (7)

Then, MENU takes the estimator \(\hat{\bm{\theta}}_{t+1}^{k}\) with \(k_{*}=\operatorname*{argmin}_{j\in\{1,2,\ldots,r\}}\{m_{j}\}\) as the center of confidence region. Finally, MENU selects the most promising arm similar to (4).

For the mean of medians method proposed by Zhong _et al._ (2021), at each epoch \(t\), the agent first plays the selected arm \(\bar{r}\) times, with a value of \(\bar{r}=O((\log T)^{1/\alpha})\) for some \(\alpha\in(0,1)\), and then receives rewards \(\{y_{t}^{j}\}_{j=1}^{\bar{r}}\) for these plays. Subsequently, the agent randomly divides the rewards into multiple groups, with each group contains \(\lceil\bar{r}^{\alpha}\rceil\) rewards. The agent then takes the median of each group and uses the mean of these medians to update the estimator. Notice that the expectation of the median has a bias to the expected reward other than the symmetric distribution. Thus, mean of medians strategy is limited to symmetric distribution. Another point worth mentioning is that \(\bar{r}\) is too large to try sufficient different arms. For example, the agent can only play \(\lceil T/\bar{r}\rceil=100\) different arms with \(T=10^{6}\) and \(\alpha=0.62\), which is obviously unreasonable3.

Footnote 3: \(\alpha=0.62\) is nearly optimal for \(\epsilon=1\) according to the experiments of Zhong _et al._ (2021).

## 3 Algorithms

In this section, we first introduce the generalized linear bandit model and then demonstrate two novel algorithms based on truncation and mean of medians, respectively.

### Learning Model

The formal description of the generalized linear bandit model is as follows. In each round \(t\), an agent plays an arm \(\bm{x}_{t}\in\mathcal{D}_{t}\) and obtains a stochastic reward \(y_{t}\), which is generated from a generalized linear model represented by the following equation,

\[\Pr(y_{t}|\bm{x}_{t})=\exp\left(\frac{y_{t}\bm{x}_{t}^{\top}\bm{ \theta}_{*}-m(\bm{x}_{t}^{\top}\bm{\theta}_{*})}{g(\tau)}+h(y_{t},\tau)\right)\] (8)

where \(\bm{\theta}_{*}\) is the inherent parameters, \(\tau>0\) is a known scale parameter, and \(g(\cdot)\) and \(h(\cdot,\cdot)\) are normalizers (P. McCullagh, 1989). The expectation of \(y_{t}\) is given by

\[\mathrm{E}[y_{t}|\bm{x}_{t}]=m^{\prime}(\bm{x}_{t}^{\top}\bm{ \theta}_{*}).\]

Thus, \(m^{\prime}(\cdot)\) is the link function in (1), such that \(\mu(\cdot)=m^{\prime}(\cdot)\). The reward model can be rewritten as

\[y_{t}=\mu(\bm{x}_{t}^{\top}\bm{\theta}_{*})+\eta_{t}\]

where \(\eta_{t}\) is a random noise satisfying the condition

\[\mathrm{E}[\eta_{t}|\mathcal{G}_{t-1}]=0.\] (9)

Here, \(\mathcal{G}_{t-1}\triangleq\{\bm{x}_{1},y_{1},\ldots,\bm{x}_{t-1},y_{t-1},\bm {x}_{t}\}\) is a \(\sigma\)-filtration and \(\mathcal{G}_{0}=\emptyset\). Following the existing work (Filippi _et al._, 2010; Jun _et al._, 2017; Li _et al._, 2017), we make standard assumptions as follows.

**Assumption 1**: _The coefficients \(\bm{\theta}_{*}\) and contextual vectors \(\bm{x}\) are bounded, such that \(\|\bm{\theta}_{*}\|_{2}\leq S\) and \(\|\bm{x}\|_{2}\leq 1\) for all \(\bm{x}\in\mathcal{D}_{t}\), where \(S\) is a known constant._

**Assumption 2**: _The link function \(\mu(\cdot)\) is \(L\)-Lipschitz on \([-S,S]\), and continuously differentiable on \((-S,S)\). Moreover, there exists some \(\kappa>0\) such that \(\mu^{\prime}(z)\geq\kappa\) and \(|\mu(z)|\leq U\) for any \(z\in(-S,S)\)._

### Truncation

Our first algorithm is called Confidence Region with Truncated Mean (CRTM). The complete procedure is provided in Algorithm 1. Here, we consider the heavy-tailed setting, i.e., there exists a constant \(u>0\), the rewards admit

\[\mathrm{E}\left[|y_{t}|^{1+\epsilon}|\mathcal{G}_{t-1}\right]\leq u.\] (10)

As we have mentioned earlier in Section 2.1, to design effective algorithms for GLB model, constructing a narrow confidence region for the underlying coefficients \(\bm{\theta}_{*}\) is necessary. However, heavy-tailed rewards that satisfy (10) produce extreme values with high probability, resulting in a confidence region with a large radius. Therefore, a straightforward approach to settle this problem is to truncate the extreme reward to reduce its impact.

In each round \(t\), CRTM first plays an arm \(\bm{x}_{t}\in\mathcal{D}_{t}\) and observes the corresponding reward \(y_{t}\). Then, CRTM truncates the reward \(y_{t}\) using a uniform criterion \(\Gamma=\widetilde{O}(T^{\frac{1-\epsilon}{2(1+\epsilon)}})\), such that

\[\tilde{y}_{t}=y_{t}\mathbbm{1}_{\|\bm{x}_{t}\|_{\bm{\mathcal{V}}_{t}^{-1}|y_{ t}|\leq\Gamma}}\]where \(\mathbf{V}_{t}=\mathbf{V}_{t-1}+\frac{\kappa}{2}\bm{x}_{t-1}\bm{x}_{t-1}^{\top}\) with \(\mathbf{V}_{1}=\lambda\mathbf{I}_{d}\). Here, \(\kappa\) is defined in Assumption 2 and \(\lambda=\max\{1,\kappa/2\}\). With the processed action-reward pair \((\bm{x}_{t},\tilde{y}_{t})\), CRTM computes the gradient of the loss function as

\[\nabla\tilde{\ell}_{t}(\bm{\theta})=(-\tilde{y}_{t}+\mu(\bm{x}_{t}^{\top}\bm{ \theta}))\bm{x}_{t},\] (11)

where \(\tilde{\ell}_{t}(\cdot)\) is the negative log-likelihood of the generalized linear model (8). After that, CRTM employs a variant of online Newton step (ONS) to update its estimator, given by

\[\hat{\bm{\theta}}_{t+1}=\operatorname*{argmin}_{\|\bm{\theta}\|_{2}\leq S} \frac{\|\bm{\theta}-\hat{\bm{\theta}}_{t}\|_{\mathbf{V}_{t+1}}^{2}}{2}+\langle \bm{\theta}-\hat{\bm{\theta}}_{t},\nabla\tilde{\ell}_{t}(\hat{\bm{\theta}}_{ t})\rangle.\]

Equipped with above estimation, CRTM constructs the confidence region \(\mathcal{C}_{t+1}\) where the inherent parameters \(\bm{\theta}_{*}\) lies in with high probability, such that

\[\mathcal{C}_{t+1}=\left\{\bm{\theta}\in\mathbb{R}^{d}\|\|\bm{\theta}-\hat{\bm {\theta}}_{t+1}\|_{\mathbf{V}_{t+1}}^{2}\leq\gamma\right\}\]

where \(\gamma=\widetilde{O}(T^{\frac{1-\kappa}{1+\kappa}})\) denotes the width of the confidence region, and details are shown in Theorem 1. Given the confidence region \(\mathcal{C}_{t+1}\), the most promising arm \(\bm{x}_{t+1}\) can be obtained through the following maximize operation,

\[(\bm{x}_{t+1},\tilde{\bm{\theta}}_{t+1})=\operatorname*{argmax}_{\bm{x}\in \mathcal{D}_{t+1},\bm{\theta}\in\mathcal{C}_{t+1}}\langle\bm{x},\bm{\theta}\rangle\]

since \(\mu(\cdot)\) is monotonically increasing according to Assumption 2.

Although there exists several heavy-tailed linear bandit algorithms based on the truncation strategy, such as TOFU (Shao _et al._, 2018) and BTC (Xue _et al._, 2020), CRTM differs from them in two aspects. Firstly, both TOFU and BTC have to store the historical rewards and truncate them at each epoch, resulting in a computational complexity of \(O(T^{2})\). In contrast, CRTM achieves online learning by processing only the reward of current round, whose computational complexity is \(O(T)\). Secondly, while TOFU and BTC are designed for SLB model and calculate the estimator via least-squares estimation, CRTM is designed for the GLB model and updates the estimator using the ONS method, which makes the analytical techniques fundamentally different. Theorem 1 provides a tight confidence region, and its proof relies on the induced method because ONS is an iteratively updated method. Due to the page limit, we provide the detailed proof in the Appendix A.2.

**Theorem 1**: _If the rewards satisfy (9) and (10), then with probability as least \(1-\delta\), the confidence region in CRTM is_

\[\|\bm{\theta}-\hat{\bm{\theta}}_{t+1}\|_{\mathbf{V}_{t+1}}^{2}\leq\gamma, \forall t\geq 0\]_where_

\[\gamma=224u^{\frac{2}{1+\epsilon}}\ln(4T/\delta)^{\frac{2\epsilon}{1+\epsilon}}T^ {\frac{1-\epsilon}{1+\epsilon}}\frac{4d}{\kappa}\ln\left(1+\frac{\kappa T}{2 \lambda d}\right)+2\lambda S^{2}+\frac{48U^{2}d}{\kappa}\ln\left(1+\frac{\kappa T }{2\lambda d}\right).\]

With above confidence region, the regret bound of CRTM is explicitly given as follows.

**Theorem 2**: _If the rewards satisfy (9) and (10), then with probability at least \(1-\delta\), the regret of CRTM satisfies_

\[R(T)\leq O\left(d(\log T)^{\frac{1+2\epsilon}{1+\epsilon}}T^{\frac{1}{1+ \epsilon}}\right).\]

**Remark:** The above theorem establishes a \(\widetilde{O}(dT^{\frac{1}{1+\epsilon}})\) regret bound with the assumption that the \((1+\epsilon)\)-th moment of the rewards is bounded for some \(\epsilon\in(0,1]\). Existing algorithms based on truncation is time-consuming because they need to store the learning history and truncate all historical rewards at each epoch (Shao _et al._, 2018; Xue _et al._, 2020). Unlike the recently proposed mean of medians method which is limited in symmetric rewards (Zhong _et al._, 2021), CRTM expands it to asymmetric and achieves an improved regret bound by a factor of \(O((\log T)^{\frac{1}{2\lambda_{0}}})\) for some \(\alpha\in(0,1)\) if \(\epsilon=1\). Furthermore, CRTM is almost optimal as the lower bound is \(\Omega(dT^{\frac{1}{1+\epsilon}})\)(Shao _et al._, 2018).

### Mean of Medians

In this section, we present our second algorithm, referred to as Confidence Region with Mean of Medians (CRMM), which shares a similar framework with CRTM but uses a different mean of medians estimator. The complete procedure is outlined in Algorithm 2. CRMM requires that for some \(\epsilon\in(0,1]\), the \(1+\epsilon\) central moment of the rewards is bounded, and the distribution of rewards is symmetric. Precisely, for some \(\epsilon\in(0,1]\), there exists a constant \(v>0\) such that the rewards satisfy

\[\mathrm{E}\left[|\eta_{t}|^{1+\epsilon}|\mathcal{G}_{t-1}\right]\leq v\text{ and }p(\eta_{t})=p(-\eta_{t}).\] (12)

At each epoch \(t\), CRMM plays the selected arm \(\bm{x}_{t}\)\(r\) times, generating rewards \(\{y_{t}^{1},\ldots,y_{t}^{r}\}\) with \(r=O(\log T)\). To obtain a robust estimation using mean of medians strategy, CRMM first takes the median of \(\{y_{t}^{1},\ldots,y_{t}^{r}\}\), denoted by \(\bar{y}_{t}\). Subsequently, CRMM computes the gradient with the arm-reward pair \((\bm{x}_{t},\bar{y}_{t})\) through the operation similar to (11). Then, CRMM employs a variant of ONS to update the estimator and construct the confidence region \(\mathcal{C}_{t+1}\) centered on the new estimator. The details about the constructed confidence region is given in Theorem 3.

Compared to existing bandit algorithms that utilize the median of means strategy, the primary difference lies in the item chosen as the "means". As we have introduced in (7), MENU of Shao _et al._ (2018) uses the distance between different estimators as the "means". BMM of Xue _et al._ (2020) calculates multiple estimated rewards for each arm and treats them as the "means". Both MENU and BMM require \(O(\log T)\) estimators during each round, whereas CRMM only requires one estimator. Moreover, compared to the mean of medians approach (Zhong _et al._, 2021), CRMM plays each selected arm fewer times, leading to more model updates, which is critical based on experimental results. Since the chosen arm has to be played multiple times, we assume the arm set for CRMM is static, such that \(\mathcal{D}_{t}=\mathcal{D}\) for \(t>0\), which is a common assumption (Medina and Yang, 2016; Zhang _et al._, 2016; Lu _et al._, 2019). The following theorem guarantees a tight confidence region.

**Theorem 3**: _If the rewards satisfy (9) and (12), then with probability as least \(1-2\delta\), the confidence region in CRMM is_

\[\|\bm{\theta}-\hat{\bm{\theta}}_{t+1}\|^{2}_{\mathbf{V}_{t+1}}\leq\gamma_{t+1 },\forall t\geq 0\]

_where_

\[\gamma_{t+1}= \left(4U^{2}+C\rho t^{\frac{1-\varepsilon}{1+\varepsilon}}\right) \frac{4d}{\kappa}\ln\left(1+\frac{\kappa t}{2\lambda d}\right)+\lambda S^{2}+ \frac{2\rho^{2}}{\kappa}t^{\frac{1-\varepsilon}{1+\varepsilon}},\] \[\rho= 2C\ln(4T/\delta)+2C^{-\epsilon}rv,\ C=(4v)^{\frac{1}{1+\epsilon}}.\]

With above confidence region, we prove the following regret bound for CRMM.

**Theorem 4**: _If the rewards satisfy (9) and (12), then with probability at least \(1-2\delta\), the regret of CRMM satisfies_

\[R(T)\leq O\left(d(\log T)^{\frac{3}{2}+\frac{\varepsilon}{1+\varepsilon}}T^{ \frac{1}{1+\varepsilon}}\right).\]

**Remark:** Theorem 3 clarifies that if the rewards have a finite \(1+\epsilon\) central moment for some \(\epsilon\in(0,1]\), CRMM achieves a regret bound of \(\widetilde{O}(dT^{\frac{1}{1+\varepsilon}})\). This bound reduces to \(\widetilde{O}(d\sqrt{T})\) when \(\epsilon=1\), indicating that CRMM achieves the same order as the bounded rewards assumption regarding both \(d\) and \(T\)(Zhang _et al._, 2016; Jun _et al._, 2017). Compared to the approach of Zhong _et al._ (2021), CRMM enhances the bound by an order of \(O((\log T)^{\frac{1}{2\alpha}-\frac{1}{2}})\) for a fixed \(\alpha\in(0,1)\) if \(\epsilon=1\).

## 4 Experiments

This section demonstrates the improvement of our algorithms by numerical experiments. Firstly, we show the effectiveness of our algorithms in dealing with heavy-tailed problems by comparing their regret to that of existing generalized linear bandit algorithms. Secondly, we evaluate the efficiency of our algorithms by comparing their time consumption to other existing algorithms designed for heavy-tailed bandit problems. All algorithms are implemented using PyCharm 2022 and tested on a laptop with a 2.5GHz CPU and 32GB of memory.

### Regret Comparison

To assess the enhancement of our algorithms in handling heavy-tailed problems, we utilize the vanilla GLB algorithms, specifically OL\({}^{2}\)M (Zhang _et al._, 2016) and GLOC (Jun _et al._, 2017), as baselines. Additionally, we incorporate the mean of medians method proposed by Zhong _et al._ (2021) into OL\({}^{2}\)M and GLOC, resulting in another two baselines OL\({}^{2}\)M_mon and GLOC_mon, respectively. All algorithms are configured with \(\epsilon=1\), \(\delta=0.01\), and \(T=10^{6}\).

Let \(\bm{\theta}_{*}=\mathbf{1}/\sqrt{d}\in\mathbb{R}^{d}\), where \(\mathbf{1}\) is an all-\(1\) vector and \(\|\bm{\theta}_{*}\|_{2}=1\). The number of arms is set to \(K=20\), and the feature dimension is \(d=10\). Each component of the contextual vector \(\bm{x}_{t}\) is uniformly sampled from the interval \([0,1]\), and then normalized to be unit norm, i.e., \(\|\bm{x}_{t}\|_{2}=1\). We tune the width of the confidence region following the common practice in bandit learning (Zhang _et al._, 2016; Jun _et al._, 2017). Precisely, with \(c\) being a tuning parameter searched within \([1e^{-4},1]\), the width of the confidence region for OL\({}^{2}\)M and GLOC are set as \(\gamma_{t}=cd\ln(t/\lambda+1)\) and \(\gamma_{t}=c\sum_{\tau=1}^{t}(\mu(\bm{x}_{\tau}^{\top}\hat{\bm{\theta}}_{\tau} )-y_{\tau})^{2}\|\bm{x}_{\tau}\|^{2}_{\mathbf{V}_{\mathbf{V}_{\mathbf{V}_{ \mathbf{V}_{\mathbf{V}_{\mathbf{V}}_{\mathbf{V}}}}}^{2}}}\), respectively. In addition, the radius of the confidence region is set as \(cd\ln(4T/\delta)^{\frac{2\varepsilon}{1+\varepsilon}}\ln(T/(d\lambda)+1)T^{ \frac{1-\epsilon}{1+\varepsilon}}\) for CRTM, and \(cd\ln(t/(d\lambda)+1)t^{\frac{1-\epsilon}{1+\varepsilon}}\) for CRMM. For OL2M_mom and GLOC_mom, the chosen arm is played \(\bar{r}=(16\ln(2T/\delta))^{1/\alpha}\) times per round, and \(\alpha=0.62\) is close to optimal according to the experiments of Zhong _et al._[2021].

We run 10 repetitions for each algorithm and display the average regret with time evolution. According to the generalized linear bandit model, the observed reward \(y_{t}\) is given by

\[y_{t}=\mu(\bm{x}_{t}^{\top}\bm{\theta}_{*})+\eta_{t}\]

where \(\mu(x)=\frac{1}{1+e^{-x}}\) is the logit model and \(\eta_{t}\) is the heavy-tailed noises. To evaluate the algorithms performance under both symmetric and asymmetric rewards, \(\eta_{t}\) fits the following two distributions,

1. Student's \(t\)-Noise: \(\eta_{t}\sim\frac{G(2)}{\sqrt{3\pi G(1.5)}}\left(1+\frac{x^{2}}{3}\right)^{-2}\) where \(G(\cdot)\) is the Gamma function;
2. Pareto Noise: \(\eta_{t}\sim\frac{xx_{t}^{\alpha}}{x^{\alpha}+1}\mathbb{I}_{x\geq x_{m}}\) where \(s=3\) and \(x_{m}=0.01\).

Fig. 1 compares our algorithms against two vanilla GLB algorithms (OL2M and GLOC), as well as these two algorithms exploiting mean of medians estimators (OL2M_mom and GLOC_mom). Fig. 1(a) shows that CRTM and CRMM outperform the other four algorithms. CRTM provides the best performance, which is consistent with the theoretical guarantees. OL2M_mom and GLOC_mom appear ineffective at handling heavy-tailed problems, because they update estimator only \(100\) times with the chosen arm played \(\bar{r}\) times [Zhong _et al._, 2021]. Fig. 1(b) presents the cumulative regrets under asymmetric noises, with CRTM still having the lowest regret curve, demonstrating its generality and effectiveness in handling heavy-tailed bandit problems. On the other hand, CRMM, GLOC_mom, and OL2M_mom performs poorly in Fig. 1(b), as they can not deal with the asymmetric rewards.

### Runtime Comparison

To demonstrate the efficiency improvement of our algorithms, we compare them with existing heavy-tailed bandit algorithms such as CRT and MoM [Medina and Yang, 2016], TOFU and MENU [Shao _et al._, 2018], and SupBTC and SupBMM [Xue _et al._, 2020]. Among them, CRT, TOFU and SupBTC employ truncation strategy, while MoM, MENU and SupBMM utilize the median of means strategy.

The experimental settings are the same as described in Regret Comparison section, except for the time horizon and feature dimension. We use a smaller time horizon \(T=10^{4}\) since TOFU is time-consuming. The feature dimension is increased to \(d=100\) to highlight the difference between SupBTC and TOFU. The computational runtimes are shown in Table 2.

For the truncation-based algorithms, CRTM consumes the least time, while TOFU and SupBTC takes over a hundred times longer to execute than CRTM, representing a significant improvement. CRT takes only slightly longer than CRTM as both algorithms update the model online, but the regret bound of CRT is \(\widetilde{O}(dT^{\frac{3}{4}})\), which is \(\widetilde{O}(T^{\frac{1}{4}})\) worse

\begin{table}
\begin{tabular}{l l l l} \hline Algorithm & Time(s) & Algorithm & Time(s) \\ \hline CRT & 3.1737 & MoM & 0.0630 \\ TOFU & 3931.9963 & MENU & 24.1990 \\ SupBTC & 1187.1863 & SupBMM & 0.0685 \\ CRTM & **2.2909** & CRMM & **0.0514** \\ \hline \end{tabular}
\end{table}
Table 2: Runtime comparison

Figure 1: Regret comparison

than the bound of CRTM. For median of means algorithms, CRMM has the shortest runtime. MENU takes significantly longer than the other algorithms because MENU needs to calculate the distance between \(O(\log T)\) estimators.

## 5 Conclusion and Future Work

We present two algorithms, CRTM and CRMM, for the generalized linear bandit model with heavy-tailed rewards, which utilize the truncation and mean of medians strategies, respectively. Both algorithms achieve the regret bound of \(\widetilde{O}(dT^{\frac{1}{1+\epsilon}})\) conditioned on a bounded \((1+\epsilon)\)-th moment of rewards, where \(\epsilon\in(0,1]\). This bound is almost optimal since the lower bound of the stochastic linear bandit problem is \(\Omega(dT^{\frac{1}{1+\epsilon}})\)(Shao _et al._, 2018). CRTM is the first truncation-based online algorithm for the heavy-tailed bandit problem that handles both symmetric and asymmetric rewards and approaches the optimal regret bound. CRMM enhances the regret bound of the the most related work by a logarithmic factor (Zhong _et al._, 2021). However, CRMM is limited to symmetric rewards and we will investigate to overcome this restriction in the future.

## Acknowledgments and Disclosure of Funding

This work was partially supported by the National Key R&D Program of China (2022ZD0114801), the Key Basic Research Foundation of Shenzhen (JCYJ20220818100005011), NSFC (62122037, 61921006) and the major key project of PCL (PCL2021A12).

## References

* Abbasi-yadkori et al. (2011) Yasin Abbasi-yadkori, David Pal, and Csaba Szepesvari. Improved algorithms for linear stochastic bandits. In _Advances in Neural Information Processing Systems 24_, pages 2312-2320, 2011.
* Alieva et al. (2021) Ayya Alieva, Ashok Cutkosky, and Abhimanyu Das. Robust pure exploration in linear bandits with limited budget. In _Proceedings of the 38th International Conference on Machine Learning_, pages 187-195, 2021.
* Audibert and Catoni (2011) Jean-Yves Audibert and Olivier Catoni. Robust linear least squares regression. _The Annals of Statistics_, 39(5):2766-2794, 2011.
* Auer (2002) Peter Auer. Using confidence bounds for exploitation-exploration trade-offs. _Journal of Machine Learning Research_, 3(11):397-422, 2002.
* Azuma (1967) Kazuoki Azuma. Weighted sums of certain dependent random variables. _Tohoku Math. J. (2)_, 19(3):357-367, 1967.
* Benggs et al. (2022) Viktor Benggs, Aadirupa Saha, and Eyke Hullermeier. Stochastic contextual dueling bandits under linear stochastic transitivity models. In _Proceedings of the 39th International Conference on Machine Learning_, pages 1764-1786, 2022.
* Bubeck and Cesa-Bianchi (2012) Sebastien Bubeck and Nicolo Cesa-Bianchi. Regret analysis of stochastic and nonstochastic multi-armed bandit problems. _Foundations and Trends in Machine Learning_, 5(1):1-122, 2012.
* Bubeck et al. (2013) Sebastien Bubeck, Nicolo Cesa-Bianchi, and Gabor Lugosi. Bandits with heavy tail. _IEEE Transactions on Information Theory_, 59(11):7711-7717, 2013.
* Cont and Bouchaud (2000) Rama Cont and Jean-Philipe Bouchaud. Herd behavior and aggregate fluctuations in financial markets. _Macroeconomic Dynamics_, 4(2):170-196, 2000.
* Dani et al. (2008) Varsha Dani, Thomas P. Hayes, and Sham M. Kakade. Stochastic linear optimization under bandit feedback. In _Proceedings of the 21st Annual Conference on Learning_, pages 355-366, 2008.
* Diakonikolas et al. (2022) Ilias Diakonikolas, Daniel Kane, Jasper Lee, and Ankit Pensia. Outlier-robust sparse mean estimation for heavy-tailed distributions. In _Advances in Neural Information Processing Systems 35_, pages 5164-5177, 2022.
* Diakonikolas et al. (2013)Qin Ding, Cho-Jui Hsieh, and James Sharpnack. An efficient algorithm for generalized linear bandit: Online stochastic gradient descent and thompson sampling. In _Proceedings of The 24th International Conference on Artificial Intelligence and Statistics_, pages 1585-1593, 2021.
* Filippi et al. (2010) Sarah Filippi, Olivier Cappe, Aurelien Garivier, and Csaba Szepesvari. Parametric bandits: The generalized linear case. In _Advances in Neural Information Processing Systems 23_, pages 586-594. 2010.
* Foss et al. (2013) Sergey Foss, Dmitry Korshunov, and Stan Zachary. _An Introduction to Heavy-Tailed and Subexponential Distributions_. Springer, 2013.
* Gorbunov et al. (2022) Eduard Gorbunov, Marina Danilova, David Dobre, Pavel Dvurechenskii, Alexander Gasnikov, and Gauthier Gidel. Clipped stochastic methods for variational inequalities with heavy-tailed noise. In _Advances in Neural Information Processing Systems 35_, pages 31319-31332, 2022.
* Gou et al. (2023) Yutian Gou, Jinfeng Yi, and Lijun Zhang. Stochastic graphical bandits with heavy-tailed rewards. In _Proceedings of the 39th Conference on Uncertainty in Artificial Intelligence_, pages 734-744, 2023.
* Han et al. (2021) Yuxuan Han, Zhipeng Liang, Yang Wang, and Jiheng Zhang. Generalized linear bandits with local differential privacy. In _Advances in Neural Information Processing Systems 34_, pages 26511-26522, 2021.
* He et al. (2022) Jiafan He, Dongruo Zhou, Tong Zhang, and Quanquan Gu. Nearly optimal algorithms for linear contextual bandits with adversarial corruptions. In _Advances in Neural Information Processing Systems 35_, pages 34614-34625, 2022.
* Hsu and Sabato (2014) Daniel Hsu and Sivan Sabato. Heavy-tailed regression with a generalized median-of-means. In _Proceedings of the 31st International Conference on Machine Learning_, pages 37-45, 2014.
* Hu et al. (2021) Jiachen Hu, Xiaoyu Chen, Chi Jin, Lihong Li, and Liwei Wang. Near-optimal representation learning for linear bandits and linear rf. In _Proceedings of the 38th International Conference on Machine Learning_, pages 4349-4358, 2021.
* Huang et al. (2022) Jiatai Huang, Yan Dai, and Longbo Huang. Adaptive best-of-both-worlds algorithm for heavy-tailed multi-armed bandits. In _Proceedings of the 39th International Conference on Machine Learning_, pages 9173-9200, 2022.
* Jun et al. (2017) Kwang-Sung Jun, Aniruddha Bhargava, Robert Nowak, and Rebecca Willett. Scalable generalized linear bandits: Online computation and hashing. In _Advances in Neural Information Processing Systems 30_, pages 99-109, 2017.
* Kamath et al. (2022) Gautam Kamath, Xingtu Liu, and Huanyu Zhang. Improved rates for differentially private stochastic convex optimization with heavy-tailed data. In _Proceedings of the 39th International Conference on Machine Learning_, pages 10633-10660, 2022.
* Lattimore and Szepesvari (2020) Tor Lattimore and Csaba Szepesvari. _Bandit Algorithms_. Cambridge University Press, 2020.
* Li and Liu (2022) Shaojie Li and Yong Liu. High probability guarantees for nonconvex stochastic gradient descent with heavy tails. In _Proceedings of the 39th International Conference on Machine Learning_, pages 12931-12963, 2022.
* Li and Wang (2022) Chuanhao Li and Hongning Wang. Communication efficient federated learning for generalized linear bandits. In _Advances in Neural Information Processing Systems 35_, pages 38411-38423, 2022.
* Li et al. (2012) Lihong Li, Wei Chu, John Langford, Taesup Moon, and Xuanhui Wang. An unbiased offline evaluation of contextual bandit algorithms with generalized linear models. In _Proceedings of the Workshop on On-line Trading of Exploration and Exploitation 2_, 2012.
* Li et al. (2017) Lihong Li, Yu Lu, and Dengyong Zhou. Provably optimal algorithms for generalized linear contextual bandits. In _Proceedings of the 34th International Conference on Machine Learning_, pages 2071-2080, 2017.
* Lu et al. (2019) Shiyin Lu, Guanghui Wang, Yao Hu, and Lijun Zhang. Multi-objective generalized linear bandits. In _Proceedings of the 28th International Joint Conference on Artificial Intelligence_, pages 3080-3086, 2019.
* Li et al. (2019)Gabor Lugosi and Shahar Mendelson. Robust multivariate mean estimation: The optimality of trimmed mean. _The Annals of Statistics_, 49(1):393-410, 2021.
* Medina and Yang (2016) Andres Munoz Medina and Scott Yang. No-regret algorithms for heavy-tailed linear bandits. In _Proceedings of the 33rd International Conference on International Conference on Machine Learning_, pages 1642-1650, 2016.
* Mendenhall et al. (2012) William Mendenhall, Robert.J. Beaver, and Barara.M. Beaver. _Introduction to Probability and Statistics_. Cengage Learning, 2012.
* Nelder and McCullagh (1989) John A. Nelder P. McCullagh. Generalized linear models. 1989.
* Chowdhury and Gopalan (2019) Sayak Ray Chowdhury and Aditya Gopalan. Bayesian optimization under heavy-tailed payoffs. In _Advances in Neural Information Processing Systems 32_, pages 13790-13801, 2019.
* Robbins (1952) Herbert Robbins. Some aspects of the sequential design of experiments. _Bull. Amer. Math. Soc._, 58(5):527-535, 1952.
* Seldin et al. (2012) Yevgeny Seldin, Francois Laviolette, Nicolo Cesa-Bianchi, John Shawe-Taylor, and Peter Auer. Pac-bayesian inequalities for martingales. _IEEE Transactions on Information Theory_, 58(12):7086-7093, 2012.
* Shao et al. (2018) Han Shao, Xiaotian Yu, Irwin King, and Michael R. Lyu. Almost optimal algorithms for linear stochastic bandits with heavy-tailed payoffs. In _Advances in Neural Information Processing Systems 31_, pages 8430-8439, 2018.
* Villar et al. (2015) Sofia S. Villar, Jack Bowden, and James Wason. Multi-armed Bandit Models for the Optimal Design of Clinical Trials: Benefits and Challenges. _Statistical Science_, 30(2):199-215, 2015.
* Xue et al. (2020) Bo Xue, Guanghui Wang, Yimu Wang, and Lijun Zhang. Nearly optimal regret for stochastic linear bandits with heavy-tailed payoffs. In _Proceedings of the 29th International Joint Conference on Artificial Intelligence_, pages 2936-2942, 2020.
* Yang et al. (2022) Shuo Yang, Tongzheng Ren, Sanjay Shakkottai, Eric Price, Inderjit S. Dhillon, and Sujay Sanghavi. Linear bandit algorithms with sublinear time complexity. In _Proceedings of the 39th International Conference on Machine Learning_, pages 25241-25260, 2022.
* Zhang and Zhou (2018) Lijun Zhang and Zhi-Hua Zhou. \(\ell_{1}\)-regression with heavy-tailed distributions. In _Advances in Neural Information Processing Systems 31_, pages 1084-1094, 2018.
* Zhang et al. (2016) Lijun Zhang, Tianbao Yang, Rong Jin, Yichi Xiao, and Zhi-Hua Zhou. Online stochastic linear optimization under one-bit feedback. In _Proceedings of the 33rd International Conference on Machine Learning_, pages 392-401, 2016.
* Zhong et al. (2021) Han Zhong, Jiayi Huang, Lin Yang, and Liwei Wang. Breaking the moments condition barrier: No-regret algorithm for bandits with super heavy-tailed payoffs. In _Advances in Neural Information Processing Systems 34_, pages 15710-15720, 2021.
* Zhou et al. (2019) Zhengyuan Zhou, Renyuan Xu, and Jose Blanchet. Learning in generalized linear contextual bandits with stochastic delays. In _Advances in Neural Information Processing Systems 32_, pages 5197-5208, 2019.