# Incentives in Private Collaborative Machine Learning

Rachael Hwee Ling Sim\({}^{1}\)

Yehong Zhang\({}^{2}\)

Trong Nghia Hoang\({}^{3}\)

**Xinyi Xu\({}^{1}\)**

**Bryan Kian Hsiang Low\({}^{1}\)**

**and Patrick Jaillet\({}^{4}\)**

\({}^{1}\) Department of Computer Science, National University of Singapore, Republic of Singapore

\({}^{2}\) Peng Cheng Laboratory, People's Republic of China

\({}^{3}\) School of Electrical Engineering and Computer Science, Washington State University, USA

\({}^{4}\) Dept. of Electrical Engineering and Computer Science, MIT, USA

\({}^{1}\){rachaels,xuxinyi,lowkh}@comp.nus.edu.sg, \({}^{2}\)zhangyh02@pcl.ac.cn

\({}^{3}\)trongnghia.hoang@wsu.edu, \({}^{4}\)jaillet@mit.edu

###### Abstract

Collaborative machine learning involves training models on data from multiple parties but must incentivize their participation. Existing data valuation methods fairly value and reward each party based on shared data or model parameters but neglect the privacy risks involved. To address this, we introduce _differential privacy_ (DP) as an incentive. Each party can select its required DP guarantee and perturb its _sufficient statistic_ (SS) accordingly. The mediator values the perturbed SS by the Bayesian surprise it elicits about the model parameters. As our valuation function enforces a _privacy-valuation trade-off_, parties are deterred from selecting excessive DP guarantees that reduce the utility of the grand coalition's model. Finally, the mediator rewards each party with different posterior samples of the model parameters. Such rewards still satisfy existing incentives like fairness but additionally preserve DP and a high similarity to the grand coalition's posterior. We empirically demonstrate the effectiveness and practicality of our approach on synthetic and real-world datasets.

## 1 Introduction

Collaborative _machine learning_ (ML) seeks to build ML models of higher quality by training on more data owned by multiple parties [47, 62]. For example, a hospital can improve its prediction of disease progression by training on data collected from more and diversified patients from other hospitals [6]. Likewise, a real-estate firm can improve its prediction of demand and price by training on data from others [9]. However, parties have two main concerns that discourage data sharing and participation in collaborative ML: (a) whether they benefit from the collaboration and (b) privacy.

Concern (a) arises as each party would expect the significant cost that it incurs to collect and share data (e.g., the risk of losing its competitive edge) to be covered. Some existing works [47, 51], among other data valuation methods,1 have recognized that parties require incentives to collaborate, such as a guaranteed _fair_ higher reward from contributing more valuable data than the others, an _individually rational_ higher reward from collaboration than in solitude, and a higher total reward (i.e., _group welfare_) whenever possible. Often, parties share and are rewarded with information (e.g., gradients [58] or parameters [47] of parametric ML models) computed from the shared data. However, these incentive-aware reward schemes expose parties to privacy risks.

On the other hand, some _federated learning_ (FL) works [34] have addressed the privacy concern (b) and satisfied strict data protection laws (e.g., European Union's General Data Protection Regulation) by enforcing _differential privacy_ (DP) [1, 36] during the collaboration. Each party injects noise before sharing information to ensure that its shared information would not significantly alter a knowledgeable collaborating party's or mediator's belief about whether a datum was input to the algorithm. Injecting more noise leads to a stronger DP guarantee. As raised in [64], adding DP can invalidate game-theoretic properties and hence affect participation. For example, in the next paragraph, we will see that adding DP may lead to the collaboration being perceived as unfair and a lower group welfare. However, to the best of our knowledge (and as discussed in Sec. 7 and Fig. 5), there are no works that address both concerns, i.e., ensure the _fairness_, _individual rationality_, and _group welfare_ incentives (see Sec. 4), alongside privacy. Thus, we aim to fill in this gap and design an incentive-aware yet privacy-preserving reward scheme by addressing the following questions:

**If a party (e.g., hospital) requires a stronger DP guarantee, what should the impact be on its valuation and reward?** Our answer is that, on average, its valuation and reward should decrease. Intuitively, it is unfair when this party gets a higher valuation due to randomness in the DP noise. More importantly, parties require guaranteed higher rewards to consider a weaker privacy guarantee [22, 64] which will help maximize the utility of the collaboratively trained model(s). As observed in [14, 65], the weaker the DP guarantee, the smaller the loss in model accuracy from enforcing DP. Thus, we will (i) assign a value to each party to enforce a _privacy-valuation trade-off_ and incentivize parties against unfetteredly selecting an excessively strong DP guarantee,2 and (ii) flexibly allow each party to enforce a different DP guarantee without imposing a party's need for strong DP on others. This new perspective and its realization is our main contribution.

Footnote 2: The work of [30] describes problems posed by excessive data privacy and “the need to balance privacy with fuller and representative data collection” (instead of privileging privacy). But, parties are still free to seek DP.

**To enforce a privacy-valuation trade-off, how should DP be ensured and a party's data be valued (Sec. 3)?** Initially, valuation using validation accuracy seems promising as the works of [18, 25] have empirically shown that adding noise will decrease the valuation. However, parties may be reluctant to contribute validation data due to privacy concerns and disagree on the validation set as they prioritize accurate predictions on different inputs (e.g., patient demographics). So, we revert to valuing parties based on the quality of inference of the model parameters under DP. Bayesian inference is a natural choice as it quantifies the impact of (additional DP) noise. In Sec. 2, we will explain how each party ensures DP by only sharing perturbed _sufficient statistic_ (SS) with the mediator. The mediator values the perturbed SS by the _surprise_ it elicits relative to the prior belief of model parameters. Intuitively, noisier perturbed SS is less valuable as the posterior belief of the model parameters will be more diffuse and similar to the prior. As parties prioritize obtaining a model for future predictions and may face legal/decision difficulties in implementing monetary payments, we reward each party with _posterior samples of the model parameters_ (in short, _model reward_) instead.

**How should the reward scheme be designed to satisfy the aforementioned privacy, individual rationality, and fairness incentives (Sec. 4)?** Our scheme will naturally satisfy the privacy incentive as any post-processing of the perturbed SS will preserve DP. To satisfy fairness and individual rationality, we set the _target_ reward value for every party using \(\rho\)-Shapley value [47]. **Lastly, to realize these target reward values, how should the model reward be generated for each party (Sec. 5)?** Instead of rewarding all parties with samples from the _same_ (grand coalition's) posterior of the model parameters given all their perturbed SS (which would be unfair if their valuations differ), our reward control mechanism generates a _different_ posterior for each party that still _preserves a high similarity to the grand coalition's posterior._ Concretely, the mediator scales the SS by a factor between \(0\) and \(1\) before sampling to control the impact of data on the posterior (by _tempering_ the data likelihood). Scaling the SS by a factor of \(0\), \(1\), and between \(0\) and \(1\) yield the prior, posterior, and their interpolation, respectively. We then solve for the factor to achieve the target reward value.

By answering the above questions, our work here provides the following novel contributions3:

Footnote 3: See App. B for the key differences of our work here vs. data valuation and DP/FL works.

* A new _privacy-valuation trade-off_ criterion for valuation functions that is provably satisfied by the combination of our _Bayesian surprise_ valuation function with DP noise-aware inference (Sec. 3);
* New incentives including _DP_ (while _deterring excessive DP_) and _similarity to grand coalition's model_ (Sec. 4);* _Reward control mechanisms_ (Sec. 5) to generate _posterior samples_ of the model parameters for each party that achieve a target reward value and the aforementioned incentives; one such mechanism tempers the likelihood of the data by scaling the SS and data quantity.

## 2 Collaborative ML Problem with Privacy Incentive

Our private collaborative ML problem setup comprises a mediator coordinating information sharing, valuation, and reward, and \(n\) parties performing a common ML task (e.g., predicting disease progression). Let the set \(N\triangleq\{1,\ldots,n\}\) denote the grand coalition of \(n\) parties. Each party \(i\) owns a private dataset \(\mathcal{D}_{i}\) which cannot be directly shared with others, including the mediator. _What alternative information should each party provide to the mediator for collaborative training of an ML model?_

To ease aggregation, this work focuses only on Bayesian models with _sufficient statistic_ (SS), such as exponential family models [5], Bayesian linear regression [39], and generalized linear models, including Bayesian logistic regression [21] (with approximate SS).

**Definition 2.1** (Sufficient Statistic (SS) [48; 52]).: The statistic \(\bm{s}_{i}\) is a SS for the dataset \(\mathcal{D}_{i}\) if the model parameters \(\theta\) and dataset \(\mathcal{D}_{i}\) are conditionally independent given \(\bm{s}_{i}\), i.e., \(p(\theta|\bm{s}_{i},\mathcal{D}_{i})=p(\theta|\bm{s}_{i})\).

We propose that each party \(i\) shares its SS \(\bm{s}_{i}\) for and _in place of_ its dataset \(\mathcal{D}_{i}\) to protect the privacy of \(\mathcal{D}_{i}\). We assume that the parties have agreed to adopt a common Bayesian model with the same prior \(p(\theta)\) of model parameters \(\theta\), and each party \(i\)'s dataset \(\mathcal{D}_{i}\) is independently drawn from the likelihood \(p(\mathcal{D}_{i}|\theta)\) that is conjugate to the prior \(p(\theta)\) (i.e., belonging to an exponential family). The mediator can compute the posterior belief \(p(\theta|\{\mathcal{D}_{i}\}_{i\in N})\) of model parameters \(\theta\) given the grand coalition \(N\)'s datasets using a function \(f_{\theta}\) of the sum over shared SS: \(p(\theta|\{\mathcal{D}_{i}\}_{i\in N})\propto p(\theta)\)\(f_{\theta}(\sum_{i\in N}\bm{s}_{i})\). We give a concrete example and the mathematical details of SS in Apps. A.1 and E, respectively.

**Privacy Incentive.** However, sharing the exact SS \(\bm{s}_{N}\triangleq\{\bm{s}_{i}\}_{i\in N}\) will not ensure privacy as the mediator can draw inferences about individual datum in the private datasets \(\mathcal{D}_{N}\triangleq\{\mathcal{D}_{i}\}_{i\in N}\). To mitigate the privacy risk, each party \(i\) should choose its required privacy level \(\epsilon_{i}\) and enforce \((\lambda,\epsilon_{i})\)-Renyi _differential privacy_.4 In Def. 2.2, a smaller \(\epsilon_{i}\) corresponds to a stronger DP guarantee.4

Footnote 4: Parties agree on \(\lambda\). In App. A.2, we will define/explain the DP-related concepts and other DP notions.

**Definition 2.2** (Renyi Differential Privacy (DP) [38]).: A randomized algorithm \(\mathcal{R}:\mathcal{D}\rightarrow\bm{o}\) is \((\lambda,\epsilon)\)-Renyi differentially private if for all neighboring datasets \(\mathcal{D}\) and \(\mathcal{D}^{\prime}\), the Renyi divergence5 of order5\(\lambda>1\) is \(D_{\lambda}(\mathcal{R}(\mathcal{D})\;||\;\mathcal{R}(\mathcal{D}^{\prime}))\leq\epsilon\).

Footnote 5: A benefit of sharing perturbed SS is that each party only incurs the privacy cost _once_ regardless of the number of samples drawn or coalitions considered.

Party \(i\) can enforce (example-level)6\((\lambda,\epsilon_{i})\)-Renyi DP by applying the Gaussian mechanism: It generates perturbed SS \(\bm{o}_{i}\triangleq\bm{s}_{i}+\bm{z}_{i}\) by sampling a Gaussian noise vector \(\bm{z}_{i}\) from the distribution \(p(Z_{i})=\mathcal{N}(\bm{0},\;0.5\;(\lambda/\epsilon_{i})\;\Delta_{2}^{2}(g)\; \bm{I})\) where \(\Delta_{2}^{2}(g)\) is the squared \(\ell_{2}\)-sensitivity6 of the function \(g\) that maps the dataset \(\mathcal{D}_{i}\) to the SS \(\bm{s}_{i}\). We choose Renyi DP over the commonly used \((\epsilon,\delta)\)-DP as it gives a stronger privacy definition and allows a more convenient composition of the Gaussian mechanisms [38], as explained in App. A.2.

Footnote 6: Here, \(\bm{o}_{i}\) should be interpreted as a random vector taking the value of its sample. Non-noise-aware inference incorrectly treats \(\bm{o}_{i}\) as \(\bm{s}_{i}\) and computes \(p(\theta|\{\bm{s}_{i}=\bm{o}_{i}\}_{i\in N})\) instead. See App. A.3.

Each party \(i\) will share (i) the number \(c_{i}\triangleq|\mathcal{D}_{i}|\) of data points in its dataset \(\mathcal{D}_{i}\), (ii) its perturbed SS \(\bm{o}_{i}\),7 and (iii) its Gaussian distribution \(p(Z_{i})\) with the mediator. As DP algorithms are robust to post-processing, the mediator's subsequent operations of \(\bm{o}_{i}\) (with no further access to the dataset) will preserve the same DP guarantees. The mediator uses such information to quantify the impact of the DP noise and compute the DP noise-aware posterior7\(p(\theta|\{\bm{o}_{i}\}_{i\in N})\) via _Markov Chain Monte Carlo_ (MCMC) sampling steps outlined by [3; 4; 27].

Footnote 7: Here, \(\bm{o}_{i}\) should be interpreted as a random vector taking the value of its sample. Non-noise-aware inference incorrectly treats \(\bm{o}_{i}\) as \(\bm{s}_{i}\) and computes \(p(\theta|\{\bm{s}_{i}=\bm{o}_{i}\}_{i\in N})\) instead. See App. A.3.

In this section, we have satisfied the privacy incentive. In Sec. 3, we assign a value \(v_{C}\) to each coalition \(C\subseteq N\)'s perturbed SS \(\bm{o}_{C}\triangleq\{\bm{o}_{i}\}_{i\in C}\) that would decrease, on average, as the DP guarantee strengthens. In Secs. 4 and 5, we outline our reward scheme: Each party \(i\) will be rewarded with model parameters sampled from \(q_{i}(\theta)\) (in short, _model reward_) for future predictions with an appropriate reward value \(r_{i}\) (decided based on \((v_{C})_{C\subseteq N}\)) to satisfy collaborative ML incentives (e.g., individual rationality, fairness). Our work's main contributions, notations, and setup are detailed in Fig. 1. The main steps involved are detailed in Algo. 2.

## 3 Valuation of Perturbed Sufficient Statistics

The perturbed SS \(\bm{o}_{C}\) of coalition \(C\) is more valuable and assigned a higher value \(v_{C}\) if it yields a model (in our work here, the DP noise-aware posterior \(p(\bm{\theta}|\bm{o}_{C})\)) of higher quality. Most data valuation methods [24; 18; 63] measure the quality of an ML model by its performance on a validation set. However, it may be challenging for collaborating parties (e.g., competing healthcare firms) to create and agree on a large, representative validation set as they may prioritize accurate predictions on different inputs (e.g., patient demographics) [47]. The challenge increases when each firm requires privacy and avoids data sharing. Other valuation methods [47; 59] have directly used the private inputs of the data (e.g., design matrix). Here, we propose to value the perturbed SS \(\bm{o}_{C}\) of coalition \(C\) based on the _surprise_[23] that it elicits from the prior belief of model parameters, as defined below:

**Definition 3.1** (Valuation via Bayesian Surprise).: The value of coalition \(C\) or its _surprise_\(v_{C}\) is the KL divergence \(D_{\mathrm{KL}}(p(\theta|\bm{o}_{C});p(\theta))\) between posterior \(p(\theta|\bm{o}_{C})\) vs. prior \(p(\theta)\).

From Def. 3.1, a greater surprise would mean that more bits will be needed to encode the information in \(p(\theta|\bm{o}_{C})\) given that others already know \(p(\theta)\). Otherwise, a smaller surprise means our prior belief has not been updated significantly. Moreover, as the valuation depends on the observed \(\bm{o}_{C}\), the surprise elicited by the exact SS and data points will indirectly influence the valuation. Next, by exploiting the equality of the expected Bayesian surprise and the information gain on model parameters \(\theta\) given perturbed SS \(\bm{o}_{C}\) (i.e., \(\mathbb{E}_{\bm{o}_{C}}[v_{C}]=\mathbb{I}(\theta;\bm{o}_{C})\)), we can establish the following essential properties of our valuation function:

1. [label=V0]
2. **Non-negativity.**\(\forall C\subseteq N\;\forall\bm{o}_{C}\;\;v_{C}\geq 0\;.\) This is due to the non-negativity of KL divergence.
3. **Party monotonicity.** In expectation w.r.t. \(\bm{o}_{C}\), adding a party will not decrease the valuation: \(\forall C\subseteq C^{\prime}\subseteq N\;\;\mathbb{E}_{\bm{o}_{C^{\prime}}}[v _{C^{\prime}}]\geq\mathbb{E}_{\bm{o}_{C}}[v_{C}]\;.\) The proof (App. C.1) uses the "information never hurts" property.
4. **Privacy-valuation trade-off.** When the DP guarantee is strengthened from \(\epsilon_{i}\) to a smaller \(\epsilon_{i}^{s}\) and independent Gaussian noise is added to \(\bm{o}_{i}\) to generate \(\bm{o}_{i}^{s}\), in expectation, the value of any coalition \(C\) containing \(i\) will strictly decrease: Let \(v_{C}^{s}\) denote the value of coalition \(C\) with the random variable and realization of \(\bm{o}_{i}\) replaced by \(\bm{o}_{i}^{s}\). Then, \((i\in C)\wedge(\epsilon_{i}^{s}<\epsilon_{i})\;\Rightarrow\mathbb{E}_{\bm{o}_ {C}}[v_{C}]>\mathbb{E}_{\bm{o}_{C}^{s}}[v_{C}^{s}]\;.\)

The proof of V3 (App. C.1) uses the data processing inequality of information gain and the conditional independence between \(\theta\) and \(\bm{o}_{i}^{s}\) given \(\bm{o}_{i}\). Together, these properties address an important question of **how to ensure DP and value a party's data to enforce a privacy-valuation trade-off** (Sec. 1). Additionally, in App. C.2, we prove that in expectation, our Bayesian surprise valuation is equivalent to the alternative valuation that measures the similarity of \(p(\theta|\bm{o}_{C})\) to the grand coalition \(N\)'s DP noise-aware posterior \(p(\theta|\bm{o}_{N})\).

Figure 1: An overview of our private collaborative ML problem setup from party \(i\)’s perspective and our novel contributions (ideas in blue, novel combination of solutions in blue). We (i) enforce a privacy-reward trade-off (using each party \(i\)’s desire for a higher-quality model reward in collaborative ML) to deter party \(i\) from unfetterredly/overcautiously selecting an excessive DP guarantee (small \(\epsilon_{i}\)), (ii) ensure DP in valuation and rewards, and (iii) preserve similarity of its model reward \(q_{i}(\theta)\) to the grand coalition \(N\)’s posterior \(p(\theta|\bm{o}_{N})\) to achieve a high utility.

**Implementation.** Computing the Bayesian surprise valuation is intractable since the DP noise-aware posterior \(p(\theta|\bm{o}_{C})\) and its KL divergence from \(p(\theta)\) do not have a closed-form expression. Nonetheless, there exist approximate inference methods like the _Markov chain Monte Carlo_ (MCMC) sampling to estimate \(p(\theta|\bm{o}_{C})\) efficiently, as discussed in App. A.3. As our valuation function requires estimating the value of multiple coalitions and the posterior sampling step is costly, we prefer estimators with a low time complexity and a reasonable accuracy for a moderate number \(m\) of samples. We recommend KL estimation to be performed using the nearest-neighbors method [45], and repeated and averaged to reduce the variance of the estimate (see App. C.3 for a discussion). The nearest-neighbor KL estimator is also asymptotically unbiased; drawing more samples would reduce the bias and variance of our estimates and is more likely to ensure fairness -- for example, party \(i\)'s _sampled_ valuation is only larger than \(j\)'s if \(i\)'s _true_ valuation is higher.

**Remark.** Our valuation is based on the submitted information \(\{c_{i},\bm{o}_{i},p(Z_{i})\}_{i\in N}\) without verifying or incentivizing their truthfulness. We discuss how this limitation is shared by existing works and can be overcome by legal contracts and trusted data-sharing platforms in App. I.

## 4 Reward Scheme for Ensuring Incentives

After valuation, the mediator should reward each party \(i\) with a _model reward_ (i.e., consisting of samples from \(q_{i}(\theta)\)) for future predictions. Concretely, \(q_{i}(\theta)\) is a belief of model parameters \(\theta\) after learning from the perturbed SS \(\bm{o}_{N}\). As in Sec. 3, we value party \(i\)'s model reward as the KL divergence from the prior: \(r_{i}\triangleq D_{\mathrm{KL}}(q_{i}(\theta);p(\theta))\). The mediator will first _decide_ the target reward value \(r_{i}^{*}\) for every party \(i\in N\) using \(\{v_{C}\}_{C\subset N}\) to satisfy incentives such as fairness. The mediator will then _control_ and generate a _different_\(q_{i}(\theta)\) for every party \(i\in N\) such that \(r_{i}=r_{i}^{*}\) using reward control mechanisms from Sec. 5. We will now outline the incentives and desiderata for model reward \(q_{i}(\theta)\) and reward values \(r_{i}\) and \(r_{i}^{*}\) for every party \(i\in N\)when the grand coalition forms7.

Footnote 7: See App. D.1 for the modifications needed when the grand coalition does not form.

* **DP-Feasibility.** In party \(i\)'s reward, any other party \(k\) is still guaranteed at least its original \((\lambda,\epsilon_{k})\)-DP guarantee or stronger. The implication is that the generation of party \(i\)'s reward should not require more private information (e.g., SS) from party \(k\).
* **Efficiency.** There is a party \(i\in N\) whose model reward is the grand coalition \(N\)'s posterior, i.e., \(q_{i}(\theta)=p(\theta|\bm{o}_{N})\). It follows that \(r_{i}=v_{N}\).
* **Fairness.** The target reward values \((r_{i}^{*})_{i\in N}\) must consider the coalition values \(\{v_{C}\}_{C\subseteq N}\) and satisfy properties F1 to F4 given in [47] and reproduced in App. D.2. The monotonicity axiom F4 ensures using a valuation function which enforces that a _privacy-valuation trade-off_ will translate to a _privacy-reward trade-off_ and deter parties from selecting excessive DP guarantees.
* **Individual Rationality.** Each party should receive a model reward that is more valuable than the model trained on its perturbed SS alone: \(\forall i\in N\;\;r_{i}^{*}\geq v_{i}\).
* **Similarity to Grand Coalition's Model.** Among multiple model rewards \(q_{i}(\theta)\) whose value \(r_{i}\) equates the target reward \(r_{i}^{*}\), we _secondarily_ prefer one with a higher similarity \(r_{i}^{\prime}=-D_{\mathrm{KL}}(p(\theta|\bm{o}_{N});q_{i}(\theta))\) to \(p(\theta|\bm{o}_{N})\).8 Footnote 8: Expectation propagation, a common approximate inference technique, also maximizes \(r_{i}^{\prime}\). [5].
* **Group Welfare.** The reward scheme should maximize the total reward value \(\sum_{i=1}^{n}r_{i}\) to increase the utility of model reward for each party and achieve the aims of collaborative ML.

**Choice of desiderata.** We adopt the desiderata from [47] but make P1 and P2 more specific (by considering each party's actual reward \(q_{i}(\theta)\) over just its values \(r_{i}\) and \(v_{N}\)) and introduce P5. Firstly, for our Bayesian surprise valuation function, the feasibility constraint of [47] is inappropriate as removing a party or adding some noise realization may result in \(r_{i}>v_{N}\),9 so we propose P1 instead. Next, we recognize that party \(i\) is not indifferent to all model rewards \(q_{i}(\theta)\) with the same target reward value as they may have different utility (predictive performance). Thus, we propose our more specific P2 and a secondary desideratum P5. As P5 is considered after other desiderata, it does not conflict with existing results, e.g., design for \((r_{i}^{*})_{i\in N}\) to satisfy other incentives.

Footnote 9: The valuation fn. is only monotonic in expectation (V2-V3). See further discussion in App. I, Question 9.

_Remark on Rationality._ In P4, a party's model reward is compared to the model trained its _perturbed_ SS instead of its _exact_ SS alone. This is because the mediator cannot access (and value the modeltrained on) the private exact SS. Moreover, with no restrictions on the maximum DP noise, the value of some party's exact SS may exceed the grand coalition's perturbed SS when parties require strong DP guarantees. P4 is sufficient when parties require DP when alone to protect data from curious users of their ML model [1; 3; 27]. For example, a hospital may not want doctors to infer specific patients' data. When parties do not require DP when alone, our reward scheme cannot theoretically ensure that the model reward from collaboration is better than using the exact SS. We further discuss this limitation in App. D.3.

**Design of \((r_{i}^{*})_{i\in N}\).** To satisfy the desiderata from [47] (including our fairness P3 and rationality P4 incentives), we adopt their \(\rho\)-Shapley fair reward scheme with \(\rho\in(0,1]\) that sets \(r_{i}^{*}=v_{N}(\phi_{i}/\max_{k\in N}\phi_{k})^{\rho}\) with Shapley value10\(\phi_{i}\triangleq(1/n)\sum_{C\subseteq N\setminus i}\left[\binom{n-1}{|C|}^{-1} \left(v_{C\cup\{i\}}-v_{C}\right)\right]\). Shapley value's consideration of _marginal contribution_ (MC) to _all_ coalitions is key to ensuring strict desirability F3 such that party \(i\) obtains a higher reward than party \(k\) (despite \(v_{i}=v_{k}\)) if \(i\)'s perturbed SS adds more value to every other non-empty coalition. Applying Theorem 1 of [47], the mediator should set \(\rho\) between \(0\) and \(\min_{i\in N}\log(v_{i}/v_{N})/\log(\phi_{i}/\max_{k}\phi_{k})\) to guarantee rationality. Selecting a larger \(\rho\) incentivizes a party with a high-quality perturbed SS to share by fairly limiting the benefits to parties with lower-quality ones. Selecting a smaller \(\rho\) reward parties more equally and increase group welfare P6. Refer to Sec. 4.2 of [47] for a deeper analysis of the impact of varying \(\rho\). These results hold for any choice of \((\lambda,\epsilon_{i})\).

Footnote 10: Party \(i\)’s MC to some coalitions and Shapley value \(\phi_{i}\) may be negative, which results in an unusable negative/undefined \(r_{i}^{*}\). This issue can be averted while preserving P3 by upweighting non-negative MCs such as to the empty set.

After explaining the desiderata for model reward \(q_{i}(\theta)\) and reward values \(r_{i}\) and \(r_{i}^{*}\) for every party \(i\in N\), we are now ready to solve for \(q_{i}(\theta)\) such that \(r_{i}=r_{i}^{*}\).

## 5 Reward Control Mechanisms

This section discusses two mechanisms to generate model reward \(q_{i}(\theta)\) with different attained reward value \(r_{i}\) for every party \(i\in N\) by controlling a _single_ continuous parameter and solving for its value such that the attained reward value equates the target reward value: \(r_{i}=r_{i}^{*}\). We will discuss the more obvious reward mechanism in Sec. 5.1 to contrast its cons with the pros of that in Sec. 5.2. Both reward mechanisms do not request new information from the parties; thus, the DP post-processing property applies, and every party \(k\) is still guaranteed at least its original DP guarantee or stronger in all model rewards (i.e., P1 holds).

### Reward Control via Noise Addition

The work of [47] controls the reward values by adding Gaussian noise to the data outputs. We adapt it such that the mediator controls the reward value for party \(i\in N\) by adding Gaussian noise to the perturbed SS of each party \(k\in N\) instead. To generate the model reward for party \(i\) (superscripted), the mediator will reparameterize the sampled Gaussian noise vectors \(\{\boldsymbol{e}_{k}^{i}\sim\mathcal{N}(\boldsymbol{0},\boldsymbol{I})\}_{k \in N}\) to generate the further perturbed SS11

Footnote 11: To ease notation, we slightly abuse \(\boldsymbol{t}_{k}^{i}\) to represent both a random vector and its sample.

\[\boldsymbol{t}_{N}^{i}\triangleq\left\{\boldsymbol{t}_{k}^{i}\triangleq \boldsymbol{o}_{k}+\left(0.5\;\lambda\;\Delta_{2}^{2}(g_{k})\;\tau_{i}\right) ^{1/2}\boldsymbol{e}_{k}^{i}\right\}_{k\in N}\]

where \(\Delta_{2}^{2}(g_{k})\) is the squared \(\ell_{2}\)-sensitivity of function \(g_{k}\) that computes the exact SS \(\boldsymbol{s}_{k}\) from dataset \(\mathcal{D}_{k}\) (Sec. 2). Then, the mediator rewards party \(i\) with samples of model parameters \(\theta\) from the new DP noise-aware posterior \(q_{i}(\theta)=p(\theta|\boldsymbol{t}_{N}^{i})\).

Here, the scalar \(\tau_{i}\geq 0\) controls the additional noise variance and can be optimized via root-finding to achieve \(r_{i}=r_{i}^{*}\). The main advantage of this reward control mechanism is its interpretation of strengthening party \(k\)'s DP guarantee in all parties' model rewards (see P1). For example, it can be derived that if \(\epsilon_{k}=\infty\), then party \(k\) will now enjoy \((\lambda,1/\tau_{i})\)-DP guarantee in party \(i\)'s reward instead. If \(\epsilon_{k}<\infty\), then party \(k\) will now enjoy a stronger \((\lambda,\epsilon_{k}/(1+\tau_{i}\epsilon_{k}))\)-DP guarantee since \(\epsilon_{k}/(1+\tau_{i}\epsilon_{k})<\epsilon_{k}\).

However, this mechanism has some disadvantages. Firstly, for the same scaled additional noise variance \(\tau_{i}\), using different noise realizations \(\{\boldsymbol{e}_{k}^{i}\}_{k\in N}\) will lead to model reward \(q_{i}(\theta)\) with varyingsimilarity \(r^{\prime}_{i}\) to the grand coalition \(N\)'s posterior. The mechanism cannot efficiently select the best model reward with higher \(r^{\prime}_{i}\) (P5). Secondly, the value of \(r_{i}\) computed using such \(\bm{t}^{i}_{k}\) may be non-monotonic12 in \(\tau_{i}\) (see Fig. 2d), which makes it hard to bracket the smallest root \(\tau_{i}\) that solves for \(r_{i}=r^{*}_{i}\). To address these disadvantages, we will propose the next mechanism.

Footnote 12: Increasing \(\tau_{i}\) (i.e., using \(\bm{t}^{i}_{k}\) that diverges more from \(\bm{s}_{k}\)) can instead increase the surprise: The privacy-valuation trade-off (Sec. 3) only holds in _expectation_ across all noise and SS realizations.

### Reward Control via Likelihood Tempering

Intuitively, a party \(i\) who is assigned a lower target reward value \(r^{*}_{i}<v_{N}\) should be rewarded with posterior samples of model parameters \(\theta\) that use _less_ information from the datasets and SS of all parties. Sparked by the diffuse posterior algorithm [16], we propose that the mediator can generate such "less informative" samples for party \(i\) using the _normalized_ posterior13

Footnote 13: The normalized posterior is also known as the power posterior. [37] discuss useful interpretation and benefits such as synthetically reducing the sample size, increasing the ease of computation/MCMC mixing and robustness to model misspecifications.

\[q_{i}(\theta)\propto p(\theta)\left[p(\mathcal{D}_{N}|\theta)\right]^{\kappa_ {i}}\] (1)

involving the product of the prior \(p(\theta)\) and the data likelihood \(p(\mathcal{D}_{N}|\theta)\) to the power of (or, said in another way, tempered by a factor of) \(\kappa_{i}\). Notice that setting \(\kappa_{i}=0\) and \(\kappa_{i}=1\) recover the prior \(p(\theta)\) and the posterior \(p(\theta|\mathcal{D}_{N})\), respectively. Thus, setting \(\kappa_{i}\in(0,1)\) should smoothly interpolate between both. We can optimize \(\kappa_{i}\) to control \(q_{i}(\theta)\) so that \(r_{i}=r^{*}_{i}<v_{N}\).

But, _how do we temper the likelihood?_ We start by examining the easier, non-private setting. In Sec. 2, we stated that under our assumptions, the posterior \(p(\theta|\mathcal{D}_{N})\) can be computed by using the sum of data quantities \(\{c_{k}\}_{k\in N}\) and sum of exact SS \(\bm{s}_{N}\). In App. E, we further show that using the tempered likelihood \([p(\mathcal{D}_{N}|\theta)]^{\kappa_{i}}\) is equivalent to scaling the data quantities and the exact SS \(\bm{s}_{N}\) by the factor \(\kappa_{i}\) beforehand. In the private setting, the mediator can similarly scale the data quantities, the perturbed SS in \(\bm{o}_{N}\) (instead of the inaccessible exact SS), and the \(\ell_{2}\)-sensitivity by the factor \(\kappa_{i}\) beforehand; see App. E.3 for details. This likelihood tempering mechanism addresses both disadvantages of Sec. 5.1:

* There is no need to sample additional DP noise. We empirically show that tempering the likelihood produces a model reward that _interpolates_ between the prior vs. posterior (in App. G) and _preserves_ a higher similarity \(r^{\prime}_{i}\) to the grand coalition \(N\)'s posterior (P5 and hence, more group welfare P6) and better predictive performance than noise addition (see Sec. 6).
* Using a smaller tempering factor \(\kappa_{i}\in[0,1]\) provably decreases the attained reward value \(r_{i}\) (see App. E). Thus, as the relationship between \(r_{i}\) and \(\kappa_{i}\) is monotonic, we can find the only root by searching the interval \([0,1]\).

**Remark.** Our discussion on improving the estimate of \(v_{C}\) in the paragraph on implementation in Sec. 3 also applies to the estimate of \(r_{i}\) in Secs. 5.1 and 5.2. Thus, solving for \(\tau_{i}\) or \(\kappa_{i}\) to achieve \(r_{i}=r^{*}_{i}\) using any root-finding algorithm can only be accurate up to the variance in our estimate.

## 6 Experiments and Discussion

This section empirically evaluates the privacy-valuation and privacy-reward trade-offs (Sec. 6.1), reward control mechanisms (Sec. 6.2), and their relationship with the utility of the model rewards (Sec. 6.3). The time complexity of our scheme is analyzed in App. F and baseline methods are discussed in App. H.3. We consider _Bayesian linear regression_ (BLR) with unknown variance on the Syn and CaliH datasets, and _Bayesian logistic regression_ on the Diab dataset with \(3\) collaborating parties (see App. H.1 for details) and enforce \((2,\epsilon_{i})\)-Renyi DP. For **Synthetic BLR (Syn)**, we select and use a _normal inverse-gamma_ distribution (i) to generate the true regression model weights, variance, and a 2D-dataset and (ii) as our model prior \(p(\theta)\). We consider \(3\) parties with \(c_{1}=100\), \(c_{2}=200\), \(c_{3}=400\) data points, respectively. For **Californian Housing dataset (CaliH)**[44], as in [47], \(60\%\) of the CaliH data is deemed "public/historic" and used to pre-train a neural network without DP. Real estate firms may only care about the privacy of their newest transactions. As the parties' features-house values relationship may differ from the "public" dataset, we do transfer learning and selectively retrain only the last layer with BLR using the parties' data. Parties \(1\) to \(3\) have,respectively, \(20\%,30\%\), and \(50\%\) of the dataset with \(6581\) data points and \(6\) features. For **PIMA Indian Diabetes classification dataset (Diab)**[50], we use a Bayesian logistic regression model to predict whether a patient has diabetes based on sensitive inputs (e.g., patient's age, BMI, number of pregnancies). To reduce the training time, we only use the \(4\) PCA main components as features (to generate the approximate SS) [27]. Parties \(1,2\), and \(3\) have, respectively, \(20\%\), \(30\%\), and \(50\%\) of the dataset with \(614\) data points. As we are mainly interested14 in the impact of one party controlling its privacy guarantee \(\epsilon_{i}\), for all experiments, we only vary party \(2\)'s from the default \(0.1\). We fix the privacy guarantees of others (\(\epsilon_{1}=\epsilon_{3}=0.2\)) and \(\rho=0.2\) in the \(\rho\)-Shapley fair reward scheme, and analyze party \(2\)'s reward and utility. Note that as \(\epsilon_{2}\) increases (decreases), party \(2\) becomes the most (least) valuable of all parties.

Footnote 14: We defer the analysis of valuation function (e.g., impact of varying coverage of input space) to App. H.4.

### Privacy-valuation and Privacy-reward Trade-offs

For each dataset, we only vary the privacy guarantee of party \(i=2\) with \(\epsilon_{2}\in[0.004,0.02,0.1,0.5,2.5,12.5]\) and use the Gaussian mechanism and a fixed random seed to generate the perturbed SS \(\bm{o}_{2}\) from the exact SS \(\bm{s}_{2}\). Fig. 2a-c plot the mean and shades the standard error of \(v_{i}\), \(v_{N}\), \(\phi_{i}\), and \(r_{i}\) over \(5\) runs. The privacy-valuation and privacy-reward trade-offs can be observed: As the privacy guarantee weakens (i.e., \(\epsilon_{2}\) increases), party \(2\)'s valuation \(v_{2}\), Shapley value \(\phi_{2}\), and attained reward value \(r_{2}\) increase. When \(\epsilon_{2}\) is large, party \(2\) will be the most valuable contributor and rewarded with \(p(\theta|\bm{o}_{N})\), hence attaining \(r_{i}=v_{N}\). App. H.5 shows that the trade-offs do not hold for non-noise-aware inference.

### Reward Control Mechanisms

We use the Syn experiment to compare the reward mechanisms that vary the noise addition using \(\tau_{i}\) (Sec. 5.1) vs. temper the likelihood using \(\kappa_{i}\) (Sec. 5.2). The mechanisms control \(q_{i}(\theta)\) (i.e., used to generate party \(i\)'s model reward) to attain the target reward values. For each value of \(\tau_{i}\) and \(\kappa_{i}\) considered, we repeat the posterior sampling and KL estimation method \(5\) times. Figs. 2d and 2e-f use different sets of sampled noise \(\{\bm{e}_{k}^{i}\}_{k\in N}\) to demonstrate the stochastic relationship between \(r_{i}\) and \(\tau_{i}\). In Fig. 2d, the non-monotonic disadvantage of noise addition can be observed: As \(\tau_{i}\) increases, \(r_{i}\) does not consistently decrease, hence making it hard to solve for the smaller \(\tau_{i}\) that attains \(r_{i}^{*}=3\). In contrast, as \(\kappa_{i}\) decreases from \(1\), \(r_{i}\) consistently decreases. Furthermore, in Fig. 2f, we demonstrate the other advantage of likelihood tempering: For the same \(r_{i}\), tempering the likelihood leads to a higher similarity \(r_{i}^{\prime}\) to the posterior \(p(\theta|\bm{o}_{N})\) than noise addition. In App. H.6, we report the relationship between \(r_{i}\) vs. \(\kappa_{i}\) and \(\tau_{i}\) for the other real-world datasets.

### Utility of Model Reward

The utility (or the predictive performance) of both Bayesian models can be assessed by the _mean negative log probability_ (MNLP) of a non-private test set.15 In short, MNLP reflects how unlikely the test set is given the perturbed SS and additionally cares about the uncertainty/confidence in the model predictions (e.g., due to the impact of DP noise). MNLP will be higher (i.e., worse) when the model

Figure 2: (a-c) Graphs of party \(2\)’s valuation \(v_{2}\), Shapley value \(\phi_{2}\), attained reward value \(r_{2}\) vs. privacy guarantee \(\epsilon_{2}\) for various datasets. (d-e) Graphs of attained reward value \(r_{i}\) vs. \(\kappa_{i}\) (Sec. 5.2) and \(\tau_{i}\) (Sec. 5.1) for \(2\) different noise realizations. (f) Graph of similarity \(r_{i}^{\prime}\) to grand coalition \(N\)’s posterior \(p(\theta|\bm{o}_{N})\) vs. \(r_{i}\) for Syn dataset corresponding to (e).

is more uncertain of its accurate predictions or overconfident in inaccurate predictions on the test set; see App. H.2 for an in-depth definition.

**Privacy trade-offs.** Figs. 3a-c illustrate the privacy-utility trade-off described in Sec. 1: As \(\epsilon_{2}\) decreases (i.e., privacy guarantee strengthens), the MNLP\({}_{N}\) of grand coalition \(N\)'s collaboratively trained model and the MNLP\({}_{i}\) of party \(i=2\)'s individually trained model generally increase, so their utilities drop (\(\dagger\)). This motivates the need to incentivize party \(2\) against selecting an excessively small \(\epsilon_{2}\) by enforcing privacy-valuation and privacy-reward trade-offs. From Figs. 3a-c, the impact of our scheme _enforcing_ the trade-offs can be observed: As \(\epsilon_{2}\) decreases, the MNLP\({}_{r}\) of party \(i=2\)'s model reward increases.

_Remark_.: In Fig. 3c, an exception to (\(\dagger\)) is observed. The exception illustrates that the privacy-valuation trade-off may not hold for a valuation function based on the performance on a validation set.

**Individual rationality.** It can be observed from Figs. 3a-c that as \(\epsilon_{2}\) decreases, the MNLP\({}_{r}\) of party \(i=2\)'s model reward increases much less rapidly than the MNLP\({}_{i}\) of its individually trained model. So, it is rational for party \(i=2\) to join the collaboration to get a higher utility.

_Remark_.: Party \(i=2\)'s utility gain appears small when \(\epsilon_{2}\) is large due to parties \(1\) and \(3\)'s selection of strong privacy guarantee \(\epsilon=0.2\). Party \(i\) can gain more when other parties require weaker privacy guarantees such as \(\epsilon=2\) instead (see App. H.5).

**Likelihood tempering is a better reward control mechanism.** Extending Sec. 6.2, we compare the utility of party \(i\)'s model reward generated by noise addition vs. likelihood tempering in Figs. 3d-f. Across all experiments, likelihood tempering (with \(\kappa_{i}\)) gives (i) a lower MNLP\({}_{r}\) and hence a higher utility, and (ii) a lower variance in MNLP\({}_{r}\) than varying the noise addition (with \(\tau_{i}\)).

## 7 Related Works

Fig. 5 in App. B gives a diagrammatic overview showing how our work fills the gap in existing works.

**Data Valuation.** Most data valuation methods are not differentially private and directly access the data. For example, computing the information gain [47] or volume [59] requires the design matrix. While it is possible to make these valuation methods differentially private (see App. H.3) or value DP trained models using validation accuracy (on an agreed, _public_ validation set), the essential properties of our valuation function (V2-V3) may not hold.

**Privacy Incentive.** Though the works of [20, 60] reward parties directly proportional to their privacy budget, their methods do not incentivize data sharing as a party does not fairly receive a higher reward value for contributing a larger, more informative dataset. While the work of [28] artificially creates a privacy-reward trade-off by paying each party \(i\) the product of its raw data's Shapley value \(\phi_{i}\) and a monotonic transformation of \(\epsilon_{i}\), it neither ensures DP w.r.t. the mediator nor fairly considers how a stronger DP guarantee may reduce party \(i\)'s marginal contribution to others (hence \(\phi_{i}\)). The work of [13] considers data acquisition from parties with varying privacy requirements but focuses on the mean estimation problem and designing payment and privacy loss functions to get parties to report their true unit cost of privacy loss. Our work here distinctively considers Bayesian models and fairness and allows parties to choose their privacy guarantees directly while explicitly enforcing a privacy-reward trade-off.

Figure 3: (a-c) Graphs of utility of party \(2\)’s model reward measured by MNLP\({}_{r}\) vs. privacy guarantee \(\epsilon_{2}\) for various datasets. (d-f) Graphs of utility of model reward measured by MNLP\({}_{r}\) vs. attained reward value \(r_{i}\) under the two reward control mechanisms for various datasets.

**Difficulties ensuring incentives with existing DP/FL works.** The _one posterior sampling_ (OPS) method [56, 16] proposes that each party \(i\) can achieve DP by directly releasing samples from the posterior \(p(\theta|\mathcal{D}_{i})\) (if the log-likelihood is bounded). However, OPS is data inefficient and may not guarantee privacy for approximate inference [15]. It is unclear how we can privately value a coalition \(C\) and sample from the joint posterior \(p(\theta|\{\mathcal{D}_{i}\}_{i\in C})\). DP-FedAvg/DP-FedSGD [36] or DP-SGD [1] enable collaborative but private training of neural networks by requiring each party \(i\) to clip and add Gaussian noise to its submitted gradient updates. However (in addition to the valuation function issue above), it is tricky to ensure that the parties' rewards satisfy data sharing incentives. In each round of FL, parties selected will receive the (same) latest model parameters to compute gradient updates. This setup goes against the fairness (P3) incentive as parties who share less informative gradients should be rewarded with lower quality model parameters instead. Although the unfairness may potentially be corrected via gradient-based [58] or monetary rewards, there is no DP reward scheme to guarantee a party better model reward from collaboration than in solitude or a higher monetary reward than its cost of participation, hence violating individual rationality.

## 8 Conclusion

Unlike existing works in collaborative ML that solely focus on the fairness incentive, our proposed scheme further (i) ensures privacy for the parties during valuation and in model rewards and (ii) enforces a privacy-valuation trade-off to deter parties from unfetteredly selecting excessive DP guarantees to maximize the utility of collaboratively trained models.16 This involves novelly combining our proposed Bayesian surprise valuation function and reward control mechanism with DP noise-aware inference. We empirically evaluate our scheme on several datasets. Our likelihood tempering reward control mechanism consistently preserves better predictive performance.

Footnote 16: App. I discusses the ethical implications and limitations of our work, and other questions a reader may have.

Our work has two limitations which future work should overcome. Firstly, we only consider ML models with SS (see App. A.1 for applications) and a single round of sharing information with the mediator as a case study to show the incentives and trade-offs can be achieved. Future work should generalize our scheme to ML models without an explicit SS.

Next, like the works of [18, 17, 25, 40, 47, 51] and others, we do not consider the truthfulness of submitted information and value data _as-is_. This limitation is acceptable for two reasons. 1) Parties such as hospitals and firms will truthfully share information as they are primarily interested in building and receiving a model reward of high quality and may additionally be bound by the collaboration's legal contracts and trusted data-sharing platforms. For example, with the use of X-road ecosystem,17 parties can upload a private database which the mediator can query for the perturbed SS. This ensures the authenticity of the data (also used by the owner) and truthful computation given the uploaded private database. 2) Each party would be more inclined to submit true information as any party \(k\) who submits fake SS will reduce its utility from the collaboration. This is because party \(k\)'s submitted SS is used to generate \(k\)'s model reward and cannot be replaced locally as party \(k\) will only receive posterior samples. Future work should seek to verify and incentivize truthfulness.

Footnote 17: https://joinup.ec.europa.eu/collection/ict-security/solution/x-road-data-exchange-layer/about, https://x-road.global/

## Acknowledgments and Disclosure of Funding

This research/project is supported by the National Research Foundation Singapore and DSO National Laboratories under the AI Singapore Programme (AISG Award No: AISG2-RP-\(2020\)-\(018\)). This work is also supported by the National Natural Science Foundation of China (62206139) and the Major Key Project of PCL (PCL2023AS7-1).

## References

* [1] M. Abadi, A. Chu, I. Goodfellow, H. B. McMahan, I. Mironov, K. Talwar, and L. Zhang. Deep learning with differential privacy. In _Proc. ACM CCS_, pages 308-318, 2016.
* [2] B. Balle and Y.-X. Wang. Improving the Gaussian mechanism for differential privacy: Analytical calibration and optimal denoising. In _Proc. ICML_, pages 394-403, 2018.
* [3] G. Bernstein and D. Sheldon. Differentially private Bayesian inference for exponential families. In _Proc. NeurIPS_, pages 2924-2934, 2018.
* [4] G. Bernstein and D. Sheldon. Differentially private Bayesian linear regression. In _Proc. NeurIPS_, pages 525-535, 2019.
* [5] C. M. Bishop. _Pattern Recognition and Machine Learning_. Springer, 2006.
* [6] Center for Open Data Enterprise. Sharing and utilizing health data for AI applications. Roundtable report, 2019.
* [7] Y. Chen, Y. Shen, and S. Zheng. Truthful data acquisition via peer prediction. In _Proc. NeurIPS_, 2020.
* [8] K. Choi, M. Liao, and S. Ermon. Featurized density ratio estimation. In _Proc. UAI_, pages 172-182, 2021.
* [9] J. Conway. _Artificial Intelligence and Machine Learning: Current Applications in Real Estate_. PhD thesis, Massachusetts Institute of Technology, 2018.
* [10] T. Cover and J. Thomas. _Elements of Information Theory_. John Wiley & Sons, Inc., 1991.
* [11] C. Dwork, F. McSherry, K. Nissim, and A. Smith. Calibrating noise to sensitivity in private data analysis. In _Proc. TCC_, pages 265-284, 2006.
* [12] C. Dwork and A. Roth. The algorithmic foundations of differential privacy. _Foundations and Trends(r) in Theoretical Computer Science_, 9(3-4):211-407, 2014.
* [13] A. Fallah, A. Makhdoumi, A. Malekian, and A. Ozdaglar. Optimal and differentially private data acquisition: Central and local mechanisms. arXiv:2201.03968, 2022.
* [14] T. Farrand, F. Mireshghallah, S. Singh, and A. Trask. Neither private nor fair: Impact of data imbalance on utility and fairness in differential privacy. In _Proc. ACM CCS Workshop on Privacy-Preserving Machine Learning in Practice_, pages 15-19, 2020.
* [15] J. Foulds, J. Geumlek, M. Welling, and K. Chaudhuri. On the theory and practice of privacy-preserving Bayesian data analysis. In _Proc. UAI_, pages 192-201, 2016.
* [16] J. Geumlek, S. Song, and K. Chaudhuri. Renyi differential privacy mechanisms for posterior sampling. In _Proc. NIPS_, pages 5289-5298, 2017.
* [17] A. Ghorbani, M. P. Kim, and J. Zou. A distributional framework for data valuation. In _Proc. ICML_, pages 3535-3544, 2020.
* [18] A. Ghorbani and J. Zou. Data Shapley: Equitable valuation of data for machine learning. In _Proc. ICML_, pages 2242-2251, 2019.
* [19] M. D. Hoffman and A. Gelman. The No-U-Turn sampler: Adaptively setting path lengths in Hamiltonian Monte Carlo. _JMLR_, 15(1):1593-1623, 2014.
* [20] R. Hu and Y. Gong. Trading data for learning: Incentive mechanism for on-device federated learning. In _Proc. GLOBECOM_, pages 1-6, 2020.
* [21] J. Huggins, R. P. Adams, and T. Broderick. PASS-GLM: polynomial approximate sufficient statistics for scalable Bayesian GLM inference. In _Proc. NIPS_, pages 611--3621, 2017.
* [22] N. Hynes, D. Dao, D. Yan, R. Cheng, and D. Song. A demonstration of Sterling: A privacy-preserving data marketplace. _Proc. VLDB Endowment_, 11(12):2086-2089, 2018.

* [23] L. Itti and P. Baldi. Bayesian surprise attracts human attention. _Vision Research_, 49(10):1295-1306, 2009.
* [24] R. Jia, D. Dao, B. Wang, F. A. Hubis, N. M. Gurel, B. Li, C. Zhang, C. Spanos, and D. Song. Efficient task-specific data valuation for nearest neighbor algorithms. _Proc. VLDB Endowment_, 12(11):1610-1623, 2019.
* [25] R. Jia, D. Dao, B. Wang, F. A. Hubis, N. Hynes, N. M. Gurel, B. Li, C. Zhang, D. Song, and C. Spanos. Towards efficient data valuation based on the Shapley value. In _Proc. AISTATS_, pages 1167-1176, 2019.
* [26] T. Kulkarni, J. Jalko, S. Kaski, and A. Honkela. Locally differentially private Bayesian inference. arXiv:2110.14426, 2021.
* [27] T. Kulkarni, J. Jalko, A. Koskela, S. Kaski, and A. Honkela. Differentially private Bayesian inference for generalized linear models. In _Proc. ICML_, pages 5838-5849, 2021.
* [28] J. Liu, J. Lou, J. Liu, L. Xiong, J. Pei, and J. Sun. Dealer: an end-to-end model marketplace with differential privacy. _Proc. VLDB Endowment_, 14(6):957-969, 2021.
* [29] Y. Liu and J. Wei. Incentives for federated learning: A hypothesis elicitation approach. arXiv:2007.10596, 2020.
* [30] O. Lobel. The problem with too much data privacy. _Time Magazine_, 27 Oct 2022.
* [31] H. Lv, Z. Zheng, T. Luo, F. Wu, S. Tang, L. Hua, R. Jia, and C. Lv. Data-free evaluation of user contributions in federated learning. In _Proc. IEEE WiOpt_, 2021.
* [32] L. Lyu, Y. Li, K. Nandakumar, J. Yu, and X. Ma. How to democraise and protect AI: Fair and differentially private decentralised deep learning. _IEEE Transactions on Dependable and Secure Computing_, 19(2):1003-1017, 2022.
* [33] M. Maschler and B. Peleg. A characterization, existence proof and dimension bounds for the kernel of a game. _Pacific J. Mathematics_, 18(2):289-328, 1966.
* [34] B. McMahan, E. Moore, D. Ramage, S. Hampson, and B. A. y Arcas. Communication-efficient learning of deep networks from decentralized data. In _Proc. AISTATS_, pages 1273-1282, 2017.
* [35] B. McMahan and A. Thakurta. Federated learning with formal differential privacy guarantees. Google AI Blog, Google Research, Feb 2022.
* [36] H. B. McMahan, D. Ramage, K. Talwar, and L. Zhang. Learning differentially private recurrent language models. In _Proc. ICLR_, 2018.
* [37] J. W. Miller and D. B. Dunson. Robust Bayesian inference via coarsening. _Journal of the American Statistical Association_, 2018.
* [38] I. Mironov. Renyi differential privacy. In _Proc. 30th IEEE Computer Security Foundations Symposium (CSF)_, pages 263-275, 2017.
* [39] K. P. Murphy. _Probabilistic Machine Learning: An Introduction_. MIT Press, 2022.
* [40] Q. P. Nguyen, B. K. H. Low, and P. Jaillet. Trade-off between payoff and model rewards in Shapley-fair collaborative machine learning. In _Proc. NeurIPS_, 2022.
* [41] F. Nielsen and R. Nock. Entropies and cross-entropies of exponential families. In _Proc. IEEE ICIP_, pages 3621-3624, 2010.
* [42] Y.-K. Noh, M. Sugiyama, S. Liu, M. C. Plessis, F. C. Park, and D. D. Lee. Bias reduction and metric learning for nearest-neighbor estimation of Kullback-Leibler divergence. In _Proc. AISTATS_, pages 669-677, 2014.
* [43] Ocean Protocol Foundation. Ocean Protocol: A decentralized substrate for AI data and services. Technical whitepaper, 2019.

* [44] R. K. Pace and R. Barry. Sparse spatial auto-regressions. _Statistics and Probability Letters_, 33(3):291-297, 1997.
* [45] F. Perez-Cruz. Kullback-Leibler divergence estimation of continuous distributions. In _Proc. IEEE ISIT_, pages 1666-1670, 2008.
* [46] R. H. L. Sim, X. Xu, and B. K. H. Low. Data valuation in machine learning: "ingredients", strategies, and open challenges. In _Proc. IJCAI_, pages 5607-5614, 2022.
* [47] R. H. L. Sim, Y. Zhang, M. C. Chan, and B. K. H. Low. Collaborative machine learning with incentive-aware model rewards. In _Proc. ICML_, pages 8927-8936, 2020.
* [48] A. Singh and D. Koutra. Lecture 16 of 10-704: Information processing and learning course. Carnegie Mellon University, 19 March 2015.
* [49] S. Singh and B. Poczos. Finite-sample analysis of fixed-\(k\) nearest neighbor density functional estimators. In _Proc. NIPS_, 2016.
* [50] J. W. Smith, J. E. Everhart, W. C. Dickson, W. C. Knowler, and R. S. Johannes. Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In _Proc. Annu. Symp. Comput. Appl. Med. Care_, pages 261-265, 1988.
* [51] S. S. Tay, X. Xu, C. S. Foo, and B. K. H. Low. Incentivizing collaboration in machine learning via synthetic data rewards. In _Proc. AAAI_, pages 9448-9456, 2022.
* [52] M. Titsias. Variational learning of inducing variables in sparse Gaussian processes. In _Proc. AISTATS_, pages 567-574, 2009.
* [53] J. T. Wang and R. Jia. A note on "Towards efficient data valuation based on the shapley value". arXiv:2302.11431, 2023.
* [54] Q. Wang, S. R. Kulkarni, and S. Verdu. Divergence estimation for multidimensional densities via \(k\)-nearest-neighbor distances. _IEEE Transactions on Information Theory_, 55(5):2392-2405, 2009.
* [55] T. Wang, J. Rausch, C. Zhang, R. Jia, and D. Song. A principled approach to data valuation for federated learning. In Q. Yang, L. Fan, and H. Yu, editors, _Federated Learning_, volume 12500 of _Lecture Notes in Computer Science_, pages 153-167. Springer, Cham, 2020.
* [56] Y. X. Wang, S. Fienberg, and A. Smola. Privacy for free: Posterior sampling and stochastic gradient Monte Carlo. In _Proc. ICML_, pages 2493-2502, 2015.
* [57] L. Watson, R. Andreeva, H. Yang, and R. Sarkar. Differentially private Shapley values for data evaluation. arXiv:2206.00511, 2022.
* [58] X. Xu, L. Lyu, X. Ma, C. Miao, C. S. Foo, and B. K. H. Low. Gradient driven rewards to guarantee fairness in collaborative machine learning. In _Proc. NeurIPS_, pages 16104-16117, 2021.
* [59] X. Xu, Z. Wu, C. S. Foo, and B. K. H. Low. Validation free and replication robust volume-based data valuation. In _Proc. NeurIPS_, pages 10837-10848, 2021.
* [60] Y. Xu, M. Xiao, H. Tan, A. Liu, G. Gao, and Z. Yan. Incentive mechanism for differentially private federated learning in Industrial Internet of Things. _IEEE Transactions On Industrial Informatics_, 18(10):6927-6939, 2022.
* [61] M. Yang, L. Lyu, J. Zhao, T. Zhu, and K.-Y. Lam. Local differential privacy and its applications: A comprehensive survey. arXiv:2008.03686, 2020.
* [62] Q. Yang, Y. Liu, T. Chen, and Y. Tong. Federated machine learning: Concept and applications. _ACM Transactions on Intelligent Systems and Technology_, 10(2):1-19, 2019.
* [63] J. Yoon, S. O. Arik, and T. Pfister. Data valuation using reinforcement learning. In _Proc. ICML_, pages 10842-10851, 2020.

* [64] L. Zhang, T. Zhu, P. Xiong, W. Zhou, and P. S. Yu. More than privacy: Adopting differential privacy in game-theoretic mechanism design. _ACM Comput. Surv._, 54(7), 2022.
* [65] B. Z. H. Zhao, M. A. Kaafar, and N. Kourtellis. Not one but many tradeoffs: Privacy vs. utility in differentially private machine learning. In _Proc. ACM SIGSAC Conference on Cloud Computing Security Workshop_, pages 15-26, 2020.
* [66] P. Zhao and L. Lai. Minimax optimal estimation of KL divergence for continuous distributions. _IEEE Transactions on Information Theory_, 66(12):7787-7811, 2020.

Fundamental Concepts

In this section, we will elaborate on concepts from Sec. 2 in more detail.

### Sufficient Statistics

Bayesian learning involves updating our belief of the likely values of the model parameters \(\theta\), captured in the prior \(p(\theta)\), to a posterior belief \(p(\theta|\mathcal{D}_{i})\propto p(\theta)\times p(\mathcal{D}_{i}|\theta)\). The posterior belief gets more concentrated (around the maximum likelihood estimate) after observing a larger dataset \(\mathcal{D}_{i}\).

The statistic \(\bm{s}_{i}\) is a SS for \(\mathcal{D}_{i}\) if \(\theta\) and \(\mathcal{D}_{i}\) are conditionally independent given \(\bm{s}_{i}\), i.e., \(p(\theta|\mathcal{D}_{i})=p(\theta|\bm{s}_{i},\mathcal{D}_{i})=p(\theta|\bm{s }_{i})\)[48, 52]. Knowing the dataset \(\mathcal{D}_{i}\) does not provide any extra information about \(\theta\) beyond the SS \(\bm{s}_{i}\). SS exists for exponential family models [5] and Bayesian linear regression [39]. Approximate SS has been proposed by [21] for generalized linear models. For more complex data such as images, we can use pre-trained neural networks like VGG-\(16\) as feature extractors and generate SS from the last hidden layer's outputs.

Bayesian Linear Regression.In linear regression, each datum consists of the input \(\bm{x}\in\mathbb{R}^{w}\) and the output variable \(y\in\mathbb{R}\). Let \(\mathcal{D}\) denote the dataset with \(c\) data points, and \(\bm{y}\) and \(\bm{X}\) be the corresponding concatenated output vector and design matrix in \(\mathbb{R}^{c\times w}\). Bayesian linear regression models the relationship as \(\bm{y}=\bm{X}\bm{w}+\mathcal{N}(0,\sigma^{2}\bm{I})\) where the model parameters \(\theta\) consists of the weight parameters \(\bm{w}\in\mathbb{R}^{w}\) and the noise variance \(\sigma^{2}\). The likelihood

\[p(\bm{y}|\bm{X},\bm{w},\sigma^{2}) =(2\pi\sigma^{2})^{-\frac{5}{2}}\exp\left(-\frac{(\bm{y}-\bm{X} \bm{w})^{\top}(\bm{y}-\bm{X}\bm{w})}{2\sigma^{2}}\right)\] \[=(2\pi\sigma^{2})^{-\frac{5}{2}}\exp\left[\frac{-1}{2\sigma^{2}} \bm{y}^{\top}\bm{y}+\frac{1}{\sigma^{2}}\bm{w}^{\top}\bm{X}^{\top}\bm{y}-\frac {1}{2\sigma^{2}}\bm{w}^{\top}\bm{X}^{\top}\bm{X}\bm{w}\right]\,.\]

only depends on data via the sufficient statistics \(\bm{s}=(\bm{y}^{\top}\bm{y},\bm{X}^{\top}\bm{y},\bm{X}^{\top}\bm{X})\). Concretely, when the prior \(p(\theta)\) of the weights and variance follow a normal inverse-gamma distribution, \(\texttt{NIG}(\bm{0},\bm{V}_{0},a_{0},b_{0})\), the posterior \(p(\theta|\mathcal{D}_{i})\) is the normal inverse-gamma distribution \(\texttt{NIG}(\bm{w}_{i},\bm{V}_{i},a_{0}+c_{i}/2,b_{i})\) where \(c_{i}\) is the number of data points and

\[\bm{w}_{i}=\bm{V}_{i}\bm{X}_{i}^{\top}\bm{y}_{i}\qquad\bm{V}_{i}=\left(\bm{V}_ {0}^{-1}+\bm{X}_{i}^{\top}\bm{X}_{i}\right)^{-1}\qquad b_{i}=b_{0}+(1/2)\left[ \bm{y}_{i}^{\top}\bm{y}_{i}-\bm{w}_{i}^{\top}\bm{V}_{i}^{-1}\bm{w}_{i}\right]\]

can be computed directly from \(\bm{s}_{i}\). The posterior belief \(p(\theta|\mathcal{D}_{i},\mathcal{D}_{j})\) given parties \(i\) and \(j\)'s dataset can be similarly computed using the SS of their pooled dataset, \(\bm{s}_{ij}\). As the SS \(\bm{s}_{ij}\) works out to \(\bm{s}_{i}+\bm{s}_{j}\), we only need \(\bm{s}_{i}\) and \(\bm{s}_{j}\) from party \(i\) and \(j\) instead of their private datasets.

Generalized Linear Model (GLM).A _generalized linear model_ (GLM) generalizes a linear model by introducing an inverse link function \(\Upsilon\). The probability of observing the output \(y\) given input \(\bm{x}=(x_{(1)},\ldots,x_{(w)})\) and model weights \(\theta\) depends on their dot product

\[p(y|\bm{x},\theta)=p(y|\Upsilon(\bm{x}^{\top}\theta))\,.\]

Next, we define the _GLM mapping function_\(\upsilon\) to the log-likelihood of observing \(y\) given the GLM model. Formally,

\[\upsilon(y,\bm{x}^{\top}\theta)\triangleq\log p(y|\Upsilon(\bm{x}^{\top}\theta ))\,.\]

As an example, logistic regression is a GLM with \(\Upsilon\) defined as the sigmoid function and \(p(y=\pm 1|\texttt{signoid}(\bm{x}^{\top}\theta))\) follows a Bernoulli distribution. As the non-linearity of \(\Upsilon\) disrupts the exponential family structure, logistic regression and other GLMs do not have sufficient statistics. Logistic regression's GLM mapping function \(\upsilon_{\texttt{log}}(y,\bm{x}^{\top}\theta)=-\log(1+\exp(-y\bm{x}^{\top} \theta))\).

[21] propose to approximate the _GLM mapping function_\(\upsilon\) with an \(M\)-degree polynomial approximation \(\upsilon_{M}\). \(\upsilon_{M}\) is an exponential family model with sufficient statistics \(g(d)=\left\{\prod_{i=1}^{w}(yx_{(i)})^{m_{i}}|\sum_{i}m_{i}\leq M,\forall i\,\,m_ {i}\in\mathbb{Z}_{0}^{+}\right\}\). These SS are the _polynomial approximate sufficient statistics_ for GLMs. For example, when \(M=2\) and \(\bm{x}=(x_{(1)},x_{(2)})\), \(g(d)=\left[1,x_{(1)}y,x_{(2)}y,x_{(1)}^{2}y^{2},x_{(2)}^{2}y^{2},x_{(1)}x_{(2)}y ^{2}\right]\).

### Differential Privacy

_Remark 1_.: Our work aims to ensure _example-level DP_ for each collaborating party: A party updating/adding/deleting a single datum will only change the perturbed SS visible to the mediator and the corresponding belief of the model parameters in a provably minimal way. We are not ensuring _user-level DP_: The belief of model parameters only changes minimally after removing a collaborating party's (or a user/data owner's) dataset, possibly with multiple data points [35].

Intuitively, a DP algorithm \(\mathcal{R}:\mathcal{D}\rightarrow\bm{o}\) guarantees that each output \(\bm{o}\) is almost equally likely regardless of the inclusion or exclusion of a data point \(\bm{d}\) in \(\mathcal{D}\). This will allay privacy concerns and incentivize a data owner to contribute its data point \(\bm{d}\) since even a knowledgeable attacker cannot infer the presence or absence of \(\bm{d}\).

The works on noise-aware inference [27, 4] assume that the input \(\bm{x}\) and output \(y\) of any data point have known _bounded_ ranges. We will start by introducing our domain-dependent definitions:

**Definition A.1** (Neighboring datasets).: Two datasets \(\mathcal{D}\) and \(\mathcal{D}^{\prime}\) are neighboring if \(\mathcal{D}^{\prime}\) can be obtained from \(\mathcal{D}\) by replacing a single data point. The total number of data points and all other data points are the same.

**Definition A.2** (Sensitivity [11]).: The sensitivity of a function \(g\) that takes in dataset \(\mathcal{D}_{k}\) quantifies the maximum impact a data point can have on the function output. The \(\ell_{1}\)-sensitivity \(\Delta_{1}(g)\) and \(\ell_{2}\)-sensitivity \(\Delta_{2}(g)\) measure the impact using the \(\ell_{1}\) and \(\ell_{2}\) norm, respectively. Given that \(\mathcal{D}^{\prime}_{i}\) must be a neighboring dataset of \(\mathcal{D}_{i}\),

\[\Delta_{1}(g) \triangleq\max_{\mathcal{D}_{i},\mathcal{D}^{\prime}_{i}}\lVert g (\mathcal{D}_{i})-g(\mathcal{D}^{\prime}_{i})\rVert_{1}\;,\] \[\Delta_{2}(g) \triangleq\max_{\mathcal{D}_{i},\mathcal{D}^{\prime}_{i}}\lVert g (\mathcal{D}_{i})-g(\mathcal{D}^{\prime}_{i})\rVert_{2}\;.\]

In our problem, \(g\) computes the exact SS \(\bm{s}_{i}\) for \(\mathcal{D}_{i}\). The sensitivity can be known/computed if the dataset is normalized and the feature ranges are bounded.

We start with the definition of \(\epsilon\)-differential privacy. The parameter \(\epsilon\) bounds how much privacy is lost by releasing the algorithm's output.

**Definition A.3** (Pure \(\epsilon\)-DP [11]).: A randomized algorithm \(\mathcal{R}:\mathcal{D}\rightarrow\bm{o}\) with range \(\mathcal{O}\) is \(\epsilon\)-DP if for all neighboring datasets \(\mathcal{D}\) and \(\mathcal{D}^{\prime}\) and possible output subset \(\mathcal{O}\subset Range(\mathcal{R})\),

The Laplace mechanism [11] is an \(\epsilon\)-DP algorithm. Instead of releasing the exact SS \(\bm{s}_{i}\), the mechanism will output a sample of the perturbed SS \(\bm{o}_{i}\sim\mathrm{Laplace}(\bm{s}_{i},(\Delta_{1}(g)/\epsilon)\;\bm{I})\).

A common relaxation of \(\epsilon\)-differential privacy is \((\epsilon,\delta)\)-differential privacy. It can be interpreted as \(\epsilon\)-DP but with a failure of probability at most \(\delta\).

**Definition A.4** (\((\epsilon,\delta)\)-Dp).: A randomized algorithm \(\mathcal{R}:\mathcal{D}\rightarrow\bm{o}\) with range \(\mathcal{O}\) is \((\epsilon,\delta)\)-differentially private if for all neighboring datasets \(\mathcal{D}\) and \(\mathcal{D}^{\prime}\) and possible output subset \(\mathcal{O}\subset Range(\mathcal{R})\),

\[P(\mathcal{R}(\mathcal{D})\in\mathcal{O})\leq e^{\epsilon}P(\mathcal{R}( \mathcal{D}^{\prime})\in\mathcal{O})+\delta\;.\]

The Gaussian mechanism is an \((\epsilon,\delta)\)-DP algorithm. The variance of the Gaussian noise to be added can be computed by the analytic Gaussian mechanism algorithm [2].

In the main paper, we have also discussed another relaxation of \(\epsilon\)-differential privacy that is reproduced below:

**Definition A.5** (Renyi DP [38]).: A randomized algorithm \(\mathcal{R}:\mathcal{D}\rightarrow\bm{o}\) is \((\lambda,\epsilon)\)-Renyi differentially private if for all neighboring datasets \(\mathcal{D}\) and \(\mathcal{D}^{\prime}\), the Renyi divergence of order \(\lambda>1\) is \(D_{\lambda}(\mathcal{R}(\mathcal{D})\;||\;\mathcal{R}(\mathcal{D}^{\prime}))\leq\epsilon\) where

\[D_{\lambda}(\mathcal{R}(\mathcal{D})\;||\;\mathcal{R}(\mathcal{D}^{\prime})) \triangleq\frac{\log\mathbb{E}_{\bm{o}\sim\mathcal{R}(\mathcal{D}^{\prime})} \bigg{[}\frac{P(\mathcal{R}(\mathcal{D})=\bm{o})}{P(\mathcal{R}(\mathcal{D}^{ \prime})=\bm{o})}\bigg{]}^{\lambda}}{\lambda-1}\;.\]When \(\lambda=\infty\), Renyi DP becomes pure \(\epsilon\)-DP. Decreasing \(\lambda\) emphasizes less on unlikely large values and emphasizes more on the average value of the privacy loss random variable \(\log\left[P(\mathcal{R}(\mathcal{D})=\bm{o})/P(\mathcal{R}(\mathcal{D}^{\prime}) =\bm{o})\right]\) with \(\bm{o}\sim\mathcal{R}(\mathcal{D}^{\prime})\).

The Gaussian mechanism is a \((\lambda,\epsilon)\)-Renyi DP algorithm. Instead of releasing the exact SS \(\bm{s}_{i}\), the mechanism will output a sample of the perturbed SS \(\bm{o}_{i}\sim\mathcal{N}\left(\bm{s}_{i},\;0.5\;(\lambda/\epsilon)\;\Delta_{ 2}^{2}(g)\;\bm{I}\right)\).

Post-processing.A common and important property of all DP algorithms/mechanisms is their _robustness to post-processing_: Processing the output of a DP algorithm \(\mathcal{R}\) without access to the underlying dataset will retain the same privacy loss and guarantees [12].

Choosing Renyi-DP over \((\epsilon,\delta)\)-DP.In our work, we consistently use the Gaussian mechanism in all the experiments, like in that of [27]. We choose Renyi DP over \((\epsilon,\delta)\)-DP due to the advantages stated below:

* Renyi-DP is a stronger DP notion according to [38]: While \((\epsilon,\delta)\)-DP allows for a complete failure of privacy guarantee with probability of at most \(\delta\), Renyi-DP does not and the privacy bound is only loosened more for less likely outcomes. Additionally, [38] claims that it is harder to analyze and optimize \((\epsilon,\delta)\)-DP due to the trade-off between \(\epsilon\) and \(\delta\). More details can be found in [38].
* Renyi-DP supports easier composition: In a collaborative ML framework, each party \(i\) may need to release multiple outputs on the same dataset \(\mathcal{D}_{i}\) such as the SS and other information for preprocessing steps (e.g., principal component analysis). Composition rules bound the total privacy cost \(\hat{\epsilon}\) of releasing multiple outputs of differentially private mechanisms. It is harder to keep track of the total privacy cost when using \((\epsilon,\delta)\)-DP due to advanced composition rules and the need to choose from a wide selection of possible \((\epsilon(\delta),\delta)\)[38]. In contrast, the composition rule (i.e., Proposition 1 in [38]) is straightforward: When \(\lambda\) is a constant, the \(\epsilon\) of different mechanisms can simply be summed.

Note that the contribution of our work will still hold for \((\epsilon,\delta)\)-DP (using the Gaussian mechanism) and \(\epsilon\)-DP (using the Laplace mechanism) with some modifications of the inference process and proofs.

_Remark 2_.: Our work is in the same spirit as local DP (and we also think that no mediator can be trusted to directly access any party's private dataset) but does not strictly satisfy the definition of local DP (see Def. A.6). In the definition, the local DP algorithm takes in a single input/datum and ensures the privacy of its output -- the perturbation mechanism is applied to every input independently. In contrast, in our case, a party may have multiple inputs and the perturbation mechanism is only applied to their aggregate statistics. Thus, a datum owner (e.g., a patient of a collaborating hospital) enjoys weaker privacy in our setting than the local DP setting.

**Definition A.6** (\(\epsilon\)-Local DP [61]).: A randomized algorithm \(\mathcal{R}\) is \(\epsilon\)-local DP if for any pair of data points \(d,d^{\prime}\in\mathcal{D}\) and for any possible output \(\mathcal{O}\subset Range(\mathcal{R})\),

\[P(\mathcal{R}(d)\in\mathcal{O})\leq e^{\epsilon}P(\mathcal{R}(d^{\prime})\in \mathcal{O})\;.\]

### DP Noise-Aware Inference

DP mechanisms introduce randomness and noise to protect the output of a function. _Noise-naive_ techniques ignore the added noise in downstream analysis. In contrast, _noise-aware_ techniques account for the noise added by the DP mechanism.

Consider a probabilistic model where the model parameters \(\theta\) generate the dataset \(\mathcal{D}_{i}\) which then generates the exact and perturbed _sufficient statistics_ of each party \(i\), which are modeled as random variables \(S_{i}\) and \(O_{i}\), respectively. The exact SS \(\bm{s}_{i}\) and perturbed SS \(\bm{o}_{i}\) computed by party \(i\) are _realizations_ of \(S_{i}\) and \(O_{i}\), respectively. As the mediator cannot observe \(i\)'s exact SS, \(S_{i}\) is a _latent_ random variable. Instead, the mediator observes \(i\)'s perturbed SS \(O_{i}\) which also contains noise \(Z_{i}\) added by the DP mechanism, i.e., \(O_{i}\triangleq S_{i}+Z_{i}\). The Gaussian mechanism to ensure \((\lambda,\epsilon)\)-Renyi DP sets \(Z_{i}\sim\mathcal{N}\left(\bm{0},\;0.5\;(\lambda/\epsilon)\;\Delta_{2}^{2}(g) \;\bm{I}\right)\). We depict the graphical model of our multi-party setting in Fig. 4.

Differences between exact, noise-naive and noise-aware inference.When the mediator observes the exact SS \(\bm{s}_{i}\) from party \(i\), the exact posterior belief \(p(\theta|S_{i}=\bm{s}_{i})\) can be computed in closed form based on App. A.1. However, when the mediator only observes the perturbed SS \(\bm{o}_{i}\), the mediator can only compute the noise-naive and noise-aware posterior beliefs instead. The _noise-naive_ posterior belief \(p(\theta|S_{i}=\bm{o}_{i})\) will neither reflect the unobservability of the exact SS random variable \(S_{i}\) accurately nor quantify the impact of the DP noise \(Z_{i}\). In contrast, for any party, the _DP noise-aware posterior belief_\(p(\theta|O_{i}=\bm{o}_{i})\), conveniently abbreviated as \(p(\theta|\bm{o}_{i})\), will quantify the impact of the noise added by the DP mechanism. (For a coalition \(C\) of parties, the DP noise-aware posterior belief is \(p(\theta|\bm{o}_{C})\triangleq p(\theta|\{O_{i}=\bm{o}_{i}\}_{i\in C})\), as described in Footnote 6.) The works of [3, 4, 27] have shown that DP noise-aware inference leads to a posterior belief that is better _calibrated_ (i.e., lower bias and better quantification of uncertainty without overconfidence) and of higher _utility_ (i.e., closer to the non-private posterior belief), thus a better predictive performance.

The main challenge of noise-aware inference lies in tractably approximating the integral \(p(O_{i}=\bm{o}_{i}|\theta)=\int p(\bm{s}_{i}|\theta)p(\bm{o}_{i}|\bm{s}_{i}) \,\text{d}\bm{s}_{i}\) and \(p(\bm{s}_{i}|\theta)=\int_{\{\mathcal{D}=(\bm{X},\bm{y}):g(\mathcal{D})=\bm{s} _{i}\}}p(\bm{X},\bm{y}|\theta)\,\text{d}\bm{X}\,d\bm{y}\) over all datasets. [3, 4, 27] exploit the observation that as the SS sum \(c\) individuals, the central limit theorem guarantees that the distribution \(p(\bm{s}_{i}|\theta)\) can be well-approximated by the Gaussian distribution \(\mathcal{N}(c\mu_{g},c\Sigma_{g})\) for large \(c\)[4]. Here, \(\mu_{g}\) and \(\Sigma_{g}\) are the mean and covariance of an individual's SS. [3, 4, 27, 26] prescribe how to compute \(\mu_{g}\) and \(\Sigma_{g}\) in closed form from the sampled \(\theta\) parameters and moments of \(\bm{x}\) and set the noise of the DP mechanism based on a sensitivity analysis. To approximate the posterior \(p(\theta|\bm{o})\), _Markov Chain Monte Carlo_ (MCMC) sampling steps are needed. [4] propose to use Gibbs sampling, an algorithm that updates a group of parameters at a time and exploits conditional independence, for Bayesian linear regression models. [27] use the No-U-Turn [19] sampler and utilizes Hamiltonian dynamics to explore the parameter space more efficiently for generalized linear models. We describe the BLR Gibbs sampler adapted for our multi-party setting in Algo 1.

Figure 4: In the graphical model above, all parties share the same prior belief \(p(\theta)\) of model parameters \(\theta\) and prior belief \(p(\omega)\) of data parameters \(\omega\). The mediator models its beliefs of the SS of each party separately and only observes the perturbed SS \(\bm{o}_{i}\) of every party \(i\in N\) (thus, only \(O_{i}\) is shaded). The sufficient statistic \(S_{i}\) is generated from the model inputs \(\bm{X}_{i}\) and the model output \(\bm{y}_{i}\) (which depends on the model parameters \(\theta\)). We illustrate the relationship between \(\omega\), \(X_{i}\), and \(S_{i}\) as dashed lines as they may be modeled differently in the various DP noise-aware inference methods. See [4, 27] for their respective graphical models and details.

**Algorithm 1** BLR Gibbs sampler [4] from noise-aware posterior \(p(\theta|O_{N}=\bm{o}_{N})\propto\int\prod_{i\in N}\left[p(\bm{o}_{i}|\bm{s}_{i}) \ p(\bm{s}_{i}|\theta)\right]p(\theta)\;\operatorname{d}\bm{s}_{1}\cdots \operatorname{d}\bm{s}_{n}\). The algorithm (repeatedly) sample the latent variables \(S_{i}\), \(\omega\) and \(\theta\) sequentially.

```
1:Shared prior \(p(\theta)\) of model parameters, prior \(p(\omega)\) of data parameters, data quantity \(c_{i}\), shared perturbed SS realization \(\bm{o}_{i}\), the Gaussian noise distribution of \(Z_{i}\) for every party \(i\in N\), number \(b\) of burn-in samples, number \(m\) of samples, Boolean parameter (shared) controlling if \(p(\bm{x})\) is the same across parties.
2:Sample the initial model parameters \(\theta^{(0)}\) from the prior \(p(\theta)\).
3:Sample the data prior parameters \(\omega^{(0)}\) from the prior \(p(\omega)\).
4:Compute the moments of \(X_{i}\) based on \(\omega\).
5:for\(t=1,\ldots,b+m\)do
6:for\(i=1,\ldots,n\)do
7: Compute the normal approximation of \(p(S_{i}|\theta)\), denoted as \(p_{\mathcal{N}}(S_{i}|\theta)\), using the moments of \(X_{i}\).
8: Sample \(\bm{s}_{i}^{(t)}\) from the product of two multivariate Gaussians \(p_{\mathcal{N}}(S_{i}|\theta)\ p(\bm{o}_{i}|S_{i})\), which is also multivariate Gaussian.
9:if not shared then
10: Use information from \(\bm{s}_{i}^{(t)}\) and \(c_{i}\) to perform conjugate update on \(p(\omega_{i})\) to obtain \(p(\omega_{i}|(\bm{s}_{i}^{(t)},c_{i}))\). Sample \(\omega_{i}^{(t)}\) and compute the moments of \(X_{i}\).
11:endif
12:endfor
13:ifshared then
14: Use information from \((\bm{s}_{i}^{(t)},c_{i})_{i\in N}\) to perform conjugate update on \(p(\omega)\) to obtain \(p(\omega|(\bm{s}_{i}^{(t)},c_{i})_{i\in N})\). Sample \(\omega^{(t)}\) and compute the moments of \(X_{i}\).
15:endif
16: Use \((\bm{s}_{i}^{(t)},c_{i})_{i\in N}\) to perform conjugate update on \(p(\theta)\) to obtain \(p(\theta|(\bm{s}_{i}^{(t)},c_{i})_{i\in N})\).
17: Sample \(\theta^{(t)}\) from \(p(\theta|(\bm{s}_{i}^{(t)},c_{i})_{i\in N})\).
18:if\(t>b\)then
19: Append \(\theta^{(t)}\) to \(\Theta\).
20:endif
21:endfor
22:return\(\Theta\) ```

**Algorithm 2** BLR Gibbs sampler [4] from noise-aware posterior \(p(\theta|O_{N}=\bm{o}_{N})\propto\int\prod_{i\in N}\left[p(\bm{o}_{i}|\bm{s}_{i })\ p(\bm{s}_{i}|\theta)\right]p(\theta)\;\operatorname{d}\bm{s}_{1}\cdots \operatorname{d}\bm{s}_{n}\). The algorithm (repeatedly) sample the latent variables \(S_{i}\), \(\omega\) and \(\theta\) sequentially.

## Appendix B Key Differences with Existing Data Valuation, Collaborative ML, and DP/FL Works

_Incentives for Data Sharing_

_Higher reward for contributing more valuable data_

_(fairness across parties, individual rationality, etc.)_

_Difference with existing data valuation and collaborative ML works considering incentives._ Our work aims to additionally (A) offer parties assurance about privacy but (B) deter them from selecting excessive privacy guarantees. We achieve (A) by ensuring differential privacy (see definitions in App. A.2) through only collecting the noisier/perturbed version of each party's sufficient statistics (see App. A.1). To achieve (B), we must assign a lower valuation (and reward) to a noisier SS. Our insight is to combine noise-aware inference (that computes the posterior belief of the model parameters given the perturbed SS) with the Bayesian surprise valuation function. Lastly, (C) we propose a mechanism to generate model rewards (i.e., posterior samples of the model parameters) that attain the target reward value and are similar to the grand coalition's model.

_Difference with federated learning and differential privacy works._ Existing FL works have covered learning from decentralized data with DP guarantees. However, these works may not address the question: Would parties want to share their data? How do we get parties to share more to maximize the gain from the collaboration? Our work aims to address these questions and **incentivize** (A) parties to share more, higher-quality data and (B) select a weaker DP guarantee. To achieve (A), it is standard in data valuation methods [18, 25, 46] to use the Shapley value to value a party _relative_ to the data of others as it considers a party's marginal contribution to all coalitions (subsets) of parties. This would require us to construct and value a trained model for each coalition \(C\subseteq N\): To ease aggregation (and to avoid requesting more information or incurring privacy costs per coalition), we consider

Figure 5: Our work, \(\star\), uniquely satisfies all \(3\) desiderata. When parties share information computed from their data, we ensure that every party has at least its required DP w.r.t. the mediator, receives a collaboratively trained model, and receives a higher reward for sharing higher-quality data than the others.

sufficient statistics (see App. A.1). To achieve (B), we want a valuation function that provably ensures a lower valuation for a stronger DP guarantee. Our insight is to combine noise-aware inference (that computes the posterior belief of the model parameters given perturbed SS) with the Bayesian surprise valuation function. Lastly, like the works of [47, 51], (C) we generate a model reward that attains a target reward value (which parties can use for future predictions). Our model reward is in the form of posterior samples of the model parameters instead. We propose a new mechanism to control/generate model rewards that work using SS and preserve similarity to the grand coalition's model.

Fig. 5 shows how our work in this paper fills the gap in the existing works.

## Appendix C Characteristic/Valuation Function

### Proofs of properties for valuation function

In this section, we will use the random variable notations defined in App. A. Moreover, we abbreviate the set of perturbed SS random variables corresponding to a coalition \(C\) of parties as \(O_{C}\triangleq\{O_{i}\}_{i\in C}\). Let \(\mathbb{H}(a)\) denote the entropy of the variable \(a\).

Relationship between KL divergence and information gain. \[\mathbb{I}(\theta;O_{C}) =\mathbb{E}_{\bm{o}_{C}\sim O_{C}}[D_{\mathrm{KL}}(p(\theta|\bm{ o}_{C});p(\theta))]\] \[=\mathbb{H}(\theta)-\mathbb{E}_{\bm{o}_{C}\sim O_{C}}[\mathbb{H }(\theta|O_{C}=\bm{o}_{C})]\.\]

Party monotonicity (V2).Consider two coalitions \(C\subset C^{\prime}\subseteq N\). By taking an expectation w.r.t. random vector \(O_{C^{\prime}}\),

\[\mathbb{E}_{\bm{o}_{C^{\prime}}\sim O_{C^{\prime}}}[v_{C}]=\mathbb{E}_{\bm{o }_{C}\sim O_{C}}[D_{\mathrm{KL}}(p(\theta|\bm{o}_{C});p(\theta))]=\mathbb{I}( \theta;O_{C})=\mathbb{H}(\theta)-\mathbb{H}(\theta|O_{C})\]

and

\[\mathbb{E}_{\bm{o}_{C^{\prime}}\sim O_{C^{\prime}}}[v_{C^{\prime}}]=\mathbb{E} _{\bm{o}_{C^{\prime}}\sim O_{C^{\prime}}}[D_{\mathrm{KL}}(p(\theta|\bm{o}_{C^{ \prime}});p(\theta))]=\mathbb{I}(\theta;O_{C^{\prime}})=\mathbb{H}(\theta)- \mathbb{H}\big{(}\theta|O_{C},O_{C^{\prime}\setminus C}\big{)}\.\]

Then, \(\mathbb{E}_{\bm{o}_{C^{\prime}}\sim O_{C^{\prime}}}[v_{C^{\prime}}]>\mathbb{E} _{\bm{o}_{C^{\prime}}\sim O_{C^{\prime}}}[v_{C}]\) as conditioning additionally on \(O_{C^{\prime}\setminus C}\) should not increase the entropy (i.e., \(\mathbb{H}\big{(}\theta|O_{C},O_{C^{\prime}\setminus C}\big{)}\leq\mathbb{H }(\theta|O_{C})\)) due to the "information never hurts" bound for entropy [10].

Privacy-valuation trade-off (V3).Let \(\epsilon_{i}^{s}<\epsilon_{i}\), and \(Z_{i}^{1}\) and \(Z_{i}^{2}\) be independent Gaussian distributions with mean \(0\) and, respectively, variance \(a_{i}/\epsilon_{i}\) and \((a_{i}/\epsilon_{i}^{s})-(a_{i}/\epsilon_{i})>0\) where \(a_{i}\triangleq 0.5\ \lambda\ \Delta_{2}^{2}(g)\), function \(g\) computes the exact SS \(\bm{s}_{i}\) from local dataset \(\mathcal{D}_{i}\), and \(\Delta_{2}(g)\) denotes its \(\ell_{2}\)-sensitivity. Adding \(Z_{i}^{1}\) to \(S_{i}\) will ensure \((\lambda,\epsilon_{i})\)-DP while adding both \(Z_{i}^{1}\) and _independent_\(Z_{i}^{2}\) to \(S_{i}\) is equivalent to adding Gaussian noise of variance \(a_{i}/\epsilon_{i}^{s}\) to ensure \((\lambda,\epsilon_{i}^{s})\)-DP.18 From the graphical model in Fig. 6 and the Markov chain \(\theta\to O_{i}\to O_{i}^{s}\), the following conditional independence can be observed: \(\theta\perp\!\!\!\perp O_{i}^{s}\mid O_{i}\). By the _data processing inequality_, no further processing of \(O_{i}\), such as the addition of noise, can increase the information of \(\theta\). Formally, \(\mathbb{I}(\theta;O_{i})\geq\mathbb{I}(\theta;O_{i}^{s})\). Simultaneously, \(\theta\not\perp\!\!\!\perp O_{i}\mid O_{i}^{s}\). Hence, \(\mathbb{I}(\theta;O_{i})\neq\mathbb{I}(\theta;O_{i}^{s})\Rightarrow(\mathbb{I }(\theta;O_{i})>\mathbb{I}(\theta;O_{i}^{s}))\).

To extend to any coalition \(C\) containing \(i\), by the chain rule of mutual information,

\[\mathbb{I}\big{(}\theta;O_{i},O_{i}^{s},O_{C\setminus\{i\}}\big{)} =\mathbb{I}\big{(}\theta;O_{i},O_{C\setminus\{i\}}\big{)}+ \mathbb{I}\big{(}\theta;O_{i}^{s}|O_{i},O_{C\setminus\{i\}}\big{)}\] \[=\mathbb{I}\big{(}\theta;O_{i}^{s},O_{C\setminus\{i\}}\big{)}+ \mathbb{I}\big{(}\theta;O_{i}|O_{i}^{s},O_{C\setminus\{i\}}\big{)}\enspace.\]

As conditional independence \(\theta\perp\!\!\!\perp O_{i}^{s}\mid O_{i},O_{C\setminus\{i\}}\) and dependence \(\theta\not\perp\!\!\!\perp O_{i}\mid O_{i}^{s},O_{C\setminus\{i\}}\) still hold, \(\mathbb{I}\big{(}\theta;O_{i}^{s}|O_{i},O_{C\setminus\{i\}}\big{)}=0\) and \(\mathbb{I}(\theta;O_{i}|O_{i}^{s},O_{C\setminus\{i\}}\big{)}>0\), respectively. It follows from the above expression that \(\mathbb{I}(\theta;O_{C})>\mathbb{I}\big{(}\theta;O_{i}^{s},O_{C\setminus\{i \}}\big{)}\), which implies \(\mathbb{E}_{O_{C}}[v_{C}]>\mathbb{E}_{O_{C\setminus\{i\}},O_{i}^{s}}[v_{C}^{ s}]\enspace.\) For future work, the proof can be extended to other DP mechanisms.

### Proof of Remark in Sec. 3

Let the alternative valuation of a coalition \(C\) be \(v_{C}^{\prime}\triangleq D_{\mathrm{KL}}(p(\theta|\bm{o}_{N});p(\theta))-D_{ \mathrm{KL}}(p(\theta|\bm{o}_{N});p(\theta|\bm{o}_{C}))\). Then, \(v_{\emptyset}^{\prime}=0\) and \(v_{N}^{\prime}=D_{\mathrm{KL}}(p(\theta|\bm{o}_{N});p(\theta))\). It can be observed that

* Unlike \(v_{C}\), \(v_{C}^{\prime}\) may be negative.
* Unlike \(v_{N}\), \(v_{N}^{\prime}\) is guaranteed to have the highest valuation as the minimum KL divergence \(D_{\mathrm{KL}}(p(\theta|\bm{o}_{N});q(\theta))\) is \(0\) only when \(q(\theta)=p(\theta|\bm{o}_{N})\). This is desirable when we want the grand coalition to be more valuable than the other coalitions but odd when we consider the non-private posterior \(q(\theta)=p(\theta|\bm{s}_{N})\): Intuitively, the model computed using \(\bm{s}_{N}\) should be more valuable using \(v^{\prime}\) than that computed using the perturbed SS \(\bm{o}_{N}\).

By taking an expectation w.r.t. \(\bm{o}_{N}\),

\[\mathbb{E}_{p(O_{N})}[v_{C}^{\prime}]\] \[=\mathbb{I}(\theta;O_{N})-\mathbb{E}_{\bm{o}_{C}\sim p(O_{C})} \bigg{[}\mathbb{E}_{\bm{o}_{N\setminus C}\sim p(O_{N\setminus C}|\bm{o}_{C})} \bigg{[}\mathbb{E}_{\bm{o}\sim p(\theta|\bm{o}_{N\setminus C},\bm{o}_{C})} \bigg{[}\log\frac{p(\theta|\bm{o}_{N\setminus C},\bm{o}_{C})}{p(\theta|\bm{o}_ {C})}\bigg{]}\bigg{]}\bigg{]}\] \[\overset{(i)}{=}\mathbb{I}(\theta;O_{N})-\mathbb{E}_{\bm{o}_{C} \sim p(O_{C})}\bigg{[}\mathbb{E}_{\theta,\bm{o}_{N\setminus C}\sim p(\theta,O _{N\setminus C}|\bm{o}_{C})}\bigg{[}\log\frac{p(\theta,\bm{o}_{N\setminus C}| \bm{o}_{C})}{p(\theta|\bm{o}_{C})\;p(\bm{o}_{N\setminus C}|\bm{o}_{C})}\bigg{]} \bigg{]}\] \[=\mathbb{I}(\theta;O_{N})-\mathbb{E}_{\bm{o}_{C}\sim p(O_{C})} \big{[}D_{\mathrm{KL}}\big{(}p(\theta,O_{N\setminus C}|\bm{o}_{C});p(\theta| \bm{o}_{C})\;p(O_{N\setminus C}|\bm{o}_{C})\big{)}\big{]}\] \[\overset{(ii)}{=}\mathbb{I}(\theta;O_{N})-\mathbb{I}\big{(} \theta;O_{N\setminus C}|O_{C}\big{)}\] \[=\mathbb{I}(\theta;O_{C})=\mathbb{E}_{p(O_{N})}[v_{C}]\enspace.\]

In equality (i) above, we multiply both the numerator and denominator within the log term by \(p(\bm{o}_{N\setminus C}|\bm{o}_{C})\) and consider the expectation of the joint distribution since by the chain rule of probability, \(p(\theta,O_{N\setminus C}|\bm{o}_{C})=p(O_{N\setminus C}|\bm{o}_{C})\;p( \theta|O_{N\setminus C},\bm{o}_{C})\). Equality (ii) is due to the definition of conditional mutual information.

### KL Estimation of Valuation Function

KL estimation is only a tool and not the focus of our work. Our valuation will become more accurate and computationally efficient as KL estimation tools improve.

Recommended - nearest-neighbors [45; 54].Given \(\Theta^{\text{post}}\) and \(\Theta^{\text{prior}}\) which consists of \(m\) samples of \(\theta\) (with dimension \(d\)) from, respectively, the posterior \(p(\theta|\bm{o}_{C})\) and prior \(p(\theta)\), we estimate the KL divergence as

\[\frac{d}{m}\sum_{\theta\in\Theta^{\text{prior}}}\log\frac{\delta_{k}^{\text{ prior}}(\theta)}{\delta_{k}^{\text{post}}(\theta)}+\log\frac{m}{m-1}\]

where \(\delta_{k}^{\text{post}}(\theta)\) is the distance of the sampled \(\theta\) to its \(k\)-th nearest neighbor in \(\Theta^{\text{post}}\) (excluding itself) and \(\delta_{k}^{\text{prior}}(\theta)\) is the distance of the sampled \(\theta\) to the \(k\)-th nearest neighbor in \(\Theta^{\text{prior}}\).

The number \(k\) of neighbors is tunable and analyzed in the follow-up work of [49]. As the number \(m\) of samples increases, the bias and variance decrease. The convergence rate is analysed by [66]. Moreover, the estimate converges almost surely [45] and is consistent [54] for _independent and identically distributed (i.i.d.) samples_. Furthermore, as the KL divergence is invariant to metric reparameterizations, the bias can be reduced by changing the distance metric [42, 54].

To generate i.i.d. samples, we suggest the usage of the NUTS sampler or thinning (keeping only every \(t\)-th sample). We observe that if the samples from \(\theta\mid\bm{o}_{C}\) are non-independent, i.e., correlated and close to the previous sample, we may underestimate its distance to the \(k\)-th distinct neighbor in \(\theta\mid\bm{o}_{C}\), \(\delta_{k}^{\text{post}}(\theta)\), and thus overestimate the KL divergence. This is empirically verified in Table 2. We have also observed that the KL divergence may be underestimated when the posterior is concentrated at a significantly different mean from the prior.

Recommended for large \(\epsilon\) - approximate \(p(\theta|\bm{o}_{C})\) using maximum likelihood distribution from the \(p(\theta)\)'s exponential family.When a small noise is added to ensure weak DP, we can approximate \(p(\theta|\bm{o}_{C})\) with a distribution \(q\) from the same exponential family as \(p(\theta|\bm{s}_{C})\). We can (i) determine \(q\)'s parameters via _maximum likelihood estimation_ (MLE) from the Gibbs samples19 and (ii) compute the KL divergence in closed form.

Footnote 19: The distribution \(q\) from MLE minimizes the KL divergence \(D_{\mathrm{KL}}(p(\theta|\bm{o}_{C});q(\theta))\).

However, the KL estimate is inaccurate (i.e., large bias) when the distribution \(q\) is a poor fit for the posterior \(p(\theta|\bm{o}_{C})\). Future work can consider using _normalizing flows_ as \(q\) to improve the fit, reduce the estimation bias, and work for a larger range of DP guarantees \(\epsilon\). However, this KL estimation method may be computationally slow and risks overfitting.

Probabilistic Classification.Let the binary classifier \(f:\Theta\rightarrow[0,1]\) (e.g., a neural network) discriminate between samples from two densities \(q_{1}(\theta)\) (here, the posterior \(p(\theta|\bm{o}_{C})\)) and \(q_{0}(\theta)\) (here, the prior \(p(\theta)\)) and output the probability that \(\theta\) comes from \(q_{1}(\theta)\). Concretely, we label the \(m\) samples from \(q_{1}(\theta)\) and \(q_{0}(\theta)\) with \(y=1\) and \(y=0\), respectively. By Bayes' rule, the density ratio is

\[\frac{q_{1}(\theta)}{q_{0}(\theta)}=\frac{p(\theta|y=1)}{p(\theta|y=0)}=\frac {p(y=1|\theta)}{p(y=0|\theta)}=\frac{p(y=1|\theta)}{1-p(y=1|\theta)}\.\]

Optimizing a _proper scoring rule_ such as minimizing the binary cross-entropy loss should return the Bayes optimal classifier \(f^{*}(\theta)=p(y=1|\theta)\). The KL estimate is then computed as the mean log-density ratio over samples from \(q_{1}(\theta)\). As the log-density ratio is \(\texttt{sigmoid}^{-1}(p(y=1|\theta))\), when \(f\) is a neural network with sigmoid as the last activation layer, we can use the logits before activation directly.

However, with only limited finite samples \(m\) and a large separation between the distributions \(q_{1}\) and \(q_{0}\), the density ratio and KL estimate may be highly inaccurate [8]: Intuitively, the finite samples may be linearly separable and the loss is minimized by setting the logits of samples from \(q_{1}(\theta)\) (hence KL) to infinity (i.e., classify it overconfidently with probability \(1\)). As the separation between the distributions \(q_{1}\) and \(q_{0}\) increases, exponentially more training samples may be needed to obtain samples between \(q_{1}\) and \(q_{0}\)[8]. Moreover, as training may not produce the Bayes optimal classifier, there is also an issue of larger variance across runs.

## Appendix D Reward Scheme for Ensuring Incentives

### Incentives based on Coalition Structure

Instead of assuming the grand coalition \(N\) form, we can consider the more general case where parties team up and partition themselves into a _coalition structure_\(CS\). Formally, \(CS\) is a set of coalitions such that \(\bigcup_{C\in CS}C=N\) and \(C\cap C^{\prime}=\emptyset\) for any \(C,C^{\prime}\in CS\) and \(C\neq C^{\prime}\). The following incentives are modified below:

**P2**: For any coalition \(C\in CS\), there is a party \(i\in C\) whose model reward is the coalition \(C\)'s posterior, i.e., \(q_{i}(\theta)=p(\theta|\bm{o}_{C})\). It follows that \(r_{i}=v_{C}\) as in R2 of [47].
**P5**: Among multiple model rewards \(q_{i}(\theta)\) whose value \(r_{i}\) equates the target reward \(r_{i}^{*}\), we secondarily prefer one with a higher similarity \(r_{i,C}^{\prime}=-D_{KL}(p(\theta|\bm{o}_{C});q_{i}(\theta))\) to the coalition's posterior \(p(\theta|\bm{o}_{C})\) where \(i\in C\).

### Fairness Axioms

The fairness axioms from the work of [47] are reproduced below:

1. **Uselessness.** If including the data or sufficient statistic of party \(i\) does not improve the quality of a model trained on the aggregated data of any coalition (e.g., when \(\mathcal{D}_{i}=\emptyset\), \(c_{i}=0\)), then party \(i\) should receive a valueeless model reward: For all \(i\in N\), \[(\forall C\subseteq N\setminus\{i\}\;\;v_{C\cup\{i\}}=v_{C})\Rightarrow r_{i} =0\;.\]
2. **Symmetry.** If including the data or sufficient statistic of party \(i\) yields the same improvement as that of party \(j\) in the quality of a model trained on the aggregated data of any coalition (e.g., when \(\mathcal{D}_{i}=\mathcal{D}_{j}\)), then they should receive equally valuable model rewards: For all \(i,j\in N\) s.t. \(i\neq j\), \[(\forall C\subseteq N\setminus\{i,j\}\;\;v_{C\cup\{i\}}=v_{C\cup\{j\}}) \Rightarrow r_{i}=r_{j}\;.\]
3. **Strict Desirability [33].** If the quality of a model trained on the aggregated data of at least a coalition improves more by including the data or sufficient statistic of party \(i\) than that of party \(j\), but the reverse is not true, then party \(i\) should receive a more valuable model reward than party \(j\): For all \(i,j\in N\) s.t. \(i\neq j\), \[(\exists B\subseteq N\setminus\{i,j\}\;\;v_{B\cup\{i\}}>v_{B\cup\{ j\}})\wedge\] \[(\forall C\subseteq N\setminus\{i,j\}\;\;v_{C\cup\{i\}}\geq v_{C \cup\{j\}})\Rightarrow r_{i}>r_{j}\;.\]
4. **Strict Monotonicity.** If the quality of a model trained on the aggregated data of at least a coalition containing party \(i\) improves (e.g., by including more data of party \(i\)), _ceteris paribus_, then party \(i\) should receive a more valuable model reward than before: Let \(\{v_{C}\}_{C\in 2^{N}}\) and \(\{\tilde{v}_{C}\}_{C\in 2^{N}}\) denote any two sets of values of data over all coalitions \(C\subseteq N\), and \(r_{i}\) and \(\tilde{r}_{i}\) be the corresponding values of model rewards received by party \(i\). For all \(i\in N\), \[(\exists B\subseteq N\setminus\{i\}\;\;\tilde{v}_{B\cup\{i\}}>v_{B \cup\{i\}})\wedge\] \[(\forall C\subseteq N\setminus\{i\}\;\;\tilde{v}_{C\cup\{i\}}\geq v _{C\cup\{i\}})\wedge\] \[(\forall A\subseteq N\setminus\{i\}\;\;\tilde{v}_{A}=v_{A})\wedge( \tilde{v}_{N}>r_{i})\Rightarrow\tilde{r}_{i}>r_{i}\;.\]

### Remark on Rationality

Let \(v_{\bm{s}_{i}}\) denote the Bayesian surprise party \(i\)'s _exact_ SS \(\bm{s}_{i}\) elicits from the prior belief of model parameter. We define **Stronger Individual Rationality** (SIR, the strengthened version of P4) as: each party should receive a model reward that is more valuable than the model trained on its exact SS alone: \(\forall i\in Nr_{i}^{*}\geq v_{\bm{s}_{i}}\).

We consider two potential solutions to achieve stronger individual rationality and explain how they fall short.

* Each party \(i\) declares the value \(v_{\bm{s}_{i}}\) and the mediator selects a smaller \(\rho\) to guarantee SIR. SIR is infeasible when the grand coalition's posterior is less valuable than party \(i\)'s model based on exact SS, i.e., \(v_{N}<v_{\bm{s}_{2}}\). In Fig. 2, we observe that when party \(2\) selects a small \(\epsilon_{2}\), \(v_{N}\) is less than \(v_{\bm{s}_{2}}\) which can approximated by \(v_{2}\) under large \(\epsilon_{2}\), i.e., the right end point of the blue line. Instead, SIR is only empirically achievable when party \(2\) and others select a weaker DP guarantee as in Fig. 10 in App. H.5. Note that our work only incentivizes weaker DP guarantees and does not restrict parties' choice of DP guarantees.
* The mediator should reward party \(i\) with perturbed SS \(\bm{t}_{j}^{i}\) (for Sec. 5.1) or \(\kappa_{i}\bm{o}_{j},\kappa_{i}c_{j},\kappa_{i}Z_{j}\) (for Sec. 5.2) for every other party \(j\neq i\). Party \(i\) can then combine these with its exact \(\bm{s}_{i}\) to guarantee SIR. This approach achieves SIR at the expense of truthfulness. As party \(i\) perturbed SS \(\bm{o}_{i}\) is not used to generate its own model reward, party \(i\) may be less deterred (hence more inclined) to submit less informative or fake SS.

SIR is not needed when each party prefers training a DP model even when alone. SIR may be desired in other scenarios. However, our approach does not use alternative solutions to satisfy SIR as we prioritize incentivizing parties to (i) truthfully submit informative perturbed SS that they would use for future predictions, while (ii) not compromising for weak DP guarantees.

Details on Reward Control Mechanisms

In the subsequent proofs, any likelihood \(p^{\kappa_{i}}(\cdot)\) should be interpreted as \([p(\cdot)]^{\kappa_{i}}\): We only raise likelihoods (of data conditioned on model parameters) to the power of \(\kappa_{i}\).

### Likelihood Tempering and Scaling SS Equivalence Proof

Let \(g\) denote the function that maps any data point \(d_{l}\) or dataset \(\mathcal{D}_{k}\) to its sufficient statistic. For any data point \(d_{l}\), we assume that the data likelihood \(p(d_{l}|\theta)\) is from an exponential family with natural parameters \(\theta\) and sufficient statistic \(g(d_{l})\). The data likelihood \(p(d_{l}|\theta)\) can be expressed in its natural form:

\[p(d_{l}|\theta)=h(d_{l})\exp\left[g(d_{l})\cdot\theta-A(\theta)\right]\]

where \(\bm{a}\cdot\bm{b}\triangleq\bm{a}^{\top}\bm{b}\) denotes the dot product between two vectors.

Next, we assume that \(p(\theta)\) is the conjugate prior20 for \(p(\mathcal{D}_{k}|\theta)\) with natural parameters \(\eta\) and the sufficient statistic mapping function \(T:\theta\rightarrow\left[\theta^{\top},-A(\theta)\right]^{\top}\). Then, for \(c_{k}\) data points which are conditionally independent given the model parameters \(\theta\),

Footnote 20: \(p(\theta)\) and \(p(\theta|\mathcal{D}_{i})\) belong to the same exponential family.

\[p(\theta|\{d_{l}\}_{l=1}^{c_{k}}) \propto p(d_{1}|\theta)\ldots p(d_{c_{k}}|\theta)\;p(\theta|\eta)\] \[\propto\left[\left(\prod_{l=1}^{c_{k}}h(d_{l})\right)\exp\left[ \underbrace{\sum_{l=1}^{c_{k}}g(d_{l})\cdot\theta-c_{k}A(\theta)}_{g(\mathcal{ D}_{k})}\right]\right]\left[h(\theta)\exp\left[T(\theta)\cdot\eta-B(\eta) \right]\right]\] \[\propto\exp\left[g(\mathcal{D}_{k})\cdot\theta-c_{k}A(\theta)+T( \theta)\cdot\eta-B(\eta)\right]\] \[\propto\exp\left[\left(\left[g(\mathcal{D}_{k})^{\top},c_{k} \right]^{\top}+\eta\right)\cdot T(\theta)-C(\eta)\right]\]

where \(C(\eta)\) is chosen such that the distribution is normalized.

Substituting the above SS formulae into (1), the normalized posterior distribution (after tempering the likelihood) is

\[q_{i}(\theta) \propto p^{\kappa_{i}}(d_{1}|\theta)\ldots p^{\kappa_{i}}(d_{c_{k}}| \theta)\;p(\theta|\eta)\] \[\propto\left[\left(\prod_{l=1}^{c_{k}}h(d_{l})\right)^{\kappa_{ i}}\exp\left[\kappa_{i}\left[g(\mathcal{D}_{k})\cdot\theta-c_{k}A(\theta) \right]\right]\right]\left[h(\theta)\exp\left[T(\theta)\cdot\eta-B(\eta) \right]\right]\] \[\propto\exp\left[\kappa_{i}g(\mathcal{D}_{k})\cdot\theta-\kappa_{ i}c_{k}A(\theta)+T(\theta)\cdot\eta-B(\eta)\right]\] \[\propto\exp\left[\left(\left[\kappa_{i}g(\mathcal{D}_{k})^{\top}, \kappa_{i}c_{k}\right]^{\top}+\eta\right)\cdot T(\theta)-C^{\prime}(\eta)\right]\]

where \(C^{\prime}(\eta)\) is chosen such that the distribution is normalized.

Thus, tempering the likelihood by \(\kappa_{i}\) is equivalent to scaling the SS \(g(\mathcal{D}_{k})\) and data quantity \(c_{k}\). We additionally proved that the normalized posterior can be obtained from the scaled SS and data quantity via the conjugate update.

Bayesian Linear Regression (BLR).The Bayesian linear regression model was introduced in App. A.1 To recap, BLR model parameters \(\theta\) consists of the weight parameters \(\bm{w}\in\mathbb{R}^{w}\) and the noise variance \(\sigma^{2}\). BLR models the relationship between the concatenated output vector \(\bm{y}\) and the design matrix \(\bm{X}\) as \(\bm{y}=\bm{X}\bm{w}+\mathcal{N}(0,\sigma^{2}\bm{I})\). The tempered likelihood

\[p^{\kappa_{i}}(\bm{y}|\bm{X},\bm{w},\sigma^{2}) \propto\left[\left(2\pi\sigma^{2}\right)^{-\frac{\sigma}{2}}\exp \left(-\frac{\left(\bm{y}-\bm{X}\bm{w}\right)^{\top}\left(\bm{y}-\bm{X}\bm{w} \right)}{2\sigma^{2}}\right)\right]^{\kappa_{i}}\] \[=(2\pi\sigma^{2})^{-\frac{c_{\kappa_{i}}}{2}}\exp\left[\frac{-1}{2 \sigma^{2}}\kappa_{i}\bm{y}^{\top}\bm{y}+\frac{1}{\sigma^{2}}\bm{w}^{\top} \kappa_{i}\bm{X}^{\top}\bm{y}-\frac{1}{2\sigma^{2}}\bm{w}^{\top}\kappa_{i}\bm{ X}^{\top}\bm{X}\bm{w}\right]\,.\]

only depends on the scaled sufficient statistics \(\kappa_{i}(\bm{y}^{\top}\bm{y},\bm{X}^{\top}\bm{y},\bm{X}^{\top}\bm{X})\). When the prior \(p(\bm{\theta})\) follows the conjugate normal inverse-gamma distribution, the power posterior can be obtained from the scaled SS and data quantity via the conjugate update.

Generalized Linear Model (GLM).App. A.1 introduces GLMs and states that the polynomial approximation to the GLM mapping function is an exponential family model. Tempering the GLM likelihood function by \(\kappa_{i}\) is equivalent to scaling the GLM mapping function by \(\kappa_{i}\) and can achieved by scaling the polynomial approximate SS by the same factor.

### Smaller Tempering Factor Decreases Reward Value Proof

The KL divergence between two members of the same exponential family with natural parameters \(\eta\) and \(\eta^{\prime}\), and log partition function \(B(\cdot)\) is given by \((\eta-\eta^{\prime})^{\top}\nabla B(\eta)-B(\eta)+B(\eta^{\prime})\)[41]. To ease notational overload, we abuse some existing ones, which only apply in this subsection, by letting \(\bm{s}_{N}\triangleq\sum_{k\in N}\bm{s}_{k}\) and \(c_{N}\triangleq\sum_{k\in N}c_{k}\). Let \(\eta^{\prime}\) and \(\eta\) be the natural parameters of the prior and the normalized tempered posterior distribution (used to generate a model reward with value \(r_{i}\)), respectively. Then, \(\eta=\eta^{\prime}+\kappa_{i}\left[\bm{s}_{N}^{\top},\,c_{N}\right]^{\top}\). For \(\kappa_{i}\in[0,1]\), the derivative of \(r_{i}\) w.r.t. \(\kappa_{i}\) is non-negative:

\[\frac{\mathbf{d}r_{i}}{\mathbf{d}\kappa_{i}} =\frac{\partial r_{i}}{\partial\eta}\frac{\partial\eta}{\partial \kappa_{i}}\] \[=\left((\eta-\eta^{\prime})^{\top}\nabla^{2}B(\eta)+\nabla B(\eta )-\nabla B(\eta)\right)\left[\bm{s}_{N}^{\top},\,c_{N}\right]^{\top}\] \[=\kappa_{i}\left[\bm{s}_{N}^{\top},\,\,\kappa_{i}c_{N}\right] \nabla^{2}B(\eta)\left[\bm{s}_{N}^{\top},\,c_{N}\right]^{\top}\geq 0\;.\]

As \(B(\eta)\) is convex w.r.t. \(\eta\), the second derivative21\(\nabla^{2}B(\eta)\) is positive semi-definite, so \(\left[\bm{s}_{N}^{\top},\,c_{N}\right]\nabla^{2}B(\eta)\left[\bm{s}_{N}^{\top},\,c_{N}\right]^{\top}\geq 0\).

Footnote 21: This second derivative is the variance of the sufficient statistic of \(\theta\). It is non-negative and often positive.

Hence, for \(\kappa_{i}\in[0,1]\), the KL divergence is non-decreasing as \(\kappa_{i}\) increases to \(1\). In other words, as \(\kappa_{i}\) shrinks towards \(0\), the KL divergence is decreasing; equality only holds when the variance of the SS is \(0\).

### Implementation of Reward Control Mechanisms

This subsection introduces how to obtain the model reward \(q_{i}(\theta)\) for each party \(i\) in Sec. 5.

Update for noise addition (varying \(\tau_{i}\)).We update the inputs to Algorithm 1 for BLR or the No-U-Turn sampler for GLM. To generate party \(i\)'s posterior samples, for every party \(k\in N\), the algorithm use the further perturbed SS \(\bm{t}_{k}^{i}\) instead of the perturbed SS \(\bm{o}_{k}\). Moreover, the algorithm consider the total DP noise \(Z_{k}+\mathcal{N}(\bm{0},0.5\;\lambda\;\Delta_{2}^{2}(g_{k})\;\tau_{i}\;\bm{I})\) instead of only the noise \(Z_{k}\) added by party \(k\).

Update for likelihood tempering (varying \(\kappa_{i}\)).To generate party \(i\)'s posterior samples, for every party \(k\in N\), Use \(\kappa_{i}c_{k}\), \(\kappa_{i}\bm{o}_{k}\), and \(p(\kappa_{i}Z_{k})\) as the inputs to Algorithm 1 for BLR or the No-U-Turn [19] sampler for GLM instead. Scaling the perturbed SS would affect the sensitivity of party \(k\)'s submitted information and the DP noise needed.

## Appendix F Time Complexity

The computational complexity is given in App. F.

```
0:Renyi DP \(\lambda\) parameter, Noise-aware inference algorithm, Shared prior \(p(\theta)\) of model parameters and prior \(p(\omega)\) of data parameters, \(\rho\)-Shapley fairness scheme parameter.
0:// Party's actions (ensure DP)
1:for each party \(i\in N\)do
2: Compute exact SS \(\bm{s}_{i}\) from dataset \(\mathcal{D}_{i}\).
3: Choose DP guarantee \((\lambda,\epsilon_{i})\)-Renyi DP. ```

**Algorithm 2** An overview of our collaborative ML problem setup.

The computational complexity is given in App. F.

```
0:for each party \(i\in N\)do
2: Compute exact SS \(\bm{s}_{i}\) from dataset \(\mathcal{D}_{i}\).
3: Choose DP guarantee \((\lambda,\epsilon_{i})\)-Renyi DP. ```

**Algorithm 3** An overview of our collaborative ML problem setup.
* Sample \(\bm{z}_{i}\) from the Gaussian distribution \(p(Z_{i})=\mathcal{N}(\bm{0},\ 0.5\ (\lambda/\epsilon_{i})\ \Delta_{2}^{2}(g)\ \bm{I})\).
* Compute perturbed SS \(\bm{o}_{i}\triangleq\bm{s}_{i}+\bm{z}_{i}\).
* Submit (i) number \(c_{i}\triangleq|\mathcal{D}_{i}|\) of data points in its dataset \(\mathcal{D}_{i}\), (ii) perturbed SS \(\bm{o}_{i}\) and (iii) Gaussian distribution \(p(Z_{i})\) to the mediator.
* **end for** // _Mediator's actions_ // 1. _Compute valuation of perturbed SS needed for Shapley value. The choice of_ \(v\) _ensures a privacy-valuation trade-off._
* Draw \(m\) samples from \(p(\theta)\).
* **for** each coalition \(C\subseteq N\)**do**
* Draw \(m\) samples from the posterior \(p(\theta|\bm{o}_{C})\) by applying the noise-aware inference algorithm. The algorithm requires the perturbed SS \(\bm{o}_{C}\triangleq\{\bm{o}_{i}\}_{i\in C}\), data quantities \(\{c_{i}\}_{i\in C}\) and noise distributions \(\{Z_{i}\}_{i\in C}\).
* Compute \(v_{C}\) by using the nearest-neighbors method [45] to estimate the KL divergence \(D_{\mathrm{KL}}(p(\theta|\bm{o}_{C});p(\theta))\) from the samples.
* **end for** // 2. _Decide the target reward values using_ \(\rho\)_-Shapley value_ [47] _which_ _ensure efficiency (P2), fairness (P3), rationality (P4) and control group welfare (P6)._
* **for** each party \(i\in N\)**do**
* Compute Shapley value \(\phi_{i}=(1/n)\sum_{C\subseteq N\setminus i}\left[\binom{n-1}{|C|}^{-1}\left( v_{C\cup\{i\}}-v_{C}\right)\right]\).
* **end for**
* Identify the maximum Shapley value \(\phi_{*}=\max_{k\in N}\phi_{k}\).
* **for** each party \(i\in N\)**do**
* Compute \(\rho\)-Shapley fair target reward \(r_{i}^{*}\) for party \(i\) using the formula \(r_{i}^{*}=v_{N}\times(\phi_{i}/\phi_{*})^{\rho}\)
* **end for** // 3. _Generate model reward_ \(q_{i}(\theta)\) _with value_ \(r_{i}=r_{i}^{*}\) _that preserves similarity (P5) with the grand coalition's model and privacy for others (P1)._
* **for** each party \(i\in N\)**do**
* Initialize \(\mathtt{Kr}=()\).
* **while True do**
* Select \(\kappa_{i}\in[0,1]\) using a root finding algorithm and \(\mathtt{Kr}\).
* Draw \(m\) samples from the normalized posterior \(q_{i}(\theta)\) (Eq. 1 by applying the noise-aware inference algorithm. Use the scaled perturbed SS \(\{\kappa_{i}\bm{o}_{i}\}_{i\in N}\), data quantities \(\{\kappa_{i}c_{i}\}_{i\in N}\) and noise distributions \(\{\kappa_{i}Z_{i}\}_{i\in N}\).
* Compute the reward value \(r_{i}\) by using the nearest-neighbors method [45] to estimate the KL divergence \(D_{\mathrm{KL}}(q_{i}(\theta);p(\theta))\) from the samples.
* **if** attained reward value \(r_{i}=r_{i}^{*}\)**then**
* Reward party \(i\) with the \(m\) posterior samples from \(q_{i}(\theta)\).
* **break**
* **end if**
* Update \(\mathtt{Kr}\leftarrow\mathtt{Kr}+((\kappa_{i},r_{i}),)\)
* **end while**
* **end for** The main steps of our scheme are detailed in Algo. 2 and the time complexity of the steps are as follows:

1. **Local SS \(\bm{s}_{i}\) computation (Line 2 in Algo 2).** Party \(i\) will need to sum the SS for its \(c_{i}\) data points. Subsequent steps will not depend on the number \(c_{i}\) of data points. The (approximate) SS is usually an \(\mathcal{O}(d^{2})\) vector where \(d\) is the number of regression model features. **Therefore, this step incurs \(\mathcal{O}(c_{i}d^{2})\) time**.
2. **Perturbed SS \(\bm{o}_{i}\) computation (Lines 4-5 in Algo 2).** Each party will need to use the Gaussian mechanism to perturb \(\bm{s}_{i}\). **Therefore, this step incurs \(\mathcal{O}(d^{2})\) time**.

**Valuation of Perturbed SS (Sec. 3).** The valuation of \(\bm{o}_{N}\) requires us to draw \(m\) posterior samples of model parameters using DP noise-aware inference (refer to App. A.3 and the cited references for the exact steps). As the methods of [27] and [4] incur \(\mathcal{O}(md^{4})\) time for a single party, inference based on Fig. 4 will take \(n\) times longer to consider \(n\) parties. KL estimation using \(k\)-nearest neighbor will incur \(\mathcal{O}(m\log(m)\mathrm{dim}(\theta))\) time to value multiple (scaled) perturbed SS. **Therefore, valuation incurs \(\mathcal{O}(nmd^{4}+m\log(m)\ \mathrm{dim}(\theta))\) time**.
3. **Deciding target reward value \(r_{i}^{*}\) for every \(i\in N\) (Sec. 4, Lines 9-19 in Algo 2).** Computing the Shapley values exactly involves valuing \(\bm{o}_{C}\) for each subset \(C\subseteq N\), hence, repeating Step A \(\mathcal{O}(2^{n})\) time. When the number of parties is small (e.g., \(<6\)), we can compute the Shapley values exactly. For larger \(n\), we can approximate the Shapley values \((\phi_{i})_{i\in N}\) with bounded \(\ell_{2}\)-norm error using \(\mathcal{O}(n(\log n)^{2})\) samples [25, 53]. Moreover, the value of different coalitions can be computed in _parallel_. **Therefore, this step incurs \(\mathcal{O}(2^{n})\) or \(\mathcal{O}(n(\log n)^{2})\) times the time in Step A**.
4. **Solving for \(\kappa_{i}\) to generate model reward (Sec. 5.2, Lines 21-31 in Algo 2).** During root-finding, the mediator values different model rewards \(q_{i}(\theta)\) generated by scaling the perturbed SS \(\bm{o}_{k}\), data quantity \(c_{k}\) and DP noise distribution \(Z_{k}\) of each party \(k\in N\) by different \(\kappa_{i}\), hence, repeats Step A. As we are searching for the root in a fixed interval \([0,1]\) and to a fixed precision, Step A is repeated a _constant_ (usually \(<10\)) number of times. **Therefore, this step incurs \(\mathcal{O}(nmd^{4}+m\log(m)\ \mathrm{dim}(\theta))\) time per party**. The mediator can further reduce the number of valuation of model rewards (repetitions of Step A) by using the tuples of \((\kappa_{i},r_{i})\) obtained when solving for \(\kappa_{i}\) to narrow the root-finding range for other parties after \(i\).

Therefore, the total incurred time depends on the number of valuations performed in Step A. The time complexity may vary for other inference and KL estimation methods.

Comparison of Reward Control Mechanisms via Noise Addition (Sec. 5.1) vs. Likelihood Tempering (Sec. 5.2)

See Fig. 7.

## Appendix H Experiments

The experiments are performed on a machine with Ubuntu \(20.04\) LTS, \(2\times\) Intel Xeon Gold \(6230\) (\(2.1\)GHz) without GPU. The software environments used are Miniconda and Python. A full list of packages used is given in the file environment.yml attached.

### Experimental Details

Synthetic BLR (Syn).The BLR parameters \(\theta\) consist of the weights for each dimension of the \(2\)D dataset, the bias, and the variance \(\sigma^{2}\). The _normal inverse-gamma_ distribution used (i) to generate the true regression model weights, variance, and a \(2\)D dataset and (ii) as our model prior is as follows: \(\sigma^{2}\sim\texttt{InvGamma}(\alpha_{0}=5,\beta_{0}=0.1)\) where \(\alpha_{0}\) and \(\beta_{0}\) are, respectively, the inverse-gamma shape and scale parameters, and \(\bm{w}|\sigma^{2}\sim\mathcal{N}(\bm{0},\sigma^{2}\bm{\Lambda}_{0}^{-1})\) where \(\bm{\Lambda}_{0}=0.025\)\(\bm{I}\).

We consider three parties \(1\), \(2\), and \(3\) with \(c_{0}=100\), \(c_{1}=200\), and \(c_{2}=400\) data points, respectively. We fix \(\epsilon_{1}=\epsilon_{3}=0.2\) and vary \(\epsilon_{2}\) from the default \(0.1\). As \(\epsilon_{2}\) increases (decreases), party \(2\) may become the most (least) valuable. We allow each party to have a different Gaussian distribution \(p(\bm{x}_{i})\) by maintaining a separate conjugate _normal inverse-Wishart_ distribution \(p(\omega_{i}=(\mu_{\omega,i},\Sigma_{\omega,i}))\) for each party. We set the prior \(\Sigma_{\omega,i}\sim\mathcal{W}^{-1}(\psi_{0}=\bm{I},\nu_{0}=50)\) where \(\psi_{0}\) and \(\nu_{0}\) are the scale matrix and degrees of freedom (i.e., how strongly we believe the prior), respectively. Then, \(\mu_{\omega,i}\sim\mathcal{N}(\bm{0},\Sigma_{\omega,i})\). The \(\ell_{2}\)-sensitivity is estimated using [26]'s analysis based on the norms/bounds of the dataset.

One posterior sampling run generates \(16\) Gibbs sampling chains in parallel. For each chain, we discard the first \(10000\) burn-in samples and draw \(m=30000\) samples. To reduce the closeness/correlation between samples which will affect the nearest-neighbor-based KL estimation, we thin and only keep

Figure 7: We contour plot the distribution of the regression model weights \(w_{1}\) and \(w_{2}\) for the prior, the grand coalition \(N\)’s posterior, and the model reward’s posterior to attain the target reward value \(r_{2}^{*}\) utilizing noise addition (Sec. 5.1) vs. likelihood tempering (Sec. 5.2) as the reward control mechanism for the Syn dataset where \(\rho=.5\). The tempered posterior interpolates the prior and grand coalition \(N\)’s posterior better as its mean/mode lies along the line connecting the prior’s and grand coalition \(N\)’s posterior mean and the variance is scaled by the same extent for both weights.

every \(16\)-th sample and concatenate the thinned samples across all \(16\) chains. For the experiment on reward control mechanisms, we use \(5\) independent runs of posterior sampling and KL estimation.

Californian Housing dataset (CaliH).As the CaliH dataset may contain outliers, we preprocess the "public" dataset (\(60\%\) of the CaliH data) by subtracting the median and scaling by the interquartile range for each feature. We train a _neural network_ (NN) of \(3\) layers with \([48,24,6]\) hidden units and the _rectified linear unit_ (ReLU) as the activation function to minimize the mean squared error, which we will then use as a "pre-trained NN". The outputs of the last hidden layer have \(6\) features used as the inputs for BLR. We intentionally reduce the number of features in the BLR model by adding more layers to the pre-trained NN and reduce the magnitude of the BLR inputs by adding an activation regularizer on the pre-trained NN hidden layers (i.e., \(\ell_{2}\) penalty weight of \(0.005\)). These reduce the computational cost of Gibbs sampling/KL estimation and the \(\ell_{2}\)-sensitivity of the inputs to BLR (hence the added DP noise), respectively. We also add a weights/bias regularizer with an \(\ell_{2}\) penalty weight of \(0.005\) for the last layer connected to the outputs. Lastly, we standardize the outputs of the last hidden layer to have zero mean and unit variance.

We preprocess the private dataset for valuation and the held-out validation set (an \(80\)-\(20\) split) using the same pre-trained NN/transformation process. To reduce the sensitivity and added DP noise, we filter and exclude any data point with a \(z\)-score \(>4\) for any feature. There are \(6581\) training data points left. We divide the dataset randomly among \(3\) parties such that parties \(1\), \(2\), and \(3\) have, respectively, \(20\%,30\%\) and \(50\%\) of the dataset and \(\epsilon_{1}=\epsilon_{3}=0.2\) while \(\epsilon_{2}\) is varied from the default \(0.1\).

The BLR parameters \(\theta\) consist of the weights for each of the \(6\) features, the bias, and the variance \(\sigma^{2}\). We assume \(\theta\) has a _normal inverse-gamma_ distribution and set the prior as follows. The prior depends on the MLE estimate based on the public dataset, and we assume it has the same significance as \(n_{0}=10\) data points. Hence, we set \(\sigma^{2}\sim\texttt{InvGamma}(\alpha_{0}=n_{0}/2,\beta_{0}=n_{0}/2\times \text{MLE estimate of }\sigma^{2})\) and \(\bm{w}|\sigma^{2}\sim\mathcal{N}(\bm{0},\sigma^{2}(n_{0}\;\bm{x}^{\top}\bm{x} ^{\top}\bm{x})^{-1})\).

We assume that each party has the same underlying Gaussian distribution for \(p(\bm{x})\) and maintain only one conjugate _normal inverse-Wishart_ distribution \(p(\omega=(\mu_{\omega},\Sigma_{\omega}))\) shared across parties. We initialize the prior \(p(\omega)\) to be weakly dependent on the prior dataset [39]. The \(\ell_{2}\)-sensitivity is estimated using [26]'s analysis based on the norms/bounds of the private transformed dataset.

One posterior sampling run generates \(16\) Gibbs sampling chains in parallel. For each chain, we discard the first \(10000\) burn-in samples and draw \(m=30000\) samples. To reduce the closeness/correlation between samples which will affect the nearest-neighbor-based KL estimation, we thin and only keep every \(16\)-th sample and concatenate the thinned samples across all \(16\) chains. For the experiment on reward control mechanisms, we use \(5\) independent runs of posterior sampling and KL estimation.

PIMA Indian Diabetes classification dataset (Dialb).This dataset has \(8\) raw features such as age, BMI, number of pregnancies, and a binary output variable. Patients with and without diabetes are labeled \(y=1\) and \(y=-1\), respectively. We split the training and the validation set using an \(80\)-\(20\) split. There are \(614\) training data points. There are \(35.6\%\) and \(31.8\%\) of patients with diabetes in the training and validation sets, respectively. Hence, random guessing would lead to a cross-entropy loss of \(0.629\).

We preprocess both sets by (i) subtracting the training set's median and scaling by the interquartile range for each feature, (ii) using _principal component analysis_ (PCA) to select the \(4\) most important components of the feature space to be used as new features, and lastly, (iii) centering and scaling the new features to zero mean and unit variance. To reduce the effect of outliers and the \(\ell_{2}\)-sensitivity, we clip each training data point's feature values at \(\pm 2.2\).

We divide the \(614\) training data points such that parties \(1\), \(2\), and \(3\) have, respectively, \(20\%,30\%\), and \(50\%\) of the dataset and \(\epsilon_{1}=\epsilon_{3}=0.2\) while \(\epsilon_{2}\) is varied from the default \(0.1\). We compute the approximate SS [21] and perturb them for each party to achieve the selected \(\epsilon_{i}\)[27]. The \(\ell_{2}\)-sensitivity is also estimated based on the dataset.

We consider a Bayesian logistic regression model, and its parameters \(\theta\) consist of the bias and the weights for each of the \(4\) features. Like that of [27], we set an independent standard Gaussian prior for \(\theta\) but rescale it such that the squared norm \(\left\|\theta\right\|_{2}^{2}\) has a truncated Chi-square prior with \(d=4\) degreesof freedom. Truncation prevents sampling \(\theta\) with a norm larger than \(2.5\) times the non-private/true setting's \(\theta^{*}\) squared norm during inference.

We assume each party has the same distribution for \(p(\bm{x})\). Our data prior \(p(\bm{x})\) has mean \(\bm{0}\) and covariance \(\Sigma=\text{diag}(\iota)\ \Omega\ \text{diag}(\iota)\) where \(\iota\sim\mathcal{N}(\bm{1},\bm{I}),\iota\in[0,2]\), and \(\Omega\) follows a Lewandowski-Kurowicka-Joe prior \(\text{KLJ}(2)\).

We use the _No-U-Turn_[19] sampler. We run \(25\) Markov chains with \(400\) burn-in samples and draw \(m=2000\) samples with a target Metropolis acceptance rate of \(0.86\). We discard chains with a low Bayesian fraction of missing information (i.e., \(<.3\)) and split the concatenated samples across chains into \(5\) groups to estimate KL divergence. As sampling is slower and the generated samples tend to be less correlated, we can use fewer samples.

_Remark_.: For the CaliH dataset, the preprocessing is based on the "public" dataset, but for the Diab dataset, the preprocessing (i.e., standardization, PCA) is based on the private, valued dataset. We have assumed that the data is preprocessed. However, in practice, before using our mechanism, the parties may have to reserve/separately expend some privacy budget for these processing steps. The privacy cost is ignored in our analysis of the privacy-valuation trade-off.

KL estimation.We estimate KL divergence using the \(k\)-nearest-neighbor-based KL estimator [45]. To reduce the bias due to the skew of the distribution, we apply a whitening transformation [54] where each parameter sample is centered and multiplied by the inverse of the sample covariance matrix based on all samples from \(\theta\) and \(\theta\mid\bm{o}\). As a default, we set \(k=4\) and increase \(k\) until the distance to the \(k\)-th neighbor is non-zero.

### Utility of Model Reward

The _mean negative log probability_ (MNLP) on a test dataset \(\mathcal{D}_{*}\) given the perturbed SS \(\bm{o}_{i}\) is defined as follows:

\[\text{MNLP}\triangleq\frac{1}{|\mathcal{D}_{*}|}\sum_{(\bm{x}_{*},y_{*})\in \mathcal{D}_{*}}-\log p(y_{*}|\bm{x}_{*},\bm{o}_{i})\.\]

We prefer MNLP over the _model accuracy_ or _mean squared error_ metric. MNLP additionally measures if a model is uncertain of its accurate predictions or overconfident in inaccurate predictions. In contrast, the latter metrics penalize inaccurate predictions equally and ignore the model's confidence (which is affected by the DP noise).

Regression.Approximating the predictive distribution, \(p(y_{*}|\bm{x}_{*},\bm{o}_{i})\), for test input \(\bm{x}_{*}\) as Gaussian, the MNLP formula becomes

\[\text{MNLP}\triangleq\frac{1}{|\mathcal{D}_{*}|}\sum_{(\bm{x}_{*},y_{*})\in \mathcal{D}_{*}}\frac{1}{2}\left(\log(2\pi\widehat{\sigma^{2}}(\bm{x}_{*}))+ \frac{(\widehat{\mu}(\bm{x}_{*})-y_{*})^{2}}{\widehat{\sigma^{2}}(\bm{x}_{*} )}\right)\]

where \(\mu_{*}\) and \(\widehat{\sigma^{2}}(\bm{x}_{*})\) denote the predictive mean and variance, respectively. The first term penalizes large predictive variance while the second term penalizes inaccurate predictions more strongly when the predictive variance is small (i.e., overconfidence).

* The predictive mean \(\widehat{\mu}(\bm{x}_{*})\) is the averaged prediction of \(\bm{y}_{*}\) (i.e., \(\bm{w}^{\top}\bm{x}_{*}\), where \(\bm{w}\) is part of the model parameters \(\theta\)) over all samples of the model parameters \(\theta\).
* The predictive variance \(\widehat{\sigma^{2}}(\bm{x}_{*})\) is computed using the variance decomposition formula, i.e., the sum of the averaged \(\sigma^{2}\) (the unknown variance parameter within \(\theta\)) and the computed variance in predictions over samples, i.e., \(=m^{-1}\sum_{j=1}^{m}\sigma_{j}^{2}+\widehat{\mu^{2}}(\bm{x}_{*})-\widehat{ \mu}(\bm{x}_{*})^{2}\).

Classification.We can estimate \(p(y_{*}|\bm{x}_{*},\bm{o}_{i})\), for test input \(\bm{x}_{*}\) using the Monte Carlo approximation [39] and reusing the samples \(\theta\) from \(p(\theta|\bm{o}_{i})\). Concretely, \(p(y=1|\bm{x}_{*},\bm{o}_{i})\approxeq m^{-1}\sum_{j=1}^{m}\sigma(\theta^{\top }\bm{x}_{*})\). The MNLP is equivalent to the cross-entropy loss.

### Baselines

To plot the figures in Sec. 6, the baseline DP and collaborative ML works must 1. work for similar models, i.e., Bayesian linear and logistic regression;
2. not use additional information to value coalitions and generate model rewards (to preserve the DP post-processing property); and
3. decide feasible model reward values and suggest how model rewards can be generated.

**Work of [59].** Valuation by volume is model-agnostic (satisfying criteria 1). Each party \(i\in N\) can submit the noisy version of \(\bm{X}_{i}^{\top}\bm{X}_{i}\) with DP guarantees to the mediator who can sum them to value coalitions (satisfying criteria \(2\)). The work does not propose a model reward scheme to satisfy criteria \(3\).

**Work of [47].**[47] only considered Bayesian linear regression (with known variance) and it is not straightforward to compute information gain on model parameters for Bayesian linear regression (with unknown variance) and Bayesian logistic regression. Thus, the work does not satisfy criteria \(1\). For Bayesian linear regression (with known variance), each party \(i\in N\) can submit the noisy version of \(\bm{X}_{i}^{\top}\bm{X}_{i}\) with DP guarantees to the mediator who can sum them to value coalitions (satisfying criteria \(2\)). The work proposed a model reward scheme which involves adding noise to the outputs \(\bm{y}\) ( satisfying criteria \(3\) but has to be adapted to ensure DP).

**DP-FL works.** A promising approach is to use DP-FedAvg/DP-FedSGD[36] to learn any model parameters (satisfying criteria 1) in conjunction with FedSV[55] to value coalitions without additional information (satisfying criteria 2). However, to our knowledge, these works will not satisfy criteria 3 as they do not suggest how to generate model rewards of a target reward value.

As no existing work satisfies all criteria, we compare against (1) using non-noise-aware inference instead of noise-aware inference, all else equal (in App. H.5); and (2) an adapted variant of the reward control via noise addition (in Sec. 5.1, Sec. 6, and App. G).

### Valuation Function

In Sec. 6, we only vary the privacy guarantee \(\epsilon_{i}\) of one party \(i\). In this subsection, we will analyze how other factors such as the coverage of the input space and the number of posterior samples on the valuation \(v_{i}\).

Coverage of input space.We vary the coverage of the input space by only keeping those data points whose first feature value is not greater than the \(25,50,75,100\)-percentile. Across all experiments in Table 1, it can be observed that as the percentile increases (hence, data quantity and coverage improve), the surprise elicited by the perturbed SS \(\bm{o}_{N}\) increases in tandem with the surprise elicited by the exact SS \(\bm{s}_{N}\).

Number of posterior samples.For a consistent KL estimator, the bias/variance of the KL estimator should decrease with a larger number of posterior samples.

Gibbs sampling.We compare the estimated surprise using various degrees of thinning (i.e., keeping only every \(t\)-th sample) to generate \(30000\) samples for the CaliH dataset. In Table 2, it can be observed that although the total number of samples is constant, the surprise differs significantly. Moreover,

\begin{table}
\begin{tabular}{l c c c c} \hline \hline Feature 0’s Percentile Range & \([0,25]\) & \([0,50]\) & \([0,75]\) & \([0,100]\) \\ \hline
**Syn** & & & & \\ Surprise of \(\bm{s}_{N}\) & 12.030 & 12.698 & 13.322 & 14.183 \\ Surprise of \(\bm{o}_{N}\) & 6.007 & 6.775 & 7.410 & 8.438 \\
**CaliH** & & & & \\ Surprise of \(\bm{s}_{N}\) & 21.261 & 22.401 & 26.578 & 28.422 \\ Surprise of \(\bm{o}_{N}\) & 9.282 & 10.212 & 12.121 & 17.959 \\
**Diab** & & & & \\ Surprise of \(\bm{s}_{N}\) & 5.450 & 6.279 & 7.019 & 7.258 \\ Surprise of \(\bm{o}_{N}\) & 1.854 & 2.712 & 3.909 & 5.394 \\ \hline \hline \end{tabular}
\end{table}
Table 1: We report the surprise elicited by \(\bm{s}_{N}\) and \(\bm{o}_{N}\) (with \(\epsilon=1\)) when using the subset of data with first feature value not exceeding the \(25,50,75,100\)-percentile for all datasets.

as \(t\) increases, the surprise decreases at a decreasing rate and eventually converges. This may be because consecutive Gibbs samples are highly correlated and close, thus causing us to underestimate the distance to the \(k\)-th nearest-neighbors within \(\theta\mid\bm{o}_{N}\) (see discussion in App. C.3). Increasing \(t\) reduces the correlation and closeness and better meets the i.i.d. samples assumption of the nearest-neighbor-based KL estimation method [45].

NUTS logistic regression.After drawing \(10000\) samples for the Diab dataset using the default setting, we analyze how using a subset of the samples will affect the estimated surprise. In particular, we consider using (i) the _first_\(m\) samples or (ii) _thinned_\(m\) samples where we only keep every \(10000/m\)-th sample.

In Table 3, it can be observed that as the number \(m\) of samples increases, the standard deviation of the estimated surprise decreases. Moreover, there is no significant difference between using the first \(m\) samples or the thinned \(m\) samples. This suggests that the samples are sufficiently independent and thinning is not needed.

### Additional Experiments on Valuation, Privacy-valuation Trade-off, and Privacy-reward Trade-off

Shapley value.In Fig. 8, it can be observed that as party \(2\) weakens its privacy guarantee (i.e., \(\epsilon_{2}\) increases), its Shapley value \(\phi_{2}\) increases while other parties' Shapley values (e.g., \(\phi_{3}\)) decrease.

\begin{table}
\begin{tabular}{r l} \hline \hline Thin every \(t\)-th sample & Surprise \(v_{N}\) \\ \hline \(1\) & \(14.849\pm 0.036\) \\ \(2\) & \(12.839\pm 0.033\) \\ \(4\) & \(11.626\pm 0.018\) \\ \(8\) & \(11.038\pm 0.022\) \\ \(16\) & \(10.834\pm 0.033\) \\ \(20\) & \(10.790\pm 0.032\) \\ \(30\) & \(10.793\pm 0.011\) \\ \hline \hline \end{tabular}
\end{table}
Table 2: Thinning factor \(t\) vs. surprise \(v_{N}\) for CaliH dataset.

Figure 8: Graphs of Shapley value \(\phi_{i}\) of parties \(i=1,2,3\) vs. party \(2\)’s privacy guarantee \(\epsilon_{2}\) for various datasets.

\begin{table}
\begin{tabular}{r l} \hline \hline No. \(m\) of Samples & Surprise \(v_{N}\) \\ \hline First \(1000\) & \(2.227\pm 0.051\) \\ Thinned \(1000\) & \(2.211\pm 0.034\) \\ First \(2000\) & \(2.117\pm 0.049\) \\ Thinned \(2000\) & \(2.117\pm 0.045\) \\ First \(5000\) & \(2.145\pm 0.037\) \\ Thinned \(5000\) & \(2.119\pm 0.038\) \\ All \(10000\) & \(2.128\pm 0.030\) \\ \hline \hline \end{tabular}
\end{table}
Table 3: Number \(m\) of samples vs. surprise \(v_{N}\) for Diab dataset.

[MISSING_PAGE_FAIL:34]

Higher \(\lambda=10\).In Fig. 11, the privacy-valuation, privacy-reward, and privacy-utility trade-offs are still observed when parties select a higher \(\lambda=10\) when enforcing the Renyi DP guarantee. Moreover, the utility of party \(2\)'s model reward is higher (i.e., lower MNLP) than that of its individually trained model.

### Additional Experiments on Reward Control Mechanisms

For the CaliH dataset, there is a monotonic relationship between \(r_{i}\) vs. both \(\kappa_{i}\) and \(\tau_{i}\), as shown in Fig. 11(a). However, it can be observed from Figs. 11(b)-c that for the same attained reward value \(r_{i}\), adding scaled noise variance \(\tau_{i}\) will lead to a lower similarity \(r_{i}^{\prime}\) to the grand coalition \(N\)'s posterior \(p(\theta|\bm{o}_{N})\) and utility of model reward (higher MNLP\({}_{r}\)) than tempering the likelihood by \(\kappa_{i}\).

Figure 11: Graphs of party \(2\)’s (a-c) valuation \(v_{2}\), Shapley value \(\phi_{2}\), and attained reward value \(r_{2}\), and (d-f) utility of its model reward \(q_{i}(\theta)\) measured by MNLP\({}_{r}\) vs. privacy guarantee \(\epsilon_{2}\) for various datasets when enforcing \((\lambda=10,\epsilon_{i})\)-Rényi DP guarantee.

Figure 10: Graphs of utility of party \(i=2\)’s model reward \(q_{i}(\theta)\) measured by MNLP\({}_{r}\) vs. privacy guarantee \(\epsilon_{2}\) for Syn dataset (a) when \(\epsilon_{1}=\epsilon_{3}=2\) instead of \(0.2\), and (b) when only a subset of \(c_{k}/2\) data points is available for every party \(k=1,2,3\). (c) Graph of utility of party \(i=1\)’s model reward \(q_{i}(\theta)\) measured by MNLP\({}_{r}\) vs. privacy guarantee \(\epsilon_{1}\) for Diab dataset when \(\epsilon_{2}=\epsilon_{3}=2\) instead of \(0.2\) and only a subset of \(c_{k}/2\) data points is available for every party \(k=1,2,3\).

For Diab dataset, there is a monotonic relationship between \(r_{i}\) vs. both \(\kappa_{i}\) and \(\tau_{i}\), as shown in Fig. 12(a). However, it can be observed from Fig. 12(b)-c that for the same attained reward value \(r_{i}\), tempering the likelihood by \(\kappa_{i}\) leads to a higher similarity \(r_{i}^{\prime}\) to the grand coalition \(N\)'s posterior \(p(\theta|\bm{o}_{N})\) and utility of model reward (lower MNLP\({}_{r}\)) than adding scaled noise variance \(\tau_{i}\).

Problematic noise realization.We will show here and in Fig. 13(a) that some (large) noise realization can result in a non-monotonic relationship between the attained reward value \(r_{i}\) vs. the scaled additional noise variance \(\tau_{i}\). As a result, it is hard to bracket the smallest root \(\tau_{i}\) that solves for \(r_{i}=r_{i}^{*}\) (e.g., \(=2\) or \(=3\)). Moreover, it can be observed from Figs. 13(b)-c that the model reward's posterior \(q_{i}(\theta)\) has a low similarity \(r_{i}^{\prime}\) to the grand coalition \(N\)'s posterior \(p(\theta|\bm{o}_{N})\) and a much higher MNLP\({}_{r}\) than the prior. This suggests that injecting noise does not interpolate well between the prior and the posterior. In these cases, it is not suitable to add scaled noise variance \(\tau_{i}\) and our reward control mechanism via likelihood tempering with \(\kappa_{i}\), is preferred instead.

Figure 14: (a) Graph of attained reward value \(r_{i}\) vs. \(\kappa_{i}\) (Sec. 5.2) and \(\tau_{i}\) (Sec. 5.1), (b) graph of similarity \(r_{i}^{\prime}\) to the grand coalition \(N\)’s posterior \(p(\theta|\bm{o}_{N})\) vs. \(r_{i}\), and (c) graph of utility of party \(i=2\)’s model reward \(q_{i}(\theta)\) measured by MNLP\({}_{r}\) vs. \(r_{i}\) for Syn dataset corresponding to (a).

Other Questions

**Question 1: Are there any ethical concerns we foresee with our proposed scheme?**

**Answer:** Our privacy-valuation trade-off (V3) should deter parties from _unfetteredly_ selecting excessively strong DP guarantees. Parties inherently recognize the benefits of stronger DP guarantees and may prefer such benefits in collaboration out of overcavation, mistrust of others, and convenience. The trade-off counteracts (see Fig. 1) the above perceived benefits by explicitly introducing costs (i.e., lower valuation and quality of model reward). Consequently, parties will carefully select a weaker yet satisfactory privacy guarantee they truly need.

However, a potential concern is that parties may opt to sacrifice their data's privacy to obtain a higher-quality model reward. The mediator can alleviate this concern by enforcing a minimum privacy guarantee (i.e., maximum \(\epsilon\)) each party must select. The model rewards will preserve this minimum privacy guarantee due to P1. The mediator can also decrease the incentive by modifying \(v_{C}\).

Another potential concern is that if parties have data with significantly different quantity/quality/privacy guarantees, the weaker party \(k\) with fewer data or requiring a stronger privacy guarantee will be denied the best model reward (i.e., trained on the grand coalition's SS) and instead rewarded with one that is of lower quality for fairness. The mediator can alleviate the concern and at least ensure individual rationality (P4) by using a smaller \(\rho\) so that a weaker party \(k\) can obtain a higher-quality model reward with a higher target reward value \(r_{k}^{*}\).

**Question 2: Is it sufficient and reasonable to value parties based on the submitted information \(\{c_{i},\bm{o}_{i},p(Z_{i})\}_{i\in N}\) instead of ensuring and incentivizing truthfulness? Would parties strategically declare other values to gain a higher valuation and reward?**

**Answer:** An ideal collaborative ML scheme should additionally incentivize parties to be truthful and verify the authenticity of the information provided. However, achieving the "truthfulness" incentive is hard and has only been tackled by existing works to a limited extent. Existing work cannot discern if the data and information declared are collected or artificially created (e.g., duplicated) and thus, this non-trivial challenge is left to future work. The work of [32] assigns and considers each client's reputation from earlier rounds, while the works of [29, 31] measure the correlation in parties' predictions and model updates. The work of [7] proposes a payment rule based on the log point-wise mutual information between a party's dataset and the pooled dataset of others. This payment rule guarantees that when all other parties are truthful (i.e., a strong assumption), misreporting a dataset with an inaccurate posterior is worse (in expectation) than reporting a dataset with accurate posterior.22

Footnote 22: The payment rule may be unfair as when two parties are present, they will always be paid equally.

Thus, like the works of [18, 17, 25, 40, 47, 51] and others, we value data _as-is_ and leave achieving the "truthfulness" incentive to future work. In practice, parties such as hospitals and firms will truthfully share information as they are primarily interested in building and receiving a model reward of high quality and may additionally be bound by the collaboration's legal contracts and trusted data-sharing platforms like Ocean Protocol [43]. For example, with the use of X-road ecosystem,23 parties can maintain a private database which the mediator can query for the perturbed SS. This ensures the authenticity of the data (also used by the owner) and truthful computation given the uploaded private database.

Footnote 23: https://joinup.ec.europa.eu/collection/ict-security/solution/x-road-data-exchange-layer/about, https://x-road.global/

Lastly, a party \(k\) who submits fake SS will also reduce its utility from the collaboration. Party \(k\)'s fake SS will affect the grand coalition's posterior of the model parameters given all perturbed SS and is also used to generate \(k\)'s model reward. As party \(k\) only receives posterior samples, \(k\) cannot replace the fake SS with its exact SS locally. As party \(k\) have to bear the consequences of the fake SS, it would be more likely to submit true information.

**Question 3: Why do we only consider Bayesian models with SS?**

**Answer:** See App A.1 for a background on SS. Our approach would also work for Bayesian models with approximate SS, such as Bayesian logistic regression, and latent features extracted by a neural network.

1. The exact SS \(\bm{s}_{i}\) captures all the information (i.e., required by the mediator) within party \(i\)'s dataset \(\mathcal{D}_{i}\). Thus, the mediator can do valuation and generate model rewards from the perturbed SS \(\{\bm{o}_{i}\}_{i\in N}\) without requesting more information from the parties. This limits the privacy cost and allows us to rely on the DP post-processing property.
2. In Sec. 3, the proof that Def. 3.1 satisfies a privacy-valuation trade-off (V3) uses the properties of SS.

Our work introduces privacy as an incentive and simultaneously offers a new perspective that excessive DP can and should be deterred by introducing privacy-valuation and privacy-reward trade-offs and accounting for the DP noise. We use Bayesian models with SS as a case study to show how the incentives and trade-offs can be achieved. It is up to the future work to address the non-trivial challenge of ensuring privacy-valuation and privacy-reward trade-offs for other models.

**Question 4:** Can alternative fair reward schemes be used in place of \(\rho\)**-Shapley fair reward scheme [47]?**

**Answer:** Yes, if they satisfy P3 and P4. For example, if the exchange rate between the perturbed SS quality and monetary payment is known, then the scheme of [40] can be used to decide the reward instead. Our work will still ensure the privacy-valuation trade-off and provide the mechanism to generate the model reward \(q_{i}(\theta)\) to attain any target reward value \(r_{i}^{*}\) while preserving similarity to the grand coalition \(N\)'s model (P5).

**Question 5:** What is the difference between our work here and that of [47]?**

**Answer:** We clearly outlined our contributions in bullet points at the end of the introduction section (Sec. 1) and in Fig. 1.

At first glance, our work seems to only add a new privacy incentive. However, as discussed in the introduction section (Sec. 1), privacy is barely considered by existing collaborative ML works and raises significant challenges. The open questions/challenges in [64]'s survey on adopting DP in game-theoretic mechanism design (see Sec. 7.1 therein) inspire us to ask the following questions:

* How can DP and the aims of cooperative game theory-inspired collaborative ML be compatible? Will DP invalidate existing properties like fairness?
* How should parties requiring a strong DP guarantee be prevented from _unfairly_ and _randomly_ obtaining a high-quality model reward?

We propose to enforce a _provable_ privacy-valuation trade-off to answer the latter. The enforcement involves novelly selecting and combining the right valuation function and tools, such as DP noise-aware inference.

Additionally, we propose a new reward control mechanism that involves tempering the likelihood (practically, scaling the SS) to preserve similarity to the grand coalition's model (P5) and hence increase the utility of the model reward.

**Question 6:** Will a party with high-quality data (e.g., a large data quantity, less need for DP guarantee) be incentivized to participate in the collaboration?**

**Answer:** From Fig. 3, it may seem that a rich party \(i\) with ample data and a weak privacy guarantee (i.e., large \(\epsilon_{i}\)) has a lower utility of model reward to gain from the collaboration. However, it may still be keen on a further marginal improvement in the utility of its model reward (e.g., increasing the classification accuracy from \(97\%\) to \(99\%\) and predicting better for some sub-groups) and can reasonably expect a better improvement as other parties are incentivized by our scheme (through enforcing a privacy-valuation trade-off and fairness F4) to contribute more data at a weaker yet satisfactory DP guarantee (see App. H.5). Moreover, a rich party does not need to be concerned about others unfairly benefiting from its contribution as our scheme guarantees fairness through Shapley value. In Fig. 8, as a party selects a weaker DP guarantee (and allelse being held constant), the Shapley values of others, which determine their model rewards, decrease.

**Question 7: What is the impact of varying other hyperparameters?**

**Answer:** The work of [47] proposes \(\rho\)-Shapley fairness and theoretically and empirically show that any \(\rho>0\) guarantees fairness across parties and a smaller \(\rho\) will lead to a higher attained reward value \(r_{i}\) for all other parties which do not have the largest Shapley value. These properties apply to our problem setup, and using a larger \(\rho\) will worsen/reduce \(r_{i}\) and the utility of party \(i\)'s model reward \(q_{i}(\theta)\) measured by MNLP\({}_{r}\). The work of [47] has empirically shown that the number of parties does not impact the scheme's effectiveness. However, it affects the time complexity to compute the exact and approximate SV.

More importantly, the extent to which party \(i\) can benefit from its contribution depends on the quantity/quality of its data relative to that of the grand coalition \(N\) (and the suitability of the model or informativeness of the prior).

Party \(i\)'s DP guarantee \(\epsilon_{i}\) is varied in Sec. 6 while the DP guarantee \(\epsilon_{k}\) of the other party \(k\) and its number \(c_{k}\) of data points for \(k\in N\) are varied in App. H.5. The privacy order \(\lambda\) is varied in App. H.5. Across all experiments, we observe that the privacy-valuation trade-off holds. Moreover, when (i) a party \(i\) has lower-quality data in the form of fewer data points or smaller \(\epsilon_{i}\), or (ii) another party \(k\) has higher-quality data such as a larger \(\epsilon_{k}\), the improvement in the utility of its model reward over that of its individually trained model is larger.

**Question 8: Can privacy be guaranteed by using secure multi-party computation and homomorphic encryption in model training/data valuation?**

**Answer:** These techniques are designed to prevent direct information leakage and prevent the computer from learning anything about the data. However, as the output of the computation is correct, any mediator and collaborating party with access to the final model can query the model for predictions and infer private information/membership of a datum (indirect privacy leakage). In our work here, every party can access a model reward. Hence, the setup should prevent each party from inferring information about a particular instance in the data beyond what can be learned from the underlying data distribution through strong _DP guarantees_.

**Question 9: In Sec. 4, we mention that (i) it is possible to have negative marginal contributions (i.e., \(v_{C\cup i}<v_{C}\)) in _rare_ cases and (ii) adding some noise realizations may counter-intuitively create a more valuable model reward (e.g., \(r_{i}>v_{N}\)). Why and what are the implications?**

**Answer:** For our choice of valuation function via Bayesian surprise, the party monotonicity (V2) and privacy-valuation trade-off (V3) properties involve taking expectations, i.e., _on average/in most cases_, adding a party will not decrease the valuation (i.e., the marginal contribution is non-negative), and strengthening DP by adding more noise should decrease the reward value. However, in rare cases, (i) and (ii) can occur. We have never observed (i) in our experiments, but a related example of (ii) is given in Fig. 14a: A larger \(\tau_{i}\) surprisingly increased the valuation.

The implication of (i) is that the Shapley value \(\phi_{i}\) may be negative, which results in an unusable negative/undefined \(r_{i}^{*}\). However, this issue can be averted while preserving P3 by upweighting non-negative MCs, such as to the empty set, as mentioned in Footnote 10. The implication of (ii) is that some (large) noise realization can result in a more valuable model reward than the grand coalition's model, i.e., \(r_{i}>v_{N}\). However, collaborating parties still prefer \(p(\theta|\bm{o}_{N})\) valued at \(v_{N}\) as the more surprising model reward is _not_ due to observations and information. This motivates us to define more specific desiderata (P1 and P2) for our reward scheme.

Lastly, one may question if we should change the valuation function. Should we use the information gain \(\mathbb{I}(\theta;\bm{o}_{C})=\mathbb{E}_{\bm{o}_{C}}[v_{C}]\) on model parameters \(\theta\) given perturbed SS \(\bm{o}_{C}\) instead to eliminate (i) and (ii)? No, the information gain is undesirable as it disregards the _observed_ perturbed SS \(\bm{o}_{C}\) and will not capture a party's preference for higher similarity of its model reward to the grand coalition \(N\)'s posterior \(p(\theta|\bm{o}_{N})\).