# Understanding Representation of Deep Equilibrium Models from Neural Collapse Perspective

 Haixiang Sun

ShanghaiTech University

sunhx@shanghaitech.edu.cn &Ye Shi

ShanghaiTech University

shiye@shanghaitech.edu.cn

Corresponding author.

###### Abstract

Deep Equilibrium Model (DEQ), which serves as a typical implicit neural network, emphasizes their memory efficiency and competitive performance compared to explicit neural networks. However, there has been relatively limited theoretical analysis on the representation of DEQ. In this paper, we utilize the Neural Collapse (\(\mathcal{NC}\)) as a tool to systematically analyze the representation of DEQ under both balanced and imbalanced conditions. \(\mathcal{NC}\) is an interesting phenomenon in the neural network training process that characterizes the geometry of class features and classifier weights. While extensively studied in traditional explicit neural networks, the \(\mathcal{NC}\) phenomenon has not received substantial attention in the context of implicit neural networks. We theoretically show that \(\mathcal{NC}\) exists in DEQ under balanced conditions. Moreover, in imbalanced settings, despite the presence of minority collapse, DEQ demonstrated advantages over explicit neural networks. These advantages include the convergence of extracted features to the vertices of a simplex equiangular tight frame and self-duality properties under mild conditions, highlighting DEQ's superiority in handling imbalanced datasets. Finally, we validate our theoretical analyses through experiments in both balanced and imbalanced scenarios.

## 1 Introduction

Recently, there has been significant research on _implicitly-defined layers_ in neural networks [1; 2; 3; 6; 9; 20; 21; 49], where the output is implicitly mapped from the input under certain conditions. These layers embed interpretability and introduce inductive bias [26] into black-box neural networks, demonstrating superior performance compared to existing explicit layers.

Among these implicit networks, the Deep Equilibrium Model (DEQ) is a memory-efficient architecture that represents all hidden layers as the equilibrium point of a nonlinear fixed-point equation. Due to the absence of a closed-form solution in its forward process, DEQ can be viewed as having an infinite number of layers during iteration as long as the threshold is set low enough, enhancing its ability to fit input data. Consequently, its representational capacity is relatively stronger compared to a single-layer network structure. This phenomenon explains why DEQ has achieved state-of-the-art results in classification tasks compared to existing architectures like ResNet. For instance, it has been successfully applied to language tasks and image classification tasks, reaching state-of-the-art performance. Additionally, DEQ can be applied in various domains and integrated with numerous other models, including inverse problems [19], Neural ODEs [11], diffusion models [24; 43], Gaussian processes [17], and more.

However, recent research reveals a phenomenon called Neural Collapse (\(\mathcal{NC}\)) concerning the learned deep representations across datasets in image classification tasks [42]. Under the \(\mathcal{NC}\) regime, the lastlayer feature of each sample in neural networks collapses to their within-class mean, and the classifier vector converges to a simplex Equiangular Tight Frame (ETF). Theoretical analyses [10; 40; 51] indicate that under the Unconstrained Features Mode (UFM) condition, specific features \(\bm{H}^{0}\) can be isolated from the entire network, known as the layer-peeled model [14]. In this scenario, Neural Collapse (\(\mathcal{NC}\)) is observed under certain conditions, suggesting that \(\mathcal{NC}\) is agnostic to the backbone of feature extraction. Moreover, since \(\mathcal{NC}\) measures the degree of proximity between features of the same category, an imbalanced dataset can exert a more negative influence on the performance of \(\mathcal{NC}\). For instance, classes with fewer samples may not separate well and could converge in the same direction, leading to what is known as _Minority Collapse_[14]. Thus, the \(\mathcal{NC}\) metric serves as a valuable indicator of a model's behavior in the context of imbalanced datasets.

The reasons behind the superior performance of DEQ still lack theoretical proof and comprehensive quantitative analysis. Additionally, to the best of our knowledge, no prior work has integrated DEQ with imbalanced scenarios. In our study, we integrate DEQ with layer-peeled models, add constraints with respect to weights \(\bm{W}_{\text{DEQ}}\), and consider the results of fixed-point iteration as the output of DEQ. Therefore, we analyze the performance of \(\mathcal{NC}\) in DEQ by continuously deriving the lower bound of the loss function under certain constraints, allowing us to assess how \(\mathcal{NC}\) manifests in the training performance of the network. Similarly, we apply the same operations to explicit neural networks for comparison. Our results show that DEQ performs similarly to explicit neural networks under balanced settings. We further extend the dataset to imbalanced conditions and analyze the \(\mathcal{NC}\) performance in DEQ, explaining why DEQ tends to outperform explicit neural networks under mild conditions. We systematically analyze performance in terms of feature convergence, distance to the Simplex ETF, and the parallel relationship between extracted features and classifier weights. These analyses uncover the reasons behind the superior performance of DEQ compared to explicit neural networks during training. Additionally, the experimental results in both balanced and imbalanced scenarios validate our theoretical analyses.

Our main contributions are:

* We systematically analyzed the representation of DEQ from the \(\mathcal{NC}\) perspective and compared their performance with explicit neural networks. Our theoretical analysis shows that both DEQ and explicit neural networks exhibit the \(\mathcal{NC}\) phenomenon in balanced datasets.
* Under imbalanced settings, we theoretically proved the convergence of extracted features to the vertices of a simplex ETF and alignment with classifier weights under certain conditions, demonstrating DEQ's advantages over explicit neural networks under some mild conditions.
* Experimental results on Cifar-10 and Cifar-100 validated our theoretical findings for distinguishing the differences between DEQ and explicit neural networks.

## 2 Background and related works

We consider a classification task with \(K\) classes. Let \(n_{k}\) denote the number of training samples in each class \(k\), and \(N=\sum\limits_{k=1}^{K}n_{k}\) represent the total number of training samples. A traditional neural network can be expressed as a mapping:

\[\psi(\bm{x})=\bm{W}\phi(\bm{x})+\bm{b},\] (1)

where \(\phi(\bm{x}):\mathbb{R}^{\text{in}\times N}\rightarrow\mathbb{R}^{D\times N}\) is the feature extraction, \(\bm{W}\in\mathbb{R}^{K\times D}\) and \(\bm{b}\in\mathbb{R}^{K}\) are the classifiers and bias in the last layer, respectively. For simplicity, we consider the bias-free case and omit the term \(\bm{b}\). Besides, we will denote \(\bm{H}=\phi(\bm{x})\) in later sections.

### Deep Equilibrium Models

There have been numerous neural network architectures designed for various practical tasks from different perspectives [17; 32; 38; 39; 48]. DEQ, a typical implicit network [13; 52], incorporates unrolling methods [12; 41], which are devised for training arbitrarily deep networks by integrating all the network layers into one [3; 4; 5; 35; 36; 58].

Let \(f_{\theta}(\bm{z},\bm{x})\) represent a DEQ layer with input \(\bm{x}\) parameterized by \(\theta\). When \(z^{\star}\) reaches the equilibrium point, it satisfies:

\[g_{\theta}(\bm{z}^{\star},\bm{x})\triangleq f_{\theta}(\bm{z}^{\star},\bm{x})- \bm{z}^{\star}=0.\] (2)

The forward procedure mostly employs the Broyden solver [7] for iterative solving:

\[\bm{z}_{t+1}=\bm{z}_{t}-\bm{B}_{t}^{-1}g_{\theta}(\bm{z}_{t},\bm{x}),\] (3)

where \(\bm{B}_{t}^{-1}\) refers to the approximation of inverse matrix \(\nabla_{\bm{z}}^{-1}g_{\theta}(\bm{z}_{t},\bm{x})\), as well as the same parameter \(\theta\) shared across iterations. However, the solution can be quite unstable, and efforts have been made to enhance stability and robustness [34; 44; 55; 56]. Especially, regarding the computation of the inverse matrix, it can be expanded in the form of a Neumann series [18; 60]. Besides, accelerating and stabilizing the backward procedure is also an important issue in DEQ [15].

### Neural Collapse \(\mathcal{NC}\)

The phenomenon of \(\mathcal{NC}\) was initially uncovered by [42], which is considered an intriguing regularity in neural network training with many elegant geometric properties [50; 61; 66]. When the model is at the terminal phase of training (TPT), or more precisely, achieves zero training error, the within-class means of features and the classifier vectors converge to the vertices of a simplex Equiangular Tight Frame (ETF) on a balanced dataset.

**Definition 2.1**.: (Simplex Equiangular Tight Frame) A collection of points \(\bm{s}_{i}\in\mathbb{R}^{D}\), \(i=1,2,\cdots,K\), is said to be a simplex equiangular tight frame if

\[\bm{S}=\alpha\sqrt{\frac{K}{K-1}}\bm{P}\Big{(}\bm{I}_{K}-\frac{1}{K}\bm{1}_{K} \bm{1}_{K}^{T}\Big{)},\] (4)

where \(\alpha\) is a non-zero scalar, \(\bm{S}=[\bm{s}_{1},\cdots,\bm{s}_{k}]\in\mathbb{R}^{D\times K}\), \(\bm{I}_{K}\in\mathbb{R}^{K\times K}\) is the identity matrix, \(\bm{1}_{K}\) is the ones vector, and \(\bm{P}\in\mathbb{R}^{D\times K}(D\geq K)\) is a partial orthogonal matrix such that \(\bm{P}^{T}\bm{P}=\bm{I}_{K}\).

\(\mathcal{NC}\) incorporates the following four properties of the last-layer features and classifiers in deep learning training on balanced datasets:

\(\mathcal{NC}1\)**: **Variability collapse:** The feature within-class converges to a unique vector, _i.e._, for any sample \(i\) in the same class \(k\), its feature \(\bm{h}_{k,i}\) satisfies \(\|\bm{h}_{k,i}-\tilde{\bm{h}}_{k}\|\to 0,k\in[k]\), with the training procedure.

\(\mathcal{NC}2\)**: **Convergence to simplex ETF:** The mean value \(\bm{h}^{\star}\) of optimal features for each class collapses to the vertices of the simplex ETF.

\(\mathcal{NC}3\)**: **Convergence to self-duality:** The class means and the classifier weights mutually converge: \(\frac{\bm{W}^{\star}}{\|\bm{W}\|}=\frac{\bm{H}^{\star}}{\|\bm{H}\|}\).

\(\mathcal{NC}4\)**: **Nearest Neighbor:** The classifier determines the class based on the Euclidean distances among the feature vector and the classifier weights.

### Layer-peeled model under balanced and imbalanced conditions

Current studies often focus on the case where only the last-layer features and classifier are learnable without considering the layers in the backbone network under the assumption of Unconstrained Features Mode (UFM) [66], which can also be referred to as the Layer-peeled Model [14; 28]. First, we define the feasible set of parameters:

\[\mathcal{C}=\left\{\bm{w}_{k},h_{k,i}\ |\ \frac{1}{K}\sum_{k=1}^{K}\|\bm{w}_{k} \|^{2}\leq E_{W},\frac{1}{K}\sum_{k=1}^{K}\frac{1}{n_{k}}\sum_{i=1}^{n_{k}}\| \bm{h}_{k,i}\|^{2}\leq E_{H}\right\}.\] (5)

**Definition 2.2**.: (Layer-peeled Model) When \(\bm{H}\) and \(\bm{W}\) are the last layer classifier and weights respectively, then the optimization process of the neural network can be reformulated as:

\[\min_{\bm{W},\bm{H}}\ \ \ \frac{1}{N}\sum_{k=1}^{K}\sum_{i=1}^{n_{k}}\mathcal{L}( \bm{W}\bm{h}_{k,i},\bm{y}_{k})\ \ \ \text{s.t.}\ \ \bm{w}_{k},\bm{h}_{k,i}\in\mathcal{C},\] (6)

where \(E_{H}\) and \(E_{W}\) are two predefined values, \(N\) refers to the total number of samples.

It should be noted that all the loss functions \(\mathcal{L}\) analyzed in our study are cross-entropy, as most current research focuses on this widely used deep learning classification loss function [23; 31]. And though the optimization program is nonconvex; however, it can generally be mathematically tractable for analysis. Besides, experiments with unregularized loss function and randomly initialized gradient descent typically converge to non-collapse global minimizers [51].

Under UFM, most \(\mathcal{NC}\) studies are based on 1-2 conventional layers of weights, However, there is also work [10; 51] that extends it to analyze \(M\) linear layers. Additionally, various studies have revealed additional characteristics of \(\mathcal{NC}\), such as its impact on generalization [16; 25; 27; 61], its influence on feature learning [45], global optimality of the network [64; 66] and others. Therefore, \(\mathcal{NC}\) is a very efficient tool to analyze the performance of neural networks.

**Imbalanced learning** However, \(\mathcal{NC}\) will not occur under imbalanced settings generally. This phenomenon arises due to the imbalance in sample quantities, leading to challenges in adequately fitting features for certain classes. This is commonly referred to as _minority collapse_[8; 14]. As the degree of imbalance increases, it is expected that classifiers for minority classes converge. When Minority Collapse occurs, the neural network predicts equal probabilities for all minority classes, regardless of the input.

To enhance learning performance in imbalanced scenarios [62] and mitigate the effects of minority collapse, several methods have been proposed. [14] introduced convex relaxation, modifying a loss function [57], and incorporating a regularization term [37]. The reweighted approach is also widely applied, with some studies measuring it based on sample quantities [47; 59]. Additionally, adaptive techniques such as AutoBalance [33] have been introduced, which incorporates a bilevel optimization framework, along with logit balance [46; 54; 63; 65].

## 3 Comparison under balanced setting

In this section, we first analyze the \(\mathcal{NC}\) phenomenon in DEQ under balanced settings. As illustrated in Figure 1, after completing the initial feature extraction, we further examine the feature \(\bm{H}\) obtained respectively by explicit neural networks and DEQ to reveal the \(\mathcal{NC}\) phenomenon.

### \(\mathcal{NC}\) in Explicit Neural Networks

Building upon (6), we analyze \(\mathcal{NC}\) in explicit neural networks by considering the following constrained optimization problem during training:

\[\begin{split}\min_{\bm{W},\bm{W}_{\text{EX}},\bm{H}^{0}}& \frac{1}{N}\sum_{k=1}^{K}\sum_{i=1}^{n}\mathcal{L}(\bm{W}\bm{W}_{ \text{EX}}\bm{h}^{0}_{k,i},\bm{y}_{k})\\ \text{s.t.}&\|\bm{W}_{\text{EX}}\|_{F}\leq E_{H}; \bm{w}_{k},\bm{h}_{k,i}\in\mathcal{C},\end{split}\] (7)

Figure 1: Illustration of feature extraction. After extracting feature maps \(\bm{H}^{0}\), further features \(\bm{H}\) or \(\bm{z}^{\star}\) can be obtained by passing through an explicit neural network or DEQ. The final step involves the classifier to obtain predicted logits. To ensure a fair comparison, we standardize the backbone network and its output \(\bm{H}^{0}\) across all conditions.

where each \(n_{k}\) is set to \(n\) under the balanced setting, \(\bm{W}_{\text{EX}}\) represents the subsequent network weights. For ease of comparison with DEQ, we assume that the final feature is represented as \(\bm{H}=\bm{W}_{\text{EX}}\bm{H}^{0}\). Traditional neural network structures are nonconvex, making them challenging to analyze due to their highly interactive nature. Employing the layer-peeled model alleviates the difficulty of \(\mathcal{NC}\) analysis.

### \(\mathcal{NC}\) in Deep Equilibrium models

Building upon recent investigations into the \(\mathcal{NC}\) phenomenon, we embrace the layer-peeled model, where the last-layer features \(\bm{h}=\phi(\bm{x})\) (equilibrium points in DEQ \(\bm{z}^{\star}\)) as unconstrained optimization variables. Accordingly, we add the following constraints to enforce \(\mathcal{NC}\) in DEQ:

\[\mathcal{C}_{\text{DEQ}}\triangleq\big{\{}\bm{z}^{\star},\bm{W}_{\text{DEQ}}| \leavevmode\nobreak\ \bm{z}^{\star}=f(\bm{H}^{0};\bm{W}_{\text{DEQ}}),\leavevmode\nobreak\ \leavevmode\nobreak\ \|\bm{W}_{\text{DEQ}}\|_{F}\leq E_{H}\big{\}}.\] (8)

Compared to explicit layers, the active parameter in Deep Equilibrium models is \(W_{\text{DEQ}}\), hence imposing restrictions on it to align with the same feasible space. Then the formulation of DEQ with \(\mathcal{NC}\) becomes:

\[\min_{\bm{W},\bm{W}_{\text{DEQ}},\bm{z}^{\star},\bm{H}^{0}} \frac{1}{N}\sum_{k=1}^{K}\sum_{i=1}^{n_{k}}\mathcal{L}(\bm{W}\bm{ z}^{\star},\bm{y}_{k})\] (9) s.t. \[\bm{w}_{k},\bm{h}_{k,i}\in\mathcal{C};\bm{z}^{\star},\bm{W}_{\text {DEQ}}\in\mathcal{C}_{\text{DEQ}}.\]

No matter whether under DEQ or explicit neural networks, these constraints must be imposed. This is because when these constraints are satisfied and the loss function reaches its lower bound, the \(\mathcal{NC}\) phenomenon is guaranteed. In our theoretical analysis, we assume that the DEQ is linear, that is, \(\bm{z}^{\star}=\text{fixed-point}(f_{\theta}(\bm{x}),\bm{z})=\sum\limits_{i=0 }^{\infty}\bm{W}_{\text{DEQ}}^{i}\bm{x}\). Detailed analysis incorporating these constraints is provided in Appendix B.

The following theorem elucidates the specific scenarios in which the \(\mathcal{NC}\) phenomenon occurs. For a fair comparison, we assume that the extracted features \(\bm{H}^{0}\) of the image encoder are the same in the derivation.

**Theorem 3.1**.: _(Feature collapse of explicit fully connected layers and implicit deep equilibrium models under balanced setting) Suppose (7) and (9) reaches its minimal, then \(\mathcal{NC}1\): For \(\forall\leavevmode\nobreak\ k=1,2,\cdots,K\) and \(\forall\leavevmode\nobreak\ i=1,2,\cdots,n\):_

\[\bm{W}_{\text{EX}}\bm{h}_{k,i}^{0}=\bm{W}_{\text{EX}}\bm{h}_{k}^{0},\]

_where \(\bm{h}_{k}^{0}=\sum\limits_{i\in\tau(k)}\bm{h}_{k,i}^{0}\). Similarly, if the model is DEQ, then_

\[f(\bm{h}_{k,i}^{0};\bm{W}_{\text{DEQ}})=f(\bm{h}_{k}^{0};\bm{W}_{\text{DEQ}}).\]

\(\mathcal{NC}2\)_: The classifier aligns to the Simplex ETF, regardless of whether explicit neural network and DEQ are applied:_

\[\bm{W}\bm{W}^{T} =\sqrt{E_{W}/E_{H}}\bm{W}\bm{W}_{\text{EX}}\bm{H}^{0}\] \[=\sqrt{E_{W}/E_{H}}\bm{W}f(\bm{H}^{0};\bm{W}_{\text{DEQ}})\] \[=\frac{KE_{W}}{K-1}\left(\bm{1}_{K}-\frac{1}{K}\bm{1}_{K}\bm{1}_{ K}^{T}\right).\]

\(\mathcal{NC}3\)_: For \(\forall\leavevmode\nobreak\ k=1,2,\cdots,K\), the feature aligns to the weights:_

\[\bm{W}_{\text{EX}}\bm{h}_{k}^{0}\propto\bm{W}_{k}.\]

_In DEQ cases:_

\[f(\bm{h}_{k}^{0};\bm{W}_{\text{DEQ}})\propto\bm{W}_{k}.\]

The theorem demonstrates that when the network training reaches its limit, i.e., when the loss function reaches its minimum, the \(\mathcal{NC}\) phenomenon emerges regardless of whether the chosen network is DEQ or explicit neural network. Besides, in certain scenarios, the lower bound of the loss function for DEQ is relatively smaller compared to explicit neural networks. More detailed proofs are in Appendix Section B.

Comparison under imbalanced setting

In this section, we analyze the performance differences between DEQ and explicit neural network on imbalanced datasets. We observe that, unlike in balanced scenarios, as long as certain conditions are met, the advantages of DEQ over explicit neural network become more pronounced on imbalanced datasets. And we provide theoretical evidence to support this phenomenon.

Suppose the total number of classes is \(K\), with \(K_{A}\) being the number of majority classes and \(K_{B}=K-K_{A}\) being the number of minority classes. Each majority class has \(n_{A}\) samples, and each minority class has \(n_{B}\) samples. The total number of samples is given by \(N=K_{A}n_{A}+K_{B}n_{B}\). Note that \(n_{A}>n_{B}\) with no requirement for \(K_{A}\) to be greater than \(K_{B}\). We first start with the loss function, which can be partitioned into two components as follows:

\[\begin{split}&\min\limits_{\bm{W},\bm{\tilde{W}},\bm{H}^{0}}\frac{K_{A} n_{A}}{N}\sum\limits_{k=1}^{K_{A}}\sum\limits_{i=1}^{n_{A}}\mathcal{L}(\bm{W} \bm{\tilde{W}}\bm{H}^{0},\bm{y}_{k})+\frac{K_{B}n_{B}}{N}\sum\limits_{k=K_{A}+1 }^{K_{B}}\sum\limits_{i=1}^{n_{B}}\mathcal{L}(\bm{W}\bm{\tilde{W}}\bm{H}^{0}, \bm{y}_{k}),\\ &\text{s.t.}\ \ \ \bm{\tilde{W}}\in\{\mathcal{C}_{\text{EX}}\ \text{ or}\ \mathcal{C}_{\text{DEQ}}\}\,,\ \ \bm{w}_{k},\bm{h}_{k,i}\in\mathcal{C},\end{split}\] (10)

where \(\bm{\tilde{W}}\) represents the weights of Deep Equilibrium Models \(\bm{W}_{\text{DEQ}}\) and explicit neural network \(\bm{W}_{\text{EX}}\). To analyze the \(\mathcal{N}\mathcal{C}\) phenomenon, we present the results in the following theorem:

**Theorem 4.1**.: _(Neural Collapse under imbalanced settings on explicit neural networks and deep equilibrium models)_

_When the loss function reaches the minimum, then \(\mathcal{N}\mathcal{C}1\): For \(\forall\ k=1,2,\cdots,K\) and \(\forall\ i=1,2,\cdots,n\):_

\[\bm{W}_{\text{EX}}\bm{h}_{k,i}^{0}=\bm{W}_{\text{EX}}\bm{h}_{k}^{0},\]

_where \(\bm{h}_{k}^{0}=\sum\limits_{i\in\tau(i)}\bm{h}_{k,i}^{0}\). Similarly, if the model is DEQ, then_

\[f(\bm{h}_{k,i}^{0};\bm{W}_{\text{DEQ}})=f(\bm{h}_{k}^{0};\bm{W}_{\text{DEQ}}).\]

\(\mathcal{N}\mathcal{C}2\)_: Not exists, but the results of explicit neural network and DEQ can be compared: Here we denote \(\left(\bm{h}_{k}^{0}\right)^{T}\bm{h}_{k^{\prime}}^{0}=\bm{m}_{k,k^{\prime}}\) and \(\bm{S}\) is a \(K\)-Simplex ETF, if_

\[E_{H}<2\bm{S}_{ij}-\bm{m}_{ij}<\frac{1}{1-E_{H}}\]

_is satisfied, the following inequality_

\[\left\|\left(\bm{W}_{\text{EX}}\bm{H}^{0}\right)^{T}\left(\bm{W}_{\text{EX}} \bm{H}^{0}\right)-\bm{S}\right\|_{F}>\left\|f^{T}(\bm{H}^{0};\bm{W}_{\text{ DEQ}})f(\bm{H}^{0};\bm{W}_{\text{DEQ}})-\bm{S}\right\|_{F}\]

_holds. \(\mathcal{N}\mathcal{C}3\)_: Similarly as \(\mathcal{N}\mathcal{C}2\), though it does not exist, the results can still be compared, when_

\[\frac{E_{H}}{E_{w}+E_{H}}+E_{H}(1-E_{H})<2\]

_is satisfied, then the cosine distance satisfies:_

\[\cos\left(f(\bm{h}_{k};\bm{W}_{\text{DEQ}}),\bm{w}_{k}\right)/\cos\left(\bm{W }_{\text{EX}}\bm{h}_{k},\bm{w}_{k}\right)>1.\]

The detailed proof is in Appendix Section C.

Besides, the conclusion regarding the loss function is quite similar to that of Theorem B.3 under balanced settings. As analyzed in (43) and (44) in the Appendix, the lower bound of the loss function in DEQ is still lower than that in explicit neural network, where the performance of learned features is more evident in Figure 2, where we use t-SNE [53] and Gram matrix of features to describe the performance of two models. Although the phenomenon of \(\mathcal{N}\mathcal{C}2\) and \(\mathcal{N}\mathcal{C}3\) does not exist, we have discovered in Theorem 4.1 that under mild conditions, DEQ is superior in terms of \(\mathcal{N}\mathcal{C}\) compared to explicit neural network. Notably, the conditions are easy to satisfy since \(E_{H}\) is generally very small in practice.

A crucial insight is that since DEQ undergoes multiple rounds of parameter adjustments for learning, it can be viewed as having an infinite number of layers, thus possessing greater representational capacity. As the network deepens, the iterative process of forward fixed-point may not necessarily reach the lowest threshold. Therefore, DEQ exhibits a certain degree of generalization for features in the minority class. Given the substantial feature differences among classes under an imbalanced dataset, the learned features by DEQ may demonstrate better adaptability to unseen categories. Consequently, compared to explicit neural network, DEQ tends to enhance performance.

Besides, due to the repeated iterations in solving the fixed-point iteration for some samples in the minority class with a small sample size, the model somewhat engages in multiple learning iterations for the features of samples in this class. This mitigates the impact of imbalanced samples to some extent. However, despite some improvements compared to the explicit neural network, DEQ still faces the issue of minority collapse. This conclusion is further validated in our subsequent experiments. Besides, to further discuss the situation of the dataset in terms of the degree of imbalance, we derived the following proposition:

**Proposition 4.2**.: _Denote \(R=K_{A}n_{A}/N\). When the number of samples in the majority class becomes extremely large, i.e., \(R\to 1\), the features of the two kinds of classes will become:_

_Majority classes:_

\[\bm{W}_{\text{EX}}\bm{h}_{k,i}^{0} =\bm{W}_{\text{EX}}\bm{h}_{k}^{0},\] \[f(\bm{h}_{k,i}^{0};\bm{W}_{\text{DEQ}}) =f(\bm{h}_{k}^{0};\bm{W}_{\text{DEQ}}),\]

_where \(1\leq k\leq K_{A}\) and \(i\in\pi(k)\). Each feature collapses to \(K_{A}\)-simplex ETF._

_Minority classes:_

\[\bm{w}_{k} =\bm{0},\] \[\bm{W}_{\text{EX}}\bm{h}_{k,i}^{0} =f(\bm{h}_{k,i}^{0};\bm{W}_{\text{DEQ}})=\bm{0},\]

_where \(K_{A}+1\leq k\leq K\) and \(i\in\pi(k)\)._

_Here, \(\pi(k)\) refers to the samples that belong to the class \(k\)._

This situation is equivalent to having a balanced dataset in the majority class, while the minority class, due to its extremely small sample size, contributes almost nothing. In such an extreme scenario, the \(\mathcal{NC}\) performance of DEQ and the fully connected layer is nearly indistinguishable similar to Theorem 3.1. Both collapse on majority classes, resulting in a lack of learning features from minority classes meeting the results of (51) and (52). This aligns with the findings in [14], where they provide more specific bounds on the ratio \(K_{A}/K_{B}\) in their Theorem 5.

## 5 Experiments

In this section, we empirically conducted experiments to validate the correctness of the proposed theorems. Initially, we implemented DEQ on a balanced dataset and compared its \(\mathcal{NC}\) performance

Figure 2: Under the imbalanced setting for CIFAR-10 with \(K_{A}=3\) and \(R=10\), the disparity in the learned features between Explicit Neural Networks (left) and DEQ (right).

with that of ResNet. Subsequently, for imbalanced datasets, we tested varying degrees of imbalance by manipulating the quantities of \(n_{A}\) and \(n_{B}\), as well as \(K_{A}\) and \(K_{B}\). The experimental results showed that, on imbalanced datasets, DEQ outperformed Explicit Neural Networks. This finding is consistent with the results reported in [4]. All experiments were implemented using PyTorch on NVIDIA Tesla A40 48GB.

### Experiment setup

Without loss of generality, since any traditional neural network can be formulated as a DEQ, we use ResNet18 [22] as the backbone architecture here. As discussed earlier, to utilize the fixed point \(\bm{z}^{\star}\) learned by DEQ as the extracted feature, we formulate the last ResNet block into a DEQ format, while maintaining the remaining structure identical to ResNet. As mentioned in [5], training with DEQ can lead to instability issues. This is especially noticeable as training progresses, where some samples struggle to converge to a fixed point. To address this, in accordance with their setting, we implement the solver with a threshold \(\epsilon\) set to \(10^{-3}\) and introduce an early stopping mechanism. If convergence is not achieved within \(T>20\) iterations, we terminate the fixed-point iteration. Additionally, when facing problematic samples during fixed-point solving, we skip them to ensure training stability. During training, we set the learning rate to \(1\times 10^{-4}\) and utilize stochastic gradient descent with a momentum of \(0.9\) and weight decay of \(5\times 10^{-4}\). Both \(E_{W}\) and \(E_{H}\) are set to \(0.01\). The training phase for each network consists of 100 epochs, with a batch size of \(128\). In this context, accuracy is assessed by averaging the results from the last 10 epochs and computing their standard deviation.

### Performance under balanced conditions

By using the settings in (7) and (9), we compared the performance of DEQ and Explicit NN on Cifar-10 [30] and Cifar-100 [29] for validation, as shown in Figure 3(a). Their \(\mathcal{NC}\) performances remain comparable, i.e., DEQ achieves results similar to Explicit NN, corroborating the findings of Theorem 3.1. As for accuracy, from the results in the first column of Table 1, it can be observed that DEQ's accuracy is higher than that of the explicit layer, which aligns with Theorem B.3. However, the increase is only marginal due to the fact that the coefficients \(E_{H}\) and \(E_{W}\) act as scaling factors. Therefore, compared to explicit neural network, DEQ finds it challenging to achieve a significantly lower loss and, consequently, a substantial improvement. Moreover, Explicit NN performs well in fitting balanced datasets, so the accuracy of DEQ does not experience a significant boost in this context.

\begin{table}
\begin{tabular}{c|c c} \hline  & Cifar-10 & Cifar-100 \\ \hline Explicit NN & \(93.05\pm 0.17\) & \(64.35\pm 0.20\) \\ DEQ & \(93.23\pm 0.13\) & \(64.77\pm 0.36\) \\ \hline \end{tabular}
\end{table}
Table 1: Comparison of accuracy under balanced settings of Cifar-10 and Cifar-100

Figure 3: Comparison of accuracy and \(\mathcal{NC}\) phenomenon in training Cifar-10 dataset

Here, we manually set the number of epochs to \(100\) to avoid potential instability issues with DEQ as training deepens. This is because DEQ can be challenging to reach the TPT (Terminal Phase of Training). As the number of parameters increases, achieving fixed-point convergence becomes more difficult, and even parameter explosion may occur. Under the current vanilla design, it is challenging to avoid such instability. Therefore, for a fair comparison, we apply the same training settings to both the implicit DEQ and the explicit neural network. The results in Figure 5 indicate that the test performance at 100 epochs is not significantly different from that at TPT. Since DEQ shares the same backbone as the corresponding explicit neural network, it can still demonstrate better \(\mathcal{NC}\) performance after reaching TPT in these cases.

### Performance under imbalanced conditions

We conducted experiments with varying configurations with different numbers of majority and minority classes and imbalance degrees. Assume the numbers of majority and minority classes are \((K_{A},K_{B})\) with corresponding sample sizes \((n_{A},n_{B})\), the imbalance degree is denoted as \(R=n_{A}/n_{B}\).We considered different setups for majority and minority class quantities, such as \((3,7)\), \((5,5)\), and \((7,3)\). Additionally, we varied the ratio of sample quantities \(R\) between majority and minority classes with values of \(10\), \(50\) and \(100\). We also tested the phenomenon of \(\mathcal{NC}\) and accuracy on the Cifar-10 and Cifar-100 datasets, which own a total of \(5000\) images for each class. Specifically, when \(R=100\) and \((K_{A},K_{B})=(3,7)\) for Cifar-10, the number of samples for all classes is \((5000,5000,5000,50,50,50,50,50,50,50)\).

The results for \((K_{A},K_{B})=(3,7)\) are shown in Table 2, where the test dataset owns the same distribution as the training dataset. We use "overall", "majority", and "minority" to represent the results across all categories, the majority class, and the minority class, respectively. We contrasted the difference in the training outcomes between the Explicit Neural Network and DEQ, and the superior performance of DEQ compared to Explicit Neural Network confirms DEQ's higher learning potential. This suggests that DEQ can achieve a lower bound on its loss function. The experimental results indicate that DEQ consistently outperforms explicit neural network in accuracy during imbalanced training, aligning with Theorem 4.1. Specifically, we present the outcomes for \((K_{A},K_{B})=(5,5)\) with \(R=100\) are depicted in Figure 3(b). The results strongly corroborate Theorem 4.1, affirming DEQ exhibits the same \(\mathcal{NC}1\) phenomenon as an explicit neural network under these conditions. However, DEQ outperforms the explicit neural network in terms of \(\mathcal{NC}2\) and \(\mathcal{NC}3\). Additional experimental results with different parameters are detailed in Appendix Section D.

In addition to the stability considerations discussed in Section 5.2, we refrain from training for an extensive number of epochs due to the imbalance in the samples of the training set. This is because excessive learning rounds might cause the network parameters to predominantly capture information from the majority class, resulting in overfitting its features. This, in turn, diminishes the generalization of learning features from other classes, leading to marginal improvements in accuracy on the test set. As depicted in Figure 3(b), the model has already converged at this point. Moreover, limiting the number of training epochs helps to avoid the gradual instability in the learning process of DEQ.

## 6 Conclusion

In this study, we have systematically analyzed the representation of Deep Equilibrium Models (DEQ) and explicit neural networks under both balanced and imbalanced conditions using the phenomenon of Neural Collapse (\(\mathcal{NC}\)). Our theoretical analysis demonstrated that \(\mathcal{NC}\) is present in DEQ under

\begin{table}
\begin{tabular}{c|c|c c c|c c} \hline  & & \multicolumn{3}{c|}{Cifar-10} & \multicolumn{3}{c}{Cifar-100} \\ \cline{2-7}  & \(R\) & 10 & 50 & 100 & 10 & 50 & 100 \\ \hline \multirow{3}{*}{Explicit NN} & overall & 72.57\(\pm\)0.25 & 44.32\(\pm\)0.23 & 32.14\(\pm\)0.81 & 41.41\(\pm\)0.56 & 28.18\(\pm\)0.42 & 23.43\(\pm\)0.92 \\  & majority & 96.40\(\pm\)0.32 & 96.80\(\pm\)0.29 & 91.67\(\pm\)0.61 & 73.03\(\pm\)0.62 & 74.53\(\pm\)0.55 & 73.46\(\pm\)0.56 \\  & minority & 62.36\(\pm\)0.12 & 21.83\(\pm\)0.20 & 6.64\(\pm\)0.99 & 27.86\(\pm\)0.39 & 8.31\(\pm\)0.38 & 1.99\(\pm\)1.06 \\ \hline \multirow{3}{*}{DEQ} & overall & 73.84\(\pm\)0.72 & 46.08\(\pm\)1.06 & 34.18\(\pm\)1.28 & 43.72\(\pm\)0.60 & 30.46\(\pm\)1.27 & 24.78\(\pm\)1.93 \\  & majority & 96.68\(\pm\)0.87 & 96.63\(\pm\)0.98 & 93.33\(\pm\)1.36 & 74.16\(\pm\)0.82 & 73.63\(\pm\)0.95 & 74.89\(\pm\)0.88 \\ \cline{1-1}  & minority & 64.06\(\pm\)0.66 & 24.42\(\pm\)1.32 & 8.83\(\pm\)1.08 & 30.67\(\pm\)0.53 & 11.96\(\pm\)1.66 & 3.31\(\pm\)2.45 \\ \hline \end{tabular}
\end{table}
Table 2: Test Accuracy on Cifar-10 and Cifar-100 Dataset with \(K_{A}=3\)balanced conditions. Furthermore, in imbalanced settings, DEQ exhibited notable advantages over explicit neural networks, such as the convergence of extracted features to the vertices of a simplex equiangular tight frame and self-duality properties under mild conditions. These findings highlight the superior performance of DEQ in handling imbalanced datasets. Our experimental results in both balanced and imbalanced scenarios validate the theoretical insights. The current analysis is limited to simple imbalanced scenarios and the linear structure of DEQ models. Future work will expand on this foundation by exploring more general imbalanced scenarios and extending the analysis to more complex forms of DEQ models.

## Acknowledgement

This work was supported by NSFC (No.62303319), Shanghai Sailing Program (22YF1428800), Shanghai Local College Capacity Building Program (23010503100), ShanghaiTech AI4S Initiative SHTAI4S202404, Shanghai Frontiers Science Center of Human-centered Artificial Intelligence (ShanghaiAI), MoE Key Laboratory of Intelligent Perception and Human-Machine Collaboration (ShanghaiTech University) and Shanghai Engineering Research Center of Intelligent Vision and Imaging.

## References

* [1] A. Agrawal, B. Amos, S. Barratt, S. Boyd, S. Diamond, and Z. Kolter. Differentiable convex optimization layers. In _Advances in Neural Information Processing Systems_, 2019.
* [2] Brandon Amos and J Zico Kolter. Optnet: Differentiable optimization as a layer in neural networks. In _International Conference on Machine Learning_, pages 136-145. PMLR, 2017.
* [3] Shaojie Bai, J. Zico Kolter, and Vladlen Koltun. Deep equilibrium models. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2019.
* [4] Shaojie Bai, Vladlen Koltun, and J. Zico Kolter. Multiscale deep equilibrium models. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2020.
* [5] Shaojie Bai, Vladlen Koltun, and J. Zico Kolter. Stabilizing equilibrium models by jacobian regularization. In _International Conference on Machine Learning (ICML)_, 2021.
* [6] Mathieu Blondel, Quentin Berthet, Marco Cuturi, Roy Frostig, Stephan Hoyer, Felipe Llinares-Lopez, Fabian Pedregosa, and Jean-Philippe Vert. Efficient and modular implicit differentiation. _Advances in neural information processing systems_, 35:5230-5242, 2022.
* [7] Charles G Broyden. A class of methods for solving nonlinear simultaneous equations. _Mathematics of computation_, 19(92):577-593, 1965.
* [8] Kaidi Cao, Colin Wei, Adrien Gaidon, Nikos Arechiga, and Tengyu Ma. Learning imbalanced datasets with label-distribution-aware margin loss. _Advances in neural information processing systems_, 32, 2019.
* [9] Ricky TQ Chen, Yulia Rubanova, Jesse Bettencourt, and David K Duvenaud. Neural ordinary differential equations. _Advances in neural information processing systems_, 31, 2018.
* [10] Hien Dang, Tan Nguyen, Tho Tran, Hung Tran, and Nhat Ho. Neural collapse in deep linear network: From balanced to imbalanced data. _arXiv preprint arXiv:2301.00437_, 2023.
* [11] Shutong Ding, Tianyu Cui, Jingya Wang, and Ye Shi. Two sides of the same coin: Bridging deep equilibrium models and neural ODEs via homotopy continuation. _Advances in Neural Information Processing Systems_, 36, 2024.
* [12] Justin Domke. Generic methods for optimization-based modeling. In _Artificial Intelligence and Statistics_, pages 318-326. PMLR, 2012.
* [13] Laurent El Ghaoui, Fangda Gu, Bertrand Travacca, Armin Askari, and Alicia Tsai. Implicit deep learning. _SIAM Journal on Mathematics of Data Science_, 3(3):930-958, 2021.
* [14] Cong Fang, Hangfeng He, Qi Long, and Weijie J Su. Exploring deep neural networks via layer-peeled model: Minority collapse in imbalanced training. _Proceedings of the National Academy of Sciences_, 118(43):e2103091118, 2021.

* [15] Samy Wu Fung, Howard Heaton, Qiuwei Li, Daniel McKenzie, Stanley Osher, and Wotao Yin. Jfb: Jacobian-free backpropagation for implicit networks. In _Proceedings of the AAAI Conference on Artificial Intelligence_, volume 36, pages 6648-6656, 2022.
* [16] Tomer Galanti, Andras Gyorgy, and Marcus Hutter. On the role of neural collapse in transfer learning. _arXiv preprint arXiv:2112.15121_, 2021.
* [17] Tianxiang Gao, Xiaokai Huo, Hailiang Liu, and Hongyang Gao. Wide neural networks as gaussian processes: Lessons from deep equilibrium models. _arXiv preprint arXiv:2310.10767_, 2023.
* [18] Zhengyang Geng, Xin-Yu Zhang, Shaojie Bai, Yisen Wang, and Zhouchen Lin. On training implicit models. _Advances in Neural Information Processing Systems_, 34:24247-24260, 2021.
* [19] Davis Gilton, Gregory Ongie, and Rebecca Willett. Deep equilibrium architectures for inverse problems in imaging. _IEEE Transactions on Computational Imaging_, 7:1123-1133, 2021.
* [20] Stephen Gould, Richard Hartley, and Dylan Campbell. Deep declarative networks. _IEEE Transactions on Pattern Analysis and Machine Intelligence_, 44(8):3988-4004, 2021.
* [21] Fangda Gu, Heng Chang, Wenwu Zhu, Somayeh Sojoudi, and Laurent El Ghaoui. Implicit graph neural networks. _Advances in Neural Information Processing Systems_, 33:11984-11995, 2020.
* [22] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 770-778, 2016.
* [23] Gao Huang, Zhuang Liu, Laurens Van Der Maaten, and Kilian Q Weinberger. Densely connected convolutional networks. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 4700-4708, 2017.
* [24] Yuhao Huang, Qingsong Wang, Akwum Onwunta, and Bao Wang. Efficient score matching with deep equilibrium layers. In _The Twelfth International Conference on Learning Representations_, 2024.
* [25] Like Hui, Mikhail Belkin, and Preetum Nakkiran. Limitations of neural collapse for understanding generalization in deep learning. _arXiv preprint arXiv:2202.08384_, 2022.
* [26] Arthur Jacot, Franck Gabriel, and Clement Hongler. Neural tangent kernel: Convergence and generalization in neural networks. _Advances in neural information processing systems_, 31, 2018.
* [27] Jiachen Jiang, Jinxin Zhou, Peng Wang, Qing Qu, Dustin Mixon, Chong You, and Zhihui Zhu. Generalized neural collapse for a large number of classes. _arXiv preprint arXiv:2310.05351_, 2023.
* [28] Vignesh Kothapalli. Neural collapse: A review on modelling principles and generalization. _Transactions on Machine Learning Research_, 2023.
* [29] Alex Krizhevsky and Geoffrey Hinton. Learning multiple layers of features from tiny images. Technical Report 0, University of Toronto, Toronto, Ontario, 2009.
* [30] Alex Krizhevsky, Vinod Nair, and Geoffrey Hinton. Cifar-10 (canadian institute for advanced research). _URL http://www. cs. toronto. edu/kriz/cifar. html_, 5(4):1, 2010.
* [31] Yann LeCun, Yoshua Bengio, and Geoffrey Hinton. Deep learning. _nature_, 521(7553):436-444, 2015.
* [32] Jaehoon Lee, Yasaman Bahri, Roman Novak, Samuel S Schoenholz, Jeffrey Pennington, and Jascha Sohl-Dickstein. Deep neural networks as gaussian processes. _arXiv preprint arXiv:1711.00165_, 2017.
* [33] Mingchen Li, Xuechen Zhang, Christos Thrampoulidis, Jiasi Chen, and Samet Oymak. Autobalance: Optimized loss functions for imbalanced data. _Advances in Neural Information Processing Systems_, 34:3163-3177, 2021.
* [34] Mingjie Li, Yisen Wang, and Zhouchen Lin. Cerdeq: Certifiable deep equilibrium model. In _International Conference on Machine Learning_, pages 12998-13013. PMLR, 2022.

* [35] Zenan Ling, Longbo Li, Zhanbo Feng, YIXUAN ZHANG, Feng Zhou, Robert C Qiu, and Zhenyu Liao. Deep equilibrium models are almost equivalent to not-so-deep explicit models for high-dimensional gaussian mixtures. In _Forty-first International Conference on Machine Learning_, 2024.
* [36] Zenan Ling, Xingyu Xie, Qiuhao Wang, Zongpeng Zhang, and Zhouchen Lin. Global convergence of over-parameterized deep equilibrium models. In _International Conference on Artificial Intelligence and Statistics_, pages 767-787. PMLR, 2023.
* [37] Xuantong Liu, Jianfeng Zhang, Tianyang Hu, He Cao, Yuan Yao, and Lujia Pan. Inducing neural collapse in deep long-tailed learning. In _International Conference on Artificial Intelligence and Statistics_, pages 11534-11544. PMLR, 2023.
* [38] Jonathan Lorraine, Paul Vicol, and David Duvenaud. Optimizing millions of hyperparameters by implicit differentiation. In _International conference on artificial intelligence and statistics_, pages 1540-1552. PMLR, 2020.
* [39] Song Mei, Andrea Montanari, and Phan-Minh Nguyen. A mean field view of the landscape of two-layer neural networks. _Proceedings of the National Academy of Sciences_, 115(33):E7665-E7671, 2018.
* [40] Dustin G Mixon, Hans Parshall, and Jianzong Pi. Neural collapse with unconstrained features. _arXiv preprint arXiv:2011.11619_, 2020.
* [41] Vishal Monga, Yuelong Li, and Yonina C Eldar. Algorithm unrolling: Interpretable, efficient deep learning for signal and image processing. _IEEE Signal Processing Magazine_, 38(2):18-44, 2021.
* [42] Vardan Papyan, XY Han, and David L Donoho. Prevalence of neural collapse during the terminal phase of deep learning training. _Proceedings of the National Academy of Sciences_, 117(40):24652-24663, 2020.
* [43] Ashwini Pokle, Zhengyang Geng, and J Zico Kolter. Deep equilibrium approaches to diffusion models. _Advances in Neural Information Processing Systems_, 35:37975-37990, 2022.
* [44] Zaccharie Ramzi, Pierre Ablin, Gabriel Peyre, and Thomas Moreau. Test like you train in implicit deep learning. _arXiv preprint arXiv:2305.15042_, 2023.
* [45] Akshay Rangamani, Marius Lindegaard, Tomer Galanti, and Tomaso A Poggio. Feature learning in deep classifiers through intermediate neural collapse. In _International Conference on Machine Learning_, pages 28729-28745. PMLR, 2023.
* [46] Jiawei Ren, Cunjun Yu, Xiao Ma, Haiyu Zhao, Shuai Yi, et al. Balanced meta-softmax for long-tailed visual recognition. _Advances in neural information processing systems_, 33:4175-4186, 2020.
* [47] Mengye Ren, Wenyuan Zeng, Bin Yang, and Raquel Urtasun. Learning to reweight examples for robust deep learning. In _International conference on machine learning_, pages 4334-4343. PMLR, 2018.
* [48] Pengzhen Ren, Yun Xiao, Xiaojun Chang, Po-Yao Huang, Zhihui Li, Xiaojiang Chen, and Xin Wang. A comprehensive survey of neural architecture search: Challenges and solutions. _ACM Computing Surveys (CSUR)_, 54(4):1-34, 2021.
* [49] Haixiang Sun, Ye Shi, Jingya Wang, Hoang Duong Tuan, H Vincent Poor, and Dacheng Tao. Alternating differentiation for optimization layers. _arXiv preprint arXiv:2210.01802_, 2022.
* [50] Christos Thrampoulidis, Ganesh Ramachandra Kini, Vala Vakilian, and Tina Behnia. Imbalance trouble: Revisiting neural-collapse geometry. _Advances in Neural Information Processing Systems_, 35:27225-27238, 2022.
* [51] Tom Tirer and Joan Bruna. Extended unconstrained features model for exploring deep neural collapse. In _International Conference on Machine Learning_, pages 21478-21505. PMLR, 2022.
* [52] Russell Tsuchida, Suk Yee Yong, Mohammad Ali Armin, Lars Petersson, and Cheng Soon Ong. Declarative nets that are equilibrium models. In _International Conference on Learning Representations_, 2022.
* [53] Laurens van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. _Journal of Machine Learning Research_, 9(86):2579-2605, 2008.

* Wang et al. [2023] Yuchao Wang, Jingjing Fei, Haochen Wang, Wei Li, Tianpeng Bao, Liwei Wu, Rui Zhao, and Yujun Shen. Balancing logit variation for long-tailed semantic segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 19561-19573, 2023.
* Wei and Kolter [2022] Colin Wei and J Zico Kolter. Certified robustness for deep equilibrium models via interval bound propagation. In _International Conference on Learning Representations_, 2022.
* Winston and Kolter [2020] Ezra Winston and J Zico Kolter. Monotone operator equilibrium networks. _Advances in neural information processing systems_, 33:10718-10728, 2020.
* Xie et al. [2023] Liang Xie, Yibo Yang, Deng Cai, and Xiaofei He. Neural collapse inspired attraction-repulsion-balanced loss for imbalanced learning. _Neurocomputing_, 527:60-70, 2023.
* Xie et al. [2022] Xingyu Xie, Qiuhao Wang, Zenan Ling, Xia Li, Guangcan Liu, and Zhouchen Lin. Optimization induced equilibrium networks: An explicit optimization perspective for understanding equilibrium models. _IEEE Transactions on Pattern Analysis and Machine Intelligence_, 45(3):3604-3616, 2022.
* Yang et al. [2022] Yibo Yang, Shixiang Chen, Xiangtai Li, Liang Xie, Zhouchen Lin, and Dacheng Tao. Inducing neural collapse in imbalanced learning: Do we really need a learnable classifier at the end of deep neural network? _Advances in Neural Information Processing Systems_, 35:37991-38002, 2022.
* Yang et al. [2022] Zonghan Yang, Tianyu Pang, and Yang Liu. A closer look at the adversarial robustness of deep equilibrium models. _Advances in Neural Information Processing Systems_, 35:10448-10461, 2022.
* Yaras et al. [2022] Can Yaras, Peng Wang, Zhihui Zhu, Laura Balzano, and Qing Qu. Neural collapse with normalized features: A geometric analysis over the riemannian manifold. _Advances in neural information processing systems_, 35:11547-11560, 2022.
* Zhang et al. [2023] Yifan Zhang, Bingyi Kang, Bryan Hooi, Shuicheng Yan, and Jiashi Feng. Deep long-tailed learning: A survey. _IEEE Transactions on Pattern Analysis and Machine Intelligence_, 2023.
* Zhong et al. [2023] Zhisheng Zhong, Jiequan Cui, Yibo Yang, Xiaoyang Wu, Xiaojuan Qi, Xiangyu Zhang, and Jiaya Jia. Understanding imbalanced semantic segmentation through neural collapse. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 19550-19560, 2023.
* Zhou et al. [2022] Jinxin Zhou, Xiao Li, Tianyu Ding, Chong You, Qing Qu, and Zhihui Zhu. On the optimization landscape of neural collapse under mse loss: Global optimality with unconstrained features. In _International Conference on Machine Learning_, pages 27179-27202. PMLR, 2022.
* Zhu et al. [2022] Jianggang Zhu, Zheng Wang, Jingjing Chen, Yi-Ping Phoebe Chen, and Yu-Gang Jiang. Balanced contrastive learning for long-tailed visual recognition. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 6908-6917, 2022.
* Zhu et al. [2021] Zhihui Zhu, Tianyu DING, Jinxin Zhou, Xiao Li, Chong You, Jeremias Sulam, and Qing Qu. A geometric analysis of neural collapse with unconstrained features. In A. Beygelzimer, Y. Dauphin, P. Liang, and J. Wortman Vaughan, editors, _Advances in Neural Information Processing Systems_, 2021.

## Appendix Contents

* A Evaluation metrics of \(\mathcal{NC}\)
* B Proof under balanced setting
* B.1 Problem definition
* B.2 \(\mathcal{NC}\) analysis
* B.2.1 \(\mathcal{NC}\) proof in Explicit neural networks
* B.2.2 \(\mathcal{NC}\) proof in DEQ
* C Proof under imbalanced learning
* C.1 Lower bound of the loss function
* C.2 \(\mathcal{NC}\) Analysis
* D More experiments

## Appendix A Evaluation metrics of \(\mathcal{NC}\)

Followed by the settings of [51] and [10], the measurement of \(\mathcal{NC}\) are set as follow:

Let \(\bm{h}_{k}\triangleq\frac{1}{n_{k}}\sum_{i=1}^{n_{k}}\bm{h}_{k,i}\) represent the average of all features within class \(k\) and these \(K\) classes collectively constitute the average matrix \(\bar{\bm{H}}=[\bm{h}_{1},\cdots,\bm{h}_{K}]\). Besides, The global average is defined as \(\bm{h}_{G}\triangleq\frac{1}{K}\sum_{i=1}^{K}\bm{h}_{k}\). Subsequently, the within-class and between-class covariances can be calculated as:

\[\begin{split}\bm{\Sigma}_{W}&\triangleq\frac{1}{N} \sum_{k=1}^{K}\sum_{i=1}^{n_{k}}(\bm{h}_{k,i}-\bm{h}_{k})(\bm{h}_{k,i}-\bm{h}_ {k})^{T},\\ \bm{\Sigma}_{B}&\triangleq\frac{1}{K}\sum_{k=1}^{K }(\bm{h}_{k}-\bar{\bm{h}}_{G})(\bm{h}_{k}-\bar{\bm{h}}_{G})^{T}.\end{split}\] (11)

\(\mathcal{NC}1\) measures the variation of features with-in the same class:

\[\mathcal{NC}1=\frac{1}{K}\text{tr}\left(\bm{\Sigma}_{W}\bm{\Sigma}_{B}^{1} \right),\] (12)

where \(\bm{\Sigma}_{B}^{1}\) denotes the pseudo-inverse of \(\bm{\Sigma}_{B}\).

\(\mathcal{NC}2\) measures similarity between the mean of learned last-layer features \(\bar{\bm{H}}\) and the structure of Simplex ETF:

\[\mathcal{NC}2=\left\|\frac{\bar{\bm{H}}^{T}\bar{\bm{H}}}{\|\bar{\bm{H}}^{T} \bar{\bm{H}}\|_{F}}-\frac{1}{K-1}(\bm{I}_{K}-\frac{1}{K}\bm{1}_{K}\bm{1}_{K}^{ T})\right\|_{F}.\] (13)

\(\mathcal{NC}3\) measures similarity of the last-layer feature \(\bar{\bm{H}}\) and weights of classifier \(\bm{W}\):

\[\mathcal{NC}3=\left\|\frac{\bm{W}}{\|\bm{W}\|_{F}}-\frac{\bar{\bm{H}}}{\|\bar {\bm{H}}\|_{F}}\right\|.\] (14)

Additionally, it is worth noting that all above \(\mathcal{NC}\) criteria are exclusively based on the training set. This is because our focus is solely on analyzing learning performance on imbalanced datasets, and generalization is not a primary concern.

Proof under balanced setting

### Problem definition

As different layers in the neural network introduce complexity, the optimization problem is non-convex, and KKT conditions do not guarantee global optimality. Therefore, we consider applying inequality relaxation to the joint optimization problem, obtaining a lower bound for the loss function. By determining the conditions under which the equality holds, we can derive the requirements for the \(\mathcal{NC}\) phenomenon. This analysis assumes a balanced setting, where all \(\#\tau(k)=n_{1}=n_{2}=\cdots=n_{K}=N/K\).

We considered the fully connected layers (explicit) and Deep Equilibrium Models (implicit) under the balanced settings respectively, and then derived the detailed proof.

(Fully Connected Layers) (Deep Equilibrium Models) \[\min_{\bm{W},\bm{W}_{\text{\rm{E}}},\bm{H}} \frac{1}{N}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n_{k}}\mathcal{ L}(\bm{W}\bm{W}_{\text{\rm{E}}}\bm{h}_{k,i}^{0},\bm{y}_{k}) \min_{\bm{W},\bm{W}_{\text{\rm{E}}},\bm{z}_{k,i}^{\star}} \frac{1}{N}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n_{k}}\mathcal{ L}(\bm{W}\bm{z}^{\star},\bm{y}_{k})\] s.t. \[\bm{h}_{k,i}=\bm{W}_{\text{\rm{E}}}\bm{h}_{k,i}^{0},\] s.t. \[\bm{z}_{k,i}^{\star}=f(\bm{h}_{k,i}^{0};\bm{W}_{\text{\rm{D}} \text{\rm{E}}}),\] \[\|\bm{W}_{\text{\rm{D}}\text{\rm{E}}}\|_{F}\leq E_{H},\] \[\frac{1}{K}\sum\limits_{k=1}^{K}\|\bm{w}_{k}\|^{2}\leq E_{W}, \frac{1}{K}\sum\limits_{k=1}^{K}\|\bm{w}_{k}\|^{2}\leq E_{W},\] \[\frac{1}{K}\sum\limits_{k=1}^{K}\frac{1}{n_{k}}\sum\limits_{i=1}^{ n_{k}}\|\bm{h}_{k,i}\|^{2}\leq E_{H}, \frac{1}{K}\sum\limits_{k=1}^{K}\frac{1}{n_{k}}\sum\limits_{i=1}^{ n_{k}}\|\bm{z}_{k,i}^{\star}\|^{2}\leq E_{H}.\]

Note that here \(n_{1}=n_{2}=\cdots=n_{k}=n\), and \(f\) represents the form of Linear DEQ, where we will use \(f(\bm{x};\bm{W}_{\text{\rm{D}}\text{\rm{E}}})=\sum\limits_{i=1}^{\infty}\bm{W} _{\text{\rm{D}}\text{\rm{E}}}^{i}\bm{x}\) for representation in the following proofs.

In a classification task, cross-entropy loss \(\mathcal{L}(\bm{W}\bm{h}_{k,i},\bm{y}_{k})\) is regarded as the final loss function. Drawing inspiration from [14], our initial efforts revolve around organizing and simplifying the log function to distinguish the logit in class \(k\) from other classes.

First consider the following lemma:

**Lemma B.1**.: _Let there be \(K\) variables \(\delta_{1},\delta_{2},\cdots,\delta_{K}\), and the logit of each variable \(\delta_{k}\) satisfies the inequality:_

\[\log\left(\delta_{k}/\sum\limits_{k=1}^{k}\delta_{k}\right)\leq M_{1}\left( \log\delta_{k}-\frac{1}{K-1}\sum\limits_{k^{\prime}\neq k}^{K}\log\delta_{k} \right)+M_{2},\] (15)

_where \(M_{1}\) and \(M_{2}\) are predefined constants._

Proof.: Split the sum in the denominator and sequentially introduce weights for each term. Here, define \(K\) coefficients such that their sum is 1. Therefore, we have:

\[\frac{C_{1}}{C_{1}+C_{2}}+\underbrace{C_{3}+\cdots+C_{3}}_{K-1}=1,\] (16)that is \(C_{3}=\frac{C_{2}}{(K-1)(C_{1}+C_{2})}\). Therefore, by Jensen's inequality, we can derive:

\[\begin{split}\log\left(\delta_{k}/\sum\limits_{k^{\prime}=1}^{K} \delta_{k^{\prime}}\right)&=\log\delta_{k}-\log\left(\sum\limits_ {k^{\prime}=1}^{K}\delta_{k^{\prime}}\right)\\ &=\log\delta_{k}-\log\left(\frac{C_{1}}{C_{1}+C_{2}}\frac{(C_{1}+ C_{2})\delta_{k}}{C_{1}}+C_{3}\sum\limits_{k^{\prime}\neq k}^{K}\frac{\delta_{k^{ \prime}}}{C_{3}}\right)\\ &\leq\log\delta_{k}-\frac{C_{1}}{C_{1}+C_{2}}\log\left(\frac{(C_ {1}+C_{2})\delta_{k}}{C_{1}}\right)-C_{3}\sum\limits_{k^{\prime}\neq k}^{K} \log\frac{\delta_{k^{\prime}}}{C_{3}}\\ &=M_{1}\left(\log\delta_{k}-\frac{1}{K-1}\sum\limits_{k^{\prime} \neq k}^{K}\log\delta_{k^{\prime}}\right)+M_{2},\end{split}\] (17)

where \(M_{1}=\frac{C_{2}}{C_{1}+C_{2}}\) and \(M_{2}=\frac{C_{2}}{C_{1}+C_{2}}\log C_{3}-\frac{C_{1}}{C_{1}+C_{2}}\log \left(\frac{C_{1}+C_{2}}{C_{1}}\right)\). Therefore the lemma is proved. 

_Remark B.2_.: When \(C_{2}/C_{1}=\frac{1}{K-1}\exp\left(\log\delta_{k}-\frac{1}{K-1}\sum\limits_{k^ {\prime}\neq k}^{K}\log\delta_{k^{\prime}}\right)\), the right term of the inequality in lemma B.1 reaches its maximum.

Proof.: Let \(\mathcal{M}=M_{1}\left(\log\delta_{k}-\frac{1}{K-1}\sum\limits_{k^{\prime} \neq k}^{K}\log\delta_{k^{\prime}}\right)+M_{2}\) in Lemma B.1. Then, upon computing the derivatives of \(C_{1}\) and \(C_{2}\), we obtain:

\[\begin{split}&\frac{\partial\mathcal{M}}{\partial C_{1}}=\frac{1}{(C_ {1}+C_{2})^{2}}\left(-C_{2}\frac{\mathcal{M}-M_{2}}{M_{1}}+C_{2}\log\frac{(K- 1)C_{2}}{C_{1}}\right)\\ &\frac{\partial\mathcal{M}}{\partial C_{2}}=\frac{1}{(C_{1}+C_{2 })^{2}}\left(C_{1}\frac{\mathcal{M}-M_{2}}{M_{1}}-C_{1}\log\frac{(K-1)C_{2}}{ C_{1}}\right).\end{split}\] (18)

Combining these two equations yields the conclusion. 

Next, we substitute the result of each logit into the lemma B.1, from which we can derive:

\[\begin{split}\mathcal{L}&=-\frac{1}{N}\sum\limits_ {k=1}^{K}\sum\limits_{i=1}^{n}\boldsymbol{y}_{k,i}\log\frac{\exp(\boldsymbol{ w}_{k,i}^{T}\boldsymbol{h}_{i})}{\sum\limits_{k^{\prime}=1}^{K}\exp(\boldsymbol{w}_{k^ {\prime},i}^{T}\boldsymbol{h}_{i})}\\ &\geq\frac{C_{1}}{(C_{1}+C_{2})N(K-1)}\sum\limits_{i=1}^{n}\left[ \left(\sum\limits_{k=1}^{K}\boldsymbol{h}_{k,i}\right)^{T}\left(\sum\limits_{k= 1}^{K}\boldsymbol{w}_{k}\right)-K\sum\limits_{k=1}^{K}\boldsymbol{h}_{k,i}^{T }\boldsymbol{w}_{k}\right]+C_{4}\\ &=\frac{C_{1}K}{(C_{1}+C_{2})N(K-1)}\sum\limits_{k=1}^{K}\sum \limits_{i=1}^{n}(\bar{\boldsymbol{h}}_{i}-\boldsymbol{h}_{k,i})^{T} \boldsymbol{w}_{k}+C_{4}\\ &\geq\frac{C_{1}}{(C_{1}+C_{2})N(K-1)}\left(-\frac{K}{2}\sum \limits_{k=1}^{K}\sum\limits_{i=1}^{n}\|\bar{\boldsymbol{h}}_{i}-\boldsymbol{h} _{k,i}\|^{2}/C_{5}-\frac{C_{5}N}{2}\sum\limits_{k=1}^{K}\|\boldsymbol{w}_{k}\| ^{2}\right)+C_{4},\end{split}\] (19)

where the second inequality applies Mean Inequalities, and \(C_{4}=\frac{C_{2}}{N(C_{1}+C_{2})}\log C_{3}-\frac{C_{1}}{N(C_{1}+C_{2})}\log \left(\frac{C_{1}+C_{2}}{C_{1}}\right)\). For convenience, we denote \[\frac{C_{5}N}{2}\sum\limits_{k=1}^{K}\|\bm{w}_{k}\|^{2}.\]

As the corresponding constraints have already been added in (6), specifically the constraint \(\sum\limits_{k=1}^{K}\|\bm{w}_{k}\|^{2}\leq E_{W}\), our focus shifts to discussing the situation concerning the first term.

Since it represents the features of the final layer, we separately explore the differences in its extraction when using DEQ and fully connected layers. First suppose the extracted feature by the backbone is \(\bm{h}^{0}\).

### \(\mathcal{NC}\) analysis

We separately discuss the representation of \(\mathcal{NC}\) in the cases of Explicit NN and DEQ, and compare the lower bounds of the loss function.

#### b.2.1 \(\mathcal{NC}\) proof in Explicit neural networks

For convenience, we assume there is only one layer in the feature extractor, that is, \(\bm{h}=\bm{W}_{\text{EX}}\bm{h}^{0}\), then the first term in \(\tilde{\mathcal{L}}\) becomes:

\[-\frac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\|\bar{ \bm{h}}_{i}-\bm{h}_{k,i}\|^{2} =-\frac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\|\bm{W}_ {\text{EX}}(\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{0})\|^{2}\] (20) \[\geq-\frac{K}{4}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\left( \|\bm{W}_{\text{EX}}\|_{F}^{2}+\|\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{0}\|^{2} \right).\]

Substituting them into the loss function (19), we can observe that:

\[\tilde{\mathcal{L}} \geq-\frac{NK}{4C_{5}}\|\bm{W}_{\text{EX}}\|_{F}^{2}-\frac{K}{4C_ {5}}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\|\bar{\bm{h}}_{i}^{0}-\bm{h}_{ k,i}^{0}\|^{2}-\frac{C_{5}NK}{2}E_{W}\] (21) \[=-\frac{K^{2}}{4C_{5}}\sum\limits_{i=1}^{n}\frac{1}{K}\sum \limits_{k=1}^{K}\left(\|\bm{h}_{k,i}^{0}\|^{2}-\|\bar{\bm{h}}_{i}^{0}\|^{2} \right)-\frac{NK}{4C_{5}}\|\bm{W}_{\text{EX}}\|_{F}^{2}-\frac{C_{5}NK}{2}E_{W}\] \[\geq-\frac{KN}{4C_{5}}E_{H}-\frac{C_{5}KN}{2}E_{W}+\frac{K^{2}}{4 C_{5}}\sum\limits_{i=1}^{n}\|\bar{\bm{h}}_{i}^{0}\|^{2}-\frac{NK}{4C_{5}}E_{H}.\]

To acquire the lower bound of the loss function, we assign the value \(C_{5}=\sqrt{E_{H}/E_{W}}\), the lower bound becomes:

\[\inf\mathcal{L}_{\text{EX}}=-\frac{C_{1}K}{(C_{1}+C_{2})(K-1)}\sqrt{E_{W}E_{H }}+C_{4}.\] (22)

Furthermore, the condition \(\|\bar{\bm{h}}_{i}^{0}\|^{2}=0\) should also be satisfied, indicating that the average of the features for the \(i\)-th sample, \(\frac{1}{K}\sum\limits_{k=1}^{K}\bm{h}_{k,i}^{0}\), is equal to zero.

The satisfaction conditions for the inequalities include the following:

* In Eq. (19): The first inequality becomes equality when \[\frac{(C_{1}+C_{2})\bm{h}_{k,i}^{T}\bm{w}_{k}}{C_{1}}=\frac{\bm{h}_{k,i}^{T} \bm{w}_{k^{\prime}}}{C_{3}},\] (23) that is, \[h_{k,i}^{T}\bm{w}_{k}=h_{k,i}^{T}\bm{w}_{k^{\prime}}+\log\left(\frac{C_{1}(K- 1)}{C_{2}}\right).\] (24) The second inequality is reduced to equality when \(\bar{\bm{h}}_{i}-\bm{h}_{k,i}=-C_{5}\bm{w}_{k}\).
* In Eq. (20): \(\|\bm{W}_{\text{EX}}\|_{F}^{2}=\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n_{k} }\|\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{0}\|^{2}\).

* In Eq. (21): When the following condition \(\dfrac{1}{K}\sum\limits_{k=1}^{K}\|\bm{w}_{k}\|^{2}=E_{W}\) and \(\|\bm{W}_{\text{EX}}\|_{F}^{2}=\dfrac{1}{K}\sum\limits_{k=1}^{K}\sum\limits_{i= 1}^{n_{k}}\|\bm{h}_{k,i}^{0}\|^{2}=E_{H}\) holds, the inequality was reduced to equality.

Since \(\|\bar{\bm{h}}_{i}^{0}\|^{2}=0\), it follows that \(\|\bar{\bm{h}}_{i}\|^{2}=\|\bm{W}_{\text{EX}}\bar{\bm{h}}_{i}^{0}\|^{2}=0\). Combined with the condition \(\dfrac{1}{K}\sum\limits_{k=1}^{K}\|\bm{w}_{k}\|^{2}=E_{W}\) and \(\dfrac{1}{K}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n_{k}}\|\bm{h}_{k,i}\|^{2}= E_{H}\), therefore, \(\bm{h}_{k}=\bm{h}_{k,i}\), for \(\forall k\), that is, \(\mathcal{NC}1\) is proved.

Consequently, \(\bm{h}_{k,i}=C_{5}\bm{w}_{k}\), demonstrating the validity of \(\mathcal{NC}3\).

For \(\mathcal{NC}2\), since

\[\begin{split}\sqrt{E_{H}/E_{W}}\|\bm{w}_{k}\|^{2}& =\bm{h}_{k}\bm{w}_{k}=\bm{h}_{k}\bm{w}_{k^{\prime}}+\log\left( \dfrac{C_{1}(K-1)}{C_{2}}\right)=\bm{W}_{\text{EX}}\bm{h}_{k}^{0}\bm{W}_{k^{ \prime}}+\log\left(\dfrac{C_{1}(K-1)}{C_{2}}\right),\\ \sqrt{E_{H}/E_{W}}\|\bm{w}_{k^{\prime}}\|^{2}&=\bm{ h}_{k^{\prime}}\bm{w}_{k^{\prime}}=\bm{h}_{k^{\prime}}\bm{w}_{k}+\log\left( \dfrac{C_{1}(K-1)}{C_{2}}\right)=\bm{W}_{\text{EX}}\bm{h}_{k^{\prime}}^{0}\bm{ W}_{k}+\log\left(\dfrac{C_{1}(K-1)}{C_{2}}\right)\end{split}\] (25)

holds, by the equality conditions, \(\|\bm{w}_{k}\|^{2}=\|\bm{w}_{k^{\prime}}\|^{2}=E_{W}\).

Further, \(\sum\limits_{k=1}^{K}\bm{h}_{k}\bm{w}_{k^{\prime}}=\sum\limits_{k=1}^{K}\bm{ W}_{\text{EX}}\bm{h}_{k}^{0}\bm{w}_{k^{\prime}}=0\), as \(\bm{h}_{k}\bm{w}_{k}=\sqrt{E_{W}E_{H}}\), so \(\bm{h}_{k}\bm{w}_{k^{\prime}}=-\dfrac{\sqrt{E_{W}E_{H}}}{N-1}\).

Therefore, the \(\mathcal{NC}2\) condition satisfies:

\[\bm{W}\bm{W}^{T}=\sqrt{E_{W}/E_{H}}\bm{W}\bm{H}=\dfrac{KE_{W}}{K-1}\left(\bm{ 1}_{K}-\dfrac{1}{k}\bm{1}_{K}\bm{1}_{K}^{T}\right).\] (26)

#### b.2.2 \(\mathcal{NC}\) proof in DEQ

In the blocks for feature extraction, DEQ can be referred as a mapping from the features by backbone to the output \(\bm{h}^{0}\to\bm{h}^{\star}\), which can be directly solved using the implicit equation:

\[\bm{h}^{\star}=f(\bm{W}_{\text{DEQ}};\bm{h}^{0})=\sum\limits_{i=1}^{\infty}\bm {W}_{\text{DEQ}}^{i}\bm{h}^{0}.\] (27)

Similar as the explicit case, start with the term:

\[-\dfrac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\|\bar{\bm{h}}_{i}-\bm {h}_{k,i}\|^{2}=\dfrac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\left\| \sum\limits_{j=0}^{\infty}\bm{W}_{\text{DEQ}}^{j}(\bar{\bm{h}}_{i}^{0}-\bm{h}_ {k,i}^{0})\right\|^{2}.\] (28)

Since the Neumann series can be regarded as a recursive procedure, denote \(\mathcal{G}_{k,i}^{j}=\sum\limits_{j^{\prime}=0}^{j}\bm{W}_{\text{DEQ}}^{j^{ \prime}}(\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{0})\) (\(j=0,1,\cdots,\infty\)), therefore \(\mathcal{G}_{k,i}^{j}=\bm{W}_{\text{DEQ}}\mathcal{G}_{k,i}^{j-1}+(\bar{\bm{h}}_ {i}^{0}-\bm{h}_{k,i}^{0})\).

\[\begin{split}-\dfrac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n} \left\|\mathcal{G}_{k,i}^{j}\right\|^{2}&=\dfrac{K}{2}\sum\limits_ {k=1}^{K}\sum\limits_{i=1}^{n}\left\|\bm{W}_{\text{DEQ}}\mathcal{G}_{k,i}^{j-1 }+(\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{0})\right\|^{2}\\ &\geq-\dfrac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n} \left\|\bm{W}_{\text{DEQ}}\mathcal{G}_{k,i}^{j-1}\right\|^{2}-\dfrac{K}{2}\sum \limits_{k=1}^{K}\sum\limits_{i=1}^{n}\left\|\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^ {0}\right\|^{2}\\ &\geq-\dfrac{K}{4}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n} \left(\left\|\bm{W}_{\text{DEQ}}\right\|_{F}^{2}+\left\|\mathcal{G}_{k,i}^{j-1 }\right\|^{2}\right)-\dfrac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n} \left\|\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{0}\right\|_{F}^{2}.\end{split}\] (29)

Continuing the recursion, we can obtain:

\[-\dfrac{1}{2}\|\mathcal{G}_{k,i}^{j}\|^{2}\geq-\left(\dfrac{1}{2}\right)^{j+1} \left\|\mathcal{G}_{k,i}^{0}\right\|^{2}-\left(1-\dfrac{1}{2^{j}}\right)\left\| \bm{h}_{i}^{0}-\bm{h}_{k,i}^{0}\right\|^{2}-\left(\dfrac{1}{2}-\dfrac{1}{2^{j+ 1}}\right)\left\|\bm{W}_{\text{DEQ}}\right\|_{F}^{2}.\] (30)So, when \(j\rightarrow\infty\),

\[\begin{split}-\frac{K}{2}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n} \left\|\bm{\delta}_{k,i}^{0}\right\|^{2}&=\frac{K}{2}\sum\limits_ {k=1}^{K}\sum\limits_{i=1}^{n}\left\|\sum\limits_{j=0}^{\infty}\bm{W}_{\text{ DEQ}}^{j}(\tilde{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{0})\right\|^{2}\\ &\geq-K\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\left(\left\|\bm {h}_{i}^{0}-\bm{h}_{k,i}^{0}\right\|^{2}-\frac{1}{2}\left\|\bm{W}_{\text{DEQ}} \right\|_{F}^{2}\right).\end{split}\] (31)

Therefore, use a similar proof as a fully connected layer,

\[\begin{split}\tilde{\mathcal{L}}&\geq-\frac{K}{C_{5 }}\sum\limits_{k=1}^{K}\sum\limits_{i=1}^{n}\left\|\bm{h}_{i}^{0}-\bm{h}_{k,i}^ {0}\right\|^{2}-\frac{NK}{2C_{5}}\left\|\bm{W}_{\text{DEQ}}\right\|_{F}^{2}- \frac{C_{5}NK}{2}E_{W}\\ &=-\frac{K}{C_{5}}\sum\limits_{i=1}^{n}\left(\frac{1}{K^{2}}\sum \limits_{k=1}^{K}\left\|\bm{h}_{k,i}^{0}\right\|^{2}-\|\bar{\bm{h}}_{i}^{0}\|^ {2}\right)-\frac{NK}{2C_{5}}\left\|\bm{W}_{\text{DEQ}}\right\|_{F}^{2}-\frac{C _{5}NK}{2}E_{W}\\ &\geq-\frac{NK}{C_{5}E_{H}}-\frac{C_{5}NK}{2}E_{W}+\frac{K^{2}}{ C_{5}}\sum\limits_{i=1}^{n}\|\bar{\bm{h}}_{i}^{0}\|^{2}-\frac{NK}{2C_{5}}E_{H}. \end{split}\] (32)

Set \(C_{5}=\sqrt{E_{H}/E_{W}}\), the loss bound of the loss function becomes:

\[\inf\mathcal{L}_{\text{DEQ}}=-\frac{2C_{1}K}{(C_{1}+C_{2})(K-1)}\sqrt{E_{W}E_ {H}}+C_{4}.\] (33)

In comparison with the lower bound of the loss function (22), it is evident that the loss function of the DEQ layer is significantly lower than that of the explicit neural network. Since the models are identical, according to Remark B.2, the values of \(C_{1}\) and \(C_{2}\) are nearly the same. This observation highlights the relatively stronger potential of DEQ compared to Explicit Neural Networks.

Also, the satisfaction conditions for the inequalities in DEQ settings include the following:

* In Eq. (19): The first inequality becomes equality when \[\frac{(C_{1}+C_{2})\bm{h}_{k,i}^{T}\bm{w}_{k}}{C_{1}}=\frac{\bm{h}_{k,i}^{T}\bm {w}_{k^{\prime}}}{C_{3}},\] (34) that is, \[h_{k,i}^{T}\bm{w}_{k}=h_{k,i}^{T}\bm{w}_{k^{\prime}}+\log\left(\frac{C_{1}(K-1 )}{C_{2}}\right).\] (35) The second inequality is reduced to equality when \(\bar{\bm{h}}_{i}-\bm{h}_{k,i}=-C_{5}\bm{w}_{k}\). This condition is quite similar to explicit fully connected layers.
* In Eq. (29): The first inequality: \[\bm{W}_{\text{DEQ}}\mathcal{G}_{k,i}^{j-1}=\bar{\bm{h}}_{i}^{0}-\bm{h}_{k,i}^{ 0},\] (36) and the second inequality \[\left\|\bm{W}_{\text{DEQ}}\right\|_{F}^{2}=\left\|\mathcal{G}_{k,i}^{j-1} \right\|^{2}.\] (37)
* In Eq. (32): When the following condition \(\frac{1}{K}\sum\limits_{k=1}^{K}\left\|\bm{w}_{k}\right\|^{2}=E_{W}\) and \(\|\bm{W}_{\text{DEQ}}\|^{2}=\frac{1}{K}\sum\limits_{k=1}^{K}\sum\limits_{i=1} ^{n_{k}}\|\bm{h}_{k,i}\|^{2}=E_{H}\) holds, the inequality was reduced to equality.

To summarize, DEQs are proposed for the memory-saving properties, as the forward passes can leverage any black-box root solvers [3, 5]. However, in terms of forward inference, explicit neural networks have limited learning capacity for data representation since they involve direct expressions computed in a single pass and backward propagation. In contrast, DEQ, lacking a direct explicit form,requires multiple rounds of parameter adjustments for learning. In each iteration, DEQ introduces input data in a sequential manner, allowing more adjustment space for learning parameters specific to the input. Therefore, to compare the two loss functions, we can derive the following theorem:

**Theorem B.3**.: _DEQ achieves a lower bound on the loss function compared to explicit neural network under balanced datasets:_

\[\inf\mathcal{L}_{\text{DEQ}}=-2C_{1}\frac{K}{K-1}\sqrt{E_{W}E_{H}}+C_{2},\]

_while the lower bound of loss function of explicit neural network remains:_

\[\inf\mathcal{L}_{\text{EX}}=-C_{1}\frac{K}{K-1}\sqrt{E_{W}E_{H}}+C_{2},\]

_where \(C_{1}\) and \(C_{2}\) are two given constants._

Under the balanced dataset, the sample distribution of each class within each batch is relatively even. Therefore, during the fixed-point iteration process, both DEQ and explicit neural network can learn the features of each class relatively well, without showing significant differences. Besides, from a numerical perspective, the penalties \(E_{W}\) and \(E_{H}\) are generally not set to very large values, especially smaller than \(1\), so the difference between the two lower bounds in Theorem B.3 may not be substantial. Besides, as analyzed in Remark B.2, we can set \(C_{2}\) in this two equations as identical, and once the propotion of logits in the explicit neural network is greater than the DEQ, the lower bound of loss function in DEQ is lower.

## Appendix C Proof under imbalanced learning

### Lower bound of the loss function

Consider the loss function:

\[\mathcal{L}=\underbrace{\frac{K_{A}n_{A}}{N}\sum\limits_{k=1}^{K_{A}}\sum \limits_{i=1}^{n_{A}}\mathcal{L}(\bm{W}\bm{h},\bm{y}_{k})}_{\mathcal{L}_{A}}+ \underbrace{\frac{K_{B}n_{B}}{N}\sum\limits_{k=K_{A}+1}^{K_{B}}\sum\limits_{i =1}^{n_{B}}\mathcal{L}(\bm{W}\bm{h},\bm{y}_{k})}_{\mathcal{L}_{B}}.\] (38)

First analyze the loss in the majority class \(\mathcal{L}_{A}\) and introduce each term in the loss function. Suppose sample \(i\) belongs to category \(k\), where \(1\leq k\leq K_{A}\), i.e., \(k\) is a majority class.

By applying Jensen's inequalities, we can derive:

\[-\log\left(\frac{\exp(\bm{h}_{k,i}^{T}\bm{w}_{k})}{\sum_{k^{ \prime}=1}^{K}\exp(\bm{h}_{k,i}^{T}\bm{w}_{k^{\prime}})}\right)\] (39) \[=-\bm{h}_{k,i}^{T}\bm{w}_{k}+\log\left(C_{1}\exp\left(\frac{\bm{ h}_{k,i}^{T}\bm{w}_{k}}{C_{1}}\right)+C_{2}\sum\limits_{k^{\prime}\neq k}^{K_{A}} \exp\left(\frac{\bm{h}_{k,i}^{T}\bm{w}_{k^{\prime}}}{C_{2}}\right)+C_{3}\sum \limits_{k^{\prime}=K_{A}+1}^{K}\exp\left(\frac{\bm{h}_{k,i}^{T}\bm{w}_{k^{ \prime}}}{C_{3}}\right)\right)\] \[\geq(C_{1}-1)\bm{h}_{k,i}^{T}\bm{w}_{k}+C_{2}\sum\limits_{k^{ \prime}\neq k}^{K_{A}}\bm{h}_{k,i}^{T}\bm{w}_{k^{\prime}}+C_{3}\sum\limits_{k^ {\prime}=K_{A}+1}^{K}\bm{h}_{k,i}^{T}\bm{w}_{k^{\prime}}+const\] \[=C_{0}C_{4}\left(\frac{1}{K_{A}}\sum\limits_{k^{\prime}=1}^{K_{A} }\bm{h}_{k,i}^{T}\bm{w}_{k^{\prime}}-\bm{h}_{k,i}^{T}\bm{w}_{k}\right)+C_{0}C_{ 5}\left(\frac{1}{K_{B}}\sum\limits_{k^{\prime}=K_{A}+1}^{K}\bm{h}_{k,i}^{T}\bm {w}_{k^{\prime}}-\bm{h}_{k,i}^{T}\bm{w}_{k}\right)+const\] \[=C_{0}C_{4}\left(\bm{h}_{k,i}^{T}\bm{w}_{A}-\bm{h}_{k,i}^{T}\bm{w} _{k}\right)+C_{0}C_{5}\left(\bm{h}_{k,i}^{T}\bm{w}_{B}-\bm{h}_{k,i}^{T}\bm{w}_ {k}\right)+const.\]

Here the value of const is \(-C_{1}\log C_{1}-(k_{A}-1)C_{2}\log C_{2}-K_{B}C_{3}\log C_{3}\). Besides, \(\bm{w}_{A}=\frac{1}{K_{A}}\sum\limits_{k^{\prime}=1}^{K_{A}}\bm{w}_{k^{\prime}}\) and \(\bm{w}_{B}=\frac{1}{K_{B}}\sum\limits_{k^{\prime}=K_{A}+1}^{K}\bm{w}_{k^{\prime}}\) represent the mean values of the weights in majority and minority classes, respectively.

To ensure the equality conditions hold, suppose there are three adaptive constants \(a>0\), \(b>0\), \(c>0\). Denote \(C_{1}=\dfrac{a}{a+(K_{A}-1)b+K_{BC}}\), \(C_{2}=\dfrac{b}{a+(K_{A}-1)b+K_{BC}}\), and \(C_{3}=\dfrac{c}{a+(K_{A}-1)b+K_{BC}}\). Additionally, to ensure \(C_{4}+C_{5}=1\), introduce a constant \(C_{0}=\dfrac{K_{A}b+K_{BC}}{a+(K_{A}-1)b+K_{BC}c}\), thus \(C_{4}=\dfrac{K_{A}b}{K_{A}b+K_{BC}c}\) and \(C_{5}=\dfrac{K_{BC}}{K_{A}b+K_{BC}c}\).

After aggregating each term in the loss function, we obtain:

\[\begin{split}&\dfrac{1}{K_{A}n_{A}}\sum_{k=1}^{K_{A}}\sum_{i=1}^{n _{A}}\mathcal{L}(\bm{W}\bm{h},\bm{y}_{k})\\ &\geq\dfrac{1}{K_{A}n_{A}}\sum_{k=1}^{K_{A}}\sum_{i=1}^{n_{A}}C_ {4}\left(\bm{h}_{k,i}^{T}\bm{w}_{A}-\bm{h}_{k,i}^{T}\bm{w}_{k}\right)+C_{5} \left(\bm{h}_{k,i}^{T}\bm{w}_{B}-\bm{h}_{k,i}^{T}\bm{w}_{k}\right)+const\\ &=\dfrac{1}{K_{A}}\sum_{k=1}^{K_{A}}\bm{h}_{k}^{T}(C_{4}\bm{w}_{ A}+C_{5}\bm{w}_{B}-\bm{w}_{k})+const,\end{split}\] (40)

where \(\bm{h}_{k}=\dfrac{1}{n_{A}}\sum_{i=1}^{n_{B}}\bm{h}_{k,i}\).

Subsequently, consider the lower bound of

\[\sum_{k=1}^{K_{A}}\bm{h}_{k}^{T}(C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B}-\bm{w}_{k}) \geq-\dfrac{C_{6}}{2}\sum_{k=1}^{K_{A}}\|\bm{h}_{k}\|^{2}-\sum_{k=1}^{K_{A}} \dfrac{1}{2}\|C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B}-\bm{w}_{k}\|^{2}/C_{6}.\] (41)

Note that this inequality (41) is reduced to equality only when the following equality holds:

\[C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B}-\bm{w}_{k}=C_{6}\bm{h}_{k},\] (42)

where \(1\leq k\leq K_{A}\).

Continuing the analysis of inequality (41), the first term on the right-hand side can be bounded as:

**Case 1:** (Explicit fully connected layers)

\[\begin{split}-\sum_{k=1}^{K_{A}}\|\bm{h}_{k}\|^{2}& =-\sum_{k=1}^{K_{A}}\|\bm{W}_{\text{EX}}\bm{h}_{k}^{0}\|^{2}\\ &\geq-\dfrac{1}{2}\left(K_{A}\|\bm{W}_{\text{EX}}\|_{F}+\sum_{k=1 }^{K_{A}}\|\bm{h}_{k}^{0}\|^{2}\right)\\ &\geq-\dfrac{1}{2}\left(K_{A}\|\bm{W}_{\text{EX}}\|_{F}+\sum_{k=1 }^{K_{A}}\dfrac{1}{n_{k}}\sum_{i=1}^{n_{k}}\|\bm{h}_{k,i}^{0}\|^{2}\right)\\ &\geq-K_{A}E_{H}.\end{split}\] (43)

**Case 2:** (Deep Equilibrium Models)

\[\begin{split}-\sum_{k=1}^{K_{A}}\|\bm{h}_{k}\|^{2}& =-\sum_{k=1}^{K_{A}}\left\|(\bm{I}-\bm{W}_{\text{DEQ}})^{-1}\bm{ h}_{k}^{0}\right\|^{2}\\ &\geq-\dfrac{1}{2}\left(K_{A}\sum_{j=0}^{\infty}\|\bm{W}_{\text{ DEQ}}\|_{F}^{j}+\sum_{k=1}^{K_{A}}\|\bm{h}_{k}\|^{2}\right)\\ &\geq-\dfrac{1}{2}\left(K_{A}\sum_{j=0}^{\infty}E_{H}^{j}+\sum_{k =1}^{K_{A}}\dfrac{1}{n_{k}}\sum_{i=1}^{n_{k}}\|\bm{h}_{k,i}\|^{2}\right)\\ &\geq-\dfrac{1}{2}\left(\dfrac{1}{1-E_{H}}+E_{H}\right).\end{split}\] (44)Compared the lower bound of explicit neural network and DEQ, we can find that:

\[\left(-\sum_{k=1}^{K_{A}}\|\bm{h}_{k}\|^{2}\right)_{\text{DEQ}}<\left(-\sum_{k=1} ^{K_{A}}\|\bm{h}_{k}\|^{2}\right)_{\text{EX}}\]

for all \(E_{H}\neq 1\).

We now shift our attention to the second term (Ref. Eq [82-83] in [14]):

\[-\frac{1}{K_{A}}\sum_{k=1}^{K_{A}}\|C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B }-\bm{w}_{k}\|^{2}\] (45) \[=-\frac{1}{K_{A}}\sum_{k=1}^{K_{A}}\|\bm{w}_{k}\|^{2}+\frac{2}{K_ {A}}\sum_{k=1}^{K_{A}}\bm{w}_{k}^{T}(C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B})-\|C_{4} \bm{w}_{A}+C_{5}\bm{w}_{B}\|^{2}\] \[=-\frac{1}{K_{A}}\sum_{k=1}^{K_{A}}\|\bm{w}_{k}\|^{2}+2C_{5}^{2} \bm{w}_{A}^{T}\bm{w}_{B}+C_{4}(2-C_{4})\|\bm{w}_{A}\|^{2}-C_{5}\|\bm{w}_{B}\|^ {2}\] \[=-\frac{1}{K_{A}}\sum_{k=1}^{K_{A}}\|\bm{w}_{k}\|^{2}+\frac{1}{K_ {A}}\sum_{k=K_{A}+1}^{K}\|\bm{w}_{k}\|^{2}+C_{4}(2-C_{4})\left\|\bm{w}_{A}+ \frac{C_{5}^{2}}{C_{4}(2-C_{4})}\bm{w}_{B}\right\|^{2}\] \[\qquad\qquad\qquad\qquad\qquad\qquad\qquad\qquad-\left(C_{5}^{2} +\frac{C_{5}^{2}}{C_{4}(2-C_{4})}\right)\|\bm{w}_{B}\|^{2}\] \[\geq-\frac{K}{K_{A}}E_{W}+\left(\frac{1}{K_{R}}-C_{5}^{2}-\frac{ C_{5}^{4}}{C_{4}(2-C_{4})}\right)\|\bm{w}_{B}\|^{2}+\frac{1}{K_{A}}\sum_{k=K_{A}+1 }^{K}\|\bm{w}_{k}-\bm{w}_{B}\|^{2}\] \[\qquad\qquad\qquad\qquad\qquad\qquad\qquad\qquad\qquad+C_{4}(2- C_{4})\left\|\bm{w}_{A}+\frac{C_{5}^{2}}{C_{4}(2-C_{4})}\bm{w}_{B}\right\|^{2},\]

where \(K_{R}=K_{A}/K_{B}\) denotes the ratio of the number of majority classes to minority classes. In summary, the lower bound of loss function (40) could be simplified as:

\[\mathcal{L}_{A} =\frac{1}{K_{A}n_{A}}\sum_{k=1}^{K_{A}}\sum_{i=1}^{n_{A}}\mathcal{ L}(\bm{W}\bm{h}_{k,i},\bm{y}_{k})\] (46) \[\geq\frac{1}{K_{A}}\sum_{k=1}^{K_{A}}\bm{h}_{k}^{T}(C_{4}\bm{w}_{ A}+C_{5}\bm{w}_{B}-\bm{w}_{k})+const\] \[\geq-\frac{C_{6}}{2K_{A}}\sum_{k=1}^{K_{A}}\|\bm{h}_{k}\|^{2}- \frac{1}{2K_{A}}\sum_{k=1}^{K_{A}}\|C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B}-\bm{w}_{k} \|^{2}/C_{6}+const\] \[\geq\frac{C_{6}}{2K_{A}}M-\frac{KE_{W}}{2C_{6}K_{A}}+\frac{1}{2C_ {6}}\left(\frac{1}{K_{R}}-C_{5}^{2}-\frac{C_{5}^{4}}{C_{4}(2-C_{4})}\right)\| \bm{w}_{B}\|^{2}\] \[\qquad\quad+\frac{C_{4}(2-C_{4})}{C_{6}}\left\|\bm{w}_{A}+\frac{C_ {5}^{2}}{C_{4}(2-C_{4})}\bm{w}_{B}\right\|^{2}+\frac{1}{2C_{6}K_{A}}\sum_{k=K_{ A}+1}^{K}\|\bm{w}_{k}-\bm{w}_{B}\|^{2}+const,\]

where \(M=-K_{A}E_{H}\) if the network is a fully connected layer and \(M=-\frac{K_{A}}{2}\left(\frac{1}{1-E_{H}}+E_{H}\right)\) if the network is a Deep Equilibrium Model.

Similarly, the loss function w.r.t the minority classes is bounded as:

\[\begin{split}\mathcal{L}_{B}&=\frac{1}{K_{B}n_{B}}\sum _{k=1}^{K_{B}}\sum_{i=1}^{n_{B}}\mathcal{L}(\bm{W}\bm{h}_{k,i},\bm{y}_{k})\\ &=\frac{1}{K_{B}}\sum_{k=1}^{K_{B}}\bm{h}_{k}^{T}(C_{4}\bm{w}_{A }+C_{5}\bm{w}_{B}-\bm{w}_{k})+const\\ &\geq-\frac{C_{6}}{2K_{B}}\sum_{k=1}^{K_{B}}\|\bm{h}_{k}\|^{2}- \frac{1}{2K_{B}}\sum_{k=1}^{K_{B}}\|C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B}-\bm{w}_{k} \|^{2}/C_{6}+const\\ &\geq\frac{C_{6}}{2K_{B}}M-\frac{KE_{W}}{2C_{6}K_{B}}+\frac{1}{2 C_{6}}\left(K_{R}-C_{5}^{2}-\frac{C_{5}^{4}}{C_{4}(2-C_{4})}\right)\|\bm{w}_{A}\|^{2} \\ &\qquad+\frac{C_{5}(2-C_{5})}{C_{6}}\left\|\frac{C_{4}^{2}}{C_{5 }(2-C_{5})}\bm{w}_{A}+\bm{w}_{B}\right\|^{2}+\frac{1}{2C_{6}K_{B}}\sum_{k=1}^{ K_{A}}\|\bm{w}_{k}-\bm{w}_{A}\|^{2}+const.\end{split}\] (47)

The inequality reduces to equality when the constraints in \(\mathcal{C}\) are treated as equalities, achieving the upper bound. Additionally, the following equalities must hold:

\[C_{4}\bm{w}_{A}+C_{5}\bm{w}_{B}-\bm{w}_{k}=C_{6}\bm{h}_{k},\] (48)

where \(K_{A}+1\leq k\leq K\).

If \(K_{R}=1\), i.e., the number of majority classes is equal to the number of minority classes, the results of (46) and (47) are totally equivalent.

Therefore, without loss of generality, assuming \(K_{A}>K_{B}\), the lower bound of the loss function (38) can be simplified to:

\[\begin{split}\mathcal{L}&=\mathcal{L}_{A}+\mathcal{ L}_{B}\\ &\geq\frac{C_{6}M}{2}\left(\frac{1}{K_{A}}+\frac{1}{K_{B}}\right) +\frac{1}{2C_{6}K_{B}}\sum_{k=1}^{K_{A}}\|\bm{w}_{k}-\bm{w}_{A}\|^{2}+\frac{1} {2C_{6}K_{A}}\sum_{k=1}^{K_{B}}\|\bm{w}_{k}-\bm{w}_{B}\|^{2}\\ &+\frac{C_{4}(2-C_{4})}{2C_{6}}\left\|\bm{w}_{A}+\frac{C_{5}^{2}}{ C_{4}(2-C_{4})}\bm{w}_{B}\right\|^{2}+\frac{C_{5}(2-C_{5})}{2C_{6}}\left\|\frac{C_{ 4}^{2}}{C_{5}(2-C_{5})}\bm{w}_{A}+\bm{w}_{B}\right\|^{2}\\ &+\frac{1}{2C_{6}}\left(\frac{1}{K_{R}}-C_{5}^{2}-\frac{C_{5}^{4} }{C_{4}(2-C_{4})}\right)\|\bm{w}_{B}\|^{2}+\frac{1}{2C_{6}}\left(K_{R}-C_{5}^ {2}-\frac{C_{5}^{4}}{C_{4}(2-C_{4})}\right)\|\bm{w}_{A}\|^{2}+const.\end{split}\] (49)

### \(\mathcal{NC}\) Analysis

As analyzed in (43) and (44), when it reaches the minimal value, each \(\bm{h}_{k,i}=\bm{h}_{k}\) for \(\forall k=1,2\cdots,K_{A}\). Similarly, this holds for minority class with \(K_{A}+1\leq k\leq K\). This implies that, in an imbalanced scenario, both DEQ and fully connected layer exhibit feature collapse, i.e., \(\mathcal{NC}1\) is still present.

As we need to calculate the lower bound of the loss function, it is essential to minimize the terms \(\mathcal{L}_{A}+\mathcal{L}_{B}\) as much as possible.

Therefore, consider the gradient with respect to \(\bm{w}_{k}\) for majority class and \(\bm{w}_{k}\) for minority class, respectively. First compute the case with \(1\leq k\leq K_{A}\).

\[\begin{split}\frac{\partial\mathcal{L}}{\partial\bm{w}_{k}}& =\frac{1}{C_{6}K_{B}}\left(1-\frac{1}{K_{A}}\right)(\bm{w}_{k}- \bm{w}_{A})+\frac{C_{4}(2-C_{4})}{C_{6}K_{A}}\left(\bm{w}_{A}+\frac{C_{5}^{2}}{ C_{4}(2-C_{4})}\bm{w}_{B}\right)\\ &\quad+\frac{C_{4}^{2}}{K_{A}C_{6}}\left(\frac{C_{4}^{2}}{C_{5}(2- C_{5})}\bm{w}_{A}+\bm{w}_{B}\right)\\ &\quad+\frac{1}{K_{A}C_{6}}\left(K_{R}-C_{5}^{2}-\frac{C_{5}^{4} }{C_{4}(2-C_{4})}\right)\bm{w}_{A}=0.\end{split}\] (50)So, we can derive that

\[\begin{split}\left(K_{R}-\frac{1}{K_{B}}\right)\bm{w}_{k}& +\frac{1}{1-C_{4}^{2}}\bm{w}_{B}\\ &+\left(\frac{1}{K_{B}}+C_{4}(2-C_{4})+\frac{C_{4}^{4}}{C_{5}(2-C_ {5})}-C_{5}^{2}-\frac{C_{5}^{2}}{C_{4}(2-C_{4})}\right)\bm{w}_{A}=0.\end{split}\] (51)

One important note here is that when the proportion of majority class samples approaches infinity, i.e., \(C_{4}\to 1\), we have \(\frac{1}{1-C_{4}^{2}}\to 0\). In this scenario, the weights \(\bm{w}_{k}\) belonging to the majority class are almost exclusively related to \(\bm{w}_{A}\), and have little dependence on the average of the minority class \(\bm{w}_{B}\), which validates the results of Proposition 4.2.

Similarly, if \(K_{A}+1\leq k\leq K\), the following equality will hold to ensure optimality of \(\bm{w}_{k}\) in minority classes of (49):

\[\begin{split}\left(\frac{1}{K_{R}}-\frac{1}{K_{A}}\right)\bm{w}_{ k}&+\frac{1}{1-C_{5}^{2}}\bm{w}_{A}\\ &+\left(\frac{1}{K_{A}}+C_{5}(2-C_{5})+\frac{C_{5}^{4}}{C_{4}(2-C _{4})}-C_{4}^{2}-\frac{C_{4}^{2}}{C_{5}(2-C_{5})}\right)\bm{w}_{B}=0.\end{split}\] (52)

Next, we consider the conditions for the validity in \(\mathcal{NC}2\) and \(\mathcal{NC}3\), then compare the performance of DEQ and explicit neural network.

Therefore, for the majority class \(1\leq k\leq K_{A}\), suppose it reaches its minimum value, recall the condition (42), and combined with (51), we can derive:

\[C_{6}\bm{h}_{k}^{T}\bm{h}_{k^{\prime}}=\left(C_{4}+\frac{K_{B}C_{A}}{K_{A}-1} \right)\bm{w}_{A}^{T}\bm{h}_{k^{\prime}}+\left(C_{5}+\frac{K_{B}}{(K_{A}-1)(1- C_{4}^{2})}\right)\bm{w}_{B}^{T}\bm{h}_{k^{\prime}}.\] (53)

Similarly, for the minority class \(K_{A}+1\leq k\leq K\), combine (48) with (52), we obtain:

\[C_{6}\bm{h}_{k}^{T}\bm{h}_{k^{\prime}}=\left(C_{4}+\frac{K_{A}}{(K_{B}-1)(1-C_ {5}^{2})}\right)\bm{w}_{A}^{T}\bm{h}_{k^{\prime}}+\left(C_{5}+\frac{K_{A}C_{B }}{K_{B}-1}\right)\bm{w}_{B}^{T}\bm{h}_{k^{\prime}}.\] (54)

In the above two equations, \(k^{\prime}=1,2,\cdots,K\). And we denote the coefficient of \(\bm{w}_{A}\) in Eq. (51) and the coefficient of \(\bm{w}_{B}\) in Eq. (52) as \(C_{A}\) and \(C_{B}\) respectively for simplicity. After this deviation, we can find that both of the coefficients of \(\bm{w}_{A}^{T}\bm{h}_{k^{\prime}}\) and \(\bm{w}_{B}^{T}\bm{h}_{k^{\prime}}\) are constants.

It can be obviously concluded that \(\mathcal{NC}2\) and \(\mathcal{NC}3\) do not hold under imbalanced dataset conditions. However, we can still compare the numerical differences between them under DEQ and fully connected layer. By adaptively specifying parameters \(C_{4}\) and \(C_{5}\), we can denote \((\bm{h}_{k}^{0})^{T}\bm{h}_{k^{\prime}}^{0}=\bm{m}_{k,k^{\prime}}\).

Thus, by considering all the equality conditions in (46), we can measure the distance from the features to the Simplex ETF.

\[C_{6}\bm{h}_{k^{\prime}}^{T}\bm{h}_{k}=C_{4}\bm{h}_{k^{\prime}}^{T}\bm{w}_{A}+ C_{5}\bm{h}_{k^{\prime}}^{T}\bm{w}_{B}-\bm{h}_{k^{\prime}}^{T}\bm{w}_{k}.\] (55)

**Case 1:** (Explicit fully connected layers)

\[\begin{split} C_{6}(h_{k^{\prime}}^{0})^{T}\bm{h}_{k}& =C_{4}\bm{W}_{\text{EX}}(h_{k^{\prime}}^{0})^{T}\bm{w}_{A}+C_{5} \bm{W}_{\text{EX}}(h_{k^{\prime}}^{0})^{T}\bm{w}_{B}-\bm{W}_{\text{EX}}(h_{k^{ \prime}}^{0})^{T}\bm{w}_{k}\\ &=\bm{W}_{\text{EX}}\left(C_{4}\bm{h}_{k^{\prime}}^{T}\bm{w}_{A}+ C_{5}\bm{h}_{k^{\prime}}^{T}\bm{w}_{B}-\bm{h}_{k^{\prime}}^{T}\bm{w}_{k}\right)\\ &\leq\frac{1}{2}\|\bm{W}_{\text{EX}}\|_{F}+\frac{1}{2}\left\|C_{4} \bm{h}_{k^{\prime}}^{T}\bm{w}_{A}+C_{5}\bm{h}_{k^{\prime}}^{T}\bm{w}_{B}-\bm{h }_{k^{\prime}}^{T}\bm{w}_{k}\right\|\\ &=E_{H}+\frac{1}{2}\bm{M}.\end{split}\] (56)

**Case 2:** (Deep Equilibrium Models)\[C_{6}\boldsymbol{(}h_{k^{\prime}}^{0})^{T}\boldsymbol{h}_{k} =C_{4}(\boldsymbol{I}-\boldsymbol{W}_{\text{DEQ}})^{-1}(h_{k^{ \prime}}^{0})^{T}\boldsymbol{w}_{A}+C_{5}(\boldsymbol{I}-\boldsymbol{W}_{\text {DEQ}})^{-1}(h_{k^{\prime}}^{0})^{T}\boldsymbol{w}_{B}\] (57) \[\qquad\qquad\qquad-(\boldsymbol{I}-\boldsymbol{W}_{\text{DEQ}})^{ -1}(h_{k^{\prime}}^{0})^{T}\boldsymbol{w}_{k}\] \[=(\boldsymbol{I}-\boldsymbol{W}_{\text{DEQ}})^{-1}\left(C_{4} \boldsymbol{h}_{k^{\prime}}^{T}\boldsymbol{w}_{A}+C_{5}\boldsymbol{h}_{k^{ \prime}}^{T}\boldsymbol{w}_{B}-\boldsymbol{h}_{k^{\prime}}^{T}\boldsymbol{w}_ {k}\right)\] \[\leq\frac{1}{2}\|(\boldsymbol{I}-\boldsymbol{W}_{\text{DEQ}})^{-1 }\|_{F}+\frac{1}{2}\left\|C_{4}\boldsymbol{h}_{k^{\prime}}^{T}\boldsymbol{w}_ {A}+C_{5}\boldsymbol{h}_{k^{\prime}}^{T}\boldsymbol{w}_{B}-\boldsymbol{h}_{k ^{\prime}}^{T}\boldsymbol{w}_{k}\right\|\] \[=\frac{1}{2(1-E_{H})}+\frac{1}{2}\boldsymbol{M}.\]

Therefore, to compare these two models, we consider the case when the distance of these two models from the Simplex ETF is minimized. We denote each element in the Simplex ETF as \(\boldsymbol{s}_{ij}\) and compare the differences between them. When the distance of DEQ is relatively smaller than that of explicit neural network, we can obtain:

\[\left|\frac{1}{2(1-E_{H})}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}\right|< \left|\frac{1}{2}E_{H}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}\right|.\] (58)

For simplicity, we only consider the subscripts of \(\boldsymbol{s}\) and \(\boldsymbol{m}\), and denote \(\textcircled{1}=\frac{1}{2(1-E_{H})}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}\) and \(\textcircled{2}=\frac{1}{2}E_{H}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}\). We then classify and discuss their magnitudes.

* \(\textcircled{1}>0\), \(\textcircled{2}>0\): Since \(\frac{1}{2(1-E_{H})}>E_{H}\), there is a contradiction! Therefore, it does not hold.
* \(\textcircled{1}>0\), \(\textcircled{2}<0\): \(\frac{1}{2(1-E_{H})}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}<0\), \(\frac{1}{2}E_{H}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}>0\), which means \(\frac{1}{2(1-E_{H})}<E_{H}\). And that is a contradiction!
* \(\textcircled{1}<0\), \(\textcircled{2}>0\): Since \(\frac{1}{2(1-E_{H})}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}>0\), \(\frac{1}{2}E_{H}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}<0\), we have \[E_{H}<2\boldsymbol{s}-\boldsymbol{m}<\frac{1}{1-E_{H}}.\] Besides, by the inequality \((\ref{eq:11})\), we have \(\frac{1}{2}E_{H}+\frac{1}{2(1-E_{H})}<2\boldsymbol{s}-\boldsymbol{m}\). Then find the intersection, we obtain that: \[\frac{1}{2}E_{H}+\frac{1}{2(1-E_{H})}<2\boldsymbol{s}-\boldsymbol{m}<\frac{1 }{1-E_{H}}.\]
* \(\textcircled{1}<0\), \(\textcircled{2}<0\): Since \(\frac{1}{2(1-E_{H})}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}<0\) and \(\frac{1}{2}E_{H}+\frac{1}{2}\boldsymbol{m}-\boldsymbol{s}<0\), it implies that \(\frac{1}{2(1-E_{H})}>E_{H}\) always holds. Therefore, we only need to ensure that \[2\boldsymbol{s}-\boldsymbol{m}>\min\left\{E_{H},\frac{1}{1-E_{H}}\right\}.\]

Combining these four cases and finding their intersection, we conclude that when the inequality

\[E_{H}<2\boldsymbol{s}-\boldsymbol{m}<\frac{1}{1-E_{H}}\] (59)

is satisfied, the performance of DEQ is better than that of explicit neural network.

As for \(\mathcal{NC}3\), consider the cosine distance with the feature \(\boldsymbol{h}_{k}\) and \(\boldsymbol{w}_{k}\).

**Case 1:** (Explicit fully connected layers)

\[\begin{split}\cos(\bm{h}_{k},\bm{w}_{k})_{\text{EX}}&= \frac{\bm{h}_{k}^{T}\bm{w}_{k}}{\|\bm{w}_{k}\|\|\bm{h}_{k}\|}\\ &=\frac{\bm{W}_{\text{EX}}\left(\bm{h}_{k}^{0}\right)^{T}\bm{w}_ {k}}{\|\bm{w}_{k}\|\|\bm{W}_{\text{EX}}\bm{h}_{k}^{0}\|}\\ &\geq\frac{2\bm{W}_{\text{EX}}\left(\bm{h}_{k}^{0}\right)^{T}\bm {w}_{k}}{\|\bm{w}_{k}\|^{2}+\frac{1}{2}\|\bm{W}_{\text{EX}}\|^{2}+\frac{1}{2} \|\bm{h}_{k}^{0}\|}\\ &\geq\frac{2E_{H}\left(\bm{h}_{k}^{0}\right)^{T}\bm{w}_{k}}{E_{ W}+E_{H}}.\end{split}\] (60)

**Case 2:** (Deep Equilibrium Model)

Very similarly,

\[\begin{split}\cos(\bm{h}_{k},\bm{w}_{k})_{\text{DEQ}}& =\frac{\bm{h}_{k}^{T}\bm{w}_{k}}{\|\bm{w}_{k}\|\|\bm{h}_{k}\|}\\ &=\frac{\left(\bm{I}-\bm{W}_{\text{DEQ}}\right)\left(\bm{h}_{k}^{ 0}\right)^{T}\bm{w}_{k}}{\|\bm{w}_{k}\|\|\left(\bm{I}-\bm{W}_{\text{DEQ}}\right) ^{-1}\bm{h}_{k}^{0}\|}\\ &\geq\frac{2\left(\bm{I}-\bm{W}_{\text{DEQ}}\right)\left(\bm{h}_ {k}^{0}\right)^{T}\bm{w}_{k}}{\|\bm{w}_{k}\|^{2}+\frac{1}{2}\|\left(\bm{I}- \bm{W}_{\text{DEQ}}\right)\|^{2}+\frac{1}{2}\|\bm{h}_{k}^{0}\|}\\ &\geq\frac{4E_{H}\left(\bm{h}_{k}^{0}\right)^{T}\bm{w}_{k}}{1+2 (E_{W}+E_{H})(1-E_{H})}.\end{split}\] (61)

If the performance of DEQ is better than explicit neural network, then we have

\[\cos(\bm{h}_{k},\bm{w}_{k})_{\text{DEQ}}/\cos(\bm{h}_{k},\bm{w}_{k})_{\text{ exp}}>1,\]

which is equivalent to

\[\frac{E_{H}}{E_{w}+E_{H}}+E_{H}(1-E_{H})<2.\] (62)

In summary, though DEQ does not completely mitigate the issue of minority collapse, it shows significant improvement compared to explicit neural network under some conditions that are relatively easy to satisfy in the manifestation of the \(\mathcal{NC}\) phenomenon.

## Appendix D More experiments

In this section, we provide more experimental results, including the \(\mathcal{NC}\) phenomena of Explicit NN and DEQ, and the training results under other imbalanced conditions.

\begin{table}
\begin{tabular}{c|c|c c|c c c} \hline  & & \multicolumn{4}{c|}{Cifar-10} & \multicolumn{4}{c}{Cifar-100} \\ \cline{2-7}  & \(R\) & 10 & 50 & 100 & 10 & 50 & 100 \\ \hline \multirow{3}{*}{Explicit NN} & overall & 80.73\(\pm\)0.48 & 63.08\(\pm\)0.87 & 44.86\(\pm\)1.43 & 52.62\(\pm\)0.86 & 41.62\(\pm\)0.68 & 37.33\(\pm\)2.29 \\  & majority & 94.18\(\pm\)0.56 & 91.02\(\pm\)0.89 & 89.32\(\pm\)0.79 & 74.10\(\pm\)1.03 & 73.94\(\pm\)0.25 & 74.24\(\pm\)1.13 \\  & minority & 67.80\(\pm\)0.35 & 35.14\(\pm\)0.65 & 0.40\(\pm\)3.86 & 31.10\(\pm\)0.70 & 9.30\(\pm\)1.10 & 0.42\(\pm\)3.04 \\ \hline \multirow{3}{*}{DEQ} & overall & 81.36\(\pm\)1.03 & 65.03\(\pm\)1.90 & 46.09\(\pm\)1.77 & 53.31\(\pm\)0.98 & 44.07\(\pm\)2.04 & 39.11\(\pm\)2.46 \\  & majority & 93.14\(\pm\)1.81 & 90.88\(\pm\)2.83 & 90.20\(\pm\)0.85 & 72.90\(\pm\)1.65 & 75.98\(\pm\)1.75 & 75.79\(\pm\)0.96 \\ \cline{1-1}  & minority & 69.58\(\pm\)0.66 & 39.18\(\pm\)1.46 & 1.26\(\pm\)4.93 & 33.72\(\pm\)0.79 & 12.16\(\pm\)3.75 & 2.42\(\pm\)5.89 \\ \hline \end{tabular}
\end{table}
Table 3: Test Accuracy on Cifar-10 and Cifar-100 Dataset with \(K_{A}=5\)

\begin{table}
\begin{tabular}{c|c|c c c|c c c} \hline  & & \multicolumn{3}{c|}{Cifar-10} & \multicolumn{3}{c}{Cifar-100} \\ \cline{2-8}  & \(R\) & 10 & 50 & 100 & 10 & 50 & 100 \\ \hline \multirow{3}{*}{Explicit NN} & overall & 83.17\(\pm\)0.40 & 66.91\(\pm\)0.39 & 53.27\(\pm\)0.81 & 59.11\(\pm\)0.84 & 51.71\(\pm\)1.02 & 50.72\(\pm\)0.60 \\  & majority & 89.09\(\pm\)0.36 & 80.90\(\pm\)0.57 & 75.12\(\pm\)0.74 & 71.93\(\pm\)0.65 & 72.20\(\pm\)0.66 & 72.46\(\pm\)0.58 \\  & minority & 69.37\(\pm\)0.49 & 34.26\(\pm\)0.30 & 2.30\(\pm\)1.01 & 29.20\(\pm\)0.92 & 3.90\(\pm\)1.29 & 0.00\(\pm\)0.00 \\ \hline \multirow{3}{*}{DEQ} & overall & 83.38\(\pm\)1.85 & 69.47\(\pm\)1.86 & 56.74\(\pm\)0.98 & 60.51\(\pm\)0.88 & 52.99\(\pm\)1.86 & 51.79\(\pm\)0.92 \\  & majority & 88.98\(\pm\)1.99 & 82.91\(\pm\)2.22 & 78.81\(\pm\)0.67 & 72.90\(\pm\)1.19 & 72.99\(\pm\)0.98 & 73.98\(\pm\)0.66 \\  & minority & 71.65\(\pm\)1.63 & 38.12\(\pm\)1.61 & 5.20\(\pm\)1.91 & 31.13\(\pm\)0.83 & 6.33\(\pm\)2.35 & 0.00\(\pm\)0.00 \\ \hline \end{tabular}
\end{table}
Table 4: Test Accuracy on Cifar-10 and Cifar-100 Dataset with \(K_{A}=7\)

Figure 4: Accuracy and \(\mathcal{NC}\) phenomenon on imbalanced dataset with \(K_{A}=3\), \(K_{B}=7\), \(R=100\)Figure 5: Accuracy and \(\mathcal{NC}\) phenomenon on imbalanced dataset with \(K_{A}=7\), \(K_{B}=3\), \(R=100\)

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: As stated in the abstract and introduction, this paper is the first to analyze the representation of the Deep Equilibrium Model from the perspective of Neural Collapse, accurately reflecting the key contributions and scope. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: The limitation analysis is provided in the Conclusion. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes]Justification: The assumptions and proofs are provided in appendix B and C. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: These details are provided in Section 5.1 - Experiment setup. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?Answer: [Yes] Justification: We will release the code once the paper is accepted. Guidelines:

* The answer NA means that paper does not include experiments requiring code.
* Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).
* The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.
* The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.
* At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).
* Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: These details are provided in Section 5.1 - Experiment setup. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: The standard deviation in our experimental results (Table 1-4) shows the statistical significance. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) * The assumptions made should be given (e.g., Normally distributed errors).

* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: The computer resources are provided in Section 5.1 - Experiment setup. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: Our research conformed with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA] Justification: Our paper primarily focuses on theoretical research in machine learning, comparing two typical neural network algorithms, with no relevance to societal impacts. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: Our paper uses standard CIFAR-10 and CIFAR-100 datasets, which do not involve such issues. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: The datasets CIFAR-10 and CIFAR-100 are cited properly. Other assets are not applied in this paper. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.

* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: This paper does not introduce new assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.