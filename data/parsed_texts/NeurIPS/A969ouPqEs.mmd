DiffLight: A Partial Rewards Conditioned Diffusion Model for Traffic Signal Control with Missing Data

Hanyang Chen\({}^{1,2}\), Yang Jiang\({}^{1,2}\), Shengnan Guo\({}^{1,2}\), Xiaowei Mao\({}^{1,2}\),

**Youfang Lin\({}^{1,2}\), Huaiyu Wan\({}^{1,2}\)**

\({}^{1}\)School of Computer Science and Technology, Beijing Jiaotong University, China

\({}^{2}\)Beijing Key Laboratory of Traffic Data Analysis and Mining, Beijing, China

{hanyangchen, jiangyang, guoshn, maoxiaowei, yflin, hywan}@bjtu.edu.cn

Corresponding author

###### Abstract

The application of reinforcement learning in traffic signal control (TSC) has been extensively researched and yielded notable achievements. However, most existing works for TSC assume that traffic data from all surrounding intersections is fully and continuously available through sensors. In real-world applications, this assumption often fails due to sensor malfunctions or data loss, making TSC with missing data a critical challenge. To meet the needs of practical applications, we introduce DiffLight, a novel conditional diffusion model for TSC under data-missing scenarios in the offline setting. Specifically, we integrate two essential sub-tasks, _i.e._, traffic data imputation and decision-making, by leveraging a Partial Rewards Conditioned Diffusion (PRCD) model to prevent missing rewards from interfering with the learning process. Meanwhile, to effectively capture the spatial-temporal dependencies among intersections, we design a Spatial-Temporal transFormer (STFormer) architecture. In addition, we propose a Diffusion Communication Mechanism (DCM) to promote better communication and control performance under data-missing scenarios. Extensive experiments on five datasets with various data-missing scenarios demonstrate that DiffLight is an effective controller to address TSC with missing data. The code of DiffLight is released at https://github.com/lokol5579/DiffLight-release.

## 1 Introduction

With the acceleration of urbanization, the surge in the number of vehicles in cities has led to increasingly severe traffic congestion and pollution problems [1]. Intersections, where traffic congestion often occurs, become a key in addressing these problems. To this end, solving the traffic signal control (TSC) problem is crucial for reducing traffic congestion in intersections by controlling traffic lights. Over the years, many approaches have been developed to tackle the TSC problem, which can be categorized into conventional approaches and reinforcement learning-based (RL-based) approaches. Conventional approaches, like Fixed-time [2], SCOOT [3] and SCATS [4], have been widely deployed in different cities. However, these approaches struggle to adapt to the inherent stochasticity and highly dynamic nature of real-time traffic conditions, limiting their effectiveness in responding to dynamic traffic demands.

Recently, reinforcement learning (RL) is introduced into TSC to enable adaptive traffic signal control [5, 6, 7, 8, 9, 10, 11, 12, 13]. Unlike conventional approaches, RL-based approaches for TSC deploy a learnable agent at each intersection, allowing traffic signals to be adjusted dynamically based on real-time traffic conditions. However, most existing RL-based approaches for TSC assume that traffic data from all surrounding intersections is fully and continuously available through deployed sensors. In practice, this assumption is often unrealistic. Due to budget constraints, not all intersections can be equipped with sufficient sensors. Even if necessary sensors are deployed, malfunctions or errors could lead to incomplete data collection. Therefore, the research on TSC with missing data is more in line with the needs of actual scenarios but has not been studied sufficiently yet.

Furthermore, existing RL-based approaches for TSC can be categorized into two types, _i.e._, online approaches and offline approaches. Most RL-based approaches for TSC rely on the online setting, interacting with the environment frequently. Specific to data-missing scenarios, MissLight [14] composed of the traffic data imputation stage and decision-making stage has been proposed in the online setting. However, frequent interaction with the real-world traffic environment is challenging and potentially unsafe, especially when dealing with incomplete data. As an alternative, training using offline traffic data with missing values offers a safer and more practical solution. Therefore, we focus on the offline setting in this paper. Similar to the online setting, traffic data imputation and decision-making for TSC with missing data are two sub-tasks we must confront in the offline setting.

Recently, diffusion models [15] have been introduced into offline RL due to their powerful generative ability [16; 17; 18; 19; 20]. These approaches frame sequential decision-making as conditional generative modeling and utilize the generative ability of the diffusion model to capture complex policy distribution in offline datasets to make better decisions. Additionally, in the context of TSC with missing data, traffic data imputation is equally critical. Inspired by existing works [21; 22; 23], we approach traffic data imputation as a conditional generative problem, similar to decision-making. Considering the similarity of the two sub-tasks, we propose to unify traffic data imputation and decision-making for TSC with missing data by utilizing the powerful generative ability of the diffusion model.

There are several challenges that must be addressed to integrate the two sub-tasks mentioned above effectively. Firstly, in RL-based approaches for TSC, rewards which are typically vehicle queue length, are critical for the performance of controllers. However, due to the absence of traffic data, only partial rewards are available. A straightforward solution might be to fill in the missing rewards with padded values, which could confuse the imputed rewards with the actual ones, leading to a negative impact on performance. Secondly, relying solely on traffic data of the local intersection makes it challenging to capture the dynamic and spatial-temporal dependencies in the traffic network for traffic data imputation and decision-making tasks. The complexity of traffic flow often requires a broader context, as traffic data from the local intersection may not adequately reflect the behaviors and interactions occurring across the entire network. The absence of traffic data from neighboring intersections may further exacerbate this issue, hindering the ability to capture these dependencies and potentially leading to a decline in performance.

To tackle these challenges, we introduce DiffLight, a novel conditional diffusion model for TSC with missing data. We propose a Partial Rewards Conditioned Diffusion (PRCD) model for both traffic data imputation and decision-making under data-missing scenarios to prevent missing rewards from interfering with the learning process. Meanwhile, to effectively capture the spatial-temporal dependencies among intersections, we design the noise model as a Spatial-Temporal transformer (STFormer) architecture. In addition, we propose a Diffusion Communication Mechanism (DCM) to enable communication and promote the capture of spatio-temporal dependencies in the traffic network through the propagation of generated observations, facilitating better control in scenarios with missing data. Extensive experiments on five datasets with various data-missing scenarios are conducted to evaluate the effectiveness of DiffLight. The experimental results indicate that DiffLight is highly competitive for TSC with missing data.

## 2 Preliminaries

### Partially Observable Markov Decision Process

We consider a partially observable Markov decision process (POMDP) in the offline setting, defined as a tuple \(\langle\mathcal{S},\mathcal{A},\mathcal{P},\mathcal{R},\Omega,\mathcal{O}, \gamma\rangle\). \(\mathcal{S}\) is the state space, and \(s_{t}\in\mathcal{S}\) denotes the state at time \(t\). \(\mathcal{A}\) is the set of available actions and \(a_{t}\in\mathcal{A}\) denotes the action of an agent at time \(t\). The observation \(o_{t}\in\Omega\) observed by the agent is part of the state \(s_{t}\) and can be derived from the function \(\mathcal{O}(s_{t})\). \(r_{t}=\mathcal{R}(s_{t})\) is the immediate reward of an agent at time \(t\). \(\mathcal{P}\) and \(\gamma\) denote the transition probability function and the discount factor separately. The optimization objective is to learn a policy \(\pi\) for agents to maximize the expected return \(\mathbb{E}_{s_{t},a_{t}}[R_{t}]\), where \(R_{t}=\sum_{t}\gamma^{t}r_{t}\).

### Traffic Signal Control with Missing Data

We formulate TSC with missing data as POMDP, and consider TSC in a traffic network with several intersections. Agents are deployed at each intersection of the traffic network. As illustrated in Figure 1, for a four-way intersection, there are twelve traffic movements from the intersection's entrance lane \(l_{\rm in}\) to the departure lane \(l_{\rm out}\), and four pairs of traffic movements without conflict comprise four traffic signal phases, _i.e._, A, B, C, D. For example, the traffic signal phase of the intersection in Figure 1 is phase-A which involves movement-2 \(=\{l_{\rm in}^{2}\to l_{\rm out}^{7},l_{\rm in}^{2}\to l_{\rm out}^{8},l_{\rm in }^{2}\to l_{\rm out}^{9}\}\) and movement-8 \(=\{l_{\rm in}^{8}\to l_{\rm out}^{1},l_{\rm in}^{8}\to l_{\rm out}^{2},l_{\rm in }^{8}\to l_{\rm out}^{3}\}\).

In this paper, the **observation**\(o_{t}\) contains the number of vehicles \(L_{\rm num}\) and queue length \(L_{\rm queue}\) in every entrance lane of the local intersection. Available **actions** are four phases. The **immediate reward**\(r_{t}\) is defined as the sum of the queue length \(\sum_{l_{\rm in}}L_{\rm queue}\). Due to the lack or error of sensors resulting in missing traffic data, \(o_{t}\) and \(r_{t}\), which are derived from traffic data, could be missing in a particular missing pattern. We consider random missing and kriging missing patterns detailed in Appendix C.2. To simplify the problem, we assume that \(o_{t}\) and \(r_{t}\) in an intersection are missing simultaneously.

### Diffusion Models for Reinforcement Learning

Diffusion model.Diffusion models [15; 24; 25], as a powerful generative model, provide a framework to model the data generative process as a discrete diffusion process. Diffusion models consist of two processes: the forward process and the reverse process. In this paper, the forward process is defined as \(q(x^{k}|x^{k-1}):=\mathcal{N}(\sqrt{1-\beta^{k}}x^{k-1},\beta^{k}\mathbf{I})\) by the Markov process, where \(\beta^{k}\) is the variance of the noise at timestep \(k\). We adopt DDIM sampler [24] to sample in the reverse process in order to accelerate sampling. DDIM sampler is parameterized with \(p_{\theta}(x^{k-1}|x^{k},x^{0}):=\mathcal{N}(\mu_{\theta}(x^{k},k),(\sigma^{k })^{2}\mathbf{I})\), which can be optimized by a simplified surrogate loss,

\[\mathcal{L}(\theta):=\mathbb{E}_{k\sim\mathcal{U}(1,K),\epsilon\sim\mathcal{N }(\mathbf{0},\mathbf{I})}[\|\epsilon_{\theta}(x^{k},k)-\epsilon\|^{2}].\] (1)

The reverse process begins by sampling an initial noise \(x_{K}\sim\mathcal{N}(\mathbf{0},\mathbf{I})\). The estimated mean of Gaussian is \(\mu_{\theta}(x^{k},k)=\sqrt{\bar{\alpha}^{k-1}}\hat{x}_{0}\ +\sqrt{1-\bar{\alpha}^{k-1}} \epsilon_{\theta}(x^{k},k)\) where \(\hat{x}_{0}=\frac{1}{\sqrt{\bar{\alpha}^{k}}}(x^{k}-\sqrt{1-\bar{\alpha}^{k}} \epsilon_{\theta}(x^{k},k))\), \(\alpha^{k}=1-\beta^{k}\), \(\bar{\alpha}^{k}=\prod\limits_{k=1}^{K}\alpha^{k}\) and \(\epsilon_{\theta}(x^{k},k)\) is a predictor used to estimate noise.

Diffusing decision-making.Recently, many diffusion-based approaches have been proposed to address decision-making problems in RL. Among existing works, Diffuser [16] chooses to diffuse on an observation-action trajectory with returns as the condition to generate actions directly. Decision Diffuser [16] focuses solely on diffusing the observation trajectory conditioned on returns. By avoiding direct diffusion over actions, Decision Diffuser enhances performance in scenarios with discrete actions. In this paper, considering the discrete nature of actions in TSC, we focus on introducing the approach diffusing on the observation trajectory \(\bm{\tau}\) sampled from offline dataset \(\mathcal{D}\). We denote the \(k\)-step denoised output of the diffusion model as \(x^{k}(\bm{\tau})\). The observation trajectory would be diffused to generate \(o_{t+1}\). However, only diffusing on observation trajectory is not enough to make decisions. An inverse dynamics model \(f_{\phi}\) is adapted to generate the action \(a_{t}\) that makes the observation transit from \(o_{t}\) to \(o_{t+1}\),

\[a_{t}:=f_{\phi}(o_{t},o_{t+1}).\] (2)

Figure 1: Illustration of a four-way intersection with 12 traffic movements and 4 traffic signal phases.

Classifier-free guidance.Classifier-free guidance [26] aims to learn the conditional distribution \(q(x(\bm{\tau})|y(\bm{\tau}))\). It learns both a conditional \(\epsilon_{\theta}(x^{k}(\bm{\tau}),y(\bm{\tau}),k)\) and an unconditional \(\epsilon_{\theta}(x^{k}(\bm{\tau}),\phi,k)\) for the noise. Then, the perturbed noise \(\epsilon_{\theta}(x^{k}(\bm{\tau}),\phi,k)+\omega(\epsilon_{\theta}(x^{k}(\bm{ \tau}),y(\bm{\tau}),k)-\epsilon_{\theta}(x^{k}(\bm{\tau}),\phi,k))\) can be used to generate samples, where \(\omega\) is the guidance scale.

## 3 Methodology

In order to effectively unify traffic data imputation and decision-making for TSC with missing data, we consider both of them as a conditional generative modeling problem via diffusion models,

\[\max_{\theta}\mathbb{E}_{\bm{\tau}\sim\mathcal{D}}[\log p_{\theta}(x^{0}(\bm{ \tau})|y(\bm{\tau}))],\] (3)

where \(p_{\theta}\) is a learnable model distribution to estimate the conditional data distribution of trajectory \(x^{0}(\bm{\tau})\), conditioned on \(y(\bm{\tau})\). We construct our generative model according to the conditional diffusion process,

\[q(x^{k}(\bm{\tau})|x^{k-1}(\bm{\tau})),\qquad p_{\theta}(x^{k-1}(\bm{\tau})|x ^{k}(\bm{\tau}),x^{0}(\bm{\tau}),y(\bm{\tau})),\] (4)

with conditions as,

\[y(\bm{\tau}):=[r(\bm{\tau}),y^{\prime}(\bm{\tau})],\qquad y^{\prime}(\bm{ \tau}):=[\bm{\tau}^{\prime}_{\rm obs},\bm{\tau}^{\prime}_{\rm nei}].\] (5)

To facilitate a better understanding of the symbol definitions, we categorize the trajectory segments into three types. The **observed** trajectory consists of data collected by sensors up to time \(t\). The **missing** trajectory includes data that have not been collected during this period. The **observable** trajectory encompasses both the observed trajectory and the data that could potentially be collected in the future. In this context, \(r(\bm{\tau})\) is the observable reward trajectory, and \(\bm{\tau}^{\prime}_{\rm obs}\) is the observed part of trajectory \(\bm{\tau}\) from the local intersection. \(\bm{\tau}^{\prime}_{\rm nei}=\cup_{N}f_{\rm nei}(\bm{\tau}^{i})\) is the observed observations from neighboring intersections, where \(\bm{\tau}^{i}\) denotes the observation trajectory of the neighboring intersection \(i\), \(N\) is total number of neighboring intersections, \(f_{\rm nei}(\cdot)\) represents the observed observations from entrance lanes of all neighboring intersections that feed into the entrance lanes of the local intersection, as shown in Figure 1. Due to discrete and high-frequent actions in TSC, we choose to diffuse solely on observations and utilize the inverse dynamic model to generate actions, which demonstrates a better performance proven in Appendix F.1 and F.6. We define the observation trajectory \(\bm{\tau}\) under data-missing scenarios as,

\[\bm{\tau}:=[\hat{o}_{t-C+1},o_{t-C+2},\cdots,\hat{o}_{t},\hat{o}_{t+1},\cdots, \hat{o}_{t+H}],\] (6)

where \(o_{t}\) is the observation collected by sensors, \(\hat{o}_{t}\) is the uncollected observation up to time \(t\) or a potentially collectible observation in the future, \(C\) is the length of historical observations and \(H\) is the horizon of future observations. It should be noted that we generate \(H\)-step future observations to enable effective long-horizon planning [16].

Figure 2 shows the overview of DiffLight, which consists of the Partial Rewards Conditioned Diffusion (PRCD), a noise model with a Spatial-Temporal transFormer structure (STFormer), and the Diffusion Communication Mechanism (DCM). We introduce each of them in the following sections.

### Partial Rewards Conditioned Diffusion

Under data-missing scenarios, sensors deployed to collect traffic data for rewards may malfunction or be lacking. The absence of partial rewards makes it challenging to calculate returns. Therefore, we adopt partial rewards as the condition instead of returns [16; 17; 19], which can be expressed as,

\[r(\bm{\tau}):=[\tilde{r}_{t-C+1},r_{t-C+2},\cdots,\tilde{r}_{t},r_{t+1}, \cdots,r_{t+H}],\] (7)

where \(r_{t}\) is the collected reward or a potentially collectible reward in the future, and \(\tilde{r}_{t}\) is the uncollected reward.

There are two ways to handle the missing part of rewards: conditioning on the rewards with padded values or conditioning on the partial observable rewards directly. Padding a specific value in the missing part is a feasible way. However, padded values could confuse the imputed rewards with the actual ones, leading to a negative impact on performance proven in Section 4.3. For better decision-making, we choose to condition on only partial observable rewards. We assume that the observable part and the missing part of the trajectory are collected by real sensors and virtual sensors separately, and the distribution of traffic data collected by two kinds of sensors is independent. In this case, the distribution in Equation 3 can be factorized as,

\[p_{\theta}(x^{0}(\bm{\tau})|y(\bm{\tau}))=p_{\theta}(x^{0}(\bm{\tau}_{\rm obs} )|r(\bm{\tau}),y^{\prime}(\bm{\tau}))\cdot p_{\theta}(x^{0}(\bm{\tau}_{\rm mis })|y^{\prime}(\bm{\tau})),\] (8)

where \(\bm{\tau}_{\rm obs}\) is the observable part of the trajectory \(\bm{\tau}\) from the local intersection, and \(\bm{\tau}_{\rm mis}\) is the missing part. We parameterize Equation 8 as the same form of locally conditioned diffusion [27; 28], propose partial rewards conditioned diffusion (PRCD) with classifier-free guidance [26] and introduce it into TSC with missing data. Given condition set \(\mathbf{c}=\{\phi,r(\bm{\tau})\}\) and binary non-overlapping mask set \(\mathbf{m}=\{m_{\rm mis},m_{\rm obs}\}\), PRCD assigns partial rewards to corresponding observation sub-trajectory masked by \(\mathbf{m}\), which can be formulated as,

\[\begin{split}\hat{\epsilon}_{\theta}(x^{k}(\bm{\tau}),k,y^{\prime }(\bm{\tau}),\mathbf{c},\mathbf{m}):=& m_{\rm obs}\odot\hat{ \epsilon}_{\theta}(x^{k}(\bm{\tau}),k,y^{\prime}(\bm{\tau}),r(\bm{\tau}))+\\ & m_{\rm mis}\odot\hat{\epsilon}_{\theta}(x^{k}(\bm{\tau}),k,y^{ \prime}(\bm{\tau}),\phi),\end{split}\] (9)

where \(\hat{\epsilon}_{\theta}(x^{k}(\bm{\tau}),k,y^{\prime}(\bm{\tau}),c_{i})\) could be expressed using classifier-free guidance,

\[\begin{split}\hat{\epsilon}_{\theta}(x^{k}(\bm{\tau}),k,y^{ \prime}(\bm{\tau}),c_{i}):=&\epsilon_{\theta}(x^{k}(\bm{\tau}),k, y^{\prime}(\bm{\tau}),\phi)+\\ &\omega(\epsilon_{\theta}(x^{k}(\bm{\tau}),k,y^{\prime}(\bm{\tau}),c_{i})-\epsilon_{\theta}(x^{k}(\bm{\tau}),k,y^{\prime}(\bm{\tau}),\phi)), \end{split}\] (10)

where \(c_{i}\in\mathbf{c}\). We provide a derivation for the feasibility of PRCD in Appendix E.

### Diffusing with Spatial-Temporal Transformer

The noise model with a U-Net structure is widely applied in image generation [15; 24; 29; 30], control [16; 17; 19] and other fields. However, it is hard to be applied to capture the spatial-temporal

Figure 2: An overview of DiffLight. We demonstrate the signal control process of an intersection in random missing. Traffic data is collected by sensors to derive rewards and observations. Missing rewards and observations are masked. Only the observed part of the observation trajectory and observable rewards from the local intersection, and observation trajectories from neighboring intersections would be input into PRCD with STFormer. In the inference process, DCM would work with STFormer to generate observations. The inverse dynamics model is used to generate actions to control the traffic signal.

dependencies in TSC. The emergence of Transformer [31] and its applications on spatial-temporal modeling [32; 33; 34; 35] provide a promising solution to deal with it. In this section, we design a Spatial-Temporal transFormer (STFormer) structure to effectively model the spatial-temporal dependencies in TSC, which includes a data embedding layer, stacked \(L\) spatial-temporal encoder layers, and an output layer. Data embedding layer embeds different inputs into embeddings, including diffusion timestep, trajectory timestep, rewards, trajectory of the local intersection, and neighboring intersections. Spatial-Temporal Encoder layer (STE) is composed of Communication Cross-Attention module (CCA), Spatial Self-Attention module (SSA), and Temporal Self-Attention module (TSA). CCA is designed to capture the spatial-temporal dependencies between the local intersection and neighboring intersections. SSA and TSA are designed to capture the spatial dependencies and temporal dependencies at the local intersection separately. Output layer is used to convert the output of STE into the noise we desire to predict. We detail the structure of STFormer in Appendix B.2.

### Diffusion Communication Mechanism

Observations of neighboring intersections are crucial for TSC with missing data [14]. However, due to the possible absence of observations from neighboring intersections, the traffic signal could be controlled ineffectively. For instance, we assume an extreme situation where there is no available observation in both the local intersection and neighboring intersections. In this case, observation trajectories of intersections are all masked by noise, leading to difficulty in decision-making at the local intersection. Therefore, we propose a Diffusion Communication Mechanism (DCM) to disseminate observation information generated by the noise model in the reverse process among intersections. Formally, we formulate DCM as,

\[\bm{\tau}^{\prime}_{\mathrm{nei}}=\left\{\begin{aligned} &\cup_{N}f_{\mathrm{nei}}(\bm{\tau}^{i}),& k=K,\\ &\cup_{N}f_{\mathrm{nei}}(\frac{1}{\sqrt{\bar{\alpha}^{k}}}(x^{k} (\bm{\tau}^{i})-\sqrt{1-\bar{\alpha}^{k}}\hat{\epsilon}_{\theta}(x^{k}(\bm{ \tau}),k,y^{\prime}(\bm{\tau}),\mathbf{c},\mathbf{m}))),& k<K. \end{aligned}\right.\] (11)

The reverse process begins by inputting original observations of neighboring intersections with missing data. During diffusing, we predict \(\hat{z}^{0}(\bm{\tau}^{i})\), which is the same in Section 2.3. With the help of DCM, generated observations of neighboring intersections could be spread from neighboring intersections for better decisions of the agent at the local intersection. Note that we train our model with ground-truth values collected from neighboring intersections and only use DCM in the inference process.

### Training and Inference of DiffLight

Training process.Given an offline dataset \(\mathcal{D}\) which consists of observation trajectories, rewards and actions, we train the reverse process \(p_{\theta}\) parameterized through the noise model \(\epsilon_{\theta}\), and the inverse dynamics model \(f_{\phi}\) in DiffLight with the following loss,

\[\mathcal{L}(\theta):= \mathbb{E}_{(o,a,o^{\prime})\in\mathcal{D}}[\|a-f_{\phi}(o,o^{ \prime})\|^{2}\cdot\mathds{1}(o,o^{\prime})]+\] (12) \[\mathbb{E}_{k,\epsilon,\beta\sim\mathrm{Bern}(p)}[\|\hat{\epsilon }_{\theta}(x^{k}(\bm{\tau}),k,y^{\prime}(\bm{\tau}),(1-\beta)r(\bm{\tau})+ \beta\phi,\mathbf{m})-\epsilon\|^{2}].\]

For each trajectory \(\bm{\tau}\), we sample noise \(\epsilon\sim\mathcal{N}(\mathbf{0},\mathbf{I})\) and a diffusion timestep \(k\sim\mathcal{U}(1,K)\), construct a masked noise array of observations \(x^{k}(\bm{\tau})\) with \(\bm{\tau}^{\prime}_{\mathrm{obs}}\), and predict the noise \(\hat{\epsilon}_{\theta}(x^{k}(\bm{\tau}),k,y^{\prime}(\bm{\tau}),r(\bm{\tau}), \mathbf{m})\). Missing values in condition \(\bm{\tau}^{\prime}_{\mathrm{nei}}\) are padded with zeros. It should be noted that we ignore the rewards condition \(r(\bm{\tau})\) with probability \(p\) and the inverse dynamics is trained with individual transitions without missing observation \(o\) or \(o^{\prime}\). For the training process of DiffLight, due to the inaccessibility of the ground-truth of missing data, we consider it self-supervised learning. In random missing, given a trajectory \(\bm{\tau}\) and conditions, we can separate the observed part into two parts and set one of them to miss. In kriging missing, we randomly mask the whole trajectories of one observed intersection. Then, we can train the noise model \(\hat{\epsilon}_{\theta}\) by solving Equation 12.

Inference process.DiffLight is deployed to every intersection in the traffic network in the inference process. Given rewards \(r(\bm{\tau})\), a \(C\)-step observed trajectory of local intersection \(\bm{\tau}^{\prime}_{\mathrm{obs}}\) with missing data and trajectories of neighboring intersections \(\bm{\tau}_{\text{nei}}^{\prime}\), the agent can impute the missing observations of local intersection, predict the observations in the future and generate next action with Equation 2, 9 and 10. In order to sample a high reward trajectory, the rewards from time \(t+1\) to \(t+H\) are considered in \(r(\bm{\tau})\), which is set to 1.

## 4 Experiments

### Experimental Setup

Experiment SettingsWe conduct our experiments on CityFlow [36], a traffic simulator widely used in various RL-based methods. Similar to existing work in [13], we set the phase number as four and the minimum action duration as 15 seconds.

DatasetsThe datasets consist of two parts: offline datasets with missing data and real-world traffic flow datasets with traffic networks. We apply five real-world traffic flow datasets [9; 37] for comparison, including Hangzhou\({}_{1}\) (\(\mathcal{D}_{\text{Hz}}^{1}\)), Hangzhou\({}_{2}\) (\(\mathcal{D}_{\text{Hz}}^{2}\)), Jinan\({}_{1}\) (\(\mathcal{D}_{\text{IN}}^{1}\)), Jinan\({}_{2}\) (\(\mathcal{D}_{\text{IN}}^{2}\)) and Jinan\({}_{3}\) (\(\mathcal{D}_{\text{IN}}^{3}\)). Corresponding offline datasets are composed of training trajectories of three online methods. We detail the datasets in Appendix C.1. To simulate data-missing scenarios, we adopt masks of different missing rates in different missing patterns, including random missing (RM) and kriging missing (KM), to mask observations and rewards. We describe the details of two patterns and missing rates in Appendix C.2.

Evaluation MetricsWe use the average travel time (ATT) as the main metric for evaluation, which is widely used to evaluate the performance of TSC. It calculates the average time all the vehicles spend between entering and leaving the traffic network during simulation, which is formulated as,

\[\text{ATT}=\frac{1}{N}\sum_{i=1}^{N}\left(t_{i}^{l}-t_{i}^{e}\right),\] (13)

where \(N\) is the total number of vehicles entering the road network, \(t_{i}^{e}\) and \(t_{i}^{l}\) are the entering time and leaving time for the \(i\)-th vehicle respectively. The lower ATT indicates a better control performance.

Compared MethodsWe compare our method with Behavior Cloning (BC) [38] and offline approaches, including CQL [39], TD3+BC [40], Decision Transformer (DT) [41], Diffuser [16], Decision Diffuser (DD) [17]. Similar to the existing work in [14], we adopt store-and-forward method (SFM) [42], a rule-based method that has generally more stable performances, to impute missing observations and rewards for these approaches. We detail these approaches and SFM in Appendix D.

### Performance under Data-Missing Scenarios

We train and test our method on all five datasets with different missing patterns and missing rates, and compare our method with all baselines. DiffLight performs the best on most of the datasets. We analyze experiments of different missing patterns below.

Random missing.In random missing, we can see that DiffLight achieves optimal or sub-optimal performance compared with baselines in all datasets in Table 1. Diffusion-based approaches, including Diffuser and DD, show a better performance than other baselines in most datasets. These diffusion-based approaches utilize a noise model to predict noise and generate actions or observations, which helps mitigate the disturbance caused by imputed observations and rewards during the diffusion process. Compared with diffusion-based approaches, the performance of other baselines without the diffusion process is disturbed by imputed observations and rewards more seriously.

Kriging missing.In kriging missing, DiffLight shows the best performance in most datasets in Table 2. Unlike the results of random missing, DD does not perform well in kriging missing compared with other baselines. Since DD must impute missing observations with the SFM model first, generate future observations with the diffusion model, and then use the inverse dynamics to generate actions, which leads to serious error accumulation. While other baselines generate actions directly, requiring only roughly imputed observations and rewards.

We provide the overall performance of DiffLight and baselines without missing data as well, which is detailed in Appendix F.1. In addition, we provide further experiments on the influence of unobserved locations of intersections in Appendix F.2, the limit of missing rates in Appendix F.3, and the scalability of the approach in Appendix F.4.

\begin{table}
\begin{tabular}{c c|c c c c c c c} \hline \hline
**Dataset** & **Rate** & **BC** & **CQL** & **TD3+BC** & **DT** & **Diffuser** & **DD** & **DiffLight** \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{HZ}}^{1}\)} & 10\% & 349.59 & 363.5 & 337.54 & 300.64 & 290.66 & 289.38 & **286.17\(\pm\)**0.87 \\  & 30\% & 350.08 & 368.53 & 338.21 & 315.64 & 302.39 & 298.67 & **292.81\(\pm\)**0.66 \\  & 50\% & 357.13 & 383.67 & 343.23 & 343.96 & 313.68 & 422.5 & **304.71\(\pm\)**2.12 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{HZ}}^{2}\)} & 10\% & 382.45 & 353.23 & 370.16 & 347.25 & 346.82 & 347.77 & **327.13\(\pm\)**1.43 \\  & 30\% & 388.73 & 352.55 & 376.06 & 360.59 & 366.24 & 364.6 & **330.68\(\pm\)**2.63 \\  & 50\% & 387.77 & 367.38 & 375.32 & 377.79 & 398.23 & 395.61 & **333.90\(\pm\)**2.67 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{JN}}^{1}\)} & 10\% & 320.6 & 299.07 & 315.54 & 308.78 & 272.51 & **260.76** & 272.18\(\pm\)0.93 \\  & 30\% & 328.97 & 310.8 & 326.37 & 377.39 & 295.09 & 300.49 & **279.10\(\pm\)**2.10 \\  & 50\% & 355.47 & 322.25 & 351.2 & 439.89 & 324.75 & 517.99 & **290.02\(\pm\)**2.18 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{JN}}^{2}\)} & 10\% & 288.42 & 305.86 & 322.44 & 259.3 & 255.12 & **245.85** & 247.17\(\pm\)1.38 \\  & 30\% & 297.26 & 308.13 & 330.43 & 263.24 & 271.53 & 256.16 & **254.87\(\pm\)**0.69 \\  & 50\% & 299.44 & 320.17 & 334.78 & 278.22 & 302.28 & 275.2 & **268.29\(\pm\)**0.90 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{JN}}^{3}\)} & 10\% & 301.35 & 291.26 & 281.75 & 257.66 & 246.90 & **242.56** & 246.65\(\pm\)0.94 \\  & 30\% & 315.03 & 295.61 & 283.24 & 312.56 & 258.83 & 256.95 & **254.55\(\pm\)**0.35 \\ \cline{1-1}  & 50\% & 326.55 & 301.1 & 292.98 & 382.93 & 272.36 & 351.92 & **265.76\(\pm\)**0.01 \\ \hline \hline \end{tabular}
\end{table}
Table 1: Comparing ATT for DiffLight and baselines in random missing. We report the mean and the standard error for three trials.

\begin{table}
\begin{tabular}{c c|c c c c c c c} \hline \hline
**Dataset** & **Rate** & **BC** & **CQL** & **TD3+BC** & **DT** & **Diffuser** & **DD** & **DiffLight** \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{HZ}}^{1}\)} & 6.25\% & 338.33 & 317.69 & 332.80 & 300.78 & 302.99 & 395.54 & **294.18\(\pm\)**3.36 \\  & 12.50\% & 346.83 & 317.94 & 332.43 & 310.37 & 305.93 & 483.47 & **294.11\(\pm\)**4.34 \\  & 18.75\% & 350.08 & 319.18 & 333.24 & 306.35 & 307.22 & 572.56 & **300.31\(\pm\)**0.31 \\  & 25.00\% & 354.86 & 328.83 & 341.89 & 381.94 & 328.79 & 836.46 & **302.16\(\pm\)**1.23 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{HZ}}^{2}\)} & 6.25\% & 380.18 & 354.08 & 374.04 & 347.53 & 363.69 & 370.80 & **330.40\(\pm\)**0.11 \\  & 12.50\% & 375.93 & 361.52 & 374.66 & 363.5 & 378.51 & 424.99 & **319.11\(\pm\)**7.19 \\ \cline{1-1}  & 18.75\% & 380.74 & 362.82 & 376.48 & 374.69 & 413.48 & 435.13 & **327.61\(\pm\)**9.68 \\ \cline{1-1}  & 25.00\% & 413.46 & 418.97 & 390.75 & 492.56 & 378.54 & 590.69 & **351.21\(\pm\)**9.86 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{JN}}^{1}\)} & 8.33\% & 319.85 & 302.35 & 317.17 & 306.52 & 332.44 & 595.34 & **280.75\(\pm\)**0.11 \\ \cline{1-1}  & 16.67\% & 339.19 & 343.16 & 349.72 & 380.97 & 349.74 & 643.48 & **306.06\(\pm\)**14.89 \\ \cline{1-1}  & 25.00\% & 392.91 & 398.66 & 391.32 & 432.56 & 410.5 & 995.99 & **329.67\(\pm\)**16.04 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{JN}}^{2}\)} & 8.33\% & 287.29 & 306.94 & 319.4 & 261.98 & 259.51 & 460.22 & **254.13\(\pm\)**0.35 \\ \cline{1-1}  & 16.67\% & 299.41 & 314.43 & 321.88 & **267.67** & 270.15 & 731.49 & 272.76\(\pm\)1.42 \\ \cline{1-1}  & 25.00\% & 314.63 & 359.33 & 323.65 & 295.59 & **295.21** & 1049.19 & 325.20\(\pm\)26.63 \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{JN}}^{3}\)} & 8.33\% & 310.44 & 287.25 & 282.46 & 368.2 & 267.64 & 324.42 & **249.48\(\pm\)**0.16 \\ \cline{1-1}  & 16.67\% & 327.7 & 311.89 & 295.07 & 322.96 & 294.27 & 399.67 & **274.13\(\pm\)**2.50 \\ \cline{1-1}  & 25.00\% & 381.37 & 337.33 & 312.44 & 494.04 & **292.26** & 409.76 & 342.07\(\pm\)16.11 \\ \hline \

### Ablation Study

We further evaluate the effectiveness of different parts in DiffLight with the following variants. (1) U-Net: this variant replaces STFormer with U-Net as the noise model and missing rewards input are zero-padded. (2) STFormer: this variant uses STFormer as the noise model and keeps missing rewards zero-padded. (3) STFormer+PRCD: this is equal to DiffLight which uses STFormer as the noise model and is conditioned on partial rewards. It should be noted that DCM is adopted in both STFormer and STFormer+PRCD and all missing observations would not be imputed by the SFM model but are masked with Gaussian noise in order to be inpainted in the reverse process in ablation experiments.

Table 3 shows the comparison of these variants on Hangzhou\({}_{1}\) and Jinan\({}_{1}\) with random missing and kriging missing. Based on the results, we can find that STFormer which takes spatial-temporal dependencies into consideration leads to a great performance improvement over U-Net. It shows that capturing spatial-temporal dependencies is important in TSC. STFormer+PRCD performs better than STFormer, indicating that padding values in rewards could be confused with the ground-truth rewards and only conditioning on partial rewards could have a better performance. Due to the space limitation, we provide further experiments on DCM in Appendix F.5 and the inverse dynamics in Appendix F.6.

### Model Generalization

We evaluate the generalization performance of DiffLight on Hangzhou\({}_{1}\) and Jinan\({}_{1}\) with different missing rates. We train our method in a specific missing rate and test it on the same dataset with other missing rates. To better compare the generalization performance among models trained in different missing rates, we formulate the relative generalization performance as,

\[P_{\text{r}}=P_{\text{g}}/P_{\text{o}},\] (14)

where \(P_{\text{r}}\) is the relative generalization performance of the current missing rate, \(P_{\text{g}}\) is the performance of the model trained in other missing rates, and \(P_{\text{o}}\) is the performance of the model trained in the current missing rate. The results in Figure 3 demonstrate that the generalization performance of DiffLight is excellent in most situations. If we train DiffLight in a high missing rate and test it in a lower missing rate, the performance of DiffLight remains stable. In contrast, if we train DiffLight in a low missing rate and test it in a higher missing rate, the performance of DiffLight would decrease

\begin{table}
\begin{tabular}{c c|c c c} \hline \hline
**Dataset** & **Pattern and Rate** & **U-Net** & **STFormer** & **STFormer+PRCD** \\ \hline \multirow{2}{*}{\(\mathcal{D}_{\text{HZ}}^{1}\)} & RM (50\%) & 668.38\(\pm\)65.54 & 350.60\(\pm\)9.88 & **304.71\(\pm\)**2.12 \\  & KM (25\%) & 363.80\(\pm\)44.65 & 318.21\(\pm\)5.84 & **302.16\(\pm\)**1.23 \\ \multirow{2}{*}{\(\mathcal{D}_{\text{IN}}^{1}\)} & RM (50\%) & 509.64\(\pm\)41.15 & 374.41\(\pm\)3.61 & **290.02\(\pm\)**2.18 \\  & KM (25\%) & 454.90\(\pm\)65.10 & 374.23\(\pm\)69.90 & **329.67\(\pm\)**16.04 \\ \hline \hline \end{tabular}
\end{table}
Table 3: Ablation study on Hangzhou\({}_{1}\) and Jinan\({}_{1}\).

Figure 3: The relative generalization performance of DiffLight in different missing rates. The x-axis is the missing rate during testing and the y-axis is the missing rate during training. The formula used to calculate the relative generalization performance is depicted below.

slightly. As data with a higher missing rate has more complex missing situations, making it difficult for models to handle these situations.

## 5 Related Work

Traffic Signal ControlTSC approaches can be categorized into conventional and RL-based methods. Conventional approaches like Fixed-time [2], SCOOT [3] and SCATS [4] have been widely deployed in different cities. In recent years, RL-based approaches for TSC get more attention. DQN algorithm is introduced into TSC in [5; 6; 7] for dynamic real-time control. Attention mechanisms are applied to promote inter-agent communication [9] and build universal models [10]. Max-pressure [8] and advanced-MP [13] are proposed to promote the performance of existing methods. TSC with missing data is considered with the help of the imputation model in the online setting. However, there is no existing work to solve this problem in the offline setting.

Diffusion-based Reinforcement LearningThere are various works applying the diffusion model to offline RL recently. Diffusion and deep q-learning are combined [18], demonstrating the potential of diffusion in RL. The state-action trajectory is encoded in latent space [43], enhancing credit assignment and reward propagation. In addition to methods relying on TD-learning, Diffuser [16] and Decision Diffuser [17] are proposed as planners to generate the trajectory with a conditional diffusion model. However, they are all studied under scenarios without missing data, while we model TSC with missing data.

Traffic Data ImputationWith the development of deep learning, RNN-based methods [44; 45; 46] show good performance for traffic data imputation. In subsequent studies, diffusion models are utilized to learn the complex distribution in traffic data [21; 22]. For TSC, store-and-forward method (SFM) [42] is proven to have a more stable performance than neural networks [14]. In this paper, we adopt SFM to impute observations and rewards for baselines.

## 6 Conclusion and Limitation

ConclusionIn this paper, we introduce DiffLight, a novel conditional diffusion model designed for TSC in scenarios with missing data. Our approach centers on the Partial Rewards Conditioned Diffusion (PRCD) model, which addresses both traffic data imputation and decision-making in the presence of incomplete data. This model helps prevent missing rewards from disrupting the learning process. We address the challenge of capturing spatial-temporal dependencies across intersections by designing a Spatial-Temporal transFormer (STFormer) architecture as the noise model. Additionally, to enhance communication and control performance, we propose a Diffusion Communication Mechanism (DCM) that facilitates the propagation of generated observations. We conduct extensive experiments on different datasets and settings to demonstrate that DiffLight is an effective controller to address TSC with missing data.

LimitationIn this work, we only consider two missing patterns: random missing and kriging missing. While in the real world, the missing pattern in the traffic network is more complex. Meanwhile, we just adopt SFM which is similar to k-nearest neighbor (KNN) to impute the traffic data for baselines. In addition, our approach is conditioned on partial rewards instead of returns which could lead to the short-sightedness of agents. Future work could explore the influence on performance in more different missing patterns even mixed missing patterns, adopt more different imputation methods, and find out a more far-sighted method to control the traffic signals under data-missing scenarios.

## Acknowledgments

This work was supported by the National Natural Science Foundation of China (No. 62372031).

## References

* [1]J. Lu, B. Li, H. Li, and A. Al-Barakani (2021) Expansion of city scale, traffic modes, traffic congestion, and air pollution. Cities108, pp. 102974. Cited by: SS1.
* [2]F. Vo Webster (1958) Traffic signal settings. Technical report. Cited by: SS1.
* [3]P. Hunt, D. Robertson, R. Bretherton, and M. C. Royle (1982) The scoot on-line traffic signal optimisation technique. Traffic Engineering & Control23 (4). Cited by: SS1.
* [4]P. Lowrie (1990) Scats, sydney co-ordinated adaptive traffic system: a traffic responsive method of controlling urban traffic. Cited by: SS1.
* [5]E. Van der Pol and F. A. Oliehoek (2016) Coordinated deep reinforcement learners for traffic light control. Proceedings of learning, inference and control of multi-agent systems (at NIPS 2016), pp. 21-38. Cited by: SS1.
* [6]L. Li, Y. Lv, and F. Wang (2016) Traffic signal timing via deep reinforcement learning. IEEE/CAA Journal of Automatica Sinica3 (3), pp. 247-254. Cited by: SS1.
* [7]H. Wei, G. Zheng, H. Yao, and Z. Li (2018) Intellilight: a reinforcement learning approach for intelligent traffic light control. In Proceedings of the 24th ACM SIGKDD international conference on knowledge discovery & data mining, pp. 2496-2505. Cited by: SS1.
* [8]H. Wei, C. Chen, G. Zheng, K. Wu, V. Gayah, K. Xu, and Z. Li (2019) Presslight: learning max pressure control to coordinate traffic signals in arterial network. In Proceedings of the 25th ACM SIGKDD international conference on knowledge discovery & data mining, pp. 1290-1298. Cited by: SS1.
* [9]H. Wei, N. Xu, H. Zhang, G. Zheng, X. Zang, C. Chen, W. Zhang, Y. Zhu, K. Xu, and Z. Li (2019) Colight: learning network-level cooperation for traffic signal control. In Proceedings of the 28th ACM international conference on information and knowledge management, pp. 1913-1922. Cited by: SS1.
* [10]A. Oroojlooy, M. Nazari, D. Hajinezhad, and J. Silva (2020) Attendlight: universal attention-based reinforcement learning model for traffic signal control. Advances in Neural Information Processing Systems33, pp. 4079-4090. Cited by: SS1.
* [11]C. Chen, H. Wei, N. Xu, G. Zheng, M. Yang, Y. Xiong, K. Xu, and Z. Li (2020) Toward a thousand lights: decentralized deep reinforcement learning for large-scale traffic signal control. In Proceedings of the AAAI conference on artificial intelligence, Vol. 34, pp. 3414-3421. Cited by: SS1.
* [12]X. Zang, H. Yao, G. Zheng, N. Xu, K. Xu, and Z. Li (2020) Metalight: value-based meta-reinforcement learning for traffic signal control. In Proceedings of the AAAI conference on artificial intelligence, Vol. 34, pp. 1153-1160. Cited by: SS1.
* [13]L. Zhang, Q. Wu, J. Shen, L. Lu, B. Du, and J. Wu (2022) Expression might be enough: representing pressure and demand for reinforcement learning based traffic signal control. In International Conference on Machine Learning, pp. 26645-26654. Cited by: SS1.
* [14]H. Mei, J. Li, B. Shi, and H. Wei (2023) Reinforcement learning approaches for traffic signal control under missing data. In Proceedings of the Thirty-Second International Joint Conference on Artificial Intelligence, pp. 2261-2269. Cited by: SS1.
* [15]J. Ho, A. Jain, and P. Abbeel (2020) Denoising diffusion probabilistic models. Advances in neural information processing systems33, pp. 6840-6851. Cited by: SS1.
* [16]M. Janner, Y. Du, J. Tenenbaum, and S. Levine (2022) Planning with diffusion for flexible behavior synthesis. In International Conference on Machine Learning, pp. 9902-9915. Cited by: SS1.
* [17]A. Ajay, Y. Du, A. Gupta, J. B. Tenenbaum, T. S. Jaakkola, and P. Agrawal (2022) Is conditional generative modeling all you need for decision making?. In The Eleventh International Conference on Learning Representations, Cited by: SS1.
* [18]Z. Wang, J. J. Hunt, and M. Zhou (2022) Diffusion policies as an expressive policy class for offline reinforcement learning. In The Eleventh International Conference on Learning Representations, Cited by: SS1.
* [19]Z. Zhu, M. Liu, L. Mao, B. Kang, M. Xu, Y. Yu, S. Ermon, and W. Zhang (2023) Madiff: offline multi-agent learning with diffusion models. arXiv preprint arXiv:2305.17330. Cited by: SS1.

* He et al. [2023] Haoran He, Chenjia Bai, Kang Xu, Zhuoran Yang, Weinan Zhang, Dong Wang, Bin Zhao, and Xuelong Li. Diffusion model is an effective planner and data synthesizer for multi-task reinforcement learning. _Advances in neural information processing systems_, 36, 2023.
* Tashiro et al. [2021] Yusuke Tashiro, Jiaming Song, Yang Song, and Stefano Ermon. Csdi: Conditional score-based diffusion models for probabilistic time series imputation. _Advances in Neural Information Processing Systems_, 34:24804-24816, 2021.
* Liu et al. [2023] Mingzhe Liu, Han Huang, Hao Feng, Leilei Sun, Bowen Du, and Yanjie Fu. Pristi: A conditional diffusion framework for spatiotemporal imputation. In _2023 IEEE 39th International Conference on Data Engineering (ICDE)_, pages 1927-1939. IEEE, 2023.
* Zhang et al. [2024] Qianru Zhang, Haixin Wang, Cheng Long, Liangcai Su, Xingwei He, Jianlong Chang, Tailin Wu, Hongzhi Yin, Siu-Ming Yiu, Qi Tian, et al. A survey of generative techniques for spatial-temporal data mining. _arXiv preprint arXiv:2405.09592_, 2024.
* Song et al. [2020] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In _International Conference on Learning Representations_, 2020.
* Sohl-Dickstein et al. [2015] Jascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsupervised learning using nonequilibrium thermodynamics. In _International conference on machine learning_, pages 2256-2265. PMLR, 2015.
* Ho and Salimans [2022] Jonathan Ho and Tim Salimans. Classifier-free diffusion guidance. _arXiv preprint arXiv:2207.12598_, 2022.
* Po and Wetzstein [2024] Ryan Po and Gordon Wetzstein. Compositional 3d scene generation using locally conditioned diffusion. In _2024 International Conference on 3D Vision (3DV)_, pages 651-663. IEEE, 2024.
* Ren et al. [2024] Jiawei Ren, Mengmeng Xu, Jui-Chieh Wu, Ziwei Liu, Tao Xiang, and Antoine Toisoul. Move anything with layered scene diffusion. _arXiv preprint arXiv:2404.07178_, 2024.
* Nichol and Dhariwal [2021] Alexander Quinn Nichol and Prafulla Dhariwal. Improved denoising diffusion probabilistic models. In _International conference on machine learning_, pages 8162-8171. PMLR, 2021.
* Rombach et al. [2022] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bjorn Ommer. High-resolution image synthesis with latent diffusion models. In _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition_, pages 10684-10695, 2022.
* Vaswani et al. [2017] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz Kaiser, and Illia Polosukhin. Attention is all you need. _Advances in neural information processing systems_, 30, 2017.
* Guo et al. [2019] Shengnan Guo, Youfang Lin, Ning Feng, Chao Song, and Huaiyu Wan. Attention based spatial-temporal graph convolutional networks for traffic flow forecasting. In _Proceedings of the AAAI conference on artificial intelligence_, volume 33, pages 922-929, 2019.
* Guo et al. [2021] Shengnan Guo, Youfang Lin, Huaiyu Wan, Xiucheng Li, and Gao Cong. Learning dynamics and heterogeneity of spatial-temporal graph data for traffic forecasting. _IEEE Transactions on Knowledge and Data Engineering_, 34(11):5415-5428, 2021.
* Feng and Tassiulas [2022] Aosong Feng and Leandros Tassiulas. Adaptive graph spatial-temporal transformer network for traffic forecasting. In _Proceedings of the 31st ACM international conference on information & knowledge management_, pages 3933-3937, 2022.
* Jiang et al. [2023] Jiawei Jiang, Chengkai Han, Wayne Xin Zhao, and Jingyuan Wang. Pfdormer: Propagation delay-aware dynamic long-range transformer for traffic flow prediction. In _Proceedings of the AAAI conference on artificial intelligence_, volume 37, pages 4365-4373, 2023.
* Zhang et al. [2019] Huichu Zhang, Siyuan Feng, Chang Liu, Yaoyao Ding, Yichen Zhu, Zihan Zhou, Weinan Zhang, Yong Yu, Haiming Jin, and Zhenhui Li. Cityflow: A multi-agent reinforcement learning environment for large scale city traffic scenario. In _The world wide web conference_, pages 3620-3624, 2019.
* Zheng et al. [2019] Guanjie Zheng, Yuanhao Xiong, Xinshi Zang, Jie Feng, Hua Wei, Huichu Zhang, Yong Li, Kai Xu, and Zhenhui Li. Learning phase competition for traffic signal control. In _Proceedings of the 28th ACM international conference on information and knowledge management_, pages 1963-1972, 2019.
* Torabi et al. [2018] Faraz Torabi, Garrett Warnell, and Peter Stone. Behavioral cloning from observation. In _Proceedings of the 27th International Joint Conference on Artificial Intelligence_, pages 4950-4957, 2018.

* [39] Aviral Kumar, Aurick Zhou, George Tucker, and Sergey Levine. Conservative q-learning for offline reinforcement learning. _Advances in Neural Information Processing Systems_, 33:1179-1191, 2020.
* [40] Scott Fujimoto and Shixiang Shane Gu. A minimalist approach to offline reinforcement learning. _Advances in neural information processing systems_, 34:20132-20145, 2021.
* [41] Lili Chen, Kevin Lu, Aravind Rajeswaran, Kimin Lee, Aditya Grover, Misha Laskin, Pieter Abbeel, Aravind Srinivas, and Igor Mordatch. Decision transformer: Reinforcement learning via sequence modeling. _Advances in neural information processing systems_, 34:15084-15097, 2021.
* [42] Konstantinos Aboudolas, Markos Papageorgiou, and Elias Kosmatopoulos. Store-and-forward based methods for the signal control problem in large-scale congested urban road networks. _Transportation Research Part C: Emerging Technologies_, 17(2):163-174, 2009.
* [43] Siddarth Venkataraman, Shivesh Khaitan, Ravi Tej Akella, John Dolan, Jeff Schneider, and Glen Berseth. Reasoning with latent diffusion in offline reinforcement learning. In _The Twelfth International Conference on Learning Representations_, 2023.
* [44] Zhengping Che, Sanjay Purushotham, Kyunghyun Cho, David Sontag, and Yan Liu. Recurrent neural networks for multivariate time series with missing values. _Scientific reports_, 8(1):6085, 2018.
* [45] Wei Cao, Dong Wang, Jian Li, Hao Zhou, Lei Li, and Yitan Li. Brits: Bidirectional recurrent imputation for time series. _Advances in neural information processing systems_, 31, 2018.
* [46] Jinsung Yoon, William R Zame, and Mihaela van der Schaar. Estimating missing data in temporal data streams using multi-directional recurrent neural networks. _IEEE Transactions on Biomedical Engineering_, 66(5):1477-1490, 2018.
* [47] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. _arXiv preprint arXiv:1412.6980_, 2014.
* [48] Qiang Wu, Liang Zhang, Jun Shen, Linyuan Lu, Bo Du, and Jianqing Wu. Efficient pressure: Improving efficiency for signalized intersections. _arXiv preprint arXiv:2112.02336_, 2021.

Broad Impacts

Our proposed method demonstrates effective abilities in TSC with missing data. It can handle different missing patterns and different missing rates when controlling traffic signals. Even in an intersection where there are no observed neighboring intersections, DiffLight can perform competitively against baselines with SFM. Moreover, the fast inference speed with fewer sampling steps and stable performance indicates that DiffLight can be deployed to achieve real-time control in the real world. However, a potential negative impact of this work is that bad decisions could lead to a collapse in the traffic network.

## Appendix B The Details of DiffLight

### Hyperparameters of DiffLight

In this section, we describe the details of hyperparameters,

* We set the batch size as 64 and each sample contains the trajectory of the whole intersections in the traffic network. We train our model using Adam optimizer [47] with \(2e^{-4}\) learning rate for \(1.5e^{5}\) train steps.
* We train DiffLight on NVIDIA GeForce RTX A5000 for around 15 hours and test it on the same GPU.
* We choose the probability \(p\) of removing the condition information to be 0.25 and guidance scale \(\alpha=1.2\).
* In DiffLight, we choose the length of historical observations \(C=5\) and the planning horizon of observation trajectory \(H=3\).
* We use \(K=100\) for diffusion steps.

### Structure of STFormer

STFormer is composed of a data embedding layer, stacked \(L\) spatial-temporal encoder layers, and an output layer. We detail each of them as follows.

Data embedding layer.Different inputs are embedded into embeddings \(\bm{e}\) with the same dimension \(D\) by the data embedding layer which consist of separate MLPs \(f_{\mathrm{MLP}}(\cdot)\),

\[\bm{e}_{\mathrm{dt}} :=f_{\mathrm{MLP}}(k),\quad\bm{e}_{\mathrm{tt}}:=f_{\mathrm{MLP} }(t_{0.T-1}),\quad\bm{e}_{\mathrm{r}}:=f_{\mathrm{MLP}}(R(\bm{\tau})),\] (15) \[\bm{e}_{\mathrm{ctr}} :=f_{\mathrm{MLP}}(\text{x}^{k}(\bm{\tau})),\quad\bm{e}_{\mathrm{ ntr}}:=f_{\mathrm{MLP}}(\bm{\tau}_{\mathrm{nei}})\]

where \(t_{0.T-1}\) is the timestep of trajectory, \(\bm{e}_{\mathrm{dt}}\), \(\bm{e}_{\mathrm{tt}}\), \(\bm{e}_{\mathrm{r}}\), \(\bm{e}_{\mathrm{ctr}}\) and \(\bm{e}_{\mathrm{ntr}}\) represent the embedding of diffusion timestep, trajectory timestep, rewards, trajectory of last intersection and partial trajectory of neighboring intersection separately.

Spatial-temporal encoder layer.The spatial-temporal encoder layer, abbreviated as STE, is composed of Communication Cross-Attention module, Spatial Self-Attention module and Temporal Self-Attention module. We adopt the vanilla attention operator [31] in modules, represented as \(f_{\mathrm{Att}}(Q,K,V)\). The following slice notations are used to formulate attention modules. For the embedding of local intersection's trajectory \(\bm{e}_{\mathrm{ctr}}\in\mathbb{R}^{T\times L\times D}\) where \(L\) is the number of entrance lanes, the \(t\) slice is \(\bm{e}_{\mathrm{ctr}}^{t_{i}}\in\mathbb{R}^{L\times D}\) and the \(l\) slice is \(\bm{e}_{\mathrm{ctr}}^{l_{i}}\in\mathbb{R}^{T\times D}\). For the embedding of neighboring intersections' partial trajectories \(\bm{e}_{\mathrm{ntr}}\in\mathbb{R}^{L\times(T\cdot L^{\prime})\times D}\) where \(L^{\prime}\) is the number of neighboring intersections' entrance lanes taken into consideration, the \(l\) slice is \(\bm{e}_{\mathrm{ntr}}^{l_{i}}\in\mathbb{R}^{(T\cdot L^{\prime})\times D}\).

The Communication Cross-Attention module, abbreviated as CCA, is designed to capture the spatial-temporal dependencies between the local intersection and neighboring intersections. As illustrated in Figure 1, \(\bm{e}_{\mathrm{ntr}}^{l_{i}}\) contains information of entrance lanes from neighboring intersections feeding into lane \(l\). This module can be formulated as,

\[f_{\mathrm{CCA}}(\bm{e}_{\mathrm{ctr}}^{l_{i}},\bm{e}_{\mathrm{ntr}}^{l_{i}} ):=f_{\mathrm{Att}}(\bm{e}_{\mathrm{ctr}}^{l_{i}},\bm{e}_{\mathrm{ntr}}^{l_{i}},\bm{e}_{\mathrm{ntr}}^{l_{i}})\] (16)

\[\bm{e}_{\mathrm{ctr}}^{r_{i}}=f_{\mathrm{CCA}}(\bm{e}_{\mathrm{ctr}}^{l_{i}}, \bm{e}_{\mathrm{ntr}}^{l_{i}})+\bm{e}_{\mathrm{ctr}}^{l_{i}}\] (17)

The Spatial Self-Attention module, abbreviated as SSA, and Temporal Self-Attention module, abbreviated as TSA, are designed to capture the spatial dependencies and temporal dependencies separately in the local intersection, which can be formulated as,

[MISSING_PAGE_FAIL:15]

Baseline Methods

In this section, we make a brief introduction to baseline approaches and the Store-and-forward method (SFM).

Baseline approaches.We adopt six baseline approaches in experiments as follows:

* **BC** is a type of imitation learning, where the agent learns to mimic the behavior of an expert demonstration. The agent is trained on a dataset of state-action pairs from the expert, and the goal is to learn a policy that can replicate the expert's actions given the same states.
* **CQL** is an RL algorithm that aims to learn a conservative Q-function, which provides a lower bound on the true Q-values. This helps to address the issue of overestimation of Q-values, which can lead to poor performance in practice.
* **TD3+BC** combines the TD3 algorithm with behavioral cloning. By incorporating BC into TD3, the agent can leverage expert demonstrations to accelerate learning and improve sample efficiency. TD3+BC offers the benefits of both TD3's stability and BC's ability to learn from expert demonstrations.
* **DT** is a sequence-to-sequence model that casts reinforcement learning as a sequence modeling problem. It takes as input a sequence of past states, actions, and rewards, and it outputs a sequence of future actions that maximize the expected cumulative reward. We build DT based on the code https://github.com/kzl/decision-transformer/.
* **Diffuser** is a diffusion-based approach for decision-making. Diffuser focuses on generating sequences of actions that lead to desirable outcomes by iteratively refining these sequences. We build Diffuser based on the code https://github.com/jannem/diffuser.
* **DD** is a diffusion-based approach for decision-making. DD diffuses over state trajectories and planning with an inverse dynamics model. We build DD based on the code https://github.com/anuragajay/decision-diffuser.

To avoid non-convergence caused by missing data, we train baselines on datasets without missing data and test them under data-missing scenarios with observations and rewards imputed by SFM.

Store-and-forward method.Since baselines cannot handle the data-missing scenarios, we adopt a rule-based SFM to impute observations and rewards for baselines. It is proved that SFM has more stable performance compared to learning neural networks [14]. In this paper, we model current observation as: \(f(\mathcal{V}_{t-1},k)=\text{Concat}(\cup_{l_{i}}f^{\prime}(l_{i},k))\) and \(f^{\prime}(l_{i},k)=\frac{1}{k}\sum_{l_{j}}\partial_{l_{i}-1}^{l_{j}}\), where \(\mathcal{V}_{t-1}^{k}\) is the intersection at time \(t\), \(l_{i}\in\mathcal{V}_{t-1}^{k}\) is a lane and \(l_{j}\) is the \(k\)'s neighboring lane connected by traffic movements. We set \(k\) as 12 in this paper.

## Appendix E Proof of Partial Rewards Conditioned Diffusion

To prove that the aim of partial rewards conditioned diffusion is the same as the goal in Equation 3, we assume that the observable part of the trajectory and the missing part of the trajectory are collected by real sensors and virtual sensors separately, and the distribution of traffic data collected by two kinds of sensors are independent. Thus, the distribution in Equation 3 can be factorized as follows,

\[\begin{split} p(x^{0}(\bm{\tau})|y(\bm{\tau}))&=p (x^{0}(\bm{\tau}_{\text{obs}}),x^{0}(\bm{\tau}_{\text{mis}})|y(\bm{\tau}))\\ &=p(x^{0}(\bm{\tau}_{\text{obs}})|y(\bm{\tau}))\cdot p(x^{0}(\bm {\tau}_{\text{mis}})|y(\bm{\tau}))\\ &=p(x^{0}(\bm{\tau}_{\text{obs}})|r(\bm{\tau}),y^{\prime}(\bm{ \tau}))\cdot p(x^{0}(\bm{\tau}_{\text{mis}})|r(\bm{\tau}),y^{\prime}(\bm{\tau}) )\\ &=p(x^{0}(\bm{\tau}_{\text{obs}})|r(\bm{\tau}),y^{\prime}(\bm{ \tau}))\cdot p(x^{0}(\bm{\tau}_{\text{mis}})|y^{\prime}(\bm{\tau}))\end{split}\] (20)

The distribution without rewards condition \(p(x^{0}(\bm{\tau})|y^{\prime}(\bm{\tau}))\) can be regarded as the marginal distribution of that with rewards condition \(p(x^{0}(\bm{\tau})|y(\bm{\tau}))=p(x^{0}(\bm{\tau})|r(\bm{\tau}),y^{\prime}( \bm{\tau}))\),

\[p(x^{0}(\bm{\tau})|y^{\prime}(\bm{\tau}))=\int p(r(\bm{\tau}))p(x^{0}(\bm{ \tau})|r(\bm{\tau}),y^{\prime}(\bm{\tau}))dr(\bm{\tau})\] (21)

In this case, we can adopt the same diffusion model with classifier-free guidance to model \(p_{\theta}(x^{0}(\bm{\tau}_{\text{obs}})|r(\bm{\tau}),y^{\prime}(\bm{\tau}))\) and \(p_{\theta}(x^{0}(\bm{\tau}_{\text{mis}})|y^{\prime}(\bm{\tau}))\).

Additional Experiments Results

### Performance without Missing Data

We train and test our method on all five datasets and compare our method with all baselines under no data-missing scenarios. DiffLight performs the best on over half of the datasets. Meanwhile, DD demonstrates a better performance than Diffuser, which shows that diffusing only on observations is a better choice in TSC.

### Influence of Unobserved Locations

In previous experiments, the unobserved intersections in kriging missing are not adjacent. In this section, we study the influence of unobserved locations. We provide another mask of \(\mathcal{D}^{1}_{\text{HZ}}\) with a missing rate of 25% in kriging missing, which contains a missing intersection where all neighboring intersections are missing. The performance of this experiment is shown in Table 6. DiffLight still demonstrates the best performance.

### Limit of Missing Rates

To further explore limits on missing proportions, we conduct experiments on the selected datasets in random missing with missing rates of 70% and 90%. In the experiment, DiffLight remains an acceptable performance at the missing rate of 70%. When the missing rate rises to 90%, the performance of DiffLight drops rapidly, which shows that the limit for the missing rate is around 70%.

### Scalability of DiffLight

To further evaluate the efficacy and validate the performance of our approach, we conduct experiments on the New York dataset, which includes 48 intersections. In the experiment on the New York dataset, DiffLight achieves the best performance in most scenarios, demonstrating its ability to deal with complex traffic scenarios and control traffic signals in a larger-scale traffic network. In contrast, the performance of most baselines drops rapidly, due to the cumulative effect of errors in state imputation and decision-making at more intersections.

\begin{table}
\begin{tabular}{l|c c c c c c c} \hline \hline
**Dataset** & **BC** & **CQL** & **TD3+BC** & **DT** & **Diffuser** & **DD** & **DiffLight** \\ \hline \(\mathcal{D}^{1}_{\text{HZ}}\) w/ neighbors & 354.86 & 328.83 & 341.89 & 381.94 & 328.79 & 836.46 & **302.16**\(\pm\)1.23 \\ \(\mathcal{D}^{1}_{\text{HZ}}\) w/o neighbors & 398.77 & 361.11 & 447.79 & 427.62 & 465.61 & 745.85 & **344.02**\(\pm\)8.72 \\ \hline \hline \end{tabular}
\end{table}
Table 6: Performance in different unobserved locations.

\begin{table}
\begin{tabular}{c|c c c c c c c} \hline \hline
**Dataset** & **RM(70\%)** & **RM(90\%)** \\ \hline \(\mathcal{D}^{1}_{\text{HZ}}\) & 326.29 & 878.31 \\ \(\mathcal{D}^{2}_{\text{HZ}}\) & 343.48 & 430.38 \\ \(\mathcal{D}^{1}_{\text{N}}\) & 310.74 & 437.19 \\ \(\mathcal{D}^{2}_{\text{N}}\) & 295.07 & 587.42 \\ \(\mathcal{D}^{3}_{\text{NN}}\) & 289.01 & 668.41 \\ \hline \hline \end{tabular}
\end{table}
Table 7: Limit of missing rates in random missing.

\begin{table}
\begin{tabular}{c|c c c c c c c} \hline \hline
**Dataset** & **BC** & **CQL** & **TD3+BC** & **DT** & **Diffuser** & **DD** & **DiffLight** \\ \hline \(\mathcal{D}^{1}_{\text{HZ}}\) & 342.26 & 318.42 & 327.19 & 297.46 & 289.64 & 284.79 & **283.92**\(\pm\)0.10 \\ \(\mathcal{D}^{2}_{\text{HZ}}\) & 374.9 & 353.04 & 364.8 & 338.33 & 357.34 & 328.63 & **319.79**\(\pm\)5.13 \\ \(\mathcal{D}^{2}_{\text{NN}}\) & 315.2 & 298.02 & 304.36 & 289.8 & 270.83 & **255.53** & 268.43\(\pm\)1.35 \\ \(\mathcal{D}^{2}_{\text{NN}}\) & 286.66 & 300.64 & 325.53 & 257.59 & 249.74 & 244.11 & **243.56**\(\pm\)0.03 \\ \(\mathcal{D}^{3}_{\text{NN}}\) & 296.05 & 288.42 & 281.59 & 247.71 & 241.44 & **241.34** & 242.31\(\pm\)1.39 \\ \hline \hline \end{tabular}
\end{table}
Table 5: Overall performance in scenarios without missing data.

### Additional Ablation Study on Diffusion Communication Mechanism

We further evaluate the effectiveness of DCM with DiffLight w/ DCM and DiffLight w/o DCM. Table 10 shows the comparison of these variants on Hangzhou\({}_{1}\) and Jinan\({}_{1}\). It should be noted that we adopt another mask of \(\mathcal{D}_{\text{HZ}}^{1}\) used in Appendix F.2, which contains a missing intersection where all neighboring intersections are missing. Based on the results, we can find that DiffLight w/ DCM shows better performance in kriging missing and the performance of DiffLight w/ DCM is close to the performance of DiffLight w/o DCM in random missing. It is proven that DCM sharing generated observations among intersections can promote the performance of TSC with missing data effectively.

### Additional Ablation Study on the Inverse Dynamics

We further evaluate the effectiveness of the inverse dynamics (ID) with DiffLight w/ ID and DiffLight w/o ID. For DiffLight w/o inverse dynamics, we remove the inverse dynamics and extend the dimension of the noise model to generate both observations and actions. Table 11 shows the comparison of these variants on Hangzhou\({}_{1}\) and Jinan\({}_{1}\). Based on the results, we can find that DiffLight w/ inverse dynamics shows better performance in both random missing and kriging missing.

### Time Cost

To effectively demonstrate the usability of DiffLight, we conduct experiments to study the relationship between inference speed and performance in Table 12 and 13. We adopt models trained with 100 steps and test them on

\begin{table}
\begin{tabular}{c c|c c} \hline \hline
**Dataset** & **Pattern and Rate** & **DiffLight w/ DCM** & **DiffLight w/o DCM** \\ \hline \multirow{2}{*}{\(\mathcal{D}_{\text{HZ}}^{1}\)} & RM(50\%) & 304.71\(\pm\)1.26 & **303.13\(\pm\)**2.23 \\  & KM(25\%) & **302.16\(\pm\)**1.23 & 307.14\(\pm\)7.79 \\ \multirow{2}{*}{\(\mathcal{D}_{\text{IN}}^{1}\)} & RM(50\%) & 290.02\(\pm\)1.26 & **289.16\(\pm\)**3.89 \\  & KM(25\%) & **329.67\(\pm\)**16.03 & 351.64\(\pm\)19.53 \\ \hline \(\mathcal{D}_{\text{HZ}}^{1}\) & KM(25\%) w/o neighbors & **344.02\(\pm\)**8.72 & 351.64\(\pm\)2.46 \\ \hline \hline \end{tabular}
\end{table}
Table 10: Ablation study on Diffusion Communication Mechanism.

\begin{table}
\begin{tabular}{c|c c c c c c c c} \hline \hline
**Dataset** & **Rate** & **BC** & **CQL** & **TD3+BC** & **DT** & **Diffuser** & **DD** & **DiffLight** \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{NY}}\)} & 10\% & 187.14 & 200.77 & 349.54 & 394.17 & 209.37 & 185.98 & **182.89** \\  & 30\% & **226.23** & 254.73 & 540.18 & 605.81 & 241.32 & 229.44 & 244.93 \\ \multirow{3}{*}{\(\mathcal{D}_{\text{IN}}^{1}\)} & 50\% & 453.90 & 446.29 & 820.19 & 837.97 & 453.97 & 455.07 & **266.82** \\ \hline \hline \end{tabular}
\end{table}
Table 8: Scalability of DiffLight in random missing.

\begin{table}
\begin{tabular}{c c c c c c c c} \hline \hline
**Dataset** & **Pattern and Rate** & **DiffLight w/ ID** & **DiffLight w/o ID** \\ \hline \multirow{2}{*}{\(\mathcal{D}_{\text{HZ}}^{1}\)} & RM(50\%) & **303.91** & 572.61 \\  & KM(25\%) & **301.08** & 386.92 \\ \multirow{2}{*}{\(\mathcal{D}_{\text{IN}}^{1}\)} & RM(50\%) & **288.01** & 301.21 \\  & KM(25\%) & **334.12** & 395.46 \\ \hline \hline \end{tabular}
\end{table}
Table 11: Ablation study on the inverse dynamics.

\begin{table}
\begin{tabular}{c|c c c c c c c} \hline \hline
**Dataset** & **Rate** & **BC** & **CQL** & **TD3+BC** & **DT** & **Diffuser** & **DD** & **DiffLight** \\ \hline \multirow{3}{*}{\(\mathcal{D}_{\text{NY}}\)} & 6.25\% & 515.40 & 242.15 & 496.41 & 894.76 & 741.99 & 765.64 & **197.22** \\  & 12.50\% & 1304.52 & 470.69 & 859.98 & 930.78 & 951.49 & 1213.08 & **315.05** \\ \multirow{3}{*}{\(\mathcal{D}_{\text{HZ}}^{1}\)} & 18.75\% & 1360.71 & 1154.71 & 989.99 & 1197.74 & 1034.02 & 929.25 & **350.66** \\ \multirow{3}{*}{\(\mathcal{D}_{\text{HZ}}^{1}\)} & 25.00\% & 1442.31 & 1089.39 & 1108.67 & 1445.37 & 846.18 & 1393.23 & **454.56** \\ \hline \hline \end{tabular}
\end{table}
Table 9: Scalability of DiffLight in kriging missing.

[MISSING_PAGE_FAIL:19]

DiffLight achieves competitive performance compared with CQL (transferred) and CQL (model-based). The possible reason why DiffLight has better performance is that CQL (model-based) suffers from error accumulation caused by the reward imputation model while DiffLight can directly make decisions with Partial Rewards Conditioned Diffusion (PRCD).

\begin{table}
\begin{tabular}{c c|c c c} \hline \hline
**Dataset** & **Rate** & **CQL** & **CQL (model-based)** & **DiffLight** \\ \hline  & 6.25\% & 317.69 & 389.66 & **291.80** \\ \(\mathcal{D}^{1}_{\text{HZ}}\) & 12.50\% & 317.94 & 397.13 & **297.18** \\  & 18.75\% & 319.18 & 449.80 & **299.96** \\  & 25.00\% & 328.83 & 463.25 & **301.08** \\  & 8.33\% & 302.35 & 374.20 & **280.83** \\ \(\mathcal{D}^{1}_{\text{IN}}\) & 16.67\% & 343.16 & 347.88 & **295.53** \\  & 25.00\% & 398.66 & 400.55 & **334.12** \\ \hline \hline \end{tabular}
\end{table}
Table 15: Performance of CQL (model-based) in kriging missing.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: See Abstract and Section 1. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: See Appendix 6. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes] Justification: See Appendix E. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems.

* The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.
* Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.
* Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: See Section 4.1, Appendix B and Appendix C. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: We have submitted our data and code on: https://github.com/look15579/DiffLight-release Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.

* The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.
* The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.
* At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).
* Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: See Section 4.1 and Appendix B. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: See Section 4 and Appendix F. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) * The assumptions made should be given (e.g., Normally distributed errors). * It should be clear whether the error bar is the standard deviation or the standard error of the mean. * It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified. * For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates). * If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: See Appendix B.1 and Appendix F.7. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.

* The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: We ensured that the study complied with the NeurIPS Code of Ethics in all respects. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: See Appendix A. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations. * The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster. * The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. * If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: The paper does not suffer from this risk. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.

1. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [NA] Justification: The paper does not use existing assets. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset. * For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. * If this information is not available online, the authors are encouraged to reach out to the asset's creators.
13. **New Assets** Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: The paper does not release new assets. Guidelines: * The answer NA means that the paper does not release new assets. * Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc. * The paper should discuss whether and how consent was obtained from people whose asset is used. * At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
14. **Crowdsourcing and Research with Human Subjects** Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: * The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. * Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper. * According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
15. **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects** Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.