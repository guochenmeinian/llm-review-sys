# Optimal Batched Best Arm Identification

 Tianyuan Jin\({}^{1}\), Yu Yang\({}^{3}\), Jing Tang\({}^{2}\), Xiaokui Xiao\({}^{1}\), Pan Xu\({}^{3}\)

\({}^{1}\)National University of Singapore

\({}^{2}\)The Hong Kong University of Science and Technology (Guangzhou)

\({}^{3}\)Duke University

{tianyuan,kkxiao}@nus.edu.sg,jingtang@ust.hk, {yu.yang,pan.xu}@duke.edu

###### Abstract

We study the batched best arm identification (BBAI) problem, where the learner's goal is to identify the best arm while switching the policy as less as possible. In particular, we aim to find the best arm with probability \(1-\delta\) for some small constant \(\delta>0\) while minimizing both the sample complexity (total number of arm pulls) and the batch complexity (total number of batches). We propose the three-batch best arm identification (Tri-BBAI) algorithm, which is the first batched algorithm that achieves the optimal sample complexity in the asymptotic setting (i.e., \(\delta\to 0\)) and runs in \(3\) batches in expectation. Based on Tri-BBAI, we further propose the almost optimal batched best arm identification (Opt-BBAI) algorithm, which is the first algorithm that achieves the near-optimal sample and batch complexity in the non-asymptotic setting (i.e., \(\delta\) is finite), while enjoying the same batch and sample complexity as Tri-BBAI when \(\delta\) tends to zero. Moreover, in the non-asymptotic setting, the complexity of previous batch algorithms is usually conditioned on the event that the best arm is returned (with a probability of at least \(1-\delta\)), which is potentially unbounded in cases where a sub-optimal arm is returned. In contrast, the complexity of Opt-BBAI does not rely on such an event. This is achieved through a novel procedure that we design for checking whether the best arm is eliminated, which is of independent interest.

## 1 Introduction

Multi-armed bandit (MAB) is a fundamental model in various online decision-making problems, including medical trials [40], online advertisement [5], and crowdsourcing [43]. These problems typically involve a bandit with multiple arms, where each arm follows an unknown distribution with a mean value. At each time step, the learner selects an arm, and receives a reward sample drawn from the chosen arm's distribution. Best arm identification (BAI) aims to identify the arm with the highest mean reward, which can be approached with a fixed budget or a fixed confidence level [14; 4; 19].

In this paper, we assume that there is a unique best arm and study BAI with fixed confidence. Specifically, we consider a set \([n]=\{1,2,\ldots,n\}\) of \(n\) arms, where each arm \(i\) is associated with a reward distribution having a mean value \(\mu_{i}\). Without loss of generality, for a bandit instance denoted by \(\boldsymbol{\mu}=\{\mu_{1},\mu_{2},\ldots,\mu_{n}\}\), we assume that \(\mu_{1}>\mu_{2}\geq\cdots\geq\mu_{n}\). At each time step \(t\), the learner selects an arm and observes a sample drawn independently from the chosen arm's distribution. In the fixed confidence setting, the learner aims to correctly identify the best arm (arm \(1\) in our context) with a probability of at least \(1-\delta\), where \(\delta>0\) is a pre-specified confidence parameter. Meanwhile, the learner seeks to minimize the total number of arm pulls, also known as the sample complexity.

Denote by \(a^{*}(\boldsymbol{\lambda})=\operatorname*{arg\,max}_{i}\lambda_{i}\) the best arm for an arbitrary bandit instance \(\boldsymbol{\lambda}\). Let \(\operatorname{Alt}(\boldsymbol{\mu})=\{\boldsymbol{\lambda}\colon a^{*}( \boldsymbol{\lambda})\neq 1\}\) be a set of models that have a different best arm from the model \(\boldsymbol{\mu}\), and \(\mathcal{P}_{k}=\{\boldsymbol{w}\in\mathbb{R}_{+}^{n}\colon\sum_{i=1}^{n}w_{i }=1\}\) be the probability simplex. Garivier and Kaufmann [17] showed that for bandits with reward distributions that are continuously parameterized by their means, the number \(N_{\delta}\) of pullsby any algorithm that returns the best arm with a probability of at least \(1-\delta\) is bounded by

\[\liminf_{\delta\to 0}\frac{\mathbb{E}_{\bm{\mu}}[N_{\delta}]}{\log(1/\delta)} \geq T^{*}(\bm{\mu}),\] (1.1)

where \(T^{*}(\bm{\mu})\) is defined according to

\[T^{*}(\bm{\mu})^{-1}:=\sup_{\bm{w}\in\mathcal{P}_{k}}\left(\inf_{\bm{\lambda} \in\operatorname{Alt}(\bm{\mu})}\left(\sum_{i=1}^{n}w_{i}\cdot d(\mu_{i}, \lambda_{i})\right)\right),\] (1.2)

and \(d(\mu_{i},\lambda_{i})\) is the Kullback-Leibler (KL) divergence of two arms' distributions with means \(\mu_{i}\) and \(\lambda_{i}\), respectively. We say that an algorithm achieves the asymptotically optimal sample complexity if it satisfies

\[\limsup_{\delta\to 0}\frac{\mathbb{E}_{\bm{\mu}}[N_{\delta}]}{\log(1/\delta)} \leq T^{*}(\bm{\mu}).\] (1.3)

The well-known Track-and-Stop algorithm [17] solves the BAI problem with asymptotically optimal sample complexity. However, it is a fully sequential algorithm, which is hard to be implemented in parallel. The learner in such an algorithm receives immediate feedback for each arm pull, and adjusts the strategy for the next arm selection based on the previous observations. Unfortunately, this sequential approach may not be feasible in many real-world applications. For instance, in medical trials, there is typically a waiting time before the efficacy of drugs becomes observable, making it impossible to conduct all tests sequentially. Instead, the learner needs to group the drugs into batches and test them in parallel. Similarly, in crowdsourcing, the goal is to identify the most reliable worker for a specific task by testing candidates with a sequence of questions. Again, there is often a waiting time for workers to finish all the questions, necessitating the grouping of workers into batches and conducting parallel tests. In such scenarios, the results of pulling arms are only available at the end of each batch [22, 1, 39, 37, 15, 24, 25, 38].

Motivated by these applications, we study the problem of batched best arm identification (BBAI). In BBAI, we are allowed to pull multiple arms in a single batch, but the results of these pulls are revealed only after the completion of the batch. The objective is to output the best arm with a high probability of at least \(1-\delta\), while minimizing both the sample complexity (total number of pulls) and the batch complexity (total number of batches). This leads to the following natural question:

_Can we solve the BBAI problem with an asymptotically optimal sample complexity_

_and only using a constant number of batches?_

Furthermore, the aforementioned results hold only in the limit as the confidence parameter \(\delta\) approaches zero, which may provide limited practical guidance since we often specify a fixed confidence level parameter \(\delta>0\). To address this, some algorithms [31, 21] have been proposed to solve the BAI problem with finite confidence. Specifically, for some universal constant \(C\), these algorithms satisfy that with probability \(1-\delta\),

\[\mathbb{E}[N_{\delta}]\leq O\biggl{(}\sum_{i>1}\frac{1}{\Delta_{i}^{2}}\log \log\Delta_{i}^{-1}\biggr{)}\] (1.4)

where \(\Delta_{i}=\mu_{1}-\mu_{i}\). In addition, Jamieson et al. [21] demonstrated that for two-armed bandits, the term \(\frac{\log\log\Delta_{i}^{-1}}{\Delta_{2}^{2}}\) is optimal as \(\Delta_{2}\to 0\), where \(\Delta_{2}\) is assumed to be the gap between the best arm and the second best arm. In the context of the batched setting, Jin et al. [22] proposed an algorithm that achieves the sample complexity in (1.4) within \(\mathcal{O}(\log^{*}(n)\cdot\log(1/\Delta_{2}))\) batches, where \(\log^{*}(n)\) is the iterated logarithm function1. Furthermore, Tao et al. [39] proved that for certain bandit instances, any algorithm that achieves the sample complexity bound shown in (1.4) requires at least \(\Omega\bigl{(}\frac{\log\Delta_{2}^{-1}}{\log\log\Delta_{2}^{-1}}\bigr{)}\) batches. It should be noted that the batched lower bound proposed by Tao et al. [39] assumes \(\delta\) as a constant, making it inapplicable in the asymptotic setting. Therefore, an additional question that arises is:

Footnote 1: Specifically, \(\log^{*}(n)\) denotes the number of times the function \(\log(\cdot)\) needs to be applied to \(n\) until the result is less than \(1\).

_Can we achieve the optimal sample complexity in (1.3) and (1.4) adaptively, taking into account the specified confidence level parameter \(\delta\), while minimizing the number of batches?_In this work, we provide positive answers to both of the aforementioned questions. Specifically, the **main contributions** of our paper can be summarized as follows:

* We propose Tri-BBAI (Algorithm 1) that returns the best arm with a probability of at least \(1-\delta\) by pulling all arms for a total number of at most \(T^{*}(\boldsymbol{\mu})\log(1/\delta)\) times when \(\delta\to 0\). Tri-BBAI employs three batches in expectation when \(\delta\to 0\). Therefore, Tri-BBAI achieves the optimal sample within constant batches. As a comparison, Track-and-Stop [17] also achieves the optimal sample complexity but requires solving the right-hand side of (1.2) after each arm pull, resulting in a batch complexity of the same order as the sample complexity, which is a significant computational overhead in practice.
* Built upon Tri-BBAI, we further propose Opt-BBAI (Algorithm 2) that runs in \(\mathcal{O}(\log(1/\Delta_{2}))\) expected batches and pulls at most \(\mathcal{O}\big{(}\sum_{i>1}\Delta_{i}^{-2}\log(n\log\Delta_{i}^{-1})\big{)}\) expected number of arms for finite confidence \(\delta\). It is also important to note that Opt-BBAI achieves the same sample and expected batch complexity as Tri-BBAI asymptotically when \(\delta\to 0\). Moreover, for the finite confidence case, this sample complexity matches (1.4) within a \(\log(\cdot)\) factor and matches the optimal batched complexity within a \(\log\log(\cdot)\) factor. To the best of our knowledge, Opt-BBAI is the first batched bandit algorithm that can achieve the optimal asymptotic sample complexity and the near-optimal non-asymptotic2 sample complexity adaptively based on the assumption on \(\delta\). Footnote 2: Non-asymptotic here refers to finite confidence. In this paper, we use names non-asymptotic and finite confidence interchangeably.
* Notably, in the non-asymptotic setting, the complexity of earlier batch algorithms [22, 32, 39, 24] typically depends on the event of returning the best arm, which occurs with a probability of at least \(1-\delta\). However, this complexity could potentially become unbounded if a sub-optimal arm is returned instead. Unlike these algorithms, the complexity of Opt-BBAI is not contingent on such an event. This is made by employing an innovative procedure to verify if the best arm is eliminated, a method that holds its independent interest. To the best of our knowledge, Opt-BBAI is the first algorithm that achieves the optimal asymptotic sample complexity while providing the optimal non-asymptotic sample complexity within logarithm factors.
* We also conduct numerical experiments3 to compare our proposed algorithms with the optimal sequential algorithm Track-and-Stop [17], and the batched algorithm Top-k \(\delta\)-Elimination [22] on various problem instances. The results indicate that our algorithm significantly outperforms the Track and Stop method in terms of batch complexity, while its sample complexity is not much worse than that of Track and Stop. Additionally, our algorithm demonstrates a notable improvement in sample complexity compared to [22], while exhibiting similar batch complexity. Footnote 3: Due to the space limit, we put the experimental results in Appendix E.

For ease of reference, we compare our results with existing work on batched bandits in Table 1.

\begin{table}
\begin{tabular}{c c c c c} \hline \hline \multirow{2}{*}{Algorithm} & \multicolumn{2}{c}{Asymptotic behavior (\(\delta\to 0\))} & \multicolumn{2}{c}{Finite-confidence behavior} \\ \cline{2-5}  & Sample complexity & Batch complexity & Sample complexity & Batch complexity \\ \hline Karnin et al. [31] & Not optimal & \(\mathcal{O}(\log n\cdot\log\frac{n}{\Delta_{1}})\) & \(\mathcal{O}\left(\sum_{i>1}\frac{\log(\Delta_{i}^{-1})}{\Delta_{1}^{2}}\right)\) & \(\mathcal{O}(\log n\cdot\log\frac{n}{\Delta_{2}})\) \\ Jin et al. [22] & Not optimal & \(\mathcal{O}(\log\frac{1}{\Delta_{2}})\) & \(\mathcal{O}\left(\sum_{i>1}\frac{\log(\Delta_{i}^{-1})}{\Delta_{1}^{2}}\right)\) & \(\mathcal{O}(\log^{\gamma}(n)\cdot\log\frac{1}{\Delta_{2}})\) \\ Wang et al. [42] & Optimal & \(O(\sqrt{\log(1/\delta)})\) & \(O(nH(\boldsymbol{\mu})^{1/w}_{\min})\) & - \\ Agrawal et al. [2] & Optimal & \(\frac{T^{*}(\boldsymbol{\mu})\log^{\delta}}{m}\) (\(m=o(\log\delta^{-1})\)) & \(-\) & \(-\) \\ Karpov et al. [32] & – & – & \(\mathcal{O}(\sum_{i>1}\frac{\log(n\log\Delta_{i}^{-1})}{\Delta_{1}^{2}})\) & \(\mathcal{O}(\log\frac{1}{\Delta_{2}})\) \\ Lower bound [39] & – & – & \(\mathcal{O}\left(\sum_{i>1}\frac{\log(n\log\Delta_{i}^{-1})}{\Delta_{1}^{2}}\right)\) & \(\Omega(\log(1/\Delta_{2}))\) \\
**Tri-BBAI** (Our Algorithm 1) & Optimal & 3 & \(-\) & \(-\) \\
**Opt-BBAI** (Our Algorithm 2) & Optimal & 3 & \(\mathcal{O}(\sum_{i>1}\frac{\log(n\log\Delta_{i}^{-1})}{\Delta_{1}^{2}})\) & \(\mathcal{O}(\log\frac{1}{\Delta_{2}})\) \\ \hline \hline \end{tabular}
\end{table}
Table 1: Comparison of sample and batch complexity of different algorithms. In the asymptotic setting (i.e., \(\delta\to 0\)), the sample complexity of an algorithm is optimal if it satisfies the definition in (1.3). The field marked with “–” indicates that the result is not provided. The sample complexity presented for [31, 22] is conditioned on the event that the algorithm returns the best arm, which can be unbounded when it returns a sub-optimal arm with certain (non-zero) probability (see Remark 4.4 for more details). In contrast, the sample complexity presented for [17, 26] and our algorithms is the total expected number of pulls that will be executed.

## 2 Related Work

The BAI problem with fixed confidence is first studied for \([0,1]\) bounded rewards by Even-Dar et al. [14]. The sample complexity of their algorithm scales with the sum of the squared inverse gap, i.e., \(H(\bm{\mu})=\sum_{i>1}1/\Delta_{i}^{2}\). Garivier and Kaufmann [17] showed that \(H(\bm{\mu})<T^{*}(\bm{\mu})\leq 2H(\bm{\mu})\) with \(T^{*}(\bm{\mu})\) defined in (1.2) and proposed the Track-and-Stop algorithm, which is the first one in the literature proved to be asymptotically optimal. Later, Degenne et al. [12] viewed \(T^{*}(\bm{\mu})\) as a min-max game and provided an efficient algorithm to solve it. Jourdan et al. [27] studied the asymptotically optimal sample complexity for any reward distributions with bounded support. Degenne et al. [13] studied pure exploration in linear bandits. Their proposed algorithm proved to be both asymptotically optimal and empirically efficient.

There are also many studies [30; 10; 8; 21; 31] that focus on providing non-asymptotic optimal sample complexity. The best non-asymptotic sample complexity was achieved by Chen et al. [10], which replaces the term \(\log\log\Delta_{i}^{-1}\) in (1.4) with a much smaller term. Furthermore, when we allow a loss \(\epsilon\) of the quality of the returned arm, the problem is known as \((\epsilon,\delta)\)-PAC BAI, for which various algorithms [29; 14; 6; 9] are proposed, achieving the worst-case optimal sample complexity.

There are a few attempts to achieve both the asymptotic and non-asymptotic optimal sample complexity. Degenne et al. [12] provided a non-asymptotic sample complexity \(\hat{O}\big{(}nT^{*}(\bm{\mu})^{2}\big{)}\), which could be \(nT^{*}(\bm{\mu})\) larger than the optimal sample complexity. Recently, Jourdan and Degenne [26] managed to achieve a sample complexity that is \(\beta\)-asymptotically optimal (with \(w_{1}\) fixed at \(1/\beta\) in (1.2)), rendering it asymptotically optimal up to a factor of \(1/\beta\). Meanwhile, they also reached a non-asymptotic sample complexity of \(\mathcal{O}\big{(}(H(\bm{\mu})\cdot\log H(\bm{\mu}))^{\alpha}\big{)}\)4 for some \(\alpha>1\), where \(H(\bm{\mu})=\sum_{i>1}1/\Delta_{i}^{2}\). Wang et al. [42] explored both asymptotic and non-asymptotic sample complexities. Their algorithm achieves asymptotic optimality and shows a non-asymptotic sample complexity of \(O(nH(\bm{\mu})^{4}/w_{\min}^{2})\). However, this non-asymptotic sample complexity is \(nH(\bm{\mu})^{3}/w_{\min}^{2}\) away from being optimal. Jourdan et al. [28] studied \((\epsilon,\delta)\)-PAC BAI, proposing an asymptotically optimal algorithm and providing non-asymptotic sample complexity. When \(\epsilon=0\), it aligns with our setting, our non-asymptotic sample complexity is better scaled. Specifically, Jourdan et al. [28] offered a non-asymptotic sample complexity scale of \(n/\Delta_{2}^{2}\log(1/\Delta_{2})\), whereas ours is more instance-sensitive, as our sample complexity is related to all gaps, not just \(\Delta_{2}\). Additionally, Jourdan et al. [28] considered a practical scenario where the algorithm can return a result at any time while still ensuring a good guarantee on the returned arm. For ease of reference, we summarize the sample complexity of different algorithms in Table 2. As shown in Table 2, our algorithm is the only one that achieves both the asymptotic optimality and non-asymptotic optimality within logarithm factors.

Footnote 4: To derive the near-optimal non-asymptotic sample complexity, \(\alpha\) should be \(1\). However, As explained in their original paper, the algorithm will be sub-optimal if we set \(\alpha\) close to \(1\).

Another line of research [31; 4; 7] investigated BAI with a fixed budget, where the objective is to determine the best arm with the highest probability within \(T\) pulls. Audibert et al. [4] and Karnin et al. [31] offered finite-time bounds for this problem, while Carpentier and Locatelli [7] presented a tight lower bound, demonstrating that such finite-time bounds[4; 31] are optimal for certain bandit

\begin{table}
\begin{tabular}{l c c} \hline \hline Algorithm & Asymptotic behavior (\(\delta\to 0\)) & Finite-confidence behavior \\ \hline Kalyanakrishnan et al. [30] & \(O(H(\bm{\mu})\log(1/\delta))\) & \(O(H(\bm{\mu})\log(H(\bm{\mu})))\) \\ Karnin et al. [31] & \(O(H(\bm{\mu})\log(1/\delta))\) & \(\mathcal{O}\left(\sum_{i>1}\frac{\log(\log\Delta_{i}^{-1})}{\Delta_{i}^{2}}\right)\) \\ Garivier and Kaufmann [17] & \(T^{*}(\bm{\mu})\log(1/\delta)\)+\(o(1/\delta)\) & - \\ Jamieson et al. [21] & \(O(H(\bm{\mu})\log(1/\delta))\) & \(\mathcal{O}\left(\sum_{i>1}\frac{\log(\log\Delta_{i}^{-1})}{\Delta_{i}^{2}}\right)\) \\ Jourdan and Degenne [26] & \(T^{*}_{\beta}(\bm{\mu})\log(1/\delta)\)+\(o(1/\delta)\) & \(\mathcal{O}\left((H(\bm{\mu})\log H(\bm{\mu}))^{\alpha}\right)\), \(\alpha>1\) \\ Degenne et al. [12] & \(T^{*}(\bm{\mu})\log(1/\delta)\)+\(o(1/\delta)\) & \(\hat{O}(nT^{*}(\bm{\mu})^{2})\) \\ Katz-Samuels et al. [33] & \(O(T^{*}(\bm{\mu})\log(1/\delta))\) & \(O(H(\bm{\mu})\log(n/\Delta_{\min}))\) \\ Wang et al. [42] & \(T^{*}(\bm{\mu})\log(1/\delta)\)+\(o(1/\delta)\) & \(O(nH(\bm{\mu})^{4}/w_{\min}^{2})\) \\
**Opt-BBAI** (Our Algorithm 2) & \(T^{*}(\bm{\mu})\log(1/\delta)\)+\(o(1/\delta)\) & \(\mathcal{O}\left(\sum_{i>1}\frac{\log(n\log\Delta_{i}^{-1})}{\Delta_{i}^{2}}\right)\) \\ \hline \hline \end{tabular}
\end{table}
Table 2: Comparison of sample complexity of different algorithms.

instances. However, the asymptotic optimality for this problem remains unknown. Interested readers are referred to recent advancements[11; 35] in the asymptotic results of BAI with a fixed budget.

In addition, some recent works [1; 22; 39; 32] also focused on batched BAI in non-asymptotic setting. Agarwal et al. [1] studied the batched BAI problem under the assumption that \(\Delta_{2}\) is known. They proposed an algorithm that has the worst-case optimal sample complexity of \(\mathcal{O}\big{(}n\Delta_{2}^{-2}\big{)}\) and runs in \(\log^{*}(n)\) batches. Later, Jin et al. [22] provided the algorithms that achieves the sample complexity given in (1.4) within \(\tilde{\mathcal{O}}(\log(1/\Delta_{2}))\) batches, where \(\tilde{O}\) hides the \(\log\log(\cdot)\) factors. Tao et al. [39] studied the BAI problem in the general collaborative setting and showed that no algorithm can achieve (1.4) with \(o((\log\Delta_{2}^{-1})/\log\log\Delta_{2}^{-1})\) batches. Karpov et al. [32] further proposed an algorithm which has the sample complexity \(\sum_{i>1}\frac{\log(n\log\Delta^{-1})}{\Delta_{i}^{2}}\) and the batch complexity \(O(\log(1/\Delta_{2}))\). We note that the lower bound of batch complexity given by Tao et al. [39] can only be applied to a constant \(\delta\). In other words, the lower bound of complexity for the asymptotic setting remains unknown. Agrawal et al. [2] studied the optimal batch size for keeping the asymptotic optimality. They showed an algorithm with batch size \(m=o(\log(1/\delta))\) achieves the asymptotic optimality. The batch complexity of the algorithm is \(O(T^{*}(\bm{\mu})\log(1/\delta)/m)\). Wang et al. [42] provided an algorithm that uses \(O(\sqrt{\log\delta^{-1}})\) batches and retains asymptotic optimality for linear bandits. However, for the asymptotic setting, such batch size is still too large as it grows to infinity as \(\delta\) decreases to 0.

## 3 Achieving Asymptotic Optimality with at Most Three Batches

### Reward Distribution

We assume the reward distributions belong to a known one-parameter exponential family that is commonly considered in the literature [17; 16; 36]. In particular, the measure \(\nu_{\theta}\) of such probability distributions with respect the model parameter \(\theta\) satisfies \(\frac{\mathrm{d}\nu_{\theta}}{\mathrm{d}\rho}(x)=\exp(x\theta-b(\theta))\), for some measure \(\rho\) and \(b(\theta)=\log(\int e^{x\theta}\mathrm{d}\rho(x))\). For one-parameter exponential distributions, it is known that \(b^{\prime}(\theta)=\mathbb{E}[\nu_{\theta}]\) and the mapping \(b^{\prime}(\theta)\mapsto\theta\) is one-to-one. Moreover, given any two mean values \(\mu\) and \(\mu^{\prime}\), we define \(d(\mu,\mu^{\prime})\) to be the Kullback-Leibler divergence between two distributions with mean values \(\mu\) and \(\mu^{\prime}\).

### The Proposed Three-Batch Algorithm

Algorithm 1 shows the pseudo-code of our proposed Tri-BBAI algorithm. In particular, Tri-BBAI has four stages. In what follows, we elaborate on the details of each stage.

Stage I: Initial exploration.In this stage, we pull each arm for \(L_{1}\) times. Denote by \(i^{*}(t)\) the arm with the largest empirical mean at time \(t\) (i.e., after we pull all arms for a total number of \(t\) times), i.e., \(i^{*}(t)=\max_{i\in[n]}\hat{\mu}_{i}(t)\). Let \(\tau_{0}=nL_{1}\). Fix \(t=\tau_{q-1}\geq\tau_{0}\), we let \(b_{i}^{q}=\hat{\mu}_{i}(t)+\epsilon\) for \(i\neq i^{*}(t)\) and \(b_{i}^{q}=\hat{\mu}_{i}(t)-\epsilon\) for \(i=i^{*}(t)\). Let \(\bm{w}^{*}(\bm{\mu})=\arg\max_{\bm{w}\in\mathcal{P}_{\mathcal{H}}}\inf_{ \bm{\lambda}\in\mathrm{Alt}(\bm{\mu})}\big{(}\sum_{i=1}^{n}w_{i}\cdot d(\mu_{i },\lambda_{i})\big{)}\). Then, for aforementioned \(\bm{b}^{q}=\{b_{1}^{q},b_{2}^{q},\ldots,b_{n}^{q}\}\), we calculate \(\bm{w}^{*}(\bm{b}^{q})\) according to Lemma A.1 and \(T^{*}(\bm{b}^{q})\) according to Lemma A.2. We note that arm 1 is assumed to be the arm with the highest mean in these two lemmas. However, in the context of \(\bm{b}^{q}\), the index of \(i^{*}(t)\) might be different. To align with the standard practice, we can rearrange the indices of the arms in \(\bm{b}^{q}\) so that \(i^{*}(t)\) corresponds to index 1.

Purpose.To achieve the asymptotic optimality, we attempt to pull each arm \(i\) for around \(w_{i}^{*}(\bm{\mu})T^{*}(\bm{\mu})\) times. We can show that with a high probability, \(w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\) is close to \(w_{i}^{*}(\bm{\mu})T^{*}(\bm{\mu})\), which implies that pulling arm \(i\) for a number of times proportional to \(w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\) is likely to ensure the asymptotic optimal sample complexity.

Stage II: Exploration using \(\bm{w}^{*}(\bm{b}^{q})\) and \(T^{*}(\bm{b}^{q})\).Stage II operates in batches with the maximum number of batches determined by \(\log(1/\delta)\). At batch \(q\), each arm \(i\) is pulled \(\max_{p:p\in\mathbb{N},p\in[1,q]}T_{i}^{q}\) times in total. Here

\[T_{i}^{q}:=\min\big{\{}\alpha w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\log\delta^ {-1},L_{2}\big{\}},\] (3.1)

where the definition of \(w_{i}^{*}(\bm{b}^{q})\) and \(T^{*}(\bm{b}^{q})\) could be found in Stage I. We then evaluate the stage switching condition, \(|w_{i}^{*}(\bm{b}^{q})-w_{i}^{*}(\bm{b}^{q-1})|\leq 1/\sqrt{n}\) for all \(i\in[n]\). If this condition is met, we go to the next stage; otherwise, we proceed to the next batch within Stage II.

**Purpose.** Pulling arm \(i\) proportional to \(w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\) provides statistical evidence for the reward distributions without sacrificing sample complexity compared to the optimality per our above discussion. Meanwhile, we also set a threshold \(L_{2}\) to avoid over-exploration due to sampling errors from Stage I.

The rationale for running Stage II in multiple batches is based on empirical considerations. In experiments, \(\delta\) is always finite. Consequently, the error of arm \(i\), \(|\hat{\mu}_{i}(t)-\mu_{i}|\), remains constant since the number of pulls of arms is limited. Given that the stopping rule in Stage III is highly dependent on the error of arm \(i\) and the number of pulls \(T_{i}:=\max_{p:p\in\mathbb{N},p\geq 1}T_{i}^{p}\), there is a constant probability that the stopping rule may not be met, leading to significant sample costs in Stage IV. Adding the condition in Line 15 ensures that \(w^{*}(\bm{b}^{q})\) converges and that the sample size \(T_{i}^{q}\), as defined by \(w^{*}(\bm{b}^{q})\) and \(T^{*}(\bm{b}^{q})\), closely approximates \(\alpha w^{*}(\bm{\mu})T^{*}(\bm{\mu})\log\delta^{-1}\). This alignment significantly increases the probability that the stopping rule will be satisfied in experiments.

Moreover, such modification doesn't hurt any theoretical results. To explain, in our analysis for Tri-BBAI, we demonstrate that as \(\delta\) approaches \(0\), \(w^{*}(\bm{b}^{q})\) will be very close to \(w^{*}(\bm{\mu})\) and the probability that Line 15 is not satisfied could be bounded by \(1/\log^{2}\delta^{-1}\), which means with high probability Stage II costs 2 batches. Besides, \(q\leq\log(1/\delta)\), which implies that even if Line 15 is not satisfied, the number of batches required for Stage II is at most \(\log(1/\delta)\). Therefore, the expected number of batches required for Stage II is 2 as \(\delta\) approaches 0.

Stage III: Statistical test with Chernoff's stopping rule.Denote by \(N_{i}(t)\) the number of pulls of arm \(i\) at time \(t\). For each pair of arms \(i\) and \(j\), define their weighted empirical mean as

\[\hat{\mu}_{ij}(t):=\frac{N_{i}(t)\cdot\hat{\mu}_{i}(t)}{N_{i}(t)+N_{j}(t)}+\frac {N_{j}(t)\cdot\hat{\mu}_{j}(t)}{N_{i}(t)+N_{j}(t)},\] (3.2)

where \(\hat{\mu}_{i}(t)\) and \(\hat{\mu}_{j}(t)\) are the empirical means of arms \(i\) and \(j\) at time \(t\). For \(\hat{\mu}_{i}(t)\geq\hat{\mu}_{j}(t)\), define

\[Z_{ij}(t) :=d(\hat{\mu}_{i}(t),\hat{\mu}_{ij}(t))N_{i}(t)+d(\hat{\mu}_{j}(t),\hat{\mu}_{ij}(t))N_{j}(t),\] (3.3) \[Z_{j}(t) :=Z_{i^{*}(t)j}(t).\]

We test whether Chernoff's stopping condition is met (Line 21). If so, we return the arm with the largest empirical mean, i.e., \(i^{*}(\tau)\), where \(\tau\) is the total number of pulls examined after Stage II.

**Purpose.** The intuition of using Chernoff's stopping rule for the statistical test is two-fold. Firstly, if Chernoff's stopping condition is met, with a probability of at least \(1-\delta/2\), the returned arm \(i^{*}(\tau)\) in Line 22 is the optimal arm (see Lemma B.1). Secondly, when \(\delta\) is sufficiently small, with high probability, Chernoff's stopping condition holds (see Lemma B.4). As a consequence, our algorithm identifies the best arm successfully with a high probability of meeting the requirement.

Stage IV: Re-exploration.If the previous Chernoff's stopping condition is not met, we pull each arm until the total number of pulls of each arm equals \(L_{3}\) taking into account the pulls in the previous stages (Line 24). Finally, the arm with the largest empirical mean is returned (Line 26).

**Purpose.** If Chernoff's stopping condition is not met, \(i^{*}(\tau)\) might not be the optimal arm. In addition, when each arm is pulled for \(L_{3}\) times, we are sufficiently confident that \(i^{*}(t)\) is the best arm. Since the probability of Stage IV happening is very small, its impact on the sample complexity is negligible.

### Theoretical Guarantees of Tri-BBAI

In the following, we present the theoretical results for Algorithm 1.

**Theorem 3.1** (Asymptotic Sample Complexity).: Given any \(\delta>0\), let \(\epsilon=\frac{1}{\log\log(\delta-1)}\), \(L_{1}=\sqrt{\log\delta^{-1}}\), \(L_{2}=\frac{\log\delta^{-1}}{n}\), and \(L_{3}=(\log\delta^{-1})^{2}\). Meanwhile, for any given \(\alpha\in(1,e/2]\), define function \(\beta(t,\delta)\) as \(\beta(t,\delta)=\log(\log(1/\delta)t^{\alpha}/\delta)\).5 Then, for any bandit instance \(\boldsymbol{\mu}\), Algorithm 1 satisfies

Footnote 5: Recent work by Kaufmann and Koolen [34] offers improved deviation inequalities allowing for a smaller selection of \(\beta(t,\delta)\) without sacrificing the asymptotic optimality. However, it remains uncertain whether this refined parameter choice is applicable to our batched bandit problem. For ease of presentation, we use the parameter choice of \(\beta\) in Garivier and Kaufmann [17].

\[\limsup_{\delta\to 0}\frac{\mathbb{E}_{\boldsymbol{\mu}}[N_{\delta}]}{\log(1/ \delta)}\leq\alpha T^{*}(\boldsymbol{\mu}).\]

By letting \(\alpha\) in Theorem 3.1 approach \(1\) (e.g., \(\alpha=1+1/\log\delta^{-1}\)), we obtain the asymptotic optimal sample complexity.

**Theorem 3.2** (Correctness).: Let \(\epsilon\), \(L_{1}\), \(L_{2}\), \(L_{3}\), \(\alpha\), and \(\beta(t,\delta)\) be the same as in Theorem 3.1. Then, for sufficiently small \(\delta>0\), Algorithm 1 satisfies \(\mathbb{P}_{\boldsymbol{\mu}}(i^{*}(N_{\delta})\neq 1)\leq\delta\).

**Theorem 3.3** (Asymptotic Batch Complexity).: Let \(\epsilon\), \(L_{1}\), \(L_{2}\), \(L_{3}\), \(\alpha\), and \(\beta(t,\delta)\) be the same as in Theorem 3.1. For sufficiently small \(\delta>0\), Algorithm 1 runs within \(3+o(1)\) batches in expectation. Besides, Algorithm 1 runs within \(3\) batches with probability \(1-1/\log(1/\delta^{2})\).

To the best of our knowledge, all previous works in the BAI literature [18, 12, 42] that achieve the asymptotic optimal sample complexity require unbounded batches as \(\delta\to 0\). In contrast, Tri-BBAI achieves the asymptotic optimal sample complexity and runs within 3 batches in expectation, which is a significant improvement in the batched bandit setting where switching to new policies is expensive.

**Remark 3.4**.: Apart from best arm identification, regret minimization is another popular task in bandits, where the aim is to maximize the total reward in \(T\) rounds. Jin et al. [25] proposed an algorithm that achieves a constant batch complexity for regret minimization and showed that their algorithm is optimal when \(T\) goes to infinity. In regret minimization, the cost of pulling the optimal arm is 0, indicating that the allocation \(w_{i}\) (i.e., the proportion of pulling the optimal arm) is close to \(1\). In the BAI problem, the main hardness is to find the allocation \(w_{i}\) for each arm since even pulling arm \(1\) will increase the sample complexity of the algorithm. Therefore, the strategy proposed by Jin et al. [25] cannot be applied to the BAI problem.

## 4 Best of Both Worlds: Achieving Asymptotic and Non-asymptotic Optimalities

The Tri-BBAI algorithm is shown to enjoy the optimal sample complexity with only three batches in the asymptotic setting. However, in practice, we are limited to a finite number of samples and thus \(\delta\) cannot go to zero, which is a critical concern in real-world applications. Consequently, obtaining the optimal sample and batch complexity in a non-asymptotic setting becomes the ultimate objective of a practical bandit strategy in BBAI. In this section, we introduce Opt-BBAI, which can attain the optimal sample and batch complexity in asymptotic settings and near-optimal sample and batch complexity in non-asymptotic settings.

We assume a bounded reward distribution within \([0,1]\), which aligns with the same setting in the literature [31, 21]. Again, we consider that the reward distribution belongs to a one-parameter exponential family. By refining Stage IV of Algorithm 1, we can achieve asymptotic optimality and near non-asymptotic optimality adaptively based on the assumption on \(\delta\) in various settings.

The pseudo-code for the algorithm is provided in Algorithm 2. The main modification from Algorithm 1 occurs in Stage IV. Intuitively, if the algorithm cannot return at Stage III, then the value of \(\log\delta^{-1}\) may be comparable to other problem parameters, such as \(1/\Delta_{2}\). Therefore, we aim to achieve the best possible sample and batch complexity for the non-asymptotic scenario. Stage IV operates in rounds, progressively eliminating sub-optimal arms until a result is obtained. Each round consists of two components: _Successive Elimination_ and _Checking for Best Arm Elimination_.

``` Input: Parameters \(\delta,\epsilon,L_{1},L_{2},L_{3},\alpha\) and function \(\beta(t,\delta)\). Output: The estimated optimal arm.
1Stage I, II, and III: the same as that in Algorithm 1
2Stage IV: Exploration with Exponential Gap Elimination
3\(S_{r}\leftarrow[n]\), \(B_{0}\gets 0\), \(r\gets 1\);
4while\(|S_{r}|>1\)do
5 Let \(\epsilon_{r}\gets 2^{-r}/4\), \(\delta_{r}\leftarrow\delta/(40\pi^{2}n\cdot r^{2})\), \(\ell_{r}\gets 0\), and \(\gamma_{r}\leftarrow\delta_{r}\);
6 Successive elimination **/** Eliminate arms whose means are lower than \(\mu_{1}\) by at least \(\epsilon_{r}\)
7foreach arm \(i\in S_{r}\)do
8 Pull arm \(i\) for \(d_{r}\leftarrow\frac{32}{\epsilon_{r}^{2}}\log(2/\delta_{r})\) times;
9 Let \(\hat{p}_{i}^{r}\) be the empirical mean of arm \(i\);
10 Let \(\ast\leftarrow\max_{i\in S_{r}}\hat{p}_{i}^{r}\);
11 Set \(S_{r+1}\gets S_{r}\setminus\{i\in S_{r}\colon\hat{p}_{i}^{r}<\hat{p}_{ \ast}^{r}-\epsilon_{r}\}\);
12 Checking for best arm elimination **/** Reduce the risk of the best arm being eliminated
13 Let \(B_{r}\gets B_{r-1}+d_{r}|S_{r}|\);
14for\(j<r\)do
15foreach arm \(i\in S_{j}\setminus S_{j+1}\)do
16if\(B_{r}\gamma_{j}\cdot 2^{\ell_{j}}>B_{j}\)then
17\(\gamma_{j}\leftarrow(\gamma_{j})^{2}\);
18 Repull arm \(i\) for total \(\frac{32}{\epsilon_{j}^{2}}\log(2/\gamma_{j})\) times;
19 Let \(\hat{p}_{i}^{j}\) be the empirical mean of arm \(i\) in \(S_{j}\);
20\(\ell_{j}\leftarrow\ell_{j}+1\);
21if\(\exists i\in S_{j}\), \(\hat{p}_{i}^{j}>\hat{p}_{\ast}^{r}-\epsilon_{j}/2\)then
22return Randomly return an arm in \(S_{r}\);
23\(r\gets r+1\);
24return The arm in \(S_{r}\); ```

**Algorithm 2**(Almost) Optimal Batched Best Arm Identification (Opt-BBAI)

Successive Elimination.In the \(r\)-th round, we maintain a set \(S_{r}\), a potential set for the best arm. Each arm in \(S_{r}\) is then pulled \(d_{r}=32/\epsilon_{r}^{2}\log(2/\delta_{r})\) times. At Line 11, all possible sub-optimal arms are eliminated. This first component of Stage IV borrows its idea from successive elimination [14].

**Purpose.** After \(d_{r}\) number of pulls, arms are likely to be concentrated on their true means within a distance of \(\epsilon_{r}/4\) with a high probability. Hence, with high probability, the best arm is never eliminated at every round of Line 11, and the final remaining arm is the best arm.

_Issue of Best Arm Elimination._ Due to successive elimination, there is a small probability (\(\leq\delta_{r}\)) that the best arm will be eliminated. The following example illustrates that, conditioning on this small-probability event, the sample and batch complexity of the algorithm could become infinite.

**Example 4.1**.: Consider a bandit instance where \(\mu_{1}>\mu_{2}=\mu_{3}>\mu_{4}\geq\cdots\geq\mu_{n}\). If the best arm is eliminated at a certain round and never pulled again, the algorithm tasked with distinguishing between the 2nd and 3rd best arms will likely never terminate due to their equal means, leading to unbounded sample and batch complexity.

To address this issue, we introduce a _Check for Best Arm Elimination_ component into Stage IV.

Checking for Best Arm Elimination.In the \(r\)-th round, we represent the total sample complexity used up to the \(r\)-th round as \(B_{r}\). We employ \(\gamma_{j}\) as an upper bound for the probability that the best arm is eliminated in \(S_{j}\). If Line 16 is true (\(B_{r}\gamma_{j}\cdot 2^{\ell_{j}}>B_{j}\)), we adjust \(\gamma_{j}\) to \(\gamma_{j}^{2}\) and pull each arm in \(S_{j}\) for \(32/\epsilon_{j}^{2}\log(2/\gamma_{j})\) times (Line 18), subsequently updating their empirical mean (Line 19). Finally, we return a random arm in \(S_{r}\) if the condition at Line 21 holds.

**Purpose.** If Line 16 is satisfied, it indicates that the sample costs, based on the event of the best arm being eliminated in the \(r\)-th round, exceed \(B_{j}/2^{\ell_{j}}\). In this case, we increase the number of samples for arms in \(S_{j}\) and re-evaluate if their empirical mean is lower than that of the current best arm \(*\). This ensures that the expected total sample costs, assuming the best arm is eliminated at \(S_{j}\), are bounded by \(\sum_{\ell_{j}=1}^{\infty}B_{j}/2^{\ell_{j}}\leq B_{j}\). If Line 21 holds, we randomly return an arm from \(S_{r}\). Since this only happens with a small probability, we still guarantee that Algorithm 2 will return the best arm with a probability of at least \(1-\delta\).

In what follows, we provide the theoretical results for Algorithm 2.

**Theorem 4.2**.: Let \(\epsilon\), \(L_{1}\), \(L_{2}\), \(L_{3}\), \(\alpha\), and \(\beta(t,\delta)\) be the same as in Theorem 3.1. For finite \(\delta\in(0,1)\), Algorithm 2 identifies the optimal arm with probability at least \(1-\delta\) and there exists some universal constant \(C\) such that \(\mathbb{E}[N_{\delta}]\leq C\big{(}\sum_{i>1}\Delta_{i}^{-2}\log\big{(}n\cdot \log\Delta_{i}^{-1}\big{)}\big{)}\), and the algorithm runs in \(C\log(1/\Delta_{2})\) expected batches.

When \(\delta\) is allowed to go to zero, we also have the following result.

**Theorem 4.3**.: Let \(\epsilon\), \(L_{1}\), \(L_{2}\), \(L_{3}\), \(\alpha\), and \(\beta(t,\delta)\) be the same as in Theorem 3.1. Algorithm 2 identifies the optimal with probability at least \(1-\delta\) and its sample complexity satisfies \(\limsup_{\delta\to 0}\mathbb{E}_{\bm{\mu}}[N_{\delta}]/\log(1/\delta)\leq \alpha T^{*}(\bm{\mu})\), and the expected batch complexity of Algorithm 2 converges to 3 when \(\delta\) approaches 0.

The results in Theorems 4.2 and 4.3 state that Algorithm 2 achieves both the asymptotic optimal sample complexity and a constant batch complexity. Moreover, it also demonstrates near-optimal performance in both non-asymptotic sample complexity and batch complexity. Notably, this is the first algorithm that successfully attains the optimal or near-optimal sample and batch complexity, adaptively, in asymptotic and non-asymptotic settings.

**Remark 4.4**.: Jin et al. [22] achieved near-optimal sample and batch complexity in a non-asymptotic setting. However, their results are contingent on the event that the algorithm can find the best arm (with probability \(1-\delta\)). Consequently, with a probability of \(\delta\) there is no guarantee for its batch and sample complexity to be bounded. As demonstrated in Example 4.1, the batch and sample complexity in [22] could even be infinite.

In contrast, the batch and sample complexity introduced in Theorem 4.2 is near-optimal and does not rely on any specific event due to the procedure "**checking for best arm elimination**" we proposed. Our technique could be of independent interest and could be further applied to existing elimination-based BAI algorithms [14, 21, 22, 31] to ensure that the sample and batch complexity is independent of the low-probability event that the best arm is eliminated.

Conclusion, Limitations, and Future Work

In this paper, we studied the BAI problem in the batched bandit setting. We proposed a novel algorithm, Tri-BBAI, which only needs 3 batches in expectation to find the best arm with probability \(1-\delta\) and achieves the asymptotic optimal sample complexity. We further proposed Opt-BBAI and theoretically showed that Opt-BBAI has a near-optimal non-asymptotic sample and batch complexity while still maintaining the asymptotic optimality as Tri-BBAI does.

In our experiments, although Tri-BBAI utilizes a limited number of batches, its sample complexity does not match that of Garivier and Kaufmann [17]. Designing a batched algorithm with sample complexity comparable to Garivier and Kaufmann [17], while maintaining a constant number of batches, presents an intriguing challenge.

As for future work, an interesting direction is to investigate whether our "checking for best arm elimination" could be beneficial to other elimination-based algorithms. Additionally, some research [3, 23] implied a strong correlation between batch complexity in batched bandit, and the memory complexity and pass complexity in streaming bandit. Thus, it could be valuable to assess if our techniques could enhance the results in the field of streaming bandit.

## Acknowledgements

We would like to thank the anonymous reviewers for their helpful comments. This research is funded by a Singapore Ministry of Education AcRF Tier 2 grant (A-8000423-00-00), by the National Research Foundation, Singapore under its AI Singapore Program (AISG Award No: AISG-PhD/2021-01004[T]), by the Ministry of Education, Singapore, under its MOE AcRF TIER 3 Grant (MOE-MOET32022-0001), by National Key R&D Program of China under Grant No. 2023YFF0725100, by the National Natural Science Foundation of China (NSFC) under Grant No. 62402410 and U22B2060, by Guangdong Basic and Applied Basic Research Foundation under Grant No. 2023A1515110131, and by Guangzhou Municipal Science and Technology Bureau under Grant No. 2023A03J0667 and 2024A04J4454.

In particular, T. Jin was supported by a Singapore Ministry of Education AcRF Tier 2 grant (A-8000423-00-00) and by the National Research Foundation, Singapore under its AI Singapore Program (AISG Award No: AISG-PhD/2021-01004[T]). X. Xiao was supported by the Ministry of Education, Singapore, under its MOE AcRF TIER 3 Grant (MOE-MOET32022-0001). J. Tang was partially supported by National Key R&D Program of China under Grant No. 2023YFF0725100, by the National Natural Science Foundation of China (NSFC) under Grant No. 62402410 and U22B2060, by Guangdong Basic and Applied Basic Research Foundation under Grant No. 2023A1515110131, and by Guangzhou Municipal Science and Technology Bureau under Grant No. 2023A03J0667 and 2024A04J4454. P. Xu was supported in part by the Whitehead Scholars Program at the Duke University School of Medicine. The views and conclusions in this paper are those of the authors and should not be interpreted as representing any funding agencies.

## References

* [1] Arpit Agarwal, Shivani Agarwal, Sepehr Assadi, and Sanjeev Khanna. Learning with limited rounds of adaptivity: Coin tossing, multi-armed bandits, and ranking from pairwise comparisons. In _Proc. COLT_, pages 39-75, 2017. (pp. 2 and 5.)
* [2] Shubhada Agrawal, Sandeep Juneja, and Peter Glynn. Optimal \(\delta\)-Correct Best-Arm Selection for Heavy-Tailed Distributions. In _Algorithmic Learning Theory_, pages 61-110. PMLR, 2020. (pp. 3, 5, and 7.)
* [3] Sepehr Assadi and Chen Wang. Exploration with limited memory: streaming algorithms for coin tossing, noisy comparisons, and multi-armed bandits. In _Proceedings of the 52nd Annual ACM SIGACT Symposium on theory of computing_, pages 1237-1250, 2020. (p. 10.)
* [4] Jean-Yves Audibert, Sebastien Bubeck, and Remi Munos. Best arm identification in multi-armed bandits. In _COLT_, pages 41-53, 2010. (pp. 1 and 4.)
* [5] Dimitris Bertsimas and Adam J Mersereau. A learning approach for interactive marketing to a customer segment. _Operations Research_, 55(6):1120-1135, 2007. (p. 1.)* [6] Wei Cao, Jian Li, Yufei Tao, and Zhize Li. On top-k selection in multi-armed bandits and hidden bipartite graphs. In _Proc. NeurIPS_, pages 1036-1044, 2015. (p. 4.)
* [7] Alexandra Carpentier and Andrea Locatelli. Tight (lower) bounds for the fixed budget best arm identification bandit problem. In _Conference on Learning Theory_, pages 590-604. PMLR, 2016. (p. 4.)
* [8] Lijie Chen and Jian Li. On the optimal sample complexity for best arm identification. _arXiv preprint arXiv:1511.03774_, 2015. (p. 4.)
* [9] Lijie Chen, Anupam Gupta, and Jian Li. Pure exploration of multi-armed bandit under matroid constraints. In _Proc. COLT_, pages 647-669, 2016. (p. 4.)
* [10] Lijie Chen, Jian Li, and Mingda Qiao. Towards Instance Optimal Bounds for Best Arm Identification. In _Proc. COLT_, pages 535-592, 2017. (p. 4.)
* [11] Remy Degenne. On the Existence of a Complexity in Fixed Budget Bandit Identification. _arXiv preprint arXiv:2303.09468_, 2023. (p. 5.)
* [12] Remy Degenne, Wouter M Koolen, and Pierre Menard. Non-asymptotic pure exploration by solving games. _Advances in Neural Information Processing Systems_, 32, 2019. (pp. 4 and 7.)
* [13] Remy Degenne, Pierre Menard, Xuedong Shang, and Michal Valko. Gamification of pure exploration for linear bandits. In _International Conference on Machine Learning_, pages 2432-2442. PMLR, 2020. (p. 4.)
* [14] Eyal Even-Dar, Shie Mannor, and Yishay Mansour. PAC bounds for multi-armed bandit and Markov decision processes. In _Proc. COLT_, pages 255-270, 2002. (pp. 1, 4, 8, and 9.)
* [15] Zijun Gao, Yanjun Han, Zhimei Ren, and Zhengqing Zhou. Batched Multi-armed Bandits Problem. In _Proc. NeurIPS_, pages 501-511, 2019. (p. 2.)
* [16] Aurelien Garivier and Olivier Cappe. The KL-UCB algorithm for bounded stochastic bandits and beyond. In _Proc. COLT_, pages 359-376, 2011. (p. 5.)
* [17] Aurelien Garivier and Emilie Kaufmann. Optimal best arm identification with fixed confidence. In _Proc. COLT_, pages 998-1027, 2016. (pp. 1, 2, 3, 4, 5, 7, 10, 13, 25, and 26.)
* [18] Aurelien Garivier, Tor Lattimore, and Emilie Kaufmann. On explore-then-commit strategies. In _Proc. NeurIPS_, pages 784-792, 2016. (p. 7.)
* [19] Aditya Grover, Todor Markov, Peter Attia, Norman Jin, Nicolas Perkins, Bryan Cheong, Michael Chen, Zi Yang, Stephen Harris, William Chueh, et al. Best arm identification in multi-armed bandits with delayed feedback. In _Proc. AISTATS_, pages 833-842, 2018. (p. 1.)
* [20] Peter Harremoes. Bounds on tail probabilities in exponential families. _arXiv preprint arXiv:1601.05179_, 2016. (p. 18.)
* [21] Kevin Jamieson, Matthew Malloy, Robert Nowak, and Sebastien Bubeck. il'ucb: An optimal exploration algorithm for multi-armed bandits. In _Proc. COLT_, pages 423-439, 2014. (pp. 2, 4, 8, and 9.)
* [22] Tianyuan Jin, Shi Jieming, Xiaokui Xiao, and Enhong Chen. Efficient Pure Exploration in Adaptive Round model. In _Proc. NeurIPS_, pages 6605-6614, 2019. (pp. 2, 3, 5, 9, and 25.)
* [23] Tianyuan Jin, Keke Huang, Jing Tang, and Xiaokui Xiao. Optimal streaming algorithms for multi-armed bandits. In _International Conference on Machine Learning_, pages 5045-5054. PMLR, 2021. (pp. 10, 25, and 26.)
* [24] Tianyuan Jin, Jing Tang, Pan Xu, Keke Huang, Xiaokui Xiao, and Quanquan Gu. Almost optimal anytime algorithm for batched multi-armed bandits. In _International Conference on Machine Learning_, pages 5065-5073. PMLR, 2021. (pp. 2, 3, and 15.)* [25] Tianyuan Jin, Pan Xu, Xiaokui Xiao, and Quanquan Gu. Double explore-then-commit: Asymptotic optimality and beyond. In _Conference on Learning Theory_, pages 2584-2633. PMLR, 2021. (pp. 2 and 7.)
* [26] Marc Jourdan and Remy Degenne. Non-Asymptotic Analysis of a UCB-based Top Two Algorithm. _arXiv preprint arXiv:2210.05431_, 2022. (pp. 3 and 4.)
* [27] Marc Jourdan, Remy Degenne, Dorian Baudry, Rianne de Heide, and Emilie Kaufmann. Top two algorithms revisited. _arXiv preprint arXiv:2206.05979_, 2022. (p. 4.)
* [28] Marc Jourdan, Remy Degenne, and Emilie Kaufmann. An \({varepsilon}\)-Best-Arm Identification Algorithm for Fixed-Confidence and Beyond. _Advances in Neural Information Processing Systems_, 36:16578-16649, 2023. (p. 4.)
* [29] Shivaram Kalyanakrishnan and Peter Stone. Efficient selection of multiple bandit arms: theory and practice. In _Proc. ICML_, pages 511-518, 2010. (p. 4.)
* [30] Shivaram Kalyanakrishnan, Ambuj Tewari, Peter Auer, and Peter Stone. PAC Subset Selection in Stochastic Multi-armed Bandits. In _Proc. ICML_, pages 655-662, 2012. (p. 4.)
* [31] Zohar Karnin, Tomer Koren, and Oren Somekh. Almost optimal exploration in multi-armed bandits. In _Proc. ICML_, pages 1238-1246, 2013. (pp. 2, 3, 4, 8, and 9.)
* [32] Nikolai Karpov, Qin Zhang, and Yuan Zhou. Collaborative top distribution identifications with limited interaction. In _2020 IEEE 61st Annual Symposium on Foundations of Computer Science (FOCS)_, pages 160-171. IEEE, 2020. (pp. 3, 5, 25, and 26.)
* [33] Julian Katz-Samuels, Lalit Jain, Kevin G Jamieson, et al. An empirical process approach to the union bound: Practical algorithms for combinatorial and linear bandits. _Advances in Neural Information Processing Systems_, 33:10371-10382, 2020. (p. 4.)
* [34] Emilie Kaufmann and Wouter M Koolen. Mixture martingales revisited with applications to sequential tests and confidence intervals. _The Journal of Machine Learning Research_, 22(1):11140-11183, 2021. (p. 7.)
* [35] Junpei Komiyama, Taira Tsuchiya, and Junya Honda. Minimax optimal algorithms for fixed-budget best arm identification. _Advances in Neural Information Processing Systems_, 35:10393-10404, 2022. (p. 5.)
* [36] Pierre Menard and Aurelien Garivier. A minimax and asymptotically optimal algorithm for stochastic bandits. In _Proc. ALT_, pages 223-237, 2017. (pp. 5, 15, and 18.)
* [37] Vianney Perchet, Philippe Rigollet, Sylvain Chassang, and Erik Snowberg. Batched bandit problems. _The Annals of Statistics_, 44(2):660-681, 2016. (p. 2.)
* [38] Xuanfei Ren, Tianyuan Jin, and Pan Xu. Optimal Batched Linear Bandits. In _Forty-first International Conference on Machine Learning_, volume 235, pages 42391-42416. PMLR, 2024. (p. 2.)
* [39] Chao Tao, Qin Zhang, and Yuan Zhou. Collaborative learning with limited interaction: Tight bounds for distributed exploration in multi-armed bandits. In _2019 IEEE 60th Annual Symposium on Foundations of Computer Science (FOCS)_, pages 126-146. IEEE, 2019. (pp. 2, 3, and 5.)
* [40] William R Thompson. On the likelihood that one unknown probability exceeds another in view of the evidence of two samples. _Biometrika_, 25(3/4):285-294, 1933. (p. 1.)
* [41] Roman Vershynin. _High-dimensional probability: An introduction with applications in data science_, volume 47. Cambridge university press, 2018. (p. 20.)
* [42] Po-An Wang, Ruo-Chun Tzeng, and Alexandre Proutiere. Fast pure exploration via frank-wolfe. _Advances in Neural Information Processing Systems_, 34:5810-5821, 2021. (pp. 3, 4, 5, and 7.)
* [43] Yuan Zhou, Xi Chen, and Jian Li. Optimal PAC multiple arm identification with applications to crowdsourcing. In _Proc. ICML_, pages 217-225, 2014. (p. 1.)

### Notations.

Denote by \(\hat{\mu}_{i}^{s}\) the empirical mean of arm \(i\) after its \(s\)-th pull and by \(\hat{\mu}_{i}(t)\) the empirical mean of arm \(i\) at time \(t\) (i.e., after a total number of \(t\) pulls are examined for all arms). We use \(\Delta_{i}=\mu_{1}-\mu_{i}\) for the gap between the optimal arm and the \(i\)-th arm. Throughout the paper, we use the following asymptotic notation. Specifically we use \(f(\delta)\lesssim g(\delta)\) to denote that there exists some \(\delta_{0}\), such that for any \(\delta<\delta_{0}\), \(f(\delta)\leq g(\delta)\). Similarly, we use \(f(\delta)\gtrsim g(\delta)\) to denote that there exists some \(\delta_{0}\), such that for any \(\delta<\delta_{0}\), \(f(\delta)\geq g(\delta)\).

## Appendix A Computing \(w^{*}(\mu)\) and \(T^{*}(\mu)\)

In this section, we introduce two useful lemmas that help us to calculate \(\bm{w}^{*}(\bm{b})\) and \(T^{*}(\bm{b})\) in Algorithm 1 and Algorithm 2, which are also used in [17]. For ease of presentation, we first define some useful notations. For every \(c\in[0,1]\), we define

\[I_{c}(\mu,\mu^{\prime}):=cd(\mu,c\mu+(1-c)\mu^{\prime})+(1-c)d(\mu^{\prime},c \mu+(1-c)\mu^{\prime}).\]

For any arm \(i\in[n]\setminus\{1\}\), we define

\[g_{i}(x):=(1+x)I_{\frac{1}{1+x}}(\mu_{1},\mu_{i}).\]

**Lemma A.1** (Garivier and Kaufmann 17, Lemma 3).: For every \(\bm{w}\in\mathcal{P}_{n}\),

\[\inf_{\bm{\lambda}\in\operatorname{Alt}(\bm{\mu})}\left(\sum_{i=1}^{n}w_{i}d( \mu_{i},\lambda_{i})\right)=\min_{i\neq 1}\,(w_{1}+w_{i})I_{\frac{w_{1}}{w_{1}+w_{i}}} (\mu_{1},\mu_{i}).\]

Besides,

\[T^{*}(\bm{\mu})^{-1}=\sup_{\bm{w}\in\mathcal{P}_{n}}\min_{i\neq 1}\,(w_{1}+w _{i})I_{\frac{w_{1}}{w_{1}+w_{i}}}(\mu_{1},\mu_{i}),\] (A.1)

and

\[\bm{w}^{*}(\bm{\mu})=\operatorname*{arg\,max}_{\bm{w}\in\mathcal{P}_{n}}\min_ {i\neq 1}\,(w_{1}+w_{i})I_{\frac{w_{1}}{w_{1}+w_{i}}}(\mu_{1},\mu_{i}).\] (A.2)

**Lemma A.2** (Garivier and Kaufmann 17, Theorem 5).: For \(i\in[n]\), let

\[w_{i}^{*}(\bm{\mu})=\frac{x_{i}(y^{*})}{\sum_{i\in[n]}x_{i}(y^{*})},\]

where \(y^{*}\) is the unique solution of the equation \(F_{\bm{\mu}}(y)=1\), and where

\[F_{\bm{\mu}}\colon y\mapsto\sum_{i=2}^{n}\frac{d\Big{(}\mu_{1},\frac{\mu_{1}+x _{i}(y)\mu_{i}}{1+x_{i}(y)}\Big{)}}{d\Big{(}\mu_{i},\frac{\mu_{1}+x_{i}(y)\mu_ {i}}{1+x_{i}(y)}\Big{)}}.\]

in a continuous, increasing function on \([0,d(\mu_{1},\mu_{2}))\) such that \(F_{\bm{\mu}}(y)\to\infty\) when \(y\to d(\mu_{1},\mu_{2})\).

## Appendix B Proof of Theorems in Section 3

### Proof of Theorem 3.2

Proof of Theorem 3.2.: The proof of Theorem 3.2 requires the following two Lemmas, which guarantees the error returned by Line 22 and Line 26 of Algorithm 1 respectively.

**Lemma B.1**.: [17, Proposition 12] Let \(\bm{\mu}\) be the exponential bandit model. Let \(\delta\in(0,1)\). For sufficiently small \(\delta>0\), the Chernoff's stopping rule Line 21 of Algorithm 1 with the threshold

\[\beta(t,\delta/2)=\log\left(\frac{2\log(2/\delta)t^{\alpha}}{\delta}\right),\]

ensures that \(\mathbb{P}_{\bm{\mu}}(i^{*}(N_{\delta})\neq 1)\leq\delta/2\).

Recall \(\hat{\mu}_{i}^{s}\) is the empirical mean of arm \(i\) after its \(s\)-th pull. Let \(\mathcal{E}_{1}=\{\forall s\geq L_{3}\text{ and }i\in[n]:\hat{\mu}_{i}^{s}\in[\mu_{i}- \epsilon,\mu_{i}+\epsilon]\}\). The following lemma shows that \(\mathbb{P}(\mathcal{E}_{1}^{c})\leq\delta/2\), where \(\mathcal{E}^{c}\) denotes the complement event of \(\mathcal{E}\).

**Lemma B.2**.: For sufficiently small \(\delta>0\)6, we have

Footnote 6: If event \(E\) occur for a sufficiently small \(\delta>0\), it signifies that there exists a \(\delta_{0}\in(0,1)\) such that for all \(\delta\leq\delta_{0}\), event \(E\) consistently holds.

\[\mathbb{P}(\mathcal{E}_{1}^{c})\leq\delta/2.\]

If \(\mathcal{E}_{1}\) happens, we have that at Line 26 of Algorithm 1, \(\hat{\mu}_{1}(t)\geq\mu_{1}-\epsilon\gtrsim\mu_{i}+\epsilon\geq\hat{\mu}_{i}(t)\) for all \(i>1\), which means \(i^{*}(t)=1\). Combining Lemma B.1 and Lemma B.2, Theorem 3.1 follows immediately. 

### Proof of Theorem 3.1

Proof of Theorem 3.1.: Recall in Algorithm 1, \(b_{1}^{q}=\hat{\mu}_{i^{*}(t)}(t)-\epsilon\) and \(b_{i}^{q}=\hat{\mu}_{i}(t)+\epsilon\) for all \(i\in[n]\setminus\{i^{*}(t)\}\), where \(t=\tau_{q}\). Let \(\mathcal{E}_{0}\) be the intersection of the following four events:

\[\mathcal{E}_{0}^{1} =\cap_{q\geq 1}\{b_{1}^{q}\in[\mu_{1}-3\epsilon/2,\mu_{1}- \epsilon/2]\},\] (B.1a) \[\mathcal{E}_{0}^{2} =\cap_{q\geq 1}\{\text{for all }i\in[n]\setminus\{1\},b_{i}^{q}\in[\mu_{i}+ \epsilon/2,\mu_{i}+3\epsilon/2]\},\] (B.1b) \[\mathcal{E}_{0}^{3} =\cap_{q\geq 0}\{\hat{\mu}_{1}(\tau_{q})\geq\mu_{1}-\epsilon/2\},\] (B.1c) \[\mathcal{E}_{0}^{4} =\cap_{q\geq 0}\{\text{for all }i\in[n]\setminus\{1\},\hat{\mu}_{i}( \tau_{q})\leq\mu_{i}+\epsilon/2\}.\] (B.1d)

Here (B.1a) and (B.1b) ensure that the estimation of \(\bm{w}^{*}(\bm{b}^{q})\) and \(T^{*}(\bm{b}^{q})\) is close to \(\bm{w}^{*}(\bm{\mu})\) and \(T^{*}(\bm{\mu})\), and (B.1c) and (B.1d) ensure that arm 1 has the largest average reward at time \(\tau_{q}\).

**Lemma B.3**.: For sufficiently small \(\delta>0\), we have

\[\mathbb{P}((\mathcal{E}_{0}^{c})\leq\frac{1}{(\log\delta^{-1})^{2}}.\]

**Lemma B.4**.: If \(\mathcal{E}_{0}\) holds, then for sufficiently small \(\delta>0\), we have

1. \(T_{i}=\alpha w_{i}^{*}(\bm{\mu})T^{*}(\bm{\mu})\log(1/\delta)+o(\log(1/\delta))\);
2. \(|w_{i}^{*}(\bm{b}^{2})-w_{i}^{*}(\bm{b}^{1})|\leq 1/\sqrt{n}\) for all \(i\in[n]\);
3. \(\min_{j\notin[n]\setminus\{i^{*}(\tau)\}}Z_{j}(\tau)\geq\beta(\tau,\delta/2)\).

From Lemma B.4, if \(\delta\) is sufficiently small and \(\mathcal{E}_{0}\) holds, then Algorithm 1 will return at Line 22. Besides, we note that the total number of pulls of any arm is no more than \(L_{3}=(\log(\delta^{-1}))^{2}\) times. Therefore,

\[\mathbb{E}[N_{\delta}] \leq nL_{1}+\mathds{1}\{\mathcal{E}_{0}\}\cdot(\alpha T^{*}( \bm{\mu})\log\delta^{-1}+o(n\log(1/\delta)))+\mathds{1}\{\mathcal{E}_{0}^{c} \}\cdot(L_{2}+nL_{3})\] \[\leq\mathds{1}\{\mathcal{E}_{0}\}\cdot\alpha T^{*}(\bm{\mu}) \log\delta^{-1}+o(n\log(1/\delta))+\mathds{1}\{\mathcal{E}_{0}^{c}\}nL_{3}\] \[\lesssim\mathds{1}\{\mathcal{E}_{0}\}\cdot\alpha T^{*}(\bm{\mu}) \log\delta^{-1}+n\] \[\leq\alpha T^{*}(\bm{\mu})\log\delta^{-1}+n.\] (B.2)

We further have

\[\lim_{\delta\to 0}\frac{\mathbb{E}[N_{\delta}]}{\log\delta^{-1}}\leq\alpha T^{*}( \bm{\mu}).\]

This completes the proof. 

### Proof of Theorem 3.3

Proof of Theorem 3.3.: Stage I costs one batch. For the Stage II, note that \(\mathbb{P}(\mathcal{E}_{0}^{c})\leq\frac{1}{\log(\delta^{-1})^{2}}\) and if \(\mathcal{E}_{0}\) occurs, then \(|w_{i}^{*}(\bm{b}^{2})-w_{i}^{*}(\bm{b}^{1})|\leq 1/\sqrt{n}\) for all \(i\in[n]\) (from the second statement of Lemma B.4), which means Stage II costs 2 batches. Moreover, from Lemma B.4, if \(\delta\) is sufficiently small and \(\mathcal{E}_{0}\) holds, then Algorithm 1 will return at Line 22. Otherwise, the algorithm goes to Stage IV and costs one batch. Therefore, for sufficiently small \(\delta\), the expected number of batches

\[\leq 1+\mathbb{P}(\mathcal{E}_{0}^{c})\cdot\log(1/\delta)+2+\mathbb{P}(\mathcal{ E}_{0}^{c})=3+o(1).\]

Finally, if \(\mathcal{E}_{0}\) is true, the algorithm costs 3 batches. Therefore, with probability \(1-1/\log(1/\delta^{2})\), Algorithm 1 costs 3 batches.

### Proof of Supporting Lemmas

The proof of Lemma B.3 requires the following useful inequalities.

**Lemma B.5** (Maximal Inequality).: Let \(N\) and \(M\) be two positive integers, let \(\gamma>0\), and \(\hat{\mu}_{n}\) be the empirical mean of \(n\) random variables i.i.d. according to the arm's distribution with mean \(\mu\). Then, for \(x\leq\mu\),

\[\mathbb{P}(\exists N\leq n\leq M,\hat{\mu}_{n}\leq x)\leq e^{-N(x-\mu)^{2}/(2V_ {0})},\] (B.3)

and for every \(x\geq\mu\),

\[\mathbb{P}(\exists N\leq n\leq M,\hat{\mu}_{n}\geq x)\leq e^{-N(x-\mu)^{2}/(2V _{1})},\] (B.4)

where \(V_{0}\) is the maximum variance of arm's distribution with mean \(\mu\in[x,\mu]\) and \(V_{1}\) is the maximum variance of arm's distribution with mean \(\mu\in[\mu,x]\).

Note that Lemma B.5 is an improved version of Lemma 4 of [36], where we use a much smaller variance upper bound to tighten the inequalities for the case \(x\leq\mu\) and the case \(x\geq\mu\) respectively.

**Lemma B.6**.: [24, Proposition 1] For \(\epsilon>0\) and \(\mu\leq\mu^{\prime}-\epsilon\),

\[d(\mu,\mu^{\prime})\geq d(\mu,\mu^{\prime}-\epsilon),\quad\text{and}\quad d( \mu,\mu^{\prime})\leq d(\mu-\epsilon,\mu^{\prime}).\] (B.5)

Now, we are ready to prove Lemma B.3.

Proof of Lemma b.3.: Let \(V\) be the maximum variance of reward distribution with mean \(\mu\in[\mu_{n},\mu_{1}]\). From Lemma B.5, we have that for \(s\geq L_{1}\),

\[\mathbb{P}(\exists s\geq L_{1}:\hat{\mu}_{1}^{s}\notin[\mu_{1}- \epsilon/2,\mu_{1}+\epsilon/2])\] \[\leq\mathbb{P}(\exists s\geq L_{1}:\hat{\mu}_{1}^{s}\geq\mu_{1}+ \epsilon/2)+\mathbb{P}(\exists s\geq L_{1}:\hat{\mu}_{1}^{s}\leq\mu_{1}- \epsilon/2)\] \[\leq 2e^{-L_{1}(\epsilon/2)^{2}/(2V)}\] \[\lesssim\frac{1}{n(\log\delta^{-1})^{2}},\] (B.6)

where the second inequality is from Lemma B.5, and the last inequality is due to that for sufficiently small \(\delta>0\), \(L_{1}=\sqrt{\log\delta^{-1}}\geq 8V/\epsilon^{2}\log(n(\log\delta^{-1})^{2})\). Similarly, for \(i\in[n]\setminus\{1\}\),

\[\mathbb{P}(\exists s\geq L_{1}:\hat{\mu}_{i}^{s}\notin[\mu_{i}- \epsilon/2,\mu_{i}+\epsilon/2])\lesssim\frac{1}{n(\log\delta^{-1})^{2}}.\] (B.7)

Define events:

\[\mathcal{A}_{1}=\{\forall s\geq L_{1}:\hat{\mu}_{1}^{s}\in[\mu_{1}-\epsilon/2,\mu_{1}+\epsilon/2]\}\]

and

\[\mathcal{A}_{2}=\{\text{for all }i\in[n]\setminus\{1\},\forall s\geq L_{1}: \hat{\mu}_{i}^{s}\in[\mu_{i}-\epsilon/2,\mu_{i}+\epsilon/2]\}.\]

Assume that both events \(\mathcal{A}_{1}\) and \(\mathcal{A}_{2}\) hold. Then, we have

\[\hat{\mu}_{1}^{L_{1}}\geq\mu_{1}-\epsilon/2\geq\mu_{i}+\epsilon/2+\Delta_{i}- \epsilon\geq\hat{\mu}_{i}^{L_{1}},\]

where in the last inequality we assumed \(\epsilon\leq\min_{i\neq 1}\Delta_{i}\). This further implies \(i^{*}(\tau_{q})=1\) for any \(q\geq 0\) and thus \(b_{1}^{q-1}=\hat{\mu}_{1}(\tau_{q})-\epsilon\). Therefore, we have for any \(q\geq 1\)

1. \(b_{1}^{q}=\hat{\mu}_{1}(\tau_{q-1})-\epsilon\in[\mu_{1}-3\epsilon/2,\mu_{1}- \epsilon/2]\);
2. \(\forall i\in[n]\setminus\{1\}\), \(b_{i}^{q}=\hat{\mu}_{i}(\tau_{q-1})+\epsilon\in[\mu_{i}-\epsilon/2,\mu_{1}+ \epsilon/2]\);
3. \(\hat{\mu}_{1}(\tau_{q-1})\geq\mu_{1}-\epsilon/2\);
4. and \(\forall i\in[n]\setminus\{1\},\hat{\mu}_{i}(\tau_{q-1})\leq\mu_{i}+\epsilon/2\),which means \(\mathcal{E}_{0}\) defined in (B.1) occurs. Therefore, we have

\[\mathbb{P}(\mathcal{E}_{0}) \geq\mathbb{P}(\mathcal{A}_{1}\cap\mathcal{A}_{2})\] \[=\mathbb{P}\bigg{(}\{\forall s\geq L_{1}:\hat{\mu}_{1}^{s}\in[\mu_ {1}-\epsilon/2,\mu_{1}+\epsilon/2]\}\bigcap_{i:i\in[n]\setminus\{1\}}\{\forall s \geq L_{1}:\hat{\mu}_{i}^{s}\in[\mu_{i}-\epsilon/2,\mu_{i}+\epsilon/2]\}\bigg{)}\] \[=\mathbb{P}\bigg{(}\{\exists s\geq L_{1}:\hat{\mu}_{1}^{s}\notin[ \mu_{1}-\epsilon/2,\mu_{1}+\epsilon/2]\}^{c}\bigcap_{i:i\in[n]\setminus\{1\}} \{\exists s\geq L_{1}:\hat{\mu}_{i}^{s}\notin[\mu_{i}-\epsilon/2,\mu_{i}+ \epsilon/2]\}^{c}\bigg{)}\] \[\geq 1-\mathbb{P}\bigg{(}\exists s\geq L_{1}:\hat{\mu}_{1}^{s} \notin\bigg{[}\mu_{1}-\frac{\epsilon}{2},\mu_{1}+\frac{\epsilon}{2}\bigg{]} \bigg{)}\] \[\quad-\sum_{i:i\in[n]\setminus\{1\}}\mathbb{P}\left(\exists s \geq L_{1}:\hat{\mu}_{i}^{s}\notin\bigg{[}\mu_{i}-\frac{\epsilon}{2},\mu_{i}+ \frac{\epsilon}{2}\bigg{]}\right)\] \[\geq 1-(\log\delta^{-1})^{-2},\]

where the last inequality is due to (B.6) and (B.7). 

Proof of Lemma b.4.: Assume \(\mathcal{E}_{0}\) is true. Recall that \(\Delta_{2}=\min_{i\in[n]\setminus\{1\}}\mu_{1}-\mu_{i}\). For sufficiently small \(\delta>0\) such that \(\epsilon<\Delta_{2}/8\), we have \(b_{1}^{q}\in[\mu_{1}-\Delta_{2}/4,\mu_{1}]\) and \(b_{i}^{q}\in[\mu_{i},\mu_{i}+\Delta_{2}/4]\). Let \(\mathcal{L}(\bm{b})=\{\bm{\lambda}\in S:\lambda_{1}\in[\mu_{1}-\Delta_{2}/4, \mu_{1}]\) and for any \(i\in[n]\setminus\{1\},\lambda_{i}\in[\mu_{i},\mu_{i}+\Delta_{2}/4]\}\). Therefore

\[\alpha w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\leq\max_{\bm{b}^{ \prime}\in\mathcal{L}(\bm{b})}\alpha w_{i}^{*}(\bm{b}^{\prime})T^{*}(\bm{b}^{ \prime})<\infty.\]

Since \(\max_{\bm{b}^{\prime}\in\mathcal{L}(\bm{b})}\alpha w_{i}^{*}(\bm{b}^{\prime}) T^{*}(\bm{b}^{\prime})<\infty\) is independent of \(\delta\), we have

\[\alpha w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\leq\max_{\bm{b}^{ \prime}\in\mathcal{L}(\bm{b})}\alpha w_{i}^{*}(\bm{b}^{\prime})T^{*}(\bm{b}^{ \prime})\lesssim\log\log\delta^{-1}/n=L_{2},\]

which implies \(T_{i}^{q}=\min\{\alpha w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\log\delta^{-1}, L_{2}\}=\alpha w_{i}^{*}(\bm{b}^{q})T^{*}(\bm{b}^{q})\log\delta^{-1}\). Besides, as \(w^{*}(\bm{b}^{q})\) and \(T^{*}(\bm{b}^{q})\) are continuous on \(\bm{b}^{q}\), we have that as \(\bm{b}^{q}\to\bm{\mu}\), \(w^{*}(\bm{b}^{q})\to w^{*}(\bm{\mu})\) and \(T^{*}(\bm{b}^{q})\to T^{*}(\bm{\mu})\). Note that \(|b_{i}^{q}-\mu_{i}|\leq 2\epsilon\) and \(\epsilon\) approaches \(0\) as \(\delta\) approaches \(0\). Recall \(\tau\) is the stopping time of Stage II and \(T_{i}\) is the number of pulls of arm \(i\) at time \(\tau\). Therefore, for sufficiently small \(\delta\),

\[T_{i}:=\max_{p:p\in\mathbb{N},p\geq 1}T_{i}^{p}=\alpha w_{i}^{*}(\bm{\mu})T^{*}( \bm{\mu})\log\delta^{-1}+o(\log(1/\delta)).\]

Moreover, for sufficient smaller \(\delta\) and \(\forall i\in[n]\), \(|w_{i}^{*}(\bm{b}^{q})-w_{i}^{*}(\bm{\mu})|=o(1)\) and thus

\[|w_{i}^{*}(\bm{b}^{1})-w_{i}^{*}(\bm{b}^{2})|<1/\sqrt{n},\]

which means the condition in Line 15 is satisfied and the Algorithm goes to Stage III.

Assume \(\tau=\tau_{q^{\prime}}\). We have

\[Z_{1i}(\tau) =N_{1}(\tau)\cdot d(\hat{\mu}_{1}(\tau),\hat{\mu}_{1i}(\tau))+N_{ i}(\tau)\cdot d(\hat{\mu}_{i}(\tau),\hat{\mu}_{1i}(\tau))\] \[=N_{1}(\tau_{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau),\hat{\mu}_ {1i}(\tau))+N_{i}(\tau_{q^{\prime}})\cdot d(\hat{\mu}_{i}(\tau),\hat{\mu}_{1i}( \tau))\] \[\geq\alpha\log\delta^{-1}\cdot\bigg{(}\frac{w_{1}^{*}(\bm{b}^{q ^{\prime}})d(\hat{\mu}_{1}(\tau),\hat{\mu}_{1i}(\tau))}{T^{*}(\bm{b}^{q^{ \prime}})^{-1}}+\frac{w_{i}^{*}(\bm{b}^{q^{\prime}})d(\hat{\mu}_{1}(\tau),\hat{ \mu}_{1i}(\tau))}{T^{*}(\bm{b}^{q^{\prime}})^{-1}}\bigg{)},\] (B.8)

where the last inequality is due to \(T_{i}\geq T_{i}^{q^{\prime}}=\alpha w_{i}^{*}(\bm{b}^{q^{\prime}})T^{*}(\bm{b}^{ q^{\prime}})\log(1/\delta)\). In what follows, we will show

\[\frac{w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau), \hat{\mu}_{1i}(\tau))}{T^{*}(\bm{b}^{q^{\prime}})^{-1}}+\frac{w_{i}^{*}(\bm{b}^{ q^{\prime}})\cdot d(\hat{\mu}_{i}(\tau),\hat{\mu}_{1i}(\tau))}{T^{*}(\bm{b}^{q^{ \prime}})^{-1}}\geq 1.\]

The following minimization problem is a convex optimization problem

\[\min_{\lambda_{1w}:\lambda_{1w}\leq\lambda_{iw}}w_{1}^{*}(\bm{b}^{q^{\prime}}) \cdot d(\hat{\mu}_{1}(\tau),\lambda_{1w})+w_{i}^{*}(\bm{b}^{q^{\prime}})\cdot d( \hat{\mu}_{i}(\tau),\lambda_{iw}),\]which is solved when we have \(\lambda_{1w}=\lambda_{iw}=\hat{\mu}_{1i}(\tau)\). The proof of this lemma is based on the assumption that \(\mathcal{E}_{0}\) occurs. Note that \(\mathcal{E}_{0}\) occurs, then \(b_{1}^{q^{\prime}}=\hat{\mu}_{1}(\tau_{q^{\prime}-1})-\epsilon\leq\mu_{1}- \epsilon/2\leq\hat{\mu}_{1}(\tau)\) and \(b_{i}^{q^{\prime}}=\hat{\mu}_{1}(\tau_{q^{\prime}-1})+\epsilon>\hat{\mu}_{i}(\tau)\) for all \(i\in[n]\setminus\{1\}\). Therefore, \(\hat{\mu}_{1}(\tau)\geq b_{1}^{q^{\prime}}\gtrsim b_{i}^{q^{\prime}}\geq\hat{ \mu}_{i}(\tau)\). Let

\[\lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}})= \frac{w_{1}^{*}(\bm{b}^{q^{\prime}})}{w_{1}^{*}(\bm{b}^{q^{\prime}})+w_{i}^{* }(\bm{b}^{q^{\prime}})}\cdot b_{1}^{q}+\frac{w_{i}^{*}(\bm{b}^{q^{\prime}})}{ w_{1}^{*}(\bm{b}^{q^{\prime}})+w_{i}^{*}(\bm{b}^{q^{\prime}})}\cdot b_{i}^{q}.\]

Then, \(\lambda_{w^{*}(\bm{b})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}})\) is the solution to minimizing \(w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}},x)+w_{i}^{*}(\bm{b}^{ q^{\prime}})\cdot d(b_{i}^{q^{\prime}},x)\) for \(x\in(b_{i}^{q^{\prime}},b_{1}^{q^{\prime}})\).

**Case 1:** if \(\hat{\mu}_{1i}(\tau)\in(b_{1}^{q^{\prime}},\hat{\mu}_{1}(\tau))\), then

\[w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau),\hat{ \mu}_{1i}(\tau))+w_{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{i}(\tau), \hat{\mu}_{1i}(\tau))\] \[\geq w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau), \hat{\mu}_{1}(\tau))+w_{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{i}(\tau ),b_{1}^{q^{\prime}})\] \[\geq w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}},b_ {1}^{q^{\prime}})+w_{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{i}^{q^{\prime}},b_ {1}^{q^{\prime}})\] \[\geq w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}}, \lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}}))+w _{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{i}^{q^{\prime}},\lambda_{w^{*}(\bm{b} ^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}})),\] (B.9)

where the first and second inequalities are due to (B.5) and the last inequality is due to the fact that \(w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}},x)+w_{i}^{*}(\bm{b}^{ q^{\prime}})\cdot d(b_{i}^{q^{\prime}},x)\) achieves it minimum at \(x=\lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}})\).

**Case 2:** if \(\hat{\mu}_{1i}(\tau)\in(b_{1}^{q^{\prime}},b_{1}^{q^{\prime}})\), we have

\[w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau),\hat{ \mu}_{1i}(\tau))+w_{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{i}(\tau), \hat{\mu}_{1i}(\tau))\] \[\geq w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}}, \lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}}))+w _{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{i}^{q^{\prime}},\hat{\mu}_{1i}(\tau))\] \[\geq w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}}, \lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}}))+w _{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{i}^{q^{\prime}},\lambda_{w^{*}(\bm{b}^ {q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}})),\] (B.10)

where the first inequality is due to (B.5) and the last inequality is due to the fact that for \(x\in(b_{1}^{q^{\prime}},b_{1}^{q^{\prime}})\), \(w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}},x)+w_{i}^{*}(\bm{b}^{ q^{\prime}})\cdot d(b_{i}^{q^{\prime}},x)\) achieves its minimum at \(x=\lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}.\ldots.q^{q},b_{i}^{q^{\prime}})\).

**Case 3:** if \(\hat{\mu}_{1i}(\tau)\in(\hat{\mu}_{i}(\tau),b_{i}^{q^{\prime}})\), similar to (B.9) and (B.10), we have

\[w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau),\hat{ \mu}_{1i}(\tau))+w_{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{i}(\tau),\hat{ \mu}_{1i}(\tau))\] \[\geq w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}}, \lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}}))+w _{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{i}^{q^{\prime}},\lambda_{w^{*}(\bm{b}^{q^{ \prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}})).\] (B.11)

Combine all three cases, we obtain

\[w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau),\hat{ \mu}_{1i}(\tau))+w_{i}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{i}(\tau),\hat{ \mu}_{1i}(\tau))\] \[\geq w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1},\lambda_{w^{*}( \bm{b}^{q^{\prime}})}(b_{1}^{q^{\prime}},b_{i}^{q^{\prime}}))+w_{i}^{*}(\bm{b}^{ q^{\prime}})\cdot d(b_{i}^{q^{\prime}},\lambda_{w^{*}(\bm{b}^{q^{\prime}})}(b_{1}^{q^{ \prime}},b_{i}^{q^{\prime}})).\] (B.12)

Note that \(\hat{\mu}_{1i}(\tau)=\lambda_{w^{*}(\bm{b}^{q^{\prime}})}(\hat{\mu}_{1}(\tau), \hat{\mu}_{i}(\tau))\), we have

\[\frac{w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(\hat{\mu}_{1}(\tau), \hat{\mu}_{1i}(\tau))}{T^{*}(\bm{b}^{q^{\prime}})-1}+\frac{w_{i}^{*}(\bm{b}^{q^ {\prime}})\cdot d(\hat{\mu}_{1}(\tau),\hat{\mu}_{1i}(\tau))}{T^{*}(\bm{b}^{q^{ \prime}})^{-1}}\] \[\geq\frac{w_{1}^{*}(\bm{b}^{q^{\prime}})\cdot d(b_{1}^{q^{\prime}}, \where the first equality is from (3.3), the second equality is from (B.8), and the last inequality is from (B.13). Finally, for \(\alpha\geq 1+6\log\log\delta^{-1}/\log\delta^{-1}\), we obtain

\[Z_{i}(\tau)\geq\log\left(\frac{(\log\delta^{-1})^{6}}{\delta} \right)\gtrsim\log\left(\frac{2(\log(2/\delta)))\cdot(nL_{2}+nL_{1})^{\alpha}}{ \delta}\right)=\beta(\tau,\delta/2),\]

which completes the proof. 

### Proof of Maximum Inequality

Proof of Lemma b.5.: Recall that the result of Lemma 4 of Menard and Garivier [36] is: for \(\hat{\mu}_{n}\leq\mu\),

\[\mathbb{P}(\exists N\leq n\leq M,d(\hat{\mu}_{n},\mu)\geq\gamma) \leq e^{-N\gamma}.\] (B.14)

By Lemma 1 of Harremoes [20], we have

\[d(x,\mu)=\int_{x}^{\mu}\frac{y-x}{V(y)}\text{d}y\leq\frac{(x- \mu)^{2}}{2V_{0}},\] (B.15)

where \(V(y)\) is the variance of the distribution with mean \(y\). As a simple consequence of (B.15) and (B.14), we have

\[\mathbb{P}(\exists N\leq n\leq M,\hat{\mu}_{n}\leq x)\leq e^{-N (x-\mu)^{2}/(2V_{0})}.\] (B.16)

For the case when \(\hat{\mu}_{n}\geq\mu\), we can directly follow the idea of Lemma 4 of Menard and Garivier [36]. For the case \(\hat{\mu}_{n}\geq\mu\), we aim to show

\[\mathbb{P}(\exists N\leq n\leq M,d(\hat{\mu}_{n},\mu)\geq\gamma) \leq e^{-N\gamma}.\] (B.17)

We let \(M(\lambda)\) be the log-moment generating function of \(\nu_{\theta}\). Recall that \(\frac{\text{d}\nu_{\theta}}{\text{d}\rho}(x)=\exp(x\theta-b(\theta))\). We use the following properties of one exponential family.

1. \(M(\lambda)=b(\theta+\lambda)-b(\theta)\);
2. \(\text{KL}(\nu_{\theta_{1}},\nu_{\theta})=b(\theta)-b(\theta_{1})+b^{\prime}( \theta_{1})(\theta-\theta_{1})\);
3. \(\mathbb{E}[\nu_{\theta}]=b^{\prime}(\theta)\).

Let \(\mathbb{E}[\nu_{\theta}]=\mu\). Let \(\lambda=\theta_{1}-\theta\), \(z=b^{\prime}(\theta_{1})>\mu\), and \(\gamma=d(z,\mu)\), we have

\[\gamma=d(z,\mu)=\text{KL}(\nu_{\theta_{1}},\nu_{\theta})=\lambda z -M(\lambda).\]

Since \(d(z,\mu)\) is monotone increasing for \(z>\mu\), we obtain \(\lambda>0\). If event \(\{\exists N\leq n\leq M,d(\hat{\mu}_{n},\mu)\geq\gamma\}\) and \(\hat{\mu}_{n}\geq\mu\), one have

\[\hat{\mu}_{n}\geq\mu,\qquad\lambda\hat{\mu}_{n}-M(\lambda)\geq \lambda z-M(\lambda)=\gamma,\qquad\lambda n\hat{\mu}_{n}-nM(\lambda)\geq N\gamma.\]

By Doob's maximal inequality for the exponential martingale \(\exp(\lambda n\hat{\mu}_{n}-nM(\lambda))\),

\[\mathbb{P}(\exists N\leq n\leq M,d(\hat{\mu}_{n},\mu)\geq\gamma) \leq\mathbb{P}(\exists N\leq n\leq M,\lambda n\hat{\mu}_{n}-nM( \lambda)\geq N\gamma)\] \[\leq e^{-N\gamma}.\] (B.18)

Combining above inequality and (B.15), we obtain for \(\hat{\mu}_{n}\geq\mu\)

\[\mathbb{P}(\exists N\leq n\leq M,d(\hat{\mu}_{n},\mu)\geq\gamma) \leq e^{-N(x-\mu)^{2}/(2V_{1})}.\] (B.19)

This completes the proof. 

## Appendix C Proof of Theorems in Section 4

In this proof, we define "one round" as a single iteration of the **While Loop** of Algorithm 2.

Proof of Theorem 4.2.: **Proof of Correctness.** We first show that the best arm is not eliminated by Line 11 for any round \(r\). For any \(l\), let \(\mathcal{E}^{l}\) be defined as follows.

\[\mathcal{E}^{l}=\{1\in S_{r},\forall r\leq l\}.\] (C.1)

**Lemma C.1**.: Line 11 of Algorithm 2 satisfies

\[\sum_{r\geq 1}\mathbb{P}\left(\hat{p}_{1}^{r}\geq\hat{p}_{*}^{r}-\frac{\epsilon _{r}}{4}\ \bigg{|}\ \mathcal{E}^{r}\right)\geq 1-\frac{\delta}{8}.\]

To streamline our presentation, we define \(\ell_{js}=s\), \(\gamma_{js}=(\delta_{j})^{2^{s}}\), and \(\hat{p}_{i}^{js}\) as the \(s\)th updates of parameters \(\ell_{j}\), \(\gamma_{j}\), and \(\hat{p}_{i}^{j}\), respectively, within the second **For Loop**. For any fixed \(j\), we define \(U_{j}(s)\) to be the following set of rounds, where \(\ell_{j}\) remains to be the same value \(s\):

\[U_{j}(s):=\{r=1,2,\ldots:\ell_{j}=s\text{ at round $r$ of Algorithm \ref{thm:j}}\}.\] (C.2)

Then the condition of Line 21 could be represented as

\[\exists i\in S_{j}\text{ and }r\in U_{j}(s),\ \hat{p}_{i}^{js}\geq\hat{p}_{*}^{r}- \frac{\epsilon_{j}}{2}.\]

The following lemma shows that with high probability, Algorithm 2 will not return at Line 22.

**Lemma C.2**.: Line 21 of Algorithm 2 satisfies

\[\mathbb{P}\Bigg{(}\bigcap_{j\geq 1}\bigcap_{s>1}\bigcap_{r\in U_{j}(s)} \bigg{\{}\max_{i\in S_{j}}\hat{p}_{i}^{js}<\hat{p}_{*}^{r}-\frac{\epsilon_{j}} {2}\bigg{\}}\Bigg{)}\geq 1-\frac{3\delta}{16}.\]

Note that Algorithm 2 will return arm 1 at Line 24 if 1: Arm 1 is always maintained in \(S_{r}\), and 2: Algorithm 2 never return at Line 22.

According to Lemma C.1, there is a probability of at least \(1-\delta/8\) that Arm 1 will never be eliminated at Line 11. Given that Arm 1 is never eliminated at Line 11, Lemma C.2 suggests that there is a probability of at least \(1-3\delta/16\) that we will never loop back at Line 22. Hence, with a probability of \(1-\delta/2\), Stage IV will identify the optimal arm. By incorporating the results of Lemma B.1, we find that with a probability exceeding \(1-\delta/2-\delta/2\), which is greater than \(1-\delta\), Algorithm 2 will return the optimal arm.

**Proof of Sample Complexity.** Let \(N^{\prime}\) be the sample complexity of Stage IV. Let \(\mathcal{E}=\cap_{r>1}\mathcal{E}^{r}\). The following lemma shows the sample complexity conditioned on event \(\mathcal{E}\).

**Lemma C.3**.: The expected sample complexity \(N^{\prime}\) conditioned on event \(\mathcal{E}\) has the order

\[\mathbb{E}[N^{\prime}\ |\ \mathcal{E}]=O\bigg{(}\sum_{i>1}\frac{\log\big{(}n/ \delta\log(\Delta_{i}^{-1})\big{)}}{\Delta_{i}^{2}}\bigg{)}.\]

Now, we consider the expected sample complexity if the best arm is eliminated at some round \(r\). We prove the following lemma.

**Lemma C.4**.: The sum of expected sample complexity \(N^{\prime}\) at each loop has the order

\[\sum_{r\geq 1}\mathbb{E}[N^{\prime}\,\mathds{1}\{\mathcal{E}^{r},(\mathcal{E} ^{r+1})^{c}\}]=O\bigg{(}\sum_{i>1}\frac{\log\big{(}n/\delta\log(\Delta_{i}^{-1 })\big{)}}{\Delta_{i}^{2}}\bigg{)}.\]

The number of pulls of all arms in the first three stages is no more than \(\max\{n\sqrt{\log\delta^{-1}},L_{2}\}\). By combining the above results, Lemma C.3 and Lemma C.4 together, we can obtain the following total sample complexity

\[\mathbb{E}[N_{\delta}]=\mathcal{O}\left((\log\delta^{-1})\cdot\log\log\delta ^{-1}+\sum_{i>1}\frac{\log\big{(}n\delta^{-1}\log\Delta_{i}^{-1}\big{)}}{ \Delta_{i}^{2}}\right).\]

Since in the non-asymptotic setting, \(\delta\) is finite. Then

\[\mathbb{E}[N_{\delta}]=\mathcal{O}\left(\sum_{i>1}\frac{\log\big{(}n\log \Delta_{i}^{-1}\big{)}}{\Delta_{i}^{2}}\right).\]

**Proof of Batch Complexity.** Just as we discussed in the proof of sample complexity, we first demonstrate the batch complexity conditioned on the event of \(\mathcal{E}\).

**Lemma C.5**.: Conditional on event \(\mathcal{E}\), Algorithm 2 conducts \(\mathcal{O}(\log(1/\Delta_{2}^{-1}))\) batches in expectation.

Let \(B^{\prime}\) be the number of batches we used in Stage IV. We consider the expected batch complexity if the best arm is eliminated at some round \(r\). We prove the following lemma.

**Lemma C.6**.: The sum of expected batch complexity \(B^{\prime}\) at each loop has the order

\[\sum_{r\geq 1}\mathbb{E}[B^{\prime}\,\mathds{1}\{\mathcal{E}^{r},(\mathcal{ E}^{r+1})^{c}\}]=\mathcal{O}(\log(1/\Delta_{2}^{-1})).\]

By combining Lemma C.5, Lemma C.6, the fact that the first three stages use \(O(\log(1/\delta))\) batches, and \(\delta\) is a constant in non-asymptotic setting, the batch complexity of Algorithm 2 is \(\mathcal{O}(\log(1/\Delta_{2}^{-1}))\). 

Proof of Theorem 4.3.: Let \(\mathcal{E}_{0}\) be the event defined in (B.1) in the proof of Theorem 3.1. From Lemma B.4, if \(\delta\) is sufficiently small and \(\mathcal{E}_{0}\) holds, then Algorithm 2 will return at Stage III. Note that the expected number of pulls in Stage IV is \(\lesssim(\log\delta^{-1})^{2}\). Hence, the expected number of pulls of all arms is no more than \(2(\log\delta^{-1})^{2}\) times. Therefore, for any \(\epsilon^{\prime}>0\)

\[\mathbb{E}[N_{\delta}] \lesssim\alpha T^{*}(\bm{b})\log\delta^{-1}+o(\log(1/\delta))+ \mathds{1}\{\mathcal{E}_{0}^{c}\}2n(\log\delta^{-1})^{2}\] \[\lesssim\alpha T^{*}(\bm{\mu})\log\delta^{-1}+2n.\] (C.3)

Therefore,

\[\lim_{\delta\to 0}\frac{\mathbb{E}_{\bm{\mu}}[N_{\delta}]}{\log\delta^{-1}} \leq\alpha T^{*}(\bm{\mu}),\]

Moreover, there exists some universal constant \(C\), such that the expected number of batches used in Stage IV is \(\lesssim C\log(1/\Delta_{2})\cdot\mathds{1}\{\mathcal{E}_{0}^{c}\}\lesssim o(1)\), where the last inequality is due to Lemma B.3. Form Theorem 3.3, the batch complexity of the first three Stage is \(3+o(1)\). Therefore, the total expected batch complexity is \(3+o(1)\). 

## Appendix D Proof of Supporting Lemmas

The proof of the supporting lemmas requires the following concentration inequalities.

**Lemma D.1**.: [41, Theorem 2.2.6] Let \(X_{1},\dots,X_{k}\in[0,1]\) be independent bounded random variables with mean \(\mu\). Then for any \(\epsilon>0\)

\[\mathbb{P}(\hat{\mu}\geq\mu+\epsilon) \leq\exp\bigg{(}-\frac{k\epsilon^{2}}{2}\bigg{)}\quad\text{and}\] (D.1) \[\mathbb{P}(\hat{\mu}\leq\mu-\epsilon) \leq\exp\bigg{(}-\frac{k\epsilon^{2}}{2}\bigg{)},\] (D.2)

where \(\hat{\mu}=1/k\sum_{t=1}^{k}X_{t}\).

### Proof of Lemma c.1

From Lemma D.1,

\[\mathbb{P}\left(|\hat{p}_{i}^{r}-\mu_{i}|\geq\frac{\epsilon_{r}}{8}\right) \leq 2\exp\bigg{(}-\frac{2d_{r}\epsilon_{r}^{2}}{64}\bigg{)}=\delta_{r}.\]

Applying union bound, we have

\[\mathbb{P}\Bigg{(}\bigcup_{r\geq 1}\bigcup_{i\in[n]}\Big{\{}| \hat{p}_{i}^{r}-\mu_{i}|\geq\frac{\epsilon_{r}}{8}\Big{\}}\Bigg{)} \leq\sum_{r>1}\sum_{i\in[n]}\delta_{r}\] \[\leq\sum_{r>1}\frac{\delta}{40\pi^{2}\cdot r^{2}}\] \[\leq\frac{\delta}{8}.\] (D.3)The aforementioned inequality suggests that, with a probability of at least \(1-\delta/8\), the condition \(|\hat{p}_{i}^{r}-\mu_{i}|\leq\frac{\epsilon_{r}}{8}\) holds true for any \(i\in[n]\) and \(r\geq 1\). Then, for any \(r>1\),

\[\hat{p}_{1}^{r}\geq\mu_{1}-\frac{\epsilon_{r}}{8}\geq\mu_{*}-\frac{\epsilon_{r} }{8}\geq\hat{p}_{*}^{r}-\frac{\epsilon_{r}}{4}.\]

Therefore,

\[\sum_{r\geq 1}\mathbb{P}\left(\hat{p}_{1}^{r}\geq\hat{p}_{*}^{r}-\frac{ \epsilon_{r}}{4}\;\bigg{|}\;\mathcal{E}^{r}\right)\geq 1-\frac{\delta}{8}.\]

### Proof of Lemma c.2

From Lemma D.1,

\[\mathbb{P}\bigg{(}|\hat{p}_{i}^{js}-\mu_{i}|\geq\frac{\epsilon_{j}}{8}\bigg{)} \leq\gamma_{js}=(\delta_{j})^{2^{s}}.\]

Applying union bound, we have

\[\mathbb{P}\bigg{(}\bigcup_{j\geq 1}\bigcup_{s>1}\bigcup_{i\in S _{j}}\left\{|\hat{p}_{i}^{js}-\mu_{i}|\geq\frac{\epsilon_{j}}{8}\right\}\bigg{)}\] \[\leq\sum_{j\geq 1}\sum_{s>1}\left(\frac{\delta}{40\pi^{2}\cdot j^{2 }}\right)^{2^{s}}\] \[\leq\sum_{s>1}\left(\frac{\delta}{8}\right)^{2^{s}}\] \[\leq\frac{\delta}{16}.\] (D.4)

Besides, from (D.3), we obtain

\[\mathbb{P}\Bigg{(}\bigcap_{r\geq 1}\bigcap_{i\in[n]}\left\{|\hat{p}_{i}^{r}- \mu_{i}|\leq\frac{\epsilon_{r}}{8}\right\}\Bigg{)}\geq 1-\frac{\delta}{8}.\] (D.5)

Define events

\[\mathcal{E}_{3}=\cap_{r\geq 1}\cap_{i\in[n]}\{|\hat{p}_{i}^{r}-\mu_{i}|\leq \epsilon_{r}/8\},\]

and

\[\mathcal{E}_{4}=\cap_{j\geq 1}\cap_{s>1}\cap_{i\in S_{j}}\{|\hat{p}_{i}^{js} -\mu_{i}|<\epsilon_{j}/8\}.\]

If \(\mathcal{E}_{3}\) and \(\mathcal{E}_{4}\) truly hold, we have that (1): for any \(j\) and arm \(i\in S_{j}\),

\[\mu_{i}\leq\hat{p}_{i}^{j}+\frac{\epsilon_{j}}{8}\leq\hat{p}_{*}^{j}-\frac{7 \epsilon_{j}}{8}\leq\mu_{*}-\frac{3\epsilon_{j}}{4}\leq\mu_{1}-\frac{3\epsilon _{j}}{4},\]

where the second inequality is due to Line 11 of Algorithm 2; (2): for any fixed \(j\), \(s\), and any \(r\in U_{j}(s)\), where \(U_{j}(s)\) is defined in (C.2) and represents the set of all rounds in which parameter \(\ell_{j}\) is updated for exactly \(s\) times,

\[\hat{p}_{i}^{js}<\mu_{i}+\frac{\epsilon_{j}}{8}\leq\mu_{1}-\frac{5\epsilon_{j} }{8}\leq\hat{p}_{1}^{r}-\frac{\epsilon_{j}}{2}\leq\hat{p}_{*}^{r}-\frac{ \epsilon_{j}}{2}.\]

Therefore, if \(\mathcal{E}_{3}\) and \(\mathcal{E}_{4}\) truly hold, the event \(\hat{p}_{i}^{js}<\hat{p}_{*}^{r}-\frac{\epsilon_{j}}{2}\) consistently holds for all \(j\), \(s\), \(i\in S_{j}\), and \(r\in U_{j}(s)\). It's noteworthy that, according to (D.4), \(\mathbb{P}\big{(}\mathcal{E}_{4}\big{)}\geq 1-\delta/16\), and from (D.5), \(\mathbb{P}(\mathcal{E}_{3})\geq 1-\delta/8\). Therefore,

\[\mathbb{P}\bigg{(}\bigcap_{j\geq 1}\bigcap_{s>1}\bigcap_{r\in U_{j}(s)} \bigg{\{}\max_{i\in S_{j}}\hat{p}_{i}^{js}<\hat{p}_{*}^{r}-\frac{\epsilon_{j}} {2}\bigg{\}}\bigg{)}\geq 1-\frac{\delta}{8}-\frac{\delta}{16}=1-\frac{3\delta}{16}.\]

### Proof of Lemma c.3

We first focus on bounding the number of pulls of arm \(i\) within the first **For Loop**. Define

\[r(i)=\min\bigg{\{}r:\epsilon_{r}<\frac{\Delta_{i}}{2}\bigg{\}}.\]

From Lemma D.1 and the union bound, for \(r\geq r(i)\),

\[\mathbb{P}\bigg{(}\bigg{\{}|\hat{p}_{i}^{r}-\mu_{i}|\geq\frac{ \epsilon_{r(i)}}{8}\bigg{\}}\cup\bigg{\{}|\hat{p}_{1}^{r}-\mu_{1}|\geq\frac{ \epsilon_{r(i)}}{8}\bigg{\}}\bigg{)} \leq 4\exp\bigg{(}-\frac{2d_{r}\epsilon_{r(i)}^{2}}{64}\bigg{)}\] \[\leq 4(\delta_{r})^{r-r(i)}\] \[\leq 10^{r(i)-r}.\] (D.6)

Let \(E_{i}^{r}\) be the event \(|\hat{p}_{i}^{r}-\mu_{i}|\leq\epsilon_{r(i)}/8\) and \(|\hat{p}_{1}^{r}-\mu_{1}|\leq\epsilon_{r(i)}/8\) truly hold at \(r\)-th round. Conditioned on \(E_{i}^{r}\) and \(\mathcal{E}\),

\[\hat{p}_{i}^{r}\leq\mu_{i}+\frac{\epsilon_{r}}{8}\leq\mu_{1}- \Delta_{i}+\frac{\epsilon_{r}}{8}\leq\mu_{1}-\frac{3\epsilon_{r}}{2}\leq\hat{ p}_{1}^{r}-\epsilon_{r}\leq\hat{p}_{*}^{r}-\epsilon_{r},\]

which mean arm \(i\) will be eliminated. Therefore, the total sample cost of arm \(i\) in the first **For Loop** of Algorithm 2 is

\[\sum_{r\leq r_{i}}\frac{32}{\epsilon_{r}^{2}}\log(2/\delta_{r})+ \sum_{r>r(i)}10^{r-r(i)-1}\frac{32}{\epsilon_{r}^{2}}\log(2/\delta_{r})= \mathcal{O}\bigg{(}\frac{\log(1/\delta_{r(i)})}{\epsilon_{r(i)}^{2 }}\bigg{)}\] \[= \mathcal{O}\bigg{(}\frac{\log\big{(}n/\delta\log(\Delta_{i}^{-1}) \big{)}}{\Delta_{i}^{2}}\bigg{)}.\]

Consequently, if we define \(H\) to be the total sample complexity in the first **For Loop** of Algorithm 2. Then we have

\[\mathbb{E}[H]=\mathcal{O}\bigg{(}\sum_{i>1}\frac{\log\big{(}n/ \delta\log(\Delta_{i}^{-1})\big{)}}{\Delta_{i}^{2}}\bigg{)}.\]

Now, we bound the sample complexity within the second **For Loop**. We let \(L_{j}\) be the total number of pulls of arms in \(S_{j}\setminus S_{j+1}\) within the second **For Loop**. We let

\[n_{j}=\min\bigg{\{}s\in\{0,1,2,\cdots\}:\frac{B_{j}}{(\delta_{j} )^{2^{s}}\cdot 2^{s}}\geq H\bigg{\}}.\]

As per Line 16, \(n_{j}\) represents the total count of arm re-pulls in the set \(S_{j}\setminus S_{j+1}\). Consequently, we can establish the following bound for \(L_{j}\).

\[L_{j}\leq(B_{j}-B_{j-1})\sum_{s=0}^{n_{j}}2^{s}\leq B_{j}-B_{j-1}+ \delta_{j}H.\]

where the first inequality is because \(\gamma_{j(s+1)}=\gamma_{js}^{2}\) and we pull the arms in \(S_{j}/S_{j+1}\) for total

\[\sum_{i\in S_{j}\setminus S_{j+1}}\frac{32}{\epsilon_{j}^{2}} \log\bigg{(}\frac{2}{\gamma_{js}}\bigg{)}\leq\sum_{i\in S_{j}\setminus S_{j+1} }\frac{32\cdot 2^{s}}{\epsilon_{j}^{2}}\log\bigg{(}\frac{2}{\delta_{j}} \bigg{)}=(B_{j}-B_{j-1})\cdot 2^{s}\]

times at Line 18 and the last inequality is because for \(n_{j}>1\),

\[\delta_{j}H\geq\delta_{j}\frac{B_{j}}{(\delta_{j})^{2^{n_{j}-1}} \cdot 2^{n_{j}-1}}\geq B_{j}2^{n_{j}+1},\]

where the first inequality is due to the definition of \(n_{j}\). Therefore,

\[\sum_{j\geq 1}L_{j}\leq\sum_{j>1}B_{j}+H\sum_{j>1}\delta_{j}\leq 2H.\]

Now, we conclude that conditioned on event \(\mathcal{E}\), the total expected sample complexity is

\[\mathcal{O}\bigg{(}\sum_{i>1}\frac{\log\big{(}n/\delta\log(\Delta_{i}^{-1}) \big{)}}{\Delta_{i}^{2}}\bigg{)}.\]

### Proof of Lemma c.4

From Lemma D.1,

\[\mathbb{P}\left(|\hat{p}_{i}^{r}-\mu_{i}|\geq\frac{\epsilon_{r}}{2}\right)\leq 2 \exp\bigg{(}-\frac{2d_{r}\epsilon_{r}^{2}}{4}\bigg{)}\leq(\delta_{r})^{4}.\]

Applying union bound, we have

\[\mathbb{P}\left(\bigcup_{i\in S_{r}}\left\{|\hat{p}_{i}^{r}-\mu_ {i}|\geq\frac{\epsilon_{r}}{2}\right\}\right) \leq\sum_{i\in S_{r}}(\delta_{r})^{4}\] \[\leq(\delta_{r})^{3}.\] (D.7)

The aforementioned inequality suggests that, with a probability of at least \(1-(\delta_{r})^{3}\), the condition \(|\hat{p}_{i}^{r}-\mu_{i}|\leq\epsilon_{r}/4\) consistently holds true for any \(i\in S_{r}\). Then,

\[\hat{p}_{1}^{r}\geq\mu_{1}-\frac{\epsilon_{r}}{2}\geq\mu_{*}-\frac{\epsilon_{ r}}{2}\geq\hat{p}_{*}^{r}-\epsilon_{r}.\]

Therefore,

\[\mathbb{P}(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c})\leq(\delta_{r})^{3}.\] (D.8)

For any fixed \(j\), recall the definition of \(U_{j}(s)\) in (C.2). Assume \(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c}\) truly hold and denote \(U_{r}(s)=\{r_{s}^{1},r_{s}^{2},\cdots,r_{s}^{s^{\prime}}\}\) as the rounds where \(\ell_{r}=s\). We note that at \(r_{s}^{l}\)-th round, each arm within the first **For Loop** of Algorithm 2 is pulled at least

\[\frac{32\cdot 4^{s+l}}{\epsilon_{r}^{2}}\log\bigg{(}\frac{2}{\delta_{r}} \bigg{)}\]

times. Besides, each arm within the second **For Loop** is pulled at least

\[\frac{32\cdot 2^{s}}{\epsilon_{r}^{2}}\log\bigg{(}\frac{2}{\delta_{r}} \bigg{)}\]

times. Then, similar to (D.7), for \(r_{s}^{l}\)-th round, we have

\[\mathbb{P}\bigg{(}\cup_{i\in S_{r_{s}^{l}}}\left\{|\hat{p}_{i}^{r_{s}^{l}}- \mu_{i}|\geq\frac{\epsilon_{r}}{4}\right\}\bigg{)}\leq 2\sum_{i\in S_{r_{s}^{l}}} \exp\bigg{(}\frac{-2\epsilon_{r}^{2}}{16}\cdot\frac{32\cdot 4^{s+l}}{ \epsilon_{r}^{2}}\log\bigg{(}\frac{2}{\delta_{r}}\bigg{)}\bigg{)}\leq\sum_{i \in S_{r_{s}^{l}}}(\delta_{r}^{4})^{4^{s+l}}.\]

Then, we apply a union bound over all rounds in \(U_{r}(s)\), we obtain

\[\mathbb{P}\bigg{(}\cup_{l\in[s^{\prime}]}\cup_{i\in S_{r_{s}^{l}}}\left\{| \hat{p}_{i}^{r_{s}^{l}}-\mu_{i}|\geq\frac{\epsilon}{4}\right\}\bigg{)}\leq( \delta_{r}^{3})^{2^{s}}/2.\]

Moreover, if \(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c}\) happens, the best arm is eliminated at \(r\)-th round. Then for any rounds in \(U_{r}(s)\), we have pulled arm 1 for at least

\[\frac{32\cdot 2^{s}}{\epsilon_{r}^{2}}\log\bigg{(}\frac{2}{\delta_{r}} \bigg{)}\]

times in the second **For Loop**. Recall that \(\hat{p}_{i}^{js}\) is the \(s\)th updates of parameter \(\hat{p}_{i}^{j}\) within the second For Loop. From Lemma D.1, we have that

\[\mathbb{P}\bigg{(}\hat{p}_{1}^{rs}\leq\mu_{1}-\frac{\epsilon_{r}}{4}\bigg{)} \leq\exp\bigg{(}-\frac{2\epsilon_{r}^{2}}{16}\cdot\frac{32\cdot 2^{s}}{ \epsilon_{r}^{2}}\log\bigg{(}\frac{2}{\delta_{r}}\bigg{)}\bigg{)}\leq(\delta_{ r}^{3})^{2^{s}}/2.\]

Therefore, if \(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c}\) happens, with probability

\[1-\gamma_{rs}=1-(\delta_{r}^{3})^{2^{r-1}},\] (D.9)

it holds that

\[\cup_{l\in[s^{\prime}]}\cup_{i\in S_{r_{s}^{l}}}\left\{|\hat{p}_{i}^{r_{s}^{l} }-\mu_{i}|\geq\frac{\epsilon}{4}\right\}\text{, and }\hat{p}_{1}^{rs}>\mu_{1}-\frac{ \epsilon}{4},\]and thus for all \(l\in[s^{\prime}]\)

\[\hat{p}_{1}^{rs}\geq\mu_{1}-\frac{\epsilon}{4}\geq\hat{p}_{*}^{r^{l} _{s}}-\frac{\epsilon}{2},\]

which means Algorithm 2 returns at Line 22. Before we continue, we will first show that the number of pulls in the second **For Loop** is lower than the first **For Loop**. Assume the algorithm stops at \(r^{\prime}\)-th round. Let \(s^{\prime}_{j}=\max\{s:B_{r^{\prime}}\gamma_{js}\cdot 2^{s}>B_{j}\}\). The number of pulls for \(S_{j}\setminus S_{j+1}\) at second **For Loop** is at most

\[\sum_{s=1}^{s^{\prime}_{j}}\left(B_{j}-B_{j-1}\right)\cdot 2^{s} \leq\sum_{s=1}^{s^{\prime}_{j}}B_{j}2^{s}\] \[\leq B_{j}\cdot 2^{s^{\prime}_{j}+1}\] \[=2^{2s^{\prime}_{j}+1}\gamma_{js^{\prime}_{j}}\frac{B_{j}}{2^{s^ {\prime}_{j}}\gamma_{js^{\prime}_{j}}}\] \[\leq B_{r^{\prime}}2^{2s^{\prime}_{j}+1}(\delta_{j})^{2^{s^{ \prime}_{j}}}\] \[\leq B_{r^{\prime}}\delta_{j}.\]

Therefore, the total number of pulls within the second **For Loop** is at most

\[\sum_{j\geq 1}\sum_{s=1}^{s^{\prime}_{j}}\left(B_{j}-B_{j-1}\right) \cdot 2^{s}\leq B_{r^{\prime}}\sum_{j>1}\delta_{j}\leq B_{r^{\prime}},\]

which means the number of for the second **For Loop** is lower than the first **For Loop**. Finally, we obtain

\[\mathbb{E}[N^{\prime}\,\mathds{1}\{\mathcal{E}^{r},(\mathcal{E}^ {r+1})^{c}\}] \leq\mathbb{E}\bigg{(}\mathcal{O}\bigg{(}\sum_{s=1}\left((\delta_ {r})^{3}\right)^{2^{s-1}}\cdot\frac{B_{r}}{(\delta_{r})^{2^{s}}2^{s}}\bigg{)} \bigg{)}\] \[=\mathbb{E}[\mathcal{O}(\delta_{r}B_{r})]\] \[=\mathcal{O}\bigg{(}\sum_{i>1}\frac{\delta_{r}\log\left(n/\delta \log(\Delta_{i}^{-1})\right)}{\Delta_{i}^{2}}\bigg{)}.\]

In the first inequality, we used the fact that if the algorithm stops in some rounds in \(U_{r}(s)\), the total number of pulls of all arms is at most \(B_{r}/(\gamma_{js}\cdot 2^{s})+B_{r}/(\gamma_{js}\cdot 2^{s})\), whchi comes from the first and second **For Loop** respectively. Moreover, the factor \(((\delta_{r})^{3})^{2^{s-1}}\) is because from (D.9), if \(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c}\) holds, then Algorithm 2 returns in some rounds in \(U_{r}(s)\) (at Line 22) with probability at least \(1-((\delta_{r})^{3})^{2^{s-1}}\). The last equality is because from Lemma C.3, if \(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c}\) holds, then

\[\mathbb{E}[B_{r}]\leq\mathcal{O}\bigg{(}\sum_{i>1}\frac{\log\left(n/\delta \log(\Delta_{i}^{-1})\right)}{\Delta_{i}^{2}}\bigg{)}.\]

Finally,

\[\sum_{r\geq 1}\mathbb{E}[N^{\prime}\,\mathds{1}\{\mathcal{E}^{r},( \mathcal{E}^{r+1})^{c}\}]=\mathcal{O}\bigg{(}\sum_{i>1}\frac{\log\left(n/ \delta\log(\Delta_{i}^{-1})\right)}{\Delta_{i}^{2}}\bigg{)}.\]

### Proof of Lemma c.5

We note that each round within the **While Loop** costs one batch. Let

\[r(2)=\min\bigg{\{}r:\epsilon_{r}<\frac{\Delta_{2}}{2}\bigg{\}}.\]

Let \(E^{r}\) be the event

\[\bigcap_{i>1}\left\{\left\{|\hat{p}_{i}^{r}-\mu_{i}|\leq\frac{ \epsilon_{r(2)}}{8}\right\}\bigcap\left\{|\hat{p}_{1}^{r}-\mu_{1}|\leq\frac{ \epsilon_{r(2)}}{8}\right\}\right\}.\]Conditioned on \(E^{r}\) and \(\mathcal{E}\),

\[\hat{p}_{i}^{r}\leq\mu_{i}+\frac{\epsilon_{r(2)}}{8}\leq\mu_{1}-\Delta_{i}-\frac {\epsilon_{r(2)}}{8}\leq\hat{p}_{1}^{r}-\epsilon_{r(2)}\leq\hat{p}_{*}^{r}- \epsilon_{r(2)},\]

which means all sub-optimal arms have been eliminated and the algorithm returns. From Lemma D.1 and the union bound, for \(r\geq r(2)\),

\[\mathbb{P}((E^{r})^{c})\leq 4n\exp\bigg{(}-\frac{2d_{r}\epsilon_{r(i)}^{2}}{64} \bigg{)}\leq 4n(\delta_{r})^{r-r(i)}\leq 10^{r(i)-r}.\] (D.10)

Therefore, the total batch cost is

\[r_{2}+\sum_{r\geq r_{2}}\frac{1}{10^{r-r_{2}}}=O(r_{2})=O\left(\log\left(\frac {1}{\Delta_{2}}\right)\right).\]

This completes the proof.

### Proof of Lemma c.6

The proof of this lemma is similar to that of Lemma C.4. we have the following results.

1: From (D.8), we have

\[\mathbb{P}(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c})\leq(\delta_{r})^{3}.\]

2: From (D.9), we have if \(\mathcal{E}^{r}\) and \((\mathcal{E}^{r+1})^{c}\) truly hold, then with fixed \(\ell_{s}\), Algorithm 2 returns at Line 22 with probability

\[1-(\delta_{r}^{3})^{2^{s-1}}.\] (D.11)

We first compute the size of \(U_{r}(s)\). From Algorithm 2, we know that the arm kept in the set \(S_{r}\) will be pulled \(4\) times larger compared to \((r-1)\)-th round. Besides, we update \(\ell_{r}\) to \(s+1\), if the number of pulls exceeds \(B_{r}/((\delta_{r})^{2^{s}}\cdot 2^{s})\) (Line 16 of Algorithm 2). It is easy to see after \(\log_{4}n\) rounds, the number of pulls of any arm exceeds \(B_{r}\) and then after \(\ln\frac{1}{(\delta_{r})^{2^{s}}\cdot 2^{s}}\) rounds, the number of pulls of single arm exceeds \(B_{r}/((\delta_{r})^{2^{s}}\cdot 2^{s})\). Therefore, the size of \(U_{r}(s)\) is at most \(\ln\frac{1}{(\delta_{r})^{2^{s}}\cdot 2^{s}}+\ln n\). We let \(U\) be the total number of rounds used. Then, we obtain

\[\mathbb{E}[U\cdot\mathds{1}\{\mathcal{E}^{r},(\mathcal{E}^{r+1}) ^{c}\}] \leq r\cdot\mathbb{P}(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c})+ \mathbb{E}\bigg{(}\mathcal{O}\bigg{(}\sum_{s=1}\left((\delta_{r})^{3}\right)^ {2^{s-1}}\cdot\left(\ln n+\ln\frac{1}{(\delta_{r})^{2^{s}}\cdot 2^{s}} \right)\bigg{)}\bigg{)}\] \[\leq r\mathbb{P}(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c})+\delta_{r}.\]

We have shown in Lemma C.5, \(\sum_{r>1}r\mathbb{P}(\mathcal{E}^{r},(\mathcal{E}^{r+1})^{c})=O(\log(1/ \Delta_{2}))\). Therefore, the total number of rounds is

\[\sum_{r\geq 1}^{\infty}\mathbb{E}[U\cdot\mathds{1}\{\mathcal{E}^{r},( \mathcal{E}^{r+1})^{c}\}]=O(\log(1/\Delta_{2})),\]

which completes the proof.

## Appendix E Experiments

In this section, we compare our algorithms Tri-BBAI and Opt-BBAI with Track-and-Stop [17], Top-k \(\delta\)-Elimination [22], ID-BAI [23] and CollabTopM [32] under bandit instances with Bernoulli rewards. All the experiments are repeated in \(1000\) trials. We perform all computations in Python on R9 5900HX for all our experiments. The implementation of this work can be found at https://github.com/panxulab/Optimal-Batched-Best-Arm-Identification

Data generation.For all experiments in this section, we set the number of arms \(n=10\), where each arm has Bernoulli reward distribution with mean \(\mu_{i}\) for \(i\in[10]\). More specifically, the mean rewards are generated by the following two cases.

* Uniform: The best arm has \(\mu_{1}=0.5\), and the mean rewards of the rest of the arms follow uniform distribution over \([0.2,0.4]\), i.e., \(\mu_{i}\) is uniformly generated from \([0.2,0.4]\) for \(i\in[n]\setminus\{1\}\).
* Normal: The best arm has \(\mu_{1}=0.6\), and the mean rewards of the rest of the arms are first generated from normal distribution \(\mathcal{N}(0.2,0.2)\) and then projected to the interval \([0,0.4]\).

Implementation details.The hyperparameters of all methods are chosen as follows.

* Track-and-Stop [17] is a fully sequential algorithm and thus the only parameter that needs to be set is the \(\beta(t)\) function in the Chernoff's stopping condition (similar to Stage III of Algorithm 1). Note that the theoretical value of \(\beta(t)\) in Track-and-Stop [17] is of the same order as presented in our Theorem 3.1. However, they found that a smaller value works better in practice. Therefore, we follow their experiments to set \(\beta=\log\left((\log(t)+1)/\delta\right)\).
* Top-\(k\)\(\delta\)-Elimination is a batched algorithm that eliminates the arms in batches. It has two parameters \(\epsilon\) and \(\delta\). In our experiments, we fix \(\epsilon=0.1\).
* ID-BAI [23] is designed to identify the best arm among a set of bandit arms with optimal instance-dependent sample complexity. We use the same algorithm setting of the original paper in our experiments.
* CollabTopM [32] is the algorithm to identify the Top-\(m\) arms within a multi-agent setting. We set the \(m\) as 1 and the agents \(K\) as 1.
* For Tri-BBAI and Opt-BBAI, we set \(\alpha=1.001\)7, and \(\epsilon=0.01\). We use the same \(\beta(t)\) function for Chernoff's stopping condition as in Track-and-Stop. Moreover, for the lengths of the batches, we set \(L_{1}\), \(L_{2}\) and \(L3\) to be the value calculated by Theorem 3.1.

Footnote 7: From Theorem 3.1, we can select \(\alpha\) to be any constant within the range \((1,e/2)\). To optimize the convergence rate of \(\mathbb{E}[N_{\delta}]/(\log(1/\delta)T^{*}(\bm{\mu}))\), we set \(\alpha\) slightly above 1, specifically we choose \(\alpha=1.001\).

Results.We present a comprehensive comparison on the sample complexities and batch complexities of our algorithms and baseline algorithms in Tables 3 and 4. Notably, our algorithms Tri-BBAI and Opt-BBAI, also including Top-K \(\delta\) Elimination and CollabTopM, require significantly fewer batches than Track-and-Stop. Furthermore, the sample complexity of Tri-BBAI and Opt-BBAI is significantly lower than that of Top-K \(\delta\) Elimination, ID-BAI and CollabTopM. Additionally, the sample complexity of Tri-BBAI and Opt-BBAI is comparable to Track and Stop when \(\delta\) is large, and it is at most 3.6 times greater than Track and Stop when \(\delta\) is very small. Additionally, we also provide the runtime comparison in Tables 3 and 4. Our algorithms have a significantly reduced runtime compared to Track-and-Stop, achieving nearly \(1000\times\) speedup.

\begin{table}
\begin{tabular}{l l l l l l l} \hline \hline Dataset & \(\delta\) & Algorithm & Sample Complexity & Batch Complexity & Runtime (s) & Recall \\ \hline \multirow{9}{*}{\(1\times 10^{-1}\)} & Track-and-Stop & \(668.49\pm 298.62\) & \(668.49\pm 298.62\) & \(275.94\pm 135.67\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(32472\pm 0\) & \(2\pm 0.01\) & \(0.04\pm 0.01\) & 100\% \\  & 1ID-BAI & \(120427\pm 0\) & - & \(0.136\pm 0.003\) & 100\% \\  & CollabTopM & \(27290.205\pm 4806.435\) & \(3.001\pm 0.031\) & \(0.032\pm 0.006\) & 100\% \\  & Tri-BBAI & \(365.232\pm 21.85\) & \(3.99\pm 0.11\) & \(1.02\pm 0.23\) & 90.1\% \\  & Opt-BBAI & \(1220.30\pm 586.92\) & \(4.89\pm 1.01\) & \(0.95\pm 0.22\) & 100\% \\ \hline \multirow{9}{*}{\(1\times 10^{-2}\)} & Track-and-Stop & \(977.23\pm 371.61\) & \(977.23\pm 371.61\) & \(381.85\pm 146.10\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(52734\pm 0\) & \(2\pm 0.01\) & \(0.07\pm 0.01\) & 100\% \\  & ID-BAI & \(146948\pm 0\) & - & \(0.167\pm 0.003\) & 100\% \\  & CollabTopM & \(35449.181\pm 553.0938\) & \(3.0\pm 0\) & \(0.042\pm 0.006\) & 100\% \\  & Tri-BBAI & \(1114.41\pm 98.68\) & \(3.96\pm 0.19\) & \(1.05\pm 0.19\) & 99.3\% \\  & Opt-BBAI & \(1929.65\pm 064.11\) & \(4.64\pm 1.00\) & \(1.02\pm 0.18\) & 100\% \\ \hline \multirow{9}{*}{\(1\times 10^{-3}\)} & Track-and-Stop & \(1468.15\pm 448.88\) & \(1468.15\pm 448.88\) & \(624.82\pm 219.14\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(72996\pm 0\) & \(2\pm 0.01\) & \(0.10\pm 0.01\) & 100\% \\  & ID-BAI & \(173478\pm 0\) & - & \(0.197\pm 0.006\) & 100\% \\  & CollabTopM & \(43457.489\pm 5519.169\) & \(3.0\pm 0\) & \(0.051\pm 0.006\) & 100\% \\  & Tri-BBAI & \(2005.07\pm 175.13\) & \(3.88\pm 0.33\) & \(1.09\pm 0.13\) & 100\% \\  & Opt-BBAI & \(2781.41\pm 658.40\) & \(4.37\pm 0.98\) & \(1.01\pm 0.14\) & 100\% \\ \hline \multirow{9}{*}{Uniform} & Track-and-Stop & \(1769.72\pm 467.36\) & \(1769.72\pm 467.36\) & \(743.96\pm 196.39\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(93258\pm 0\) & \(2\pm 0.01\) & \(0.12\pm 0.01\) & 100\% \\  & ID-BAI & \(199999\pm 0\) & - & \(0.257\pm 0.005\) & 100\% \\  & CollabTopM & \(51823.644\pm 6379.803\) & \(3.0\pm 0\) & \(0.061\pm 0.007\) & 100\% \\  & Tri-BBAI & \(2989.96\pm 274.36\) & \(3.81\pm 0.39\) & \(1.10\pm 0.13\) & 100\% \\  & Opt-BBAI & \(3752.31\pm 379.60\) & \(4.20\pm 0.99\) & \(1.00\pm 0.12\) & 100\% \\ \hline \multirow{9}{*}{\(1\times 10^{-5}\)} & Track-and-Stop & \(2135.09\pm 535.01\) & \(2135.09\pm 535.01\) & \(821.59\pm 137.83\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(113520\pm 0\) & \(2\pm 0.01\) & \(0.15\pm 0.01\) & 100\% \\  & ID-BAI & \(226528\pm 0\) & - & - & \(0.257\pm 0.005\) & 100\% \\  & CollabTopM & \(6063.887\pm 6367.285\) & \(3.0\pm 0\) & \(0.071\pm 0.007\) & 100\% \\  & Tri-BBAI & \(4066.34\pm 381.41\) & \(3.74\pm 0.44\) & \(1.11\pm 0.13\) & 100\% \\  & Opt-BBAI & \(4799.49\pm 852.00\) & \(4.04\pm 0.96\) & \(1.03\pm 0.12\) & 100\% \\ \hline \multirow{9}{*}{\(1\times 10^{-6}\)} & Track-and-Stop & \(2517.93\pm 561.65\) & \(2517.93\pm 561.65\) & \(1085.30\pm 202.72\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(133782\pm 0\) & \(2\pm 0.01\) & \(0.18\pm 0.01\) & 100\% \\  & ID-BAI & \(253049\pm 0\) & - & \(0.288\pm 0.006\) & 100\% \\  & CollabTopM & \(67958.078\pm 6730.415\) & \(3.0\pm 0\) & \(0.081\pm 0.008\) & 100\% \\  & Tri-BBAI & \(5185.75\pm 458.82\) & \(3.65\pm 0.48\) & \(1.12\pm 0.12\) & 100\% \\  & Opt-BBAI & \(5871.33\pm 951.60\) & \(3.90\pm 0.93\) & \(1.07\pm 0.14\) & 100\% \\ \hline \multirow{9}{*}{\(1\times 10^{-7}\)} & Track-and-Stop & \(2942.67\pm 598.77\) & \(2942.67\pm 598.77\) & \(1232.91\pm 192.82\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(154044\pm 0\) & \(2\pm 0.01\) & \(0.21\pm 0.01\) & 100\% \\  & ID-BAI & \(279579\pm 0\) & - & \(0.317\pm 0.006\) & 100\% \\  & CollabTopM & \(76672.155\pm 700.211\) & \(3.0\pm 0\) & \(0.090\pm 0.008\) & 100\% \\  & Tri-BBAI & \(6334.49\pm 613.88\) & \(3.58\pm 0.49\) & \(1.12\pm 0.12\) & 100\% \\  & Opt-BBAI & \(7055.16\pm 1059.50\) & \(3.82\pm 0.93\) & \(1.11\pm 0.16\) & 100\% \\ \hline \multirow{9}{*}{\(1\times 10^{-8}\)} & Track-and-Stop & \(3347.02\pm 535.16\) & \(3347.02\pm 535.16\) & \(1464.84\pm 359.57\) & 100\% \\  & Top-k \(\delta\)-Elimination & \(174306\pm 0\) & \(2\pm 0.01\) & \(0.23\pm 0.01\) & 100\% \\

\begin{table}
\begin{tabular}{l l l l l l l} \hline Dataset & \(\delta\) & Algorithm & Sample Complexity & Batch Complexity & Runtime (s) & Recall \\ \hline \multirow{7}{*}{\(1\times 10^{-1}\)} & \multirow{7}{*}{\(1\times 10^{-1}\)} & Track-and-Stop & \(305.21\pm 183.51\) & \(305.21\pm 183.51\) & \(154.42\pm 64.49\) & 100\% \\  & & Top-\(\delta\)-Elimination & \(32472.0\pm 0\) & \(2\pm 0.01\) & \(0.04\pm 0.01\) & 100\% \\  & & ID-BAI & \(120427\pm 0\) & - & \(0.145\pm 0.012\) & 100\% \\  & & CollabTopM & \(11834.089\pm 2208.691\) & \(2.888\pm 0.315\) & \(0.015\pm 0.003\) & 100\% \\  & & Tri-BBAI & \(334.49\pm 32.80\) & \(3.89\pm 0.32\) & \(1.08\pm 0.16\) & 98.3\% \\  & & Opt-BBAI & \(793.23\pm 358.15\) & \(4.18\pm 0.79\) & \(1.05\pm 0.16\) & 100\% \\ \hline \multirow{7}{*}{\(1\times 10^{-2}\)} & \multirow{7}{*}{\(1\times 10^{-2}\)} & Track-and-Stop & \(409.95\pm 206.28\) & \(490.95\pm 206.28\) & \(182.42\pm 81.61\) & 100\% \\  & & Top-\(\delta\)-Elimination & \(52734\pm 0\) & \(2\pm 0.01\) & \(0.07\pm 0.01\) & 100\% \\  & & ID-BAI & \(146948\pm 0\) & - & \(0.171\pm 0.011\) & 100\% \\  & & CollabTopM & \(16145.218\pm 2255.120\) & \(2.933\pm 0.250\) & \(0.021\pm 0.004\) & 100\% \\  & & Tri-BBAI & \(893.05\pm 121.47\) & \(3.62\pm 0.48\) & \(1.11\pm 0.11\) & 100\% \\  & & Opt-BBAI & \(1236.33\pm 381.17\) & \(3.74\pm 0.71\) & \(1.11\pm 0.13\) & 100\% \\ \hline \multirow{7}{*}{\(1\times 10^{-3}\)} & \multirow{7}{*}{\(1\times 10^{-3}\)} & Track-and-Stop & \(699.18\pm 198.64\) & \(699.18\pm 198.64\) & \(264.66\pm 116.82\) & 100\% \\  & & Top-\(\delta\)-Elimination & \(72996\pm 0\) & \(2\pm 0.01\) & \(0.10\pm 0.01\) & 100\% \\  & & ID-BAI & \(173478\pm 0\) & - & \(0.204\pm 0.013\) & 100\% \\  & & CollabTopM & \(20414.549\pm 2277.714\) & \(2.960\pm 0.195\) & \(0.027\pm 0.004\) & 100\% \\  & & Tri-BBAI & \(1532.76+201.18\) & \(3.37\pm 0.48\) & \(1.13\pm 0.10\) & 100\% \\  & & Opt-BBAI & \(1747.15\pm 389.65\) & \(3.43\pm 0.58\) & \(1.07\pm 0.10\) & 100\% \\ \hline \multirow{7}{*}{Normal} & \multirow{7}{*}{\(1\times 10^{-4}\)} & Track-and-Stop & \(833.08\pm 234.148\) & \(833.08\pm 231.90\) & \(315.10\pm 91.15\) & 100\% \\  & & Top-\(\delta\)-Elimination & \(93258\pm 0\) & \(2\pm 0.01\) & \(0.12\pm 0.01\) & 100\% \\  & & ID-BAI & \(199999\pm 0\) & - & \(0.236\pm 0.015\) & 100\% \\  & & CollabTopM & \(24673.111\pm 2584.898\) & \(2.962\pm 0.191\) & \(0.032\pm 0.005\) & 100\% \\  & & Tri-BBAI & \(2141.11+282.37\) & \(3.20\pm 0.40\) & \(1.13\pm 0.08\) & 100\% \\  & & Opt-BBAI & \(2263.174\pm 405.72\) & \(3.19\pm 0.42\) & \(1.06\pm 0.08\) & 100\% \\ \hline \multirow{7}{*}{\(1\times 10^{-5}\)} & \multirow{7}{*}{\(1\times 10^{-5}\)} & Track-and-Stop & \(972.75\pm 245.18\) & \(972.75\pm 245.18\) & \(336.78\pm 74.03\) & 100\% \\  & & Top-\(\delta\)-Elimination & \(113520\pm 0\) & \(2\pm 0.01\) & \(0.15\pm 0.01\) & 100\% \\  & & ID-BAI & \(226528\pm 0\) & - & \(0.269\pm 0.044\) & 100\% \\  & & CollabTopM & \(29081.141\pm 2323.105\) & \(2.982\pm 0.132\) & \(0.039\pm 0.005\) & 100\% \\  & & Tri-BBAI & \(2838.36\pm 353.12\) & \(3.09\pm 0.28\) & \(1.14\pm 0.08\) & 100\% \\  & & Opt-BBAI & \(2881.61\pm 430.05\) & \(3.08\pm 0.27\) & \(1.09\pm 0.09\) & 100\% \\ \hline \multirow{7}{*}{\(1\times 10^{-6}\)} & \multirow{7}{*}{\(1\times 10^{-6}\)} & Track-and-Stop & \(1122.53\pm 308.73\) & \(1122.53\pm 308.73\) & \(468.14\pm 138.87\) & 100\% \\  & & Top-\(\delta\)-Elimination & \(133782\pm 0\) & \(2\pm 0.01\) & \(0.17\pm 0.01\) & 100\% \\  & & ID-BAI & \(253049\pm 0\) & - & \(0.312\pm 0.038\) & 100\% \\  & & CollabTopM & \(33386.52\pm 2133.062\) & \(2.987\pm 0.113\) & \(0.043\pm 0.005\) & 100\% \\  & & Tri-BBAI & \(3516.152\pm 467.48\) & \(3.03\pm 0.18\) & \(1.14\pm 0.08\) & 100\% \\  & & Opt-BBAI & \(3565.59\pm 477.73\) & \(3.04\pm 0.20\) & \(1.15\pm

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: The main claims presented in the abstract and introduction accurately represent the contributions and scope of the paper. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: See the discussion in Section 5. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes]Justification: We provide the full set of assumptions and complete proofs. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer:[Yes] Justification: We include all information needed to reproduce the main experimental results in Appendix E. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?Answer:[Yes] Justification: We have uploaded my source and will make the full code public if this work gets accepted. Guidelines:

* The answer NA means that paper does not include experiments requiring code.
* Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).
* The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.
* The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.
* At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).
* Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer:[Yes] Justification: We have included all the test details in Appendix E. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer:[Yes] Justification: We report the error range in Tables 3 and 4. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) * The assumptions made should be given (e.g., Normally distributed errors).

* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: We state all information on the computer resources in Appendix E. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: The research conducted in the paper conforms, in every respect, to the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA]. Justification: There is no societal impact of the work performed. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: The paper poses no such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licensees for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [NA]. Justification: The paper does not use existing assets. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset. * For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.

* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: Our paper does not release new assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA]. Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.