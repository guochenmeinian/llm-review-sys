# Efficient Policy Adaptation with Contrastive Prompt Ensemble for Embodied Agents

 Wonje Choi, Woo Kyung Kim, SeungHyun Kim, Honguk Woo

Department of Computer Science and Engineering

Sungkyunkwan University

{wjchoi1995, kwk2696, kimsh571, hwoo}@skku.edu

Honguk Woo is the corresponding author.

###### Abstract

For embodied reinforcement learning (RL) agents interacting with the environment, it is desirable to have rapid policy adaptation to unseen visual observations, but achieving zero-shot adaptation capability is considered as a challenging problem in the RL context. To address the problem, we present a novel contrastive prompt ensemble (ConPE) framework which utilizes a pretrained vision-language model and a set of visual prompts, thus enabling efficient policy learning and adaptation upon a wide range of environmental and physical changes encountered by embodied agents. Specifically, we devise a guided-attention-based ensemble approach with multiple visual prompts on the vision-language model to construct robust state representations. Each prompt is contrastively learned in terms of an individual domain factor that significantly affects the agent's egocentric perception and observation. For a given task, the attention-based ensemble and policy are jointly learned so that the resulting state representations not only generalize to various domains but are also optimized for learning the task. Through experiments, we show that ConPE outperforms other state-of-the-art algorithms for several embodied agent tasks including navigation in AI2THOR, manipulation in egocentric-Metaworld, and autonomous driving in CARLA, while also improving the sample efficiency of policy learning and adaptation.

## 1 Introduction

In the literature of vision-based reinforcement learning (RL), with the advance of unsupervised techniques and large-scale pretrained models for computer vision, the decoupled structure, in which visual encoders are separately trained and used later for policy learning, has gained popularity [1, 2, 3]. This decoupling demonstrates high efficiency in low data regimes with sparse reward signals, compared to end-to-end RL. In this regard, several works on adopting the decoupled structure to embodied agents interacting with the environment were introduced [4, 5], and specifically, pretrained vision models (e.g., ResNet in [6]) or vision-language models (e.g., CLIP in [7, 8]) were exploited for visual state representation encoders. Yet, it is non-trivial to achieve zero-shot adaptation to visual domain changes in the environment with high diversity and non-stationarity, which are inherent for embodied agents. It was rarely investigated how to optimize those popular large-scale pretrained models to ensure the zero-shot capability of embodied agents.

Embodied agents have several environmental and physical properties, such as egocentric camera position, stride length, and illumination, which are _domain factors_ making significant changes in agents' perception and observation. In the target (deployment) environment with uncalibrated settings on those domain factors, RL policies relying on pretrained visual encoders remain vulnerable to domain changes.

Figure 1 provides an example of egocentric visual domain changes experienced by embodied agents due to different camera positions. When policies learned in the source environment are applied to the target environment, zero-shot performance can be significantly degraded, unless the visual encoder could adapt not only to environmental differences but also to the physical diversity of agents. In this paper, we investigate RL policy adaptation techniques for embodied agents to enable zero-shot adaptation to domain changes, by leveraging prompt-based learning for pretrained models in the decoupled RL structure. To this end, we present ConPE, a novel contrastive prompt ensemble framework that uses the CLIP vision-language model as the visual encoder, and facilitates dynamic adjustments of visual state representations against domain changes through an ensemble of contrastively learned visual prompts. In ConPE, the ensemble employs attention-based state composition on multiple visual embeddings from the same input observation, where each embedding corresponds to a state representation individually prompted for a specific domain factor. Specifically, the cosine similarity between an input observation and its respective prompted embeddings is used to calculate attention weights effectively.

Through experiments, we demonstrate the benefits of our approach. First, RL policies learned via ConPE achieve competitive zero-shot performance upon a wide variety of egocentric visual domain variations for several embodied agent tasks, such as navigation tasks in AI2THOR [9], vision-based robot manipulation tasks in egocentric-Metaworld, and autonomous driving tasks in CARLA [10]. For instance, the policy via ConPE outperforms EmbCLIP [7] in zero-shot performance by 20.7% for unseen target domains in the AI2THOR object navigation. Second, our approach achieves high sample-efficiency in the decoupled RL structure. For instance, ConPE requires less than 50.0% and 16.7% of the samples compared to ATC [1] and 60% and 50% of the samples compared to EmbCLIP to achieve comparable performance in seen and unseen target domains in the AI2THOR object navigation.

In the context of RL, our work is the first to explore policy adaptation using visual prompts for embodied agents, achieving superior zero-shot performance and high sample-efficiency. The main contributions of our work are as follows.

* We present a novel ConPE framework with an ensemble of visual contrastive prompts, which enables zero-shot adaptation for vision-based embodied RL agents.
* We devise visual prompt-based contrastive learning and guided-attention-based prompt ensemble algorithms to represent task-specific information in the CLIP embedding space.
* We experimentally show that policies via ConPE achieve comparable or superior zero-shot performance, compared to other state-of-the-art baselines, for several tasks. We also demonstrate high sample-efficiency in policy learning and adaptation.
* We create the datasets with various visual domains in AI2THOR, egocentric-Metaworld and CARLA, and make them publicly accessible for further research on RL policy adaptation.

## 2 Problem Formulation

In RL formulation, a learning environment is defined as a Markov decision process (MDP) of \((S,A,\mathcal{P},R)\) with state space \(s\in S\), action space \(a\in A\), transition probability \(\mathcal{P}:S\times A\to S\) and reward function \(R:S\times A\rightarrow\mathbb{R}\). The objective of RL is to find an optimal policy \(\pi^{*}:S\to A\) maximizing the sum of discounted rewards. For embodied agents, states might not be fully observable, and the environment is represented by a partially observable MDP (POMDP) of a tuple \((S,A,\mathcal{P},R,\Omega,\mathcal{O})\) with an observation space \(o\in\Omega\) and a conditional observation probability [11]\(\mathcal{O}:S\times A\rightarrow\Omega\).

Given visual domains in the dynamic environment, we consider policy adaptation to find the optimal policy that remains invariant across the domains or is transferable to some target domain, where each domain is represented by a POMDP and domain changes are formulated by different \(\mathcal{O}\). We denote domains as \(D=(\Omega,\mathcal{O})\). Aiming to enable zero-shot adaptation to various domains, we formulate

Figure 1: Visual Domain Changes of Embodied Agents

the policy adaptation problem as finding the optimal policy \(\pi^{*}\) such that

\[\pi^{*}=\operatorname*{argmax}_{\pi}\left[\operatorname*{\mathbb{E}}_{D\sim p(D)} \left[\sum_{t=1}^{\infty}\gamma^{t}R(s_{t},\pi(o_{t}))\right]\right]\] (1)

where \(p(D)\) is a given domain distribution and \(\gamma\) is a discount factor of the environment.

For embodied agents, the same state can be differently observed depending on the configuration of properties such as egocentric camera position, stride length, illumination, and object style. We refer to such a property causing domain changes in the environment as a _domain factor_. Practical scenarios often involve the interplay of multiple domain factors in the environment.

## 3 Our Approach

### Framework Structure

To enable zero-shot policy adaptation to unseen domains, we develop the ConPE framework consisting of (i) prompt-based contrastive learning with the CLIP visual encoder, (ii) guided-attention-based prompt ensemble, and (iii) zero-shot policy deployment, as illustrated in Figure 2. The capability of the CLIP visual encoder is enhanced using multiple visual prompts that are contrastively learned on expert demonstrations for several domain factors. This establishes the visual prompt pool in (i). Then, the prompts are used to train the guided-attention-based ensemble with the environment in (ii). To enhance learning efficiency and interpretability of attention weights, we use the cosine similarity of embeddings. The attention module and policy are jointly learned for a specific task so that resulting state representations tend to generalize across various domains and be optimized for task learning. In deployment, a non-stationary environment where its visual domain varies according to the environment conditions and agent physical properties is considered, and the zero-shot performance is evaluated in (iii).

### Prompt-based Contrastive Learning

To construct domain-invariant representations with respect to a specific domain factor for egocentric perception data, we adopt several contrastive tasks for visual prompt learning, which can be learned on a few expert demonstrations. For this, we use a visual prompt

\[p^{v}=[e_{1}^{v},e_{2}^{v},...,e_{u}^{v}],\ e_{i}^{v}\in\mathbb{R}^{d}\] (2)

where \(e_{i}^{v}\) is a continuous learnable vector with the image patch embedding dimension \(d\) (e.g., 768 for CLIP visual encoder) and \(u\) is the length of a visual prompt. Let a pretrained model \(\mathcal{T}_{\phi}\) parameterized by \(\phi\) maps observations \(o\in\Omega\) to the embedding space \(\mathcal{Z}\). With a contrast function \(P:\Omega\times\Omega\rightarrow\{0,1\}\)[1, 2, 12] to discriminate whether an observation pair is positive or not,

Figure 2: ConPE Framework. The CLIP visual encoder is enhanced offline via (i) prompt-based contrastive learning that generates the visual prompt pool, and a policy is learned online by (ii) guided-attention-based prompt ensemble that uses the prompt pool. In (iii) zero-shot deployment, the policy is immediately evaluated upon domain changes.

consider an \(m\)-sized batch of observation pairs \(\mathcal{B}_{P}=\{(o_{i},o^{\prime}_{i})\}_{i\leq m}\) containing one positive pair \(\{(o_{k},o^{\prime}_{k})|P(o_{k},o^{\prime}_{k})=1\}\) for some \(k\leq m\). Then, we enhance the capability of \(\mathcal{T}_{\phi}\) by learning a visual prompt \(p^{v}\) through contrastive learning, where the contrastive loss function [13] is defined as

\[\mathcal{L}_{\text{CON}}(p^{v},\mathcal{B}_{P})=-\log\left(\frac{S(\mathcal{T }_{\phi}(o_{k},p^{v}),\mathcal{T}_{\phi}(o^{\prime}_{k},p^{v}))}{\sum_{i\neq k} S(\mathcal{T}_{\phi}(o_{i},p^{v}),\mathcal{T}_{\phi}(o^{\prime}_{i},p^{v}))} \right),\;S(x,y)=\frac{1}{\lambda}\exp\left(\frac{\langle x,y\rangle}{\|x\|\|y \|}\right).\] (3)

As in [14], for latent vectors \(x,\;y\in\mathcal{Z}\), their similarity in the embedding space \(\mathcal{Z}\) is calculated by \(S(x,y)\), where \(\lambda\) is a hyperparameter. By conducting the prompt-based contrastive learning on \(n\) different domain factors, we obtain a visual prompt pool

\[\mathbf{p}^{v}=[p_{1}^{v},p_{2}^{v},...,p_{n}^{v}].\] (4)

Through this process, each visual prompt in \(\mathbf{p}^{v}\) encapsulates domain-invariant knowledge pertinent to its respective domain factor.

### Guided-Attention-based Prompt Ensemble

To effectively integrate individual prompted embeddings from multiple visual prompts into a task-specific state representation, we devise a guided-attention-based prompt ensemble structure, as shown in Figure 3 where the attention weights on the embeddings are dynamically computed via the attention module \(\mathcal{G}\) for each observation.

Given observation \(o\) and the learned visual prompt pool \(\mathbf{p}^{v}\), an image embedding \(z_{0}=\mathcal{T}_{\phi}(o)\) and prompted embeddings \(\mathbf{z}=[z_{1}=\mathcal{T}_{\phi}(o,p_{1}^{v}),...,z_{n}]\) are calculated. Then, \(z_{o}\) and \(\mathbf{z}\) are fed to the attention module \(\mathcal{G}\), where attention weights \(\omega_{i}\) for each prompted embedding \(z_{i}\) are optimized. Since directly computing the attention weights using \(z_{0}\) and \(\mathbf{z}\) is prone to have an uninterpretable local optima, we introduce a guidance score \(g_{i}\) based on the cosine similarity between the input image and visual prompted image embeddings in \(\mathcal{Z}\), i.e., \(g_{i}=\frac{\langle z_{0},z_{i}\rangle}{\|z_{0}\|\|z_{i}\|}\). Given that larger \(g_{i}\) signifies a stronger conformity of an observation to the domain factor relevant to the prompted embedding \(z_{i}\), we use \(g_{i}\) to steer the attention weights, aiming to not only improve learning efficiency but also provide interpretability. With guidance \(g_{i}\), we compute the attention weights \(\omega_{i}\) by

\[\omega_{i}=\frac{\text{exp}(u_{i}/\tau)}{\sum_{k}\text{exp}(u_{k}/\tau)},\;\; \;u_{i}=\frac{\langle z_{0},k_{i}\rangle}{\sqrt{d}}g_{i}\] (5)

Figure 3: Guided-Attention-based Prompt Ensemble. The cosine similarity-guided attention module \(\mathcal{G}\) yields task-specific state representations from multiple prompted embeddings and is learned with a policy network \(\pi\).

where \(k_{i}\) is the projection of \(z_{i}\), \(d\) is dimension of \(z\), and \(\tau\) is a softmax temperature. Then, state embedding \(Z\) is obtained by

\[Z=\mathcal{G}(z_{0},\mathbf{z})=z_{0}+\sum_{i=1}^{n}\omega_{i}z_{i}.\] (6)

Algorithm 1 shows the procedures in ConPE, where the first half corresponds to prompt-based contrastive learning (in Section 3.2) and the other half corresponds to joint learning of a policy \(\pi(Z)\) and the attention module \(\mathcal{G}\). As \(\mathcal{G}\) is optimized by a given RL task objective in the source domains (in line 12), the resulting \(Z\) tends to be task-specific, while \(Z\) is also domain-invariant by the ensemble of contrastively learned visual prompts based on \(\mathcal{G}\) with respect to the combinations of multiple domain factors. The entire algorithm can be found in Appendix.

```
1:Dataset \(\mathcal{D}=\{(o_{1},o^{\prime}_{1}),...\}\), replay buffer \(Z_{D}\leftarrow\emptyset\), pretrained vision-language model \(\mathcal{T}_{\phi}\)
2:Visual prompt pool \(\mathbf{p}^{v}=[p_{1}^{v},...,p_{n}^{v}]\), attention module \(\mathcal{G}\), policy \(\pi\)
3:\(\prime\)* Prompt-based Contrastive Learning */
4:for\(i=1,...,n\)do
5:while not converge do
6: Sample a batch \(\mathcal{B}_{P_{i}}=\{(o_{j},o^{\prime}_{j})\}_{j\leq m}\sim\mathcal{D}\)
7: Update prompt \(p_{i}^{v}\gets p_{i}^{v}-\nabla\mathcal{L}_{\text{CON}}(p_{i}^{v}, \mathcal{B}_{P_{i}})\) using (3)
8:endwhile
9:endfor
10:\(\prime\)* Prompt Ensemble-based Policy Learning */
11:for each environment step do
12: Sample action \(a=\pi(\mathcal{G}(\mathcal{T}_{\phi}(o),\mathbf{z}))\) using (5), (6)
13:\(Z_{D}\gets Z_{D}\cup\{(\mathbf{z},a,r)\}\)
14: Jointly optimize policy \(\pi\) and module \(\mathcal{G}\) on \(\{(\mathbf{z}_{j},a_{j},r_{j})\}_{j\leq m}\sim Z_{D}\)
15:endfor ```

**Algorithm 1** Procedure of ConPE Framework

## 4 Evaluation

**Experiments.** We use AI2THOR [9], Metaworld [15], and CARLA [10] environments, specifically configured for embodied agent tasks with dynamic domain changes. These environments allow us to explore various _domain factors_ such as camera settings, stride length, rotation degree, gravity, illuminations, wind speeds, and others. For prompt-based contrastive learning (in Section 3.2), we use a small dataset of expert demonstrations for each domain factor (i.e., 10 episodes per domain factor). For prompt ensemble-based policy learning (in Section 3.3), we use a few source domains randomly generated through combinatorial variations of the seen domain factors (i.e., 4 source domains). In our zero-shot evaluations, we use target domains that can be categorized as either seen or unseen. The seen target domains are those encountered during the phase of prompt-based contrastive learning, while these domains are not present during the phase of prompt ensemble-based policy learning. On the other hand, the unseen target domains refer to those that are entirely new, implying that they are not encountered during either learning phases.

**Baselines.** We implement several baselines for comparison. LUSR [16] is a reconstruction-based domain adaptation method in RL, which uses the variational autoencoder structure for robust representations. CURL [2] and ACT [1] employ contrastive learning in RL frameworks for high sample-efficiency and generalization to visual domains. ACO [12] utilizes augmentation-driven and behavior-driven contrastive tasks in the context of RL. EmbCLIP [7] is a state-of-the-art embodied AI model, which exploits the pretrained CLIP visual encoder for visual state representations.

**Implementation.** We implement ConPE using the CLIP model with ViT-B/32, similar to VPT [17] and CoOp [18]. In prompt-based contrastive learning, we adopt various contrastive learning schemes including augmentation-driven [2; 1; 19] and behavior-driven [12; 20; 21; 22] contrastive learning, where the prompt length sets to be 8. In policy learning, we exploit online learning (i.e., PPO [23]) for AI2THOR and imitation learning (i.e., DAGGER [24]) for egocentric-Metaworld and CARLA.

### Zero-shot Performance

Table 1 shows zero-shot performance of ConPE and the baselines across source, seen and unseen target domains. We evaluate with 3 different seeds and report the average performance (i.e., task success rate in AI2THOR and egocentric-Metaworld, the sum of rewards in CARLA). As shown in Table 1(a), ConPE outperforms the baselines in the AI2THOR tasks. It particularly surpasses the most competitive baseline, EmbCLIP, by achieving \(5.2\sim 5.7\%\) higher success rate for seen target domains, and \(6.9\,{\sim}\,20.7\%\) for unseen target domains. For egocentric-Metaworld, as shown in Table 1(b), ConPE demonstrates superior performance with a significant success rate for both seen and unseen target domains, which is \(17.3\,{\sim}\,24.0\%\) and \(18.0\,{\sim}\,20.0\%\) higher than EmbCLIP, respectively. For autonomous driving in CARLA, we take into account external environment factors, such as weather conditions and times of day, as domain factors that can influence the driving task. In Table 1(c), ConPE consistently maintains competitive zero-shot performance across all conditions, outperforming the baselines.

In these experiments, LUSR shows relatively low success rates, as the reconstruction-based representation model can abate some task-specific information from observations, which is critical to conduct vision-based complex RL tasks. EmbCLIP shows the most comparative performance among the baselines, but its zero-shot performance for target domains is not comparable to ConPE. In contrast,

\begin{table}

\end{table}
Table 1: Zero-shot Performance. The policies of each method (ConPE and the baselines) are learned on 4 source domains. The _Source_ column presents the performance for those source domains. In all evaluations, we use 30 seen target domains and 10 unseen target domains. The _Seen Target_ column presents the performance for the seen target domains, and the _Unseen Target_ column presents the performance for the unseen target domains. The unseen target domains are not used for representation learning.

ConPE effectively estimates the domain shifts pertaining to each domain factor through the use of guided attention weights, leading to robust performance in both seen and unseen target domains.

**Sample Efficiency.** Figure 4 presents performance with respect to samples (timesteps) that are used by ConPE and baselines for policy learning. Compared to the most competitive baseline EmbCLIP, ConPE requires less than \(60.0\%\) timesteps (online samples) for seen target domains and \(50.0\%\) for unseen target domains to have comparable success rates.

**Prompt Ensemble Interpretability.** Figure 5 visualizes the prompted embeddings using the prompt pool obtained through ConPE. For _intra_ prompted embeddings, we use observation pairs, where each pair is generated by varying domains within a domain factor. We observe that the embeddings are paired to form the domain-invariant knowledge because the visual prompt is learned through prompt-based contrastive learning. The _inter_ prompted embeddings specify that each prompt distinctly clusters prompted embeddings that correspond to the domains associated to its domain factor. Figure 5 shows examples of the attention weight matrix of ConPE for four different domains. The x-axis denotes the visual prompts and the y-axis denotes timesteps. This shows the consistency of the attention weights on the prompts across the timesteps in the same domain.

### Prompt Ensemble with a Pretrained Policy

While we previously presented joint learning of a policy and the attention module \(\mathcal{G}\), here we also present how to update \(\mathcal{G}\) for a pretrained policy \(\pi\) to make the policy adaptable to domain changes. In this case, we add a _policy prompt_\(p_{\text{pol}}^{v}\) to concentrate on task-relevant features from observations for

Figure 4: Sample-efficiency of Prompt Ensemble-based Policy Learning for Object Navigation in AI2THOR. The x-axis represents the number of samples (timesteps) used for policy learning, while the y-axis represents the task success rate for zero-shot evaluation.

Figure 5: Prompt Ensemble Interpretability. In (a), the embeddings in the big circle are intra prompted embeddings obtained by varying domains within a domain factor, and the embeddings in the rectangle are inter prompted embeddings obtained by changing the visual prompts with aligned observation. The closely located intra prompted embeddings indicate the domain-invariant knowledge, while the inter prompted embeddings clustered by different visual prompts indicate the alignment between the visual prompts and the domain factors. In (b), each cell represents attention weight \(\omega_{i}\) applied for prompted embedding \(z_{i}\).

the pretrained policy \(\pi\) so that prompted embedding \(\tilde{z}_{0}\) with the task-relevant features is incorporated into the guided-attention-based ensemble, i.e., \(\pi(\mathcal{G}(\tilde{z}_{0},\mathbf{z})),\) where \(\tilde{z}_{0}=\mathcal{T}_{\phi}(o,p_{\text{pol}}^{v}).\)

Table 2 reports zero-shot performance for the scenarios when a pretrained policy is given. We evaluate two different cases: _aligned_ (Aln.) when prompt-based contrastive learning is conducted on data from the same task of a pretrained policy; otherwise, _not aligned_ (Not Aln.). In AI2THOR, we use data from the object goal navigation task for prompt-based contrastive learning, while each pretrained policy is learned individually through one of tasks including object goal navigation, point goal navigation, image goal navigation, and room rearrangement. Similarly, in egocentric-Metaworld, we use data from the reach task for prompt-based contrastive learning, while each pretrained policy is learned individually through one of tasks including reach, reach-wall, button-press, and door-open. In Table 2(a), ConPE enhances zero-shot performance of the pretrained policies by \(3.5\!\sim\!7.0\%\) for unseen target domains in AI2THOR. This prompt ensemble adaptation requires only 400K samples, equivalent to \(10\%\) of the total samples used for policy learning. In Table 2(b), ConPE significantly boosts zero-shot performance of the pretrained policies by \(9.0\!\sim\!57.6\%\) in egocentric-Metaworld.

### Ablation Study

Here we conduct ablation studies with AI2THOR. All the performances are reported in success rates.

**Prompt Ensemble Scalability.** Table 3 evaluates ConPE with respect to the number of prompts (\(n\)). ConPE effectively enhances zero-shot performance for both seen and unseen target domains through prompt ensemble that captures various domain factors. Compared to the case of \(n=2\), for \(n=10\), there was a significant improvement in zero-shot performance for both seen and unseen target domains, with increases of \(42.8\%\) and \(36.7\%\), respectively. For \(n\geq 10\), we observe stable performance that specifies that ConPE can scale for combining multiple prompts to some extent.

**Prompt Ensemble Methods.** Tabel 4 compares the performance of various prompt integration methods [25, 26, 27] including our guided attention-based prompt ensemble. We denote prompt-level integration as COM, and prompted embeddings-level integration as ENS. UNI-AVG and WEI-AVG refer to uniform average and weighted average mechanisms, respectively. ConPE achieves superior success rates over the most competitive ensemble method ENS-UNI-AVG, showing \(3.5\%\) and \(14.2\%\) performance gain for seen and unseen target domains.

\begin{table}
\begin{tabular}{l c c c c} \hline \hline \(n\) & Source & Seen Target & Unseen Target \\ \hline
2 & \(98.7\!\pm\!0.4\) & \(40.5\!\pm\!2.2\) & \(43.0\!\pm\!2.9\) \\
5 & \(96.1\!\pm\!0.6\) & \(59.2\!\pm\!9.6\) & \(45.0\!\pm\!10.1\) \\
10 & \(96.3\!\pm\!1.0\) & \(83.3\!\pm\!0.3\) & \(79.7\!\pm\!6.4\) \\
16 & \(91.8\!\pm\!2.0\) & \(83.8\!\pm\!1.3\) & \(77.1\!\pm\!6.2\) \\
18 & \(98.5\!\pm\!1.8\) & \(83.3\!\pm\!2.3\) & \(79.0\!\pm\!4.5\) \\ \hline \hline \end{tabular}
\end{table}
Table 3: Prompt Ensemble Scalability

\begin{table}
\begin{tabular}{l c c c c c c c c} \hline \hline \multirow{2}{*}{Method} & \multicolumn{2}{c}{ObjectNav. (Aln.)} & \multicolumn{2}{c}{PointNav. (Not Aln.)} & \multicolumn{2}{c}{ImageNav. (Not Aln.)} & \multicolumn{2}{c}{RoomR. (Not Aln.)} \\ \cline{2-9}  & Source & Target & Source & Target & Souce & Target & Souce & Target \\ \hline Pretrained & \(87.5\!\pm\!17.2\) & \(65.8\!\pm\!19.1\) & \(95.3\!\pm\!4.6\) & \(80.9\!\pm\!1.6\) & \(77.2\!\pm\!3.3\) & \(56.2\!\pm\!2.2\) & \(87.3\!\pm\!3.1\) & \(75.2\!\pm\!13.2\) \\ ConPE & \(88.4\!\pm\!1.7\) & \(\mathbf{72.8\!\pm\!3.1}\) & \(98.9\!\pm\!1.0\) & \(\mathbf{84.4\!\pm\!1.0}\) & \(79.2\!\pm\!1.4\) & \(\mathbf{61.6\!\pm\!1.1}\) & \(93.3\!\pm\!1.2\) & \(\mathbf{82.2\!\pm\!14.4}\) \\ \hline \hline \end{tabular} 
\begin{tabular}{l c c c c c c} \hline \hline \multirow{2}{*}{Method} & \multicolumn{2}{c}{Reach (Aln.)} & \multicolumn{2}{c}{Reach-Wall (Not Aln.)} & \multicolumn{2}{c}{Button-Press (Not Aln.)} & \multicolumn{2}{c}{Door-Open (Not Aln.)} \\ \cline{2-9}  & Source & Target & Source & Target & Source & Target & Source & Target \\ \hline Pretrained & \(100.0\!\pm\!0.0\) & \(65.7\!\pm\!6.4\) & \(100.0\!\pm\!0.0\) & \(58.0\!\pm\!5.8\) & \(100.0\!\pm\!0.0\) & \(16.8\!\pm\!2.3\) & \(100.0\!\pm\!0.0\) & \(35.6\!\pm\!6.2\) \\ ConPE & \(100.0\!\pm\!0.0\) & \(\mathbf{74.7\!\pm\!5.0}\) & \(100.0\!\pm\!0.0\) & \(\mathbf{75.7\!\pm\!9.0}\) & \(100.0\!\pm\!0.0\) & \(\mathbf{73.7\!\pm\!8.3}\) & \(100.0\!\pm\!0.0\) & \(\mathbf{93.2\!\pm\!1.1}\) \\ \hline \hline \end{tabular

**Prompt Ensemble Adaptation Method.** Table 5 shows the effect of our ensemble adaptation method for the situation when a pretrained policy is given. As explained in Section 4.2, in this situation, ConPE can update the attention module with an additional prompt \(p_{\text{pol}}^{v}\). Note that \(p_{\text{pol}}^{v}\) corresponds to this case, while w/o \(p_{\text{pol}}^{v}\) corresponds to the other case of using the attention module without \(p_{\text{pol}}^{v}\). In addition, E2E denotes the fine-tuning of both the policy and the attention module along with \(p_{\text{pol}}^{v}\). The results demonstrate that our method enhances the zero-shot performance of the pretrained policy, showing that \(p_{\text{pol}}^{v}\) facilitates the extraction of task-specific features.

**Semantic Regularized Data Augmentation.** So far, we have only utilized vision data, but here, we discuss one extension of ConPE using semantic information. Specifically, we use a few samples of object-level text descriptions to regularize the data augmentation process in policy learning. This aims to mitigate overfitting issues [28; 29]. The detailed explanations can be found in Appendix. As shown in Table 6, ConPE with semantic data (w Semantic) consistently yields better performance than ConPE without semantic data (w/o Semantic) for all noise scale settings (\(\delta\)). Note that the noise scale manages the variance of augmented prompted embeddings. This experiment indicates that ConPE can be improved by incorporating semantic information.

## 5 Related Work

**Adaptation in Embodied AI.** In the literature of robotics, numerous studies focused on developing generalized visual encoders for robotic agents across various domains [30; 31], exploiting pretrained visual encoders [32; 33], and establishing robust control policies with domain randomized techniques [34; 35]. Furthermore, in the field of learning embodied agents, a few works addressed adaptation issues of agents to unseen scenarios in complex environments, using data augmentation techniques [36; 37; 38; 39; 40] or adopting self-supervised learning schemes [41; 42; 43]. Recently, several works showed the feasibility and benefits of adopting large-scale pretrained vision-language models for embodied agents [7; 44; 45; 46]. Our work is in the same vein of these prior works of embodied agents, but unlike them, we explore visual prompt learning and ensembles, aiming to enhance both zero-shot performance and sample-efficiency.

**Decoupled RL Structure.** The decoupled structure, where a state representation model is separated from RL, has been investigated in vision-based RL [47; 2; 16]. Recently, contrastive representation learning on expert trajectories gains much interest, as it allows expert behavior patterns to be incorporated into the state encoder even when a policy is not jointly learned [1; 20]. They established generalized state representations, yet in that direction, sample-efficiency issues in both representation learning and policy learning remain unexplored.

**Prompt-based Learning.** Prompt-based learning or prompt tuning is a parameter-efficient optimization method for large pretrained models. Prompt tuning was used for computer vision tasks, optimizing a few learnable vectors in the text encoder [18], and it was also adopted for vision transformer models to handle a wide range of downstream tasks [17]. Recently, visual prompting [48] was introduced, and both visual and text prompt tuning were explored together in the multi-modal embedding space [49; 50]. We also use visual prompt tuning, but we concentrate on the ensemble of multiple prompts to tackle complex embodied RL tasks. We take advantage of the fact that the generalized representation capability of different prompts can vary depending on a given task and domain, and thus we strategically utilize them to enable zero-shot adaptation of RL policies.

\begin{table}
\begin{tabular}{l c c c c} \hline \hline \multirow{2}{*}{\(\delta\)} & \multicolumn{2}{c}{w/o Semantic} & \multicolumn{2}{c}{w Semantic} \\ \cline{2-5}  & Source & Target & Source & Target \\ \hline
0.1 & \(97.4\pm 3.8\) & \(83.6\pm 8.9\) & \(\mathbf{100.0\pm 0.0}\) & \(\mathbf{84.1\pm 10.2}\) \\
0.2 & \(94.7\pm 0.0\) & \(77.6\pm 12.8\) & \(\mathbf{94.8\pm 7.4}\) & \(\mathbf{79.7\pm 9.1}\) \\
0.3 & \(84.2\pm 3.7\) & \(75.3\pm 8.8\) & \(\mathbf{96.1\pm 1.9}\) & \(\mathbf{83.1\pm 10.0}\) \\
0.4 & \(80.3\pm 16.2\) & \(74.0\pm 14.9\) & \(\mathbf{86.9\pm 3.8}\) & \(\mathbf{81.3\pm 12.3}\) \\ \hline \hline \end{tabular}
\end{table}
Table 6: Semantic Regularized Data Augmentation

\begin{table}
\begin{tabular}{l c c} \hline \hline Optimization & Source & Target \\ \hline Pretrained & \(95.3\pm 4.6\) & \(80.9\pm 1.6\) \\ w/o \(p_{pol}^{v}\) & \(59.5\pm 2.9\) & \(54.2\pm 0.6\) \\ w \(p_{pol}^{v}\) & \(\mathbf{98.9\pm 1.0}\) & \(\mathbf{84.4\pm 1.0}\) \\ E2E & \(96.4\pm 0.5\) & \(83.3\pm 3.3\) \\ \hline \hline \end{tabular}
\end{table}
Table 5: Prompt Ensemble AdaptationConclusion

**Limitation.** Our ConPE framework exploits visual inputs and their relevant domain factors for policy adaptation. For environments where domain changes extend beyond those domain factors, the adaptability of the framework might be constrained. In our future work, we will adapt the framework with semantic knowledge based on pretrained language models to improve the policy generalization capability for embodied agents in dynamic complex environments and to cover various scenarios associated with multi-modal agent interfaces.

**Conclusion.** In this work, we presented the ConPE framework, a novel approach that allows embodied RL agents to adapt in a zero-shot manner across diverse visual domains, exploring the ensemble structure that incorporates multiple contrastive visual prompts. The ensemble facilitates domain-invariant and task-specific state representations, thus enabling the agents to generalize to visual variations influenced by specific domain factors. Through various experiments, we demonstrated that the framework can enhance policy adaptation across various domains for vision-based object navigation, rearrangement, manipulation tasks as well as autonomous driving tasks.

## 7 Acknowledgement

We would like to thank anonymous reviewers for their valuable comments and suggestions. This work was supported by Institute of Information & communications Technology Planning & Evaluation (IITP) grant funded by the Korea government (MSIT) (No. 2022-0-01045, 2022-0-00043, 2020-0-01821, 2019-0-00421) and by the National Research Foundation of Korea (NRF) grant funded by the MSIT (No. NRF-2020M3C1C2A01080819, RS-2023-00213118).

## References

* [1] Adam Stooke et al. "Decoupling representation learning from reinforcement learning". In: _Proceedings of the 38th International Conference on Machine Learning_. 2021, pp. 9870-9879.
* [2] Aravind Srinivas, Michael Laskin, and Pieter Abbeel. "CURL: Contrastive unsupervised representations for reinforcement learning". In: _Proceedings of the 37th International Conference on Machine Learning_. 2020, pp. 5639-5650.
* [3] Max Schwarzer et al. "Data-efficient reinforcement learning with self-predictive representations". In: _arXiv preprint arXiv:2007.05929_ (2020).
* [4] Shangda Li et al. "Unsupervised domain adaptation for visual navigation". In: _arXiv preprint arXiv:2010.14543_ (2020).
* [5] Ziad Al-Halah, Santhosh K. Ramakrishnan, and Kristen Grauman. "Zero experience required: Plug & play modular transfer learning for semantic visual navigation". In: _Proceedings of the 9th International Conference on Vision and Pattern Recognition_. 2021, pp. 17010-17020.
* [6] Qianfan Zhao et al. "Zero-shot object goal visual navigation". In: _arXiv preprint arXiv:2206.07423_ (2022).
* [7] Apoorv Khandelwal et al. "Simple but Effective: CLIP embeddings for embodied AI". In: _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_. 2022, pp. 14809-14818.
* [8] Arjun Majumdar et al. "Zson: Zero-shot object-goal navigation using multimodal goal embeddings". In: _arXiv preprint arXiv:2206.12403_ (2022).
* [9] Eric Kolve et al. "Ai2-thor: An interactive 3d environment for visual ai". In: _arXiv preprint arXiv:1712.05474_ (2017).
* [10] Alexey Dosovitskiy et al. "CARLA: An open urban driving simulator". In: _Proceedings of the 1st Conference on Robot Learning_. 2017, pp. 1-16.
* [11] Richard S. Sutton and Andrew G. Barto. _Reinforcement learning: An introduction_. MIT press, 2018.
* [12] Qihang zhang, Zheghao Peng, and Bolei Zhou. "Learning to drive by watching youtube videos: Action-conditioned contrastive policy pretraining". In: _Proceedings of the 17th European Conference on Computer Vision_. 2022, pp. 111-128.
* [13] Aaron van den Oord, Yazhe Li, and Oriol Vinyals. "Representation learning with contrastive predictive coding". In: _arXiv preprint arXiv:1807.03748_ (2018).

* [14] Ting Chen et al. "A simple framework for contrastive learning of visual representations". In: _Proceedings of the 37th International Conference on Machine Learning_. 2020, pp. 1597-1607.
* [15] Tianhe Yu et al. "Meta-World: A benchmark and evaluation for multi-task and meta reinforcement learning". In: _Proceedings of the 3rd Conference on Robot Learning_. 2019, pp. 1094-1100.
* [16] Jinwei Xing et al. "Domain adaptation in reinforcement learning via latent unified state representation". In: _Proceedings of the 35th AAAI Conference on Artificial Intelligence_. 2021, pp. 10452-10459.
* [17] Menglin Jia et al. "Visual prompt tuning". In: _Proceedings of the 17th European Conference on Computer Vision_. 2022, pp. 709-727.
* [18] Kaiyang Zhou et al. "Learning to prompt for vision-language models". In: _International Journal of Computer Vision_ (2022).
* [19] Bang You et al. "Integrating contrastive learning with dynamic models for reinforcement learning from images". In: _Neurocomputing_ (2022).
* [20] Minbeom Kim et al. "Action-driven contrastive representation for reinforcement learning". In: _PLOS ONE_ (2022).
* [21] Rishabh Agarwal et al. "Contrastive behavioral similarity embeddings for generalization in reinforcement learning". In: _arXiv preprint arXiv:2101.05265_ (2021).
* [22] Young Jae Lee et al. "STACoRe: Spatio-temporal and action-based contrastive representations for reinforcement learning in Atari". In: _Neural Networks_ (2023).
* [23] John Schulman et al. "Proximal policy optimization algorithms". In: _arXiv preprint arXiv:1707.06347_ (2017).
* [24] Stephane Ross, Geoffrey J. Gordon, and J. Andrew Bagnell. "A reduction of imitation learning and structured prediction to no-regret online learning". In: _Proceedings of the 14th International Conference on Artificial Intelligence and Statistics_. 2011, pp. 627-635.
* [25] Pengfei Liu et al. "Pre-train, prompt, and predict: A systematic survey of prompting methods in natural language processing". In: _ACM Computing Surveys_ (2023).
* [26] Minh-Thang Luong, Hieu Pham, and Christopher D Manning. "Effective approaches to attention-based neural machine translation". In: _arXiv preprint arXiv:1508.04025_ (2015).
* [27] Ashish Vaswani et al. "Attention is all you need". In: _Advances in neural information processing systems_ (2017).
* [28] Denis Yarats, Ilya Kostrikov, and Rob Fergus. "Image Augmentation Is All You Need: Regularizing deep reinforcement learning from pixels". In: _Proceedings of the 9th International Conference on Learning Representations_. 2021.
* [29] Samarth Sinha, Ajay Mandlekar, and Animesh Garg. "S4RL: Surprisingly Simple Self-Supervision for Offline Reinforcement Learning in Robotics". In: _Proceedings of the 5th Conference on Robotics Learning_. 2021, pp. 907-917.
* [30] Arjun Majumdar et al. "Where are we in the search for an Artificial Visual Cortex for Embodied Intelligence?" In: _arXiv preprint arXiv:2303.18240_ (2023).
* [31] Suraj Nair et al. "R3m: A universal visual representation for robot manipulation". In: _arXiv preprint arXiv:2203.12601_ (2022).
* [32] Austin Stone et al. "Open-world object manipulation using pre-trained vision-language models". In: _arXiv preprint arXiv:2303.00905_ (2023).
* [33] Jiange Yang et al. "Pave the Way to Grasp Anything: Transferring Foundation Models for Universal Pick-Place Robots". In: _arXiv preprint arXiv:2306.05716_ (2023).
* [34] Dhruv Shah et al. "Gnm: A general navigation model to drive any robot". In: _Proceedings of the IEEE International Conference on Robotics and Automation_. IEEE. 2023, pp. 7226-7233.
* [35] Noriaki Hirose et al. "ExAug: Robot-conditioned navigation policies via geometric experience augmentation". In: _Proceedings of the IEEE International Conference on Robotics and Automation_. IEEE. 2023, pp. 4077-4084.
* [36] Daniel Fried et al. "Speaker-follower models for vision-and-language navigation". In: _Proceedings of the 31th Conference on Neural Information Processing Systems_. 2018, pp. 3318-3329.
* [37] Felix Yu et al. "Take the scenic route: Improving generalization in vision-and-language navigation". In: _arXiv preprint arXiv:2003.14269_ (2020).

* [38] Xiaofeng Gao et al. "Dialfred: Dialogue-enabled agents for embodied instruction following". In: _arXiv preprint arXiv:2202.13330_ (2022).
* [39] Chong Liu et al. "Vision-language navigation with random environmental mixup". In: _Proceedings of the International Conference on Computer Vision_. 2021, pp. 1624-1634.
* [40] Jialu Li, Hao Tan, and Mohit Bansal. "EnvEdit: Environment Editing for Vision-and-Language Navigation". In: _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_. 2022, pp. 15386-15396.
* [41] Xin Wang et al. "Reinforced cross-modal matching and self-supervised imitation learning for vision-language navigation". In: _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_. 2019, pp. 6629-6638.
* [42] Roberto Bigazzi et al. "Explore and explain: self-supervised navigation and recounting". In: _Proceeding of the 25th International Conference on Pattern Recognition_. 2020, pp. 1152-1159.
* [43] Eun Sun Lee et al. "MoDA: Map style transfer for self-supervised Domain Adaptation of embodied agents". In: _Proceeding of the 17th European Conference on Computer Vision_. 2022, pp. 338-354.
* [44] Vishnu Sashank Dorbala et al. "CLIP-Nav: Using CLIP for zero-shot vision-and-language navigation". In: _arXiv preprint arXiv:2211.16649_ (2022).
* [45] Samir Yitzhak Gadre et al. "CLIP on Wheels: zero-shot object navigation as object localization and exploration". In: _arXiv preprint arXiv:2203.10421_ (2022).
* [46] Dhruv Shah et al. "Lm-nav: Robotic navigation with large pre-trained models of language, vision, and action". In: _Proceedings of the 6th Conference on Robot Learning_. 2022, pp. 492-504.
* [47] Irina Higgins et al. "DARLA: Improving zero-shot transfer in reinforcement learning". In: _Proceedings of the 34th International Conference on Machine Learning_. 2018, pp. 1480-1490.
* [48] Hyojin Bahng et al. "Exploring visual prompts for adapting large-scale models". In: _arXiv preprint arXiv:2203.17274_ (2022).
* [49] Muhammad Uzair Khattak et al. "MaPLe: Multi-modal prompt learning". In: _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_. 2023.
* [50] Yuhang Zang et al. "Unified vision and language prompt learning." In: _arXiv preprint arXiv:2210.07225_ (2022).