# MetaCURL: Non-stationary Concave Utility Reinforcement Learning

 Bianca Marin Moreno

Inria

EDF R\(\&\)D

Margaux Bregere

Sorbonne Universite

EDF R\(\&\)D

Pierre Gaillard

Inria

Univ. Grenoble Alpes, Inria, CNRS, Grenoble INP, LJK, 38000 Grenoble, France.

Nadia Oudjane

EDF R\(\&\)D

EDF R\(\&\)D

EDF R\(\&\)D

EDF R\(\&\)D

###### Abstract

We explore online learning in episodic Markov decision processes on non-stationary environments (changing losses and probability transitions). Our focus is on the Concave Utility Reinforcement Learning problem (CURL), an extension of classical RL for handling convex performance criteria in state-action distributions induced by agent policies. While various machine learning problems can be written as CURL, its non-linearity invalidates traditional Bellman equations. Despite recent solutions to classical CURL, none address non-stationary MDPs. This paper introduces MetaCURL, the first CURL algorithm for non-stationary MDPs. It employs a meta-algorithm running multiple black-box algorithms instances over different intervals, aggregating outputs via a sleeping expert framework. The key hurdle is partial information due to MDP uncertainty. Under partial information on the probability transitions (uncertainty and non-stationarity coming only from external noise, independent of agent state-action pairs), the algorithm achieves optimal dynamic regret without prior knowledge of MDP changes. Unlike approaches for RL, MetaCURL handles adversarial losses. We believe our approach for managing non-stationarity with experts can be of interest to the RL community.

## 1 Introduction

We consider the task of learning in an episodic Markov decision process (MDP) with a finite state space \(\mathcal{X}\), a finite action space \(\mathcal{A}\), episodes of length \(N\), and a probability transition kernel \(p:=(p_{n})_{n\in[N]}\) such that for all \((x,a)\in\mathcal{X}\times\mathcal{A}\), \(p_{n}(\cdot|x,a)\in\mathcal{S}_{\mathcal{X}}\). For any finite set \(\mathcal{B}\), we denote by \(\mathcal{S}_{\mathcal{B}}\) the simplex induced by this set, and by \(|\mathcal{B}|\) its cardinality. For all \(d\in\mathbb{N}\) we let \([d]:=\{1,\ldots,d\}\). At each time step \(n\), an agent in state \(x_{n}\) chooses an action \(a_{n}\sim\pi_{n}(\cdot|x_{n})\) by means of a policy, and moves to the next state \(x_{n+1}\sim p_{n+1}(\cdot|x_{n},a_{n})\), inducing a state-action distribution sequence \(\mu^{\pi,p}:=(\mu^{\pi,p}_{n})_{n\in[N]}\), where \(\mu^{\pi,p}_{n}\in\mathcal{S}_{\mathcal{X}\times\mathcal{A}}\) for all \(n\in[N]\).

In many applications of learning in episodic MDPs, an agent aims at finding an optimal policy \(\pi\) maximizing/minimizing a concave/convex function \(F\) of its state-action distribution, known as the Concave Utility Reinforcement Learning (CURL) problem:

\[\min_{\pi\in(\mathcal{S}_{\mathcal{A}})^{\mathcal{X}\times N}}F(\mu^{\pi,p}).\] (1)

CURL extends reinforcement learning (RL) from linear to convex losses. Many machine learning problems can be written in the CURL setting, including: RL, where for a loss function \(\ell\), \(F(\mu^{\pi,p})=\langle\ell,\mu^{\pi,p}\rangle\); pure RL exploration [28], where \(F(\mu^{\pi,p})=\langle\mu^{\pi,p},\log(\mu^{\pi,p})\rangle\); imitation learning [26; 35] and apprenticeship learning [55; 1], where \(F(\mu^{\pi,p})=D_{g}(\mu^{\pi,p},\mu^{*})\), with \(D_{g}\) representing a Bregmandivergence induced by a function \(g\) and \(\mu^{*}\) being a behavior to be imitated; certain instances of mean-field control [7], where \(F(\mu^{\pi,p})=\langle\ell(\mu^{\pi,p}),\mu^{\pi,p}\rangle\); mean-field games with potential rewards [34]; among others. The CURL problem alters the additive structure inherent in standard RL, invalidating the classical Bellman equations, requiring the development of new algorithms.

Most of existing works on CURL focus on stationary environments [28; 57; 58; 5; 56; 25; 12; 11], where both the objective function \(F\) and the probability transition kernel \(p\) remain the same across episodes. However, in practical scenarios, environments are rarely stationary. The work of [39] is the first to address online CURL with objective functions that can change arbitrarily between episodes, also known as adversarial losses [19]. However, their work assumes stationary probability kernels and presents results in terms of static regret (performance comparable to an optimal policy). In non-stationary scenarios, it is more relevant to minimize dynamic regret--the gap between the learner's total loss and that of any policy sequence (see Eq. (5) for formal definition). In this work we address this problem by introducing the first algorithm for CURL handling adversarial objective functions and non-stationary probability transitions, achieving near-optimal dynamic regret.

**High-level idea.** Our approach, called MetaCURL, draws inspiration from the online learning literature. In online learning [9], non-stationarity is often managed by running multiple black-box algorithm instances from various starting points and dynamically selecting the best performer using an "expert" algorithm. This strategy has demonstrated effectiveness in settings with complete information [29; 59; 47; 33]. With MetaCURL, we extend this concept to decision-making in MDPs. Unlike classical online learning, the main challenge faced is uncertainty. We assume that the probability transition kernel in each episode has a known deterministic structure but is affected by an external noise with unknown distribution, placing us in a setting with only partial information (see Section 2 for more details). The learner is then unable to observe the agent's loss under policies other than the one played.

MetaCURL is a general algorithm that can be applied with any black-box algorithm with low dynamic regret in near-stationary environments. CURL approaches suitable as black-boxes rely on parametric algorithms that would require prior knowledge of the MDP changes to tune their learning rate. MetaCURL also addresses this challenge by simultaneously running multiple learning rates and weighting them in direct proportion to their empirical performance. MetaCURL achieves optimal regret of order \(\tilde{O}\big{(}\sqrt{\Delta^{\pi^{*}}T}+\min\left\{\sqrt{\Delta_{\infty}^{p}T },\ T^{2/3}(\Delta^{p})^{1/3}\right\}\big{)}\), where \(\Delta_{\infty}^{p}\) and \(\Delta^{p}\) represent the frequency and magnitude of changes of the probability transition kernel respectively, and \(\Delta^{\pi^{*}}\) is the magnitude of changes of the policy sequence we compare ourselves with in dynamic regret (see Eqs. (6) and (7) for formal definitions). MetaCURL does not require previous knowledge of the degree of non-stationarity of the environment, and can handle adversarial losses. To ensure completeness, we show that Greedy MD-CURL from [39] fulfills the requirements to serve as a black-box algorithm. This is the first dynamic regret analysis for a CURL approach.

**Comparisons.** Without literature on non-stationary CURL, we review non-stationary RL approaches. Most methods [24; 13; 45; 17; 20; 40; 21] typically rely on prior knowledge of the MDP's non-stationarity degree, while MetaCURL does not. Let \(\Delta_{\infty}^{l}\) and \(\Delta^{l}\) represent the frequency and magnitude of change in the RL loss function, respectively1. Recently, [54] achieved a regret of \(\tilde{O}\big{(}\min\left\{\sqrt{(\Delta_{\infty}^{p}+\Delta_{\infty}^{l})}T,\ T^{2/3}(\Delta^{p}+\Delta^{l})^{1/3}\right\}\big{)}\), a near-optimal result as demonstrated by [40], without requiring prior knowledge of the environment's variation. However, this regret bound is tied to changes in loss functions, making it ineffective against adversarial losses. In contrast, rather than depending on the magnitude of variation of the loss function, MetaCURL's bound depends on the magnitude of variation of the policy sequence we use for comparison in dynamic regret. This allows it to handle adversarial losses, and to compare against policies with a more favorable bias-variance trade-off, which may not align with the optimal policies for each loss. In addition, we improve this dependency by paying it as \(\sqrt{\Delta^{\pi^{*}}T}\) instead of \((\Delta^{\pi^{*}})^{1/3}T^{2/3}\). We summarize comparisons in Table 1.

**Other related works.** The studies by [43; 42] examine the difference between optimizing the objective over infinite trials and the expectation of the objective over a single trial, challenging the traditional CURL formulation in Eq. (1). Here, we retain the classic formulation to align with existing CURL research. Other works on RL with nonlinear objective functions are [46; 16] focusing on rewards over trajectories rather than individual states. In addition to non-stationarity, there is a series of works on RL with adversarial losses but _stationary_ probability transitions, with results only on static regret [48; 30; 18; 50; 32; 14]. Another line of research is known as corruption-robust RL. It differs from non-stationary MDPs in that it assumes a ground-truth MDP and measures adversary malice by the degree of ground-truth corruption [31; 38; 10; 60; 53].

**Contributions.** We resume our main contributions below:

* We introduce MetaCURL, the first algorithm for non-stationary CURL. Under the framework described in Section 2, MetaCURL achieves the optimal dynamic regret bound of order \(\tilde{O}\big{(}\sqrt{\Delta^{\pi^{*}}T}+\min\left\{\sqrt{\Delta_{\infty}^{p} T},T^{2/3}(\Delta^{p})^{1/3}\right\}\big{)}\), without requiring previous knowledge of the degree of non-stationarity of the MDP. MetaCURL handles full adversarial losses and improves the dependency of the regret on the total variation of policies. MetaCURL is the first adaptation of Learning with Expert Advice (LEA) to deal with uncertainty in non-stationary MDPs.
* We also establish the first dynamic regret upper bound for an online CURL algorithm in a nearly stationary environment, which can serve as a black-box routine for MetaCURL.

**Notations.** Let \(\|\cdot\|_{1}\) be the \(L_{1}\) norm, and for all \(v:=(v_{n})_{n\in[N]}\), such that \(v_{n}\in\mathbb{R}^{\mathcal{X}\times\mathcal{A}}\) we define \(\|v\|_{\infty,1}:=\sup_{1\leq n\leq N}\|v_{n}\|_{1}\).

## 2 General framework: non-stationary CURL

When an agent plays a policy \(\pi:=(\pi_{n})_{n\in[N]}\) in an episodic MDP with probability transition \(p\), it induces a state-action distribution sequence (also called the occupancy-measure [61]), which we denote by \(\mu^{\pi,p}:=(\mu_{n}^{\pi,p})_{n\in[N]}\), with \(\mu_{n}^{\pi,p}\in\mathcal{S}_{\mathcal{X}\times\mathcal{A}}\). It can be calculated recursively for all \((x,a)\in\mathcal{X}\) and \(n\in[N]\) by taking \(\mu_{0}^{\pi,p}(x,a)=\mu_{0}(x,a)\) fixed, and

\[\mu_{n}^{\pi,p}(x,a)=\sum_{(x^{\prime},a^{\prime})\in\mathcal{X}\times \mathcal{A}}\mu_{n-1}^{\pi,p}(x^{\prime},a^{\prime})p_{n}(x|x^{\prime},a^{ \prime})\pi_{n}(a|x).\] (2)

**Offline CURL.** The classic CURL optimization problem in Eq. (1) considers minimizing a function \(F:(\mathcal{S}_{\mathcal{X}\times\mathcal{A}})^{N}\rightarrow\mathbb{R}\), here defined as \(F(\mu):=\sum_{n=1}^{N}f_{n}(\mu_{n})\) with \(f_{n}\) a convex function over \(\mu_{n}\) with values in \([0,1]\), across all policies that induce \(\mu^{\pi,p}\). Note that \(F\) is not convex on the policy \(\pi\). To convexify the problem, we define the set of state-action distributions satisfying the Bellman flow of a MDP with transition kernel \(p\) as

\[\mathcal{M}_{\mu_{0}}^{p}:=\bigg{\{}\mu\big{|}\ \sum_{a^{\prime}\in \mathcal{A}}\mu_{n}(x^{\prime},a^{\prime})=\sum_{x\in\mathcal{X},a\in\mathcal{ A}}p_{n}(x^{\prime}|x,a)\mu_{n-1}(x,a)\,\forall x^{\prime}\in\mathcal{X},\forall n\in[N] \bigg{\}}.\] (3)

For any \(\mu\in\mathcal{M}_{\mu_{0}}^{p}\), there exists a strategy \(\pi\) such that \(\mu^{\pi,p}=\mu\). It suffices to take \(\pi_{n}(a|x)\propto\mu_{n}(x,a)\) when the normalization factor is non-zero, and arbitrarily defined otherwise. There is thus an equivalence between the CURL problem (optimization on policies) and a convex optimization problem on state-action distributions satisfying the Bellman flow:

\[\min_{\pi\in(\mathcal{S}_{\mathcal{A}})^{\mathcal{X}\times N}}F(\mu^{\pi,p}) \equiv\min_{\mu\in\mathcal{M}_{\mu_{0}}^{p}}F(\mu).\] (4)

**Online CURL.** In this paper we consider the online CURL problem in a non-stationary setting. We assume a finite-horizon scenario with \(T\) episodes. An oblivious adversary generates a sequence of changing objective functions \((F^{t})_{t\in[T]}\), with \(F^{t}\) being fully communicated to the learner only at the end of episode \(t\). We assume \(F^{t}\) is \(L_{F}\)-Lipschitz with respect to the \(\|\cdot\|_{\infty,1}\) norm for all \(t\). The probability transition kernel is also allowed to evolve over time and is denoted by \(p^{t}\) at episode \(t\). The learner's objective is then to calculate a sequence of strategies \((\pi^{t})_{t\in[T]}\) minimizing a total loss \(L_{T}:=\sum_{t=1}^{T}F^{t}(\mu^{\pi^{t},p^{t}})\), while dealing with adversarial objective functions \(F^{t}\) and changing probability transition kernels \(p^{t}\). To measure the learner's performance, we use the notion of dynamic regret (the difference between the learner's total loss and that of any policy sequence \((\pi^{t,*})_{t\in[T]}\)):

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}:=\sum_{t\in[T]}F^{t}(\mu^{\pi^{t},p ^{t}})-F^{t}(\mu^{\pi^{t,*},p^{t}}).\] (5)

**Non-stationarity measures.** We consider the following two non-stationary measures \(\Delta^{p}_{\infty}\) and \(\Delta^{p}\) on the probability transition kernels that respectively measure abrupt and smooth variations:

\[\Delta^{p}_{\infty}:=1+\sum_{t=1}^{T-1}\mathds{1}_{\{p^{t}\neq p^{t+1}\}}, \quad\Delta^{p}:=1+\sum_{t=1}^{T-1}\Delta^{p}_{t},\quad\Delta^{p}_{t}:=\max_{ n,x,a}\|p^{t}_{n}(\cdot|x,a)-p^{t+1}_{n}(\cdot|x,a)\|_{1}\,.\] (6)

Regarding dynamic regret, we define for any sequence of policies \((\pi^{t,*})_{t\in[T]}\), its non-stationarity measure as

\[\Delta^{\pi^{*}}:=1+\sum_{t=1}^{T-1}\Delta^{\pi^{*}}_{t},\qquad\Delta^{\pi^{* }}_{t}:=\max_{n\in[N],x\in\mathcal{X}}\|\pi^{t,*}_{n}(\cdot|x)-\pi^{t+1,*}_{n} (\cdot|x)\|_{1}\,.\] (7)

Moreover, for any interval \(I\subseteq[T]\), we write \(\Delta^{p}_{I}:=\sum_{t\in I}\Delta^{p}_{t}\) and \(\Delta^{\pi^{*}}_{I}:=\sum_{t\in I}\Delta^{\pi^{*}}_{t}\).

**Dynamic's hypothesis.** For each episode \(t\), let \((x^{t}_{0},a^{t}_{0})\sim\mu_{0}(\cdot)\), and for all time steps \(n\in[N]\),

\[x^{t}_{n+1}=g_{n}(x^{t}_{n},a^{t}_{n},\epsilon^{t}_{n}),\] (8)

where \(g_{n}\) represents the deterministic part of the dynamics, and \((\epsilon^{t}_{n})_{n\in[N]}\) is a sequence of independent external noises such that \(\epsilon^{t}_{n}\sim h^{t}_{n}(\cdot)\), where \(h^{t}_{n}\) is any centered distribution. Note that these dynamics imply that the probability transition kernel can be written as \(p^{t}_{n+1}(x^{t}|x,a)=\mathbb{P}\big{(}g_{n}(x,a,\epsilon^{t}_{n})=x^{\prime }\big{)}\). Different variants of this problem can be considered, depending on the prior information available about the dynamics in Eq. (8). In this article we consider the case where \(g_{n}\) is fixed and known by the learner, but \(h^{t}_{n}\) is unknown and can change (hence the source of uncertainty and non-stationarity of the transitions). To the best of our knowledge, there are no black-box algorithms in the literature that achieve sublinear regret for online CURL with adversarial losses without relying on model assumptions. In using RL methods to CURL, we believe model-optimistic approaches like UCRL (Upper Confidence RL [4]) could be adapted. However, these methods are computationally expensive, as they require solving an additional optimization problem in every episode. The black-box algorithm for CURL we consider from [39] provides closed-form solutions, which is more computationally efficient, but requires the same dynamic assumption as in Eq. (8). Another class of RL methods is policy optimization (PO), which directly optimizes the policy and often yields closed-form solutions, leading to faster performance. Recent theoretical work [37] has shown that PO methods can achieve near-optimal regret without model assumptions. However, these methods rely on RL's Bellman equations, which do not apply to CURL due to its non-linear nature. We believe that the MetaCURL analysis could potentially be extended to the case where \(g_{n}\) is unknown but belongs to a parametric family. We leave this extension for future work.

This particular dynamic is also motivated by many real-world applications:

* Controlling a fleet of drones in a known environment, subject to external influences due to weather conditions or human interventions.
* Addressing data center power management aiming to cut energy expenses while maintaining service quality. Workload fluctuations cause dynamic job queue transitions, and volatile electricity prices lead to varying operational costs. The probabilities of task processing by each server are predetermined, but the probabilities of task arrival are uncertain [6].
* As renewable energy use increases and energy demand grows, balancing production and consumption becomes harder. Certain devices, like electric vehicle batteries and water heaters, can serve as flexible energy storage options. However, this requires electric grids to establish policies regulating when these devices turn on or off to match a desired consumption profile. These profiles can fluctuate daily due to changes in energy production levels. Despite knowing the devices' physical dynamics, household consumption habits remain unpredictable and constantly changing [51, 41].

**Outline.** In this paper, we propose a novel approach to handle non-stationarity in MDPs, being the first to propose a solution to CURL within this context. We begin in Section 3 by discussing the idea behind our algorithm's construction and the key challenges within our framework. Section 4 introduces MetaCURL, while Section 5 presents the main results of our regret analysis. The proofs' specifics are provided in the appendix.

## 3 Main idea

**A hypothetical learner who achieves optimal regret.** Let \(m>1\). Assume a hypothetical learner that could compute a sequence of restart times \(1=t_{1}<\ldots<t_{m+1}=T+1\), where for each \(i\in[m]\) we let \(\mathcal{I}_{i}:=[t_{i},t_{i+1}-1]\), such that

\[\Delta_{\mathcal{I}_{i}}^{p}\leq\Delta^{p}/m.\] (9)

Consider any algorithm that, when computing \((\pi^{t})_{t\in I}\) with learning rate \(\lambda\) for any interval \(I\subseteq[T]\), attains a dynamic regret relative to any sequence of policies \((\pi^{t,*})_{t\in I}\) upper bounded by

\[R_{I}\big{(}(\pi^{t,*})_{t\in I}\big{)}\leq c_{1}\lambda|I|+\lambda^{-1}(c_{2 }\Delta_{I}^{\pi^{*}}+c_{3})+|I|\Delta_{I}^{p},\] (10)

where \((c_{j})_{j\in[3]}\) are constants that may depend on the MDP parameters, and on the interval size only in logarithmic terms. This kind of regret bound holds for Greedy MD-CURL from [39] as we show in Appendix G. Suppose the hypothetical learner could also access \(\Delta^{\pi^{*}}\) to calculate the optimal learning rate. Hence, playing such an algorithm for all horizon \(T\) with the optimal learning rate, the learner would have a dynamic regret upper bounded by

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq 2\sqrt{c_{1}(c_{2}\Delta^{\pi^{ *}}+c_{3}m)T}+T\Delta^{p}m^{-1}.\]

Optimizing over \(m\), the learner would obtain the optimal regret of order \(\tilde{O}\big{(}\sqrt{\Delta^{\pi^{*}}T}+(\Delta^{p})^{1/3}T^{2/3}\big{)}\). In the case where the MDP is piece-wise stationary, if the learner takes \(\mathcal{I}_{i}\) such that \(\Delta_{\mathcal{I}_{i}}^{p}=0\), it obtains a regret of order \(O(\sqrt{\Delta^{\pi^{*}}T}+\sqrt{\Delta_{\mathcal{S}_{\mathcal{S}}}^{p}T})\), where \(\Delta_{\mathcal{S}}^{p}\) is the number of times the probability transitions of the MDP change over \([T]\).

**A meta algorithm to learn restart times.** In reality, the restart times of Eq. (9), and the optimal learning rate, are unknown to the learner. Hence, we propose to build a meta aggregation algorithm to learn both. Let \(\mathcal{E}\) represent a parametric black-box algorithm with dynamic regret as in Eq. (10). We introduce a meta algorithm \(\mathcal{M}\) that, takes as input a finite set of learning rates \(\Lambda\), and at each episode \(t\), initializes \(|\Lambda|\) instances of \(\mathcal{E}\), denoted as \(\mathcal{E}^{t,\lambda}\) for each \(\lambda\in\Lambda\). Each \(\mathcal{E}^{t,\lambda}\) operates independently within the interval \([t,T]\). At time \(t\), \(\mathcal{M}\) combines the decisions from the active runs \(\{\mathcal{E}^{s,\lambda}\}_{s\leq t,\lambda\in\Lambda}\) by weighted average. The idea is that at time \(t\), some of the outputs of \(\{\mathcal{E}^{s,\lambda}\}_{s\leq t,\lambda\in\Lambda}\) are not based on data prior to \(t^{\prime}<t\), so if the environment changes at time \(t^{\prime}\), these outputs can be given a greater weight by the meta algorithm, enabling it to adapt more quickly to the change. At the same time, we expect a larger weight will be given to the empirically best learning rate. Let \(\mathcal{M}(\mathcal{E},\Lambda)\) be the complete algorithm.

**Remark 3.1**.: _The meta-algorithm increases the computational complexity of the parametric black-box algorithm by a factor of \(T\times|\Lambda|\), as it requires updating \(t\times|\Lambda|\) instances at each episode \(t\). By strategically designing intervals to run the black-box algorithms, previous works on online learning have reduced computational complexity to \(O(\log(T))\)[15; 29; 27]. Extending our analysis to these intervals is straightforward, but it would complicate the presentation of the paper. Thus, we decided to present our results using the naive choice of intervals. Also, in Section 5, we show that a learning rate grid with \(|\Lambda|=\log(T)\) is sufficient to obtain the optimal regret._

**Regret decomposition.** Denote by \(\pi^{t,s,\lambda}\) the policy output from \(\mathcal{E}^{s,\lambda}\) at episode \(t\), for learning rate \(\lambda\), for all \(s\leq t\), and by \(\pi^{t}\) the policy output by the meta algorithm \(\mathcal{M}(\mathcal{E},\Lambda)\) to be played by the learner. The regret of \(\mathcal{M}(\mathcal{E},\Lambda)\) can be decomposed as the sum of the regret suffered by the meta algorithm aggregated scheme, \(\mathcal{M}\), and the regret from the black-box algorithm, \(\mathcal{E}\), played with any learning rate \(\lambda\in\Lambda\). The dynamic regret, defined in Eq. (5), can be decomposed, for any set of intervals \(\mathcal{I}_{i}=[t_{i},t_{i+1}-1]\), with \(1=t_{1}<\ldots<t_{m+1}=T+1\), and for any learning rate \(\lambda\in\Lambda\), as

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)} =\underbrace{\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^ {\pi^{t},p^{t}})-F^{t}(\mu^{\pi^{t,t_{i},\lambda},p^{t}})}_{\text{Meta algorithm regret}}+\sum_{i=1}^{m} \underbrace{\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{\pi^{t,t_{i},\lambda},p^{t}})- F^{t}(\mu^{\pi^{t,*},p^{t}})}_{\text{Black-box regret on }\mathcal{I}_{i}}\] \[:=R_{[T]}^{\text{meta}}+R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}.\] (11)The black-box regret on \(\mathcal{I}_{i}\) is exactly the standard regret for \(T=|\mathcal{I}_{i}|\) with a learning rate of \(\lambda\). Hence, in order to prove low dynamic regret for \(\mathcal{M}(\mathcal{E},\Lambda)\) we have to: show that \(\mathcal{M}\) incurs a low dynamic regret in each interval \(\mathcal{I}_{i}\); find a black-box algorithm \(\mathcal{E}\) for CURL that has dynamic regret as in Eq. (10), and build a learning rate grid \(\Lambda\) allowing us to perform nearly as well as the optimal learning rate.

## 4 MetaCURL Algorithm

We call our meta-algorithm \(\mathcal{M}\) MetaCURL. It is based on sleeping experts, is parameter-free, and achieves optimal regret. Its construction is described below.

### Learning with expert advice

**General setting.** In Learning with Expert Advice (LEA), a learner makes sequential online predictions \(u^{1},\dots,u^{T}\) in a decision space \(\mathcal{U}\), over a series of \(T\) episodes, with the help of \(K\) experts [22; 36; 9]. For each round \(t\), each expert \(k\) makes a prediction \(u^{t,k}\), and the learner combines the experts' predictions by computing a vector \(v^{t}:=(v^{t,1},\dots,v^{t,K})\in\mathcal{S}_{K}\), and predicting the convex combination of experts' prediction \(u^{t}:=\sum_{k=1}^{K}v^{t,k}u^{t,k}\). The environment then reveals a convex loss function \(\ell^{t}:\mathcal{U}\rightarrow\mathbb{R}\). Each expert suffers a loss \(\ell^{t,k}:=\ell^{t}(u^{t,k})\), and the learner suffers a loss \(\hat{\ell}^{t}:=\ell^{t}(u^{t})\). The learner's objective is to keep the cumulative regret with respect to each expert as low as possible. For each expert \(k\), this quantity is defined as \(\text{Reg}_{[T]}(k):=\sum_{t=1}^{T}\hat{\ell}^{t}-\ell^{t,k}\).

**Sleeping experts.** In our case, each black-box algorithm is an expert that does not produce solutions outside its active interval. This problem can be reduced to the sleeping expert problem [8; 23], where experts are not required to provide solutions at every time step. Let \(I^{t,k}\in\{0,1\}\) define a signal equal to \(1\) if expert \(k\) is active at episode \(t\) and \(0\) otherwise. The algorithm knows \((I^{t,k})_{k\in[K]}\) and assigns a zero weight to sleeping experts (\(I^{t,k}=0\) implies \(v^{t,k}=0\)). We would like to have a guarantee with respect to expert \(k\in[K]\) but only when it is active. Hence, we now aim to bound a cumulative regret that depends on the signal \(I^{t,k}\). \(\text{Reg}^{\text{sleep}}_{[T]}(k):=\sum_{t=1}^{T}I^{t,k}(\hat{\ell}^{t}-\ell^ {t,k})\). There is a generic reduction from the sleeping expert framework to the general LEA setting [3; 2] (see Appendix A.1).

### Meta-aggregation scheme

In every episode \(t\), for every learning rate \(\lambda\in\Lambda\) and \(s\leq t\), an instance \(\mathcal{E}^{s,\lambda}\) of the black-box algorithm acts as an expert computing a policy \(\pi^{t,s,\lambda}\). The meta algorithm aims to aggregate these predictions using a sleeping expert approach based on the expert's losses. However, within CURL's framework, the meta algorithm faces two challenges:

**Uncertainty.** At the episode's end, the learner has full information about the objective function \(F^{t}\). If the learner also knew \(p^{t}\), they could recursively calculate the corresponding state-action distribution \(\mu^{\pi^{t,s,\lambda},p^{t}}\) using Eq. (2) and observe the actual loss of each expert, denoted as \(F^{t}(\mu^{\pi^{t,s,\lambda},p^{t}})\). However, given that \(p^{t}\) is unknown to the learner, the true loss remains unobservable. Consequently, the meta-algorithm needs to create an estimator \(\hat{p}^{t}\) for \(p^{t}\) and utilize it to estimate the losses. We propose a method to compute an estimator \(\hat{p}^{t}\) in Subsection 4.3.

**Convexity.** As discussed in Section 2, the objective functions \(F^{t}\) are not convex over the space of polices. However, CURL is equivalent to a convex problem over the state-action distributions satisfying the Bellman's flow as shown in Eq. (4). Therefore, instead of aggregating policies, the meta algorithm aggregates the associated state-action distributions using the probability estimator \(\hat{p}^{t}\) and the recursive scheme at Eq. (2). We detail MetaCURL in Alg. 1 when employed with the Exponentially Weighted Average forecaster (EWA) as the sleeping expert subroutine (we detail EWA in Appendix A.2).

### Building an estimator of \(p^{t}\)

As discussed earlier, applying the learning with experts framework requires estimating the loss of non-played expert policies, which depends on estimating the non-stationary transition probabilities \(\hat{p}^{t}\). Standard RL techniques for bounding the \(L_{1}\) norm between the empirical estimator \(\hat{p}^{t}\) and the true dynamics \(p^{t}\)[44; 49] are not applicable here due to non-stationarity. To address this, we introduce a second layer of sleeping experts for each \((n,x,a)\in[N]\times\mathcal{X}\times\mathcal{A}\), where each expert provides an empirical estimate of \(p^{t}\) based on different intervals. We then propose a new loss function in Eq. (12) and conduct a novel regret analysis in Prop. 5.2 to achieve the optimal regret rate.

In each episode \(t\), the learner calculates independent samples \(x^{t}_{n,x,a}\sim p^{t}_{n}(\cdot|x,a)\) utilizing the external noise sequence \((\varepsilon^{t}_{n})_{n\in[N]}\) observed (just let \(x^{t}_{n,x,a}=g_{n-1}(x,a,\varepsilon^{t}_{n-1})\), see Eq. (8)). Each expert outputs an empirical estimator of \(p^{t}_{n}(\cdot|x,a)\) using samples across different intervals. We assume \(T\) experts, with expert \(s\) active in interval \([s,T]\). Expert \(s\) at episode \(t>s\) outputs:

\[\hat{p}^{t,s}_{n}(x^{\prime}|x,a)=\frac{N^{s:t-1}_{n,x,a}(x^{\prime})}{(t-s)}, \quad\text{with}\;\;N^{s:t-1}_{n,x,a}(x^{\prime}):=\sum_{q=s}^{t-1}\mathds{1} _{\{x^{q}_{n,x,a}=x^{\prime}\}}.\]

We let \(\hat{p}^{t}_{n}(\cdot|x,a)\) be the result of employing sleeping EWA with experts \(\hat{p}^{t,s}_{n}(\cdot|x,a)\), for \(s<t\). Typically, in density estimation with EWA, a logarithmic loss \(-\log(\cdot)\) is used. However, in this case \(-\log(\cdot)\) can be unbounded, so we opt here for a smoothed logarithmic loss, given by, for all \(q\in\mathcal{S}_{\mathcal{X}}\),

\[\ell^{t}(q):=\sum_{x\in\mathcal{X}}-\log\Big{(}q(x)+\frac{1}{|\mathcal{X}|} \Big{)}\mathds{1}_{\{\hat{x}^{t}_{n,x,a}=x\}},\;\text{where}\;\tilde{x}^{t}_{ n,x,a}\sim\Big{(}p^{t}_{n}(\cdot|x,a)+\frac{1}{|\mathcal{X}|}\Big{)}/2.\] (12)

The definition of this non-standard loss is further clarified during the regret analysis in Section 5. This loss function is \(1\)-exp concave (see Lemma 4 of [52]), hence the cumulative regret of EWA with respect to each expert \(s\in[T]\), for all episodes \(\tau\in[s,T]\), satisfies \(\text{Reg}^{\text{sleep}}_{[s,\tau]}(s)=\sum_{t=s}^{\tau}\ell^{t}(\hat{p}^{t}_ {n}(\cdot|x,a))-\ell^{t}(\hat{p}^{t,s}_{n}(\cdot|x,a))\leq\log(T)\) (for more information on the regret bounds of EWA with exp-concave losses, see Appendix A.2). We describe the complete online scheme to compute \(\hat{p}^{t}\) in Alg. 3 at Appendix B.

## 5 Regret analysis

This section presents the main result concerning MetaCURL's regret analysis. Subsection 5.1 shows an upper bound for \(R^{\text{meta}}\) when MetaCURL is played with EWA and \(\hat{p}^{t}\) is computed as in Subsection. 4.3. Subsection 5.2 introduces a learning rate grid for MetaCURL when the black-box algorithm meets the dynamic regret criteria in Eq. (10), providing an upper bound for \(R^{\text{black-box}}\). Given the dynamic regret decomposition of Eq. (11), we see that the combination of these results leads to our main result, the full proof of which can be found in appendix (F) :

**Theorem 5.1** (Main result).: _Let \(\delta\in(0,1)\). Playing MetaCURL, with a parametric black-box algorithm \(\mathcal{E}\) with dynamic regret as in Eq. (10), with a learning rate grid \(\Lambda:=\{2^{-j}|j=0,1,2,\ldots,\lceil\log_{2}(T)/2\rceil\}\), and with EWA as the sleeping expert subroutine, we obtain, with probability at least \(1-2\delta\), for any sequence of policies \((\pi^{t,*})_{t\in[T]}\),_

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq\tilde{O}\Big{(}\sqrt{\Delta^{ \pi^{*}}T}+\min\big{\{}\sqrt{T\Delta_{\infty}^{p}},\;T^{2/3}(\Delta^{p})^{1/3} \big{\}}\Big{)}.\]

### Meta-algorithm analysis

Given the uncertainty in the probability transition, the meta regret term can be decomposed as follows:

\[R_{[T]}^{\text{meta}} =\underbrace{\sum_{t=1}^{T}F^{t}(\mu^{\pi^{t},p^{t}})-F^{t}(\mu^{ \pi^{t},\hat{p}^{t}})}_{R_{[T]}^{\hat{p}^{t}}(\pi^{t})\,\text{($\hat{p}^{t}$ estimation)}}\] (13) \[+\underbrace{\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{ \pi^{t},\hat{p}^{t}})-F^{t}(\mu^{\pi^{t},t_{i},\lambda},\hat{p}^{t})}_{\text {sleeping LEA regret}}+\underbrace{\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}( \mu^{\pi^{t},t_{i},\lambda},\hat{p}^{t})-F^{t}(\mu^{\pi^{t},t_{i},\lambda},p^ {t})}_{\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}R_{\mathcal{I}_{i}}^{\hat{p} ^{t}}(\pi^{t},t_{i},\lambda)\,\hat{p}^{t}\text{ estimation}}).\]

**Sleeping LEA regret.** Referring to Thm. A.1 in Appendix A, using sleeping EWA as the sleeping expert subroutine of MetaCURL, with signals \(I^{t,s}=1\) for active experts (\(s\leq t\)), experts' convex losses \(\ell^{t,s,\lambda}:=F^{t}(\mu^{\pi^{t,s,\lambda},\hat{p}^{t}})\), and learner loss \(\hat{\ell}^{t}:=F^{t}(\mu^{\pi^{t},\hat{p}^{t}})\), yields, for any \(m\in[T]\) and for any set of intervals \(\mathcal{I}_{i}=[t_{i},t_{i+1}-1]\), with \(1=t_{1}<\ldots<t_{m+1}=T+1\),

\[\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{\pi^{t},\hat{p }^{t}})-F^{t}(\mu^{\pi^{t},t_{i},\lambda},\hat{p}^{t}) =\sum_{i=1}^{m}\text{Reg}_{\mathcal{I}_{i}}^{\text{sleep}}(t_{i})\] (14) \[\leq\sum_{i=1}^{m}\sqrt{\frac{|\mathcal{I}_{i}|}{2}\log(T|\Lambda |)}\leq\sqrt{\frac{mT}{2}\log(T|\Lambda|)}.\]

\(\hat{p}^{t}\) **Estimation regret.** In a scenario without uncertainty in the MDP's probability transitions, the meta-algorithm's regret would simply be bounded by Eq. (14), the sleeping expert regret used as a subroutine. However, given the presence of uncertainty, the main challenge in analyzing the meta-regret comes from the regret terms associated with the estimator \(\hat{p}^{t}\). We outline this analysis in Prop. 5.2.

**Proposition 5.2**.: _Let \(\delta\in(0,1)\), \(C:=\sqrt{\frac{1}{2}\log\big{(}\frac{N|\mathcal{X}||\mathcal{A}||2^{|\mathcal{ X}|}T}{\delta}\big{)}}\), and \(L_{F}\) be the Lipschitz constant of \(F^{t}\), with respect to the norm \(\|\cdot\|_{\infty,1}\), for all \(t\in[T]\). With a probability of at least \(1-\delta\), MetaCURL obtains_

\[R_{[T]}^{\hat{p}}(\pi^{t}):=\sum_{t=1}^{T}F^{t}(\mu^{\pi^{t},p^{t}})-F^{t}(\mu ^{\pi^{t},\hat{p}^{t}})\leq 2L_{F}N^{2}|\mathcal{X}|\sqrt{3|\mathcal{A}|}C^{2/3} \log(T)^{1/3}T^{2/3}(\Delta^{p})^{1/3}.\]

_For any \(m\in[T]\) and for any set of intervals \(\mathcal{I}_{i}=[t_{i},t_{i+1}-1]\), with \(1=t_{1}<\ldots<t_{m+1}=T+1\), the same bound is valid for \(\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}R_{\mathcal{I}_{i}}^{\hat{p}}(\pi^{t,t _{i},\lambda})\)._Proof.: The proof idea is based mainly on the formulation of \(\hat{p}^{t}\) described in Subsection 4.3. We start by using the convexity of \(F^{t}\) to linearize the expression, then we apply Holder's inequality and exploit the \(L_{F}\)-Lipschitz property of \(F^{t}\) to establish an upper bound based on the \(L_{1}\) norm difference of the state-action distributions induced by the true probability transition and the estimator. Using Lemma C.5 in Appendix C, we then obtain that

\[R_{[T]}^{\hat{p}}\leq L_{F}\sum_{t=1}^{T}\sum_{n=1}^{N}\sum_{j=1}^{n}\sum_{x,a} \mu_{j-1}^{\pi^{t}_{j}\cdot p^{t}}(x,a)\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}( \cdot|x,a)\|_{1}.\]

To use the results from Subsection 4.3, we first regularize \(p^{t}\) and \(\hat{p}^{t}\), for each \((n,x,a)\), by averaging each with the uniform distribution over \(\mathcal{X}\), that we denote by \(p_{0}:=1/|\mathcal{X}|\). As both probabilities are now lower bounded, we can employ Pinsker's inequality to convert the \(L_{1}\) norm into a KL divergence. The sum over \(t\in[T]\) of the KL divergence can then be decomposed as follows:

\[\sum_{t=1}^{T}\text{KL}\Big{(}\frac{p_{j}^{t}(\cdot|x,a)+p_{0}}{2 }\Big{|}\frac{\hat{p}_{j}^{t}(\cdot|x,a)+p_{0}}{2}\Big{)}=\sum_{i=1}^{m}\sum_{ t\in\mathcal{I}_{i}}\text{KL}\Big{(}\frac{p_{j}^{t}(\cdot|x,a)+p_{0}}{2} \Big{|}\frac{\hat{p}_{j}^{t,t_{i}}(\cdot|x,a)+p_{0}}{2}\Big{)}\] \[\quad+\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}\mathbb{E}_{\hat{x} _{j,x,a}^{t}}\big{[}\log\big{(}\hat{p}_{j}^{t,t_{i}}(\tilde{x}_{j,x,a}^{t}|x,a )+p_{0}\big{)}-\log\big{(}\hat{p}_{j}^{t}(\tilde{x}_{j,x,a}^{t}|x,a)+p_{0} \big{)}\big{]},\]

where \(\hat{p}_{j}^{t,t_{i}}(\cdot|x,a)\) is the empirical estimate of \(p_{j}^{t}(\cdot|x,a)\) calculated with the observed data from \(t_{i}\) to \(t-1\), and the expectation is over \(\tilde{x}_{j,x,a}^{t}\sim(p_{j}^{t}(\cdot|x,a)+p_{0})/2\). The second term is the cumulative regret of computing \(\hat{p}^{t}\) using EWA with loss as in Eq. (12), and is bounded by \(m\log(T)\). We finish and give more details of the proof in Appendix D. 

Prop. 5.2 together with Eq. (14) yields the main result of this subsection:

**Proposition 5.3** (Meta regret bound).: _With the same assumptions as Prop. 5.2, for any \(m\in[T]\), with probability at least \(1-2\delta\),_

\[R_{[T]}^{\text{meta}}\leq 4L_{F}N^{2}|\mathcal{X}|\sqrt{3|\mathcal{A}|}C^{2/3} \log(T)^{1/3}T^{2/3}(\Delta^{p})^{1/3}+\sqrt{\frac{mT}{2}\log(T|\Lambda|)}.\]

### Black-box algorithm analysis

Assuming \(\mathcal{E}\) is a parametric black-box algorithm with dynamic regret satisfying Eq. (10) for any learning rate \(\lambda>0\), we only need to address the selection of the \(\lambda\)s grid and optimize across \(\lambda\) to achieve our final bound on \(R_{[T]}^{\text{black-box}}\).

**Learning rate grid.** The dynamic regret of Eq. (10) implies that any two \(\lambda\) that are a constant factor of each other will guarantee the same upper-bound up to essentially the same constant factor. We therefore choose an exponentially spaced grid

\[\Lambda:=\big{\{}2^{-j}|j=0,1,2,\ldots,\lceil\log_{2}(T)/2\rceil\big{\}}.\] (15)

The meta-algorithm aggregation scheme guarantees that the learner performs as well as the best empirical learning rate. We thus obtain a bound on \(R_{[T]}^{\text{black-box}}\), with its proof in Appendix E:

**Proposition 5.4** (Black-box regret bound).: _Assume MetaCURL is played with a black-box algorithm satisfying dynamic regret as in Eq. (10), with learning rate grid as in Eq. (15). Hence, for any sequence of policies \((\pi^{t,*})_{t\in[T]}\),_

\[R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq N\Big{(} \frac{c_{2}\Delta^{\pi^{*}}+c_{3}}{c_{1}}\Big{)}+c_{1}\sqrt{T}+3\sqrt{c_{1}(c_{2 }\Delta^{\pi^{*}}+c_{3}m)T}+\frac{T\Delta^{p}}{m}.\]

**Greedy MD-CURL.** Greedy MD-CURL, developed by [39], is a computationally efficient policy-optimization algorithm known for achieving sublinear static regret in online CURL with adversarial objective functions within a stationary MDP. In Thm. G.3 of Appendix G, we extend this analysis showing that Greedy MD-CURL also achieves dynamic regret as in Eq. (10). To our knowledge, this is the first dynamic regret result for a CURL algorithm. Hence, Greedy MD-CURL can be used as a black-box for MetaCURL. We detail Greedy MD-CURL in Alg. 4 in Appendix G.

Conclusion, discussion, and future work

In this paper, we present MetaCURL, the first algorithm for dealing with non-stationarity in CURL, a setting covering many problems in the literature that modifies the standard linear RL configuration, making typical RL techniques difficult to use. We also employ a novel approach to deal with non-stationarity in MDPs using the learning with expert advice framework from the online learning literature. The main difficulty in analyzing this method arises from uncertainty about probability transitions. We overcome this problem by employing a second expert scheme, and show that MetaCURL achieves near-optimal regret.

Compared to the RL literature, our approach is more efficient, deals with adversarial losses, and has a better regret dependency concerning the varying losses, but to do so, we need to simplify the assumptions about the dynamics (all uncertainty comes only from the external noise, that is independent of the agent's state-action). There seems to be a trade-off in RL: all algorithms dealing with both non-stationarity and full exploration use UCRL-type approaches, and are thus computationally expensive. We thus leave a question for future work: _How can we effectively manage non-stationarity and adversarial losses using efficient algorithms, all while addressing full exploration?_

## References

* [1] P. Abbeel and A. Y. Ng. Apprenticeship learning via inverse reinforcement learning. In _International Conference on Machine Learning (ICML)_, 2004.
* [2] D. Adamskiy, W. M. Koolen, A. Chernov, and V. Vovk. A closer look at adaptive regret. _Journal of Machine Learning Research_, 17(23):1-21, 2016.
* [3] D. Adamskiy, M. K. K. Warmuth, and W. M. Koolen. Putting bayes to sleep. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 25, 2012.
* [4] P. Auer, T. Jaksch, and R. Ortner. Near-optimal regret bounds for reinforcement learning. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 21, 2008.
* [5] A. Barakat, I. Fatkhullin, and N. He. Reinforcement learning with general utilities: simpler variance reduction and large state-action space. In _International Conference on Machine Learning (ICML)_, pages 1753-1800, 2023.
* [6] M. Bayati. Power management policy for heterogeneous data center based on histogram and discrete-time mdp. _Electronic Notes in Theoretical Computer Science_, 337:5-22, 2018. Proceedings of the Ninth International Workshop on the Practical Application of Stochastic Modelling (PASM).
* [7] A. Bensoussan, P. Yam, and J. Frehse. _Mean Field Games and Mean Field Type Control Theory_. SpringerBriefs in Mathematics. Springer, 2013.
* [8] A. Blum. Empirical support for winnow and weighted-majority based algorithms: results on a calendar scheduling domain. In A. Prieditis and S. Russell, editors, _Machine Learning Proceedings 1995_, pages 64-72, 1995.
* [9] N. Cesa-Bianchi and G. Lugosi. _Prediction, Learning, and Games_. Cambridge University Press, 2006.
* [10] Y. Chen, S. S. Du, and K. Jamieson. Improved corruption robust algorithms for episodic reinforcement learning. In M. Meila and T. Zhang, editors, _International Conference on Machine Learning (ICML)_, volume 139, pages 1561-1570, 2021.
* [11] W. C. Cheung. Exploration-exploitation trade-off in reinforcement learning on online markov decision processes with global concave rewards. _ArXiv_, abs/1905.06466, 2019.
* [12] W. C. Cheung. Regret minimization for reinforcement learning with vectorial feedback and complex objectives. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 32, 2019.
* [13] W. C. Cheung, D. Simchi-Levi, and R. Zhu. Reinforcement learning for non-stationary Markov decision processes: The blessing of (More) optimism. In _International Conference on Machine Learning (ICML)_, volume 119, pages 1843-1854, 2020.
* [14] A. Cohen, Y. Efroni, Y. Mansour, and A. Rosenberg. Minimax regret for stochastic shortest path. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 34, pages 28350-28361, 2021.
* [15] A. Daniely, A. Gonen, and S. Shalev-Shwartz. Strongly adaptive online learning. In F. Bach and D. Blei, editors, _Proceedings of the 32nd International Conference on Machine Learning (ICML)_, volume 37, pages 1405-1411, 2015.
* [16] R. De Santi, M. Prajapat, and A. Krause. Global reinforcement learning : Beyond linear and convex rewards via submodular semi-gradient methods. In _Proceedings of the 41st International Conference on Machine Learning_, volume 235, pages 10235-10266, 2024.
* [17] O. D. Domingues, P. M'enard, M. Pirotta, E. Kaufmann, and M. Valko. A kernel-based approach to non-stationary reinforcement learning in metric spaces. In _International Conference on Artificial Intelligence and Statistics (AISTATS)_, volume 130, pages 3538-3546, 2021.

* [18] Y. Efroni, L. Shani, A. Rosenberg, and S. Mannor. Optimistic policy optimization with bandit feedback. In _International Conference on Machine Learning (ICML)_, volume 119, pages 8604-8613, 2020.
* [19] E. Even-Dar, S. M. Kakade, and Y. Mansour. Online markov decision processes. _Mathematics of Operations Research_, 34(3):726-736, 2009.
* [20] Y. Fei, Z. Yang, Z. Wang, and Q. Xie. Dynamic regret of policy optimization in non-stationary environments. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 33, pages 6743-6754, 2020.
* [21] S. Feng, M. Yin, R. Huang, Y.-X. Wang, J. Yang, and Y. Liang. Non-stationary reinforcement learning under general function approximation. In _International Conference on Machine Learning (ICML)_, volume 202, pages 9976-10007, 2023.
* [22] Y. Freund and R. E. Schapire. A decision-theoretic generalization of on-line learning and an application to boosting. _Journal of Computer and System Sciences_, 55(1):119-139, 1997.
* [23] Y. Freund, R. E. Schapire, Y. Singer, and M. K. Warmuth. Using and combining predictors that specialize. In _Annual ACM Symposium on Theory of Computing (STOC)_, page 334-343, 1997.
* [24] P. Gajane, R. Ortner, and P. Auer. A sliding-window algorithm for markov decision processes with arbitrarily changing rewards and transitions. _ArXiv_, abs/1805.10066, 2018.
* [25] M. Geist, J. Perolat, M. Lauriere, R. Elie, S. Perrin, O. Bachem, R. Munos, and O. Pietquin. Concave utility reinforcement learning: The mean-field game viewpoint. In _International Conference on Autonomous Agents and Multiagent Systems_, page 489-497, 2022.
* [26] S. K. S. Ghasemipour, R. Zemel, and S. Gu. A divergence minimization perspective on imitation learning methods. In _Proceedings of the Conference on Robot Learning_, volume 100, pages 1259-1277, 2020.
* [27] A. Gyorgy, T. Linder, and G. Lugosi. Efficient tracking of large classes of experts. In _2012 IEEE International Symposium on Information Theory Proceedings_, pages 885-889, 2012.
* [28] E. Hazan, S. Kakade, K. Singh, and A. Van Soest. Provably efficient maximum entropy exploration. In _International Conference on Machine Learning (ICML)_, volume 97, pages 2681-2691, 2019.
* [29] E. Hazan and C. Seshadhri. Adaptive algorithms for online decision problems. _Electronic Colloquium on Computational Complexity (ECCC)_, 14, 01 2007.
* [30] C. Jin, T. Jin, H. Luo, S. Sra, and T. Yu. Learning adversarial Markov decision processes with bandit feedback and unknown transition. In _International Conference on Machine Learning (ICML)_, volume 119, pages 4860-4869, 2020.
* [31] T. Jin, J. Liu, C. Rouyer, W. Chang, C.-Y. Wei, and H. Luo. No-regret online reinforcement learning with adversarial losses and transitions. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 36, pages 38520-38585, 2023.
* [32] T. Jin and H. Luo. Simultaneously learning stochastic and adversarial episodic mdps with known transition. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 33, pages 16557-16566, 2020.
* [33] K.-S. Jun, F. Orabona, S. Wright, and R. Willett. Improved Strongly Adaptive Online Learning using Coin Betting. In _International Conference on Artificial Intelligence and Statistics (AISTATS)_, volume 54, pages 943-951, 2017.
* [34] P. Lavigne and L. Pfeiffer. Generalized conditional gradient and learning in potential mean field games. _Applied Mathematics & Optimization_, 88(3):89, Oct 2023.
* [35] J. W. Lavington, S. Vaswani, and M. Schmidt. Improved policy optimization for online imitation learning. In _Proceedings of The 1st Conference on Lifelong Learning Agents_, volume 199, pages 1146-1173, 2022.

* [36] N. Littlestone and M. Warmuth. The weighted majority algorithm. _Information and Computation_, 108(2):212-261, 1994.
* [37] H. Luo, C.-Y. Wei, and C.-W. Lee. Policy optimization in adversarial mdps: Improved exploration via dilated bonuses. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 34, pages 22931-22942, 2021.
* [38] T. Lykouris, M. Simchowitz, A. Slivkins, and W. Sun. Corruption-robust exploration in episodic reinforcement learning. In _Conference on Learning Theory (COLT)_, volume 134, pages 3242-3245, 2021.
* [39] B. M Moreno, M. Bregere, P. Gaillard, and N. Oudjane. Efficient model-based concave utility reinforcement learning through greedy mirror descent. In _International Conference on Artificial Intelligence and Statistics (AISTATS)_, volume 238, pages 2206-2214, 2024.
* [40] W. Mao, K. Zhang, R. Zhu, D. Simchi-Levi, and T. Basar. Near-optimal model-free reinforcement learning in non-stationary episodic mdps. In _International Conference on Machine Learning (ICML)_, volume 139, pages 7447-7458, 2021.
* [41] B. Marin Moreno, M. Bregere, P. Gaillard, and N. Oudjane. (Online) Convex Optimization for Demand-Side Management: Application to Thermostatically Controlled Loads, Jan. 2023.
* [42] M. Mutti, R. De Santi, P. De Bartolomeis, and M. Restelli. Challenging common assumptions in convex reinforcement learning. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 35, pages 4489-4502, 2022.
* [43] M. Mutti, R. D. Santi, P. D. Bartolomeis, and M. Restelli. Convex reinforcement learning in finite trials. _Journal of Machine Learning Research_, 24(250):1-42, 2023.
* [44] G. Neu, A. Gyorgy, and C. Szepesvari. The adversarial stochastic shortest path problem with unknown transition probabilities. In _International Conference on Artificial Intelligence and Statistics (AISTATS)_, pages 805-813. PMLR, 2012.
* [45] R. Ortner, P. Gajane, and P. Auer. Variational regret bounds for reinforcement learning. In _Proceedings of The 35th Uncertainty in Artificial Intelligence Conference_, volume 115, pages 81-90, 2020.
* [46] M. Prajapat, M. Mutny, M. Zeilinger, and A. Krause. Submodular reinforcement learning. In _International Conference on Learning Representations (ICLR)_, 2024.
* [47] A. Raj, P. Gaillard, and C. Saad. Non-stationary online regression, 2020.
* [48] A. Rosenberg and Y. Mansour. Online convex optimization in adversarial Markov decision processes. In _International Conference on Machine Learning (ICML)_, volume 97, pages 5478-5486, 2019.
* [49] A. Rosenberg and Y. Mansour. Online convex optimization in adversarial Markov decision processes. In _International Conference on Machine Learning (ICML)_, pages 5478-5486, 2019.
* [50] A. Rosenberg and Y. Mansour. Stochastic shortest path with adversarially changing costs. In _International Joint Conference on Artificial Intelligence (IJCAI)_, pages 2936-2942, 2021.
* [51] A. Seguret, C. Wan, and C. Alasseur. A mean field control approach for smart charging with aggregate power demand constraints. In _2021 IEEE PES Innovative Smart Grid Technologies Europe (ISGT Europe)_, pages 01-05, 2021.
* [52] D. van der Hoeven, N. Zhivotovskiy, and N. Cesa-Bianchi. High-probability risk bounds via sequential predictors, 2023.
* [53] C.-Y. Wei, C. Dann, and J. Zimmert. A model selection approach for corruption robust reinforcement learning. In _International Conference on Algorithmic Learning Theory (ALT)_, volume 167, pages 1043-1096, 2022.

* [54] C.-Y. Wei and H. Luo. Non-stationary reinforcement learning without prior knowledge: an optimal black-box approach. In _Conference on Learning Theory (COLT)_, volume 134, pages 4300-4354, 2021.
* [55] T. Zahavy, A. Cohen, H. Kaplan, and Y. Mansour. Apprenticeship learning via frank-wolfe. In _AAAI Conference on Artificial Intelligence_, 2019.
* [56] T. Zahavy, B. O' Donoghue, G. Desjardins, and S. Singh. Reward is enough for convex mdps. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 34, pages 25746-25759, 2021.
* [57] J. Zhang, A. Koppel, A. S. Bedi, C. Szepesvari, and M. Wang. Variational policy gradient method for reinforcement learning with general utilities. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 33, pages 4572-4583, 2020.
* [58] J. Zhang, C. Ni, z. Yu, C. Szepesvari, and M. Wang. On the convergence and sample efficiency of variance-reduced policy gradient method. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 34, pages 2228-2240, 2021.
* [59] L. Zhang, T. Yang, rong jin, and Z.-H. Zhou. Dynamic regret of strongly adaptive methods. In _International Conference on Machine Learning (ICML)_, volume 80, pages 5882-5891, 2018.
* [60] X. Zhang, Y. Chen, X. Zhu, and W. Sun. Robust policy gradient against strong data corruption. In _International Conference on Machine Learning (ICML)_, volume 139, pages 12391-12401, 2021.
* [61] A. Zimin and G. Neu. Online learning in episodic markovian decision processes by relative entropy policy search. In _Advances in Neural Information Processing Systems (NeurIPS)_, volume 26, pages 1583-1591, 2013.

Learning with expert advice

In this section, we take a closer look at the Learning with Expert Advice (LEA) framework. We start by presenting, in Subsection A.1, a general reduction of the sleeping experts framework to the standard framework. Thus, any LEA algorithm can be used as a sub-routine for MetaCURL. In Section 5 of the main paper, we show a regret bound for MetaCURL using the Exponentially Weighted Average Forecaster (EWA) algorithm [9], also known as Hedge. In Subsection A.2 we present the main results of playing EWA with convex and exp-concave losses.

**Setting.** We recall the general setting of learning with expert advice (LEA) as presented in the main paper: a learner makes sequential online predictions \(u^{1},\ldots,u^{T}\) in a decision space \(\mathcal{U}\), over a series of \(T\) episodes, with the help of \(K\) experts. For each round \(t\), each expert \(k\) makes a prediction \(u^{t,k}\), and the learner combines the experts' predictions by computing a vector \(v^{t}:=(v^{t,1},\ldots,v^{t,K})\in\mathcal{S}_{K}\), and predicting \(u^{t}:=\sum_{k=1}^{K}v^{t,k}u^{t,k}\). The environment then reveals a convex loss function \(\ell^{t}:\mathcal{U}\rightarrow\mathbb{R}\). Each expert suffers a loss \(\ell^{t,k}:=\ell^{t}(u^{t,k})\), and the learner suffers a loss \(\hat{\ell}^{t}:=\ell^{t}(u^{t})\). The learner's objective is to keep the cumulative regret with respect to each expert as low as possible. For each expert \(k\), this quantity is defined as \(\text{Reg}_{[T]}(k):=\sum_{t=1}^{T}\hat{\ell}^{t}-\ell^{t,k}\).

### Sleeping experts

The sleeping expert problem [8; 23] is a LEA framework where experts are not required to provide solutions at every time step. Let \(I^{t,k}\in\{0,1\}\) define a binary signal that equals \(1\) if expert \(k\) is active at episode \(t\) and \(0\) otherwise. The algorithm knows \((I^{t,k})_{k\in[K]}\) and assigns a zero weight to sleeping experts. We would like to have a guarantee with respect to expert \(k\in[K]\) but only when it is active. Hence, we now aim to bound a cumulative regret that depends on the signal \(I^{t,k}\): \(\text{Reg}_{[T]}^{\text{sleep}}(k):=\sum_{t=1}^{T}I^{t,k}(\hat{\ell}^{t}- \ell^{t,k})\). We present a generic reduction from the sleeping expert framework to the standard LEA framework [3; 2]:

Let, for all episodes \(t\in[T]\),

\[\hat{u}^{t}:=\frac{\sum_{k=1}^{K}I^{t,k}v^{t,k}u^{t,k}}{\sum_{k=1}^{K}I^{t,k} v^{t,k}}.\]

We play a standard LEA algorithm with modified outputs where, at episode \(t\), expert \(k\) outputs

\[\tilde{u}^{t,k}:=\begin{cases}u^{t,k},&\text{ if $k$ is active at episode $t$}\\ \hat{u}^{t},&\text{ if not.}\end{cases}\]

A standard LEA algorithm gives an upper bound on the regret \(\text{Reg}_{T}(k)\) with respect to each expert \(k\). Using that \(\sum_{k=1}^{K}\tilde{u}^{t,k}v^{t,k}=\hat{u}^{t}\), we obtain that

\[\text{Reg}_{[T]}(k) :=\sum_{t=1}^{T}\ell^{t}\bigg{(}\sum_{k=1}^{K}\tilde{u}^{t,k}v^{ t,k}\bigg{)}-\ell^{t}(\tilde{u}^{t,k})\] \[=\sum_{t=1}^{T}\ell^{t}(\hat{u}^{t})-\ell^{t}(\tilde{u}^{t,k})\] \[=\sum_{t=1}^{T}I^{t,k}\big{(}\ell^{t}(\hat{u}^{t})-\ell^{t}(u^{t, k})\big{)}\] \[=:\text{Reg}_{[T]}^{\text{sleep}}(k).\]

Consequently, the cumulative regret with respect to each expert during the times it is active is upper bounded by the standard regret of playing a LEA algorithm with the modified outputs.

### Exponentially Weighted Average forecaster

The exponentially weighted average forecaster (EWA), also called Hedge, is a LEA algorithm that chooses a weight that decreases exponentially fast with past errors. We present EWA in Alg. 2.

We recall two results of playing EWA with convex losses, and with exp-concave losses, used in the main paper:

**Theorem A.1** (EWA with convex losses: Corollary \(2.2\) from [9]).: _If the \(\ell^{t}\) losses are convex and take value in \([0,1]\), then the regret of the learner playing EWA with any \(\eta>0\) satisfies, for any \(k\in[K]\),_

\[\text{Reg}_{[T]}(k)\leq\frac{\log(K)}{\eta}+\frac{T\eta}{8}.\]

_In particular, with \(\eta=\sqrt{8\log(K)/T}\), the upper bound becomes \(\sqrt{(T/2)\log(K)}\)._

**Theorem A.2** (EWA with exp-concave losses: Thm. \(3.2\) from [9]).: _If the \(\ell^{t}\) losses are \(\eta\)-exp concave, then the regret of the learner playing EWA (with the same value of \(\eta\)) satisfies, for any \(k\in[K]\),_

\[\text{Reg}_{[T]}(k)\leq\frac{\log(K)}{\eta}.\]Appendix B Algorithm for the online estimation of the probability kernel (\(\hat{p}^{t}\) estimator)

```
1:for\(t\in\{1,\dots,T\}\)do
2: Get agent's external noise trajectory \((\varepsilon_{n}^{t})_{n\in[N]}\) from MetaCURL
3:for\((n,x,a)\in[N]\times\mathcal{X}\times\mathcal{A}\)do
4: Compute \(x_{n,x,a}^{t}=g_{n-1}(x,a,\varepsilon_{n-1}^{t})\)
5: Update the empirical estimations for \(s<t\) and \(x^{\prime}\in\mathcal{X}\): \[\hat{p}_{n}^{t,s}(x^{\prime}|x,a)=\frac{\mathds{1}_{\{x_{n,x,a}^{t}=x^{\prime }\}}}{t-s}+\frac{(t-1-s)}{t-s}\hat{p}_{n}^{t-1,s}(x^{\prime}|x,a)\]
6: Initialize a new estimator, \(\hat{p}_{n}^{t,t}(x^{\prime}|x,a)=\mathds{1}_{\{x_{n,x,a}^{t}=x^{\prime}\}}\) for all \(x^{\prime}\in\mathcal{X}\), assign it a new weight vector \(v_{n,x,a}^{t,t}=\frac{1}{t}\), and normalize weight vectors \(v_{n,x,a}^{t,s}\) for \(s\in[t-1]\) such that \(v_{n,x,a}^{t}:=(v_{n,x,a}^{t,s})_{s\leq t,\lambda\in\Lambda}\) is a probability vector in \(\mathbb{R}^{t}\)
7: Simulate a sample \(\tilde{x}_{n,x,a}^{t}\) from distribution \(\big{(}p_{n}^{t}(\cdot|x,a)+\frac{1}{|\mathcal{X}|}\big{)}/2\): \[\tilde{x}_{n,x,a}^{t}=\left\{\begin{array}{rl}&x_{n,x,a}^{t},\text{ with probability }1/2,\\ &\text{Uniformly over }\mathcal{X},\text{ with probability }1/2,\end{array}\right.\] and use it to build the loss function \[\ell^{t}(q):=\sum_{x\in\mathcal{X}}-\log\Big{(}q(x)+\frac{1}{|\mathcal{X}|} \Big{)}\mathds{1}_{\{\tilde{x}_{n,x,a}^{t}=x\}}\]
8: Update weights using EWA with loss \(\ell^{t}\): for all \(s\leq t\), \[v_{n,x,a}^{t+1,s}=\frac{\hat{v}_{n,x,a}^{t,s}\exp\big{(}-\ell^{t}(\hat{p}_{n} ^{t,s}(\cdot|x,a))\big{)}}{\sum_{s^{\prime}=1}^{t}\hat{v}_{n,x,a}^{t,s^{\prime }}\exp\big{(}-\ell^{t}(\hat{p}_{n}^{t,s^{\prime}}(\cdot|x,a))\big{)}}\] (EWA update)
9: Compute \(\hat{p}_{n}^{t+1}(\cdot|x,a)=\sum_{s=1}^{t}v_{n,x,a}^{t+1,s}\hat{p}_{n}^{t,s}( \cdot|x,a)\)
10:endfor
11: Issue \(\hat{p}^{t+1}\) to MetaCURL (line 18 of Alg. 1)
12:endfor ```

**Algorithm 3** Online estimation of the probability kernel (\(\hat{p}^{t}\) estimator)

## Appendix C Auxiliary lemmas

We start with some auxiliary results. For \(t\in I:=[t_{s}+1,t_{e}]\subseteq[T]\), we define the average probability distribution for all \(n\) and \((x,a)\) as

\[\overline{p}^{t}(x^{\prime}|x,a)=\frac{1}{t-t_{s}}\sum_{s=t_{s}}^{t-1}p_{n}^{s }(x^{\prime}|x,a).\]

**Lemma C.1**.: _Let \(\hat{p}^{t,t_{s}}\) be the empirical probability transition kernel computed with data from episodes \([t_{s},t-1]\). For any \(\delta\in(0,1)\), with probability \(1-\delta\),_

\[\|\hat{p}_{n}^{t,t_{s}}(\cdot|x,a)-\overline{p}_{n}^{t}(\cdot|x,a)\|_{1}\leq \sqrt{\frac{1}{2(t-t_{s})}\log\bigg{(}\frac{N|\mathcal{X}||\mathcal{A}|2^{| \mathcal{X}|}T}{\delta}\bigg{)}},\]

_simultaneously for all \(n\in[N]\), \((x,a)\in\mathcal{X}\times\mathcal{A}\), \(t_{s}\in[T-1]\), and \(t\in[t_{s}+1,T]\)._

Proof.: For a fixed \(n\in[N]\), \((x,a)\in\mathcal{X}\times\mathcal{A}\), and \(\theta\in\{-1,1\}^{|\mathcal{X}|}\), we define for all \(s\in I\),

\[Y_{n,x,a,\theta}^{s}:=\sum_{x^{\prime}\in\mathcal{X}}\theta(x^{\prime}) \mathds{1}_{\{g_{n}(x,a,\varepsilon_{n}^{s})=x^{\prime}\}},\]

a Bernoulli random variable with mean value given by \(\sum_{x^{\prime}\in\mathcal{X}}\theta(x^{\prime})p_{n}^{s}(x^{\prime}|x,a)\).

The sequence of random variables given by \(\big{(}Y^{s}_{n,x,a,\theta}\big{)}_{s\in I}\) is independent, as we assume that the external noises observed at each episode are all independent. Hence, by Hoeffding's inequality we get that, for all \(\xi>0\),

\[\mathbb{P}\bigg{(}\sum_{s=t_{s}}^{t-1}Y^{s}_{n,x,a,\theta}-\mathbb{E}\Big{[}\sum _{s=t_{s}}^{t-1}Y^{s}_{n,x,a,\theta}\Big{]}\geq\xi\bigg{)}\leq\exp\Big{(}\frac {-2\xi^{2}}{t-t_{s}}\Big{)}.\]

Therefore, we have that

\[\mathbb{P}\bigg{(}\sum_{x^{\prime}\in\mathcal{X}}\theta(x^{\prime })\big{(}\hat{p}^{t,t_{s}}_{n}(x^{\prime}|x,a)-\overline{p}^{t}_{n}(x^{\prime} |x,a)\big{)}\geq\xi\bigg{)}\] \[\qquad=\mathbb{P}\bigg{(}\frac{1}{t-t_{s}}\bigg{[}\sum_{s=t_{s}} ^{t-1}\sum_{x^{\prime}\in\mathcal{X}}\theta(x^{\prime})\mathds{1}_{\{g_{n}(x,a,e^{s}_{n})=x^{\prime}\}}-\sum_{s=t_{s}}^{t-1}\theta(x^{\prime})p^{s}_{n}(x ^{\prime}|x,a)\bigg{]}\geq\xi\bigg{)}\] \[\qquad=\mathbb{P}\bigg{(}\frac{1}{t-t_{s}}\bigg{(}\sum_{s=t_{s}} ^{t-1}Y^{s}_{n,x,a,\theta}-\mathbb{E}\Big{[}\sum_{s=t_{s}}^{t-1}Y^{s}_{n,x,a, \theta}\Big{]}\bigg{)}\geq\xi\bigg{)}\] \[\qquad\leq\exp\big{(}-2\xi^{2}(t-t_{s})\big{)}.\]

By applying an union bound on all \(n\in[N]\), \((x,a)\in\mathcal{X}\times\mathcal{A}\), and \(\theta\in\{-1,1\}^{|\mathcal{X}|}\) and noting that, for any two probability distributions \(p,q\in\Delta_{\mathcal{X}}\), we have that

\[\|p-q\|_{1}=\max_{\theta\in\{-1,1\}^{|\mathcal{X}|}}\sum_{x\in\mathcal{X}} \theta(x)(p(x)-q(x)),\]

we arrive at the final result.

**Lemma C.2**.: _Let \(t\in I:=[t_{s}+1,t_{e}]\subseteq[T].\) For all \(n\in[N],\) and \((x,a)\in\mathcal{X}\times\mathcal{A}\),_

\[\|p^{t}_{n}(\cdot|x,a)-\overline{p}^{t}_{n}(\cdot|x,a)\|_{1}\leq\sum_{j=t_{s} }^{t-1}\Delta^{p}_{j},\]

Proof.: For \(t\in I\), and for all \(n\) and \((x,a)\) we have that

\[\|p^{t}_{n}(\cdot|x,a)-\overline{p}^{t}_{n}(\cdot|x,a)\|_{1} =\sum_{x^{\prime}\in\mathcal{X}}\bigg{|}p^{t}_{n}(x^{\prime}|x,a)- \frac{1}{t-t_{s}}\sum_{s=t_{s}}^{t-1}p^{s}_{n}(x^{\prime}|x,a)\bigg{|}\] \[=\sum_{x^{\prime}\in\mathcal{X}}\frac{1}{t-t_{s}}\bigg{|}\sum_{s=t _{s}}^{t-1}\big{(}p^{t}_{n}(x^{\prime}|x,a)-p^{s}_{n}(x^{\prime}|x,a)\big{)} \bigg{|}\] \[\leq\frac{1}{t-t_{s}}\sum_{s=t_{s}}^{t-1}\sum_{j=s+1}^{t}\|p^{j} _{n}(\cdot|x,a)-p^{j-1}_{n}(\cdot|x,a)\|_{1}\] \[=\frac{1}{t-t_{s}}\sum_{j=t_{s}}^{t-1}(j-t_{s})\|p^{j}_{n}(\cdot |x,a)-p^{j-1}(\cdot|x,a)\|_{1}\] \[\leq\sum_{j=t_{s}}^{t-1}\Delta^{p}_{j},\]

where recall that we define \(\Delta^{p}_{j}:=\max_{n,s,a}\|p^{j+1}_{n}(\cdot|x,a)-p^{j}_{n}(\cdot|x,a)\|_{1}\). 

**Lemma C.3**.: _Let \(\hat{p}^{t,t_{s}}\) be the empirical probability transition kernel computed with data from episodes \([t_{s},t-1]\). For any \(\delta\in(0,1)\), with probability \(1-\delta\),_

\[\|p^{t}_{n}(\cdot|x,a)-\hat{p}^{t,t_{s}}_{n}(\cdot|x,a)\|_{1}\leq\sqrt{\frac{ 1}{2(t-t_{s})}\log\bigg{(}\frac{N|\mathcal{X}||\mathcal{A}|2^{|\mathcal{X}|}T} {\delta}\bigg{)}}+\sum_{j=t_{s}}^{t-1}\Delta^{p}_{j},\]

_simultaneously for all \(n\in[N]\), \((x,a)\in\mathcal{X}\times\mathcal{A}\), \(t_{s}\in[T-1]\), and \(t\in[t_{s}+1,T]\)._Proof.: The result follows immediately from the triangular inequality and Lemmas C.1 and C.2. 

**Lemma C.4** (A version of the inverse of Pinsker's inequality).: _Let \(p^{\prime},q^{\prime}\) be any distributions over \(\mathcal{S}_{\mathcal{X}}\). Define_

\[p:=\frac{p^{\prime}+\frac{1}{|\mathcal{X}|}}{2},\quad\text{and} \quad q:=\frac{q^{\prime}+\frac{1}{|\mathcal{X}|}}{2}.\]

_Therefore,_

\[\text{KL}(p\mid q)\leq 2|\mathcal{X}|\|p-q\|_{1}^{2}.\]

Proof.: First, note that \(q\) is lower bounded by \(\frac{1}{2|\mathcal{X}|}\), hence \(\text{KL}(p\mid q)\) is well defined. Also, by convexity of the simplex, \(p,q\in\mathcal{S}_{\mathcal{X}}\), therefore

\[\text{KL}(p\mid q) =\sum_{x\in\mathcal{X}}p(x)\log\left(\frac{p(x)}{q(x)}\right)\] \[=\sum_{x\in\mathcal{X}}p(x)\log\left(1+\Big{(}\frac{p(x)}{q(x)}-1 \Big{)}\right)\] \[\leq\sum_{x\in\mathcal{X}}p(x)\Big{(}\frac{p(x)}{q(x)}-1\Big{)}\] \[=\sum_{x\in\mathcal{X}}\frac{p(x)}{q(x)}\big{(}p(x)-q(x)\big{)}+ \sum_{x\in\mathcal{X}}\big{(}q(x)-p(x)\big{)}\] \[=\sum_{x\in\mathcal{X}}\frac{\big{(}p(x)-q(x)\big{)}^{2}}{q(x)}\] \[\leq\frac{1}{\min_{x\in\mathcal{X}}q(x)}\|p-q\|_{1}^{2}\] \[\leq 2|\mathcal{X}|\|p-q\|_{1}^{2}.\]

**Lemma C.5**.: _For any strategy \(\pi\in(\mathcal{S}_{\mathcal{A}})^{\mathcal{X}\times N}\), for any two probability kernels \(p=(p_{n})_{n\in[N]}\) and \(q=(q_{n})_{n\in[N]}\) such that \(p_{n},q_{n}:\mathcal{X}\times\mathcal{A}\times\mathcal{X}\to[0,1]\), and for all \(n\in[N]\),_

\[\|\mu_{n}^{\pi,p}-\mu_{n}^{\pi,q}\|_{1}\leq\sum_{i=0}^{n-1}\sum_{x,a}\mu_{i}^{ \pi,p}(x,a)\|p_{i+1}(\cdot|x,a)-q_{i+1}(\cdot|x,a)\|_{1}.\]

Proof.: From the definition of a state-action distribution sequence induced by a policy \(\pi\) in a MDP with probability kernel \(p\) in Eq. (2), we have that for all \((x,a)\in\mathcal{X}\times\mathcal{A}\) and \(n\in[N]\),

\[\mu_{n}^{\pi,p}(x,a)=\sum_{x^{\prime},a^{\prime}}\mu_{n-1}^{\pi,p}(x^{\prime}, a^{\prime})p_{n}(x|x^{\prime},a^{\prime})\pi_{n}(a|x).\]Thus,

\[\|\mu_{n}^{\pi,p}-\mu_{n}^{\pi,q}\|_{1} =\sum_{x,a}\big{|}\mu_{n}^{\pi,p}(x,a)-\mu_{n}^{\pi,q}(x,a)\big{|}\] \[=\sum_{x,a}\sum_{x^{\prime},a^{\prime}}\big{|}\mu_{n-1}^{\pi,p}(x^ {\prime},a^{\prime})p_{n}(x|x^{\prime},a^{\prime})-\mu_{n-1}^{\pi,q}(x^{\prime },a^{\prime})q_{n}(x|x^{\prime},a^{\prime})\big{|}\pi_{n}(a|x)\] \[=\sum_{x}\sum_{x^{\prime},a^{\prime}}\big{|}\mu_{n-1}^{\pi,p}(x^{ \prime},a^{\prime})p_{n}(x|x^{\prime},a^{\prime})-\mu_{n-1}^{\pi,q}(x^{\prime },a^{\prime})q_{n}(x|x^{\prime},a^{\prime})\big{|}\] \[=\sum_{x}\sum_{x^{\prime},a^{\prime}}\big{|}\mu_{n-1}^{\pi,p}(x^ {\prime},a^{\prime})p_{n}(x|x^{\prime},a^{\prime})-\mu_{n-1}^{\pi,p}(x^{\prime },a^{\prime})q_{n}(x|x^{\prime},a^{\prime})\] \[\qquad\quad+\mu_{n-1}^{\pi,p}(x^{\prime},a^{\prime})q_{n}(x|x^{ \prime},a^{\prime})-\mu_{n-1}^{\pi,q}(x^{\prime},a^{\prime})q_{n}(x|x^{\prime },a^{\prime})\big{|}\] \[\leq\sum_{x^{\prime},a^{\prime}}\mu_{n-1}^{\pi,p}(x^{\prime},a^{ \prime})\|p_{n}(\cdot|x^{\prime},a^{\prime})-q_{n}(\cdot|x^{\prime},a^{\prime} )\|_{1}+\sum_{x^{\prime},a^{\prime}}\big{|}\mu_{n-1}^{\pi,p}(x^{\prime},a^{ \prime})-\mu_{n-1}^{\pi,q}(x^{\prime},a^{\prime})\big{|}\] \[=\sum_{x^{\prime},a^{\prime}}\mu_{n-1}^{\pi,p}(x^{\prime},a^{ \prime})\|p_{n}(\cdot|x^{\prime},a^{\prime})-q_{n}(\cdot|x^{\prime},a^{\prime })\|_{1}+\|\mu_{n-1}^{\pi,p}-\mu_{n-1}^{\pi,q}\|_{1}.\]

Since for \(n=0\), \(\|\mu_{0}^{\pi,p}-\mu_{0}^{\pi,q}\|_{1}=0\), by induction we get that

\[\|\mu_{n}^{\pi,p}-\mu_{n}^{\pi,q}\|_{1}\leq\sum_{i=0}^{n-1}\sum_{x^{\prime},a ^{\prime}}\mu_{i}^{\pi,p}(x^{\prime},a^{\prime})\|p_{i+1}(\cdot|x^{\prime},a^ {\prime})-q_{i+1}(\cdot|x^{\prime},a^{\prime})\|_{1}.\]

**Lemma C.6**.: _For any pair of strategies \(\pi,\pi^{\prime}\in(\Delta_{\mathcal{A}})^{\mathcal{X}\times N}\), for any probability kernel \(p=(p_{n})_{n\in[N]}\) such that \(p_{n}:\mathcal{X}\times\mathcal{A}\times\mathcal{X}\to[0,1]\), and for all \(n\in[N]\),_

\[\|\mu_{n}^{\pi,p}-\mu_{n}^{\pi^{\prime},p}\|_{1}\leq\sum_{i=1}^{n}\sum_{x\in \mathcal{X}}\rho_{i}^{\pi,p}(x)\|\pi_{i}(\cdot|x)-\pi_{i}^{\prime}(\cdot|x)\| _{1},\]

_where \(\rho_{i}^{\pi,p}(x):=\sum_{a\in\mathcal{A}}\mu_{i}^{\pi,p}(x,a)\) for all \(x\in\mathcal{X}\) and \(i\in[N]\)._

Proof.: Using the recursive relation from Eq. (2) of a state-action distribution induced by a policy \(\pi\) in a MDP with probability transition \(p\) we have that

\[\|\mu_{n}^{\pi,p}-\mu_{n}^{\pi^{\prime},p}\|_{1} =\sum_{x,a}\big{|}\mu_{n}^{\pi,p}(x,a)-\mu_{n}^{\pi^{\prime},p}(x,a)\big{|}\] \[\leq\sum_{x,a}\sum_{x^{\prime},a^{\prime}}\big{|}\mu_{n-1}^{\pi,p }(x^{\prime},a^{\prime})\pi_{n}(a|x)-\mu_{n-1}^{\pi^{\prime},p}(x^{\prime},a^{ \prime})\pi_{n}^{\prime}(a|x)\big{|}p_{n}(x|x^{\prime},a^{\prime})\] \[\leq\sum_{x,a}\sum_{x^{\prime},a^{\prime}}\mu_{n-1}^{\pi,p}(x^{ \prime},a^{\prime})p_{n}(x|x^{\prime},a^{\prime})\big{|}\pi_{n}(a|x)-\pi_{n}^{ \prime}(a|x)\big{|}\] \[\qquad+\sum_{x,a}\sum_{x^{\prime},a^{\prime}}\pi_{n}^{\prime}(a|x )p_{n}(x|x^{\prime},a^{\prime})\big{|}\mu_{n-1}^{\pi,p}(x^{\prime},a^{\prime} )-\mu_{n-1}^{\pi^{\prime},p}(x^{\prime},a^{\prime})\big{|}\] \[=\sum_{x}\rho_{n}^{\pi,p}(x)\|\pi_{n}(\cdot|x)-\pi_{n}^{\prime}( \cdot|x)\|_{1}+\|\mu_{n-1}^{\pi,p}-\mu_{n-1}^{\pi^{\prime},p}\|_{1}.\]

Since \(\mu_{0}\) is fixed for each state-action distribution sequence, by induction we obtain that

\[\|\mu_{n}^{\pi,p}-\mu_{n}^{\pi^{\prime},p}\|_{1}\leq\sum_{i=1}^{n}\sum_{x} \rho_{i}^{\pi,q}(x)\|\pi_{i}^{t}(\cdot|x)-\pi_{i}^{t-1}(\cdot|x)\|_{1},\]

completing the proof.

Proof of Prop. 5.2: \(R^{\hat{p}}_{[T]}\) regret analysis

Proof.: Here, we set an upper bound on the term \(R^{\hat{p}}_{[T]}\) where we pay for errors in estimating \(p^{t}\) by \(\hat{p}^{t}\).

\[R^{\hat{p}}_{[T]}:=\sum_{t=1}^{T}F^{t}(\mu^{\pi^{t},p^{t}})-F^{t}( \mu^{\pi^{t},\hat{p}^{t}}) \leq\sum_{t=1}^{T}\langle\nabla F^{t}(\mu^{\pi^{t},p^{t}}),\mu^{ \pi^{t},p^{t}}-\mu^{\pi^{t},\hat{p}^{t}}\rangle\] \[\leq L_{F}\sum_{t=1}^{T}\sum_{n=1}^{N}\|\mu_{n}^{\pi^{t},p^{t}}- \mu_{n}^{\pi^{t},\hat{p}^{t}}\|_{1}\] \[\leq L_{F}\sum_{t=1}^{T}\sum_{n=1}^{N}\sum_{j=1}^{n}\sum_{x,a}\mu _{j-1}^{\pi^{t},p^{t}}(x,a)\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_ {1}.\]

To obtain the first inequality, we use the convexity of \(F^{t}\) for all \(t\in[T]\), then we use Holder's inequality and the fact that \(F^{t}\) is \(L_{F}\)-Lipschitz, and for the last inequality we use Lemma C.5.

The difficulty in analyzing the \(L_{1}\) difference between \(p^{t}\) and \(\hat{p}^{t}\) arises from the non-stationarity of \(p^{t}\). To overcome this we want to use the scheme presented in Subsection 4.3. By Cauchy-Schwartz, we get that

\[R^{\hat{p}}_{[T]}\leq L_{F}\sqrt{\underbrace{\sum_{t=1}^{T}\sum_{n=1}^{N}\sum _{j=1}^{n}\sum_{x,a}(\mu_{j-1}^{\pi^{t},p^{t}}(x,a))^{2}\underbrace{\sum_{t=1} ^{T}\sum_{n=1}^{N}\sum_{j=1}^{n}\sum_{x,a}\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{ t}(\cdot|x,a)\|_{1}^{2}}_{\text{$(*)$}}}}.\] (16)

**Analysis of the \(L_{1}\) norm.** We start by analysing the sum over \(t\in[T]\) of the \(L_{1}\) norm in term \((*)\). For each \(n\in[N],j\in[n]\) and \((x,a)\in\mathcal{X}\times\mathcal{A}\),

\[\sum_{t=1}^{T}\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_ {1}^{2} =4\sum_{t=1}^{T}\left\|\frac{p_{j}^{t}(\cdot|x,a)+\frac{1}{| \mathcal{X}|}}{2}-\bigg{(}\frac{\hat{p}_{j}^{t}(\cdot|x,a)+\frac{1}{|\mathcal{ X}|}}{2}\bigg{)}\right\|_{1}^{2}\] \[\leq 8\sum_{t=1}^{T}\text{KL}\bigg{(}\frac{p_{j}^{t}(\cdot|x,a)+ \frac{1}{|\mathcal{X}|}}{2}\bigg{|}\frac{\hat{p}_{j}^{t}(\cdot|x,a)+\frac{1}{| \mathcal{X}|}}{2}\bigg{)},\]

where we apply Pinsker's inequality.

Consider a sequence of episodes \(1=t_{1}<t_{2}<\ldots<t_{m+1}=T+1\), with \(\mathcal{I}_{i}:=[t_{i},t_{i+1}-1]\), such that \(\Delta_{\mathcal{I}_{i}}^{p}\leq\Delta^{p}/m\) for all \(i\in[m]\). Decomposing the KL sum over \(t\in[T]\) as a sum on the intervals \(\mathcal{I}_{i}\), we obtain that

\[\sum_{t=1}^{T}\text{KL}\bigg{(}\frac{p_{j}^{t}(\cdot|x,a)+\frac{1 }{|\mathcal{X}|}}{2}\bigg{|}\frac{\hat{p}_{j}^{t}(\cdot|x,a)+\frac{1}{| \mathcal{X}|}}{2}\bigg{)}=\underbrace{\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}} \text{KL}\bigg{(}\frac{p_{j}^{t}(\cdot|x,a)+\frac{1}{|\mathcal{X}|}}{2}\bigg{|} \frac{\hat{p}_{j}^{t,t_{i}}(\cdot|x,a)+\frac{1}{|\mathcal{X}|}}{2}\bigg{)}}_{ \text{$(i)$}}\] \[\quad+\underbrace{\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}\mathbb{ E}_{\hat{x}_{j,x,a}^{t}}\Bigg{[}\log\bigg{(}\frac{\hat{p}_{j}^{t,t_{i}}(\hat{x}_{j,x,a}^{t} |x,a)+\frac{1}{|\mathcal{X}|}}{2}\bigg{)}-\log\bigg{(}\frac{\hat{p}_{j}^{t}( \hat{x}_{j,x,a}^{t}|x,a)+\frac{1}{|\mathcal{X}|}}{2}\bigg{)}\Bigg{]},\]

where the expectation of the second term is with respect to \(\tilde{x}_{j,x,a}^{t}\sim\Big{(}p_{j}^{t}(\cdot|x,a)+\frac{1}{|\mathcal{X}|} \Big{)}/2\).

We analyse each term separately:

First, note that \((ii)\) is the expectation over \(\tilde{x}_{j,x,a}^{t}\) of the cumulative regret of sleeping EWA on interval \(\mathcal{I}_{i}\) with respect to the expert \(t_{i}\) using the loss function \(\ell^{t}\) defined in Eq. (12). This term is upper bounded by \(\log(T)\) (see Subection 4.3 of the main paper). From it we deduce that

\[(ii)\leq\sum_{i=1}^{m}\log(T)=m\log(T).\]Regarding term \((i)\), we start by using the inverse of Pinsker's inequality presented in Lemma C.4,

\[(i) \leq\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}2|\mathcal{X}|\left\| \frac{p_{j}^{t}(\cdot|x,a)+\frac{1}{|\mathcal{X}|}}{2}-\left(\frac{\hat{p}_{j}^ {t,t_{i}}(\cdot|x,a)+\frac{1}{|\mathcal{X}|}}{2}\right)\right\|_{1}^{2}\] \[=\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}\frac{|\mathcal{X}|}{2} \|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t,t_{i}}(\cdot|x,a)\|_{1}^{2}.\]

To simplify notations, from now on we let \(C:=\sqrt{\frac{1}{2}\log\left(\frac{N|\mathcal{X}||\mathcal{A}|^{2|\mathcal{X} |}T}{\delta}\right)}\). Applying Lemma C.3, we obtain that

\[\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}\frac{|\mathcal{X}|}{2} \|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t,t_{i}}(\cdot|x,a)\|_{1}^{2}\] \[\qquad\leq\frac{|\mathcal{X}|}{2}\sum_{i=1}^{m}\sum_{t\in \mathcal{I}_{i}}\bigg{[}\frac{C^{2}}{t-t_{i}+1}+\frac{2C}{\sqrt{t-t_{i}+1}} \sum_{k=t_{i}}^{t-1}\Delta_{k}^{p}+\bigg{(}\sum_{k=t_{i}}^{t-1}\Delta_{k}^{p} \bigg{)}^{2}\bigg{]}\] \[\qquad\leq\frac{|\mathcal{X}|}{2}\sum_{i=1}^{m}\big{[}C^{2}\log( |\mathcal{I}_{i}|)+2C\sqrt{|\mathcal{I}_{i}|}\Delta_{\mathcal{I}_{i}}^{p}+| \mathcal{I}_{i}|(\Delta_{\mathcal{I}_{i}}^{p})^{2}\big{]}\] \[\qquad\leq\frac{|\mathcal{X}|}{2}\bigg{[}C^{2}m\log(T)+2C\sqrt{T} \frac{\Delta^{p}}{\sqrt{m}}+T\frac{(\Delta^{p})^{2}}{m^{2}}\bigg{]}.\]

Joining the upper bounds of \((i)\) and \((ii)\) we conclude that

\[\sum_{t=1}^{T}\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_ {1}^{2} \leq 8\big{(}(i)+(ii)\big{)}\] \[\leq 8\Big{(}(C^{2}\frac{|\mathcal{X}|}{2}+1)m\log(T)+2\frac{| \mathcal{X}|}{2}C\sqrt{T}\frac{\Delta^{p}}{\sqrt{m}}+T\frac{|\mathcal{X}|}{2} \frac{(\Delta^{p})^{2}}{m^{2}}\Big{)}.\]

Thus, for \(m=\Big{(}\frac{2T\Delta^{p}}{C^{2}\log(T)}\Big{)}^{1/3}\),

\[\sum_{t=1}^{T}\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_{1}^{2}\leq 1 2|\mathcal{X}|C^{4/3}\log(T)^{2/3}T^{1/3}(\Delta^{p})^{2/3}.\] (17)

**Back to the analysis of \(R_{[T]}^{\hat{p}}\).** Using the inequality in Eq. (17) to bound the \(L_{1}\) norm of \((*)\) on Eq. (16), we obtain that

\[R_{[T]}^{\hat{p}} \leq L_{F}N\sqrt{T}\sqrt{\sum_{n=1}^{N}\sum_{j=1}^{n-1}\sum_{x,a} 12|\mathcal{X}|C^{4/3}\log(T)^{2/3}T^{1/3}(\Delta^{p})^{2/3}}\] \[\leq 2L_{F}N^{2}|\mathcal{X}|\sqrt{3|\mathcal{A}|}C^{2/3}\log(T)^ {1/3}T^{2/3}(\Delta^{p})^{1/3},\]

concluding the proof.

Note that for \(\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}R_{T_{i}}^{\hat{p}}(\pi^{t,t_{i},\lambda})\) (the third term of the meta-regret decomposition of Eq. (13)), following the same procedure as above, we obtain that

\[\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{\pi^{t,t_{i}, \hat{p}^{t}}})-F^{t}(\mu^{\pi^{t,t_{i},p^{t}}})\] \[\quad\leq\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}\langle\nabla F^{ t}(\mu^{\pi^{t,t_{i},\hat{p}^{t}}}),\mu^{\pi^{t,t_{i},\hat{p}^{t}}}-\mu^{\pi^{t,t_{i},p^{t}}}\rangle\] \[\quad\leq L_{F}\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}\|\mu_{n}^ {\pi^{t,t_{i},\hat{p}^{t}}}-\mu_{n}^{\pi^{t,t_{i},p^{t}}}\|_{1}\] \[\quad\leq L_{F}\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}\sum_{n=1} ^{N}\sum_{j=1}^{n}\sum_{x,a}\mu_{j-1}^{\pi^{t,t_{i},p^{t}}}(x,a)\|p_{j}^{t}( \cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_{1}\] \[\quad\leq L_{F}\sqrt{\underbrace{\sum_{i=1}^{m}\sum_{t\in \mathcal{I}_{i}}\sum_{n=1}^{N}\sum_{j=1}^{n}\sum_{x,a}(\mu_{j-1}^{\pi^{t,t_{i},p^{t}}}(x,a))^{2}}_{\leq TN^{2}}\underbrace{\sum_{t=1}^{T}\sum_{n=1}^{N}\sum_{ j=1}^{n}\sum_{x,a}\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_{1}^{2}}_{ \text{independent of }\pi^{t,t_{i}}}}.\]

Since the second term is independent of \(\pi^{t,t_{i}}\), the analysis is the same as before and we obtain the same upper bound as for \(R_{[T]}^{\hat{p}}(\pi^{t})\).

## Appendix E Proof of Prop. 5.4: \(R_{[T]}^{\text{black-box}}\) regret analysis

Proof.: Assume a Black-box algorithm satisfying the dynamic regret bound of Eq. (10), i.e., for any interval \(I\subseteq[T]\), with respect to any sequence of policies \((\pi^{t,*})_{t\in I}\), and for any learning rate \(\lambda\),

\[R_{I}\big{(}(\pi^{t,*})_{t\in I}\big{)}\leq c_{1}\lambda|I|+\frac{c_{2}\Delta _{I}^{\pi^{*}}+c_{3}}{\lambda}+|I|\Delta_{I}^{p}.\] (18)

Consider any sequence of episodes \(1=t_{1}<t_{2}<\ldots<t_{m+1}=T+1\), forming intervals \(\mathcal{I}_{i}:=[t_{i},t_{i+1}-1]\) for all \(i\in[m]\). We can decompose the black-box regret over \([T]\) as

\[R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)} =\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{\pi^{t,t_{i}, \lambda},p^{t}})-F^{t}(\mu^{\pi^{t,*},p^{t}})\] \[\leq\sum_{i=1}^{m}c_{1}\lambda|\mathcal{I}_{i}|+\frac{c_{2}\Delta _{I_{i}}^{\pi^{*}}+c_{3}}{\lambda}+|\mathcal{I}_{i}|\Delta_{I}^{p}\] \[\leq c_{1}\lambda T+\frac{c_{2}\Delta^{\pi^{*}}+c_{3}}{\lambda}+ \frac{T\Delta^{p}}{m}.\]

In principle, we would like to select the optimal \(\lambda\) that optimizes this dynamic regret. However, as \(\Delta^{\pi^{*}}\) may be unknown in advance, this is not possible. We show here that running MetaCURL with the learning rate set \(\Lambda:=\{2^{-j}|j=0,1,2,\ldots,\lceil\lfloor\log_{2}(T)/2\rceil\rfloor\}\) ensures that the optimal empirical learning rate is close to the true optimal one by a factor of \(2\) and that the learner always plays as well as the optimal empirical learning rate.

Denote by \(\lambda^{*}\) the optimal learning rate and \(\hat{\lambda}^{*}\) the empirical optimal learning rate in \(\Lambda\). Note that

\[\lambda^{*}=\sqrt{\frac{c_{2}\Delta^{\pi^{*}}+c_{3}}{c_{1}T}}.\]

We consider three different cases:

**If \(\lambda^{*}\geq 1\):** this implies that \(\frac{c_{2}\Delta^{\pi^{*}}+c_{3}}{c_{1}T}\geq 1\). Therefore, we have that \(T\leq\frac{c_{2}\Delta^{\pi^{*}}+c_{3}}{c_{1}}\). As we assume \(f_{n}^{t}\in[0,1]\) for all time steps \(n\in[N]\) and episodes \(t\in[T]\), then

\[R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq NT+\frac{T \Delta^{p}}{m}\leq N\bigg{(}\frac{c_{2}\Delta^{\pi^{*}}+c_{3}}{c_{1}}\bigg{)}+ \frac{T\Delta^{p}}{m}.\]

**If \(\lambda^{*}\leq 1/\sqrt{T}\):** this implies that \(\frac{c_{2}\Delta^{*^{*}}+c_{3}}{c_{1}}\leq 1\). Therefore, taking \(\hat{\lambda}^{*}=1/\sqrt{T}\in\Lambda\), we have that

\[R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq\lambda c_{1} T+\frac{c_{1}}{\lambda}+\frac{T\Delta^{p}}{m}\leq c_{1}\sqrt{T}+\frac{T\Delta^{p}}{m}\]

**If \(\lambda^{*}\in[1/\sqrt{T},1]\):** in this case, given the construction of \(\Lambda\), there is a \(\hat{\lambda}^{*}\in\Lambda\) such that \(\lambda^{*}\leq\hat{\lambda}^{*}\leq 2\lambda^{*}\). Hence,

\[R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq 3\sqrt{c_{1} (c_{2}\Delta^{*^{*}}+c_{3}m)T}+\frac{T\Delta^{p}}{m}.\]

Therefore, by taking \(\lambda=\hat{\lambda}^{*}\) in the analysis, we can ensure that

\[R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)} =\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{\pi^{t,t_{i}, \lambda},p^{t}})-F^{t}(\mu^{\pi^{t,*},p^{t}})\] \[\leq N\bigg{(}\frac{c_{2}\Delta^{*^{*}}+c_{3}}{c_{1}}\bigg{)}+c_{1} \sqrt{T}+3\sqrt{c_{1}(c_{2}\Delta^{*^{*}}+c_{3}m)T}+\frac{T\Delta^{p}}{m}.\]

## Appendix F Proof of Thm. 5.1: Main result

Joining the results from the meta-regret bound and the black-box regret bound, we get the main result of the paper:

**Theorem** (Main result).: _Let \(\delta\in(0,1)\). Playing MetaCURL, with black-box algorithm with dynamic regret as in Eq. (10), with a learning rate grid \(\Lambda:=\big{\{}2^{-j}|j=0,1,2,\ldots,\lceil 1/2\log_{2}(T)\rceil\big{\}}\), and with EWA as the sleeping expert subroutine, we obtain, with probability at least \(1-2\delta\), for any sequence of policies \((\pi^{t,*})_{t\in[T]}\),_

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq\bar{O}\Big{(}\sqrt{\Delta^{*^{ *}}T}+\min\big{\{}\sqrt{T\Delta_{\infty}^{p}},\ T^{2/3}(\Delta^{p})^{1/3} \big{\}}\Big{)}.\]

Proof.: Define a sequence of episodes \(1=t_{1}<t_{2}<\ldots<t_{m+1}=T+1\), with \(\mathcal{I}_{i}:=[t_{i},t_{i+1}-1]\), such that \(\Delta_{\mathcal{I}_{i}}^{p}\leq\Delta^{p}/m\) for all \(i\in[m]\).

The dynamic regret of \(\mathcal{M}(\mathcal{E},\Lambda)\) with respect to any sequence of policies \((\pi^{t,*})_{t\in[T]}\), and any \(\lambda\in\Lambda\), can be decomposed as

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)} =\underbrace{\sum_{i=1}^{m}\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{ \pi^{t,*},p^{t}})-F^{t}(\mu^{\pi^{t,t_{i},\lambda},p^{t}})}_{\text{Meta algorithm regret}}+\sum_{i=1}^{m}\underbrace{\sum_{t\in\mathcal{I}_{i}}F^{t}(\mu^{\pi^{t,* _{i},\lambda},p^{t}})-F^{t}(\mu^{\pi^{t,*},p^{t}})}_{\text{Black-box regret on $\mathcal{I}_{i}$}}.\] \[:=R_{[T]}^{\text{meta}}+R_{[T]}^{\text{black-box}}\big{(}(\pi^{ t,*})_{t\in[T]}\big{)}.\]

From Prop. 5.3, we have that with probability at least \(1-2\delta\), and \(C:=\sqrt{\frac{1}{2}\log\bigg{(}\frac{N|\mathcal{X}||\mathcal{A}|2^{|\Lambda|T} }{\delta}\bigg{)}}\),

\[R_{[T]}^{\text{meta}}\leq 4L_{F}N^{2}|\mathcal{X}|\sqrt{3|\mathcal{A}|}C^{2/3} \log(T)^{1/3}T^{2/3}(\Delta^{p})^{1/3}+\sqrt{\frac{mT}{2}\log(T|\Lambda|)}.\]

In addition, for \(\Lambda:=\big{\{}2^{-j}|j=0,1,2,\ldots,\lceil 1/2\log_{2}(T)\rceil\big{\}}\), and \(\lambda\) equal the best empirical learning rate in \(\Lambda\), Prop. 5.4 yields that, if the black-box algorithm has dynamic regret as in Eq. (10) for any interval in \(T\), then

\[R_{[T]}^{\text{black-box}}\big{(}(\pi^{t,*})_{t\in[T]}\big{)}\leq N\bigg{(} \frac{c_{2}\Delta^{*^{*}}+c_{3}}{c_{1}}\bigg{)}+c_{1}\sqrt{T}+3\sqrt{c_{1}(c_{2 }\Delta^{*^{*}}+c_{3}m)T}+\frac{T\Delta^{p}}{m}.\]Therefore, joining both results, we get that,

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)} \leq 4L_{F}N^{2}|\mathcal{X}|\sqrt{3|\mathcal{A}|}C^{2/3}\log(T)^{1/ 3}T^{2/3}(\Delta^{p})^{1/3}+\sqrt{\frac{mT}{2}\log(T\log_{2}(T))}\] \[+N\bigg{(}\frac{c_{2}\Delta^{*^{*}}+c_{3}}{c_{1}}\bigg{)}+c_{1} \sqrt{T}+3\sqrt{c_{1}(c_{2}\Delta^{*^{*}}+c_{3}m)T}+\frac{T\Delta^{p}}{m}.\]

Thus, for \(m=\left(\frac{2\sqrt{T}\Delta^{p}}{\gamma}\right)^{2/3}\), with \(\gamma:=\sqrt{\frac{\log(T\log_{2}(T))}{2}}+3\sqrt{c_{1}c_{3}}\), we have that

\[R_{[T]}\big{(}(\pi^{t,*})_{t\in[T]}\big{)} \leq T^{2/3}\Delta^{1/3}\big{(}4L_{F}N^{2}|\mathcal{X}|\sqrt{3| \mathcal{A}|}C^{2/3}\log(T)^{1/3}+2\gamma^{2/3}\big{)}\] \[+N\bigg{(}\frac{c_{2}\Delta^{*^{*}}+c_{3}}{c_{1}}\bigg{)}+c_{1} \sqrt{T}+3\sqrt{c_{1}c_{2}\Delta^{*^{*}}T}\] \[=\tilde{O}\Big{(}\sqrt{\Delta^{*^{*}}T}+\min\big{\{}\sqrt{T \Delta^{p}_{\infty}},\ T^{2/3}(\Delta^{p})^{1/3}\big{\}}\Big{)}.\]

## Appendix G Greedy MD-CURL dynamic regret analysis

Here we introduce Greedy MD-CURL developed by [39], a computationally efficient policy-optimization algorithm known for achieving sublinear static regret in online CURL with adversarial objective functions within a stationary MDP. We begin by detailing Greedy MD-CURL as presented in [39] in Alg. 4. We then provide a new analysis upper bounding the dynamic regret of Greedy MD-CURL in a quasi-stationary interval valid for any learning rate \(\lambda\). Hence, Greedy MD-CURL can be used as a black-box for MetaCURL. This is the first dynamic regret analysis for a CURL approach.

Let \(\mathcal{M}^{p,*}_{\mu_{0}}\) denote the subset of \(\mathcal{M}^{p}_{\mu_{0}}\) where the corresponding policies \(\pi\) are such that \(\pi_{n}(a|x)\neq 0\) for all \((x,a)\in\mathcal{X}\times\mathcal{A}\), \(n\in[N]\). For any probability transition \(p\), \(\Gamma:\mathcal{M}^{p}_{\mu_{0}}\times\mathcal{M}^{p,*}_{\mu_{0}}\to\mathbb{R}\) such that, for all \(\mu\in\mathcal{M}^{p}_{\mu_{0}}\) with its associated policy \(\pi\), and \(\mu^{\prime}\in\mathcal{M}^{p,*}_{\mu_{0}}\) with its associated policy \(\pi^{\prime}\), we have

\[\Gamma(\mu^{\pi},\mu^{\pi^{\prime}}):=\sum_{n=1}^{N}\mathbb{E}_{(x,a)\sim\mu^ {*}_{n}(\cdot)}\bigg{[}\log\bigg{(}\frac{\pi_{n}(a|x)}{\pi^{\prime}_{n}(a|x)} \bigg{)}\bigg{]}.\] (19)

This divergence \(\Gamma\) is a Bregman divergence (see Proposition 4.3 of [39]). Problem (20) implemented with this Bregman divergence \(\Gamma\) has a closed form solution, as showed in [39].

### Dynamic regret analysis of Greedy MD-CURL

Let us assume we analyze our regret in an interval \(I:=[t_{s},t_{e}]\subseteq[T]\). We denote by \(R_{I}\) the dynamic regret of an instance of Greedy MD-CURL started at episode \(t_{s}\) until the end of interval \(I\) at episode \(t_{e}\). We denote by \(\pi^{t}\) the policy produced by this instance of Greedy MD-CURL at episode \(t\in I\), \(p^{t}\) the true probability transition kernel, and

\[\hat{p}^{t}_{n}(x^{\prime}|x,a)=\frac{1}{t-t_{s}}\sum_{s=t_{s}}^{t-1}\mathds{1 }_{\{g_{n}(x,a,e^{*}_{n})=x^{\prime}\}},\]

the empirical estimate of the probability kernel at episode \(t\), with data from the beginning of the interval \(I\).

We define and decompose the dynamic regret \(R_{I}\) with respect to any sequence of policies \((\pi^{t,*})_{t\in I}\) into three terms as follows:

\[\begin{split} R_{I}\big{(}(\pi^{t,*})_{t\in I}\big{)}& :=\sum_{t\in I}F^{t}(\mu^{\pi^{t},p^{t}})-F^{t}(\mu^{\pi^{*,t},p^{t }})=\underbrace{\sum_{t\in I}F^{t}(\mu^{\pi^{t},p^{t}})-F^{t}(\mu^{\pi^{t}, \hat{p}^{t}})}_{R_{I}^{\text{MDP}}(\pi^{t})}\\ &\quad+\underbrace{\sum_{t\in I}F^{t}(\mu^{\pi^{t},\hat{p}^{t}}) -F^{t}(\mu^{\pi^{*,t},\hat{p}^{t}})}_{R_{I}^{\text{MDP}}(\pi^{t,*})}-F^{t}( \mu^{\pi^{t,*},p^{t}})\,.\end{split}\] (21)

The terms \(R_{I}^{\text{MDP}}(\pi^{t})\) and \(R_{I}^{\text{MDP}}(\pi^{t,*})\) pay for our lack of knowledge of the true MDP, forcing us to use its empirical estimate. The term \(R_{I}^{\text{policy}}\) corresponds to the loss incurred in calculating the policyby solving the optimization problem given in Eq. (20). Below, we present the first analysis of the dynamic regret for a CURL algorithm. We consider each term separately.

#### g.1.1 \(R_{I}^{\text{MDP}}\) analysis

In Section 2 we assume that the deterministic part of the dynamics, given by \(g_{n}\) in equation (8) for each time step \(n\), is known in advance. The source of uncertainty and non-stationarity in the MDP comes only from the external noise dynamics, that is independent of the agent's state-action pair. Therefore, we do not need to explore in this setting, so the analysis of the two terms \(R_{I}^{\text{MDP}}(\pi^{t})\) and \(R_{I}^{\text{MDP}}(\pi^{t,*})\) are the same.

**Proposition G.1**.: _With probability at least \(1-\delta\),_

\[R_{I}^{\text{MDP}}(\pi^{t})\leq L_{F}N^{2}\sqrt{\frac{1}{2}\log\left(\frac{N| \mathcal{X}||\mathcal{A}|2^{|\mathcal{X}|}T}{\delta}\right)}\sqrt{|I|}+|I| \Delta_{I}^{p},\]

_for all intervals \(I\in[T]\). The same result is valid for \(R_{I}^{\text{MDP}}(\pi^{t,*})\)._

Proof.: We start by using the convexity of \(F^{t}\), Holder's inequality, that \(F^{t}\) is \(L_{F}\)-Lipschitz, and Lemma C.5 to obtain that

\[R_{I}^{\text{MDP}}(\pi^{t})\leq L_{F}\sum_{t=t_{s}}^{t_{e}}\sum_{n=1}^{N}\sum _{j=1}^{n}\sum_{x,a}\mu_{j-1}^{\pi^{i,t},p^{t}}(x,a)\|p_{j}^{t}(\cdot|x,a)-\hat {p}_{j}^{t}(\cdot|x,a)\|_{1}.\] (22)

Applying Lemmas C.1 and C.2, we have that for any \(\delta\in(0,1)\), with probability \(1-\delta\),

\[\|p_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_{1} \leq\|p_{j}^{t}(\cdot|x,a)-\overline{p}_{j}^{t}(\cdot|x,a)\|_{1}+ \|\overline{p}_{j}^{t}(\cdot|x,a)-\hat{p}_{j}^{t}(\cdot|x,a)\|_{1}\] \[\leq\sqrt{\frac{1}{2(t-t_{s})}\log\left(\frac{N|\mathcal{X}|| \mathcal{A}|2^{|\mathcal{X}|}T}{\delta}\right)}+\sum_{k=t_{s}}^{t-1}\Delta_{k} ^{p}.\]

Using this to continue the upper bound of Eq. (22), we conclude our proof:

\[R_{I}^{\text{MDP}}(\pi^{t}) \leq L_{F}N^{2}\sum_{t=t_{s}}^{t_{e}}\left(\sqrt{\frac{1}{2(t-t_{ s})}\log\left(\frac{N|\mathcal{X}||\mathcal{A}|2^{|\mathcal{X}|}T}{\delta} \right)}+\sum_{k=t_{s}}^{t-1}\Delta_{k}^{p}\right)\] \[\leq L_{F}N^{2}\sqrt{\frac{1}{2}\log\left(\frac{N|\mathcal{X}|| \mathcal{A}|2^{|\mathcal{X}|}T}{\delta}\right)}\sqrt{|I|}+|I|\Delta_{I}^{p}.\]

#### g.1.2 \(R_{I}^{\text{policy}}\) analysis

**Proposition G.2**.: _Let \(b\) be a constant defined as_

\[b:=8N^{2}+2N^{2}\log(|\mathcal{A}|)\log(|I|)\big{(}1+\log(|I|)\big{)}+2N\log( |I|)+N\log(|\mathcal{A}|).\]

_Then, Greedy MD-CURL obtains, for any sequence of policies \((\pi^{t,*})_{t\in I}\), and for any learning rate \(\lambda>0\),_

\[R_{I}^{\text{policy}}\big{(}(\pi^{t,*})_{t\in I}\big{)}\leq\lambda L_{F}^{2}|I| +\frac{N^{2}}{\lambda}\Delta_{I}^{\pi^{*}}+b\frac{1}{\lambda}.\]

Proof.: We adapt the proof of Prop. \(5.7\) of [39] that upper bounds the static regret incurred when solving the optimization Problem (20), for a proof that upper bounds the dynamic regret. The main difference is that, in the case of static regret, we compare ourselves to the same policy throughout the interval, whereas in the case of dynamic regret, at each episode we compare ourselves to a different policy given by \(\pi^{t,*}\). Consequently, the analysis remains the same as in [39] for all terms that do not depend on \(\pi^{t,*}\), but requires a new analysis in terms that do depend on it.

To simplify notation, we take \(\ell^{t}:=\nabla F^{t}(\mu^{\pi^{t},\tilde{p}^{t}})\) and \(\mu^{t}:=\mu^{\pi^{t},\tilde{p}^{t}}\). We can use the same reasoning as in appendix \(D.5\) of [39] to show that

\[R_{I}^{\text{policy}}\leq\underbrace{\frac{1}{\lambda}\sum_{t\in I}\big{[} \lambda\langle\ell^{t},\mu^{t}-\mu^{t+1}\rangle-\Gamma(\mu^{t+1},\tilde{\mu}^ {t})\big{]}}_{A}+\underbrace{\frac{1}{\lambda}\sum_{t\in I}\big{[}\Gamma(\mu^{ \pi^{t,*},\tilde{p}^{t+1}},\tilde{\mu}^{t})-\Gamma(\mu^{\pi^{t,*},\tilde{p}^{t+ 1}},\mu^{t+1})\big{]}}_{B}.\]

Since the \(A\) term does not depend on \(\pi^{t,*}\), its analysis follows directly from [39], and is given by

\[A\leq\lambda L_{F}^{2}|I|+\frac{1}{2\lambda}\sum_{t\in I}\bigg{(}\frac{2N}{t- t_{s}}+2N\alpha_{t}\bigg{)}^{2},\] (23)

where \(L_{F}\) is the Lipschitz constant of \(F^{t}\) and \(\alpha^{t}\) is an input parameter of Greedy MD-CURL.

We then proceed to analyze term \(B\). Again, following the procedure of appendix \(D.5\) of [39], we obtain that

\[B =\underbrace{\sum_{t=1}^{T}\Gamma(\mu^{\pi^{t,*},\tilde{p}^{t+1}},\tilde{\mu}^{t})-\Gamma(\mu^{\pi^{t-1,*},\tilde{p}^{t}},\tilde{\mu}^{t})}_{( i)}+\underbrace{\sum_{t=1}^{T}\Gamma(\mu^{\pi^{t-1,*},\tilde{p}^{t}},\tilde{ \mu}^{t})-\Gamma(\mu^{\pi^{t-1,*},\tilde{p}^{t}},\mu^{t})}_{(ii)}\] \[+\underbrace{\sum_{t=1}^{T}\Gamma(\mu^{\pi^{t-1,*},\tilde{p}^{t}},\mu^{t})-\Gamma(\mu^{\pi^{t,*},\tilde{p}^{t+1}},\mu^{t+1})}_{(iii)}.\]

Let \(\psi:(\mathcal{S}_{X\times\mathcal{A}})^{N}\to\mathbb{R}\) denote the function inducing the Bregman divergence \(\Gamma\) of Eq. (19). [39] further shows that:

* \((i)\leq-\psi(\mu^{\pi^{t_{i}-1,*},\tilde{p}^{t_{i}}})+N\sum_{t\in I}\log \Big{(}\frac{|\mathcal{A}|}{\alpha_{t}}\Big{)}\|\mu^{\pi^{t-1,*},\tilde{p}^{t }}-\mu^{\pi^{t,*},\tilde{p}^{t+1}}\|_{\infty,1}\)
* \((ii)\leq 2N\sum_{t\in I}\alpha_{t}\), and this upper bound is found independently of \(\pi^{t,*}\)
* \((iii)\leq\Gamma(\mu^{\pi^{t-1,*},\tilde{p}^{t}},\mu^{t})\).

Lemma \(D.6\) of [39] shows that,

\[-\psi(\mu^{\pi^{t_{i-1,*}},\tilde{p}^{t_{i}}})+\Gamma(\mu^{\pi^{t_{i-1,*}}, \tilde{p}^{t_{i}}},\mu^{t_{i}})\leq N\log(|\mathcal{A}|).\]

Only term \((i)\), which involves \(\|\mu^{\pi^{*,t-1},\tilde{p}^{t}}-\mu^{\pi^{*,t},\tilde{p}^{t+1}}\|_{\infty,1}\), depends on the sequence \((\pi^{t,*})_{t\in[T]Final step: joining all results

Joining the upper bounds on term \(A\) from Eq. (23) and on term \(B\) from Eq. (24), we have that

\[R_{I}^{\text{policy}}\big{(}(\pi^{t,*})_{t\in I}\big{)} \leq A+B\] \[\leq\lambda L_{F}^{2}|I|+\frac{1}{2\lambda}\sum_{t\in I}\bigg{(} \frac{2N}{t-t_{s}}+2N\alpha_{t}\bigg{)}^{2}\] \[\quad+\frac{1}{\lambda}\bigg{[}N\sum_{t\in I}\log\Big{(}\frac{| \mathcal{A}|}{\alpha_{t}}\Big{)}\Big{(}\frac{2N}{t-t_{s}}+N\Delta_{t}^{\pi^{*} }\Big{)}+2N\sum_{t\in I}\alpha_{t}+N\log(|\mathcal{A}|)\bigg{]}.\]

If we take the learning rate as \(\alpha_{t}=1/t\), then, for all \(\lambda>0\),

\[R_{I}^{\text{policy}}\big{(}(\pi^{t,*})t\in I\big{)} \leq\lambda L_{F}^{2}|I|+\frac{N^{2}}{\lambda}\Delta_{I}^{\pi^{*}}\] \[+\frac{1}{\lambda}\bigg{[}8N^{2}+2N^{2}\log(|\mathcal{A}|)\log(| I|)\big{(}1+\log(|I|)\big{)}+2N\log(|I|)+N\log(|\mathcal{A}|)\bigg{]}\] \[=\lambda L_{F}^{2}|I|+\frac{N^{2}\Delta_{I}^{\pi^{*}}+b}{\lambda},\]

where \(b:=8N^{2}+2N^{2}\log(|\mathcal{A}|)\log(|I|)\big{(}1+\log(|I|)\big{)}+2N\log(| I|)+N\log(|\mathcal{A}|)\).

### Final Greedy MD-CURL regret analysis

Replacing the bounds of Prop. G.1 and G.2 in Eq. (21) yields the final upper bound of Greedy MD-CURL's dynamic regret for any interval \(I\subseteq T\) with respect to any sequence of policies \((\pi^{t,*})_{t\in I}\):

**Theorem G.3** (Dynamic regret of Greedy MD-CURL).: _Let \(b\) be a constant defined as_

\[b:=8N^{2}+2N^{2}\log(|\mathcal{A}|)\log(|I|)\big{(}1+\log(|I|)\big{)}+2N\log(| I|)+N\log(|\mathcal{A}|).\]

_Let \(\delta\in(0,1)\). With probability at least \(1-2\delta\), for any interval \(I\subseteq[T]\), for any sequence of policies \((\pi^{t,*})_{t\in I}\), for any learning rate \(\lambda>0\), and for \(\alpha_{t}:=1/t\), Greedy MD-CURL obtains_

\[R_{I}\big{(}(\pi^{t,*})_{t\in I}\big{)}\leq\lambda L_{F}^{2}|I|+\frac{N^{2} \Delta_{I}^{\pi^{*}}+b}{\lambda}+2FN^{2}\sqrt{\frac{1}{2}\log\bigg{(}\frac{N| \mathcal{X}||\mathcal{A}|2^{|\mathcal{X}|}T}{\delta}\bigg{)}}\sqrt{|I|}+2|I| \Delta_{I}^{p}\]

Hence, Greedy MD-CURL meets the requisite dynamic regret bound from Eq. (10) to serve as a black-box algorithm for MetaCURL achieving optimal dynamic regret.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: We clearly provide the contributions of our work and our settings in the Introduction. We formally detail our hypothesis in Section 2. We present the new algorithm in Section 4. All regret results related to the new algorithm claimed in the abstract and introduction are stated in Section 5 and proved in the Appendix. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: In Section 2, we formally detail our assumptions and discuss the strong assumption made about probability transitions, justifying it as a means of providing low-complexity methods. We also discuss real-world applications that satisfy these assumptions. In Section 6, we discuss the aspirational goal of addressing this limitation as a future work. In Remark 3.1, we discuss the complexity of the algorithm. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.

3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes] Justification: All the main results are in the paper, and all proofs are carefully stated in the Appendix. All auxiliary results used to obtain the main results are also included in the Appendix. A proof sketch is provided for the main results in the main paper. All results are properly referenced. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [NA] Justification: This is a theoretical paper, with no experiments. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset).

4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [NA] Justification: This is a theoretical paper, with no experiments. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [NA] Justification: This is a theoretical paper, with no experiments. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [NA] Justification: This is a theoretical paper, with no experiments. Guidelines: * The answer NA means that the paper does not include experiments.

* The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.
* The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).
* The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)
* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [NA] Justification: This is a theoretical paper, with no experiments. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: This work conform with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes]Justification: The results presented in this paper are largely theoretical. The framework provided in this paper is very general and could be applied to any reinforcement learning or concave utility reinforcement learning problem in a tabular MDP. Therefore, as with any reinforcement learning algorithm, it is possible that the algorithms developed from the ideas presented in this paper could be applied in contexts that have negative societal impacts, or in contexts where the reward function has a negative negative societal impacts. Guidelines:

* The answer NA means that there is no societal impact of the work performed.
* If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.
* Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.
* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: This paper poses no such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [NA] Justification: This paper does not use existing assets. Guidelines:* The answer NA means that the paper does not use existing assets.
* The authors should cite the original paper that produced the code package or dataset.
* The authors should state which version of the asset is used and, if possible, include a URL.
* The name of the license (e.g., CC-BY 4.0) should be included for each asset.
* For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.
* If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.
* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.

13. **New Assets** Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: This paper does not release new assets. Guidelines:

* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.

14. **Crowdsourcing and Research with Human Subjects** Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines:

* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.

15. **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects** Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects.

Guidelines:

* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.