# On Differentially Private Subspace Estimation in a Distribution-Free Setting

Eliad Tsfadia

Department of Computer Science

Georgetown University

eliadtsfadia@gmail.com

###### Abstract

Private data analysis faces a significant challenge known as the curse of dimensionality, leading to increased costs. However, many datasets possess an inherent low-dimensional structure. For instance, during optimization via gradient descent, the gradients frequently reside near a low-dimensional subspace. If the low-dimensional structure could be privately identified using a small amount of points, we could avoid paying for the high ambient dimension.

On the negative side, Dwork et al. (2014) proved that privately estimating subspaces, in general, requires an amount of points that has a polynomial dependency on the dimension. However, their bounds do not rule out the possibility to reduce the number of points for "easy" instances. Yet, providing a measure that captures how much a given dataset is "easy" for this task turns out to be challenging, and was not properly addressed in prior works.

Inspired by the work of Singhal and Steinke (2021), we provide the first measures that quantify "easiness" as a function of multiplicative singular-value gaps in the input dataset, and support them with new upper and lower bounds. In particular, our results determine the first types of gaps that are sufficient and necessary for estimating a subspace with an amount of points that is independent of the dimension. Furthermore, we realize our upper bounds using a practical algorithm and demonstrate its advantage in high-dimensional regimes compared to prior approaches.

## 1 Introduction

Differentially private (DP) Dwork et al. (2006) algorithms typically exhibit a significant dependence on the dimensionality of their input, as their error or sample complexity tends to grow polynomially with the dimension. This cost of dimensionality is inherent in many problems, as Bun et al. (2014); Steinke and Ullman (2017); Dwork et al. (2015) showed that any method that achieves lower error rates is vulnerable to tracing attacks (also known as, membership inference attacks). However, these lower bounds consider algorithms that guarantee accuracy for worst-case inputs and do not rule out the possibility of achieving higher accuracy for "easy" instances.

Example: DP averaging.As a simple prototypical example, consider the task of DP averaging. In this task, the input dataset consists of \(d\)-dimensional points \(x_{1},\ldots,x_{n}\in\mathbb{R}^{d}\), and the goal is to estimate their average \(\frac{1}{n}\sum_{i=1}^{n}x_{i}\) using a DP algorithm while minimizing the \(\ell_{2}\) additive error. One natural way to capture input "easiness" for this task is via the maximal \(\ell_{2}\) distance between any two points (i.e., points that are closer to each other are considered "easier"). Indeed, Tsfadia et al. (2022); Peter et al. (2024) showed that if the points are \(\gamma\)-close to each other, and we aim for an accuracy of \(\lambda\gamma\) (i.e., an accuracy that is _proportional_ to the "easiness" parameter \(\gamma\)), then it is sufficient andnecessary to use \(n=\tilde{\Theta}(\sqrt{d}/\lambda)\) points. Equivalently, if we aim for an accuracy of \(\alpha\), then by applying these results with \(\lambda=\alpha/\gamma\), we obtain that the answer is \(n=\tilde{\Theta}(\gamma\sqrt{d}/\alpha)\). This, in particular, implies that when \(\gamma\leq\alpha/\sqrt{d}\) (i.e., the points are very close to each other), then \(\tilde{O}(1)\) points are sufficient, but for \(\gamma=\alpha/d^{1/2-\Omega(1)}\), a polynomial dependency on \(d\) is necessary in general.

DP subspace estimation.In this work, we consider the more complex problem of DP subspace estimation: Given a dataset \(X=(x_{1},\ldots,x_{n})\in(\mathbb{R}^{d})^{n}\) of unit norm points and a parameter \(k\), estimate the top-\(k\) subspace of \(Span\{x_{1},\ldots,x_{n}\}\). The main goal of this work is to answer the following meta question:

**Question 1.1**.: _How should we quantify how "easy" a given dataset is for DP subspace estimation?_

Since the dimension \(d\) is very large in many settings, we aim at providing tight measures that smoothly eliminate the dependency on \(d\) as a function of input "easiness". In particular, we want to be able to identify when we can avoid paying on the ambient dimension \(d\), and when a polynomial dependency on \(d\) is unavoidable.

### Motivation: DP-SGD

To motivate the problem, consider the task of privately training large neural networks. The most commonly used tool to perform such a private training is the differentially-private stochastic gradient descent (DP-SGD) Abadi et al. (2016); Bassily et al. (2014); Song et al. (2013) - a private variant of SGD that perturbs each gradient update with random noise vector drawn from an isotropic Gaussian distribution. However, this approach does not differentiate between "easy" gradients and "hard" ones, which results with high error rates when the ambient dimension - the number of parameters in the model - is large. However, empirical evidence and theoretical analysis indicate that while training some deep learning models, the gradients tend to live near a low-dimensional subspace Abadi et al. (2016); Li et al. (2018); Gur-Ari et al. (2018); Li et al. (2018); Demencioni and Chawla (2020); Zhou et al. (2021); Feng and Tu (2020); Li et al. (2022); Golatkar et al. (2022); Kairouz et al. (2020). In particular, Gur-Ari et al. (2018) showed that in some cases, the low dimension is the number of classes in the dataset, and the gradients tend to be close and well-spread inside this subspace. If we could exploit such a low-dimensional structure into an (inexpensive) private and useful projection matrix, we could reduce the error of DP-SGD by making it dependent solely on the low dimension.

We start by defining the setting of DP subspace estimation more formally.

### Subspace Estimation

We consider the setting of Dwork et al. (2014). That is, the input dataset consists of \(n\) points of unit norm \(x_{1},\ldots,x_{n}\in\mathcal{S}_{d}:=\{v\in\mathbb{R}^{d}\colon\left\|v \right\|_{2}=1\}\) and a parameter \(k\), and the goal is to output a \(k\)-dimensional projection matrix \(\Pi\) such that \(\Pi\cdot X^{T}\) is "close" to \(X^{T}\) as possible, where \(X\) denotes the \(n\times d\) matrix whose rows are \(x_{1},\ldots,x_{n}\). We measure the accuracy of our estimation using the "usefulness" definition of Dwork et al. (2014):

**Definition 1.2** (\(\alpha\)-useful).: _We say that a rank-\(k\) projection matrix \(\Pi\) is \(\alpha\)-useful for a matrix \(X\in(\mathcal{S}_{d})^{n}\) if for any \(k\)-rank projection matrix \(\Pi^{\prime}\):_

\[\left\|\Pi\cdot X^{T}\right\|_{F}^{2}\geq\left\|\Pi^{\prime}\cdot X^{T}\right\| _{F}^{2}-\alpha\cdot n,\]

_where \(\left\|\cdot\right\|_{F}\) denotes the Frobenius norm.1_

Footnote 1: The Frobenius norm of a matrix \(A=(a_{i}^{j})_{i\in[n],j\in[d]}\) is defined by \(\left\|A\right\|_{F}=\sqrt{\sum_{i\in[n],j\in[d]}\left(a_{i}^{j}\right)^{2}}\).

Observe that any projection matrix is \(1\)-useful for any \(X\) (because \(\left\|X\right\|_{F}^{2}=\sum_{i=1}^{n}\left\|x_{i}\right\|_{2}^{2}=n\)). Therefore, we will be interested in smaller values of \(\alpha\) (e.g., \(0.001\)).

### Prior Works

Without privacy restrictions, we can find a \(0\)-useful (i.e., optimal) solution using Singular-Value Decomposition (SVD). The SVD of \(X\) is \(X=U\Sigma V^{T}\), where \(U\in\mathbb{R}^{n\times n}\) and \(V\in\mathbb{R}^{d\times d}\) are unitary matrices, and \(\Sigma\) is an \(n\times d\) diagonal matrix which has values \(\sigma_{1}\geq\ldots\geq\sigma_{\min\{n,d\}}\geq 0\) along the diagonal. The top-\(k\) rows subspace of \(X\) is given by the span of the first \(k\) columns of \(V\), and it can be computed, e.g., by applying Principal Component Analysis (PCA) on the covariance matrix \(A=X^{T}X\) (the eigenvectors of \(A\) are the columns of \(V\)).

With differential privacy, however, the problem is much harder, and Dwork et al. (2014) showed a lower bound of \(n\geq\tilde{\Omega}(k\sqrt{d})\) for computing a \(0.001\)-useful \(k\)-rank projection matrix under \((1,\Omega(1/n^{2}))\)-DP. This bound, however, only holds for algorithms that provide accuracy for worst-case instances and does not rule out the possibility of achieving high accuracy with smaller values of \(n\) for input points that are very close to being in a \(k\)-dimensional subspace (i.e., "easy" instances).

Perhaps the easiest instances are those that _exactly_ lie in a \(k\)-dimensional subspace, and are well-spread within it (i.e., there is no \((k-1)\)-dimensional subspace that contains many points). Indeed, Singhal and Steinke (2021) and Ashtani and Liaw (2022) developed \((\varepsilon,\delta)\)-DP algorithms for such instances that precisely recover the subspace using only \(n=\tilde{\Theta}_{\varepsilon,\delta}(k)\) points. However, while these algorithms are robust to changing a few points, they are very brittle if we change all the points by a little bit.

One approach to smoothly quantify how much a dataset is "easy" is to consider the _additive-gap_\(\sigma_{k}^{2}-\sigma_{k+1}^{2}\). Indeed, Dwork et al. (2014), Gonem and Gilad-Bachrach (2018) present \((\varepsilon,\delta)\)-DP algorithms that output \(0.001\)-useful projection using \(n=\tilde{\Theta}_{\varepsilon,\delta}\Big{(}\frac{k\sqrt{d}}{\sigma_{k}^{2}- \sigma_{k+1}^{2}}\Big{)}\) points. Yet, the downside of such additive-gap based approaches is their inherent dependency on the dimension \(d\). Even in the extreme case where the points exactly lie in a \(k\)-dimensional subspace and well-spread within it, the additive gap \(\sigma_{k}^{2}-\sigma_{k+1}^{2}\) is at most \(n/k\), which still results with a polynomial dependency on \(d\).

The only existing approach to eliminate the dependency on \(d\) in some non-exact cases is the one of Singhal and Steinke (2021) (their "approximate" case). Rather than quantifying easiness as a function of the input dataset, they consider a setting where the points are sampled i.i.d. from some distribution, and implicitly measure how "easy" a distribution is according to some stability notion. In particular, they show that a \(d\)-dimensional Gaussian \(\mathcal{N}(\vec{0},\Sigma)\) with a _multiplicative-gap_\(\frac{\sigma_{k+1}(\Sigma)}{\sigma_{k}(\Sigma)}\leq\tilde{\Theta}_{ \varepsilon,\delta,k}\big{(}\frac{1}{d^{8}}\big{)}\) is "stable" enough for estimating the top-\(k\) subspace of \(\Sigma\) with sample complexity that is independent of \(d\). While Singhal and Steinke (2021) do not provide an answer to Question 1.1, they inspired our work to consider multiplicative singular-value gaps _in the input dataset_ as a measure for easiness.

### Defining Subspace Estimators

Towards answering Question 1.1, we consider mechanisms \(\mathsf{M}\) that are parameterized by \(k\), \(\lambda\), and \(\beta\), and satisfy the following utility guarantee: Given a dataset \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\) and a value \(\gamma\) as inputs, such that \(X\) is "\(\gamma\)-easy" for \(k\)-subspace estimation, then with probability at least \(\beta\) over a random execution of \(\mathsf{M}(X,\gamma)\), the output \(\Pi\) is an \(\lambda\gamma\)-useful rank-\(k\) projection matrix for \(X\).2 In Definition 1.3, the "\(\gamma\)-easy" property is abstracted by a predicate \(f\). We also allow an additional parameter \(\gamma_{\max}\) to relax the utility for non-easy instances (i.e., we would not require a utility guarantee for instances that are not "\(\gamma_{\max}\)-easy"). Furthermore, we only focus on cases in which \(X\) has at least \(k\) significant directions, which is formalized by requiring that \(\sigma_{k}^{2}(X)\geq 0.01\cdot n/k\) (we refer to Remark 2.3 for how our upper bounds, stated in Theorem 1.6, can handle smaller values of \(\sigma_{k}\) using an additional parameter or different assumptions).

Footnote 2: Similarly to the DP averaging example, we consider algorithms which guarantee accuracy that is proportional to the “easiness” parameter \(\gamma\), and we measure the “quality” of the estimations by the parameter \(\lambda\).

**Definition 1.3** (\((k,\lambda,\beta,\gamma_{\max},f)\)-Subspace Estimator).: _Let \(n,k,d\in\mathbb{N}\) s.t. \(k\leq\min\{n,d\}\), let \(\beta\in(0,1]\), and let \(f:(\mathcal{S}_{d})^{n}\times[0,1]\to\{0,1\}\) be a predicate. We say that \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) is an \((k,\lambda,\beta,\gamma_{\max},f)\)-subspace estimator, if for every \(X\in(\mathcal{S}_{d})^{n}\) and \(\gamma\leq\gamma_{\max}\) with \(\sigma_{k}^{2}(X)\geq 0.01\cdot n/k\) and \(f(X,\gamma)=1\), it holds that_

\[\Pr_{\Pi\sim\mathsf{M}(X,\gamma)}[\Pi\text{ is }(\lambda\gamma)\text{-useful for }X]\geq\beta.\]

### Quantifying Easiness - Our Approach

In this work, we develop two types of smooth measures (captured by the predicate \(f\) in Definition 1.3) for input "easiness", which are translated to the following two types of subspace estimators:

**Definition 1.4** (\((k,\lambda,\beta,\gamma_{\max})\)-Weak Subspace Estimator).: \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) _is called an \((k,\lambda,\beta,\gamma_{\max})\)-Weak Subspace Estimator, if it is \((k,\lambda,\beta,\gamma_{\max},f)\)-Subspace Estimator for the predicate \(f(X,\gamma)\) that outputs \(1\) iff \(\sum_{i=k+1}^{n}\sigma_{i}^{2}(X)\leq\gamma^{2}\sigma_{k}^{2}(X)\)._

**Definition 1.5** (\((k,\lambda,\beta,\gamma_{\max})\)-Strong Subspace Estimator).: \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) _is called an \((k,\lambda,\beta,\gamma_{\max})\)-Strong Subspace Estimator, if it is \((k,\lambda,\beta,\gamma_{\max},f)\)-Subspace Estimator for the predicate \(f(X,\gamma)\) that outputs \(1\) iff \(\sigma_{k+1}(X)\leq\gamma\sigma_{k}(X)\)._

In both cases, we define \(f\) based on multiplicative singular-value gaps in the input dataset, but the difference is what type of gap the value \(\gamma\) bounds: Strong estimators depend solely on the gap \(\sigma_{k+1}/\sigma_{k}\) without taking into account smaller singular values. Weak estimators, on the other, depend on the gap \(\sqrt{\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}^{2}}/\sigma_{k}\). Note that a strong estimator is, in particular, a weak one (with the same parameters). Also note that both measures smoothly converge to the exact \(k\)-subspace case: When each gap tends to zero, the points tend to be closer to a \(k\)-dimensional subspace.

We provide new upper and lower bounds for both types of estimators.

#### 1.5.1 Our Upper Bounds

**Theorem 1.6** (Weak estimator).: _There exists an \((k,\lambda,\beta=0.9,\gamma_{\max}=\Theta(\min\{\frac{1}{\lambda},1\}))\)-weak subspace estimator \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) with \(n=\tilde{O}_{\varepsilon,\delta}\Big{(}k+\frac{\min\{k^{2}\sqrt{d},\,kd\}}{ \lambda}\Big{)}\) such that \(\mathsf{M}(\cdot,\gamma)\) is \((\varepsilon,\delta)\)-DP for every \(\gamma\in[0,1]\)._

**Theorem 1.7** (Strong estimator).: _There exists an \((k,\lambda,\beta=0.8,\gamma_{\max}=\tilde{\Theta}(\min\{\frac{1}{\lambda},\, \frac{\lambda^{2}}{k^{2}d}\}))\)-strong subspace estimator \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) with \(n=\tilde{O}_{\varepsilon,\delta}\Big{(}k+\frac{k^{3}d}{\lambda^{2}}\Big{)}\) such that \(\mathsf{M}(\cdot,\gamma)\) is \((\varepsilon,\delta)\)-DP for every \(\gamma\in[0,1]\)._

Both of our estimators provide a useful projection by outputting a matrix that is close (in Frobenius norm) to the projection matrix of the top-\(k\) rows subspace. Their running time is \(\frac{n}{m}\cdot T(m,d,k)+\tilde{O}(dkn)\) for some \(m=\tilde{\Theta}(k)\), where \(T(m,d,k)\) denotes the running time required to compute (non-privately) a projection matrix to the top-\(k\) rows subspace of an \(m\times d\) matrix. We refer to Section 2 for a detailed overview.

For simplifying the presentation and the formal utility guarantees, we assume that our algorithms know the values of \(\gamma\) (the bound on the multiplicative-gap) and of \(k\) beforehand. Yet, we show that both assumptions are not inherent, and we refer to Remark 2.4 for additional details.

We also remark that in both theorems, it is possible to increase the confidence \(\beta\) to any constant smaller than \(1\) without changing the asymptotic cost.

#### 1.5.2 Our Lower Bounds

**Theorem 1.8** (Lower bound for weak estimators).: _If \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) is a \((k,\lambda,\beta=0.1,\gamma_{\max}=\Theta(\frac{1}{\lambda}))\)-weak subspace estimator for \(1\leq\lambda\leq\Theta(\frac{d}{k\log k})\) and \(\mathsf{M}(\cdot,\gamma)\) is \(\big{(}1,\frac{1}{50nk}\big{)}\)-DP for every \(\gamma\in[0,1]\), then \(n\geq\tilde{\Omega}\Big{(}\frac{\sqrt{kd}}{\lambda}\Big{)}\)._

**Theorem 1.9** (Lower bound for strong estimators).: _If \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) is a \((k,\lambda,\beta=0.1,\gamma_{\max}=\Theta\big{(}\frac{1}{\lambda}\big{)})\)-strong subspace estimator for \(1\leq\lambda\leq\Theta(\frac{d}{\log k})\) and \(\mathsf{M}(\cdot,\gamma)\) is \(\big{(}1,\frac{1}{50nk}\big{)}\)-DP for every \(\gamma\), then \(n\geq\tilde{\Omega}\Big{(}\frac{k\sqrt{d}}{\lambda}\Big{)}\)._

Our lower bounds are more technically involved, and use a novel combination of generating hard-instances using the tools from Peter et al. [2024] for proving smooth lower bounds, and extracting sensitive vectors from useful projection matrices using ideas from the lower bound of Dwork et al. [2014]. Both lower bounds are proven by generating hard-instances that are "\(\gamma\)-easy" for \(\gamma=\frac{1}{1000\lambda}\).

We refer to Section 3 for a detailed overview.

We remark that Peter et al. [2024] recently proved a similar lower bound for the special case of \(k=1\) (estimating the top-singular vector). However, their result strongly relies on the similarity betweenaveraging and estimating top-singular vector in their hard instances, which does not hold for the case \(k\geq 2\). Table 1 summarizes our bounds for \(k\leq\sqrt{d}\).

#### 1.5.3 Implications

We offer two formulations which have the property we seek: If we aim for an error \(\alpha\), and the dataset is "\(\gamma\)-easy" for a very small \(\gamma\), we take \(\lambda=\alpha/\gamma\) to reduce the number of necessary and sufficient points.

For strong estimators, the rate \(n=n(\lambda)\) in Theorem 1.7 does not match the corresponding lower bound Theorem 1.9, and Theorem 1.7 is limited to small values of \(\gamma\).3 Yet, for small values of \(k\), the strong-estimator bounds do imply that in order to privately compute an \(0.001\)-useful rank-\(k\) projection with number of points that is independent of \(d\), it is sufficient and necessary to have a gap \(\sigma_{k+1}/\sigma_{k}\) of at most \(\propto 1/\sqrt{d}\). Table 2 summarizes our bounds for the special case of outputing \(0.001\)-useful projection matrix, using our two different types of input "easiness".

Footnote 3: If we take \(\lambda=\alpha/\gamma\) (i.e., aiming for an error \(\alpha\)), the utility restriction on \(\gamma_{\max}\) in Theorem 1.7 implies that \(\gamma\) should be smaller than \(\Theta\Big{(}\frac{\alpha^{2/3}}{k^{2/3}d^{1/3}}\Big{)}\).

### Empirical Evaluation

We believe that private subspace estimation of easy instances could find practical applications. Therefore, we made an effort to realize our upper bounds using a _practical_ algorithm. In Section 4 we empirically compared our method to the additive-gap based approach of Dwork et al. (2014) for the task of privately estimating the empirical mean of points that are close to a small dimensional subspace, demonstrating the advantage of our approach in high-dimensional regimes.

### Paper Organization

In Sections 2 and 3 we present proof overviews for our results, and the empirical evaluation is provided in Section 4. A limitations section is given in Section 5. Additional related work appears at Appendix A. Notations, definitions and general statements are given in Appendix B. Our upper bounds are proven in Appendix C, and our lower bounds are proven in Appendix D.

## 2 Upper Bounds - Overview

Both of our estimators (Theorems 1.6 and 1.7) follow the same structure, but with different parameters. Similarly to Singhal and Steinke (2021), our algorithms follow the sample-and-aggregate approach of Nissim et al. (2007). That is, given a dataset \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\), we partition the rows into \(t\) subsets, compute (non-privately) a projection matrix to the top-\(k\) rows subspace of each subset,

\begin{table}
\begin{tabular}{|c|c|c|} \cline{2-3} \multicolumn{1}{c|}{} & Weak Estimator & Strong Estimator \\ \hline Upper Bound & \(\tilde{O}_{\varepsilon,\delta}\Big{(}k+\frac{k^{2}\sqrt{d}}{\lambda}\Big{)}\) & \(\tilde{O}_{\varepsilon,\delta}\Big{(}k+\frac{k^{3}d}{\lambda^{2}}\Big{)}\) \\ \hline Lower Bound & \(\tilde{\Omega}\Big{(}\frac{\sqrt{kd}}{\lambda}\Big{)}\) & \(\tilde{\Omega}\Big{(}\frac{k\sqrt{d}}{\lambda}\Big{)}\) \\ \hline \end{tabular}
\end{table}
Table 1: Our bounds on \(n\) for subspace estimation (ignoring restrictions on \(\gamma_{\max}\) and \(\lambda\)).

and then privately aggregate the projection matrices \(\Pi_{1},\ldots,\Pi_{t}\). For doing that, we need to argue that \(\Pi_{1},\ldots,\Pi_{t}\) are expected to be close to each other. In the Gaussian setting of Singhal and Steinke (2021), this holds by concentration properties of Gaussian distributions. In our setting, however, it is unreasonable to expect that arbitrary partitions will lead to similar subspaces. For instance, consider the matrix \(X\) whose first \(n/k\) rows are \(e_{1}=(1,0,\ldots,0)\), the next \(n/k\) rows are \(e_{2}=(0,1,\ldots,0)\), and so forth until \(e_{k}\). Even though \(X\) is rank-\(k\) and has \(\sigma_{1}^{2}=\ldots=\sigma_{k}^{2}=n/k\), if we simply partition the rows according to their order, then most of those subsets will induce a rank-\(1\) matrix which clearly does not represent the original matrix \(X\). Therefore, we must consider a more clever partition that will guarantee a good representation of the top-\(k\) rows subspace of \(X\) in each subset.

There is an extensive line of works who aim for methods to choose a small subset of rows that provides a good low-approximation for the original matrix (e.g., see Mahoney (2011) for a survey). Yet, most of these methods are data-dependent, and therefore seem less applicable for privacy.

In this work we show that by simply using a _uniformly random_ partition into subsets of size \(\tilde{\Theta}(k)\), then w.h.p. each subset induces a projection matrix that is close to the projection matrix of the top-\(k\) rows subspace of \(X\):

**Lemma 2.1**.: _Let \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\) with singular values \(\sigma_{1}\geq\ldots\geq\sigma_{\min\{n,d\}}\geq 0\), and let \(\gamma_{1}=\frac{\sigma_{h+1}}{\sigma_{h}}\) and \(\gamma_{2}=\frac{\sqrt{\sum_{k+1}^{\min\{n,d\}}\sigma_{1}^{2}}}{\sigma_{h}}\). Let \(\mathbf{X}^{\prime}\in(\mathcal{S}_{d})^{m}\) be a uniformly random \(m\)-size subset of the rows of \(X\) (without replacement). Let \(\Pi\) and \(\mathbf{\Pi}^{\prime}\) be the projection matrices to the top-\(k\) rows subspace of \(X\) and \(\mathbf{X}^{\prime}\), respectively. Assuming that \(\sigma_{k}^{2}\geq 0.01n/k\), then the following holds for \(m=\tilde{\Theta}(k)\):_

1. _If_ \(\gamma_{1}\leq\frac{m}{2n}\)_, then_ \(\Pr\bigl{[}\|\Pi-\mathbf{\Pi}^{\prime}\|\leq O\bigl{(}\sqrt{\frac{n}{m}}\cdot \gamma_{1}\bigr{)}\bigr{]}\geq 0.9\)_. (_\(\|\cdot\|\) _denotes the Spectral norm_4_)._ Footnote 4: The spectral norm of a matrix \(A\in\mathbb{R}^{n\times d}\) is defined by \(\|A\|=\sup_{x\in\mathcal{S}_{d}}\|Ax\|_{2}\) and is equal to \(\sigma_{1}(A)\).
2. _If_ \(\gamma_{2}\leq 0.1\)_, then_ \(\Pr\bigl{[}\|\Pi-\mathbf{\Pi}^{\prime}\|_{F}\leq O(\gamma_{2})\bigr{]}\geq 0.9\)_._ 5_._ Footnote 5: The Frobenius norm of a matrix \(A\in\mathbb{R}^{n\times d}\) is equal to \(\sqrt{\sigma_{1}(A)^{2}+\ldots+\sigma_{\min\{n,d\}}(A)^{2}}\).

Namely, Item 1 bounds the expected spectral norm distance of the projection matrices using the first type gap \(\sigma_{k+1}/\sigma_{k}\) (which is used in the analysis of our strong estimator), and Item 2 bounds the expected Frobenius norm distance using the second type gap \(\sqrt{\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}^{2}}/\sigma_{k}\) (which is used in the analysis of our weak estimator). We prove Lemma 2.1 in Appendix C.1.2.

The next step is to aggregate the non-private projection matrices \(\Pi_{1},\ldots,\Pi_{t}\) into a private one \(\widetilde{\Pi}\). We consider two types of aggregations. The first one simply treats each matrix as a \(d^{2}\) vector and privately estimate the average of \(\Pi_{1},\ldots,\Pi_{t}\). The second type (which outperforms the first one in most cases) follows a similar high-level structure of Singhal and Steinke (2021). That is, to sample i.i.d. reference points \(p_{1},\ldots,p_{q}\sim\mathcal{N}(\vec{0},\mathbb{I}_{d\times d})\) for \(q=\Theta(k)\), privately average the \(qd\)-dimensional points \(\{(\Pi_{j}p_{1},\ldots,\Pi_{j}p_{q})\}_{j=1}^{t}\) for obtaining a private \(\widetilde{P}\in\mathbb{R}^{q\times d}\) (whose \(i^{\mathrm{th}}\) row estimates the projection of \(p_{i}\) onto the top-\(k\) rows subspace of \(X\)), and then compute the projection matrix of the top-\(k\) rows subspace of \(\widetilde{P}\). But unlike Singhal and Steinke (2021) who perform this step using a histogram-based averaging that has the same flavor of Karwa and Vadhan (2018), we perform this step using FriendlyCore Tsfadia et al. (2022) that simplifies the construction and makes it practical in high dimensional regimes. We remark that in both aggregation types, we need a DP averaging algorithm that is resilient to a constant fraction of outliers (say, \(20\%\)) since both items in Lemma 2.1 only guarantee that the expected number of outliers is no more than \(10\%\). Fortunately, FriendlyCore can be utilized for such regimes of outliers (see Appendix B.8.3 for more details).

A few remarks are in order.

**Remark 2.2**.: _The first aggregation type (which privately estimate the average of \(\Pi_{1},\ldots,\Pi_{t}\) directly) outperforms the second type only for our weak estimator in the regime \(k\geq\sqrt{d}\) (as it inherently posses larger dependency in the dimension)._

**Remark 2.3**.: _We could avoid the requirement \(\sigma_{k}^{2}\geq 0.01n/k\) by adding an additional parameter \(\eta\) such that \(\sigma_{k}^{2}\geq\eta\cdot n/k\), and using subsets of size \(m=\tilde{\Theta}(k/\eta)\) (which would increase \(n\) by the same factor of \(1/\eta\)). For readability purposes, we chose to avoid this additional parameter. Because our algorithms provide useful projection by estimating the actual top-\(k\) projection, then such a requirement is unavoidable if we would like to provide utility guarantees only as a function of the singular values.6 In fact, any assumption that would imply that two random subsets induce similar top-\(k\) projection matrices would suffice for the utility analysis._

Footnote 6: To illustrate why \(\sigma_{1},\ldots,\sigma_{k}\) should be large, consider a matrix \(X\) whose first \(n-k+1\) rows are \(e_{1}\), and the next \(k-1\) rows are \(e_{2},\ldots,e_{k}\). This matrix has \(\sigma_{2}=\ldots=\sigma_{k}=1\), and even though it is a rank-\(k\) matrix, it is clearly impossible to output a projection matrix that reveals any of the directions \(e_{2},\ldots,e_{k}\) under DP.

**Remark 2.4**.: _To eliminate the known-\(\gamma\) assumption, we can replace the FriendlyCore-averaging step Tsfadia et al. (2022) (that requires to know the diameter) with their unknown diameter variant that gets two very rough bounds \(\xi_{\min}\) and \(\xi_{\max}\), and performs a private binary search for estimating a good diameter \(\xi\in[\xi_{\min},\xi_{\max}]\) in a preprocessing phase. This step only replaces the dependency on \(d\) with \(d+\log\log(\xi_{\max}/\xi_{\min})\) in the asymptotic sample complexity (section 5.1.2. in Tsfadia et al. (2022)) and is very practical. In fact, we use this method in our empirical evaluation in Section 4._

_For handling unknown values of \(k\), note that our algorithms provide useful utility guarantees (compared to the additive-gap based ones) only when \(\sigma_{k+1}^{2}\ll 1\). So in cases where \(\sigma_{k}^{2}\geq 2\cdot\log(k/\beta)/\varepsilon^{\prime}\) for some (fixed) privacy budget \(\varepsilon^{\prime}<\varepsilon\) (say, \(\varepsilon^{\prime}=\varepsilon/10\)), we can privately determine w.p. \(1-\beta\) the right value of \(k\) using a simple \(\varepsilon^{\prime}\)-DP method. The main observation is that the \(\ell_{1}\) sensitivity of the vector \((\sigma_{1}^{2},\ldots,\sigma_{n}^{2})\) is at most \(2\)(Amin et al. (2019)), yielding that we can privately compute \((\sigma_{1}^{\prime 2},\ldots,\sigma_{n}^{\prime 2})=(\sigma_{1}^{2}+\mathrm{ Lap}(2/\varepsilon^{\prime}),\ldots,\sigma_{n}^{2}+\mathrm{ Lap}(2/\varepsilon^{\prime}))\), and then perform analysis on \((\sigma_{1}^{\prime 2},\ldots,\sigma_{n}^{\prime 2})\) to set \(k\) as the first index \(i\) where \(\sigma_{i}^{2}\geq\log(i/\beta)/\varepsilon^{\prime}\) and \(\sigma_{i+1}^{2}<\log(i/\beta)/\varepsilon^{\prime}\)._

## 3 Lower Bounds - Overview

Our lower bounds (Theorems 1.8 and 1.9) use the recent framework of Peter et al. (2024) for generating smooth lower bounds for DP algorithms using Fingerprinting Codes (FPC), but require technically involved analysis due to the complex structure of this problem for \(k\geq 2\).

Roughly speaking, let \(\mathcal{D}\) be a distribution over \(\{-1,1\}^{n_{0}\times d_{0}}\) that induces an optimal FPC codebook with \(d_{0}=\tilde{O}(n_{0}^{2})\) (e.g., Tardos (2008), Peter et al. (2024)). The connection between FPC and DP (first introduced by Bun et al. (2014)) is that any DP algorithm, given a random codebook \(X=(x_{i}^{j})_{i\in[n_{0}],j\in[d_{0}]}\sim\mathcal{D}\) as input, cannot output a vector \(q=(q^{1},\ldots,q^{d_{0}})\in\{-1,1\}^{d_{0}}\) that "agrees" with most of the "marked" columns of \(X\) (Formally, for \(b\in\{-1,1\}\), a columns \(x^{j}=(x_{1}^{j},\ldots,x_{n}^{j})\) is called \(b\)-marked if \(x_{1}^{j}=\ldots=x_{n}^{j}=b\), and \(q\) agrees with it if \(q^{j}=b\)).

Now consider a DP mechanism \(\mathsf{M}\colon\mathcal{X}^{n}\to\mathcal{W}\) that satisfies some non-trivial accuracy guarantee. Peter et al. (2024) reduces the task of lower bounding \(n\) to the following task: (1) Generate from an FPC codebook \(X\in\{-1,1\}^{n_{0}\times d_{0}}\) hard instances \(Y\in\mathcal{X}^{n}\) for \(\mathsf{M}\), and (2) Extract from the output \(w\sim\mathsf{M}(Y)\) a vector \(q\in\{-1,1\}^{d_{0}}\) that agrees with most of the marked columns of \(X\) (\(n_{0}\) and \(d_{0}\) are some functions of \(n\), \(\mathcal{X}\) and the weak accuracy guarantee of \(\mathsf{M}\)). Peter et al. (2024) proved that if there exists such generating algorithm \(\mathsf{G}\) and extracting algorithm \(\mathsf{F}\) (which even share a random secret that \(\mathsf{M}\) does not see) such that \(\mathsf{G}\) is _neighboring-preserving_ (i.e., maps neighboring databases to neighboring databases), then it must hold that \(n_{0}\geq\tilde{\Omega}(\sqrt{d_{0}})\) (Otherwise, \(\mathsf{M}\) cannot be DP).

Warm-up: DP averaging.We first sketch how Peter et al. (2024) applied their framework with \(n_{0}=n\) and \(d_{0}=\Theta(d/\lambda^{2})\) for proving a lower bound for the simpler problem of DP averaging. In this setting, we are given a mechanism that guarantees \(\lambda\gamma\)-accuracy (\(\ell_{2}\) additive error) for \(\gamma\)-easy instances (i.e., points that are \(\gamma\)-close to each other in \(\ell_{2}\) norm). The generator \(\mathsf{G}\), given an FPC codebook \(X\in\{-1,1\}^{n_{0}\times d_{0}}\), uses the _padding-and-permuting_ technique: It pads \(\ell\approx 10^{4}\lambda^{2}d_{0}\)\(1\)-marked columns and \(\ell\) (\(-1\))-marked columns, and then permutes all the \(d=d_{0}+2\ell\) columns of the new codebook \(X^{\prime}\) using a random permutation \(\pi\colon[d]\to[d]\) that is shared with the extractor \(\mathsf{F}\). The input \(Y\) to the algorithm would be the _normalized_ rows of \(X^{\prime}\) which are \(\frac{1}{100\lambda}\)-close to each other in \(\ell_{2}\) norm, so the mechanism has to output an \(\frac{1}{100}\)-accurate solution \(w\). In particular, after rounding \(w\) to \(\{-1,1\}^{d}\), the coordinates of \(w\) must agree with a vast majority of the marked columns, and also with a vast majority of the original marked columns that are located within \(\pi(1),\ldots,\pi(d_{0})\) as it cannot distinguish between them and the other marked columns (because \(\pi\) is hidden from it). The extractor \(\mathsf{F}\), given \(w\) and \(\pi\), rounds \(w\) to \(\{-1,1\}^{d}\) and outputs \(q=(w^{\pi(1)},\ldots,w^{\pi(d)})\) which agrees with most of the marked columns of \(X\). Hence, we obtain the lower bound of \(n\geq\tilde{\Omega}(\sqrt{d_{0}})=\tilde{\Omega}(\sqrt{d}/\lambda)\).

DP Subspace EstimationIn our case, we are given a (weak or strong) subspace estimator \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\to\mathbb{R}^{d\times d}\) that outputs an \(\lambda\gamma\)-useful rank-\(k\) projection matrix if \(\sigma_{k+1}(X)\leq\gamma\sigma_{k}(X)\) (or \(\sqrt{\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}(X)^{2}}\leq\gamma\sigma_{k}(X)\)). We prove our lower bounds by applying the framework with \(n_{0}=n/k\) and \(d_{0}=\Theta(od)\), for some parameter \(\alpha=\alpha(\lambda)\) that will depend on the type of \(\mathsf{M}\) we consider. In order to generate hard instances \(Y\in(\mathcal{S}_{d})^{n}\) for \(\mathsf{M}\) given an FPC codebook \(X\sim\mathcal{D}\) (\(X\in\{-1,1\}^{(n/k)\times d_{0}\}\)), we use a variation of the approach to Dwork et al. (2014). Namely, our generator \(\mathsf{G}\) samples \(k\) independent FPC codebooks \(A_{1},\ldots,A_{k}\sim\mathcal{D}\) where it plants \(A_{i}=X\) for a random \(i\leftarrow[k]\). Then for each \(j\in[k]\), it applies (independently) the padding-and-permuting technique of Peter et al. (2024) where it pads \(\ell\)\(1\)-marked columns and \(\ell\)\((-1)\)-marked columns for \(\ell\approx\frac{d_{0}}{2a}\), and permute all the columns. This induces \(k\) matrices \(B_{1},\ldots,B_{k}\in\{-1,1\}^{(n/k)\times d}\) (for \(d=d_{0}+2\ell\)) such that each \(B_{j}\) is "almost" rank-\(1\) and their vertical concatenation \(B\in\{-1,1\}^{n\times d}\) is almost rank-\(k\). It provides \(Y=\frac{1}{\sqrt{d}}B\) as the input for \(\mathsf{M}\). See Figure 1 for graphical illustrations.

We remark that at this step, the main difference from Dwork et al. (2014) (who implicitly follow a similar paradigm) is that they use a fixed padding length of \(\ell=15d_{0}\) that suffices for the robustness properties that they need. On the other hand, we use Peter et al. (2024)'s observation that increasing the padding can handle low-accuracy regimes of many problems, and indeed we use the padding length \(\ell\) to increase the \(k\)'th singular value gap, which will be a function of the quality parameter \(\lambda\).

The next step is to choose the right value of \(\alpha=\alpha(\lambda)\) such that \(\mathsf{M}\), on input \(Y\), will have to output a useful projection matrix. We show that the input matrix \(Y\) has w.h.p. \(\sigma_{1}(Y)^{2}\geq\ldots\geq\sigma_{k}(Y)^{2}\geq(1-O(\alpha))\cdot\frac{n} {k}\), which yields that \(\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}(Y)^{2}\leq O(\alpha)n\). If \(\mathsf{M}\) is a weak estimator, then we simply use \(\alpha=\Theta\big{(}\frac{1}{\lambda^{2}k}\big{)}\) to guarantee that \(\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}(Y)^{2}\leq\gamma^{2}\cdot\sigma_{k}(Y)^{2}\) for \(\gamma=\frac{1}{1000\lambda}\), which yields that by the utility guarantee of \(\mathsf{M}\), we get an \(0.001\)-useful projection matrix. If \(\mathsf{M}\) is a strong estimator, then we use \(\alpha=\Theta\big{(}\frac{1}{\lambda^{2}}\big{)}\) (i.e., we decrease the padding length by a factor of \(k\)). Yet, in order to meet the requirements of \(\mathsf{M}\), we must argue that w.h.p., \(\sigma_{k+1}(Y)^{2}\leq\tilde{O}(\alpha)\cdot\frac{n}{k}\), and this is more complex than the previous case. Here we use more internal properties of the fingerprinting distribution \(\mathcal{D}\). Namely, that in Peter et al. (2024)'s construction (which is also true for Tardos (2008)'s one), each entry of the codebook matrix has expectation \(0\) and the columns of the matrix are independent. Using known concentration bounds, this allows us to argue that if we pick a unit vector \(v\) that is orthogonal to the top-\(k\) rows subspace of \(Y\), then with probability at least \(1-\exp(-\tilde{\Omega}(d))\) it holds that \(\|Yv\|_{2}^{2}\leq\tilde{O}(\alpha)\cdot\frac{n}{k}\). Since \(\sigma_{k}^{2}\) is bounded by the supremum of \(\|Yv\|_{2}^{2}\) under such unit vectors, we conclude the proof of this part using a net argument.

Finally, the last step, which is not trivial for \(k\geq 2\), is to extract from an \(0.001\)-useful projection matrix \(\widetilde{\Pi}\) for \(Y\), a vector \(q\in\{-1,1\}^{d_{0}}\) that with noticeable probability, strongly agrees with the marked columns of the original codebook \(X\in\{-1,1\}^{n_{0}\times d_{0}}\). For that, our extractor \(\mathsf{F}\) uses the random permutations and the random location \(i\) (which are part of the shared secret between the

Figure 1: From Left to Right: (1) The normalized rows of the fingerprinting codebook \(X\) are well-spread on the \(d_{0}\)-dimensional unit sphere. (2) Applying the padding-and-permuting (PAP) technique makes the normalized points very close to each other on the \(d\)-dimensional unit sphere (\(d\gg d_{0}\)). (3) We create hard instances for DP subspace estimation using \(k\)-independent (normalized) PAP-FPC codebooks \(B_{1},\ldots,B_{k}\), where \(PAP(X)\) is planted in one of the \(B_{i}\)’s (in this example, in \(B_{2}\)). Reducing \(\alpha\) (i.e., increasing the padding length) makes the points in each group \(B_{i}\) closer to each other, which in particular, increases the closeness to a \(k\)-dimensional subspace.

generator and the extractor) and follows the strategy of Dwork et al. (2014). That is, it applies the \(i^{\rm th}\) invert permutation over the columns of \(\widetilde{\Pi}\) (denote the resulting matrix by \(\widetilde{\Pi}_{i}\)), chooses a vector \(u\in Span(\widetilde{\Pi}_{i})\) that has the maximal agreement with _half_ of the padding bits, and then simply outputs its first \(d_{0}\) coordinates after rounding to \(\{-1,1\}\). The intuition is that an \(0.001\)-useful projection matrix must be also \(0.001\)-useful for at least one of the parts \(Y_{j}=\frac{1}{\sqrt{d}}B_{j}\). Since all the \(Y_{j}\)'s have the same distribution and the location \(i\) (where the original \(X\) is planted) is hidden from \(\mathsf{M}\), then it must be \(0.001\)-useful for \(Y_{i}\) with probability at least \(\beta/k\) (where \(\beta\) denotes the success probability of \(\mathsf{M}\)).

Given that this event occurs, the usefulness of \(\widetilde{\Pi}\) implies that there must exists a vector in \(Span(\widetilde{\Pi}_{i})\) that strongly agrees with half of the padding locations. But because all the marked columns (that includes the padding locations) are indistinguishable from the eyes of \(\mathsf{M}\) who computed \(\widetilde{\Pi}\), then a similar agreement must hold for the marked columns of \(X\).

## 4 Empirical Evaluation

We implemented a zCDP (Definition B.24) variant of our subspace estimation algorithm in Python (denoted by \(\mathtt{EstSubspace}\)), and in this section we present empirical results for the fundamental task of privately estimating the average of \(d\) dimensional points that approximately lie in a much smaller \(k\)-dimensional subspace. Namely, given a dataset \(X=(x_{1},\ldots,x_{n})\in\mathcal{S}_{d}^{n}\), a parameter \(k\), and zCDP parameters \(\rho,\delta\), we perform the following steps: (a) Compute a \((\rho/2,\delta)\)-zCDP rank-\(k\) projection matrix \(\widetilde{\Pi}\) using \(\mathtt{EstSubspace}\) that estimates the projection onto the top-\(k\) rows subspace of \(X\), (b) Compute a \(\rho/2\)-zCDP estimation of the average of \(X\) using the Gaussian Mechanism: \(\tilde{x}=\frac{1}{n}\sum_{i=1}^{n}x_{i}+\mathcal{N}(\mathsf{0},\sigma^{2} \cdot\mathbb{I}_{d\times d})\) for \(\sigma=\frac{2}{n\sqrt{\rho}}\), and (c) Output \(\hat{x}=\widetilde{\Pi}\cdot\tilde{x}\).

The accuracy is measured by the \(\ell_{2}\) error from the average: \(\left\|\hat{x}-\frac{1}{n}\sum_{i=1}^{n}x_{i}\right\|_{2}\).

In all our experiments, we use \(\rho=2\) and \(\delta=10^{-5}\), \(t=125\) (the number of subsets in the sample-and-aggregate process), \(n=2tk\) data points, \(q=10\cdot k\) (the number of reference points in the aggregation), and use the zCDP implementation of the FriendlyCore-based averaging algorithm of Tsfadia et al. (2022).7 All experiments were tested on a MacBook Pro Laptop with 8-core Apple M1 CPU with 16GB RAM.

Footnote 7: Their source code is publicly available in https://media.icml.cc/Conferences/ICML2022/supplementary/tsfadia22a-supp.zip.

Rather than using Tsfadia et al. (2022)'s algorithm for the known-diameter case, we use their unknown-diameter implementation with \(\xi_{\min}=10^{-6}\) and \(\xi_{\max}=100\) (see Remark 2.4 for details). Furthermore, we reduced the space complexity of our implementation from \(\tilde{\Theta}(d^{2})\) to \(\tilde{\Theta}(kd)\).8

Footnote 8: We do not explicitly compute a \(d\times d\) rank-\(k\) projection matrix in each subset, but rather only compute a good approximation of the top-\(k\) rows \(V=(v_{1},\ldots,v_{k})\in\mathcal{S}_{d}^{k}\) using the Python function randomized_svd (provided in the sklearn library). We then compute the projection of any vector \(u\in\mathbb{R}^{d}\) onto \(Span\{v_{1},\ldots,v_{k}\}\), given by \(V^{T}Vu\), from right to left, which only involves \(O(kd)\) time and space computation cost. We do the same thing w.r.t. to the output projection \(\widetilde{\Pi}\) (i.e., represent it using only \(k\) vectors).

In order to generate a synthetic dataset that approximately lie in a \(k\)-dimensional subspace, we initially sample uniformly random \(b_{1},\ldots,b_{k}\leftarrow\{-1,1\}^{d}\) and perform the following process to generate each data point: (i) Sample a random unit vector \(u\) in \(Span\{b_{1},\ldots,b_{k}\}\), (ii) Sample a random noise vector \(\nu\leftarrow\{1/\tau,-1/\tau\}^{d}\), and (iii) Output \(\frac{u+\nu}{\|u+\nu\|}\) (note that higher \(\tau\) results with data points that are closer to a \(k\)-dimensional subspace).

We compare our averaging method to two other approaches: The first one simply applies the Gaussian mechanism directly on \(X=(x_{1},\ldots,x_{n})\) using the entire privacy budget \(\rho\) (i.e., without computing a projection matrix). The second one replaces our Step (a) by computing the projection matrix \(\tilde{\Pi}\) using a \((\rho/2,\delta)\)-zCDP variant of the additive-gap based algorithm of Dwork et al. (2014) (see Appendix B.8.4 for more details). 9 The empirical results are presented in Figure 2. In all experiments, we perform \(30\) repetitions for generating each graph point which represents the trimmed average of values between the \(0.1\) and \(0.9\) quantiles. We show the \(\ell_{2}\) error of our estimate on the \(Y\)-axis. The first graph illustrates the inherent dependency on \(d\) that Dwork et al. (2014)'s algorithm has, while our algorithm \(\mathtt{EstSubspace}\) takes advantage of the closeness of the points to dimension \(k\) in order to eliminate this dependency. The second graph illustrates that when \(d\) is fixed, increasing \(k\) and \(n\) in the same rate a has similar affect on both \(\mathtt{EstSubspace}\) and Dwork et al. (2014)'s algorithm. In the last graph we compare the accuracy of \(\mathtt{EstSubspace}\) and Dwork et al. (2014)'s algorithm as a function of the closeness to a subspace \(k\) (measured in our experiments by the parameter \(\tau\)), and show in what regimes \(\mathtt{EstSubspace}\) outperforms Dwork et al. (2014)'s algorithm.

## 5 Limitations and Future Directions

From a theoretical perspective, our work is the first to provide proper measures for how "easy" a given dataset is which smoothly eliminates the dependency on the dimension \(d\). Yet, closing the gap between our upper and lower bounds is still left open. Specifically, for weak estimator, there is still a gap of \(k^{1.5}\) between Theorems 1.6 and 1.8. For strong estimators, the upper-bound rate \(n=n(\lambda)\) (Theorem 1.7) does not align with the one of the lower bound (Theorem 1.9), and it is left open to relax the restriction on \(\gamma_{\max}\). One possible reason for some of these gaps (especially the dependency in \(k\)) is that our upper bounds follow the approach of Singhal and Steinke (2021) to estimate (under some matrix norm) the projection matrix to the top-\(k\) rows subspace (we do it in Frobenius norm). While estimating the projection matrix itself provides, in particular, a useful solution (Proposition B.16), the opposite direction is not true in general, and it could be possible to reduce the sample complexity by focusing on \(\alpha\)-usefulness (Definition 1.2) directly, or alternatively, providing stronger lower bounds for estimating the projection matrix.

From a more practical standpoint, we empirically demonstrate the advantage of our approach in high-dimension regimes when the data is very close to a low-dimensional structure, which is directly translated to an advantage in private mean estimation of such instances. The downside of our approach is that it requires the points to be very close to a \(k\)-dimensional structure in order to be effective, which might not be sufficient for typical training scenarios in deep learning. It would be intriguing to explore if there is a connection between training parameters (e.g., the network structure) to the phenomena of gradients that are close to a low-dimensional subspace (mentioned in Section 1.1). If we could boost this closeness to regimes where our method achieves high accuracy, we could generate drastically improved private models. On the other hand, if we cannot do it, then our lower bounds indicate that improving DP-SGD via private subspace estimation might not be the right approach, and we should focus on different approaches for this task.

Figure 2: From Left to Right: (1) The case \(k=4\) and \(\tau=10d\), varying \(d\) (the \(X\)-axis is \(\sqrt{d}\)). (2) The case \(d=10^{4}\) and \(\tau=10d\), varying \(k\). (3) The case \(d=10^{4}\) and \(k=4\), varying \(\tau\) (the \(X\)-axis is \(\tau/d\)). In all the experiments, we use \(n=250\cdot k\) data points.

## Acknowledgments and Disclosure of Funding

Work supported by a gift to Georgetown University.

The author would like to thank Edith Cohen and Jonathan Ullman for very useful discussions.

## References

* Abadi et al. [2016a] M. Abadi, A. Chu, I. Goodfellow, H. B. McMahan, I. Mironov, K. Talwar, and L. Zhang. Deep learning with differential privacy. In _Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security_, CCS '16, page 308-318, 2016a.
* Abadi et al. [2016b] M. Abadi, A. Chu, I. Goodfellow, H. B. McMahan, I. Mironov, K. Talwar, and L. Zhang. Deep learning with differential privacy. In _Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security_, CCS '16, page 308-318, 2016b.
* Amin et al. [2019] K. Amin, T. Dick, A. Kulesza, A. Munoz, and S. Vassilvitskii. Differentially private covariance estimation. In _Advances in Neural Information Processing Systems_, volume 32, 2019.
* Arora et al. [2018] R. Arora, V. braverman, and J. Upadhyay. Differentially private robust low-rank approximation. In _Advances in Neural Information Processing Systems_, volume 31. Curran Associates, Inc., 2018.
* Ashtiani and Liaw [2022] H. Ashtiani and C. Liaw. Private and polynomial time algorithms for learning gaussians and beyond. In _Conference on Learning Theory_, volume 178 of _Proceedings of Machine Learning Research_, pages 1075-1076. PMLR, 2022.
* 1385, 2015.
* Bassily et al. [2014] R. Bassily, A. Smith, and A. Thakurta. Private empirical risk minimization: Efficient algorithms and tight error bounds. In _Proceedings of the 2014 IEEE 55th Annual Symposium on Foundations of Computer Science_, FOCS '14, page 464-473, USA, 2014.
* Blocki et al. [2012] J. Blocki, A. Blum, A. Datta, and O. Sheffet. The johnson-lindenstrauss transform itself preserves differential privacy. In _2012 IEEE 53rd Annual Symposium on Foundations of Computer Science_, pages 410-419, 2012.
* Blum et al. [2005] A. Blum, C. Dwork, F. McSherry, and K. Nissim. Practical privacy: The SuLQ framework. In C. Li, editor, _PODS_, pages 128-138. ACM, 2005.
* 14th International Conference, TCC 2016_, volume 9985, pages 635-658, 2016.
* Bun et al. [2014] M. Bun, J. Ullman, and S. P. Vadhan. Fingerprinting codes and the price of approximate differential privacy. In _Symposium on Theory of Computing, STOC 2014_, pages 1-10, 2014.
* 89, 2018.
* Chaudhuri et al. [2012] K. Chaudhuri, A. Sarwate, and K. Sinha. Near-optimal differentially private principal components. In _Advances in Neural Information Processing Systems_, volume 25, 2012.
* Chaudhuri et al. [2013] K. Chaudhuri, A. D. Sarwate, and K. Sinha. A near-optimal algorithm for differentially-private principal components. _Journal of Machine Learning Research_, 14, 2013.
* Demeniconi and Chawla [2020] C. Demeniconi and N. Chawla. Hessian based analysis of sgd for deep nets: Dynamics and generalization. In C. Demeniconi and N. Chawla, editors, _Proceedings of the 2020 SIAM International Conference on Data Mining (SDM)_, 2020.
* Dwork et al. [2006a] C. Dwork, K. Kenthapadi, F. McSherry, I. Mironov, and M. Naor. Our data, ourselves: Privacy via distributed noise generation. In _EUROCRYPT_, volume 4004, pages 486-503, 2006a.
* Dwork et al. [2015]C. Dwork, F. McSherry, K. Nissim, and A. Smith. Calibrating noise to sensitivity in private data analysis. In _TCC_, volume 3876, pages 265-284, 2006b.
* Dwork et al. [2014] C. Dwork, K. Talwar, A. Thakurta, and L. Zhang. Analyze gauss: Optimal bounds for privacy-preserving principal component analysis. In _Proceedings of the 46th Annual ACM Symposium on Theory of Computing_, STOC '14, pages 11-20. ACM, 2014. URL http://kunaltalwar.org/papers/PrivatePCA.pdf.
* Dwork et al. [2015] C. Dwork, A. D. Smith, T. Steinke, J. R. Ullman, and S. P. Vadhan. Robust traceability from trace amounts. In _IEEE 56th Annual Symposium on Foundations of Computer Science, FOCS 2015_, pages 650-669, 2015.
* Feng and Tu [2020] Y. Feng and Y. Tu. How neural networks find generalizable solutions: Self-tuned annealing in deep learning, 2020.
* Golatkar et al. [2022] A. Golatkar, A. Achille, Y. Wang, A. Roth, M. Kearns, and S. Soatto. Mixed differential privacy in computer vision. In _2022 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)_, pages 8366-8376. IEEE Computer Society, 2022.
* Gonem and Gilad-Bachrach [2018] A. Gonem and R. Gilad-Bachrach. Smooth sensitivity based approach for differentially private pca. In _Proceedings of Algorithmic Learning Theory_, volume 83, pages 438-450. PMLR, 2018.
* Gur-Ari et al. [2018] G. Gur-Ari, D. A. Roberts, and E. Dyer. Gradient descent happens in a tiny subspace, 2018.
* Hardt and Price [2014] M. Hardt and E. Price. The noisy power method: A meta algorithm with applications. In _Advances in Neural Information Processing Systems_, volume 27, 2014.
* Hardt and Roth [2012] M. Hardt and A. Roth. Beating randomized response on incoherent matrices. In _Proceedings of the Forty-Fourth Annual ACM Symposium on Theory of Computing_, STOC '12, page 1255-1268, 2012.
* Hardt and Roth [2013] M. Hardt and A. Roth. Beyond worst-case analysis in private singular vector computation. In _Proceedings of the Forty-Fifth Annual ACM Symposium on Theory of Computing_, STOC '13, page 331-340, 2013.
* Kairouz et al. [2020] P. Kairouz, M. Ribero, K. Rush, and A. Thakurta. Dimension independence in unconstrained private ERM via adaptive preconditioning. _CoRR_, abs/2008.06570, 2020.
* Kamath et al. [2022] G. Kamath, A. Mouzakis, V. Singhal, T. Steinke, and J. Ullman. A private and computationally-efficient estimator for unbounded gaussians. In _Proceedings of Thirty Fifth Conference on Learning Theory_, volume 178, pages 544-572. PMLR, 02-05 Jul 2022.
* Kapralov and Talwar [2013] M. Kapralov and K. Talwar. On differentially private low rank approximation. In _Proceedings of the twenty-fourth annual ACM-SIAM symposium on Discrete algorithms_, pages 1395-1414, 2013.
* Karwa and Vadhan [2018] V. Karwa and S. Vadhan. Finite sample differentially private confidence intervals. In _9th Innovations in Theoretical Computer Science Conference (ITCS 2018)_, 2018.
* Kothari et al. [2022] P. Kothari, P. Manurangsi, and A. Velingker. Private robust estimation by stabilizing convex relaxations. In _Conference on Learning Theory_, volume 178 of _Proceedings of Machine Learning Research_, pages 723-777. PMLR, 2022.
* Li et al. [2018a] C. Li, H. Farkhoor, R. Liu, and J. Yosinski. Measuring the intrinsic dimension of objective landscapes. _CoRR_, abs/1804.08838, 2018a.
* Li et al. [2018b] H. Li, Z. Xu, G. Taylor, C. Studer, and T. Goldstein. Visualizing the loss landscape of neural nets. In _Advances in Neural Information Processing Systems_, volume 31. Curran Associates, Inc., 2018b.
* Li et al. [2022] X. Li, D. Liu, T. Hashimoto, H. A. Inan, J. Kulkarni, Y. Lee, and A. G. Thakurta. When does differentially private learning not suffer in high dimensions? In _Advances in Neural Information Processing Systems_, 2022.
* Mahoney [2011] M. W. Mahoney. Randomized algorithms for matrices and data. _Found. Trends Mach. Learn._, 3(2):123-224, 2011.
* Ma et al. [2018]F. McSherry and I. Mironov. Differentially private recommender systems: building privacy into the net. In _Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining_, KDD '09, pages 627-636, New York, NY, USA, 2009. ACM.
* McSherry and Talwar (2007) F. McSherry and K. Talwar. Mechanism design via differential privacy. In _FOCS_, pages 94-103. IEEE Computer Society, 2007.
* Montgomery-Smith (1990) S. J. Montgomery-Smith. The distribution of rademacher sums. _Proceedings of the American Mathematical Society_, 109(2):517-522, 1990.
* Nissim et al. (2007) K. Nissim, S. Raskhodnikova, and A. Smith. Smooth sensitivity and sampling in private data analysis. In _STOC_, pages 75-84. ACM, 2007.
* Peter et al. (2024) N. Peter, E. Tsfadia, and J. R. Ullman. Smooth lower bounds for differentially private algorithms via padding-and-permuting fingerprinting codes. In _The Thirty Seventh Annual Conference on Learning Theory, COLT 2024_, volume 247, pages 4207-4239, 2024.
* Renyi (1961) A. Renyi. On measures of entropy and information. In _Proceedings of the Fourth Berkeley Symposium on Mathematical Statistics and Probability, Volume 1: Contributions to the Theory of Statistics_, page 547-561, 1961.
* Scala (2009) M. Scala. Hypergeometric tail inequalities: ending the insanity. _arXiv preprint arXiv:1311.5939_, 2009.
* Sheffet (2019) O. Sheffet. Old techniques in differentially private linear regression. In _Proceedings of the 30th International Conference on Algorithmic Learning Theory_, volume 98 of _Proceedings of Machine Learning Research_, pages 789-827. PMLR, 2019.
* Singhal and Steinke (2021) V. Singhal and T. Steinke. Privately learning subspaces. _Advances in Neural Information Processing Systems_, 34, 2021. URL https://arxiv.org/abs/2106.00001.
* Song et al. (2013) S. Song, K. Chaudhuri, and A. D. Sarwate. Stochastic gradient descent with differentially private updates. In _2013 IEEE Global Conference on Signal and Information Processing_, pages 245-248, 2013.
* Steinke and Ullman (2017) T. Steinke and J. R. Ullman. Subgaussian tail bounds via stability arguments. _CoRR_, abs/1701.03493, 2017.
* Tardos (2008) G. Tardos. Optimal probabilistic fingerprint codes. _J. ACM_, 55(2), 2008.
* Tsfadia et al. (2022) E. Tsfadia, E. Cohen, H. Kaplan, Y. Mansour, and U. Stemmer. Friendlycore: Practical differentially private aggregation. In _International Conference on Machine Learning, ICML 2022_, volume 162 of _Proceedings of Machine Learning Research_, pages 21828-21863. PMLR, 2022.
* Vershynin (2018) R. Vershynin. _High-Dimensional Probability: An Introduction with Applications in Data Science_. Cambridge Series in Statistical and Probabilistic Mathematics. Cambridge University Press, 2018.
* Wei et al. (2016) L. Wei, A. D. Sarwate, J. Corander, A. Hero, and V. Tarokh. Analysis of a privacy-preserving pca algorithm using random matrix theory. In _2016 IEEE Global Conference on Signal and Information Processing (GlobalSIP)_, pages 1335-1339, 2016.
* Yu et al. (2021) D. Yu, H. Zhang, W. Chen, and T.-Y. Liu. Do not let privacy overbill utility: Gradient embedding perturbation for private learning. In _International Conference on Learning Representations_, 2021.
* Zhou et al. (2021) Y. Zhou, S. Wu, and A. Banerjee. Bypassing the ambient dimension: Private {sgd} with gradient subspace identification. In _International Conference on Learning Representations_, 2021.

Additional Related Work

A closely related line of work is on Private PCA. Dwork et al. (2014) consider the simple algorithm that adds independent Gaussian noise to each entry of the covariance matrix \(A=\sum_{i=1}^{n}x_{i}^{T}x_{i}\in\mathbb{R}^{d\times d}\), and then performs analysis on the noisy matrix. This method, predating the development of differential privacy Blum et al. (2005), was later analyzed under differential privacy by McSherry and Mironov (2009) and Chaudhuri et al. (2013). This simple algorithm is versatile and several bounds are provided for the accuracy of the noisy PCA. The downside of this is that a polynomial dependence on the ambient dimension \(d\) is inherent for any instances (including "easy" ones). While this approach has a variant that improves the accuracy of estimating the top-\(k\) subspace as a function of the additive gap \(\sigma_{k}^{2}-\sigma_{k+1}^{2}\) (Appendix B.8.4), it does not prevent the polynomial dependency on the dimension \(d\) even for very easy instances.

Techniques from dimensionality reduction have been applied by Hardt and Roth (2012) and Arora et al. (2018) to privately compute a low-rank approximation to the input matrix \(X\). Similarly, Hardt and Roth (2013) and Hardt and Price (2014) utilize the power iteration method with noise injected at each step to compute low-rank approximations to \(X\). Despite their effectiveness, these methods, relying on noise addition, require sample complexity to grow polynomially with the ambient dimension to achieve meaningful guarantees.

Another approach, employed by Blocki et al. (2012) and Sheffet (2019), involves approximating the covariance matrix \(A\) using dimensionality reduction. They show that the dimensionality reduction step itself provides a privacy guarantee (whereas the aforementioned results did not exploit this and relied on noise added at a later stage).

Chaudhuri et al. (2012), Kapralov and Talwar (2013), Wei et al. (2016) apply variants of the exponential mechanism McSherry and Talwar (2007) to privately select a low-rank approximation to the covariance matrix \(A\). This method is nontrivial to implement and analyse, but it ultimately requires the sample complexity to grow polynomially in the ambient dimension.

Gonem and Gilad-Bachrach (2018) exploit smooth sensitivity Nissim et al. (2007) to release a lowrank approximation to the matrix \(A\). This allows adding less noise than worst case sensitivity, under an eigenvalue gap assumption. However, the sample complexity \(n\) is polynomial in the dimension \(d\).

Another related area involves estimating the parameters of unbounded Gaussians Kamath et al. (2022), Ashtiani and Liaw (2022), Kothari et al. (2022), Tsfadia et al. (2022). Notably, Kamath et al. (2022) used the subspace learning algorithm of Singhal and Steinke (2021) to efficiently learn the covariance matrix.

A recent popular trend in DP learning is to utilize a few _public_ examples to enhance accuracy. This has led to methods for private ML which project the sensitive gradients onto a subspace estimated from the public gradients. By using a small amount of i.i.d. public data, Zhou et al. (2021) demonstrate that this approach can improve the accuracy of differentially private stochastic gradient descent in high-privacy regimes and achieve a dimension-independent error rate. Similarly, Yu et al. (2021) proposed GEP, a method that utilizes public data to identify the most useful information carried by gradients, and then splits and clips them separately. These works underscore the importance of identifying the subspace of gradients in private ML.

## Appendix B Preliminaries

### Notations

We use calligraphic letters to denote sets and distributions, uppercase for matrices and datasets, boldface for random variables, and lowercase for vectors, values and functions. For \(n\in\mathbb{N}\), let \([n]=\{1,2,\ldots,n\}\). Throughout this paper, we use \(i\in[n]\) as a row index, and \(j\in[d]\) as a column index (unless otherwise mentioned).

For a matrix \(X=(x_{i}^{j})_{i\in[n],j\in[d]}\), we denote by \(x_{i}\) the \(i^{\mathrm{th}}\) row of \(X\) and by \(x^{j}\) the \(j^{\mathrm{th}}\) column of \(X\). A column vector \(x\in\mathbb{R}^{n}\) is written as \((x_{1},\ldots,x_{n})\) or \(x=x_{1\ldots n}\), and a row vector \(y\in\mathbb{R}^{d}\) is written as \((y^{1},\ldots,y^{d})\) or \(y^{1\ldots d}\). In this work we consider mechanisms who receive an \(n\times d\) matrix \(X\) as input, which is treated as the dataset \(X=(x_{1},\ldots,x_{n})\) where the rows of \(X\) are the elements (and therefore, we sometimes write \(X\in(\mathbb{R}^{d})^{n}\) instead of \(X\in\mathbb{R}^{n\times d}\) to emphasize it).

For a vector \(x\in\mathbb{R}^{d}\) we define \(\left\lVert x\right\rVert_{2}=\sqrt{\sum_{i=1}^{n}x_{i}^{2}}\) (the \(\ell_{2}\) norm of \(x\)), and for a subset \(\mathcal{S}\subseteq[d]\) we define \(x_{\mathcal{S}}=(x_{i})_{i\in\mathcal{S}}\), and in case \(x\) is a row vector we write \(x^{\mathcal{S}}\). Given two vectors \(x=(x_{1},\ldots,x_{n}),y=(y_{1},\ldots,y_{n})\), we define \(\left\langle x,y\right\rangle=\sum_{i=1}^{n}x_{i}y_{i}\) (the inner-product of \(x\) and \(y\)). We denote by \(\mathcal{S}_{d}\) the set of \(d\)-dimensional unit vectors, that is, \(\mathcal{S}_{d}=\left\{v\in\mathbb{R}^{d}\colon\left\lVert v\right\rVert_{2}=1\right\}\). For a matrix \(X=(x_{i}^{j})_{i\in[n],j\in[d]}\) we let \(\left\lVert X\right\rVert=\max_{v\in\mathcal{S}_{d}}\left\lVert Xv\right\rVert _{2}\) (the _spectral norm_ of \(X\)) and let \(\left\lVert X\right\rVert_{F}=\sqrt{\sum_{i\in[n],j\in[d]}(x_{i}^{j})^{2}}\) (the Forbenius norm of \(X\)). For a matrix \(X=(x_{i}^{j})_{i\in[n],j\in[d]}\in\left\{-1,1\right\}^{n\times d}\) and \(b\in\left\{-1,1\right\}\), we define the \(b\)-marked columns of \(X\) as the subset \(\mathcal{J}_{X}^{b}\subseteq[d]\) defined by \(\mathcal{J}_{X}^{b}=\left\{j\in[d]\colon x_{i}^{j}=b\text{ for all }i\in[n]\right\}\).

For \(d\in\mathbb{N}\) we denote by \(\mathcal{P}_{d}\) the set of all \(d\times d\) permutation matrices. For a permutation matrix \(P\in\mathcal{P}_{d}\) and \(i\in[d]\) we denote by \(P(i)\) the index \(j\in[d]\) for which \(e_{i}P=e_{j}\) (where \(e_{i}\) and \(e_{j}\) are the corresponding one-hot row vectors), and for \(\mathcal{I}\subseteq[d]\) we denote \(P(\mathcal{I})=\left\{P(i)\colon i\in\mathcal{I}\right\}\).

For \(d,k\in\mathbb{N}\) we denote by \(\mathcal{W}_{d,k}\) the set of all \(d\times d\) projection matrices of rank \(k\). For a matrix \(A\in\mathbb{R}^{n\times d}\) we denote by \(Span(A)\) the columns subspace of \(A\) (and therefore the rows subspace of \(A\) is \(Span(A^{T})\)).

For \(z\in\mathbb{R}\), we define \(\text{sign}(z):=\begin{cases}1&z\geq 0\\ -1&z<0\end{cases}\) and for \(v=(v^{1},\ldots,v^{d})\in\mathbb{R}^{d}\) we define \(\text{sign}(v):=(\text{sign}\big{(}v^{1}\big{)},\ldots,\text{sign}\big{(}v^{d} \big{)})\in\{-1,1\}^{d}\).

### Distributions and Random Variables

Given a distribution \(\mathcal{D}\), we write \(x\sim\mathcal{D}\) to denote that \(x\) is sampled according to \(\mathcal{D}\). For a set \(\mathcal{S}\), we write \(x\leftarrow\mathcal{S}\) to denote that \(x\) is sampled from the uniform distribution over \(\mathcal{S}\).

### Singular Value Decomposition (SVD)

For a matrix \(X\in\mathbb{R}^{n\times d}\), the singular value decomposition of \(X\) is defined by \(X=U\Sigma V^{T}\), where \(U\in\mathbb{R}^{n\times n}\) and \(V\in\mathbb{R}^{d\times d}\) are unitary matrices. The matrix \(\Sigma\in\mathbb{R}^{n\times d}\) is a diagonal matrix with non-negative entries \(\sigma_{1}\geq\ldots\geq\sigma_{\min\{n,d\}}\geq 0\) along the diagonal, called the singular values of \(X\). The SVD of \(X\) can also be written in the form \(X=\sum_{i=1}^{\min\{n,d\}}\sigma_{i}u_{i}v_{i}^{T}\), where \(u_{i}\) and \(v_{i}\) are the \(i^{\text{th}}\) columns of \(U\) and \(V\) (respectively). It holds that \(\left\lVert X\right\rVert_{F}^{2}=\sum_{i}\sigma_{i}^{2}\) and \(\left\lVert X\right\rVert=\sigma_{1}\). We define the top-\(k\) rows subspace of \(X\) as the subspace spawned by the first \(k\) columns of \(V\).

**Fact B.1** (Min-Max principle for singular values).: _For every matrix \(X\in\mathbb{R}^{n\times d}\) and \(i\in[\min\{n,d\}]\) it holds that_

### Concentration Bounds

**Fact B.2** (Montgomery-Smith [1990]).: _Let \(\mathbf{x}=(\mathbf{x}_{1},\ldots,\mathbf{x}_{n})\) where the \(\mathbf{x}_{i}\)'s are i.i.d. random variables with \(\Pr[\mathbf{x}_{i}=1]=\Pr[\mathbf{x}_{i}=-1]=1/2\), and let \(v\in\mathbb{R}^{n}\). Then_

\[\forall t\geq 0:\quad\Pr[\left\lvert\left\lvert\mathbf{x},v\right\rvert >t\cdot\left\lVert v\right\rVert_{2}]\leq 2\exp(-t^{2}/2).\]

**Fact B.3** (Bernstein's Inequality for sampling without replacement (Bardenet and Maillard [2015], Proposition 1.4)).: _Let \(\mathbf{x}_{1},\ldots,\mathbf{x}_{m}\) be a random sample drawn without replacement from \(\{w_{1},\ldots,w_{n}\}\) for \(n\geq m\). Let \(a=\min_{i\in[n]}w_{i}\), \(b=\max_{i\in[n]}w_{i}\), \(\mu=\frac{1}{n}\sum_{i=1}^{n}w_{i}\) and \(\sigma^{2}=\frac{1}{n}\sum_{i=1}^{n}(w_{i}-\mu)^{2}\). Then for every \(t\geq 0\),_

\[\Pr\Biggl{[}\left\lvert\sum_{i=1}^{m}\mathbf{x}_{i}-m\cdot\mu\right\rvert\geq t \Biggr{]}\leq 2\cdot\exp\biggl{(}-\frac{t^{2}}{m\sigma^{2}+(b-a)t/3}\biggr{)}.\]

The following proposition is used for proving Lemma 2.1.

**Proposition B.4**.: _Let \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\) with singular values \(\sigma_{1}\geq\ldots\geq\sigma_{\min\{n,d\}}\geq 0\). Let \(\mathbf{X}^{\prime}=(\mathbf{x}^{\prime}_{1},\ldots,\mathbf{x}^{\prime}_{m})\) be the random matrix that is generated by taking a uniformly random \(m\)-size subset of the rows of \(X\). Let \(v\in\mathcal{S}_{d}\) and \(a^{2}=\left\|Xv\right\|_{2}^{2}=\sum_{i=1}^{n}\langle x_{i},v\rangle^{2}\). Assuming that \(m\geq\frac{2n\ln(1/\beta)}{9a^{2}}\), it holds that_

\[\Pr\biggl{[}\left\|\left\|\mathbf{X}^{\prime}v\right\|_{2}^{2}- \frac{m}{n}a^{2}\right\|\geq\sqrt{2\frac{m}{n}a^{2}\ln(1/\beta)}\biggr{]}\leq 2\beta.\]

Proof.: The random variable \(\left\|\mathbf{X}^{\prime}v\right\|_{2}^{2}\) is distributed as the sum of a uniformly random \(m\)-size subset of \((\langle x_{1},v\rangle^{2},\ldots,\langle x_{n},v\rangle^{2})\) (each element is bounded in \([0,1]\)). In the notations of Fact B.3, it holds that \(\mu=\frac{1}{n}\sum_{i=1}^{n}\langle x_{i},v\rangle^{2}=a^{2}/n\), and

\[\sigma^{2} =\frac{1}{n}\sum_{i=1}^{n}(\langle x_{i},v\rangle^{2}-a^{2}/n)^{2}\] \[=\frac{1}{n}\sum_{i=1}^{n}(\langle x_{i},v\rangle^{4}-2\langle x _{i},v\rangle^{2}a^{2}/n+a^{4}/n^{2})\] \[=\frac{1}{n}\sum_{i=1}^{n}\langle x_{i},v\rangle^{4}-a^{4}/n^{2}\] \[\leq\frac{1}{n}\sum_{i=1}^{n}\langle x_{i},v\rangle^{2}=a^{2}/n,\]

where the last inequality holds since \(\langle x_{i},v\rangle^{2}\leq 1\).

Let \(t=\sqrt{2\frac{m}{n}a^{2}\ln(1/\beta)}\). By Fact B.3,

\[\Pr\biggl{[}\left\|\left\|\mathbf{X}^{\prime}v\right\|_{2}^{2}- \frac{m}{n}a^{2}\right\|\geq t\biggr{]} \leq 2\cdot\exp\biggl{(}-\frac{t^{2}}{\frac{m}{n}a^{2}+t/3} \biggr{)}\] \[=2\cdot\exp\biggl{(}-\frac{2\frac{m}{n}a^{2}\ln(1/\beta)}{\frac{ m}{n}a^{2}+\sqrt{2\frac{m}{n}a^{2}\ln(1/\beta)}/3}\biggr{)}\] \[\leq 2\cdot\exp\biggl{(}-\frac{2\frac{m}{n}a^{2}\ln(1/\beta)}{2 \frac{m}{n}a^{2}}\biggr{)}\] \[\leq 2\beta,\]

where the penultimate inequality holds by the assumption on \(m\). 

#### b.4.1 Hypergeometric Distributions

**Definition B.5**.: _For \(n\in\mathbb{N}\), \(m\in[n]\) and \(w\in\{-n,\ldots,n\}\), define the Hypergeometric probability distribution \(\mathcal{HG}_{n,m,w}\) as the output of the following process: Take a vector \(v\in\{-1,1\}^{n}\) with \(\sum_{i=1}^{n}v_{i}=w\), choose a uniformly random subset \(\mathcal{I}\subseteq[n]\) of size \(m\), and output \(\sum_{i\in\mathcal{I}}v_{i}\)._

**Fact B.6**Scala (2009), Equations 10 and 14.: _If \(\mathbf{x}\sim\mathcal{HG}_{n,m,w}\) then_

\[\forall t\geq 0:\quad\Pr[\left\|\mathbf{x}-\mu\right\|\geq t]\leq e^{- \frac{t^{2}}{2\ell}},\]

_where \(\mu=\mathrm{E}[\mathbf{x}]=\frac{m\cdot w}{n}\)._

#### b.4.2 Sub-Exponential Distributions

**Definition B.7** (Sub-Exponential Random Variable and Norm).: _We say that a random variable \(\mathbf{x}\in\mathbb{R}\) is sub-exponential if there exists \(t>0\) such that \(\mathrm{E}\bigl{[}e^{\left|\mathbf{x}\right|/t}\bigr{]}\leq 2\). The sub-exponential norm of \(\mathbf{x}\), denoted \(\left\|\mathbf{x}\right\|_{\psi_{1}}\), is_

\[\left\|\mathbf{x}\right\|_{\psi_{1}}=\inf\{t>0\colon\mathrm{E}\Bigl{[}e^{\left| \mathbf{x}\right|/t}\Bigr{]}\leq 2\}.\]

**Fact B.8**Bernstein's inequality (Theorem 2.8.1 in Vershynin (2018)).: _Let \(\mathbf{x}_{1},\ldots,\mathbf{x}_{n}\) be independent, mean zero, sub-exponential random variables. Then_

\[\forall t\geq 0:\quad\Pr\Biggl{[}\left|\sum_{i=1}^{n}\mathbf{x}_{i} \right|\geq t\Biggr{]}\leq 2\exp\biggl{(}-\Omega\Biggl{(}\min\Biggl{(}\frac{t^{2}}{ \sum_{i=1}^{n}\left\|\mathbf{x}_{i}\right\|_{\psi_{1}}^{2}},\;\frac{t}{\max_ {i}\left\|\mathbf{x}_{i}\right\|_{\psi_{1}}}\Biggr{)}\Biggr{)}\Biggr{)}.\]

### Nets

**Definition B.9** (\(\gamma\)-Net).: _Let \(\mathcal{T}\) be a subspace of \(\mathbb{R}^{d}\). Consider a subset \(\mathcal{K}\subset T\) and let \(\gamma>0\). A subset \(\mathcal{N}\subseteq\mathcal{K}\) is called an \(\gamma\)-net of \(\mathcal{K}\) if every point in \(\mathcal{K}\) is within distance \(\gamma\) of some point of \(\mathcal{N}\), i.e.,_

\[\forall x\in\mathcal{K}\,\exists y\in\mathcal{N}\,:\,\left\|x-y \right\|_{2}\leq\gamma\]

**Fact B.10** (Extension of Corollary 4.2.13 in Vershynin [2018]).: _If \(E\) is a subspace with \(\dim(E)=k\), then there exists an \(\gamma\)-net of size \((3/\gamma)^{k}\) to the unit sphere in \(E\) (i.e., to \(E\cap\mathcal{S}_{d}\))._

### Projections

Recall that \(\mathcal{W}_{d,k}\) denotes the set of all \(d\times d\) rank-\(k\) projection matrices. For a matrix \(A\in\mathbb{R}^{d}\), we denote that \(\Pi_{A}\) the projection matrix onto the subspace spawned by the columns of \(A\) (in case \(A\) is a unitary matrix, \(\Pi_{A}=AA^{T}\)).

**Fact B.11** (Theorem 1 and Lemma 1 in Cai and Zhang [2018]).: _Let \(X,Y,Z\in\mathbb{R}^{n\times d}\) such that \(X=Y+Z\). Let \([U\ U_{\perp}]\Sigma[V\ V_{\perp}]^{T}\) be the SVD of \(Y\), and let \([\widehat{U}\ \widehat{U}_{\perp}]\widehat{\Sigma}[\widehat{V}\ \widehat{V}_{\perp}]^{T}\) be the SVD of \(X\), where \(U,V,\widehat{U},\widehat{V}\) denote the first \(k\) columns of \([U\ U_{\perp}],[V\ V_{\perp}],[\widehat{U}\ \widehat{U}_{\perp}],[\widehat{V}\ \widehat{V}_{\perp}]\) (respectively). Let \(Z_{12}=\Pi_{U}Z\Pi_{V_{\perp}}\) and \(Z_{21}=\Pi_{U_{\perp}}Z\Pi_{V}\). In addition, let \(z_{ij}=\left\|Z_{ij}\right\|\), let \(\alpha=\sigma_{\min}(U^{T}XV)\) (i.e., the smallest singular value larger than \(0\)), and \(\beta=\left\|U_{\perp}^{T}XV_{\perp}\right\|\). If \(\alpha^{2}>\beta^{2}+\min\{z_{12}^{2},z_{21}^{2}\}\), then_

\[\left\|\Pi_{V}-\Pi_{\widehat{V}}\right\|\leq 2\cdot\frac{\alpha z_{12}+ \beta z_{21}}{\alpha^{2}-\beta^{2}-\min\{z_{12}^{2},z_{21}^{2}\}}\]

_and_

\[\left\|\Pi_{V}-\Pi_{\widehat{V}}\right\|_{F}\leq\sqrt{2}\cdot \frac{\alpha\|Z_{12}\|_{F}+\beta\|Z_{21}\|_{F}}{\alpha^{2}-\beta^{2}-\min\{z_{ 12}^{2},z_{21}^{2}\}}.\]

**Proposition B.12**.: _Let \(X,Y,Z,V,\widehat{V}\) as in Fact B.11 such that \(Y\) has rank-\(k\) and \(Span(Y^{T})\) is orthogonal to \(Span(Z^{T})\). If \(\sigma_{k}(Y)^{2}\geq 2\left\|Z\right\|^{2}\), then_

1. \(\left\|\Pi_{V}-\Pi_{\widehat{V}}\right\|\leq 4\cdot\frac{\left\|Z\right\|}{ \sigma_{k}(Y)}\)_, and_
2. \(\left\|\Pi_{V}-\Pi_{\widehat{V}}\right\|_{F}\leq 2\sqrt{2}\cdot\frac{\left\|Z \right\|_{F}}{\sigma_{k}(Y)}\)_._

Proof.: Note that \(Span(V)=Span(Y^{T})\). Therefore \(ZV=0\), which implies that \(Z_{21}=\Pi_{U_{\perp}}Z\Pi_{V}=0\). Compute

\[\alpha =\sigma_{\min}(U^{T}XV)\] \[=\sigma_{\min}(U^{T}YV+U^{T}\mathop{\not\not\leq}_{0}\limits^{ \mathcal{Z}V})\] \[=\sigma_{k}(Y).\]

\[\beta =\left\|U_{\perp}^{T}XV_{\perp}\right\|\] \[=\left\|U_{\perp}^{T}\underbrace{YV_{\perp}}_{0}\!+\!U_{\perp}^{ T}ZV_{\perp}\right\|\] \[\leq\left\|U_{\perp}\right\|\cdot\left\|Z\right\|\cdot\left\|V_{ \perp}\right\|\] \[\leq\left\|Z\right\|.\]

\[\left\|Z_{12}\right\|=\left\|\Pi_{U}\cdot Z\cdot\Pi_{V_{\perp}} \right\|\leq\left\|Z\right\|,\]

\[\left\|Z_{12}\right\|_{F}\leq\left\|\Pi_{U}\cdot Z\cdot\Pi_{V_{ \perp}}\right\|_{F}\leq\left\|Z\right\|_{F},\]

where the last inequalities in the above two equations hold since for any matrix \(A\) and projection matrices \(\Pi_{1},\Pi_{2}\) it holds that \(\left\|\Pi_{1}A\Pi_{2}\right\|\leq\left\|A\right\|\) and \(\left\|\Pi_{1}A\Pi_{2}\right\|_{F}\leq\left\|A\right\|_{F}\). The proof now immediately follows by applying Fact B.11.

**Proposition B.13**.: _Let \(P\in\mathbb{R}^{n\times d}\) be a rank-\(k\) matrix and let \(P^{\prime}\in\mathbb{R}^{n\times d}\) such that \(\left\|P-P^{\prime}\right\|_{F}\leq\alpha\). Let \(\Pi\) be the projection matrix onto \(Span(P^{T})\), and let \(\Pi^{\prime}\) be the projection onto the top-\(k\) rows subspace of \(P^{\prime}\). If \(\sigma_{k}(P)\geq 2\alpha\), then_

\[\left\|\Pi-\Pi^{\prime}\right\|_{F}\leq 2\sqrt{2}\cdot\frac{\alpha}{\sigma_{k}(P)- \alpha}.\]

Proof.: Let \(E=P^{\prime}-P\), and divide \(E\) into \(E=E_{P}+E_{\bar{P}}\) where the rows of \(E_{P}\) belong to the rows subspace of \(P\) and the rows of \(E_{\bar{P}}\) are orthogonal to it. Let \(Y=P+E_{P}\), so we can write \(P^{\prime}=Y+E_{P}\). Note that \(\left\|E_{P}\right\|_{F}\leq\alpha\), and \(\sigma_{k}(Y)\geq\sigma_{k}(P)-\left\|E_{P}\right\|\geq\sigma_{k}(P)-\alpha\). The proof now follows by applying Proposition B.12(2) on \(P^{\prime},Y,E_{\bar{P}}\). 

**Fact B.14** (Implied by Corollary 4.6 in Singhal and Steinke (2021)).: _Let \(\Pi,\Pi_{1},\ldots,\Pi_{t}\in\mathcal{W}_{d,k}\) s.t. for all \(j\in[t]\), \(\left\|\Pi-\Pi_{j}\right\|\leq\alpha\). Let \(\mathbf{p}_{1},\ldots,\mathbf{p}_{q}\) be i.i.d. random vectors in \(\mathbb{R}^{d}\) from \(\mathcal{N}(\vec{0},\mathbb{I}_{d\times d})\). Then_

\[\Pr\left[\forall i\in[q],j\in[t],\;\left\|(\Pi-\Pi_{j})p_{i}\right\|_{2}\leq O \Big{(}\alpha\Big{(}\sqrt{k}+\sqrt{\ln(qt)}\Big{)}\Big{)}\right]\geq 0.95.\]

**Fact B.15** (Implied by the proof of Lemma 4.9 in Singhal and Steinke (2021)).: _Let \(\Pi\in\mathcal{W}_{d,k}\) and let \(\mathbf{p}_{1},\ldots,\mathbf{p}_{q}\) be i.i.d. random vectors in \(\mathbb{R}^{d}\) from \(\mathcal{N}(\vec{0},I_{d\times d})\). Let \(\mathbf{P}\) be the \(d\times q\) matrix whose columns are \(\mathrm{I}\mathrm{I}\mathrm{p}_{1},\ldots,\mathrm{I}\mathrm{p}_{q}\). If \(q\geq c\cdot k\) for some large enough constant \(c\), then w.p. \(0.95\) it hold that \(\sigma_{k}(\mathbf{P})\geq\Omega(\sqrt{k})\) (and in particular, \(Span(\mathbf{P})=Span(\Pi)\))._

**Proposition B.16**.: _For any \(\Pi,\widetilde{\Pi}\in\mathcal{W}_{d,k}\) and \(X\in(\mathcal{S}_{d})^{n}\), it holds that_

\[\left\|\Pi\cdot X^{T}\right\|_{F}^{2}-\left\|\widetilde{\Pi}\cdot X^{T}\right\| _{F}^{2}\leq 2n\cdot\left\|\Pi-\widetilde{\Pi}\right\|_{F}.\]

Proof.: Compute

\[\left\|\Pi X^{T}\right\|_{F}^{2}-\left\|\widetilde{\Pi}X^{T} \right\|_{F}^{2} =(\left\|\Pi X^{T}\right\|_{F}-\left\|\widetilde{\Pi}X^{T}\right\| _{F})\cdot(\left\|\Pi X^{T}\right\|_{F}+\left\|\widetilde{\Pi}X^{T}\right\|_{F})\] \[\leq(\left\|\Pi X^{T}\right\|_{F}-\left\|\widetilde{\Pi}X^{T} \right\|_{F})\cdot 2\sqrt{n}\] \[\leq\left\|(\Pi-\widetilde{\Pi})X^{T}\right\|_{F}\cdot 2\sqrt{n}\] \[\leq\left\|\Pi-\widetilde{\Pi}\right\|_{F}\cdot\left\|X^{T} \right\|_{F}\cdot 2\sqrt{n}\] \[=2n\cdot\left\|\Pi-\widetilde{\Pi}\right\|_{F}.\]

**Proposition B.17**.: _Let \(v_{1},\ldots,v_{k}\in\mathcal{S}_{d}\) with \(\max_{i,j}\lvert\langle v_{i},v_{j}\rangle\rvert\leq\alpha\leq\frac{1}{20}\). Let \(u_{1},\ldots,u_{k}\) be the result of the Gram-Schmidt process applied on \(v_{1},\ldots,v_{k}\). Then for every \(i\in[k]\), there exists \(\lambda_{i-1}\in\mathbb{R}\) with \(\lvert\lambda_{i-1}\rvert\leq\alpha(1+4\alpha)\) and \(w_{i}\in\mathbb{R}^{d}\) with \(\lVert w_{i}\rVert_{2}\leq 2\alpha^{2}\) such that_

\[u_{i}=v_{i}+\lambda_{i-1}v_{i-1}+w_{i}.\]

Proof.: We prove it by induction on \(i\). The case \(i=1\) holds since \(u_{1}=v_{1}\). Assume it holds for \(i\), and we prove it for \(i+1\). Define \(\lambda_{i}=-\langle u_{i},v_{i+1}\rangle\) and \(w_{i+1}=\lambda_{i}(\lambda_{i-1}v_{i-1}+w_{i})\). Note that

\[\lvert\lambda_{i}\rvert =\lvert\langle v_{i}+\lambda_{i-1}v_{i-1}+w,\;v_{i+1}\rangle\rvert\] \[=\lvert\langle v_{i},v_{i+1}\rangle+\lambda_{i-1}\langle v_{i-1}, v_{i+1}\rangle+\langle w,v_{i+1}\rangle\rvert\] \[\leq\alpha+\lvert\lambda_{i-1}\rvert\alpha+\lVert w\rVert_{2}\] \[\leq\alpha+\alpha^{2}(1+4\alpha)+2\alpha^{2}\] \[\leq\alpha(1+4\alpha),\]

and that \(\left\|w\right\|_{2}\leq\alpha^{2}(1+4\alpha)^{2}+2\alpha^{3}\leq 2\alpha^{2}\) (recall that \(\alpha\leq\frac{1}{20}\)). The proof now follows since

\[u_{i+1} =v_{i+1}-\langle u_{i},v_{i+1}\rangle u_{i}\] \[=v_{i+1}+\lambda_{i}(v_{i}+\lambda_{i-1}v_{i-1}+w_{i})\] \[=v_{i+1}+\lambda_{i}v_{i}+w_{i+1}.\]

### Algorithms

Let \(\mathsf{M}\) be a randomized algorithm that uses \(m\) random coins. For \(r\in\{0,1\}^{m}\) we denote by \(\mathsf{M}_{r}\) the (deterministic) algorithm \(\mathsf{M}\) after fixing its random coins to \(r\). Given an oracle-aided algorithm \(\mathsf{A}\) and algorithm \(\mathsf{B}\), we denote by \(\mathsf{A}^{\mathsf{B}}\) the algorithm \(\mathsf{A}\) with oracle access to \(\mathsf{B}\).

### Differential Privacy

**Definition B.18** (Differential privacy (Dwork et al., 2006, 2006)).: _A randomized mechanism \(\mathsf{M}\colon\mathcal{X}^{n}\to\mathcal{Y}\) is \((\varepsilon,\delta)\)-differentially private (in short, \((\varepsilon,\delta)\)-DP) if for every neighboring databases \(X=(x_{1},\ldots,x_{n}),\;X^{\prime}=(x^{\prime}_{1},\ldots,x^{\prime}_{n})\in \mathcal{X}^{n}\) (i.e., differ by exactly one entry), and every set of outputs \(\mathcal{T}\subseteq\mathcal{Y}\), it holds that_

\[\Pr[\mathsf{M}(X)\in\mathcal{T}]\leq e^{\varepsilon}\cdot\Pr[ \mathsf{M}(X^{\prime})\in\mathcal{T}]+\delta\]

#### b.8.1 Basic Facts

**Fact B.19** (Post-Processing).: _If \(\mathsf{M}\colon\mathcal{X}^{n}\to\mathcal{Y}\) is \((\varepsilon,\delta)\)-DP then for every randomized \(\mathsf{F}\colon\mathcal{Y}\to\mathcal{Z}\), the mechanism \(\mathsf{F}\circ\mathsf{M}\colon\mathcal{X}^{n}\to\mathcal{Z}\) is \((\varepsilon,\delta)\)-DP._

Post-processing holds when applying the function on the output of the DP mechanism. In this work we sometimes need to apply the mechanism on the output of a function. While this process does not preserve DP in general, it does so assuming the function is _neighboring-preserving_.

**Definition B.20** (Neighboring-Preserving Algorithm).: _We say that a randomized algorithm \(\mathsf{G}\colon\mathcal{X}^{n}\to\mathcal{Y}^{m}\) is neighboring-preserving if for every neighboring \(X,X^{\prime}\in\mathcal{X}^{n}\), the outputs \(\mathsf{G}(X),\mathsf{G}(X^{\prime})\in\mathcal{Y}^{m}\) are neighboring w.p. \(1\)._

**Fact B.21**.: _If \(\mathsf{G}\colon\mathcal{X}^{n}\to\mathcal{Y}^{m}\) is neighboring-preserving and \(\mathsf{M}\colon\mathcal{Y}^{m}\to\mathcal{Z}\) is \((\varepsilon,\delta)\)-DP, then \(\mathsf{M}\circ\mathsf{G}\colon\mathcal{X}^{n}\to\mathcal{Z}\) is \((\varepsilon,\delta)\)-DP._

#### b.8.2 Zero-Concentrated Differential Privacy (zCDP)

Our empirical evaluation (Section 4) is performed in the zCDP model of Bun and Steinke (2016), defined below.

**Definition B.22** (Renyi Divergence (Renyi (1961))).: _Let \(\mathbf{y}\) and \(\mathbf{y}^{\prime}\) be random variables over \(\mathcal{Y}\). For \(\alpha\in(1,\infty)\), the Renyi divergence of order \(\alpha\) between \(\mathbf{y}\) and \(\mathbf{y}^{\prime}\) is defined by_

\[D_{\alpha}(\mathbf{y}\|\mathbf{y}^{\prime})=\frac{1}{\alpha-1} \cdot\ln\Biggl{(}\mathrm{E}_{y\leftarrow\mathbf{y}}\Biggl{[}\left(\frac{P(y)}{ P^{\prime}(y)}\right)^{\alpha-1}\Biggr{]}\Biggr{)},\]

_where \(P(\cdot)\) and \(P^{\prime}(\cdot)\) are the probability mass/density functions of \(\mathbf{y}\) and \(\mathbf{y}^{\prime}\), respectively._

**Definition B.23** (zCDP Indistinguishability).: _We say that two random variable \(\mathbf{y},\mathbf{y}^{\prime}\) over a domain \(\mathcal{Y}\) are \(\rho\)-indistinguishable (denote by \(\mathbf{y}\approx_{\rho}\mathbf{y}^{\prime}\)), iff for every \(\alpha\in(1,\infty)\) it holds that_

\[D_{\alpha}(\mathbf{y}\|\mathbf{y}^{\prime}),D_{\alpha}(\mathbf{y}^{\prime}\| \mathbf{y})\leq\rho\alpha.\]

_We say that \(\mathbf{y},\mathbf{y}^{\prime}\) are \((\rho,\delta)\)-indistinguishable (denote by \(\mathbf{y}\approx_{\rho,\delta}\mathbf{y}^{\prime}\)), iff there exist events \(E,E^{\prime}\subseteq\mathcal{X}\) with \(\Pr[\mathbf{y}\in E],\Pr[\mathbf{y}^{\prime}\in E^{\prime}]\geq 1-\delta\) such that \(\mathbf{y}|_{E}\approx_{\rho}\mathbf{y}|_{E^{\prime}}\)._

**Definition B.24** (\((\rho,\delta)\)-zCDP Bun and Steinke (2016)).: _A mechanism \(\mathsf{M}\) is \(\delta\)-approximate \(\rho\)-zCDP (in short, \((\rho,\delta)\)-zCDP), if for any neighboring databases \(X,X^{\prime}\) it holds that \(\mathsf{M}(X)\approx_{\rho,\delta}\mathsf{M}(X^{\prime})\)._

**The Gaussian Mechanism**

**Fact B.25** (The Gaussian Mechanism Dwork et al. (2006); Bun and Steinke (2016)).: _Let \(\bm{x},\bm{x}^{\prime}\in\mathbb{R}^{d}\) be vectors with \(\left\|\bm{x}-\bm{x}^{\prime}\right\|_{2}\leq\lambda\). For \(\rho>0\), \(\sigma=\frac{\lambda}{\sqrt{2\rho}}\) and \(Z\sim\mathcal{N}(\bm{0},\sigma^{2}\cdot\mathbb{I}_{d\times d})\) it holds that \(\bm{x}+Z\approx_{\rho}\bm{x}^{\prime}+Z\)._

#### b.8.3 FriendlyCore Averaging

We use the following DP averaging algorithm that given the diameter \(\xi\) of a ball that contain most of the points, it can estimate their average.

**Fact B.26** (Tsfadia et al. [2022]).: _Let \(\lambda\geq 1\) and \(\delta\leq\varepsilon,\beta\leq 1\). There exists an \((\varepsilon,\delta)\)-DP algorithm \(\mathsf{FC\_Average}\) that gets as input a dataset \(S=(x_{1},\ldots,x_{n})\in(\mathbb{R}^{d})^{n}\) and a parameter \(\xi>0\) and satisfies the following utility guarantee: If \(n\geq O\bigg{(}\frac{\log(1/\delta)}{\varepsilon}+\frac{\sqrt{d\log(1/\delta) \log(1/\beta)}}{\lambda\varepsilon}\bigg{)}\) and \(\exists S^{\prime}\subseteq S\) with \(|S^{\prime}|\geq 0.8n\) s.t. \(\forall x_{i},x_{j}\in S^{\prime}:\;\|x_{i}-x_{j}\|_{2}\leq\xi\), then_

\[\Pr_{y\sim\mathsf{FC\_Average}(S,\xi)}[\|y-\mu\|>\lambda\xi]\leq\beta,\]

_where \(\mu=\frac{1}{|S^{\prime}|}\sum_{x\in S^{\prime}}x\). Furthermore, the running time of \(\mathsf{FC\_Average}(S,\cdot)\) is \(\tilde{O}(dn\log(n/\delta))\) (See Appendix B in Tsfadia et al. [2022])._

Fact B.26 is not explicitly stated in Tsfadia et al. [2022] since they only analyzed the utility guarantee of their averaging in the zCDP model. Yet, it can be achieved using similar steps. First, we need to consider a "friendly" DP variant of their FriendlyAvg algorithm (Algorithm 3.3 in Tsfadia et al. [2022]), and as Tsfadia et al. [2022] noted, we can do it such that the probability of failure is low whenever \(n\geq O\bigg{(}\frac{\log(1/\delta)}{\varepsilon}\bigg{)}\), and the additive error (given success) decreases in a rate of \(\frac{\xi\sqrt{d\log(1/\delta)\log(1/\beta)}}{n\varepsilon}\), where \(\xi\) is the diameter of the points. Fact B.26 immediately obtained by combining FriendlyAvg with their paradigm for DP (Theorem 4.11 in Tsfadia et al. [2022] applied with \(\alpha=0.2\)).

#### b.8.4 Subspace Recovery Algorithm of Dwork et al. [2014]

We next describe the subspace recovery algorithm of Dwork et al. [2014] that strongly takes advantage of a large additive gap \(\sigma_{k}^{2}-\sigma_{k+1}^{2}\) for decreasing the noise that is required for privacy. This algorithm is only used in our empirical evaluation (Section 4).

**Algorithm B.27** (Algorithm 2 in Dwork et al. [2014]).:

_Input: A dataset \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\). DP parameters: \(\varepsilon,\delta\). Rank parameter: \(k\). Operation:_

1. _Compute a projection matrix_ \(\Pi\) _to the top-_ \(k\) _rows subspace of_ \(X\)_, and compute the singular values_ \(\sigma_{k},\sigma_{k+1}\)_._
2. _Compute_ \(g=\sigma_{k}^{2}-\sigma_{k+1}^{2}+Lap(2/\varepsilon)\)_._
3. _Compute_ \(W=\Pi+E\)_, where_ \(E\) _is a_ \(d\times d\) _symmetric matrix where the upper triangle is i.i.d. samples from_ \(\mathcal{N}(\mathbf{0},\Big{(}\frac{\Delta_{\varepsilon,\delta}}{g-2\log(1/ \delta)/\varepsilon-2}\Big{)}^{2})\)_, where_ \(\Delta_{\varepsilon,\delta}=\frac{1+\sqrt{2\log(1/\delta)}}{\varepsilon}\)_._
4. _Output a projection matrix_ \(\tilde{\Pi}\) _to the top_ \(k\) _eigenvectors of_ \(W\)_._

Note that when the additive gap \(\sigma_{k}^{2}-\sigma_{k+1}^{2}\) is large, the algorithm will add smaller noise per coordinate in Step 3.

**Fact B.28** (Theorem 11 in Dwork et al. [2014]).: _Algorithm B.27 is \((2\varepsilon,2\delta)\)-DP._

The privacy analysis is done by the following steps. First, by the Laplace mechanism, Step 2 is \(\varepsilon\)-DP. Second, by tail bound on the Laplace distribution, the probability that \(g-2\log(1/\delta)/\varepsilon\leq\sigma_{k}^{2}-\sigma_{k+1}^{2}\) is at least \(1-\delta\). Furthermore, they show that if \(\sigma_{k}^{2}-\sigma_{k+1}^{2}\geq\alpha\) then the Forbenius-norm sensitivity of the matrix \(\Pi\) is at most \(\frac{2}{\alpha-2}\). So conditioned on the above \(1-\delta\) probability event, the Forbenius-norm sensitivity of \(\Pi\) is at most \(\frac{2}{g-2\log(1/\delta)/\varepsilon-2}\), and therefore the Gaussian mechanism step (Item 3) guarantees \((\varepsilon,\delta)\)-DP, and by composition the entire process is \((2\varepsilon,2\delta)\)-DP.

In order to consider a zCDP version of Algorithm B.27, we replace the Laplace noise \(Lap(2/\varepsilon)\) with a Gaussian noise \(\mathcal{N}(0,\sigma^{2})\) for \(\sigma=\sqrt{2/\rho}\). Given this change, now it holds that \(g-\sigma\sqrt{2\ln(1/\delta)}\leq\sigma_{k}^{2}-\sigma_{k+1}^{2}\) w.p. at least \(1-\delta\) (by tail bound on Gaussian distribution). Finally, in Step 3 we replace \(\Delta_{\varepsilon,\delta}\) (the required standard deviation for \((\varepsilon,\delta)\)-DP) to \(1/\sqrt{2\rho}\) (what is required for \(\rho\)-zCDP). This results with the following \((2\rho,\delta)\)-zCDP algorithm:

**Algorithm B.29** (zCDP version of Algorithm 2 in Dwork et al. (2014)).:

_Input: A dataset \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\). \(z\)CDP parameters: \(\rho,\delta\). Rank parameter: \(k\). Operation:_

1. _Compute a projection matrix_ \(\Pi\) _to the top-_ \(k\) _rows subspace of_ \(X\)_, and compute the singular values_ \(\sigma_{k},\sigma_{k+1}\)_._
2. _Compute_ \(g=\sigma_{k}^{2}-\sigma_{k+1}^{2}+\mathcal{N}(0,2/\rho)\)_._
3. _Compute_ \(W=\Pi+E\)_, where_ \(E\) _is a_ \(d\times d\) _symmetric matrix where the upper triangle is i.i.d. samples from_ \(\mathcal{N}(\mathbf{0},\left(\frac{\sqrt{1/(2\rho)}}{g^{-2}\sqrt{\ln(1/\delta)/ \rho}-2}\right)^{2})\)_._
4. _Output a projection matrix_ \(\tilde{\Pi}\) _to the top_ \(k\) _eigenvectors of_ \(W\)_._

#### b.8.5 Lower Bounding Tools from Peter et al. (2024)

Peter et al. (2024) showed that for \(d=\tilde{\Theta}(n^{2})\), the distribution \(\mathcal{D}(n,d)\) below induces a fingerprinting codebook for \(n\) users, each codeword is of length \(d\).

**Definition B.30** (FPC hard distribution \(\mathcal{D}(n,d)\)Peter et al. (2024)).: _Let \(\rho\) be the distribution that outputs \(p=(e^{t}-1)/(e^{t}+1)\in[-1,1]\) for \(t\leftarrow[-\ln(5n),\ln(5n)]\). For \(n,d\in\mathbb{N}\), let \(\mathcal{D}(n,d)\) be the distribution that chooses independently \(p^{1},\ldots,p^{d}\sim\rho\), and outputs a codebook \((x_{1},\ldots,x_{n})\in(\{-1,1\}^{d})^{n}\) where for each \(i\in[n]\) and \(j\in[d]\), \(x_{i}^{j}\) is drawn independently over \(\{-1,1\}\) with expectation \(p^{j}\)._

Framework for Lower BoundsConsider a mechanism \(\mathsf{M}\colon\mathcal{X}^{n}\to\mathcal{W}\) that satisfies some weak accuracy guarantee. Peter et al. (2024) showed that the task of proving a lower bound on \(n\) is reduced to the following task: Transform an FPC codebook \(X\in\{-1,1\}^{n_{0}\times d_{0}}\) into hard instances \(Y\in\mathcal{X}^{n}\) for \(\mathsf{M}\), and then extract from the output \(w\in\mathcal{W}\) of \(\mathsf{M}(Y)\) a vector \(q\in\{-1,1\}^{d_{0}}\) that is strongly-correlated with \(X\) (\(n_{0}\) and \(d_{0}\) are some functions of \(n\) and \(d\) and the weak accuracy guarantee of \(\mathsf{M}\)), where

**Definition B.31** (Strongly Correlated).: _We say that a random variable \(\mathbf{q}=(\mathbf{q}^{1},\ldots,\mathbf{q}^{d})\in\{-1,1\}^{d}\) is strongly-correlated with a matrix \(X\in\{-1,1\}^{n\times d}\), if_

\[\forall b\in\{-1,1\},\;\forall j\in\mathcal{J}_{X}^{b}:\quad\Pr\bigl{[} \mathbf{q}^{j}=b\bigr{]}\geq 0.9\]

_(recall that \(\mathcal{J}_{X}^{b}=\{j\in[d]\colon x_{i}^{j}=b\text{ for all }i\in[n]\}\))._

Denote by \(\mathsf{G}\colon\{-1,1\}^{n_{0}\times d_{0}}\times\mathcal{Z}\to\mathcal{X}^{n}\) the algorithm that generates the hard instances using a uniformly random secret \(z\leftarrow\mathcal{Z}\) (i.e., \(z\) could be a random permutation, a sequence of random permutations, etc). Denote by \(\mathsf{F}\colon\mathcal{Z}\times\mathcal{W}\to\{-1,1\}^{d_{0}}\) the algorithm that extracts a good \(q\) using the secret \(z\) and the output \(w\). We denote by \(\mathsf{A}^{\mathsf{M},\mathsf{F},\mathsf{G}}(X)\) the entire process:

**Definition B.32** (Algorithm \(\mathsf{A}^{\mathsf{M},\mathsf{F},\mathsf{G}}\)).: _Let \(\mathcal{Z}\), \(\mathcal{W}\) be domains, and let \(n_{0},d_{0},n,d\in\mathbb{N}\). Let \((\mathsf{M},\mathsf{F},\mathsf{G})\) be a triplet of randomized algorithms of types \(\mathsf{G}\colon\{-1,1\}^{n_{0}\times d_{0}}\times\mathcal{Z}\to\mathcal{X}^{ n}\), \(\mathsf{M}\colon\mathcal{X}^{n}\to\mathcal{W}\), and \(\mathsf{F}\colon\mathcal{Z}\times\mathcal{W}\to[-1,1]^{d_{0}}\), each uses \(m\) random coins. Define \(\mathsf{A}^{\mathsf{M},\mathsf{F},\mathsf{G}}\colon\{-1,1\}^{n_{0}\times d_{0}} \to[-1,1]^{d_{0}}\) as the randomized algorithm that on inputs \(X\in\{-1,1\}^{n_{0}\times d_{0}}\), samples \(z\leftarrow\mathcal{Z}\), \(Y\sim\mathsf{G}(X,z)\) and \(w\sim\mathsf{M}(Y)\), and outputs \(q\sim\mathsf{F}(z,w)\)._

**Definition B.33** (\(\beta\)-Leaking).: _Let \(\mathsf{M},\mathsf{F},\mathsf{G}\) be randomized algorithms as in Definition B.32, each uses \(m\) random coins, and let \(\mathcal{D}(n_{0},d_{0})\) be the distribution from Definition B.30. We say that the triplet \((\mathsf{M},\mathsf{F},\mathsf{G})\) is \(\beta\)-leaking if_

\[\Pr_{r,r^{\prime},r^{\prime\prime}\leftarrow\{0,1\}^{m},\;X\leftarrow\mathcal{ D}(n_{0},d_{0})}\bigl{[}\mathsf{A}^{\mathsf{M}_{r},\mathsf{F}_{r^{\prime}}, \mathsf{G}_{r^{\prime\prime}}}(X)\text{ is strongly-correlated with }X\bigr{]}\geq\beta,\]

_where recall that \(\mathsf{M}_{r}\) denotes the algorithm \(\mathsf{M}\) when fixing its random coins to \(r\) (\(\mathsf{F}_{r^{\prime}},\mathsf{G}_{r^{\prime\prime}}\) are similarly defined)._

**Lemma B.34** (Framework for Lower Bounds Peter et al. (2024)).: _Let \(\beta\in(0,1]\), \(n_{0},n,d_{0},d\in\mathbb{N}\). Let \(\mathsf{M}\colon\mathcal{X}^{n}\to\mathcal{W}\) be an algorithm such that there exists two algorithms \(\mathsf{G}\colon\{-1,1\}^{n_{0}\times d_{0}}\times\mathcal{Z}\to\mathcal{X}^{n}\) and \(\mathsf{F}\colon\mathcal{Z}\times\mathcal{W}\to[-1,1]^{d_{0}}\) such that the triplet \((\mathsf{M},\mathsf{F},\mathsf{G})\) is \(\beta\)-leaking (Definition B.33). If \(\mathsf{M}\) is \(\left(1,\frac{\beta}{4n_{0}}\right)\)-DP and \(\mathsf{G}(\cdot,z)\) is neighboring-preserving (Definition B.20) for every \(z\in\mathcal{Z}\), then \(n_{0}\geq\Omega\Big{(}\frac{\sqrt{d_{0}}}{\log^{1.3}(d_{0}/\beta)}\Big{)}\)._

Padding-And-Permuting (PAP) FpcThe main technical tool of Peter et al. (2024) for generating hard instance is to sample a random fingerprinting codebook from \(\mathcal{D}(n,d_{0})\), append many \(1\)-marked and \((-1)\)-marked columns, and randomly permute all the columns.

**Definition B.35** (\(\mathsf{PAP}_{n,d_{0},\ell}\)).: _Let \(\ell,n,d_{0}\in\mathbb{N}\), and let \(d=d_{0}+2\ell\). We define \(\mathsf{PAP}_{n,d_{0},\ell}\colon\{-1,1\}^{n\times d_{0}}\times\mathcal{P}_{d }\to\{-1,1\}^{n\times d}\) as the function that given \(X\in\{-1,1\}^{n\times d_{0}}\) and a permutation matrix \(P\in\mathcal{P}_{d}\) as inputs, outputs \(X^{\prime}=X^{\prime\prime}\cdot P\) (i.e., permutes the columns of \(X^{\prime\prime}\) according to \(P\)), where \(X^{\prime\prime}\) is the \(\{-1,1\}^{n\times d}\) matrix after appending \(\ell\,1\)-marked and \(\ell\,(-1)\)-marked columns to \(X\) (where recall that a \(b\)-marked is a column with all entries equal to \(b\))._

Note that for every \(n,d_{0},\ell\in\mathbb{N}\) and \(P\in\mathcal{P}_{d}\), the function \(\mathsf{PAP}_{n,d_{0},\ell}(\cdot,P)\) is neighboring-preserving (Definition B.20).

**Definition B.36** (Strongly Agrees).: _We say that a vector \(q=(q^{1},\ldots,q^{d})\) strongly-agrees with a matrix \(X\in\{-1,1\}^{n\times d}\), if_

\[\forall b\in\{-1,1\}:\quad\big{|}\{j\in\mathcal{J}_{X}^{b}\colon q^{j}=b\} \big{|}\geq 0.9\big{|}\mathcal{J}_{X}^{b}\big{|}.\]

The following lemma capture the main technical property of the PAP technique.

**Lemma B.37** (Peter et al. (2024)).: _Let \(\ell,n,d_{0}\in\mathbb{N}\) such that \(d=d_{0}+2\ell\). Let \(\mathsf{M}\colon\{-1,1\}^{n\times d}\to[-1,1]^{d}\) be an mechanism that uses \(m\) random coins, \(\mathbf{P}\leftarrow\mathcal{P}_{d}\) (a random variable) and for \(X\in\{-1,1\}^{n\times d_{0}}\) let \(\mathbf{Y}_{X}=\mathsf{PAP}(X,\mathbf{P})\). Then for any distribution \(\mathcal{D}\) over \(\{-1,1\}^{n\times d_{0}}\):_

\[\Pr_{r\leftarrow\{0,1\}^{m},\,X\sim\mathcal{D}}\big{[}(\mathsf{M} _{r}(\mathbf{Y}_{X})\cdot\mathbf{P}^{T})^{1,\ldots,d_{0}}\text{ is strongly-correlated with }X\big{]}\] \[\geq\mathrm{E}_{X\sim\mathcal{D}}[\Pr[\mathsf{M}(\mathbf{Y}_{X}) \text{ strongly-agrees with }\mathbf{Y}_{X}]].\]

## Appendix C Upper Bounds

In this section we prove our upper bounds for subspace estimation. In Appendix C.2 we prove Theorem 1.6, and in Appendix C.3 we prove Theorem 1.7. Both algorithm share a similar structure that is defined next in Appendix C.1.

### Base Algorithms

Similarly to Singhal and Steinke (2021), our algorithms will follow the sample and aggregate approach of Nissim et al. (2007). That is, we partition the rows into \(t\) subsets, compute (non-privately) the top-\(k\) projection matrix of each subset, and then privately aggregate the projections. This is Algorithm C.1 that uses oracle access to an aggregation algorithm. Unlike Singhal and Steinke (2021) who assumed that the rows are i.i.d. Gaussian samples, here we take a _random_ partition and show that with large enough probability over the randomness of the partition, the projection matrices are indeed close to each other. We consider two types of aggregations: The first type, called Algorithm C.2, simply treats the matrices as vectors of dimension \(d^{2}\) and computes a DP-average of them using FriendlyCore averaging (Fact B.26). The second type, called Algorithm C.3, is more similar to the aggregation done by Singhal and Steinke (2021). That is, sample reference points \(p_{1},\ldots,p_{q}\) and then aggregate the \(kd\) dimensional points \(\{(\Pi_{j}p_{1},\ldots,\Pi_{j}p_{q})\}_{j=1}^{t}\). The difference from Singhal and Steinke (2021) is that we use FriendlyCore averaging (Fact B.26) which simplifies the construction.

**Algorithm C.1** (Algorithm EstSubspace).:

_Input: A dataset \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\). Parameters: \(k,t\). Oracle: A DP algorithm Agg for aggregating projection matrices. Operation:_

1. _Randomly split_ \(X\) _into_ \(t\) _subsets, each contains (at least)_ \(m=\lfloor n/t\rfloor\) _rows. Let_ \(X_{1},\ldots,X_{t}\) _be the resulting subsets._
2. _For each_ \(j\in[t]\)_: Compute the projection matrix_ \(\Pi_{j}\) _of the top-_\(k\) _rows subset of_ \(X_{j}\)_._
3. _Output_ \(\widetilde{\Pi}\sim\mathsf{Agg}(\Pi_{1},\ldots,\Pi_{t})\)_._

**Algorithm C.2** (Algorithm NaiveAgg).:

_Input: A dataset \(\widetilde{\Pi}=(\Pi_{1},\ldots,\Pi_{t})\in(\mathcal{W}_{d,k})^{t}\). Privacy parameters: \(\varepsilon,\delta\leq 1\). Utility parameter: \(\xi\in[0,1]\). Operation:_

1. _Compute_ \(\widehat{\Pi}\sim\mathsf{FC\_Average}_{\varepsilon,\delta}(\widetilde{\Pi},\xi)\) _(i.e., each_ \(\Pi_{j}\) _is treated like a vector in_ \(\mathbb{R}^{d^{2}}\)_)._
2. _Output_ \(\widetilde{\Pi}=\operatorname*{argmin}_{\Pi\in\mathcal{W}_{d,k}}\left\|\Pi- \widehat{\Pi}\right\|_{F}\)_._

**Algorithm C.3** (Algorithm SS_Agg).:

_Input: A dataset \((\Pi_{1},\ldots,\Pi_{t})\in(\mathcal{W}_{d,k})^{t}\). Utility Parameters: \(k,q,\xi\). Privacy parameters: \(\varepsilon,\delta\leq 1\). Operation:_

1. _Sample_ \(p_{1},\ldots,p_{q}\sim\mathcal{N}(\vec{0},\mathbb{I}_{d\times d})\) _(i.i.d. samples from a standard spherical Gaussian)._
2. _For_ \(j\in[t]\)_, compute_ \(y^{j}=(\Pi_{j}p_{1},\ldots,\Pi_{j}p_{q})\in\mathbb{R}^{qd}\)_, and let_ \(Y=(y^{1},\ldots,y^{t})\)_._
3. _Compute_ \(z=(z_{1},\ldots,z_{qd})\sim\mathsf{FC\_Average}_{\varepsilon,\delta}(Y,\xi)\) _(_\(z\in\mathbb{R}^{qd}\)_)._
4. _Let_ \(\widetilde{P}\) _be the_ \(q\times d\) _matrix whose_ \(i^{\mathrm{th}}\) _row (for_ \(i\in[q]\)_) is_ \((z_{d(i-1)+1},\ldots,z_{di})\) _(which estimates the projection of_ \(p_{i}\) _onto the top-_\(k\) _rows subspace of_ \(X\)_)._
5. _Output the projection matrix_ \(\widetilde{\Pi}\) _of the top-_\(k\) _rows subspace of_ \(\widetilde{P}\)_._

#### c.1.1 Running Time

We analyze the running time of \(\mathsf{EstSubspace}_{k,t}^{\mathsf{SS\_Agg}_{k,q,\xi}}\). Denote by \(T(n,d,k)\) the running time of computing a projection matrix to the top-\(k\) row subspace of an \(n\times d\) matrix. The running time of Step 2 in \(\mathsf{EstSubspace}\) is \(t\cdot T(n/t,d,k)\). The running time of SS_Agg is \(O(dqtk)\) on Step 2, \(O(dqt\log t)\) on Step 3 (Fact B.26), and \(T(q,d,k)\) on Step 5. Overall it is \(t\cdot T(n/t,d,k)+T(q,d,k)+O(dqt(\log t+k))\). For both our weak and strong estimators (described next) we use \(n/t=\tilde{\Theta}(k)\) and \(q=\tilde{O}(k)\), and therefore we obtain that the total running time is \(\frac{n}{m}\cdot T(m,d,k)+\tilde{O}(dkn)\) for \(m=n/t=\tilde{\Theta}(k)\).

#### c.1.2 Key Property

In order to claim that the (non-private) projection matrices are close to each other, we use the following lemma which states that with high enough probability over a random subset, the top-\(k\) projection matrix in the subset is close to the top-\(k\) projection matrix of the entire matrix.

**Lemma C.4** (Restatement of Lemma 2.1).: _Let \(X=(x_{1},\ldots,x_{n})\in(\mathcal{S}_{d})^{n}\) with singular values \(\sigma_{1}\geq\ldots\geq\sigma_{\min\{n,d\}}\geq 0\) and \(\sigma_{k}^{2}\geq 0.01n/k\). Let \(\mathbf{X}^{\prime}\in(\mathcal{S}_{d})^{m}\) be a uniformly random \(m\)-sizesubset of the rows of \(X\) (without replacement). Let \(\Pi\) and \(\mathbf{\Pi}^{\prime}\) be the projection matrices to the top-\(k\) rows subspace of \(X\) and \(\mathbf{X}^{\prime}\), respectively. Then the following holds for \(\gamma_{1}=\frac{\sigma_{k+1}}{\sigma_{k}}\) and \(\gamma_{2}=\frac{\sqrt{\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}^{2}}}{\sigma_{k}}\):_

1. _If_ \(m\geq\max\{800k\ln\Bigl{(}\frac{k}{4\beta}\Bigr{)},\;2\gamma_{1}n\}\)_, then_ \(\Pr\Bigl{[}\left\|\Pi-\mathbf{\Pi}^{\prime}\right\|\leq 4\sqrt{\frac{2n}{m}} \cdot\gamma_{1}\Bigr{]}\geq 1-\beta/2\)_._
2. _If_ \(m\geq 800k\ln\Bigl{(}\frac{k}{4\beta}\Bigr{)}\) _and_ \(\beta\geq 4\gamma_{2}^{2}\)_, then_ \(\Pr\Bigl{[}\left\|\Pi-\mathbf{\Pi}^{\prime}\right\|_{F}\leq 4\sqrt{\frac{2}{ \beta}}\cdot\gamma_{2}\Bigr{]}\geq 1-\beta\)_._

Proof.: We will prove each part of the lemma by applying Proposition B.12. In the following, let \(X=\sum_{i=1}^{n}\sigma_{i}u_{i}v_{i}^{T}\) be the SVD of \(X\), and note that we can write \(\mathbf{X}^{\prime}=(x_{i_{1}},\ldots,x_{i_{m}})\) where \(\{\mathbf{i}_{1},\ldots,\mathbf{i}_{m}\}\) is a random subset of \([n]\) (without replacement). Let \(Y=(y_{1},\ldots,y_{n})=\sum_{i=1}^{k}\sigma_{i}u_{i}v_{i}^{T}\) and let \(Z=(z_{1},\ldots,z_{n})=\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}u_{i}v_{i}^{T}\), and note that \(Span\{y_{1},\ldots,y_{n}\}=Span\{v_{1},\ldots,v_{k}\}\) is orthogonal to \(Span\{z_{1},\ldots,z_{n}\}=Span\{v_{k+1},\ldots,v_{\min\{n,d\}}\}\). Furthermore, define the random matrices \(\mathbf{Y}^{\prime}=(y_{1_{1}},\ldots,y_{l_{m}})\) and \(\mathbf{Z}^{\prime}=(z_{1_{1}},\ldots,z_{l_{m}})\) and note that \(\mathbf{X}^{\prime}=\mathbf{Y}^{\prime}+\mathbf{Z}^{\prime}\).

First, by Proposition B.4 (applied on \(v_{1},\ldots,v_{k}\)) and the assumptions on \(m,\sigma_{k}\), it holds by the union bound that

\[\Pr\biggl{[}\sigma_{k}(\mathbf{Y}^{\prime})\geq\sqrt{\frac{m}{2n}}\sigma_{k} \biggr{]}\geq 1-\beta/2.\] (1)

In the following we assume that the event in Equation (1) occurs. We first prove Item 1. Note that \(\left\|\mathbf{Z}^{\prime}\right\|\leq\left\|\mathbf{Z}\right\|\leq\sigma_{k +1}\leq\gamma_{1}\sigma_{k}\) and that \(\sigma_{k}(\mathbf{Y}^{\prime})^{2}\geq\frac{m}{2n}\sigma_{k}^{2}\geq 2 \gamma_{1}^{2}\sigma_{k}^{2}\geq 2\left\|\mathbf{Z}^{\prime}\right\|^{2}\) (the second inequality holds since \(m\geq 4\gamma_{1}^{2}n\)). By applying Proposition B.12(1) on \(\mathbf{X}^{\prime},\mathbf{Y}^{\prime},\mathbf{Z}^{\prime}\) we conclude that

\[\left\|\Pi-\mathbf{\Pi}^{\prime}\right\|\leq 4\cdot\frac{\left\|\mathbf{Z}^{ \prime}\right\|}{\sigma_{k}(\mathbf{Y}^{\prime})}\leq 4\sqrt{\frac{2n}{m}}\cdot \gamma_{1}.\]

We next focus on proving Item 2. Note that \(\left\|Z\right\|_{F}^{2}=\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}^{2}=\gamma_{2}^ {2}\sigma_{k}^{2}\), and that \(\operatorname{E}\Bigl{[}\left\|\mathbf{Z}^{\prime}\right\|_{F}^{2}\Bigr{]}= \frac{m}{n}\left\|Z\right\|_{F}^{2}=\frac{m}{n}\cdot\gamma_{2}^{2}\sigma_{k}^{2}\). Therefore by Markov's inequality

\[\Pr\biggl{[}\left\|\mathbf{Z}^{\prime}\right\|_{F}^{2}\leq\frac{2m}{\beta n} \gamma_{2}^{2}\sigma_{k}^{2}\biggr{]}\geq 1-\beta/2.\] (2)

In the following we assume that the event in Equation (2) occurs. Note that \(\sigma_{k}(\mathbf{Y}^{\prime})^{2}\geq\frac{m}{2n}\sigma_{k}^{2}\geq\frac{2 m}{\beta n}\gamma_{2}^{2}\sigma_{k}^{2}\geq 2\left\|\mathbf{Z}^{\prime}\right\|^{2}\) (the second inequality holds since \(\beta\geq 4\gamma_{2}^{2}\)). By applying Proposition B.12(2) on \(\mathbf{X}^{\prime},\mathbf{Y}^{\prime},\mathbf{Z}^{\prime}\) we conclude that

\[\left\|\Pi-\mathbf{\Pi}^{\prime}\right\|\leq 2\sqrt{2}\cdot\frac{\left\|\mathbf{Z}^{ \prime}\right\|_{F}}{\sigma_{k}(\mathbf{Y}^{\prime})}\leq 2\sqrt{2}\cdot\frac{\sqrt{ \frac{2m}{\beta n}}\gamma_{2}\sigma_{k}}{\sqrt{\frac{m}{2n}}\sigma_{k}}\leq 4 \sqrt{\frac{2}{\beta}}\cdot\gamma_{2}.\]

### Weak Estimator

In this section, we prove Theorem 1.6, stated below.

**Theorem C.5** (Restatement of Theorem 1.6).: _Let \(n,k,d\in\mathbb{N}\), \(\lambda>0\), \(\varepsilon,\delta\in(0,1]\) where \(k\leq\min\{n,d\}\). There exists an \((k,\lambda,\beta=0.9,\gamma_{\max}=\Omega(\min\{\frac{1}{\lambda},1\}))\)-weak subspace estimator \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) with_

\[n=O\Biggl{(}k\log k\Biggl{(}\frac{\log(1/\delta)}{\varepsilon}+\frac{\min\{k \sqrt{d},\,d\}\sqrt{\log(1/\delta)}}{\lambda\varepsilon}\Biggr{)}\Biggr{)}\]

_such that \(\mathsf{M}(\cdot,\gamma)\) is \((\varepsilon,\delta)\)-DP for every \(\gamma\in[0,1]\)._Theorem C.5 is an immediate corollary of the following Lemmas C.6 and C.7.

**Lemma C.6**.: _Let \(t=c_{1}\cdot\left(\frac{\log(1/\delta)}{\varepsilon}+\frac{d\sqrt{\log(1/\delta) \log(20)}}{\lambda\varepsilon}\right)\) (where \(c_{1}\) is the hidden constant in Fact B.26). Then for any \(n\geq 800k\ln(25k)\cdot t\), the mechanism \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathcal{W}_{d,k}\) defined by \(\mathsf{M}(X,\gamma):=\mathsf{EstSubspace}^{\mathsf{Naive\_Agg}_{\varepsilon, \delta,\delta=60\gamma}}(X)\) is an \((k,\lambda,\beta=0.9,\gamma_{\max}=\frac{1}{20})\)-weak-subspace-estimator._

Proof.: Let \(X\in(\mathcal{S}_{d})^{n}\) with \(\sqrt{\frac{\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}(X)^{2}}{\sigma_{k}(X)^{2}}} \leq\gamma\leq\gamma_{\max}\) and let \(\Pi\in\mathcal{W}_{d,k}\) be the projection of the top-\(k\) rows subspace of \(X\). Consider a random execution of \(\mathsf{M}(X)\). Let \(\{\mathbf{\Pi}_{j}\}_{j=1}^{t},\widehat{\mathbf{\Pi}}\) be (random variables of) the values of \(\{\Pi_{j}\}_{j=1}^{t},\widehat{\mathbf{\Pi}}\) in the execution, and let \(\widetilde{\mathbf{\Pi}}\) be the output. By Lemma C.4(2) (recall that \(\gamma_{\max}\leq\frac{1}{20}\)) and the union bound,

\[\forall j\in[t]:\quad\Pr[\|\Pi-\mathbf{\Pi}_{j}\|\leq 60\gamma]\geq 0.99,\] (3)

Let \(\mathbf{a}_{j}=\mathds{1}\{\|\Pi-\mathbf{\Pi}_{j}\|\leq 60\gamma\}\) (indicator random variable) and let \(\mathbf{a}=\sum_{j=1}^{t}\mathbf{a}_{j}\). By Equation (3) it holds that \(\mathrm{E}[\mathbf{a}]\geq 0.99t\), and recall that \(\mathbf{a}\leq t\). It follows that

\[\Pr[\mathbf{a}\geq 0.8t]\geq\frac{\mathrm{E}[\mathbf{a}]-0.8t\cdot \Pr[\mathbf{a}<0.8t]}{t}\geq 0.99-0.8(1-\Pr[\mathbf{a}\geq 0.8t]) \implies \Pr[\mathbf{a}\geq 0.8t]\geq 0.95.\] (4)

In the following we assume that the event \(\mathbf{a}\geq 0.8t\) occurs. Let \(\mathbf{J}=\{j\in[t]\colon\mathbf{a}_{j}=1\}\). Note that our choice of \(t\) satisfies

\[t\geq c^{\prime}\cdot\left(\frac{\log(1/\delta)}{\varepsilon}+ \frac{d\sqrt{\log(1/\delta)\log(100)}}{\left(\frac{\lambda}{500}\right)\cdot \varepsilon}\right)\hskip-2.845276pt.\]

where \(c^{\prime}\) denotes the constant from Fact B.26. Therefore we conclude by Fact B.26 (FriendlyCore averaging) that

\[\Pr\biggl{[}\Bigl{\|}\mathbf{\Pi-\widetilde{\mathbf{\Pi}}}\Bigr{\|}_{F}\leq \frac{\lambda\gamma}{4}\biggr{]}\geq 0.99.\]

The proof of the lemma now follows by Proposition B.16 since \(\Bigl{\|}\mathbf{\Pi-\widetilde{\mathbf{\Pi}}}\Bigr{\|}_{F}\leq 2\Bigl{\|} \mathbf{\Pi-\widehat{\mathbf{\Pi}}}\Bigr{\|}_{F}\). 

**Lemma C.7**.: _Let \(c_{1}\), \(c_{2}\), \(c_{3}\) be the constants from Facts B.14 to B.15 (respectively), and let \(c\) be a large enough constant. Let \(t=c\cdot\left(\frac{\log(1/\delta)}{\varepsilon}+\frac{\left(\sqrt{k}+\sqrt{\log \frac{dk\ln(1/\delta)}{\lambda\varepsilon}}\right)\sqrt{kd\log(1/\delta)}}{ \lambda\varepsilon}\right)\), \(\eta=c_{1}\cdot\left(\sqrt{k}+\sqrt{\ln(qt)}\right)\) and \(q=c_{2}\cdot k\). Then for any \(n\geq 800k\ln(25k)\cdot t\), the mechanism \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathcal{W}_{d,k}\) defined by \(\mathsf{M}(X,\gamma):=\mathsf{EstSubspace}^{\mathsf{SS\_Agg}_{\varepsilon, k,k,q,\varepsilon=120\gamma\gamma k\gamma}}_{k,t}(X)\) is an \((k,\lambda,\beta=0.9,\gamma_{\max}=\Theta(\min\{\frac{1}{\lambda},1\}))\)-weak-subspace-estimator._

Proof.: Let \(X\in(\mathcal{S}_{d})^{n}\) with \(\sqrt{\frac{\sum_{i=k+1}^{\min\{n,d\}}\sigma_{i}(X)^{2}}{\sigma_{k}(X)^{2}}} \leq\gamma\leq\gamma_{\max}\) and let \(\Pi\in\mathcal{W}_{d,k}\) be the projection of the top-\(k\) rows subspace of \(X\). Consider a random execution of \(\mathsf{M}(X)\). Let \(\{\mathbf{\Pi}_{j}\}_{j=1}^{t},\{\mathbf{p}_{i}\}_{i=1}^{q},\{\mathbf{y}^{j}\} _{i=1}^{t},\mathbf{z},\widetilde{\mathbf{P}}\) be (random variables of) the values of \(\{\Pi_{j}\}_{j=1}^{t},\{p_{i}\}_{i=1}^{q},\{\mathbf{y}^{j}\}_{i=1}^{t},z, \widetilde{P}\) in the execution, and let \(\widetilde{\mathbf{\Pi}}\) be the output. As in the proof of Lemma C.6, let \(\mathbf{a}=\sum_{j=1}^{t}\mathbf{a}_{j}\) where \(\mathbf{a}_{j}=\mathds{1}\{\|\Pi-\mathbf{\Pi}_{j}\|\leq 60\gamma\}\). Then Equation (4) implies that

\[\Pr[\mathbf{a}\geq 0.8t]\geq 0.95.\]

In the following we assume that the event \(\mathbf{a}\geq 0.8t\) occurs. Let \(\mathbf{J}=\{j\in[t]\colon\mathbf{a}_{j}=1\}\). By Fact B.14 and the definition of \(\eta\) we obtain that

\[\Pr\bigl{[}\forall i\in[q],j\in\mathbf{J}:\ \bigl{\|}(\Pi-\mathbf{\Pi}_{j}) \mathbf{p}_{i}\bigr{\|}_{2}\leq 60\eta\gamma\bigr{]}\geq 0.95,\]In the following we assume that the above event occurs. This yields that

\[\forall i,j\in\mathbf{J}:\left.\left\|\mathbf{y}_{i}-\mathbf{y}_{j} \right\|_{2}\leq 120\eta\sqrt{k}\gamma=\xi.\right.\]

Furthermore, by the definition of \(t\) and \(\eta\) (note that \(\eta\) depends on \(\log(t)\)), it holds that

\[t\geq c^{\prime}\cdot\left(\frac{\log(1/\delta)}{\varepsilon}+ \frac{\sqrt{dk\log(1/\delta)}}{\left(\frac{c_{3}\lambda}{1500\eta}\right)\cdot \varepsilon}\right),\]

where \(c^{\prime}\) denotes the constant from Fact B.26. Therefore we obtain by Fact B.26 (FriendlyCore averaging) that

\[\Pr\left[\left\|\mathbf{P}-\widetilde{\mathbf{P}}\right\|_{F} \leq\underbrace{\frac{c_{3}\lambda\sqrt{k}\gamma}{12}}_{\alpha}\right]\geq 0.99,\]

where \(\mathbf{P}\) is the \(q\times d\) matrix whose rows are \(\Pi\mathbf{p}_{1},\ldots,\Pi\mathbf{p}_{q}\). By Fact B.15 we have that

\[\Pr\Big{[}\sigma_{k}(\mathbf{P})\geq c_{3}\sqrt{k}\Big{]}\geq 0.95,\]

and in the following we assume that the above event occurs (which in particular implies that \(Span(\mathbf{P}^{T})=Span(\Pi)\)). Finally, since \(2\alpha\leq\sigma_{k}(\mathbf{P})\) by assumption (and assuming \(\gamma_{\max}\leq\frac{6}{c_{3}\lambda}\)), we conclude by Proposition B.13 that

\[\left\|\mathbf{\Pi}-\widetilde{\mathbf{\Pi}}\right\|_{F}\leq 2 \sqrt{2}\cdot\frac{\alpha}{\sigma_{k}(P)-\alpha}\leq\lambda\gamma/2.\]

We therefore conclude the proof of the lemma by Proposition B.16.

### Strong Estimator

In this section, we prove Theorem 1.7, stated below.

**Theorem C.8** (Restatement of Theorem 1.7).: _Let \(n,k,d\in\mathbb{N}\), \(\lambda>0\), such that \(k\leq\min\{n,d\}\). There exists an \((k,\lambda,\beta=0.8,\gamma_{\max})\)-weak subspace estimator \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) with_

\[\gamma_{\max}=\Omega\left(\min\{\frac{1}{\lambda},\ \frac{\lambda^{2} \varepsilon^{2}}{\lambda^{2}\varepsilon\log(1/\delta)+\Big{(}k+\log\Big{(} \frac{dk\log(1/\delta)}{\lambda\varepsilon}\Big{)}\Big{)}dk\log(1/\delta)} \right)\]

_and_

\[n=O\left(k\log k\Bigg{(}\frac{\log(1/\delta)}{\varepsilon}+ \frac{\Big{(}k+\log\Big{(}\frac{dk\log(1/\delta)}{\lambda\varepsilon}\Big{)} \Big{)}dk\log(1/\delta)}{\lambda^{2}\varepsilon^{2}}\Bigg{)}\right)\]

_such that \(\mathsf{M}(\cdot,\gamma)\) is \((\varepsilon,\delta)\)-DP for every \(\gamma\in[0,1]\)._

**Lemma C.9**.: _Let \(c_{1}\), \(c_{2}\), \(c_{3}\) be the constants from Facts B.14 to B.15 (respectively), and let \(c\) be a large enough constant. Let \(t=c\cdot\left(\frac{\log(1/\delta)}{\varepsilon}+\frac{\big{(}k+\log\big{(} \frac{dk\log(1/\delta)}{\lambda\varepsilon}\big{)}\big{)}dk\log(1/\delta)}{ \lambda^{2}\varepsilon^{2}}\right)\), \(\eta=c_{1}\cdot\left(\sqrt{k}+\sqrt{\ln(qt)}\right)\) and \(q=c_{2}\cdot k\). Then for any \(n\geq 800k\ln(25k)\cdot t\), the mechanism \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathcal{W}_{d,k}\) defined by \(\mathsf{M}(X,\gamma):=\mathtt{EstSubspace}_{k,t}^{\mathtt{S}_{\mathtt{S}_{ \mathtt{A}_{\mathtt{E}_{\mathtt{E}_{\mathtt{E}_{\mathtt{E}_{\mathtt{E}_{ \mathtt{E}_{\mathtt{E}_{\mathtt{E}_{\mathtt{E}_{\mathtt{E}_{\mathtt{E}}}}}}}}}}}}} },d,k,q,\mathtt{c}=\sqrt{2}k\gamma_{\max}}(X)\) is an \((k,\lambda,\beta=0.8,\gamma_{\max}=\min\{\frac{1}{2t},\frac{6}{c_{3}\lambda} \})\)-strong-subspace-estimator._

Proof.: Fix \(X\in(\mathcal{S}_{d})^{n}\) with \(\frac{\sigma_{k+1}(X)}{\sigma_{k}(X)}\leq\gamma\leq\gamma_{\max}\) and let \(\Pi\in\mathcal{W}_{d,k}\) be the projection of the top-\(k\) rows subspace of \(X\). Consider a random execution of \(\mathsf{M}(X)\). Let \(\{\mathbf{\Pi}_{j}\}_{j=1}^{t},\{\mathbf{p}_{i}\}_{i=1}^{q},\{\mathbf{y}^{j}\}_ {j=1}^{t},\mathbf{z},\widetilde{\mathbf{P}}\)be (random variables of) the values of \(\{\Pi_{j}\}_{j=1}^{t},\{p_{i}\}_{i=1}^{q},\{\bm{y}^{j}\}_{j=1}^{t},z,\bar{P}\) in the execution, and let \(\widetilde{\bm{\Pi}}\) be the output. By Lemma C.4(1) (recall that \(\gamma_{\max}\leq\frac{1}{2t}\)) and the union bound,

\[\forall j\in[t]:\quad\Pr\Bigl{[}\|\Pi-\bm{\Pi}_{j}\|\leq 4 \sqrt{2t}\gamma\Bigr{]}\geq 0.99.\] (5)

Let \(\mathbf{a}_{j}=\mathds{1}\{\|\Pi-\bm{\Pi}_{j}\|\leq 4\sqrt{2t}\gamma\}\) (indicator random variable) and let \(\mathbf{a}=\sum_{j=1}^{t}\mathbf{a}_{j}\). As in Equation (4), the above yields that

\[\Pr[\mathbf{a}\geq 0.8t]\geq 0.95.\] (6)

In the following we assume that the event \(\mathbf{a}\geq 0.8t\) occurs. Let \(\mathbf{J}=\{j\in[t]\colon\mathbf{a}_{j}=1\}\). By Fact B.14 and the definition of \(\eta\) we obtain that

\[\Pr\Bigl{[}\forall i\in[q],j\in\mathbf{J}:\ \|(\Pi-\bm{\Pi}_{j}) \mathbf{p}_{i}\|_{2}\leq 4\sqrt{2t}\eta\gamma\Bigr{]}\geq 0.95,\]

In the following we assume that the above event occurs. This yields that

\[\forall i,j\in\mathbf{J}:\ \|\mathbf{y}_{i}-\mathbf{y}_{j}\|_{2} \leq 8\sqrt{2tk}\eta\gamma=\xi.\]

Furthermore, by the definition of \(t\) and \(\eta\), it holds that

\[t\geq c^{\prime}\cdot\left(\frac{\log(1/\delta)}{\varepsilon}+ \frac{\sqrt{dk\log(1/\delta)}}{\left(\frac{c_{3}\lambda}{150\eta\sqrt{t}} \right)\cdot\varepsilon}\right),\]

where \(c^{\prime}\) denotes the constant from Fact B.26. Therefore we obtain by Fact B.26 (FriendlyCore averaging) that

\[\Pr\Biggl{[}\left\|\mathbf{P}-\widetilde{\mathbf{P}}\right\|_{F} \leq\underbrace{\frac{c_{3}\lambda\sqrt{k}\gamma}{12}}_{\alpha} \Biggr{]}\geq 0.99,\]

where \(\mathbf{P}\) is the \(q\times d\) matrix whose rows are \(\Pi\mathbf{p}_{1},\ldots,\Pi\mathbf{p}_{q}\). By Fact B.15 we have that

\[\Pr\Bigl{[}\sigma_{k}(\mathbf{P})\geq c_{3}\sqrt{k}\Bigr{]}\geq 0.95,\]

and in the following we assume that the above event occurs (which in particular implies that \(Span(\mathbf{P}^{T})=Span(\Pi)\)). Finally, since \(2\alpha\leq\sigma_{k}(\mathbf{P})\) by assumption (and using \(\gamma_{\max}=\frac{6}{c_{3}\lambda}\)), we conclude by Proposition B.13 that

\[\left\|\bm{\Pi}-\widetilde{\bm{\Pi}}\right\|_{F}\leq 2 \sqrt{2}\cdot\frac{\alpha}{\sigma_{k}(P)-\alpha}\leq\lambda\gamma/2.\]

We therefore conclude the proof of the lemma by Proposition B.16. 

## Appendix D Lower Bounds

In this section, we prove our lower bounds. In Appendix D.1 we prove Theorem 1.8 (lower bound for weak estimators) and in Appendix D.2 we prove Theorem 1.9 (lower bound for strong estimators). Both lower bounds rely on the framework of Peter et al. (2024), described in Appendix B.8.5.

Throughout this section, recall that for \(d,k\in\mathbb{N}\) we denote by \(\mathcal{W}_{d,k}\) the set of all \(d\times d\) projection matrices of rank \(k\), and denote by \(\mathcal{P}_{d}\) the set of all \(d\times d\) permutation matrices.

### Weak Estimators

**Theorem D.1** (Restatement of Theorem 1.8).: _Let \(n,k,d\in\mathbb{N}\), \(\lambda\geq 1\), \(\beta\in(0,1]\) such that \(d\geq ck\) and \(\lambda^{2}\leq\frac{d}{ck\log k}\) for large enough constant \(c>0\), and \(n\) is a multiple of \(k\). If \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathcal{W}_{d,k}\) is a \((k,\lambda,\beta,\gamma_{\max}=\frac{1}{10^{\beta}\lambda^{2}})\)-weak subspace estimator and \(\mathsf{M}(\cdot,\gamma)\) is \(\left(1,\frac{\beta}{5nk}\right)\)-DP for every \(\gamma\in[0,1]\), then \(n\geq\Omega\biggl{(}\frac{\sqrt{kd}/\lambda}{\log^{1.5}(\frac{dk}{\lambda^{2}} )}\biggr{)}\)._Theorem 1.8 is an immediate corollary of Lemma B.34 (Framework for lower bounds) and the following Lemma D.2.

**Lemma D.2**.: _Let \(n,k,d,\lambda,\beta\) and \(\mathsf{M}\) as in Theorem D.1. Let \(\alpha=\frac{1}{5\cdot 10^{b}\lambda^{2}k}\), \(n_{0}=n/k\), \(\ell=2\cdot\left[\frac{1}{4}(1-\alpha)d\right]\), \(d_{0}=d-2\ell\), \(\mathcal{X}=\mathcal{S}_{d}\), \(\mathcal{Z}=[k]\times(\mathcal{P}_{d})^{k}\) and \(\mathcal{W}=\mathcal{W}_{d,k}\). Let \(\mathsf{G}\colon\{-1,1\}^{n_{0}\times d_{0}}\times\mathcal{Z}\to\mathcal{X}^{n}\) be Algorithm D.3, and let \(\mathsf{F}\colon\mathcal{Z}\times\mathcal{W}\to[-1,1]^{d_{0}}\) be Algorithm D.4. Then the triplet \((\mathsf{M},\mathsf{F},\mathsf{G})\) is \(\frac{0.8\beta}{k}\)-leaking (Definition B.33)._

Note that by Lemmas D.2 and B.34, we obtain that \(n_{0}\geq\Omega\Big{(}\frac{\sqrt{d_{0}}}{\log^{1.5}(d_{0}/\beta)}\Big{)}\), but since \(n_{0}=n/k\) and \(d_{0}=\Theta(\alpha d)=\Theta\big{(}\frac{d}{\lambda^{2}k}\big{)}\), the proof of Theorem D.1 follows. We next prove Lemma D.2.

**Algorithm D.3** (Algorithm G).:

_Parameters: \(n_{0},n,d_{0},d,\ell\in\mathbb{N}\)._

_Inputs: \(z=(s,(P_{1},\ldots,P_{k}))\) for \(s\in[k]\) and \(P_{1},\ldots,P_{k}\in\mathcal{P}_{d}\), and a matrix \(X\in\{-1,1\}^{n_{0}\times d_{0}}\)._

_Operation:_

1. _Sample_ \(A=(A_{1},\ldots,A_{k})\sim\mathcal{D}(n_{0},d_{0})^{k}\)_, and set_ \(A_{s}=X\)_._
2. _For_ \(t\in[k]\)_, compute_ \(B_{t}=\mathsf{PAP}_{n_{0},d_{0},\ell}(A_{t},P_{t})\in\{-1,1\}^{n_{0}\times d}\) _(Definition B.35), and let_ \(B\in\{-1,1\}^{n\times d}\) _be the vertical concatenation of_ \(B_{1},\ldots,B_{k}\)_._
3. _Output_ \(Y=\frac{1}{\sqrt{d}}B\in(\mathcal{S}_{d})^{n}\)_._

**Algorithm D.4** (Algorithm F).:

_Parameters: \(n_{0},n,d_{0},d,\ell\in\mathbb{N}\)._

_Inputs: \(z=(s,(P_{1},\ldots,P_{k}))\) for \(s\in[k]\) and \(P_{1},\ldots,P_{k}\in\mathcal{P}_{d}\), and a rank-\(k\) projection matrix \(\widetilde{\Pi}\in\mathcal{W}\) (which is the output of \(\mathsf{M}(Y,\;\gamma=\frac{1}{1000\lambda})\) )._

_Operation:_

1. _Compute a vector_ \(u=(u^{1},\ldots,u^{d})\in Span(\widetilde{\Pi}\cdot P_{s}^{T})\) _that maximizes_ \(\min\{\sum_{j=d_{0}+1}^{d_{0}+\ell/2}\mathsf{sign}(u^{j}),\;-\sum_{j=d_{0}+ \ell+1}^{d_{0}+3\ell/2}\mathsf{sign}(u^{j})\}\)_._
2. _Output_ \(q=\mathsf{sign}(u)^{1,\ldots,d_{0}}\in\{-1,1\}^{d_{0}}\)_._

**Algorithm D.4** (Algorithm F).:

#### d.1.1 Proving Lemma D.2

In the following, we define random variables \(\mathbf{X}\sim\mathcal{D}(n_{0},d_{0})\) (Definition B.30) and \(\mathbf{z}=(\mathbf{s},(\mathbf{P}_{1},\ldots,\mathbf{P}_{k}))\,\leftarrow\, \mathcal{Z}\), and consider a random execution of \(\mathsf{A}^{\mathsf{M},\mathsf{F},\mathsf{G}}(\mathbf{X})=\mathsf{F}(\mathbf{z },\mathsf{M}(\mathsf{G}(\mathbf{X},\mathbf{z})))\). Let \(\mathbf{B}_{1},\ldots,\mathbf{B}_{k},\mathbf{B},\mathbf{Y}\) be the values of \(B_{1},\ldots,B_{k}\in\{-1,1\}^{n_{0}\times d}\), \(B\in\{-1,1\}^{n\times d}\) and \(Y\in(\mathcal{S}_{d})^{n}\) in the execution of \(\mathsf{G}\), and let \(\mathbf{Y}_{1}=\frac{1}{\sqrt{d}}\mathbf{B}_{1},\ldots,\mathbf{Y}_{k}=\frac{ 1}{\sqrt{d}}\mathbf{B}_{k}\) (note that \(\mathbf{Y}\) is a vertical concatenation of \(\mathbf{Y}_{1},\ldots,\mathbf{Y}_{k}\)). Let \(\mathbf{u}\) be the value of \(u\in\mathcal{S}_{d}\) in the execution of \(\mathsf{F}\). For \(b\in\{-1,1\}\) let \(\mathbf{F}_{b}\) be the set of \(b\)-marked columns of \(\mathbf{B}_{\ast}\cdot\mathbf{P}_{T}^{T}\) (note that \(\mathbf{F}_{1}\) includes \(d_{0}+1,\ldots,d_{0}+\ell\) and \(\mathbf{F}_{-1}\) includes \(d_{0}+\ell+1,\ldots,d\)). Let \(\mathcal{H}_{1}=\{d_{0}+1,\ldots,d_{0}+\ell/2\}\subseteq\mathbf{F}_{1}\) and \(\mathcal{H}_{-1}=\{d_{0}+\ell+1,\ldots,d_{0}+3\ell/2\}\subseteq\mathbf{F}_{-1}\), and let \(\mathcal{H}=\mathcal{H}_{1}\cup\mathcal{H}_{-1}\). For \(t\in[k]\), define

\[\mathbf{v}_{t}=\frac{1}{\sqrt{2\ell}}\cdot(\underbrace{0\ldots,0}_{d_{0}}, \underbrace{1,\ldots,\ldots,\ldots,1}_{\ell},\underbrace{-1,\ldots,\ldots, \ldots,-1}_{\ell})\cdot\mathbf{P}_{t}\;\in\;\mathcal{S}_{d}\] (7)

The following claim holds under our assumption that \(\lambda^{2}\leq\frac{d}{ck\log k}\) for large enough constant \(c\).

**Claim D.5**.: _Let \(\gamma=\frac{1}{1000\lambda}\). It holds that_

\[\Pr\Biggl{[}\sum_{i=k+1}^{n}\sigma_{i}^{2}(\mathbf{Y})\leq\gamma^{2}\cdot \sigma_{k}^{2}(\mathbf{Y})\Biggr{]}\geq 0.9.\]Proof.: Recall that \(d=d_{0}+2\ell\) and \(\ell\geq\frac{1}{2}(1-\alpha)d\) for \(\alpha=\frac{1}{5\cdot 10^{8}\lambda^{2}k}\). First, note that

\[\Pr[\mathbf{v}_{1},\ldots,\mathbf{v}_{k}\text{ are linearly independent}]\geq 1-\left(2^{ -2\ell}+2^{-2\ell+1}+\ldots+2^{-2\ell+(k-2)}\right)\geq 0.99,\] (8)

where the last inequality holds since \(\ell\approx d/2\geq c\cdot k/2\) for large enough constant \(c>0\). Furthermore, note that for every \(s,t\in[k]\), \(2\ell\cdot\langle\mathbf{v}_{s},\mathbf{v}_{t}\rangle=\sum_{j\colon\text{sign} (\mathbf{v}_{s}^{j})=1}\text{sign}(\mathbf{v}_{t}^{j})-\sum_{j\colon\text{sign} (\mathbf{v}_{s}^{j})=-1}\text{sign}(\mathbf{v}_{t}^{j})\) where each sum has Hypergeometric distributions \(\mathcal{H}\mathcal{G}_{2\ell,0,\ell}\) (Definition B.5). Therefore by Fact B.6 and the union bound, it holds that

\[\Pr\biggl{[}\forall s,t\in[k]:|\langle\mathbf{v}_{s},\mathbf{v}_{t}\rangle| \leq O\biggl{(}\sqrt{\frac{\log k}{d}}\biggr{)}\biggr{]}\geq 0.99.\] (9)

(i.e., \(\mathbf{v}_{1},\ldots,\mathbf{v}_{k}\) are almost orthogonal).

In the following, we assume that the events in Equations (8) and (9) occur. Using the Gram-Schmidt process on \(\mathbf{v}_{1},\ldots,\mathbf{v}_{k}\), we obtain orthogonal basis \(\mathbf{u}_{1},\ldots,\mathbf{u}_{k}\) to \(Span\{\mathbf{v}_{1},\ldots,\mathbf{v}_{k}\}\) such that for every \(t\in[k]\), \(\mathbf{u}_{t}=\mathbf{v}_{t}+\lambda_{t-1}\mathbf{v}_{t-1}+\mathbf{w}_{t}\), where \(|\lambda_{t-1}|\leq O\biggl{(}\sqrt{\frac{\log k}{d}}\biggr{)}\) and \(\left\|\mathbf{w}_{t}\right\|_{2}\leq O\Bigl{(}\frac{\log k}{d}\Bigr{)}\) (holds by Proposition B.17). Recall that \(\mathbf{Y}\) is a vertical concatenation of \(\frac{1}{\sqrt{d}}\mathbf{B}_{1},\ldots,\frac{1}{\sqrt{d}}\mathbf{B}_{k}\) and for every \(t\in[k]\), the rows of \(\mathbf{B}_{t}\) are all in

\[\{-1,1\}^{d_{0}}\times(\underbrace{1,\ldots,1}_{\ell},\underbrace{-1,\ldots, -1}_{\ell})\cdot\mathbf{P}_{t}\;=\{-1,1\}^{d_{0}}\times(\underbrace{0,\ldots \ldots,0}_{2\ell})\cdot\mathbf{P}_{t}+\sqrt{\frac{2\ell}{d}}\cdot\mathbf{v}_{t}\]

Therefore, we obtain that

\[\left\|\mathbf{Y}\cdot\mathbf{u}_{t}\right\|_{2}^{2} \geq\left\|\mathbf{Y}_{t}\cdot\mathbf{u}_{t}\right\|_{2}^{2}\] (10) \[\geq\left(\sqrt{\frac{2\ell}{d}}\mathbf{v}_{t},\mathbf{u}_{t})^{2 }-\frac{d_{0}}{d}\right)\cdot n_{0}\] \[\geq\left((1-\alpha)\cdot\left(1-O\biggl{(}\frac{\log k}{d} \biggr{)}\right)^{2}-\alpha\right)\cdot n_{0}\] \[\geq(1-4\alpha)\cdot n_{0},\]

where the last inequality holds whenever \(\alpha\geq\Theta(\log k/d)\), which holds by the assumption on \(\lambda\). We therefore obtain that \(\sigma_{1}^{2}(\mathbf{Y}),\ldots,\sigma_{k}^{2}(\mathbf{Y})\geq(1-4\alpha) \cdot n_{0}\) which yields that \(\sum_{i=k+1}^{n}\sigma_{i}^{2}(\mathbf{Y})\leq n-k(1-4\alpha)\cdot n_{0}=4\alpha n\). Hence

\[\frac{\sum_{i=k+1}^{n}\sigma_{i}^{2}(\mathbf{Y})}{\sigma_{k}^{2}(\mathbf{Y})} \leq\frac{4\alpha n}{(1-4\alpha)\cdot\frac{n}{k}}=\frac{4\alpha k}{1-4\alpha} \leq\frac{1}{10^{6}\lambda^{2}}=\gamma^{2},\] (11)

where the second inequality holds since \(\alpha=\frac{1}{5\cdot 10^{6}\lambda^{2}k}\).

The following claim holds under our assumption that \(d\geq ck\) for large enough constant \(c>0\).

**Claim D.6**.: _It holds that_

\[\Pr\Bigl{[}\text{sign}(\mathbf{u})^{[d]\setminus\mathcal{H}}\text{ strongly-agrees with }\left(\mathbf{B}_{\mathbf{s}}\mathbf{P}_{\mathbf{s}}^{T}\right)^{[d]\setminus \mathcal{H}}\Bigr{]}\geq\frac{0.8\beta}{k}.\]

_where "strongly-agrees" is according to Definition B.36._

Proof.: In the following we assume that the \(0.9\) probability event in Claim D.5 occurs. Since \(\mathsf{M}\) is \((k,\lambda,\beta,\gamma_{\max}=\frac{1}{1000\lambda})\)-subspace estimator, it follows from Equation (11) that w.p. \(\beta\), the output \(\widetilde{\boldsymbol{\Pi}}\) of \(\mathsf{M}(\mathbf{Y})\) satisfy

\[\left\|\widetilde{\boldsymbol{\Pi}}\cdot\mathbf{Y}^{T}\right\|_{F}^{2}\geq \left\|\boldsymbol{\Pi}\cdot\mathbf{Y}^{T}\right\|_{F}^{2}-\frac{n}{1000},\] (12)where we denote by \(\mathbf{\Pi}\) the projection matrix onto \(Span\{\mathbf{v}_{1},\ldots,\mathbf{v}_{k}\}\) (defined in Equation (7)). In the following, we assume that the event in (12) occurs. This yields that there must exists \(\mathbf{t}\in[k]\) such that

\[\left\|\widetilde{\mathbf{\Pi}}\cdot\mathbf{Y}_{\mathbf{t}}^{T} \right\|_{F}^{2} \geq\left\|\mathbf{\Pi}\cdot\mathbf{Y}_{\mathbf{t}}^{T}\right\|_ {F}^{2}-\frac{n}{1000k}\] \[\geq\frac{2\ell}{d}\cdot\left\|\mathbf{v}_{\mathbf{t}}\right\|_ {2}^{2}\cdot\frac{n}{k}-\frac{n}{1000k}\] \[\geq(0.999-\alpha)\cdot\frac{n}{k}\]

Since \(\mathbf{s}\) (part of \(\bm{z}\)) is chosen at random and does not change the distribution of \(\mathbf{Y}\) (the input of the mechanism), w.p. \(1/k\) the above holds for \(\mathbf{t}=\mathbf{s}\), i.e.,

\[\left\|\widetilde{\mathbf{\Pi}}\cdot\mathbf{Y}_{\mathbf{s}}^{T} \right\|_{F}^{2}\geq(0.999-\alpha)\cdot\frac{n}{k}.\] (13)

In the following we assume that the \(1/k\)-probability event in Equation (13) occurs.

Recall that \(\mathbf{B}_{\mathbf{s}}=\sqrt{d}\cdot\mathbf{Y}_{\mathbf{s}}\), and let \(\widetilde{\mathbf{\Pi}}_{\mathbf{s}}=\widetilde{\mathbf{\Pi}}\cdot\mathbf{P} _{\mathbf{s}}^{T}\) and \(\mathbf{B}_{\mathbf{s}}^{\prime}=\mathbf{B}_{\mathbf{s}}\cdot\mathbf{P}_{ \mathbf{s}}^{T}\). It follows that

\[\left\|\widetilde{\mathbf{\Pi}}_{\mathbf{s}}\cdot(\mathbf{B}_{ \mathbf{s}}^{\prime})^{T}\right\|_{F}^{2} =d\cdot\left\|\widetilde{\mathbf{\Pi}}\cdot\mathbf{Y}_{\mathbf{s}}^{T} \right\|_{F}^{2}\geq(0.999-\alpha)\cdot\frac{dn}{k}\] (14)

In the following, define

\[\mathbf{v}=(\mathbf{v}^{1},\ldots,\mathbf{v}^{d})\in\{-1,0,1\}^{ d}\quad\text{where}\quad\mathbf{v}^{j}=\begin{cases}1&j\in\mathbf{F}_{1}\\ -1&j\in\mathbf{F}_{-1}\\ 0&\text{o.w.}\end{cases}.\] (15)

Note that each row \(i\) of \(\mathbf{B}_{\mathbf{s}}^{\prime}\) can be written as \(\bm{v}+\xi_{i}\) where \(\xi_{i}\in\{-1,0,1\}^{d_{0}}\times(\underbrace{0,\ldots,0}_{2\ell})\). This yields that

\[\left\|\widetilde{\mathbf{\Pi}}_{\mathbf{s}}\cdot\mathbf{v}^{T} \right\|_{2}^{2} =\frac{k}{n}\cdot\left\|\widetilde{\mathbf{\Pi}}_{\mathbf{s}}\cdot( \mathbf{B}_{\mathbf{s}}^{\prime})^{T}\right\|_{F}^{2}-\frac{k}{n}\sum_{i=1}^{ n/k}\Bigl{\|}\widetilde{\mathbf{\Pi}}_{\mathbf{s}}\cdot\xi_{i}^{T}\Bigr{\|}_{2}^{2}\] \[\geq(0.999-\alpha)d-d_{0}\geq(0.999-2\alpha)d\]

Now, since

\[\left\|\mathbf{v}\right\|_{2}^{2}=\langle\mathbf{v},\mathbf{v} \rangle=\langle\widetilde{\mathbf{\Pi}}_{t}\mathbf{v}^{T}+(I-\widetilde{ \mathbf{\Pi}}_{t})\mathbf{v}^{T},\widetilde{\mathbf{\Pi}}_{t}\mathbf{v}^{T}+( I-\widetilde{\mathbf{\Pi}}_{t})\mathbf{v}^{T}\rangle=\Bigl{\|}\widetilde{\mathbf{\Pi}}_{t} \mathbf{v}^{T}\Bigr{\|}_{2}^{2}+\Bigl{\|}(I-\widetilde{\mathbf{\Pi}}_{t}) \mathbf{v}^{T}\Bigr{\|}_{2}^{2},\]

we conclude that for \(\widetilde{\mathbf{v}}^{T}=\widetilde{\mathbf{\Pi}}_{t}\mathbf{v}^{T}\in Span (\widetilde{\mathbf{\Pi}}_{t})\):

\[\left\|\mathbf{v}-\widetilde{\mathbf{v}}\right\|_{2}^{2}=\left\| \mathbf{v}\right\|_{2}^{2}-\Bigl{\|}\widetilde{\mathbf{\Pi}}_{t}\mathbf{v}^{T }\Bigr{\|}_{2}^{2}\leq d-(0.999-2\alpha)d\leq\frac{d}{500}.\] (16)

We next define \((\mathcal{I},\eta)\)-_good_ vectors.

**Definition D.7**.: _We say that a vector \(\mathbf{w}\in\{-1,1\}^{d}\) is \((\mathcal{I},\eta)\)-good iff for \((1-\eta)\) fraction of the indices \(j\in\mathcal{I}\) it holds that \(\mathsf{sign}(\mathbf{w}^{j})=\mathsf{sign}(\mathbf{v}^{j})\) (for the \(\mathbf{v}\) defined in Equation (15))._

We use the following trivial fact:

**Observation D.8**.: _If \(\mathbf{w}\) is not \((\mathcal{I},\eta)\)-good, then \(\left\|\mathbf{w}-\mathbf{v}\right\|_{2}^{2}\geq\eta|\mathcal{I}|\)._Since for both \(b\in\{-1,1\}\), \(|\mathcal{H}_{b}|\geq\frac{1}{4}(1-\alpha)d\geq d/5\) and \(\|\mathbf{v}-\mathbf{\tilde{v}}\|_{2}^{2}\leq\frac{d}{500}\), Observation D.8 implies that \(\mathbf{\tilde{v}}\) is \((\mathcal{H}_{1},\eta)\)-good and \((\mathcal{H}_{-1},\eta)\)-good for \(\eta=\frac{1}{100}\). Therefore, the vector \(\mathbf{u}\) (computed in \(\mathsf{F}\)) is also \((\mathcal{H}_{1},\eta)\)-good and \((\mathcal{H}_{-1},\eta)\)-good.

In the following, we use similar arguments to Dwork et al. [2014] for claiming that because \(\mathbf{u}\) is good on half of the padding location, then it should also be good on the rest of the marked locations.

From the point of view of the algorithm \(\mathsf{M}\) (which does not know \(\mathbf{P}_{\mathbf{s}}\)), the locations in \(\mathcal{H}_{b}\) are indistinguishable from those in \(\mathbf{F}_{b}\setminus\mathcal{H}_{b}\). Therefore, for any point that is not \((\mathbf{F}_{b},3\eta)\)-good, the probability (taken over the random choice of \(\mathbf{P}_{\mathbf{s}}\)) that it is \((\mathcal{H}_{b},2\eta)\)-good is at most \(\exp(-\Omega(\eta^{2}d))\). Now let \(\mathbf{N}\) be an \((\eta\sqrt{d})\)-net of the \(\sqrt{d}\)-sphere in \(Span(\widetilde{\mathbf{\Pi}}_{\mathbf{s}})\) (Definition B.9). Taking a union bound over a \(\exp(O(k\log(1/\eta)))=\exp(O(k))\) points in \(\mathbf{N}\) (Fact B.10), and recall that \(d\geq ck\) for large enough constant \(c\), we conclude that except with probability \(\exp(O(k))\cdot\exp(-\Omega(\eta^{2}d))\leq 0.01\), any given vector in \(\mathbf{N}\) that is \((\mathcal{H}_{b},2\eta)\)-good is also \((\mathbf{F}_{b}\setminus\mathcal{H}_{b},4\eta)\)-good. Since \(\mathbf{u}\) is \((\mathcal{H}_{b},\eta)\)-good, then its nearest net point \(\mathbf{u}^{\prime}\) is \((\mathcal{H}_{b},2\eta)\)-good. Thus \(\mathbf{u}^{\prime}\) is \((\mathbf{F}_{b}\setminus\mathcal{H}_{b},4\eta)\)-good which implies that \(\mathbf{u}\) is \((\mathbf{F}_{b}\setminus\mathcal{H}_{b},5\eta)\)-good except w.p. \(\exp(-\Omega(\eta^{2}d))\leq 0.01\). But by definition of \(\mathbf{v}\), it perfectly agrees with the marked columns of \(\mathbf{B}_{\mathbf{s}}\cdot\mathbf{P}_{\mathbf{s}}^{T}\). Since \(5\gamma<0.1\) the above implies that \(\mathsf{sign}(\mathbf{u})^{\mathbf{F}_{b}\setminus\mathcal{H}_{b}}\) strongly-agrees (Definition B.36) with the matrix \(\big{(}\mathbf{B}_{\mathbf{s}}\cdot\mathbf{P}_{\mathbf{s}}^{T}\big{)}^{ \mathbf{F}_{b}\setminus\mathcal{H}_{b}}\) which implies that \(\mathsf{sign}(\mathbf{u})^{[d]\setminus\mathcal{H}_{b}}\) strongly-agrees with the matrix \(\big{(}\mathbf{B}_{\mathbf{s}}\cdot\mathbf{P}_{\mathbf{s}}^{T}\big{)}^{[d] \setminus\mathcal{H}_{b}}\), as required.

We now ready to prove the final claim that concludes the proof of Lemma D.2.

**Claim D.9**.: _It holds that_

\[\Pr_{r,r^{\prime}\leftarrow\{0,1\}^{m},\;X\sim\mathcal{D}}\big{[}\mathsf{A}^{ \mathsf{M}_{r},\mathsf{F},\mathsf{G}_{r^{\prime}}}(X)\text{ is strongly-correlated with }X\big{]}\geq\frac{0.8\beta}{k}.\]

Proof.: In the following we assume that the event from the statement of Claim D.6 occurs, and let \(\mathcal{H}=\mathcal{H}_{1}\cup\mathcal{H}_{-1}\). Define the permutation matrix \(\mathbf{P}^{\prime}\in\mathcal{P}_{d_{0}+\ell}\) that is obtained by removing the rows \(\mathcal{H}\) and the columns \(\mathbf{P}_{\mathbf{s}}(\mathcal{H})\) from \(\mathbf{P}_{\mathbf{s}}\) (i.e., \(\mathbf{P}^{\prime}\) is the permutation induced by \(\mathbf{P}_{\mathbf{s}}\) between \([d]\setminus\mathcal{H}\) and \([d]\setminus\mathbf{P}_{\mathbf{s}}(\mathcal{H})\)). Similarly, define the permutation matrix \(\mathbf{\overline{P}}^{\prime}\in\mathcal{P}_{\ell}\) that is obtained by removing the rows \(\overline{\mathcal{H}}=[d]\setminus\mathcal{H}\) and the columns \(\mathbf{P}_{\mathbf{s}}(\overline{\mathcal{H}})\) from \(\mathbf{P}_{\mathbf{s}}\) (i.e., \(\mathbf{\overline{P}}^{\prime}\) is the permutation induced by \(\mathbf{P}_{\mathbf{s}}\) between \(\mathcal{H}\) and \(\mathbf{P}_{\mathbf{s}}(\mathcal{H})\)). Note that \(\mathbf{P}^{\prime}\) is distributed uniformly over \(\mathcal{P}_{d_{0}+\ell}\) for any choice of \(\mathbf{\overline{P}}^{\prime}\). In the following, let \(\widehat{\mathbf{\Pi}}^{\prime}=\widehat{\mathbf{\Pi}}^{[d]\setminus\mathcal{H}}\), \(\mathbf{q}^{\prime}=\mathsf{sign}(\mathbf{u})^{[d]\setminus\mathcal{H}}\cdot \mathbf{P}^{\prime}\), and \(\mathbf{B}^{\prime}=\mathbf{B}_{\mathbf{s}}^{[d]\setminus\mathcal{H}}\). By Claim D.6 it holds that

\[\Pr[\mathbf{q}^{\prime}\text{ strongly-agrees with }\mathbf{B}^{\prime}]\geq\frac{0.8\beta}{k}.\] (17)

But note that \(\mathbf{B}^{\prime}=\mathsf{PAP}_{n_{0},d_{0},\ell/2}(\mathbf{X},\mathbf{P}^{ \prime})\) and also note that \(\mathbf{q}^{\prime}\) is just a function of \(\widetilde{\mathbf{\Pi}}^{\prime}\) and \(\mathbf{\overline{P}}^{\prime}\) (i.e., independent of \(\mathbf{P}^{\prime}\)) since it equals to \(\mathsf{sign}(\mathbf{w})^{\mathbf{\overline{P}}^{\prime}([d]\setminus \mathcal{H})}\) where \(\mathbf{w}\) is the vector in \(Span(\widetilde{\mathbf{\Pi}})\) that maximizes \(\min\{\sum_{j\in\overline{\mathbf{P}}^{\prime}(\mathcal{H}_{1})}\mathsf{sign}( \mathbf{w}^{j}),\;-\sum_{j\in\overline{\mathbf{P}}^{\prime}(\mathcal{H}_{-1})} \mathsf{sign}(\mathbf{w}^{j})\}\). Furthermore, note that \((\mathbf{q}^{\prime}\cdot(\mathbf{P}^{\prime})^{T})^{1,\ldots,d_{0}}=\mathbf{q}\), where \(\mathbf{q}\) is the final output of \(\mathsf{A}^{\mathsf{M},\mathsf{F},\mathsf{G}}(\mathbf{X})=\mathsf{F}(\mathbf{z}, \mathsf{M}(\mathsf{G}(\mathbf{X},\mathbf{z})))\). Thus by Lemma B.37 and Equation (17) we conclude that

\[\Pr_{r,r^{\prime}\leftarrow\{0,1\}^{m},\;X\sim\mathcal{D}}\big{[}\mathsf{A}^{ \mathsf{M}_{r},\mathsf{F},\mathsf{G}_{r^{\prime}}}(X)\text{ is strongly-correlated with }X\big{]}\geq\frac{0.8\beta}{k}.\]

### Strong Estimators

**Theorem D.10** (Restatement of Theorem 1.9).: _Let \(n,k,d\in\mathbb{N}\), \(\lambda\geq 1\), \(\beta\in(0,1]\) such that \(d\geq ck\) and \(\lambda^{2}\leq\frac{d}{c\log k}\) for large enough constant \(c>0\), and \(n\) is a multiple of \(k\). If \(\mathsf{M}\colon(\mathcal{S}_{d})^{n}\times[0,1]\to\mathbb{R}^{d\times d}\) is an \((k,\lambda,\beta,\gamma_{\max}=\frac{1}{10^{6}\lambda^{2}})\)-strong subspace estimator and \(\mathsf{M}(\cdot,\gamma)\) is \(\Big{(}1,\frac{\beta}{5nk}\Big{)}\)-DP for every \(\gamma\in[0,1]\), then \(n\geq\Omega\bigg{(}\frac{k\sqrt{d}/\lambda}{\log^{1.5}(\frac{dk}{\lambda\beta}) \sqrt{\log(dk)\log(2n/k)}}\bigg{)}\)._We prove Theorem D.10 using a similar technical lemma to Lemma D.2, but now since \(\mathsf{M}\) is a strong subspace estimator, we can use \(\alpha=\hat{\Theta}\big{(}\frac{1}{\lambda^{2}}\big{)}\) (rather than \(\Theta\big{(}\frac{1}{\lambda^{2}k}\big{)}\) as in Lemma D.2).

**Lemma D.11**.: _There exists large enough constant \(c>0\) such that the following holds: Let \(n,k,d,\lambda,\beta\) and \(\mathsf{M}\) as in Theorem D.10, let \(\alpha=\frac{1}{c\cdot\log(dk)\log(2n/k)\cdot\lambda^{2}}\), \(n_{0}=n/k\), \(\ell=2\cdot\lceil\frac{1}{4}(1-\alpha)d\rceil\), \(d_{0}=d-2\ell\), \(\mathcal{X}=\mathcal{S}_{d}\), \(\mathcal{Z}=[k]\times(\mathcal{P}_{d})^{k}\) and \(\mathcal{W}=\mathcal{W}_{d,k}\). Let \(\mathsf{G}\colon\{-1,1\}^{n_{0}\times d_{0}}\times\mathcal{Z}\to\mathcal{X}^{n}\) be Algorithm D.3, and let \(\mathsf{F}\colon\mathcal{Z}\times\mathcal{W}\to[-1,1]^{d_{0}}\) be Algorithm D.4. Then the triplet \((\mathsf{M},\mathsf{F},\mathsf{G})\) is \(\frac{0.8\beta}{k}\)-leaking (Definition B.33)._

By Lemmas D.11 and B.34, it holds that \(n_{0}\geq\Omega\Big{(}\frac{\sqrt{d_{0}}}{\log^{1.3}(d_{0}/\beta)}\Big{)}\). The proof of Theorem D.10 now follows since \(n_{0}=n/k\) and \(d_{0}\approx\alpha d\) for the \(\alpha\) defined in the lemma.

#### d.2.1 Proving Lemma D.11

As in the proof of Lemma D.2, we define random variables \(\mathbf{X}\sim\mathcal{D}(n_{0},d_{0})\) (Definition B.30) and \(\mathbf{z}=(\mathbf{s},(\mathbf{P}_{1},\ldots,\mathbf{P}_{k}))\leftarrow \mathcal{Z}\), and consider a random execution of \(\mathsf{A}^{\mathsf{M},\mathsf{F},\mathsf{G}}(\mathbf{X})=\mathsf{F}(\mathbf{ z},\mathsf{M}(\mathsf{G}(\mathbf{X},\mathbf{z})))\). Let \(\{\mathbf{A}_{t}\},\{\mathbf{B}_{t}\},\mathbf{Y}\) be the values of \(\{A_{t}\},\{B_{t}\},Y\in(\mathcal{S}_{d})^{n}\) in the execution of \(\mathsf{G}\), and recall that \(\mathbf{Y}\) is a vertical concatenation of \(\mathbf{Y}_{1},\ldots,\mathbf{Y}_{k}\) where \(\mathbf{Y}_{t}=\frac{1}{\sqrt{d}}\mathbf{B}_{t}\).

The only difference from proving Lemma D.2 is to prove a different version of Claim D.5 that only considers the gap between \(\sigma_{k}\) and \(\sigma_{k+1}\) (which will meet the requirements of the strong estimator \(\mathsf{M}\)). Namely, is suffices to prove the following claim:

**Claim D.12**.: _It holds that_

\[\Pr[\sigma_{k+1}(\mathbf{Y})\leq\gamma\cdot\sigma_{k}(\mathbf{Y})]\geq 0.9,\]

_for \(\gamma=\frac{1}{1000\lambda}\)._

Proof of Claim D.12.: As in Equation (7), for \(t\in[k]\) we define

\[\mathbf{v}_{t}=\frac{1}{\sqrt{2\ell}}\cdot(\underbrace{0\ldots,0}_{d_{0}}, \underbrace{1,\ldots\ldots,1}_{\ell},\underbrace{-1,\ldots\ldots,-1}_{\ell}) \cdot\mathbf{P}_{t}\;\in\;\mathcal{S}_{d}\] (18)

Let \(\mathbf{E}=Span\{\mathbf{v}_{1},\ldots,\mathbf{v}_{k}\}\). Note that by construction, \(\{\mathbf{v}_{t}\},\mathbf{E}\) are independent of \(\{\mathbf{A}_{t}\}\).

Similarly to Equation (9) it holds that

\[\Pr\Bigg{[}\forall s,t\in[k]:|\langle\mathbf{v}_{s},\mathbf{v}_{t}\rangle| \leq O\Bigg{(}\sqrt{\frac{\log k}{d}}\Bigg{)}\Bigg{]}\geq 0.99.\] (19)

This yields (using similar steps as in the proof of Claim D.5) that w.p. \(0.98\), \(\dim(\mathbf{E})=k\) and every unit vector \(\mathbf{u}\in\mathbf{E}\) has \(\|\mathbf{Y}\mathbf{u}\|_{2}^{2}\geq(1-4\alpha)\frac{n}{k}\). This in particular implies that \(\sigma_{k}^{2}(\mathbf{Y})\geq(1-4\alpha)\frac{n}{k}\).

Our goal is to prove that w.p. \(0.99\) it also holds that \(\sigma_{k+1}^{2}(\mathbf{Y})\leq\tilde{O}(\alpha)\frac{n}{k}\). Let \(\mathbf{E}\) be the orthogonal subspace to \(\mathbf{E}\). Our goal is reduced to showing that there exists a constant \(c\) such that

\[\Pr\Big{[}\forall u\in\mathbf{\bar{E}}\cap\mathcal{S}_{d}:\quad\|\mathbf{Y}u\| _{2}^{2}\leq\alpha\cdot c\log(k/\alpha)\log(2n/k)\cdot\frac{n}{k}\Big{]}\geq 0.99.\] (20)

Given that the event in Equation (20) holds we conclude that \(\sigma_{k+1}^{2}(\mathbf{Y})\leq\alpha\cdot c\log(k/\alpha)\log(2n/k)\cdot \frac{n}{k}\) and hence

\[\frac{\sigma_{k+1}^{2}(\mathbf{Y})}{\sigma_{k}^{2}(\mathbf{Y})}\leq\frac{ \alpha\cdot c\log(k/\alpha)\log(2n/k)\cdot\frac{n}{k}}{(1-4\alpha)\cdot\frac{n} {k}}\leq\frac{1}{10^{6}\lambda^{2}}=\gamma^{2},\]

where the last inequality holds by taking

\[\alpha=\frac{1}{2\cdot 10^{6}\cdot c\log(k/\alpha)\cdot\log(2n/k)\cdot\lambda^{2}}.\]Note that for every \(\mathbf{u}\in\mathbf{E}\cap\mathcal{S}_{d}\) is holds that

\[\left\|\mathbf{Y}\mathbf{u}\right\|_{2}^{2}=\sum_{t=1}^{k}\left\|\mathbf{Y}_{t} \mathbf{u}\right\|_{2}^{2}=\frac{1}{d}\sum_{t=1}^{k}\left\|\mathbf{A}_{t} \mathbf{u}\right\|_{2}^{2},\]

where the last equality holds since \(\mathbf{u}\) is orthogonal to \(\mathbf{v}_{1},\ldots,\mathbf{v}_{k}\). Therefore, we can prove Equation (20) by proving that there exists a constant \(c^{\prime}\) such that

\[\forall u\in\mathcal{S}_{d}:\quad\Pr\Biggl{[}\frac{1}{d}\cdot \sum_{t=1}^{k}\left\|\mathbf{A}_{t}u\right\|_{2}^{2}>\alpha\cdot c^{\prime} \log(k/\alpha)\log(2n/k)\cdot\frac{n}{k}\Biggr{]}\leq\exp(-d\ln(3k/\alpha)-10).\] (21)

Given that Equation (21) holds, we prove the claim using a net argument. By taking an \(\exp(d\ln(3k/\alpha))\)-size \(\sqrt{\alpha/k}\)-net of \(\mathcal{S}_{d}\) (Fact B.10), Equation (20) follows by Equation (21) and the union bound over all the net points, which concludes the proof of the claim.

In the following we focus on proving Equation (21). Fix a columns vector \(u\in\mathcal{S}_{d}\). Recall that \(\mathbf{A}_{t}\sim\mathcal{D}(n_{0},d_{0})\) (Definition B.30), and \(\mathbf{A}_{t}\) is located in \(d_{0}\) random columns out of \(d\), which are the columns \(\mathbf{J}=\mathbf{P}_{t}([d_{0}])\). Let \(\mathbf{a}_{t,i}\in\{\pm\frac{1}{\sqrt{d}}\}^{d_{0}}\) be the \(i^{\mathrm{th}}\) row of \(\mathbf{A}_{t}\). By Definition B.30, the coordinates of \(\mathbf{a}_{t,i}\) are i.i.d. Bernoulli distribution over \(\{-1,1\}\), each takes \(1\) w.p. \(1/2\) and \(-1\) w.p. \(1/2\). Therefore by Fact B.2 it holds that

\[\forall\xi\geq 0:\quad\Pr\bigl{[}\langle\mathbf{a}_{i,t},u \rangle^{2}\geq\xi\bigr{]} =\mathrm{E}_{\mathbf{J}}\bigl{[}\Pr\bigl{[}\langle\mathbf{a}_{i,t },u_{\mathbf{J}}\rangle^{2}\geq\xi\bigr{]}\bigr{]}\leq\mathrm{E}_{\mathbf{J}} \Biggl{[}2\exp\Biggl{(}-\frac{d\xi}{2\left\|u_{\mathbf{J}}\right\|_{2}^{2}} \Biggr{)}\Biggr{]}\] \[\leq 2\exp\Biggl{(}-\frac{d\xi}{\mathrm{E}\Bigl{[}2\left\|u_{ \mathbf{J}}\right\|_{2}^{2}\Bigr{]}}\Biggr{)}\leq 2\exp\biggl{(}-\frac{d\xi}{2 \alpha}\biggr{)},\]

where the first inequality holds by Fact B.2, the second one holds by Jensen's inequality (and since the function \(f(x)=e^{-1/x}\) is concave), and the last one hold since \(\mathrm{E}\Bigl{[}\left\|u_{\mathbf{J}}\right\|_{2}^{2}\Bigr{]}=\frac{d_{0}}{d}\leq\alpha\). By the union bound over the \(n/k\) rows of \(\mathbf{A}_{t}\) we obtain that

\[\forall\xi\geq 0:\quad\Pr\biggl{[}\left\|\mathbf{A}_{t}w\right\|_{2}^{2} \geq\frac{\xi n}{k}\biggr{]}\leq\frac{2n}{k}\cdot\exp\biggl{(}-\frac{d\xi}{2 \alpha}\biggr{)},\]

or equivalently

\[\forall\xi\geq 0:\quad\Pr\Bigl{[}\left\|\mathbf{Y}_{t}u\right\|_{2}^{2} \geq\xi\Bigr{]}=\Pr\Bigl{[}\left\|\mathbf{A}_{t}w\right\|_{2}^{2}\geq\xi \Bigr{]}\leq\frac{2n}{k}\cdot\exp\biggl{(}-\frac{dk}{2\alpha n}\cdot\xi\biggr{)}.\] (22)

In the following, let \(\mathbf{b}_{t}=\left\|\mathbf{Y}_{t}u\right\|_{2}^{2}\), and define \(\mathbf{b}_{t}^{\prime}=\mathbf{b}_{t}-\mathrm{E}[\mathbf{b}_{t}]\), and \(\mu=\frac{2\alpha n\ln(2n/k)}{dk}\). First, note that

\[\mathrm{E}[\mathbf{b}_{t}] =\int_{0}^{\infty}\Pr[\mathbf{b}_{t}>\xi]d\xi=\mu+\int_{\mu}^{ \infty}\Pr[\mathbf{b}_{t}>\xi]d\xi\] \[\leq\mu+\int_{\mu}^{\infty}\frac{2n}{k}\cdot\exp\biggl{(}-\frac{ dk}{2\alpha n}\cdot\xi\biggr{)}d\xi\] \[=\mu+\underbrace{\biggl{[}-\frac{2n}{k}\cdot\frac{2\alpha n}{dk} \cdot\exp\biggl{(}-\frac{dk}{2\alpha n}\cdot\xi\biggr{)}\biggr{]}_{\mu}^{ \infty}}_{\leq\frac{2\alpha n}{dk}}\] \[\leq 2\mu.\]In addition, it holds that

\[\mathrm{E}\left[\exp\!\left(\frac{\left|\mathbf{b}_{t}^{\prime} \right|}{8\mu}\right)\right] =\int_{0}^{\infty}\Pr\!\left[\exp\!\left(\frac{\left|\mathbf{b}_{t}^ {\prime}\right|}{8\mu}\right)>\xi\right]\!d\xi\] \[\leq 3/2+\int_{3/2}^{\infty}\Pr[\left|\mathbf{b}_{t}^{\prime} \right|>8\mu\ln(\xi)]d\xi\] \[=3/2+\int_{3/2}^{\infty}(\Pr[\mathbf{b}_{t}>8\mu\ln(\xi)+ \mathrm{E}[\mathbf{b}_{t}]]+\Pr[\mathbf{b}_{t}<-8\mu\ln(\xi)+\mathrm{E}[ \mathbf{b}_{t}]])d\xi\] \[\leq 3/2+\int_{3/2}^{\infty}\!\left(\Pr[\mathbf{b}_{t}^{\prime} >8\mu\ln(\xi)]+\underbrace{\Pr[\mathbf{b}_{t}<-8\mu\ln(3/2)+2\mu]}_{0}\right)\!d\xi\] \[\leq 3/2+\int_{3/2}^{\infty}\frac{2n}{k}\cdot\exp\!\left(-\frac{ dk}{2\alpha n}\cdot 8\mu\ln(\xi)\right)\!d\xi\] \[=3/2+\int_{3/2}^{\infty}\xi^{-8}d\xi\] \[\leq 2.\]

Namely, \(\mathbf{b}_{t}^{\prime}\) is a Sub-Exponential random variable (Definition B.7) with \(\left\|\mathbf{b}_{t}^{\prime}\right\|_{\phi_{1}}\leq 8\mu\). Since \(\{\mathbf{b}_{t}^{\prime}\}\) are independent, each has zero mean, we obtain by Fact B.8 that

\[\forall\xi\geq 0:\quad\Pr\!\left[\sum_{t=1}^{k}\mathbf{b}_{t}\geq 2k\mu+\xi \right]\leq\Pr\!\left[\sum_{t=1}^{k}\mathbf{b}_{t}^{\prime}\geq\xi\right]\leq 2 \exp\!\left(-\Omega\!\left(\min\!\left(\frac{\xi^{2}}{k64\mu^{2}},\;\frac{\xi} {8\mu}\right)\right)\right)\!.\]

We now take \(\xi=c\cdot\mu d\ln(k/\alpha)\geq c\alpha\cdot\log(k/\alpha)\log(2n/k)\cdot\frac {n}{k}\) for large enough constant \(c\). Recall that by our assumption on \(d\) it holds that \(\xi\geq 4k\mu\). Hence

\[\Pr\!\left[\sum_{t=1}^{k}\left\|\mathbf{Y}_{t}u_{t}\right\|_{2}^ {2}\geq\xi\right] \leq\Pr\!\left[\sum_{t=1}^{k}\mathbf{b}_{t}\geq 2k\mu+\xi/2\right]\] \[\leq\exp(-15d\cdot\ln(k/\alpha)),\] \[\leq\exp(-d\cdot\ln(3k/\alpha)-10),\]

where the second inequality holds assuming that \(c\) is large enough. This concludes the proof of Equation (21) and therefore the proof of the lemma. 

## Appendix E Broader Impact

In this work we develop algorithms that maintain the differential privacy of the input points. When the points represent individuals, our work helps to maintain the privacy of those individuals.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: Upper bounds, lower bounds, and experiments are provided in Appendices C and D and Section 4 (respectively). Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: We discuss the limitations in Section 5. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes]Justification: Full proofs are provided in Appendices C and D. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: This information is disclosed in Section 4. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?Answer: [Yes] Justification: The Python code is provided in the supplementary material along with a README file. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: All the details are given in Section 4. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: We mentioned in Section 4 that we perform \(30\) repetitions for generating each graph point which represents the trimmed average of values between the \(0.1\) and \(0.9\) quantiles. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: We mentioned in Section 4 that all experiments were tested on a MacBook Pro Laptop with 8-core Apple M1 CPU with 16GB RAM. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: We only perform experiments on synthetic datasets that do not cause any harm. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: Appendix E. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: We mentioned in Section 4 that we use the Python implementation of Tsfadia et al. [2022] that is publicly available in https://media.icml.cc/Conferences/ICML2022/supplementary/tsfadia22a-supp.zip and we cite them as required. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.

* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.