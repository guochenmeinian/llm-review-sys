# Learning and Collusion in Multi-unit Auctions+
Footnote â€ : Authors are listed in alphabetical order. This work was done in part while the authors were visiting the Simons Institute for the Theory of Computing. Simina was supported in part by NSF CAREER grant CCF-2238372.

Simina Branzei

Purdue University

Mahsa Derakhshan

Northeastern University

Negin Golrezaei

MIT

Yanjun Han

New York University

###### Abstract

In a carbon auction, licenses for CO2 emissions are allocated among multiple interested players. Inspired by this setting, we consider repeated multi-unit auctions with uniform pricing, which are widely used in practice. Our contribution is to analyze these auctions in both the offline and online settings, by designing efficient bidding algorithms with low regret and giving regret lower bounds. We also analyze the quality of the equilibria in two main variants of the auction, finding that one variant is susceptible to collusion among the bidders while the other is not.

## 1 Introduction

In a multi-unit auction, a seller brings multiple identical units of a good to a group of players (buyers) interested in purchasing the items. Due to the complexity and depth of the model, the multi-unit auction has been explored in a significant volume of research [14, 1, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9] and recommended as a lens to the entire field of algorithmic mechanism design [16]. The prior literature has often focused on understanding the equilibria of the auction under various solution concepts and designing revenue or welfare maximizing one-shot mechanisms.

We consider the setting where each player \(i\) has a value \(v_{i,j}\) for receiving a \(j\)-th unit in their bundle, which is reported to the auctioneer in the form of a bid \(b_{i,j}\). After receiving the bids, the auctioneer computes a price \(p\) per unit, then sorts the bids in descending order and allocates the \(j\)-th unit to the player that submitted the \(j\)-th highest bid, charging them \(p\) for the unit. The price \(p\) is set so that all units are sold and the resulting allocation has the property that each player gets their favorite bundle given their preferences.

This allocation rule represents the well-known _Walrasian mechanism_ in the multi-unit setting: compute the market (aka competitive or Walrasian) equilibrium with respect to the reported valuations. The template for the mechanism is: elicit the valuations from the buyers and then assign a set of prices to the goods such that when each buyer takes their favorite bundle of goods at the given prices, the market clears, i.e. all goods are sold and there is no excessive demand for any good (see, e.g., [1]). Due to the strong fairness and efficiency properties of the market equilibrium, the resulting allocation is envy-free with respect to the reported valuations. A strand of research concentrated on achieving fair pricing in auctions, which often involves setting uniform prices for identical units [10].

Repeated auctions take place in many real world settings, such as when allocating licenses for carbon (CO2 emissions) [1], ads on online platforms [1, 2], U.S. Treasury notes to investors or trade exchanges over the internet [13]. Repeated mechanisms often give rise to complex patterns of behavior. For example, the bidders may use the past transaction prices as a way of discovering the valuations of the competing bidders, or engage in collusion using bid rotation

[MISSING_PAGE_FAIL:2]

**Example 1**.: _Let \(K=3\) and \(n=2\). Suppose the valuations are \(\mathbf{v}_{1}=(5,2)\) and \(\mathbf{v}_{2}=(4,1)\). If the players submit bids \(\mathbf{b}_{1}=(2,1)\) and \(\mathbf{b}_{2}=(3,2)\), the bid are sorted in the order \((b_{2,1},b_{1,1},b_{2,2},b_{1,2})\). Then the allocation is \(x_{1}=1\) and \(x_{2}=2\)._

* _Under the_ \(K\)_-th price auction, the price is set to_ \(p=b_{2,2}=2\)_. The utilities of the players are_ \(u_{1}(\mathbf{b})=V_{1}(1)-p=5-2=3\) _and_ \(u_{2}(\mathbf{b})=V_{2}(2)-2\cdot p=(4+1)-2\cdot 2=1\)_._
* _Under the_ \((K+1)\)_-st price auction, the price is set to_ \(p=b_{1,2}=1\)_. The utilities of the players are_ \(u_{1}(\mathbf{b})=V_{1}(1)-p=5-1=4\) _and_ \(u_{2}(\mathbf{b})=V_{2}(2)-2\cdot p=(4+1)-2\cdot 1=3\)_._

**Repeated setting.** We consider a repeated setting, where the auction is run multiple times among the same set of players, who can adjust their bids based on the outcomes from previous rounds.

Formally, in each round \(t=1,2,\ldots,T\), the next steps take place:

* The auctioneer announces \(K\) units for sale. Each player \(i\in[n]\) submits bid vector \(\mathbf{b}^{t}_{i}=(b^{t}_{i,1},\ldots,b^{t}_{i,K})\) privately to the auctioneer, where \(b^{t}_{i,j}\) is player \(i\)'s bid for a \(j\)-th unit at time \(t\). Then the auctioneer runs the auction with bids \(\mathbf{b}^{t}=(\mathbf{b}^{t}_{1},\ldots,\mathbf{b}^{t}_{n})\) and reveals information (feedback) about the outcome to the players. We consider two feedback models for the information revealed at the end of round \(t\):
* _Full information:_ All the bids \(\mathbf{b}^{t}\) are public knowledge.
* _Bandit feedback:_ The price \(p(\mathbf{b}^{t})\) is the only public knowledge; additionally, each player \(i\) privately learns their own allocation \(x_{i}(\mathbf{b}^{t})\).

Thus the allocation at time \(t\) solely depends on the bids submitted by players in round \(t\), excluding any prior rounds. 3

Footnote 3: For example, consider \(K=2\) units and \(n=2\) players. Suppose that in round \(t=5\), player \(1\) submits the bid vector \(b^{5}_{1}=(4,2)\) and player \(2\) submits \(b^{5}_{2}=(5,3)\). The auctioneer sorts these bids in decreasing order, obtaining the vector \((5,4,3,2)\). Then the allocation in round \(5\) is to give the first unit to player \(1\) and the second unit to player \(2\); the allocation disregards any events from preceding rounds.

### Our Results

The next sections summarize our results for both the \(K\)-th and \((K+1)\)-st price variants.

#### 1.2.1 Offline Setting

In the offline setting, we are given a player \(i\) with valuation \(\mathbf{v}_{i}\) and a history \(H_{-i}=(\mathbf{b}^{1}_{-i},\ldots,\mathbf{b}^{T}_{-i})\) containing the bids submitted by the other players in past auctions. Here we restrict the bidding space to a discrete domain \(\mathbb{D}=\{k\cdot\varepsilon\mid k\in\mathbb{N}\}\), for some \(\varepsilon>0\).

The goal is to find a fixed bid vector \(\mathbf{b}^{*}_{i}=(b^{*}_{i,1},\ldots,b^{*}_{i,K})\) that maximizes player \(i\)'s cumulative utility on the data set given by the history \(H_{-i}\), that is, \(\mathbf{b}^{*}_{i}=\arg\max_{\mathbf{\beta}\in\mathbb{D}^{K}}\ \sum_{t=1}^{T}u_{i}( \mathbf{\beta},\mathbf{b}^{t}_{-i})\,.\)

The offline problem is challenging because the decision (bid) space is exponentially large and hence naively experimenting with every possible bid vector leads to impractical algorithms.

We overcome this challenge by relying on the structural properties of the offline problem. At a high level, we carefully design a weighted directed acyclic graph (DAG) and identify a bijective map between paths from source to sink in the graph and bid profiles of player \(i\). Since a maximum weight path in a DAG can be found in polynomial time, this yields a polynomial time algorithm for computing an optimum bid vector.

**Theorem 1** (informal).: _Computing an optimum bid vector for one player in the offline setting is equivalent to finding a maximum-weight path in a DAG and can be solved in polynomial time._

Theorem 1 applies to both versions of the auction, with \(K\)-th and \((K+1)\)-st highest price.

#### 1.2.2 Online Setting

In the online setting, the players run learning algorithms to update their bids as they participate in the auction over time. The first scenario we consider is that of full information feedback, where at the end of each round \(t\) the auctioneer makes public all the bids \(\mathbf{b}^{t}\) submitted in that round.

Building on the offline analysis, we design an efficient online learning algorithm for bidding, which guarantees low regret for each player using it. The main idea is to run multiplicative weight updates, where the experts are paths in the DAG from the offline setting. Each such path corresponds to a bid profile for the learner. A challenge is that the number of paths in the graph (and so experts) is exponential. Nevertheless, we can achieve a polynomial runtime by representing the experts implicitly, using a type of weight pushing algorithm based on the method of path kernels [14].

**Theorem 2** (Full information feedback, upper bound).: _For each player \(i\) and time horizon \(T\), there is an algorithm for bidding in the repeated auction with full information feedback that runs in time \(O(T^{2})\) and guarantees the player's regret is bounded by \(O(v_{i,1}\cdot\sqrt{TK^{3}\log T})\)._

To the best of our knowledge, our paper is the first to connect the path kernel setting with auctions and obtain efficient algorithms for learning in auctions via this connection.

We also consider bandit feedback, which limits the amount of information the players learn about each other: at the end of each round the auctioneer announces publicly only the resulting price, and then privately tells each player their allocation. Bandit feedback could be relevant for reducing the amount of collusion among the players in repeated auction environments [13].

**Theorem 3** (Bandit feedback, upper bound).: _For each player \(i\) and time horizon \(T\), there is an algorithm for bidding in the repeated auction with bandit feedback that runs in \(O(KT+K^{-5/4}T^{7/4})\) and guarantees the player's regret is bounded by \(O(v_{i,1}\cdot\min\left\{\sqrt{T^{3}K^{7}\log T},KT\right\})\)._

Although our bidding policy is similar to the EXP3-type algorithm in [10], and our computational efficiency relies on the path kernel methods in [14], a major difference is that our edge weights are _heterogeneous_, i.e. the weights of different edges could be of different scales. To circumvent this issue, we need to use a different estimator for the weight under bandit feedback which in turn also changes the technical analysis.

We complement the upper bounds with the following regret lower bound, where the construction of the hard instance relies heavily on the specific structure of our auction format.

**Theorem 4** (Lower bound, full information and bandit feedback).: _Let \(K\geq 2\). Suppose the auction is run for \(T\) rounds. Then for each strategy of player \(i\), under both full information and bandit feedback, there exists a bid sequence \(\{\mathbf{b}_{t-i}^{T}\}_{t=1}^{T}\) by the other players such that the expected regret of player \(i\) is at least \(c\cdot v_{i,1}K\sqrt{T}\), where \(c>0\) is an absolute constant._

Theorems 2, 3, and 4 apply to both variants of the auction (with \(K\)-th and \((K+1)\)-st highest price).

#### 1.2.3 Equilibrium Analysis

We also analyze the quality of the Nash equilibria reached in the worst case in the static version of the auction, as they naturally apply to the empirical distribution of joint actions when the players use sub-linear regret learning algorithms.

The \((K+1)\)-st price auction has been observed to have low or even zero revenue equilibria [15, 16, 17, 18]. With \(n>K\) hungry players, the next phenomena occur:

* _in the \((K+1)\)-st price auction:_ every allocation \(\mathbf{z}\) that allocates all the units can be implemented in a pure Nash equilibrium \(\mathbf{b}\) with price \(\varepsilon\), for every small enough \(\varepsilon\geq 0\).
* _in the \(K\)-th price auction:_ no pure Nash equilibrium with arbitrarily low price exists.

Our contribution is to show that the zero-price equilibria of the \((K+1)\)-st highest price auction are very stable. We do this by considering the core solution concept, which models how groups of players can coordinate.

In our setting, a strategy profile is _core-stable_ if no group \(S\) of players can deviate by simultaneously changing their strategies such that each player in \(S\) weakly improves their utility _and_ the improvement is strict for at least one player in \(S\). The players outside \(S\) are assumed to have neutral reactions to the deviation, that is, they keep their strategy profiles unchanged. This is consistent with the Nash equilibrium solution concept, where only the deviating player changes their strategy.

A body of literature studied the core in auctions when the auctioneer can collude together with the bidders (see, e.g., [1]). However, as is standard in mechanism design, it is also meaningful to consider the scenario where the auctioneer sets the auction format and then the bidders can strategize and potentially collude among themselves, without the auctioneer; this setting is our focus.

First, we consider the core without transfers, where a strategy profile is simply a bid profile \(\mathbf{b}\).

**Theorem 5** (Core without transfers).: _Consider \(K\) units and \(n>K\) hungry players. The core without transfers of the \((K+1)\)-st auction can be characterized as follows:_

* _every bid profile_ \(\mathbf{b}\) _that is core-stable has price zero (i.e._ \(p(\mathbf{b})=0\)_);_
* _for every allocation_ \(\mathbf{z}\)_, there is a core-stable bid profile_ \(\mathbf{b}\) _with price zero that implements_ \(\mathbf{z}\) _(i.e._ \(\mathbf{x}(\mathbf{b})=\mathbf{z}\) _and_ \(p(\mathbf{b})=0\)_)._

If a bid profile \(\mathbf{b}\) is core-stable, then it is also a Nash equilibrium, for the simple reason that if no group of players can deviate simultaneously from \(\mathbf{b}\), then the group consisting of one player cannot find an improving deviation either. Thus Theorem 5 says that the equilibria with price zero are the only ones that remain stable when also allowing deviations by groups of players. Moreover, the theorem also says there are many inefficient core-stable equilibria, all with price zero.

Second, we also consider the core with transfers, where the players can make monetary transfers to each other. A strategy profile in this setting is given by a pair \((\mathbf{b},\mathbf{t})\), where \(\mathbf{b}\) is a bid profile and \(\mathbf{t}\) is a profile of monetary transfers, such that \(t_{i,j}\geq 0\) is the monetary transfer (payment) of player \(i\) to player \(j\) (e.g., player \(i\) could pay player \(j\) so that \(j\) keeps its bids low).

**Theorem 6** (Core with transfers).: _Consider \(K\) units and \(n>K\) hungry players. The core with transfers of the \((K+1)\)-st auction can be characterized as follows._

* _Let_ \((\mathbf{b},\mathbf{t})\) _be an arbitrary tuple of bids and transfers that is core stable. Then the allocation_ \(\mathbf{x}(\mathbf{b})\) _maximizes social welfare, the price is zero (i.e._ \(p(\mathbf{b})=0\)_), and there are no transfers between the players (i.e._ \(\mathbf{t}=0\)_)._

To see why Theorem 6 holds, if the price is positive at some strategy profile, the players with "highest values" can pay the other players to lower their bids. When the price reaches zero, they can start withdrawing the payments. Thus the only strategy profiles in the core with transfers are those where the players with "highest values" win and pay zero. The difference from Theorem 5 is that transfers allow the players with highest values to force getting their desired items at price zero, which they cannot enforce without transfers. Nevertheless, even without transfers, the price remains zero.

Remarks on collusion.Given that the zero price equilibria of the \((K+1)\)-st price auction are very stable and easy to find, one can expect they can be determined by the bidders, for example in settings with few bidders who know each other. These equilibria can be easily implemented in repeated settings once the bidders agree on their strategies.

Strikingly, these zero price equilibria have in fact been observed empirically in repeated auctions for fishing quotas in the Faroe Islands, where even inexperienced bidders were able to collude and enforce them; see details in [18]. In the carbon setting, the Northeast US auction is based on the \((K+1)\)-st price format [19] and has very low prices as well.

In contrast, the \(K\)-th price auction format does not have any Nash equilibria with price zero, let alone core-stable ones. Thus the \(K\)-th price auction format may be preferable to the \((K+1)\)-st price auction in settings with high stakes, such as selling rights for carbon emissions. Another remedy, also discussed in [18], is to make the number of units a random variable.

## 2 Related Work

Our work is related to the rich literature on combinatorial auctions (e.g., [13, 14, 15]) and more specifically auctions for identical goods, which are widely used in practice in various settings: Treasury Auctions [19, 14], Procurement Auctions [1], Wholesale Electricity Markets [12, 13, 14], Carbon Auctions [15, 16, 17]. The two most prevalent multi-unit auctions are uniform price auctions and pay-as-bid auctions that are widely studied in the literature either empirically (e.g., [1, 1, 18, 19]) or theoretically under the classical Bayesian setting (e.g., [1, 17, 18]). In particular, there have been several studies that aim to compare uniform price auctions versus pay-as-bid auctions (e.g.,[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) in terms of revenue and welfare under Nash equilibria, and the possibility of collusion. Our work contributes to this literature by studying uniform price auctions the angle of designing bidding algorithms for the players.

Designing learning algorithms in auctions has attracted significant attention in recent years. Several papers study the problem of designing learning/bandit algorithms to optimize reserve prices in auctions over time (e.g., [14, 15, 16, 17, 18, 19, 20, 21]). There are papers that have focused on designing bandit algorithms to optimize bidding strategies in single-unit second price and first price auctions (e.g., [23, 24, 25, 26, 27, 28, 29, 30, 31]). Prior to our work, such problem was not studied for multi-unit uniform-price auctions.

Leveraging structural information in designing bandit algorithms has been the topic of the rich literature, which includes linear reward structures [1, 15, 16, 17], Lipschitz reward structures [18, 19], convex reward distribution structure [20], and combinatorial structures [1, 13, 14, 15, 16, 17, 18, 19, 20]. Our work is closest to the works that aim to exploit combinatorial structures. Within this literature, several papers leverage DP-based or MDP-based structures (e.g., [24, 25, 26]).

The multi-unit auction setting was studied in a large body of literature on auctions [1, 1, 1, 17, 18, 19], where the focus has been on designing truthful auctions with good approximations to some desired objective, such as the social welfare or the revenue.

Uniform pricing represents a type of fair pricing, since when everyone gets charged the same price per unit, no bidder envies another bidder's allocation. Fairness is an important property that is at odds with maximizing revenue, since for the purpose of improving revenue the auctioneer is better off charging higher prices to the buyers that show more interest in the goods. However, there is evidence that buyers are unhappy with discriminatory prices (see, e.g., [1]), which led to a body of literature focused on designing fair auction mechanisms [1, 1, 19, 18, 19, 20]. Collusion in auctions was also studied both experimentally and theoretically in various models (e.g., [12, 17, 18]).

## 3 Offline Setting

In the offline setting, we are given a player \(i\) with valuation \(\mathbf{v}_{i}\) and a history \(H_{-i}=(\mathbf{b}_{-i}^{1},\ldots,\mathbf{b}_{-i}^{T})\) with the bids of other players in rounds \(1\) through \(T\). We assume the bids are restricted to a discrete domain \(\mathbb{D}=\{k\cdot\varepsilon\mid k\in\mathbb{N}\}\), for some \(\varepsilon>0\). The goal is to find an optimum fixed bid vector in hindsight: \(\mathbf{b}_{i}^{*}=\arg\max_{\mathbf{\beta}\in\mathbb{D}^{K}}\sum\limits_{t=1}^{T}u _{i}(\mathbf{\beta},\mathbf{b}_{-i}^{t}),\) where we recall that \(u_{i}(\mathbf{\beta},\mathbf{b}_{-i}^{t})\) is the utility of player \(i\) at the bid profile \((\mathbf{\beta},\mathbf{b}_{-i}^{t})\). We will see the maximum in the definition of \(\mathbf{b}_{i}^{*}\) is well defined since there is an optimum bid vector \(\mathbf{\beta}\) with entries at most \(\varepsilon\) above the maximum historical bid.

For any \(\varepsilon>0\), the optimal solution on the discrete domain \(\mathbb{D}\) also yields an \((\varepsilon\cdot K)\)-optimal strategy on the continuous domain. The offline problem we study here has some resemblance to the problems studied in [17, 19, 20]. There, the goal is to optimize reserve prices in VCG auctions while having access to a dataset of historical bids.4

Footnote 4: [17] also presents an online version of their offline algorithms under full information feedback; see also [17] for an online version of [17]â€™s algorithm for both full information and bandit settings using Blackwell approachability [10].

To design a polynomial time algorithm for solving the offline problem, we define a set \(\mathcal{S}_{i}\) of "candidate" bids for player \(i\), which has polynomial size in the history, player \(i\)'s valuation, and \(1/\varepsilon\):

\[\mathcal{S}_{i}=\left\{0\right\}\cup\left\{b_{j,k}^{t}\mid j\in[n]\setminus\{ i\},k\in[K]\right\}\cup\left\{b_{j,k}^{t}+\varepsilon\mid j\in[n]\setminus\{i\},k \in[K]\right\}. \tag{1}\]

**Observation 1**.: _Player \(i\) has an optimum bid vector \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\in\mathbb{D}^{K}\) with \(\beta_{j}\in\mathcal{S}_{i}\) for all \(j\in[K]\), where \(\mathcal{S}_{i}\) is defined in equation (1)._

The proof of Observation 1 is simple and deferred to Appendix A. Next we construct a directed acyclic graph (DAG) \(G_{i}\) that will be used to compute an optimum bid vector for player \(i\).

**Definition 1** (The graph \(G_{i}\)).: _Given valuation \(\mathbf{v}_{i}\) of a player \(i\), history \(H_{-i}=(\mathbf{b}_{-i}^{1},\ldots,\mathbf{b}_{-i}^{T})\), \(\varepsilon>0\), and set \(\mathcal{S}_{i}\) from (1), define a graph \(G_{i}\) with the following features._

**Vertices**.: _Create a vertex_ \(z_{s,j}\) _for each_ \(s\in\mathcal{S}_{i}\) _and_ \(j\in[K]\)_. We say vertex_ \(z_{s,j}\) _is in layer_ \(j\)_. Add source_ \(z_{-}\) _and sink_ \(z_{+}\)_._
**Edges**.: _For each index_ \(j\in[K-1]\) _and pair of bids_ \(r,s\in\mathcal{S}_{i}\) _with_ \(r\geq s\)_, create a directed edge from vertex_ \(z_{r,j}\) _to vertex_ \(z_{s,j+1}\)_. Moreover, add edges from source_ \(z_{-}\) _to each node in layer_ \(1\) _and from each node in layer_ \(K\) _to the sink_ \(z_{+}\)_._
**Edge weights**.: _For each edge_ \(e=(z_{r,j},z_{s,j+1})\) _or_ \(e=(z_{r,K},z_{+})\)_, let_ \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\in\mathcal{S}_{i}^{K}\) _be a bid vector with_ \(\beta_{j}=r\) _and_ \(\beta_{j+1}=s\) _(we define_ \(s=0\) _if_ \(j=K\)_). For each_ \(t\in[T]\)_, let_ \(\mathbf{h}^{t}=(\mathbf{\beta},\mathbf{b}^{t}_{-i})\)_. Define the weight of edge_ \(e\) _as_

\[w_{e}=\sum_{t=1}^{T}\mathbb{1}_{\{z_{i}:(\mathbf{h}^{t})\geq j\}} \left(v_{i,j}-r\right)+j\Big{[}\mathbb{1}_{\{z_{i}(\mathbf{h}^{t})>j\}}\left(r -s\right)+\mathbb{1}_{\{z_{i}(\mathbf{h}^{t})=j\}}\left(r-p(\mathbf{h}^{t}) \right)\Big{]},\] (2) _recalling that_ \[p(\mathbf{h}^{t})\] _and_ \[\mathbf{x}(\mathbf{h}^{t})\] _are the price and allocation at_ \[\mathbf{h}^{t}\] _, respectively_ 5_. The edges incoming from_ \[z_{-}\] _have weight zero._ Footnote 5: That is, \(x_{k}(\mathbf{h}^{t})\) is the number of units received by player \(k\) at allocation \(\mathbf{x}(\mathbf{h}^{t})\).

A pictorial illustration of the graph \(G_{i}\) is displayed in Figure 1.

At a first glance, it may seem as though the weight \(w_{e}\) of an edge \(e\) depends on the whole bid vector \(\mathbf{\beta}\) since we use the value of \(x_{i}(\mathbf{h}^{t})\) in its definition. However, this is not the case. Meaning that, this formula gives us the same value for any choice of \(\mathbf{\beta}\) that satisfies \(\beta_{j}=r\) and \(\beta_{j+1}=s\). This is due to the fact that the values of variables \(\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})\geq\}}\), \(\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})>j\}}\), and \(\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})=j\}}\) can be determined only knowing the values of \(\beta_{j+1}\) and \(\beta_{j}\) (without knowing the rest of the vector \(\mathbf{\beta}\)).

We will show that computing an optimum strategy for the player is equivalent to finding a maximum-weight path in the DAG \(G_{i}\) from Definition 1.

**Theorem 1** (formal version).: _Suppose we are given a number \(n\) of players, number \(K\) of units, valuation \(\mathbf{v}_{i}\) of player \(i\), discretization level \(\varepsilon>0\), and bid history \(H_{-i}=(\mathbf{b}^{1}_{-i},\ldots,\mathbf{b}^{T}_{-i})\) by players other than \(i\). Then an optimum bid vector for player \(i\) can be computed in polynomial time in the input parameters._

The proof of Theorem 1 is in Appendix A, together with the other omitted proofs of this section.

At a high level, for any bid vector \(\mathbf{\beta}\), we first write the cumulative utility of player \(i\) when playing \(\mathbf{\beta}\) while the others play according to \(\mathbf{b}^{t}_{-i}\). Then observe the cummulative utility can be rewritten as a sum of \(K\) terms, so that each term only depends on \(j\), \(\beta_{j}\), and \(\beta_{j+1}\). Create a layered DAG as in Definition 1, where the weight of edge \((\beta_{j},j)\) to \((\beta_{j+1},j+1)\) is the \(j\)-th term of the sum above, with special handling for edges involving the source or the sink. The entire graph can be computed in polynomial time.

Then the proof shows there is a bijection between the set of bid vectors of the player and the set of paths from the source to the sink in the graph. Thus the solution to the offline problem is obtained by computing a maximum weight path in the graph and returning the corresponding bid vector.

The algorithm for the offline problem is summarized in the next figure.

Figure 1: Example of DAG as in Definition 1. Here, we have \(K=4\) units and the set of candidate bids for player \(i\) is \(\mathcal{S}_{i}=\{0,1,2\}\). The graph has a source \(z_{-}\), a sink \(z_{+}\), and nodes \(z_{r,j}\) for all \(r\in\mathcal{S}_{i}\) and \(j\in[4]\). Edges are of the form \((z_{r,j},z_{s,j+1})\) for all \(j<4\) and \(r,s\in\mathcal{S}_{i}\) with \(r\geq s\). There are also edges from the source \(z_{-}\) to nodes \(z_{j,1}\) and from nodes \(z_{j,4}\) to the sink \(z_{+}\)\(\forall\)\(j\in\mathcal{S}_{i}\).

**Input:** Player \(i\) with valuation \(\mathbf{v}_{i}=(v_{i,1},\ldots,v_{i,K})\), a history \(H_{-i}=(\mathbf{b}^{1}_{-i},\ldots,\mathbf{b}^{T}_{-i})\) of bids submitted by players other than \(i\), and a grid \(\mathbb{D}=\{k\cdot\varepsilon\mid k\in\mathbb{N}\}\) with allowed bid values.

**Output:**\(\mathbf{b}^{*}_{i}=\arg\max_{\boldsymbol{\beta}\in\mathbb{D}^{K}}\sum_{t=1}^{T}u_{ i}(\boldsymbol{\beta},\mathbf{b}^{t}_{-i})\).

* Compute set \(\mathcal{S}_{i}\) as defined in equation (1). By Observation 1, player \(i\) has an optimum bid vector \(\mathbf{b}^{*}_{i}\) with \(b^{*}_{i,j}\in\mathcal{S}_{i}\) for each \(j\in[K]\).
* Construct directed acyclic graph \(G_{i}\) as in Definition 1. By Theorem 1, there is a bijective map between paths from the source to the sink in \(G_{i}\) and bid vectors \(\boldsymbol{\beta}\in\mathcal{S}_{i}\) of player \(i\).
* Compute a maximum-weight path in graph \(G_{i}\) and output the corresponding bid vector.

```
algorithm1: Optimum Strategy for the Offline Problem.
```

## 4 Online Setting

In the online setting, we consider the repeated auction where in each round \(t\) the auctioneer announces \(K\) units for sale. Then the players privately submit the bids \(\mathbf{b}^{t}\) and the auctioneer computes the outcome. At the end of round \(t\), the auctioneer gives _full information_ or _bandit_ feedback. The information available to player \(i\) at the beginning of each round \(t\) is the history:

\(H^{t-1}_{i}=(\mathbf{b}^{1}_{i},\cdots,\mathbf{b}^{t-1}_{i})\cup H^{t-1}_{-i}\), where 6

Footnote 6: We omit the allocation information in the history, for it is not informative when other players are adversarial: from the price information, player \(i\) knows her own allocation; treating all other players as a giant adversarial player, that player gets the rest of the allocation.

\[H^{t-1}_{-i}=\begin{cases}\big{(}\mathbf{b}^{1}_{-i},\cdots,\mathbf{b}^{t-1}_{ -i}\big{)}&\text{in the full information setting},\\ \big{(}p(\mathbf{b}^{1}),\cdots,p(\mathbf{b}^{t-1})\big{)}&\text{in the bandit setting}. \end{cases}\]

A pure _strategy_ for player \(i\) at time \(t\) is a function \(\pi^{t}_{i}:H^{t-1}_{i}\rightarrow\mathbb{R}^{K}\), where \(H^{t-1}_{i}\) is the history available to player \(i\) at the beginning of round \(t\). Thus the pure strategy tells player \(i\) what bid vector to submit next given the information observed by the player about the previous rounds. A mixed strategy is a probability distribution over the set of pure strategies. Consequently, the bid vector \(\mathbf{b}^{t}_{i}\) submitted by player \(i\) at time \(t\) is the realization of the mixed strategy \(\pi^{t}_{i}(H^{t-1}_{i})\). We denote by \(\pi_{i}=(\pi^{1}_{i},\cdots,\pi^{T}_{i})\) the overall strategy of player \(i\) over the entire time horizon.

Regret.From now on we fix an arbitrary player \(i\). Given a bidding strategy \(\pi_{i}\) of player \(i\), the regret of the player is defined with respect to a history \(H^{T}_{-i}\) of bids by other players:

\[\text{Reg}_{i}(\pi_{i},H^{T}_{-i})=\max_{\boldsymbol{\beta}\in \mathcal{S}^{K}_{i}} \sum_{t=1}^{T}\sum_{j=1}^{K}\big{(}v_{i,j}-p(\boldsymbol{\beta}, \mathbf{b}^{t}_{-i})\big{)}\cdot\mathbb{1}_{\{x_{i}(\boldsymbol{\beta}, \mathbf{b}^{t}_{-i})\geq j\}}\] \[-\sum_{t=1}^{T}\mathbb{E}_{\mathbf{b}^{t}_{i}\sim\pi^{t}_{i}(H^{t- 1}_{i})}\left[\sum_{j=1}^{K}\big{(}v_{i,j}-p(\mathbf{b}^{t})\big{)}\cdot \mathbb{1}_{\{x_{i}(\mathbf{b}^{t})\geq j\}}\right]\,. \tag{3}\]

For the purpose of equipping player \(i\) with a bidding algorithm, we will think of the other players as adversarial, and aim to achieve small regret regardless of \(H^{T}_{-i}\). A way to interpret the regret is that player \(i\) is competing against an oracle that (a) has the perfect knowledge of the history of bids, but (b) is restricted to submit a time-invariant bid \(\boldsymbol{\beta}\). The regret quantifies how much worse player \(i\) does compared to the oracle.

Before studying the feedback models in greater detail, we replace the set \(\mathcal{S}_{i}\) of candidate bids for player \(i\) from equation (1) of the offline section by a coarser set \(\mathcal{S}_{\varepsilon}=\{\varepsilon,2\varepsilon,\cdots,\lceil v_{i,1}/ \varepsilon\rceil\varepsilon\}\).

### Full information

In the full information scenario, at the end of each round \(t\) the auctioneer announces the bids \(\mathbf{b}^{t}\) submitted by the players in round \(t\). We define a graph \(G^{t}\) that forms the basis of the learningalgorithm for the player. The graph \(G^{t}\) is the same as in the offline setting (Definition 1), except for the next differences:

* The vertex \(z_{s,j}\) is indexed by \(s\in\mathcal{S}_{e}\), instead of \(\mathcal{S}_{i}\);
* The edge weights are based only on the current round \(t\), rather than the sum over all rounds in the offline setting. More specifically, for edge \(e=(z_{r,j},z_{s,j+1})\) or \(e=(z_{r,K},z_{+})\), set \[w^{t}(e)=\mathbbm{1}_{\{x_{i}(\mathbf{h}^{t})\geq j\}}\left(v_{i,j}-r\right)+j \Big{[}\mathbbm{1}_{\{x_{i}(\mathbf{h}^{t})>j\}}\left(r-s\right)+\mathbbm{1}_{ \{x_{i}(\mathbf{h}^{t})=j\}}\left(r-p(\mathbf{h}^{t})\right)\Big{]}\,.\] (4) The formal definition is deferred to Definition 2 in Appendix B. This DAG structure enables us to formulate the learning problem as an online maximum weight path problem, and therefore treat each path as an expert and apply online learning algorithms to compete with the best expert. Theorem 2 shows such an algorithm (Algorithm 2) works for both \(K\)-th and \((K+1)\)-st price auctions.

```
Input: time horizon \(T\), valuation \(\mathbf{v}_{i}=(v_{i,1},\cdots,v_{i,K})\) of the player \(i\) Output: bid vectors \((\mathbf{b}^{t}_{i},\cdots,\mathbf{b}^{T}_{i})\).  Set the resolution parameter \(\varepsilon=v_{i,1}\sqrt{K/T}\), and learning rate \(\eta=\sqrt{\log T}/(v_{i,1}\sqrt{KT})\). For every \(t=1,\cdots,T\): * Construct a graph \(G^{t}\) as in Definition 2, initially without weights on the edges. * If \(t=1\): for each edge \(e\), initialize an edge probability as \[\phi^{1}(e)=\begin{cases}1/|\mathcal{S}_{e}|&\text{if }e=(z_{-},z_{r,1});\\ 1/|\{r^{\prime}\in\mathcal{S}_{e}\mid r^{\prime}\leq r\}|&\text{if }e=(z_{r,j},z_{s,j+1}),r \geq s;\\ 1&\text{if }e=(z_{r,K},z_{+}).\end{cases}\] * If \(t\geq 2\): * starting from \(\Gamma^{t-1}(z_{+})=1\), recursively compute in the bottom-up order \[\Gamma^{t-1}(u)=\sum_{v:e=(u,v)\in E}\phi^{t-1}(e)\cdot\exp(\eta\cdot w^{t-1}( e))\cdot\Gamma^{t-1}(v),\quad\forall u\in V(G^{t});\] * for each edge \(e\), update the edge probability \[\phi^{t}(e)=\phi^{t-1}(e)\cdot\exp\left(\eta\cdot w^{t-1}(e)\right)\cdot\frac {\Gamma^{t-1}(v)}{\Gamma^{t-1}(u)},\quad\text{for all }e=(u,v)\in E(G^{t})\,.\] (5) * For \(j=1,2,\cdots,K\): sample \(b^{t}_{i,j}\sim\phi^{t}(z_{b^{t}_{i,j-1},j-1},\cdot)\), where \(z_{b^{t}_{i,0},0}:=z_{-}\). * The player observes \(\mathbf{b}^{t}_{-i}\), and sets the edge weights \(w^{t}(e)\) in \(G^{t}\) according to (4).
```

### Bandit feedback

The next theorem presents an upper bound on the regret under the bandit feedback. Similar to the full-information case, the algorithm we design works for both the \(K\)-th and \((K+1)\)-st price auctions.

**Theorem 3**.: _For each player \(i\) and time horizon \(T,\) there is an algorithm for bidding in the repeated auction with bandit feedback that runs in \(O(KT+K^{-5/4}T^{7/4})\) and guarantees the player's regret is bounded by \(O(v_{i,1}\cdot\min\{\sqrt[4]{T^{3}K^{7}\log T},KT\})\)._

We describe the algorithm below, while the proof of the theorem can be found in Appendix B.

The bidding strategy and its efficient implementation are the same as those in the proof of Theorem 2, with the only difference as follows. Under bandit feedback, we are not able to compute \(w^{t}(e)\) for every edge \(e\) at the end of time \(t\); instead, we are able to compute \(w^{t}(e)\) for every edge on the chosen path \(\mathfrak{p}^{t}\) at time \(t\). This observation motivates us to use the next unbiased estimator \(\widehat{w}^{t}(e)\):

\[\widehat{w}^{t}(e)=\overline{w}(e)-\frac{\overline{w}(e)-w^{t}(e)}{p^{t}(e)} \mathbb{1}_{\{e\in\mathfrak{p}^{t}\}},\qquad\text{ with }p^{t}(e)=\sum_{\mathfrak{p}:e \in\mathfrak{p}}P^{t}(\mathfrak{p}), \tag{6}\]

where \(P^{t}\) is the player's action distribution over paths, and for each edge \(e\):

\[\overline{w}(e)=\begin{cases}v_{i,1}-r+j(r-s)&\text{if }e=(z_{r,j},z_{s,j+1}); \\ v_{i,1}-r+Kr&\text{if }e=(z_{r,K},z_{+});\\ 0&\text{if }e=(z_{-},z_{r,1}).\end{cases}\]

The resulting algorithm is exactly the same as Algorithm 2, with the only difference being that all \(w^{t}\) are replaced by \(\widehat{w}^{t}\), with an additional step (6) for the computation of \(\widehat{w}^{t}\).

The regret analysis will appear similar to that in [1], but a key difference is that we no longer have \(w^{t}(e)\leq v_{i,1}\) for every edge \(e\) in our setting. Instead, we apply an edge-dependent upper bound \(w^{t}(e)\leq\overline{w}(e)\), and use the property that \(\sum_{e\in\mathfrak{p}}\overline{w}(e)\leq Kv_{i,1}\) for every path \(\mathfrak{p}\) from source to sink.

### Regret lower bounds

The following theorem establishes an \(\Omega(K\sqrt{T})\) lower bound on the minimax regret of a single bidder in the full information scenario. Clearly the same lower bound also holds for bandit feedback.

**Theorem 4** (restated, formal).: _Let \(K\geq 2\). For any policy \(\pi_{i}\) used by player \(i\), there exists a bid sequence \(\{\mathbf{b}^{t}_{-i}\}_{t=1}^{T}\) for the other players such that the expected regret in (3) satisfies \(\mathbb{E}[\operatorname{Reg}_{i}(\pi_{i},\{\mathbf{b}^{t}_{-i}\}_{t=1}^{T}) ]\geq cv_{i,1}K\sqrt{T},\) where \(c>0\) is an absolute constant._

The proof of Theorem 4 is in Appendix B. The idea is to employ the celebrated Le Cam's two-point method, but the construction of the hard instance is rather delicate to reflect the regret dependence on \(K\). We also remark that this regret lower bound still exhibits a gap compared with the current upper bound in Theorem 2, while it seems hard to extend the current two-point construction to Fano-type lower bound arguments. It is an outstanding question to close this gap.

## 5 Concluding Remarks

Several open questions arise from this work. For example, is the regret \(\Theta(K\sqrt{T})\) in both the full information and bandit setting? In the full information setting, the challenge in obtaining an algorithm with regret \(O(K\sqrt{T})\) is that the expert distribution is not a product distribution over the layers, but rather only close to a product. Furthermore, how does offline and online learning take place in repeated auctions when the units are not identical, the valuations do not necessarily exhibit diminishing returns, or the pricing rule is different (e.g. in the first price setting)?

## References

* [ABL14] J-Y. Audibert, S. Bubeck, and G. Lugosi. Regret in online combinatorial optimization. _Mathematics of Operations Research_, 39(1):31-45, 2014.
* [AC05] L. Ausubel and P. Cramton. Dynamic auctions in procurement. _Handbook of Procurement_, 2005.
* [ACP\({}^{+}\)14] L. Ausubel, P. Cramton, M. Pycia, M. Rostek, and M. Weretka. Demand reduction and inefficiency in multi-unit auctions. _The Review of Economic Studies_, 81(4):1366-1400, 2014.
* [AHP13] E. Anderson, P. Holmberg, and A. Philpott. Mixed strategies in discriminatory divisible-good auctions. _The RAND Journal of Economics_, 44(1):1-32, 2013.
* [Aoy03] M. Aoyagi. Bid rotation and collusion in repeated auctions. _Journal of Economic Theory_, 112(1):79-105, 2003.
* [AR08] E. Abernethy, J.and Hazan and A. Rakhlin. Competing in the dark: An efficient algorithm for bandit linear optimization. In _COLT_, pages 263-273, 2008.
* [AS08] E. Anderson and D. Simester. Price stickiness and customer antagonism. _Available at SSRN 1273647_, 2008.
* [AVGN17] E. Areyan Viqueira, A. Greenwald, and V. Naroditskiy. On approximate welfare- and revenue-maximizing equilibria for size-interchangeable bidders. In _AAMAS_, page 1466-1468, 2017.
* [BB01] J. Bower and D. Bunn. Experimental analysis of the efficiency of uniform-price versus discriminatory auctions in the england and wales electricity market. _Journal of economic dynamics and control_, 25(3-4):561-592, 2001.
* 884, 2015.
* [BCI\({}^{+}\)05] C. Borgs, J. Chayes, N. Immorlica, M. Mahdian, and A. Saberi. Multi-unit auctions with budget-constrained bidders. In _ACM EC_, pages 44-51, 2005.
* [BF19] S. Branzei and A. Filos-Ratsikas. Walrasian dynamics in multi-unit markets. In _AAAI_, pages 1812-1819. AAAI Press, 2019.
* [BFMZ17] S. Branzei, A. Filos-Ratsikas, P. B. Miltersen, and Y. Zeng. Walrasian pricing in multi-unit auctions. In _MFCS_, volume 83 of _LIPIcs_, pages 80:1-80:14, 2017.
* [BGM\({}^{+}\)22] S. Balseiro, N. Golrezaei, M. Mahdian, V. Mirrokni, and J. Schneider. Contextual bandits with cross-learning. _Mathematics of Operations Research_, 2022.
* [BGN03] Y. Bartal, R. Gonen, and N. Nisan. Incentive compatible multi unit combinatorial auctions. In _TARK_, pages 72-87, 2003.
* [BILL23] M. Babaioff, N. Immorlica, Y. Li, and B. Lucier. Making auctions robust to aftermarkets. In _ITCS_, 2023.
* [Bla56] D. Blackwell. An analog of the minimax theorem for vector payoffs. _Pacific Journal of Mathematics_, 6(1):1-8, 1956.
* [BLNL14] M. Babaioff, B. Lucier, N. Nisan, and R. P. Leme. On the efficiency of the walrasian mechanism. In _ACM EC_, pages 783-800. ACM, 2014.
* [BMSW18] M. Braverman, J. Mao, J. Schneider, and M. Weinberg. Selling to a no-regret buyer. In _ACM EC_, page 523-538. Association for Computing Machinery, 2018.
* 1469, 2019.
* [BN07] L. Blumrosen and N. Nisan. Combinatorial auctions. _Algorithmic game theory_, 267:300, 2007.
* 133, 1963. Published in Russian.
* [BR11] K. Bhawalkar and T. Roughgarden. Welfare guarantees for combinatorial auctions with item bidding. In _SODA_, 2011.
* [BS00] K. Binmore and J. Swierzbinski. Treasury auctions: Uniform or discriminatory? _Review of Economic Design_, 5:387-410, 2000.
* [BW20] J. Burkett and K. Woodward. Uniform price auctions with a last accepted bid pricing rule. _Journal of Economic Theory_, 185(10):49-54, 2020.
* [BZ93] K. Back and J. Zender. Auctions of divisible goods: On the rationale for the treasury experiment. _The Review of Financial Studies_, 6(4):733-764, 1993.
* [CAEFF16] V. Cohen-Addad, A. Eden, M. Feldman, and A. Fiat. The invisible hand of dynamic market pricing. In _ACM EC_, pages 383-400, 2016.
* [CBL06] N. Cesa-Bianchi and G. Lugosi. _Prediction, learning, and games_. Cambridge university press, 2006.
* [CBL12] N. Cesa-Bianchi and G. Lugosi. Combinatorial bandits. _Journal of Computer and System Sciences_, 78(5):1404-1422, 2012.
* [CCDP21] E. Calvano, G. Calzolari, V. Denicolo, and S. Pastorello. Algorithmic collusion with imperfect monitoring. _International Journal of Industrial Organization_, 79:102712, 2021.
* [CD17] Y. Cai and C. Daskalakis. Learning multi-item auctions with (or without) samples. In _FOCS_, 2017.
* [CK02] P. Cramton and S. Kerr. Tradeable carbon permit auctions. _Energy Policy_, 30:333-345, 2002.
* [CSS07] Peter Cramton, Yoav Shoham, and Richard Steinberg. An overview of combinatorial auctions. _ACM SIGecom Exchanges_, 7(1):3-14, 2007.
* [CTPL15] R. Combes, M. Sadegh Talebi, A. Proutiere, and M. Lelarge. Combinatorial bandits revisited. In _NeurIPS_, pages 2116-2124, 2015.
* [CWY13] W. Chen, Y. Wang, and Y. Yuan. Combinatorial multi-armed bandit: General framework and applications. In _ICML_, pages 151-159, 2013.
* [DGJ\({}^{+}\)22] Y. Deng, N. Golrezaei, P. Jaillet, J. Liang, and V. Mirrokni. Fairness in the autobidding world with machine-learned advice. _arXiv:2209.04748_, 2022.
* [DGPL19] M. Derakhshan, N. Golrezaei, and R. Paes Leme. Lp-based approximation for personalized reserve prices. In _ACM EC_, pages 589-589, 2019.
* [DHK08] V. Dani, T.P. Hayes, and S.M. Kakade. Stochastic linear optimization under bandit feedback. In _ALT_, pages 355-366, 2008.
* [DHL\({}^{+}\)17] M. Dudik, N. Haghtalab, H. Luo, R. E. Schapire, V. Syrgkanis, and J. W. Vaughan. Oracle-efficient learning and auction design. In _FOCS_, 2017.
* [DHP17] N. R. Devanur, N. Haghpanah, and C.-A. Psomas. Optimal multi-unit mechanisms with private demands. In _EC_, pages 41-42, 2017.
* [DL14] S. Dobzinski and R. P. Leme. Efficiency guarantees in auctions with budgets. In _ICALP_, pages 392-404. Springer, 2014.
* [DLN12] S. Dobzinski, R. Lavi, and N. Nisan. Multi-unit auctions with budget limits. _Games and Economic Behavior_, 74(2):486-503, 2012.

* [DM08] R. Day and P. Milgrom. Core-selecting package auctions. _Int. J. Game Theory_, 36(3-4):393-407, mar 2008.
* [DN07] S. Dobzinski and N. Nisan. Mechanisms for multi-unit auctions. In _ACM EC_, pages 346-351, 2007.
* [DN15] S. Dobzinski and N. Nisan. Multi-unit auctions: beyond roberts. _JET_, 156:14-44, 2015.
* [DPS21] M. Derakhshan, D. Pennock, and A. Slivkins. Beating greedy for approximating reserve prices in multi-unit vcg auctions. In _SODA_, pages 1099-1118. SIAM, 2021.
* [DS16] C. Daskalakis and V. Syrgkanis. Learning in auctions: Regret is hard, envy is easy. In _FOCS_, pages 219-228, 2016.
* [DVV03] S. De Vries and R. Vohra. Combinatorial auctions: A survey. _INFORMS Journal on computing_, 15(3):284-309, 2003.
* [Edg81] F. Y. Edgeworth. Mathematical psychics: An essay on the mathematics to the moral sciences. _London: Kegan Paul_, 1881.
* [EWK98] R. Engelbrecht-Wiggans and C. M. Kahn. Multi-unit auctions with uniform prices. _Economic Theory_, 12:227-258, 1998.
* [FFLS12] M. Feldman, A. Fiat, S. Leonardi, and P. Sankowski. Revenue maximizing envy-free multi-unit auctions with budgets. In _ACM EC_, pages 532-549, 2012.
* [FGL14] M. Feldman, N. Gravin, and B. Lucier. Combinatorial auctions via posted prices. In _SODA_, pages 123-135. SIAM, 2014.
* [FMTV20] M. Flammini, M. Mauro, M. Tonelli, and C. Vinci. Inequity aversion pricing in multi-unit markets. In _ECAI_, volume 325, pages 91-98. IOS Press, 2020.
* [FPS18] Z. Feng, C. Podimata, and V. Syrgkanis. Learning to bid without knowing your value. In _ACM EC_, pages 505-522. ACM, 2018.
* [FR03] G. Federico and D. Rahman. Bidding in an electricity pay-as-bid auction. _Journal of Regulatory Economics_, 24(2):175-211, 2003.
* [FvdFH06] N. Fabra, N-H von der Fehr, and D. Harbord. Designing electricity auctions. _The RAND Journal of Economics_, 37(1):23-46, 2006.
* [GHK\({}^{+}\)05] V. Guruswami, J. Hartline, A. Karlin, D. Kempe, C. Kenyon, and F. McSherry. On profit-maximizing envy-free pricing. In _SODA_, pages 1164-1173, 2005.
* [GI05] K. Garbade and J. Ingber. The treasury auction process: Objectives, structure, and recent adaptations. _Structure, and Recent Adaptations_, 2005.
* [Gil59] D. B. Gillies. Solutions to general non-zero-sum games. _Contributions to the Theory of Games_, 40, 1959. In Tucker, A. W.; Luce, R. D. (eds.). Contributions to the Theory of Games IV. Annals of Mathematics Studies.
* [GIL20] K. Goldner, N. Immorlica, and B. Lucier. Reducing inefficiency in carbon auctions with imperfect competition. In _ITCS_, 2020.
* [GJL23] N. Golrezaei, P. Jaillet, and J. Liang. Incentive-aware contextual pricing with non-parametric market noise. In _AISTATS_, pages 9331-9361. PMLR, 2023.
* [GJLM21] N. Golrezaei, P. Jaillet, J. Liang, and V. Mirrokni. Bidding and pricing in budget and roi constrained markets. _arXiv:2107.07725_, 2021.
* [GJM21] N. Golrezaei, A. Javanmard, and V. Mirrokni. Dynamic incentive-aware learning: Robust pricing in contextual auctions. _Operations Research_, 69(1):297-314, 2021.

* [GLLO07] Andras Gyorgy, Tamas Linder, Gabor Lugosi, and Gyorgy Ottucsak. The on-line shortest path problem under partial monitoring. _Journal of Machine Learning Research_, 8(10), 2007.
* [GML13] G. Goel, V. S. Mirrokni, and R. P. Leme. Clinching auctions with online supply. In _SODA_, pages 605-619, 2013.
* [GN92] R. J. Green and D. M. Newbery. Competition in the british electricity spot market. _The Journal of political economy_, 100(5):929-953, 1992.
* [GNR15] G. Goswami, T. H. Noe, and M. J. Rebello. Collusion in Uniform-Price Auctions: Experimental Evidence and Implications for Treasury Auctions. _The Review of Financial Studies_, 9(3):757-785, 06 2015.
* [GS13] L. H. Goulder and A. R. Schein. Carbon taxes versus cap and trade: A critical review. _Climate Change Economics_, 4, 2013.
* [HG13] S. Heim and G. Gotz. Do pay-as-bid auctions favor collusion? evidence from germany's market for reserve power. _Evidence from Germany's Market for Reserve Power_, 2013.
* [HKMN11] A. Hassidim, H. Kaplan, Y. Mansour, and N. Nisan. Non-price equilibria in markets of discrete goods. In _EC_, pages 295-296, 2011.
* [HP89] K. Hendricks and R. Porter. Collusion in auctions. _Annals of Economics and Statistics_, Jul-Dec(15-16):217-230, 1989.
* [HZF\({}^{+}\)20] Y. Han, Z. Zhou, A. Flores, E. Ordentlich, and T. Weissman. Learning to bid optimally and efficiently in adversarial first-price auctions, 2020.
* [HZW20] Y. Han, Z. Zhou, and T. Weissman. Optimal no-regret learning in repeated first-price auctions. _CoRR_, abs/2003.09795, 2020.
* [KCPT01] A. Kahn, P. Cramton, R. Porter, and R. Tabors. Uniform pricing or pay-as-bid pricing: a dilemma for california and beyond. _The Electricity Journal_, 14(6):70-79, 2001.
* [KN04] I. Kremer and K. G. Nyborg. Underpricing and market power in uniform price auctions. _The Review of Financial Studies_, 17(3):849-877, 2004.
* [KN14] Y. Kanoria and H. Nazerzadeh. Dynamic reserve prices for repeated auctions: Learning from bids. In _WINE_, volume 8877, page 232. Springer, 2014.
* [Koc07] L. Koczy. A recursive core for partition function form games. _Theor. Decis._, 63:41-51, 2007.
* [Koc09] L. Koczy. Sequential coalition formation and the core in the presence of externalities. _Game. Econ. Behav._, 66(1):559-565, 2009.
* [KV05] A. Kalai and S. Vempala. Efficient algorithms for online decision problems. _Journal of Computer and System Sciences_, 71(3):291-307, 2005.
* [LB10] B. Lucier and A. Borodin. Price of anarchy for greedy auctions. In _SODA_, pages 537-553, 2010.
* [LMMM11] G. Lopomo, L. Marx, D. McAdams, and B. Murray. Carbon allowance auction design: an assessment of options for the united states. _Review of Environmental Economics and Policy_, 2011.
* [LMT18] Sanna LaksA!, Daniel Marszalec, and Alexander Teytelboym. Epic fail: How below-bid pricing backfires in multiunit auctions. CIRJE F-Series CIRJE-F-1096, CIRJE, Faculty of Economics, University of Tokyo, 2018.
* [LS17] T. Lattimore and C. Szepesvari. The end of optimism? an asymptotic analysis of finite-armed linear bandits. In _AISTATS_, volume 54, pages 728-737. PMLR, 4 2017.

* [LS20] T. Lattimore and C. Szepesvari. _Bandit algorithms_. Cambridge University Press, 2020.
* [LW94] Nick Littlestone and Manfred K Warmuth. The weighted majority algorithm. _Information and computation_, 108(2):212-261, 1994.
* [MA98] Paul F Malvey and Christine M Archibald. Uniform-price auctions: Update of the treasury experience. _US Treasury_, 1998.
* [MCP14] S. Magureanu, R. Combes, and A. Proutiere. Lipschitz bandits: Regret lower bound and optimal algorithms. In _COLT_, volume 35, pages 975-999. PMLR, 2014.
* [MLS18] J. Mao, R. Leme, and J. Schneider. Contextual pricing for Lipschitz buyers. In _NeurIPS_, pages 5643-5651, 2018.
* [MM16] M. Mohri and A. M. Medina. Learning algorithms for second-price auctions with reserve. _The Journal of Machine Learning Research_, 17(1):2632-2656, 2016.
* [MR16] J. Morgenstern and T. Roughgarden. Learning simple auctions. In _COLT_, volume 49, pages 1298-1318. PMLR, 23-26 Jun 2016.
* [MRH89] E. Maskin, J. Riley, and F. Hahn. _Optimal Multi-Unit Auctions_, pages 312-335. Oxford University Press, 1989. Reprinted in P. Klemperer, The Economic Theory of Auctions, London: Edward Elgar, 2000.
* [MRT09] A.J. Mersereau, P. Rusmevichientong, and J.N. Tsitsiklis. A structured multiarmed bandit problem and the greedy policy. _IEEE Transactions on Automatic Control_, 54(12):2787-2802, 2009.
* [MT15] E. Markakis and O. Telelis. Uniform price auctions: Equilibria and efficiency. _Theory Comput. Syst._, 57(3):549-575, 2015.
* [NCKP22] T. Nedelec, C. Calauzenes, N. El Karoui, and V. Perchet. Learning in repeated auctions. _Foundations and Trends in Machine Learning_, 15(3):176-334, 2022.
* [NGW\({}^{+}\)21] R. Niazadeh, N. Golrezaei, J. Wang, F. Susan, and A. Badanidiyuru. Online learning via offline greedy algorithms: Applications in market design and optimization. In _ACM EC_, pages 737-738, 2021.
* [Nis14] N. Nisan. Algorithmic mechanism design through the lens of multi-unit auctions. _Handbook of Game Theory 4_, 2014.
* [Pes00] M. Pesendorfer. A study of collusion in first-price auctions. _The Review of Economic Studies_, 67(3):381-411, 2000.
* [RM21] Aviv Rosenberg and Yishay Mansour. Stochastic shortest path with adversarially changing costs. _arXiv:2006.11561_, 2021.
* [RST17] T. Roughgarden, V. Syrgkanis, and E. Tardos. The price of anarchy in auctions. _J. Artif. Intell. Res._, 59:59-101, 2017.
* [RT10] P. Rusmevichientong and J. N. Tsitsiklis. Linearly parameterized bandits. _Mathematics of Operations Research_, 35(2):395-411, 2010.
* [RW16] T. Roughgarden and J. Wang. Minimizing regret with multiple reserves. In _ACM EC_, pages 601-616, 2016.
* [SBLS04] Y. S. Son, R. Baldick, K-H. Lee, and S. Siddiqi. Short-term electricity market auction game analysis: uniform and pay-as-bid pricing. _IEEE Transactions on Power Systems_, 19(4):1990-1998, 2004.
* [Sek17] S. Sekar. Posted pricing sans discrimination. In _IJCAI_, pages 388-394, 2017.
* 460, 1967.
* [SMR\({}^{+}\)13] S.Branzei, T. P. Michalak, T. Rahwan, K. Larson, and N. R. Jennings. Matchings with externalities and attitudes. In _AAMAS_, pages 295-302. IFAAMAS, 2013.
* [SSG9] L. Shapley and M. Shubik. On market games. _Journal of Economic Theory_, 1(1):9-25, 1969.
* [SS17] R. Schmalensee and R. N. Stavins. Lessons learned from three decades of experience with cap and trade. _Review of Environmental Economics and Policy_, 11, 2017.
* [TSM08] S. Tierney, T. Schatzki, and R. Mukerji. Uniform-pricing versus pay-as-bid in whole-sale electricity markets: Does it make a difference? _New York ISO_, 2008.
* [Tsy09] A. Tsybakov. _Introduction to Nonparametric Estimation_. Springer-Verlag, 2009.
* [TW03] E. Takimoto and M. Warmuth. Path kernels and multiplicative updates. _The Journal of Machine Learning Research_, 4:773-818, 2003.
* [UNK10] T. Uchiya, A. Nakamura, and M. Kudo. Algorithms for adversarial bandit problems with multiple plays. In _International Conference on Algorithmic Learning Theory_, pages 375-389. Springer, 2010.
* [vdFH93] N-H. von der Fehr and D. Harbord. Spot market competition in the uk electricity industry. _The Economic journal (London)_, 103(418):531-546, 1993.
* [VPG20] B. Van Parys and N. Golrezaei. Optimal learning for structured bandits. _arXiv:2007.07302_, 2020.
* [Wil79] R. Wilson. Auctions of shares. _The Quarterly Journal of Economics_, 93(4):675-689, 1979.
* [WJ08] M. Wainwright and M. Jordan. Graphical models, exponential families, and variational inference. _Foundations and Trends(r) in Machine Learning_, 1(1-2):1-305, 2008.
* [WPR16] J. Weed, V. Perchet, and P. Rigollet. Online learning in repeated auctions. In _Conference on Learning Theory_, pages 1562-1583, 2016.
* [ZLW19] J. Zimmert, H. Luo, and C-Y. Wei. Beating stochastic and adversarial semi-bandits optimally and simultaneously. In _ICML_, pages 7683-7692. PMLR, 2019.
* [ZN13] A. Zimin and G. Neu. Online learning in episodic markovian decision processes by relative entropy policy search. _NeurIPS_, 26, 2013.

## Roadmap to the appendix

Appendix A includes the proofs omitted from Section 3 (Offline Setting). Appendix B includes the proofs omitted from Section 4 (Online Setting). Appendix C includes the equilibrium analysis. A few results from prior work that we invoke are in Appendix D.

## Appendix A Appendix: Offline Setting

In this section we include the proofs omitted from the main text for the offline setting.

**Observation 1** (restated).: _Player \(i\) has an optimum bid vector \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\in\mathbb{D}^{K}\) with \(\beta_{j}\in\mathcal{S}_{i}\) for all \(j\in[K]\)._

Proof.: Let \(\mathbf{c}=(c_{1},\ldots,c_{K})\) be an arbitrary optimum strategy for player \(i\). Suppose \(\mathbf{c}\not\in\mathcal{S}_{i}^{K}\).

We use \(\mathbf{c}\) to construct an optimum bid vector \(\mathbf{\beta}\in\mathcal{S}_{i}^{K}\) as follows. For each \(j\in[K]\):

* If \(c_{j}\in\mathcal{S}_{i}\), then set \(\beta_{j}=c_{j}\).
* Else, set \(\beta_{j}=\max\bigl{\{}y\in\mathcal{S}_{i}\mid y\leq c_{j}\bigr{\}}\).

Then in each round \(t\), player \(i\) gets the same allocation when playing \(\mathbf{\beta}\) as it does when playing \(\mathbf{c}\) and the others play \(\mathbf{b}_{-i}^{t}\) since the ordering of the owners of the bids is the same under \((\mathbf{c},\mathbf{b}_{-i}^{t})\) as it is under \((\mathbf{\beta},\mathbf{b}_{-i}^{t})\); moreover, the price weakly decreases in each round \(t\). Thus player \(i\)'s utility weakly improves. Since \(\mathbf{c}\) was an optimal strategy for player \(i\), it follows that \(\mathbf{\beta}\) is also an optimal strategy for player \(i\) and, moreover, \(\mathbf{\beta}\in\mathcal{S}_{i}^{K}\) as required. 

Next we show how to find an optimal bid vector in polynomial time. The proof uses several lemmas, which are proved after the theorem.

**Theorem 1** (restated, formal).: _Suppose we are given a number \(n\) of players, number \(K\) of units, valuation \(\mathbf{v}_{i}\) of player \(i\), discretization level \(\varepsilon>0\), and bid history \(H_{-i}=(\mathbf{b}_{-i}^{1},\ldots,\mathbf{b}_{-i}^{T})\) by players other than \(i\). Then an optimum bid vector for player \(i\) can be computed in polynomial time in the input parameters._

Proof of Theorem 1.: Compute the set \(\mathcal{S}_{i}\) given by equation (1) and the graph \(G_{i}\) from Definition 1. The proof has several steps as follows.

\(G_{i}\) is a DAG.All the edges in \(G_{i}\) flow from the source \(z_{-}\) to the nodes from layer \(1\), then from the nodes in layer \(j\) to those in layer \(j+1\) (i.e. of the form \((z_{r,j},z_{s,j+1})\) for all \(j\in[K-1]\) and \(r,s\in\mathcal{S}_{i}\) with \(r\geq s\)), and finally from all the nodes in layer \(K\) to the sink \(z_{+}\). A cycle would require at least one back edge, but such edges do not exist.

Bijective map between bid vectors and paths from source to sink in \(G_{i}\).To each bid vector \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\in\mathcal{S}_{i}^{K}\), associate the following path in \(G_{i}\): \(P(\mathbf{\beta})=\left(z_{-},z_{\beta_{1},1},\ldots,z_{\beta_{K},K},z_{+}\right).\)

We show next the map \(P\) is a bijection from the set \(\mathcal{S}_{i}\) of candidate bid vectors for player \(i\) to the set of paths from source to sink in \(G_{i}\). Consider arbitrary bid vector \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\in\mathcal{S}_{i}^{K}\). By definition of a bid vector, we have \(\beta_{1}\geq\ldots\geq\beta_{K}\). Then \(P(\mathbf{\beta})=(z_{-},z_{\beta_{1},1},\ldots,z_{\beta_{K},K},z_{+})\) is a valid path in \(G_{i}\).

Conversely, since \(G_{i}\) has an edge \((z_{r,j},z_{s,j+1})\) if and only if \(r\geq s\), each path from source to sink in \(G_{i}\) has the form \(Q=(z_{-},z_{\beta_{1},1},\ldots,z_{\beta_{K},K},z_{+})\) for some numbers \(\beta_{1},\ldots,\beta_{K}\in\mathcal{S}_{i}\), and so it can be mapped to bid vector \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\). Thus \(Q=P(\mathbf{\beta})\), and so \(P\) is a bijective map.

Utility of player \(i\) and weight of a path of length \(K\) in \(G_{i}\).Let \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\in\mathcal{S}_{i}^{K}\). Additionally, let \(\beta_{K+1}=0\). The total utility of player \(i\) when bidding \(\mathbf{\beta}\) in each round \(t\) while the others bid \(\mathbf{b}_{-i}^{t}\) is \(U_{i}(\mathbf{\beta})=\sum_{t=1}^{T}u_{i}(\mathbf{h}^{t}),\) where \(\mathbf{h}^{t}=(\mathbf{\beta},\mathbf{b}_{-i}^{t})\ \forall t\in[T]\,.\)Let \(P(\mathbf{\beta})=(z_{-},z_{\beta_{1},1},\ldots,z_{\beta_{K},K},z_{+})\) be the path in \(G_{i}\) corresponding to \(\mathbf{\beta}\). The edges of the path \(P(\mathbf{\beta})\) are \((z_{-},z_{\beta_{1},1})\), \((z_{\beta_{1},1},z_{\beta_{2},2})\), \((z_{\beta_{K-1},K-1},z_{\beta_{K},K})\), \((z_{\beta_{K},K},z_{+})\), while the weight of the path is equal to the sum of its edges. Summing equation (2), which gives the weight of an edge, across all edges of \(P(\mathbf{\beta})\) implies that the weight of path \(P(\mathbf{\beta})\) is equal to

\[w(P(\mathbf{\beta}))=\sum_{j=1}^{K}\sum_{t=1}^{T}\Bigl{[}\mathbb{1}_{\{x_{i}(\mathbf{ h}^{t})\geq j\}}(v_{i,j}-\beta_{j})+j\left(\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})>j\}} (\beta_{j}-\beta_{j+1})+\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})=j\}}(\beta_{j}-p( \mathbf{h}^{t})))\right]. \tag{7}\]

We claim that \(U_{i}(\mathbf{\beta})=w(P(\mathbf{\beta}))\). The high level idea is to rewrite the utility to "spread it" across the edges of the path corresponding to bid profile \(\mathbf{\beta}\). Towards this end, recall the utility of player \(i\) at strategy profile \(\mathbf{h}^{t}=(\mathbf{\beta},\mathbf{b}^{t}_{-i})\) is

\[u_{i}(\mathbf{h}^{t})=\sum_{j=1}^{K}\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})\geq j\} }(v_{i,j}-p(\mathbf{h}^{t}))\,. \tag{8}\]

By Lemma 1, equation (8) is equivalent to

\[u_{i}(\mathbf{h}^{t})=\sum_{j=1}^{K}\Bigl{[}\mathbb{1}_{\{x_{i}( \mathbf{h}^{t})\geq j\}}(v_{i,j}-\beta_{j})+j\left(\mathbb{1}_{\{x_{i}(\mathbf{ h}^{t})>j\}}(\beta_{j}-\beta_{j+1})+1_{\{x_{i}(\mathbf{h}^{t})=j\}}(\beta_{j}-p( \mathbf{h}^{t})))\right]. \tag{9}\]

Summing \(u_{i}(\mathbf{h}^{t})\) over all rounds \(t\) gives

\[U_{i}(\mathbf{\beta}) =\sum_{t=1}^{T}u_{i}(\mathbf{h}^{t})\] \[=\sum_{t=1}^{T}\sum_{j=1}^{K}\Bigl{[}\mathbb{1}_{\{x_{i}(\mathbf{ h}^{t})\geq j\}}(v_{i,j}-\beta_{j})+j\left(\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})>j\}} (\beta_{j}-\beta_{j+1})+\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})=j\}}(\beta_{j}-p( \mathbf{h}^{t})))\right]\] (By equation ( 9 ) \[=w(P(\mathbf{\beta}))\,.\] (Swapping the order of summation) (By equation ( 7 ) )

Thus the weight of the path \(P(\mathbf{\beta})\) is equal to the utility of player \(i\) from bidding \(\mathbf{\beta}\). The implication is that to find an optimum bid vector, it suffices to compute a maximum weight path in \(G_{i}\).

Computing a maximum weight path in \(G_{i}\).The graph \(G_{i}\) is a DAG with a number of vertices of \(G_{i}\) that is polynomial in the input parameters. By Lemma 2, the edge weights of \(G_{i}\) can be computed in polynomial time.

A maximum weight path in a DAG can be computed in polynomial time by changing every weight to its negation to obtain a graph \(-G\). Since \(G\) has no cycles, the graph \(-G\) has no negative cycles. Thus running a shortest path algorithm on \(-G\) will yield a longest (i.e. maximum weight) path on \(G\) in polynomial time, as required.

The unique bid vector corresponding to the maximum weight path found can then be recovered in time \(O(K)\) and it represents an optimum bid vector for player \(i\). 

**Lemma 1**.: _In the setting of Theorem 1, for each bid profile \(\mathbf{\beta}\in\mathcal{S}_{i}^{K}\) and round \(t\in[T]\), define \(\mathbf{h}^{t}=(\mathbf{\beta},\mathbf{b}^{t}_{-i})\). Then we have_

\[u_{i}(\mathbf{h}^{t})=\sum_{j=1}^{K}\Bigl{[}\mathbb{1}_{\{x_{i}( \mathbf{h}^{t})\geq j\}}(v_{i,j}-\beta_{j})+j\left(\mathbb{1}_{\{x_{i}(\mathbf{ h}^{t})>j\}}(\beta_{j}-\beta_{j+1})+\mathbb{1}_{\{x_{i}(\mathbf{h}^{t})=j\}}( \beta_{j}-p(\mathbf{h}^{t})))\right]. \tag{10}\]

[MISSING_PAGE_FAIL:19]

[MISSING_PAGE_FAIL:20]

Thus \(\Gamma^{t}(x)\) counts the bids in profile \(\mathbf{b}_{-i}^{t}\) that would have priority to a bid of value \(x\) submitted by player \(i\) (i.e. it counts bids strictly higher than \(x\) and submitted by players other than \(i\), as well as bids equal to \(x\) but submitted by players lexicographically before \(i\)).

Step (ii).Recall the edge is denoted \(e=(z_{\tau,j},z_{s,j+1})\). Let \(\boldsymbol{\beta}\in\mathcal{S}_{i}\) be an arbitrary bid profile with \(\beta_{j}=r\) and \(\beta_{j}=s\). Also define \(\beta_{K+1}=0\).

If \(\Gamma^{t}(s)<K-j\), then at \(\mathbf{h}^{t}=(\boldsymbol{\beta},\mathbf{b}_{-i}^{t})\) player \(i\) receives one unit for each of the bids \(\beta_{1},\ldots,\beta_{j+1}\), since there are at most \(K-j-1\) bids of other players that have higher priority than player \(i\)'s highest \(j+1\) bids. Else, player \(i\) does not get more than \(j\) units. Thus \(I_{>j}^{t}=\mathbbm{1}_{\{x_{i}(\mathbf{h}^{t})>j\}}\).

Step (iii).If \(\Gamma^{t}(r)\leq K-j\), then player \(i\) receives at least \(j\) units at \((\boldsymbol{\beta},\mathbf{b}_{-i}^{t})\). The corresponding indicator is

\[I_{\geq j}^{t}=\mathbbm{1}_{\{\Gamma^{t}(s)\leq K-j\}}=\mathbbm{1}_{\{x_{i}( \mathbf{h}^{t})\geq j\}}\,.\]

Step (iv).If \(\Gamma^{t}(r)\leq K-j\) and \(\Gamma^{t}(s)>K-j\), then player \(i\) receives exactly \(j\) units at \((\boldsymbol{\beta},\mathbf{b}_{-i}^{t})\). The indicator is

\[I_{j}^{t}=\mathbbm{1}_{\{\Gamma^{t}(r)\leq K-j\}}\cdot\mathbbm{1}_{\{\Gamma^{t }(s)>K-j\}}=\mathbbm{1}_{\{x_{i}(\mathbf{h}^{t})=j\}}\,.\]

Now suppose \(I_{j}^{t}=1\). Then we show the price \(q^{t}=p(\mathbf{h}^{t})\) can be computed precisely without knowing the whole bid \(\boldsymbol{\beta}\).

Consider the multiset of bids \(B=\mathbf{b}_{-i}^{t}\cup\{\beta_{1},\ldots,\beta_{j+1}\}\), recalling \(\beta_{K+1}\) was defined as zero. Sort \(B\) in descending order. We know the top \(j-1\) bids of player \(i\) are winning, so the price is not determined by any of them. Thus the price is determined by \(\beta_{j}=r\), \(\beta_{j+1}=s\), or by one of the bids in \(\mathbf{b}_{-i}^{t}\). Remove elements \(\beta_{1},\ldots,\beta_{j-1}\) from \(B\) and set the price as follows:

* _Case (iv.a)_. For (\(K+1\))-st price auction: set \(q^{t}\) to the \((K+2-j)^{\text{th}}\) highest value in \(B\).
* _Case (iv.b)_. For \(K\)-th price auction: set \(q^{t}\) to the \((K+1-j)^{\text{th}}\) highest value in \(B\).

Step (v).Combining steps (i-iv), the weight of edge \(e=(z_{\tau,j},z_{s,j+1})\) can be rewritten as

\[w_{e} =\sum_{t=1}^{T}\mathbbm{1}_{\{x_{i}(\mathbf{h}^{t})\geq j\}}\left( v_{i,j}-r\right)+j\Big{[}\mathbbm{1}_{\{x_{i}(\mathbf{h}^{t})>j\}}\left(r-s \right)+\mathbbm{1}_{\{x_{i}(\mathbf{h}^{t})=j\}}\left(r-p(\mathbf{h}^{t}) \right)\Big{]}\] (By Definition 1) \[=\sum_{t=1}^{T}I_{\geq j}^{t}\left(v_{i,j}-r\right)+j\Big{[}I_{>j}^{t} \left(r-s\right)+I_{j}^{t}\left(r-q^{t}\right)\Big{]}\,.\] (By steps (i-iv))

Thus the weight of each edge can be computed in polynomial time as required.

Appendix: Online Setting

In this section we include the material omitted from the main text for the online setting.

Before studying the full information and bandit feedback models in greater detail, we replace the set \(\mathcal{S}_{i}\) of candidate bids for player \(i\) from equation (1) of the offline section by a coarser set

\[\mathcal{S}_{\varepsilon}=\{\varepsilon,2\varepsilon,\cdots,\lceil v_{i,1}/ \varepsilon\rceil\varepsilon\}\,.\]

The regret, which was defined in equation (3), depends on whether the model is the \(K\)-th or \((K+1)\)-st price auction; however the next lemma holds for both variants of the auction.

**Lemma 3**.: _For all \(\varepsilon>0\), let \(\text{\rm Reg}_{i}(\pi_{i},H^{T}_{-i},\varepsilon)\) be the counterpart of (3) where \(\mathcal{S}_{i}\) is replaced by the set \(\mathcal{S}_{\varepsilon}\). Then \(\text{\rm Reg}_{i}(\pi_{i},H^{T}_{-i})\leq\text{\rm Reg}_{i}(\pi_{i},H^{T}_{- i},\varepsilon)+TK\varepsilon\)._

Proof.: First observe that it is not beneficial to bid above \(v_{i,1}\), so we can assume without loss of generality that the maximizer \(\mathbf{\beta}\) in (3) satisfies \(\beta_{j}\leq v_{i,1}\) for all \(j\in[K]\). Now we convert \(\mathbf{\beta}\) into another bid vector \(\mathbf{\beta}^{\varepsilon}\in\mathcal{S}_{\varepsilon}^{K}\) as follows: for each \(j\in[K]\), let

\[\beta_{j}^{\varepsilon}=\min\{y\in\mathcal{S}_{\varepsilon}\mid y\geq\beta_{j }\}\,.\]

Clearly \(\beta_{j}\leq\beta_{j}^{\varepsilon}\leq\beta_{j}+\varepsilon\).

Then we claim that the next inequalities hold:

\[p(\mathbf{\beta}^{\varepsilon},\mathbf{b}^{t}_{-i}) \leq p(\mathbf{\beta},\mathbf{b}^{t}_{-i})+\varepsilon; \tag{20}\] \[\mathbb{1}_{\{x_{i}(\mathbf{\beta}^{\varepsilon},\mathbf{b}^{t}_{-i}) \geq j\}} \geq\mathbb{1}_{\{x_{i}(\mathbf{\beta},\mathbf{b}^{t}_{-i})\geq j\}}\,. \tag{21}\]

Inequality (20) follows since

* \(p(\mathbf{b})\) is either the \(K\)-th or the \((K+1)\)-st largest element of \(\mathbf{b}\), and
* increasing each entry of \(\mathbf{b}\) by at most \(\varepsilon\) can only increase \(p(\mathbf{b})\) by no more than \(\varepsilon\).

Inequality (21) is due to the fact that bidding a higher price can only help to win the unit.

Consequently, we have

\[\sum_{t=1}^{T}\sum_{j=1}^{K}\big{(}v_{i,j}-p(\mathbf{\beta},\mathbf{b }^{t}_{-i})\big{)}\cdot\mathbb{1}_{\{x_{i}(\mathbf{\beta},\mathbf{b}^{t}_{-i})\geq j\}} \leq\sum_{t=1}^{T}\sum_{j=1}^{K}\big{(}v_{i,j}-p(\mathbf{\beta}, \mathbf{b}^{t}_{-i})\big{)}\cdot\mathbb{1}_{\{x_{i}(\mathbf{\beta}^{\varepsilon}, \mathbf{b}^{t}_{-i})\geq j\}}\] \[\leq\sum_{t=1}^{T}\sum_{j=1}^{K}\big{(}v_{i,j}-p(\mathbf{\beta}^{ \varepsilon},\mathbf{b}^{t}_{-i})-\varepsilon\big{)}\cdot\mathbb{1}_{\{x_{i}( \mathbf{\beta}^{\varepsilon},\mathbf{b}^{t}_{-i})\geq j\}}\] \[\leq\sum_{t=1}^{T}\sum_{j=1}^{K}\big{(}v_{i,j}-p(\mathbf{\beta}^{ \varepsilon},\mathbf{b}^{t}_{-i})\big{)}\cdot\mathbb{1}_{\{x_{i}(\mathbf{\beta}^{ \varepsilon},\mathbf{b}^{t}_{-i})\geq j\}}+TK\varepsilon\,.\]

This gives the desired statement of the lemma. 

### Full Information Feedback

In this section we include the omitted details for the full information setting.

We begin with the formal definition of the graph \(G^{t}=(V,E,w^{t})\) used by the online learning algorithm with full information feedback.

**Definition 2** (The graph \(G^{t}\)).: _Given valuation \(\mathbf{v}_{i}\) of player \(i\), bid profile \(\mathbf{b}^{t}_{-i}\) of the players at round \(t\), and \(\varepsilon>0\), construct a graph \(G^{t}=(V,E,w^{t})\) as follows._

* _Vertices._ _Create a vertex_ \(z_{s,j}\) _for each_ \(s\in\mathcal{S}_{\varepsilon}\) _and index_ \(j\in[K]\)_. We say vertex_ \(z_{s,j}\) _is in layer_ \(j\)_. Add source_ \(z_{-}\) _and sink_ \(z_{+}\)_._
* _Edges._ _For each index_ \(j\in[K-1]\) _and pair of bids_ \(r,s\in\mathcal{S}_{\varepsilon}\) _with_ \(r\geq s\)_, create a directed edge from vertex_ \(z_{r,j}\) _to vertex_ \(z_{s,j+1}\)_. Moreover, add edges from source_ \(z_{-}\) _to each node in layer_ \(1\) _and from each node in layer_ \(K\) _to the sink_ \(z_{+}\)* _Edge weights. For each edge_ \(e=(z_{r,j},z_{s,j+1})\) _or_ \(e=(z_{r,K},z_{+})\)_, let_ \(\mathbf{\beta}=(\beta_{1},\ldots,\beta_{K})\in\mathcal{S}_{e}^{K}\) _be a bid vector with_ \(\beta_{j}=r\) _and_ \(\beta_{j+1}=s\) _(we define_ \(s=0\) _if_ \(j=K\)_). Define the weight of edge_ \(e\) _as_ \[w^{t}(e)=\mathbbold{1}_{\{x_{i}(\mathbf{\beta},\mathbf{b}_{-i}^{t})\geq j\}}\left( v_{i,j}-r\right)+j\Big{[}\mathbbold{1}_{\{x_{i}(\mathbf{\beta},\mathbf{b}_{-i}^{t})>j \}}\left(r-s\right)+\mathbbold{1}_{\{x_{i}(\mathbf{h}^{t})=j\}}\left(r-p(\mathbf{ \beta},\mathbf{b}_{-i}^{t}))\right].\] _The edges incoming from_ \(z_{-}\) _have weight zero._

The next observation follows immediately from the definition.

**Observation 2**.: _The next properties hold:_

* _The weight_ \(w^{t}(e)\) _of each edge_ \(e\) _of_ \(G^{t}\) _can be computed efficiently (see Lemma_ 2_)._
* _There is a bijective map between bid vectors_ \(\mathbf{\beta}\in\mathcal{S}_{e}^{K}\) _of player_ \(i\) _and paths from the source to the sink of_ \(G^{t}\) _(see proof of Theorem_ 1_)._

Next we include the main theorem with its proof for the online learning algorithm under full information feedback.

**Theorem 2** (restated).: _For each player \(i\) and time horizon \(T\), under full-information feedback, Algorithm 2 runs in time \(O(T^{2})\) and guarantees the player's regret is at most \(O\left(v_{i,1}\sqrt{TK^{3}\log T}\right)\)._

Proof.: The detailed algorithm description is presented as Algorithm 2. At a high level, the proof has three parts: \((i)\) showing that Algorithm 2 is a correct implementation of the Hedge algorithm where each expert is a path from source to sink in the DAG \(G^{t}\) for time \(t\), \((ii)\) bounding its regret for an appropriate choice of the learning rate, and \((iii)\) bounding the runtime.

Step I: Algorithm 2 is a correct implementation of Hedge.We show that Algorithm 2 is the same as the Hedge algorithm in which every path in the DAG is equivalent to an expert in the Hedge algorithm.

To do so, for each vertex \(u\) in the DAG, let \(\phi^{t}(u,\cdot)\) be a probability distribution over the outneighbors of \(u\). Then, given the recursive sampling of the bids based on the probability distribution \(\phi^{t}\)'s, the probability that a path p is chosen in Algorithm 2 is equal to

\[P^{t}(\mathfrak{p})=\prod_{e\in\mathfrak{p}}\phi^{t}(e), \tag{22}\]

where \(\phi^{t}\)'s are updated in equation (5), which is restated below:

\[\phi^{t}(e)=\phi^{t-1}(e)\cdot\exp\left(\eta\cdot w^{t-1}(e)\right)\cdot\frac {\Gamma^{t-1}(v)}{\Gamma^{t-1}(u)},\quad\text{for all }e=(u,v)\in E(G^{t})\,.\] (5 revisited.)

On the other hand, in the Hedge algorithm, the path probabilities are updated as follows: Given a learning rate \(\eta\), define \(P^{1}_{h}(\mathfrak{p})=\prod_{e\in\mathfrak{p}}\phi^{1}(e)\), and for \(t\geq 2\),

\[P^{t}_{h}(\mathfrak{p})=\frac{P^{t-1}_{h}(\mathfrak{p})\exp(\eta\sum_{e\in \mathfrak{p}}w^{t-1}(e))}{\sum_{\mathfrak{q}}P^{t-1}_{h}(\mathfrak{q})\exp( \eta\sum_{e\in\mathfrak{q}}w^{t-1}(e))}\,. \tag{23}\]

The subscript '\(h\)' in \(P^{t}_{h}(\mathfrak{p})\) stands for Hedge. To show that the update rule in Algorithm 2 is equivalent to the one in Hedge, we first prove the following statement:

\((\dagger)\) For any vertex \(u\) in the graph, let \(\mathcal{P}(u)\) be the set of all paths from \(u\) to \(z_{+}\). Then

\[\Gamma^{t-1}(u)=\sum_{\mathfrak{q}\in\mathcal{P}(u)}\prod_{e\in\mathfrak{q}} \left[\phi^{t-1}(e)\exp(\eta w^{t-1}(e))\right]. \tag{24}\]We prove equation (24) by induction on \(u\), from the bottom layer to the top layer. If \(u=z_{+}\), by definition \(\Gamma^{t-1}(z_{+})=1\), and (24) holds. Now suppose that (24) holds for all \(u\) in the \((k+1)\)-st layer, for some \(0\leq k\leq K\). Then if \(u\) is in the \(k\)-th layer, the recursion of \(\Gamma^{t-1}\) gives that

\[\Gamma^{t-1}(u) =\sum_{v:(u,v)\in E}\phi^{t-1}((u,v))\exp(\eta w^{t-1}((u,v))\cdot \Gamma^{t-1}(v)\] \[=\sum_{v:(u,v)\in E}\phi^{t-1}((u,v))\exp(\eta w^{t-1}((u,v))) \cdot\sum_{\mathfrak{q}\in\mathcal{P}(v)}\prod_{e\in\mathfrak{q}}\left[\phi^{t- 1}(e)\exp(\eta w^{t-1}(e))\right]\] \[=\sum_{\mathfrak{q}\in\mathcal{P}(u)}\prod_{e\in\mathfrak{q}} \left[\phi^{t-1}(e)\exp(\eta w^{t-1}(e))\right],\]

and therefore (24) holds.

Having shown equation (24), we prove by induction on \(t\) our claim that Algorithm 2 is a correct implementation of Hedge, i.e. that \(P^{t}(\mathfrak{p})=P^{t}_{h}(\mathfrak{p})\) for all paths \(\mathfrak{p}\) and rounds \(t\). For \(t=1\), by definition of our initialization we have \(P^{1}_{h}(\mathfrak{p})=P^{1}(\mathfrak{p})\). Suppose that at time \(t-1\), for every path \(\mathfrak{p}\) we have \(P^{t-1}_{h}(\mathfrak{p})=P^{t-1}(\mathfrak{p})=\prod_{e\in\mathfrak{p}}\phi^{ t-1}(e)\). Then at time \(t\), it holds that

\[P^{t}(\mathfrak{p})=\prod_{e\in\mathfrak{p}}\phi^{t}(e) \stackrel{{\rm(a)}}{{=}}\prod_{e=(u,v)\in\mathfrak{p }}\left[\phi^{t-1}(e)\cdot\exp\left(\eta\cdot w^{t-1}(e)\right)\cdot\frac{ \Gamma^{t-1}(v)}{\Gamma^{t-1}(u)}\right]\] \[\stackrel{{\rm(b)}}{{=}}P^{t-1}_{h}(\mathfrak{p})\exp \left(\eta\sum_{e\in\mathfrak{p}}w^{t-1}(e)\right)\cdot\frac{\Gamma^{t-1}(z_{ +})}{\Gamma^{t-1}(z_{-})},\]

where step (a) is due to equation (5), and step (b) follows using telescoping and the induction hypothesis \(P^{t-1}_{h}(\mathfrak{p})=\prod_{e\in\mathfrak{p}}\phi^{t-1}(e)\).

Given equation (23), by applying equation (24) to \(u\in\{z_{-},z_{+}\}\) and the induction hypothesis \(P^{t-1}_{h}(\mathfrak{p})=\prod_{e\in\mathfrak{p}}\phi^{t-1}(e)\), the induction is complete.

Thus Algorithm 2 is a correct implementation of Hedge.

Step II: Regret upper bound.Let

\[\varepsilon=v_{i,1}\sqrt{K/T}\,. \tag{25}\]

Applying Lemma 3 yields

\[\text{Reg}_{i}(\pi_{i},H^{T}_{-i})\leq\text{Reg}_{i}(\pi_{i},H^{T}_{-i}, \varepsilon)+TK\varepsilon=\text{Reg}_{i}(\pi_{i},H^{T}_{-i},\varepsilon)+v_{i,1}\sqrt{TK^{3}}, \tag{26}\]

where \(\text{Reg}_{i}(\pi_{i},H^{T}_{-i},\varepsilon)\) is the counterpart of (3) where \(\mathcal{S}_{i}\) is replaced by the set

\[\mathcal{S}_{\varepsilon}=\{\varepsilon,2\varepsilon,\cdots,\lceil v_{i,1}/ \varepsilon\rceil\varepsilon\}\,.\]

We also claim that \(\sum_{e\in\mathfrak{p}}w^{t}(e)\leq Kv_{i,1}\) for each path \(\mathfrak{p}\) from source to sink in \(G^{t}\). To see this, let \(\boldsymbol{\beta}\) be the bid vector corresponding to path \(\mathfrak{p}\). As shown in Lemma 1 and using the fact that edges outgoing from \(z_{-}\) have weight zero, we have \(u_{i}(\boldsymbol{\beta},b^{t}_{-i})=\sum_{e\in\mathfrak{p}}w^{t}(e)\). Since player \(i\)'s utility satisfies \(u_{i}(\boldsymbol{\beta},\mathbf{b}^{t}_{-i})\leq V_{i}(x_{i}(\boldsymbol{ \beta},\mathbf{b}^{t}_{-i}))\leq Kv_{i,1}\), we obtain \(\sum_{e\in\mathfrak{p}}w^{t}(e)\leq Kv_{i,1}\).

By Step I, Algorithm 2 is a correct implementation of Hedge. To bound the regret of the algorithm, we will invoke Corollary 1--which is a slight variant of [1, Theorem 2.2]--with the following parameters:

* \(N\) experts, where each expert is a path from source to sink in \(G^{t}\);
* learning rate \(\eta\), time horizon \(T\), and maximum reward \(L=Kv_{i,1}\);
* initial distribution \(\sigma\) on the experts, where \(\sigma_{\mathfrak{p}}=P^{1}(\mathfrak{p})\) for each expert (path from source to sink) \(\mathfrak{p}\).

By Corollary 1, we obtain

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon) \leq\frac{1}{\eta}\max_{\mathfrak{p}\in[N]}\log\left(\frac{1}{\sigma _{\mathfrak{p}}}\right)+\frac{TL^{2}\eta}{8}\,. \tag{27}\]

Recall Algorithm 2 initially selects a path by starting at the source \(z_{-}\) and then performing an unbiased random walk in the layered DAG until reaching the sink \(z_{+}\). Since the number of vertices in each layer is \(\lceil v_{i,1}/\varepsilon\rceil\), the initial probability of selecting a particular expert (i.e. path from source to sink) \(\mathfrak{p}\) is

\[\sigma_{\mathfrak{p}}=P^{1}(\mathfrak{p})\geq\frac{1}{\lceil v_{ i,1}/\varepsilon\rceil^{K}},\quad\forall\mathfrak{p}\in[N]\,. \tag{28}\]

Substituting (28) in (27) yields

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon) \leq\frac{1}{\eta}\max_{\mathfrak{p}\in[N]}\log\left(\frac{1}{ \sigma_{\mathfrak{p}}}\right)+\frac{TL^{2}\eta}{8}\leq\frac{K\log\left(\lceil v _{i,1}/\varepsilon\rceil\right)}{\eta}+\frac{TL^{2}\eta}{8}\] \[=\frac{K\log\left(\left\lceil\sqrt{\frac{K}{T}}\right\rceil\right) }{\eta}+\frac{T\left(Kv_{i,1}\right)^{2}\eta}{8}\quad\text{ (Since $\varepsilon=v_{i,1}\sqrt{\frac{K}{T}}$ and $L=Kv_{i,1}$.)}\] \[\leq\frac{K\log T}{\eta}+\frac{T\left(Kv_{i,1}\right)^{2}\eta}{8}\,. \tag{29}\]

For \(\eta=\sqrt{\log T}/(v_{i,1}\sqrt{KT})\), inequality (29) gives

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon) \leq\frac{K\cdot\log T}{\sqrt{\log T}/(v_{i,1}\sqrt{KT})}+\frac{T \sqrt{\log T}}{8(v_{i,1}\sqrt{KT})}\cdot\left(Kv_{i,1}\right)^{2}\] \[=\frac{9\,v_{i,1}}{8}\,\sqrt{TK^{3}\log T}\,. \tag{30}\]

Combining inequalities (26) and (30), we get that the regret of player \(i\) when running Algorithm 2 is

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T}) \leq\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon)+v_{i,1}\sqrt{ TK^{3}}\] \[\leq\frac{9\,v_{i,1}}{8}\,\sqrt{TK^{3}\log T}+v_{i,1}\sqrt{TK^{3} }\in O\left(v_{i,1}\sqrt{TK^{3}\log T}\right)\,. \tag{31}\]

This completes the proof of the regret upper bound.

Polynomial time implementation.Finally we analyze the running time of the above algorithm. At every step, the computation of path kernels traverses all edges (note that each edge only appears in the sum once) and could be done in \(O(|E|)=O(Kv_{i,1}^{2}/\varepsilon^{2})\) time. Similarly, the update of edge probabilities \(\phi^{t}\) for all edges also takes \(O(|E|)=O(Kv_{i,1}^{2}/\varepsilon^{2})\) time.

Therefore, the overall computational complexity is \(O(TKv_{i,1}^{2}/\varepsilon^{2})=O(T^{2})\), where we used the choice of \(\varepsilon=v_{i,1}\sqrt{K/T}\). This completes the proof of the theorem. 

### Bandit Feedback

In this section we include the main theorem and proof for the bandit setting. Recall that our algorithm for the bandit setting is the same as Algorithm 2, only with \(w^{t}(e)\) replaced by \(\widehat{w}^{t}(e)\):

\[\widehat{w}^{t}(e)=\overline{w}(e)-\frac{\overline{w}(e)-w^{t}( e)}{p^{t}(e)}\mathbbm{1}_{\{e\in\mathfrak{P}^{t}\}},\qquad\text{ with $p^{t}(e)=\sum_{\mathfrak{p}:e\in\mathfrak{p}}P^{t}(\mathfrak{p})$},\]

with \(P^{t}\) given in (22), and

\[\overline{w}(e)=\begin{cases}v_{i,1}-r+j(r-s)&\text{if $e=(z_{r,j},z_{s,j+1})$},\\ v_{i,1}-r+Kr&\text{if $e=(z_{r,K},z_{+})$},\\ 0&\text{if $e=(z_{-},z_{r,1})$}.\end{cases}\]The resolution parameter and learning rate are chosen to be

\[\varepsilon=v_{i,1}\min\{(K^{3}\log T/T)^{1/4},1\},\quad\eta=\min\left\{\varepsilon \sqrt{\log(v_{i,1}/\varepsilon)/(TK^{3}v_{i,1}^{4})},1/(Kv_{i,1})\right\}. \tag{32}\]

**Theorem 3** (**restated)**.: _For each player \(i\) and time horizon \(T\), under the bandit feedback, there is an algorithm for bidding that runs in time \(O(TK+K^{-5/4}T^{7/4})\) and guarantees the player's regret is at most \(O(\min\{v_{i,1}(T^{3}K^{7}\log T)^{1/4},v_{i,1}KT\})\)._

Proof.: By Lemma 3 and the choice of \(\varepsilon\) in (32), it suffices to show that the above algorithm \(\pi_{i}\) runs in time \(O(TKv_{i,1}^{3}/\varepsilon^{3})\) and achieves

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon)=O\left(v_{i,1}^{2}\sqrt{TK^{5} \log(v_{i,1}/\varepsilon)}/\varepsilon+v_{i,1}K^{2}\log(v_{i,1}/\varepsilon) \right)\,.\]

The claimed result then follows from the fact that the regret is always upper bounded by \(O(v_{i,1}KT)\).

Before we proceed to the proof, we first comment on the choice of estimator \(\widehat{w}^{t}(e)\). First of all, this is an unbiased estimator of \(w^{t}(e)\), i.e. \(\mathbb{E}_{\mathfrak{p}^{t}\sim P^{t}}[\widehat{w}^{t}(e)]=w^{t}(e)\) for every edge \(e\) in \(G^{t}\). Second, instead of using the natural importance-weighted estimator \(\widehat{w}^{t}(e)=w^{t}(e)\mathbbm{1}_{\{e\in\mathfrak{p}^{t}\}}/p^{t}(e)\), the current form in (6) is the loss-based importance-weighted estimator used for technical reasons, similar to [1, Eqn. (11.6)]. Third, by exploiting our DAG structure and the definition of \(w^{t}(e)\) in (4), we construct an edge-specific quantity \(\overline{w}(e)\) which always upper bounds \(w^{t}(e)\).

We now analyze the regret of the algorithm with \(\widehat{w}^{t}(e)\) given by (6). The standard EXP3 analysis (see, e.g. [1, Chapter 11]) gives

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon)\leq\frac{1}{\eta}\max_{ \mathfrak{p}}\log\frac{1}{P^{1}(\mathfrak{p})}+\sum_{t=1}^{T}\mathbb{E}\left[ \frac{1}{\eta}\log\left(\sum_{\mathfrak{p}}P^{t}(\mathfrak{p})e^{\eta\widehat{ w}^{t}(\mathfrak{p})}\right)-\sum_{\mathfrak{p}}P^{t}(\mathfrak{p})\widehat{w}^{t}( \mathfrak{p})\right], \tag{33}\]

where \(\widehat{w}^{t}(\mathfrak{p})=\sum_{e\in\mathfrak{p}}\widehat{w}^{t}(e)\) is the estimated total weight of path \(\mathfrak{p}\), and the expectation is with respect to the randomness in the estimator \(\widehat{w}^{t}(e)\). For every path \(\mathfrak{p}=(z_{-},z_{r_{1},1},\cdots,z_{r_{K},K},z_{+})\) from the source to the sink, we have (by convention \(r_{K+1}=0\)):

\[\widehat{w}^{t}(\mathfrak{p})=\sum_{e\in\mathfrak{p}}w^{t}(e)\leq\sum_{e\in \mathfrak{p}}\overline{w}(e)=\sum_{j=1}^{K}(v_{i,1}-(j-1)r_{j}+jr_{j+1})=Kv_{ i,1}.\]

Since \(e^{x}\leq 1+x+x^{2}\) whenever \(x\leq 1\) and \(\log(1+y)\leq y\) whenever \(y>-1\), if \(\eta\leq 1/(Kv_{i,1})\), inequality (33) gives

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon) \leq\frac{1}{\eta}\max_{\mathfrak{p}}\log\frac{1}{P^{1}(\mathfrak{ p})}+\eta\sum_{t=1}^{T}\sum_{\mathfrak{p}}P^{t}(\mathfrak{p})\,\mathbb{E}[ \widehat{w}^{t}(\mathfrak{p})^{2}]\] \[\leq\frac{K}{\eta}\log\Big{\lceil}\frac{v_{i,1}}{\varepsilon} \Big{\rceil}+\eta\sum_{t=1}^{T}\sum_{\mathfrak{p}}P^{t}(\mathfrak{p})\cdot(K+1 )\sum_{e\in\mathfrak{p}}\mathbb{E}[\widehat{w}^{t}(e)^{2}],\]

where the last equality uses \((\sum_{i=1}^{n}x_{i})^{2}\leq n\sum_{i=1}^{n}x_{i}^{2}\), and that each path \(\mathfrak{p}\) from the source to the sink has length \(K+1\). To proceed, note that

\[\mathbb{E}[\widehat{w}^{t}(e)^{2}] =\overline{w}(e)^{2}\cdot(1-p^{t}(e))+\left(\overline{w}(e)-\frac {\overline{w}(e)-w^{t}(e)}{p^{t}(e)}\right)^{2}\cdot p^{t}(e)\] \[=w^{t}(e)^{2}+(\overline{w}(e)-w^{t}(e))^{2}\cdot\left(\frac{1}{p ^{t}(e)}-1\right),\]

and therefore

\[\sum_{\mathfrak{p}}P^{t}(\mathfrak{p})\sum_{e\in\mathfrak{p}}\mathbb{E}[ \widehat{w}^{t}(e)^{2}] =\sum_{\mathfrak{p}}P^{t}(\mathfrak{p})\sum_{e\in\mathfrak{p}} \left[w^{t}(e)^{2}+(\overline{w}(e)-w^{t}(e))^{2}\cdot\left(\frac{1}{p^{t}(e)} -1\right)\right]\] \[=\sum_{e}\left[w^{t}(e)^{2}+(\overline{w}(e)-w^{t}(e))^{2}\cdot \left(\frac{1}{p^{t}(e)}-1\right)\right]\sum_{\mathfrak{p}:e\in\mathfrak{p}}P^{t }(\mathfrak{p})\] \[=\sum_{e}\left[w^{t}(e)^{2}p^{t}(e)+(\overline{w}(e)-w^{t}(e))^{2 }(1-p^{t}(e))\right]\leq\sum_{e}\overline{w}(e)^{2},\]where in the middle we have used the definition \(\sum_{\mathbf{p}:e\in\mathfrak{p}}P^{t}(\mathfrak{p})=p^{t}(e)\) in (6). To further upper bound the above quantity, note that

\[\sum_{e}\overline{w}(e)^{2} \leq\sum_{j=1}^{K}\sum_{1\leq s\leq r\leq\lceil v_{i,1}/\varepsilon \rceil}(v_{i,1}+(j-1)r\varepsilon)^{2}\] \[\leq\left\lceil\frac{v_{i,1}}{\varepsilon}\right\rceil\sum_{j=1}^ {K}\sum_{r=1}^{\lceil v_{i,1}/\varepsilon\rceil}(V+(j-1)r\varepsilon)^{2}\] \[\leq 2\left\lceil\frac{v_{i,1}}{\varepsilon}\right\rceil\sum_{j=1} ^{K}\sum_{r=1}^{\lceil v_{i,1}/\varepsilon\rceil}(v_{i,1}^{2}+(j-1)^{2}r^{2} \varepsilon^{2})=O\left(\frac{K^{3}v_{i,1}^{4}}{\varepsilon^{2}}\right).\]

A combination of the above inequalities shows that as long as \(\eta\leq 1/(Kv_{i,1})\),

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon)=O\left(\frac{K}{\eta}\log\frac {v_{i,1}}{\varepsilon}+\frac{\eta TK^{4}v_{i,1}^{4}}{\varepsilon^{2}}\right).\]

Next, by the choice of \(\eta\) in (32), we have

\[\text{Reg}_{i}(\pi_{i},H_{-i}^{T},\varepsilon)=O\left(\frac{v_{i,1}^{2}\sqrt{ TK^{5}\log(v_{i,1}/\varepsilon)}}{\varepsilon}+K^{2}v_{i,1}\log\frac{v_{i,1}}{ \varepsilon}\right).\]

As for the computational complexity, the only difference from the Algorithm 2 is the additional computation of the estimated weights \(\widehat{w}^{t}(e)\) in (6), or equivalently, the marginal probability \(p^{t}(e)\). As \(P^{t}\) has a product structure in (22), the celebrated message passing algorithm in graphical models [24, Section 2.5.1] takes \(O(|E|v_{i,1}/\varepsilon)=O(Kv_{i,1}^{3}/\varepsilon^{3})\) time to compute all edge marginals \(\{p^{t}(e)\}_{e\in E}\). Therefore the overall computational complexity is \(O(TKv_{i,1}^{3}/\varepsilon^{3})\). 

### Regret Lower Bound

In this section we include the theorem and proof for the regret lower bound. The construction uses the \((K+1)\)-st highest price, but is similar for the \(K\)-th highest price.

**Theorem 4** (**restated, formal)**.: _Let \(K\geq 2\). For any policy \(\pi_{i}\) used by player \(i\), there exists a bid sequence \(\{\mathbf{b}_{-i}^{t}\}_{t=1}^{T}\) for the other players such that the expected regret in (3) satisfies \(\mathbb{E}[\text{Reg}_{i}(\pi_{i},\{\mathbf{b}_{-i}^{t}\}_{t=1}^{T})]\geq cv_{ i,1}K\sqrt{T},\) where \(c>0\) is an absolute constant._

Proof.: Without loss of generality assume that \(K=2k\) is an even integer, and by scaling we may assume that \(v_{i,1}=1\). Consider the following two scenarios:

* the utility of the bidder \(i\) is \(v_{i,j}\equiv 1\), for all \(j\in[K]\);
* at scenario \(1\), for every \(t\in[T]\), the other bidders' bids are \[\mathbf{b}_{-i}^{t}=\begin{cases}\left(\frac{2}{3},\frac{2}{3},\cdots,\frac{2 }{3},0,\cdots,0\right)&\text{with probability }0.5+\delta,\\ \left(\frac{2}{3},\frac{2}{3},\cdots,\frac{2}{3},\frac{2}{3},\cdots,\frac{2 }{3}\right)&\text{with probability }0.5-\delta,\end{cases}\] where the number of non-zero entries is \(k\) in the first line and \(2k\) in the second line, and \(\delta\in(0,1/4)\) is a parameter to be determined later. The randomness used at different times is independent.
* at scenario \(2\), for every \(t\in[T]\), the other bidders' bids are \[\mathbf{b}_{-i}^{t}=\begin{cases}\left(\frac{2}{3},\frac{2}{3},\cdots,\frac{2 }{3},0,\cdots,0\right)&\text{with probability }0.5-\delta,\\ \left(\frac{2}{3},\frac{2}{3},\cdots,\frac{2}{3},\frac{2}{3},\cdots,\frac{2 }{3}\right)&\text{with probability }0.5+\delta,\end{cases}\] where the number of non-zero entries is \(k\) in the first line and \(2k\) in the second line, and \(\delta\in(0,1/4)\) is a parameter to be determined later. The randomness used at different times is independent.

We denote by \(P\) and \(Q\) the distributions of \(\{\mathbf{b}_{-i}^{t}\}_{t=1}^{T}\) under scenarios 1 and 2, respectively, then

\[D_{\text{KL}}(P\|Q) =T\cdot D_{\text{KL}}(\text{Bern}(0.5+\delta)\|\text{Bern}(0.5- \delta))\] \[\leq T\cdot\chi^{2}(\text{Bern}(0.5+\delta)\|\text{Bern}(0.5- \delta))\] \[=T\cdot\frac{(2\delta)^{2}}{(0.5+\delta)(0.5-\delta)}\leq\frac{64 }{3}T\delta^{2}.\]

Consequently, by [15, Lemma 2.6],

\[1-\text{TV}(P,Q)\geq\frac{1}{2}\exp\left(-D_{\text{KL}}(P\|Q)\right)\geq\frac{ 1}{2}\exp\left(-\frac{64T\delta^{2}}{3}\right).\]

Next we investigate the separation between these two scenarios. It is clear that

\[\max_{\mathbf{b}_{i}}\mathbb{E}_{P}\left[u_{i}(\mathbf{b}_{i}; \mathbf{b}_{-i}^{t})\right] \geq\mathbb{E}_{P}\left[u_{i}((1,1,\cdots,1,0,\cdots,0);\mathbf{ b}_{-i}^{t})\right]\] \[=\left(\frac{1}{2}+\delta\right)\cdot k+\left(\frac{1}{2}-\delta \right)\cdot\frac{k}{3}=\frac{2+2\delta}{3}\cdot k;\] \[\max_{\mathbf{b}_{i}}\mathbb{E}_{Q}\left[u_{i}(\mathbf{b}_{i}; \mathbf{b}_{-i}^{t})\right] \geq\mathbb{E}_{Q}\left[u_{i}((1,1,\cdots,1,1,\cdots,1);\mathbf{ b}_{-i}^{t})\right]\] \[=\left(\frac{1}{2}-\delta\right)\cdot\frac{2k}{3}+\left(\frac{1}{ 2}+\delta\right)\cdot\frac{2k}{3}=\frac{2k}{3}.\]

Moreover, under \((P+Q)/2\) (i.e. \(\mathbf{b}_{-i}^{t}\) follows a \(\text{Bern}(1/2)\) distribution), suppose that the vector \(\mathbf{b}_{i}\) has \(k^{\prime}\) components smaller than \(2/3\). Distinguish into two scenarios:

* if \(k^{\prime}<k\), then \[\mathbb{E}_{(P+Q)/2}\left[u_{i}(\mathbf{b}_{i};\mathbf{b}_{-i}^{t})\right] \leq\frac{1}{2}\cdot\frac{2k-k^{\prime}}{3}+\frac{1}{2}\cdot\frac{2k-k^{ \prime}}{3}\leq\frac{2k}{3};\]
* if \(k^{\prime}\geq k\), then \[\mathbb{E}_{(P+Q)/2}\left[u_{i}(\mathbf{b}_{i};\mathbf{b}_{-i}^{t})\right] \leq\frac{1}{2}\cdot(2k-k^{\prime})+\frac{1}{2}\cdot\frac{2k-k^{ \prime}}{3}\leq\frac{2k}{3}.\]

Therefore, it always holds that

\[\max_{\mathbf{b}_{i}}\mathbb{E}_{(P+Q)/2}\left[u_{i}(\mathbf{b}_{i};\mathbf{b }_{-i}^{t})\right]\leq\frac{2k}{3}.\]

Consequently, for each \(\mathbf{b}_{i}\),

\[\max_{\mathbf{b}_{i}^{t}}\mathbb{E}_{P}\left[u_{i}(\mathbf{b}_{i }^{t};\mathbf{b}_{-i}^{t})-u_{i}(\mathbf{b}_{i};\mathbf{b}_{-i}^{t})\right]+ \max_{\mathbf{b}_{i}^{t}}\mathbb{E}_{Q}\left[u_{i}(\mathbf{b}_{i}^{t};\mathbf{ b}_{-i}^{t})-u_{i}(\mathbf{b}_{i};\mathbf{b}_{-i}^{t})\right]\] \[\geq\max_{\mathbf{b}_{i}^{t}}\mathbb{E}_{P}\left[u_{i}(\mathbf{ b}_{i}^{t};\mathbf{b}_{-i}^{t})\right]+\max_{\mathbf{b}_{i}^{t}}\mathbb{E}_{Q} \left[u_{i}(\mathbf{b}_{i}^{t};\mathbf{b}_{-i}^{t})\right]-2\max_{\mathbf{b}_{ i}}\mathbb{E}_{(P+Q)/2}\left[u_{i}(\mathbf{b}_{i};\mathbf{b}_{-i}^{t})\right]\] \[\geq\frac{2+2\delta}{3}k+\frac{2k}{3}-2\cdot\frac{2k}{3}=\frac{ 2\delta k}{3}.\]

In other words, any bid vector \(\mathbf{b}_{i}\) either incurs a total regret \((\delta kT)/3\) under \(P\), or incurs a total regret \((\delta kT)/3\) under \(Q\).

Now the classical two-point method (see, e.g. [15, Theorem 2.2]) gives

\[\mathbb{E}_{(P+Q)/2}[\text{Reg}_{i}(\pi_{i},\{\mathbf{b}_{-i}^{t}\}_{t=1}^{T})] \geq\frac{\delta kT}{3}\cdot(1-\text{TV}(P,Q))\geq\frac{\delta kT}{6}\exp\left( -\frac{64T\delta^{2}}{3}\right)\]

for every \(\delta\in(0,1/4)\). Choosing \(\delta=1/(8\sqrt{T})\) gives that

\[\mathbb{E}_{(P+Q)/2}[\text{Reg}_{i}(\pi_{i},\{\mathbf{b}_{-i}^{t}\}_{t=1}^{T}) ]\geq\frac{K\sqrt{T}}{96e^{1/3}},\]

i.e. the claimed lower bound holds with \(c=1/(96e^{1/3})\)Appendix: Equilibrium Analysis

In this section we show that the pure Nash equilibria with price zero of the \((K+1)\)-st auction are the only ones that are robust to deviations by groups of players, captured through the notion of the core in the game among the bidders. The core of a game was formulated by Edgeworth [1] and brought into game theory by Gillies [1]. There is an extensive body of literature on the core of various games, including for auctions; see, e.g., analysis of collusion (cartel behavior) in first price auctions in [20].

Our focus here is the core of the game among the bidders, where the auctioneer first sets the auction format and then the bidders can strategize and collude among themselves, without the auctioneer. Roughly speaking, a strategy profile is core-stable if no group \(C\) of players can deviate simultaneously (i.e. each player \(i\in C\) deviates to some alternative strategy profile), such that each player in \(C\) weakly improves and the improvement is strict for at least one player. For a deviation to take place, the players in \(C\) coordinate and switch their strategies simultaneously, while the players outside \(C\) keep their previous strategies. Every core-stable strategy profile is also a Nash equilibrium, since a strategy profile that is stable against deviations by groups of players is also stable against deviations by individuals.

We consider two variants of the core, with and without monetary transfers [14, 1, 2]. In the case with transfers, the players can make monetary payments to each other, and so a strategy profile consists of a tuple of bids and transfers. In the case without transfers, the players cannot make such transfers and their strategy is the bid vector; thus the only agreement they can make in this case is to coordinate their bids.

### Core with transfers

A strategy profile in this setting is described by a tuple \((\mathbf{b},\mathbf{t})\), where \(\mathbf{b}\) is a bid profile and \(\mathbf{t}\) is a profile of payments (aka monetary transfers), such that \(t_{i,j}\geq 0\) is the monetary payment of player \(i\) to player \(j\). At this strategy profile, the auctioneer runs the auction with bids \(\mathbf{b}\) and returns the outcome (price and allocation), while the players make the monetary transfers \(\mathbf{t}\) to each other.

For each profile of monetary transfers \(\mathbf{t}\), let \(m_{i}(\mathbf{t})\) be the net amount of money that player \(i\) gets after all the transfers are made:

\[m_{i}(\mathbf{t})=\sum_{j=1}^{n}t_{j,i}-\sum_{j=1}^{n}t_{i,j}\,.\]

The utility of player \(i\) at profile \((\mathbf{b},\mathbf{t})\) is

\[u_{i}(\mathbf{b},\mathbf{t})=m_{i}(\mathbf{t})+\left(\sum_{j=1}^{x_{i}( \mathbf{b})}v_{i,j}\right)-p\cdot x_{i}(\mathbf{b})\,.\]

Deviations.Since in the case of auctions the actions (e.g. bids) of a group of players can affect the utility of the players outside of the group, it is necessary to model how the players outside \(S\) react to the deviation. Such reactions have been studied in the literature on the core with externalities (see, e.g., [13, 14]).

We consider neutral reactions, where non-deviators (i.e. players outside \(S\)) have a mild reaction to the deviation: they maintain the same bids as before the deviation and the monetary transfer of each player \(i\in[n]\setminus S\) to each player \(j\in S\) is non-negative. The core where the deviators assume the non-deviators will have neutral reactions to the deviation is known as the neutral core [14]. Several other variants of the core exist, such as pessimistic core, where each deviator assumes that they will be punished in the worst possible way by the non-deviators. Such variants are also interesting to study, but next we focus on the basic case of neutral reactions.

A group of players will alternatively be called a _coalition_. The set of all players, \([n]\), will also be called sometimes the grand coalition.

A group of players that agree on a deviation are known as a blocking coalition, formally defined next.

[MISSING_PAGE_FAIL:30]

Thus player \(i_{j}\) has a strictly improving deviation, which contradicts the choice of \((\mathbf{b},\mathbf{t})\) as core-stable with \(\mathbf{t}\neq\mathbf{0}\). Thus the assumption must have been false. It follows that the only core stable profiles (if any) have \(\mathbf{t}=\mathbf{0}\).

Step II: the social welfare is maximized.Next we show that if \((\mathbf{b},\mathbf{t})\) is a core-stable outcome, then the allocation induced by \(\mathbf{b}\) is welfare maximizing. Assume towards a contradiction this is not the case. By Step I, we have \(\mathbf{t}=\mathbf{0}\).

Let \(w_{1}\geq\ldots\geq w_{n\cdot K}\) be the bids sorted in decreasing order (breaking ties lexicographically) at the truth-telling bid profile \(\mathbf{v}\). For each \(j\in[n\cdot K]\), let \(\pi_{j}\) be the player that submitted bid \(w_{j}\) in this ordering.

Let \(\widetilde{w}_{1}\geq\ldots\geq\widetilde{w}_{n\cdot K}\) be the bids sorted in decreasing order (breaking ties lexicographically) at the bid profile \(\mathbf{b}\). Let \(\widetilde{\pi}_{j}\) be the player that submitted bid \(\widetilde{w}_{j}\) in this ordering.

Consider an undirected bipartite graph \(G=(L,R,E)\), where \(L\) is the left part, \(R\) the right part, and \(E\) the set of edges. Define

* \(L=\{(i,j)\mid i\in[n],j\in[K],\text{ and }x_{i}(\mathbf{v})\geq j\}\). For example, if \(x_{i}(\mathbf{v})=2\), then \(L\) has nodes \((i,1)\) and \((i,2)\). If on the other hand \(x_{i}(\mathbf{v})=0\), then \(L\) has no nodes \((i,j)\), for any \(j\).
* \(R=\{(i,j)\mid i\in[n],j\in[K],\text{ and }x_{i}(\mathbf{b})\geq j\}\).
* \(E=(s_{1},s_{2})\), for all \(s_{1}\in L\) and \(s_{2}\in R\).

Since both allocations \(\mathbf{x}(\mathbf{v})\) and \(\mathbf{x}(\mathbf{b})\) allocate exactly \(K\) units, we have \(|L|=|R|=K\). Consider now a graph \(G_{1}=(L_{1},R_{1},E_{1})\) obtained from \(G\) as follows. Set \(G=G_{1}\). Then for each node \((i,j)\in L\): if the node also appears in \(R\), then delete both copies of the node, together with any edges containing them.

Thus in \(G_{1}\), the left side \(L_{1}\) consists of nodes \((i,j)\) with \(x_{i}(\mathbf{v})\geq j\) but \(x_{i}(\mathbf{b})<j\). For each such node \((i,j)\), let \(k\) be the rank of the valuation \(v_{i,j}\) in the ordering \(\pi\). By definition of \(G_{1}\), we have that \(R_{1}\) does not have any node of the form \((i,s)\) for any \(s\). To see this, observe that

* nodes \((i,s)\) with \(s<j\) were deleted when constructing \(G_{1}\) from \(G\), and
* nodes \((i,s)\) with \(s\geq j\) do not exist even in \(G\) (if they did, then \((i,j)\) would exist in both \(L\) and \(R\) and so would have been deleted when constructing \(G_{1}\)).

Let \(d(i,j)\) be the player that displaces player \(i\)'s bid for the \(j\)-th unit at the bid profile \(\mathbf{b}\). Formally, \(d(i,j)\) is the owner of bid \(\widetilde{w}_{k}\) when considering the bids \(\mathbf{b}\) in descending order. Let \(\omega(i,j)\in\mathbb{N}\) be such that player \(d(i,j)\) obtains an \(\omega(i,j)\)-th unit in their bundle at \(\mathbf{b}\).

Since \(x_{i}(\mathbf{b})<j\), we have \(i\neq d(i,j)\). Since at the truth-telling profile player \(i\) gets a \(j\)-th unit but player \(d(i,j)\) does not get an \(\omega(i,j)\)-th unit, we have \(v_{i,j}\geq v_{d(i,j),\omega(i,j)}\). Moreover, since the allocation \(\mathbf{x}(\mathbf{v})\) maximizes welfare but \(\mathbf{x}(\mathbf{b})\) does not, the inequality is strict for some \((i,j)\in L_{1}\).

We claim that \([n]\) is a blocking coalition. To show this, we will argue there is a bid profile \(\mathbf{b}^{*}\) and vector of transfers \(\mathbf{t}^{*}\) such that at \((\mathbf{b}^{*},\mathbf{t}^{*})\) the utility of each player \(i\in[n]\) is weakly improved and the improvement is strict for at least one player. For each \(i\in[n],k\in[K]\), let

\[b^{*}_{i,j}=\begin{cases}v_{i,j}&\text{if }x_{i}(\mathbf{v})\geq j\\ 0&\text{otherwise.}\end{cases}\]

Then \(\mathbf{x}(\mathbf{b}^{*})=\mathbf{x}(\mathbf{v})\) and \(p(\mathbf{b}^{*})=0\). Also define monetary transfers \(\mathbf{t}^{*}\) as follows:

* Initialize \(\mathbf{t}^{*}=0\). Let \(\varepsilon=\min_{(i,j)\in L_{1}}\left(v_{i,j}-v_{d(i,j),\omega(i,j)}\right)/2\). Then \(v_{i,j}\geq v_{d(i,j),\omega(i,j)}+\varepsilon\) for each \((i,j)\in L_{1}\).
* For each \((i,j)\in L_{1}\), let \(t^{*}_{i,d(i,j)}:=t^{*}_{i,d(i,j)}+v_{d(i,j),\omega(i,j)}+\varepsilon\).

Thus each player \(i\) that got a \(j\)-th unit in their bundle at the truth-telling profile did so because their bid for the \(j\)-th unit had rank \(k\leq K\). Since \(i\) does not get the \(j\)-th unit at bid profile \(\mathbf{b}\), there is a player \(d(i,j)\) whose bid for the \(j\)-th unit had rank \(k\) and who received this way a \(\omega(i,j)\)-th unit in their bundle.

We argue that all the players weakly improve their utility at \((\mathbf{b}^{*},\mathbf{t}^{*})\), and the improvement is strict for at least one of them.

* For each pair \((i,j)\in L_{1}\), under the bid profile \(\mathbf{b}^{*}\) player \(i\) receives the \(j\)-th unit at a cost of zero and transfers an amount of \(v_{d(i,j),\omega(i,j)}+\varepsilon\) to player \(d(i,j)\). The component of the utility that player \(i\) gets from unit \(j\), counting the value, price, and transfer related to unit \(j\), is \(v_{i,j}-0-(v_{d(i,j),\omega(i,j)}+\varepsilon)\geq 0\), where the inequality holds by choice of \(\varepsilon\). This is a weak improvement compared to the utility that player \(i\) gets from unit \(j\) at profile \((\mathbf{b},\mathbf{0})\), which is zero. Moreover, the improvement is strict for at least one pair \((i,j)\in L_{1}\), since the bid profile \(\mathbf{b}\) does not induce a welfare maximizing allocation.
* For each pair \((i,j)\in L\setminus L_{1}\), at the profile \((\mathbf{b},\mathbf{0})\) player \(i\) gets utility \(v_{i,j}-p(\mathbf{b})\) from unit \(j\), since it makes no transfers. At profile \(\mathbf{b}^{*}\), player \(i\) gets unit \(j\) at a price of zero and makes no transfers (towards other players) related to unit \(j\). Thus the component of the utility related to unit \(j\) is \(v_{i,j}-0-0=v_{i,j}\). Since \(p(\mathbf{b})\geq 0\), we have \(v_{i,j}-p(\mathbf{b})\leq v_{i,j}\), a weak improvement for player \(i\) with respect to unit \(j\).
* For each pair \((i,j)\not\in L\): if \((i,j)\not\in R\), then player \(i\) does not get a \(j\)-th unit under either \(\mathbf{b}\) or \(\mathbf{b}^{*}\), so its utility from unit \(j\) is zero at both profiles. If on the other hand \((i,j)\in R\), since \((i,j)\not\in L\), it must be that \((i,j)\in R_{1}\). At profile \((\mathbf{b},\mathbf{t})\) the utility of player \(i\) from unit \(j\) is \(v_{i,j}-p(\mathbf{b})\) since it gets the unit and receives no transfers. At profile \((\mathbf{b}^{*},\mathbf{t}^{*})\) player \(i\) does not receive the unit but receives a transfer of \(v_{i,j}+\varepsilon\) from the player that gets the unit instead. This is again a weak improvement.

Thus all players weakly improve their utility at \((\mathbf{b}^{*},\mathbf{t}^{*})\) and the improvement is strict for at least one player, so the profile \((\mathbf{b},\mathbf{0})\) is not stable. This is a contradiction, thus the assumption that \(\mathbf{x}(\mathbf{b})\) is not welfare maximizing must have been false.

Step III: the price is zero.Next we show that if profile \((\mathbf{b},\mathbf{0})\) is core-stable, then \(p(\mathbf{b})=0\). By Step II, the bid profile \(\mathbf{b}\) induces a welfare maximizing allocation.

Suppose towards a contradiction that \(p(\mathbf{b})>0\). Then we show there exists a blocking coalition. Let \(w_{1}\geq\ldots\geq w_{n\cdot K}\) be the bids sorted in decreasing order (breaking ties lexicographically) at bid profile \(\mathbf{b}\). For each \(i\in[n\cdot K]\), let \(\pi_{i}\) be the owner of bid \(w_{i}\).

We match the players as follows. Create a bipartite graph with left part \(L=(\pi_{1},\ldots,\pi_{K})\) (allowing repetitions) and right part \(R=(\pi_{K+1},\ldots,\pi_{2K})\) (allowing repetitions). For each \(i\in[K]\), create edge \((\pi_{i},\pi_{K+i})\). Consider the profile \((\mathbf{b}^{*},\mathbf{t}^{*})\), where

\[b^{*}_{i,j}=\begin{cases}v_{i,j}&\text{if }x_{i}\geq j\\ 0&\text{otherwise.}\end{cases}\]

Define the transfers as follows:

* Initialize \(\mathbf{t}^{*}=\mathbf{0}\). Set \(\varepsilon=p/(2K)\). For each \(i\in[K]\), let player \(\pi_{i}\) pay an additional amount of \(\varepsilon\) to player \(\pi_{K+i}\): \(t^{*}_{\pi_{i},\pi_{K+i}}=t^{*}_{\pi_{i},\pi_{K+i}}+\varepsilon\).

Then each player \(i\) with \(x_{i}(\mathbf{b})>0\) gets the same allocation at \(\mathbf{b}^{*}\) as at \(\mathbf{b}\), but pays a price of zero for the units and makes a transfer of at most \(p/2\) to other players, resulting in improved utility compared to the utility at profile \((\mathbf{b},\mathbf{0})\).

On the other hand, each player \(i\) with \(x_{i}(\mathbf{b})=0\) on the other hand gets the same allocation at \(\mathbf{b}^{*}\) as at \(\mathbf{b}\) (i.e. no units), but receives a non-negative amount of money from other players, and the net amount of money received is strictly positive for all the players \(\pi_{K+1},\ldots,\pi_{2K}\).

Thus there is an improving deviation, which contradicts the choice of \((\mathbf{b},\mathbf{t})\) as core-stable. Thus the assumption must have been false, and \(p(\mathbf{b})=0\).

### Core without transfers

A strategy profile in this setting is described by a bid profile \(\mathbf{b}\), where \(\mathbf{b}_{i}=(b_{i,1},\ldots,b_{i,K})\) is the bid vector of player \(i\). In the setting without transfers, given a profile \(\mathbf{b}\) of bids, a blocking coalition \(S\) needs to agree on simultaneously changing their bids, such that when the players outside \(S\) still bid according to \(\mathbf{b}\), the players in \(S\) weakly improve their utility and the improvement is strict for at least one player in \(S\).

The core stable profiles are those that have no such blocking coalitions. Formally, we have:

**Definition 5** (Blocking coalition, without transfers).: _Let \(\mathbf{b}\) be a bid profile. A group \(S\subseteq[n]\) of players is a blocking coalition if there exists a bid profile \(\widetilde{\mathbf{b}}\), at which each player \(i\in S\) weakly improves their utility, the improvement is strict for at least one player in \(S\), and \(\widetilde{b}_{i,j}=b_{i,j}\) for all \(i\in[n]\setminus S,j\in[K]\)._

**Definition 6** (The core with transfers).: _The core with transfers consists of bid profiles \(\mathbf{b}\) at which there are no blocking coalitions. Such profiles are core-stable._

The non-transferable utility core can be characterized as follows.

**Theorem 5** (Core without transfers; restated).: _Consider \(K\) units and \(n>K\) hungry players. The core without transfers of the \((K+1)\)-st auction can be characterized as follows:_

* _every bid profile_ \(\mathbf{b}\) _that is core stable has price zero (i.e._ \(p(\mathbf{b})=0\)_);_
* _each allocation_ \(\mathbf{z}\) _where all the units are allocated can be supported in a core stable bid profile_ \(\mathbf{b}\) _with price zero (i.e._ \(\mathbf{x}(\mathbf{b})=\mathbf{z}\) _and_ \(p(\mathbf{b})=0\)_)._

Proof.: The proof is in two parts.

Part I: the price in the core is zero.Consider a bid profile \(\mathbf{b}\) that is core-stable. Suppose towards a contradiction that \(p(\mathbf{b})>0\).

Let \(M=\sum\limits_{\ell_{1}=1}^{n}\sum\limits_{\ell_{2}=1}^{K}v_{\ell_{1},\ell_{2}}\). Define a bid profile \(\widetilde{\mathbf{b}}\) such that for all \(i\in[n],j\in[K]\):

\[\widetilde{b}_{i,j}=\begin{cases}M&\text{ if }j\leq x_{i}(\mathbf{b})\\ \varepsilon&\text{ otherwise.}\end{cases} \tag{34}\]

At \(\widetilde{\mathbf{b}}\), the players only submit bids equal to \(M>0\) for the units they are supposed to get at allocation \(\mathbf{x}(\mathbf{b})\), and moreover, there are exactly \(K\) strictly positive bids. Thus \(\mathbf{x}(\widetilde{\mathbf{b}})=\mathbf{x}(\mathbf{b})\). Moreover, \(p(\mathbf{b})=0\) since the \((K+1)\)-st highest bid is \(0\).

Then the grand coalition \(C=[n]\) is blocking with the profile \(\widetilde{\mathbf{b}}\), in contradiction with \(\mathbf{b}\) being core stable. Thus the assumption must have been false, so \(p(\mathbf{b})=0\).

Part II: every allocation can be implemented at a core-stable bid profile.Let \(\mathbf{z}\) be an arbitrary allocation at which all the units are allocated.

Define \(\mathbf{b}\) such that for all \(i\in[n],j\in[K]\), we have \(b_{i,j}=M\) if \(j\leq z_{i}\) and \(b_{i,j}=0\) otherwise. Then \(\mathbf{x}(\mathbf{b})=\mathbf{z}\) and \(p(\mathbf{b})=0\). Let \(W=\{i\in[n]\mid z_{i}>0\}\) be the set of "winners" at \(\mathbf{b}\).

Assume towards a contradiction that \(\mathbf{b}\) is not stable. Then there is a blocking coalition \(C=\{i_{1},\ldots,i_{k}\}\subseteq[n]\) with alternative bid profile \(\mathbf{d}=(\mathbf{d}_{i_{1}},\ldots,\mathbf{d}_{i_{k}})\). Denote \(\widetilde{\mathbf{b}}=(\mathbf{d},\mathbf{b}_{-C})\) the profile where each player \(i\in C\) bids \(\widetilde{\mathbf{b}}_{i}=\mathbf{d}_{i}\) and each player \(i\not\in C\) bids \(\widetilde{\mathbf{b}}_{i}=\mathbf{b}_{i}\). We must have \(u_{i}(\widetilde{\mathbf{b}})\geq u_{i}(\mathbf{b})\) for all \(i\in C\), with strict inequality for some player \(i\in C\).

If \(C\cap W=\emptyset\), then the only way for at least one of the players in \(C\) to change their allocation is to make some of their bids at least \(H\). But this increases the price from zero to at least \(H\), which yields negative utility for everyone. Thus \(C\cap W\neq\emptyset\). We consider two cases:1. Case \(p(\widetilde{\mathbf{b}})>0\). Each player \(i\in C\cap W\) requires strictly more units at \(\widetilde{\mathbf{b}}\) than at \(\mathbf{b}\), to compensate for the higher price at \(\widetilde{\mathbf{b}}\). Thus \(\mathbf{x}_{i}(\widetilde{\mathbf{b}})>z_{i}\) for all \(i\in C\cap W\) (\(\dagger\)). If \(x_{i}(\widetilde{\mathbf{b}}_{i})<z_{i}\) for some player \(i\in W\setminus C\), there would have to exist at least \(K+1\) bids with value at least \(H\), and so \(p(\widetilde{\mathbf{b}})\geq H\), which would give negative utility to all the players including the deviators. Thus \(x_{i}(\widetilde{\mathbf{b}}_{i})\geq z_{i}\) for all \(i\in W\setminus C\) (\(\ddagger\)). Combining (\(\dagger\)) and (\(\ddagger\)) gives a contradiction: \[\sum_{i\in C\cap(W\setminus C)}x_{i}(\widetilde{\mathbf{b}})>\sum_{i\in C\cup (W\setminus C)}z_{i}=K\,.\] Thus \(p(\widetilde{\mathbf{b}})>0\) cannot hold.
2. Case \(p(\mathbf{b})=0\). Then each player \(i\in C\cap W\) requires \(u_{i}(\widetilde{\mathbf{b}})\geq z_{i}\). Since \(p(\widetilde{\mathbf{b}})=0\), the top \(K\) bids are strictly positive and the remaining bids are zero. Then each player \(i\in C\cap W\) submits exactly \(z_{i}\) strictly positive bids. It follows that \(\mathbf{x}_{i}(\widetilde{\mathbf{b}})=\mathbf{x}_{i}(\mathbf{b})\) and \(p(\widetilde{\mathbf{b}})=p(\mathbf{b})\) for each \(i\in[n]\), which means no player in \(C\) strictly improves. Thus \(C\) cannot be blocking.

In both cases \(1\) and \(2\) we obtained a contradiction, so \(\mathbf{b}\) is core-stable, \(p(\mathbf{b})=0\), and \(\mathbf{x}(\mathbf{b})=\mathbf{z}\) as required. 

## Appendix D Theorems from prior work

In this section we include the theorem from [4] that we use. In the problem of prediction under expert advice, there are \(N\) experts in total, and at each round \(t\in[T]\):

* learner chooses a probability distribution \(p_{t}\) over \([N]\);
* nature reveals the losses \(\{\ell_{t,i}\}_{i\in[N]}\) of all experts at time \(t\), where \(\ell_{t,i}\in[0,L]\).

For a given sequence of probability distributions \((p_{1},\cdots,p_{T})\), the learner's regret is defined to be

\[\text{Reg}(T,(p_{1},\cdots,p_{T}))=\sum_{t=1}^{T}\sum_{i=1}^{N}p_{t}(i)\ell_{t,i}-\min_{i^{*}\in[N]}\sum_{t=1}^{T}\ell_{t,i^{*}}.\]

For this problem, the exponentially weighted average forecaster, also known as the Hedge algorithm, is defined as follows. The algorithm initializes \(p_{1}=\sigma\), an arbitrary prior distribution over the experts \([N]\) such that each expert \(i\) is selected with probability \(\sigma_{i}>0\). For \(t\geq 2\), the forecaster updates

\[p_{t}(i)=\frac{p_{t-1}(i)\exp(-\eta\ell_{t-1,i})}{\sum_{j=1}^{N}p_{t-1}(j)\exp (-\eta\ell_{t-1,j})},\quad\forall i\in[N],\]

where \(\eta>0\) is a learning rate.

Next we include the statement of Theorem 2.2 of [4] in our notation.

**Theorem 7** (Theorem 2.2 of [4]).: _Consider the exponentially weighted average forecaster with \(N\) experts, learning rate \(\eta>0\), time horizon \(T\), and rewards in \([0,1]\). Suppose the initial distribution \(\sigma\) on the experts is uniform, that is, \(\sigma=(1/N,\ldots,1/N)\). The regret of the forecaster is_

\[\text{Reg}(T,(p_{1},\cdots,p_{T}))\leq\frac{\log N}{\eta}+\frac{T\eta}{8}\,.\]

The following corollary is a well known variant of the above theorem, to allow rewards in an interval \([0,L]\) and an arbitrary initial distribution \(\sigma\) over the experts.

**Corollary 1**.: _Consider the exponentially weighted average forecaster with \(N\) experts, learning rate \(\eta>0\), time horizon \(T\), and rewards in \([0,L]\). Suppose the initial distribution on the experts is \(\sigma\). The regret of the forecaster is_

\[\text{Reg}(T,(p_{1},\cdots,p_{T}))\leq\frac{1}{\eta}\max_{i\in[N]}\log\left( \frac{1}{\sigma_{i}}\right)+\frac{TL^{2}\eta}{8}\,.\]The proof of Corollary 1 is identical to that of Theorem 7, except for the following two differences:

* Instead of \(W_{t}=\sum_{i=1}^{N}\exp(-\eta\sum_{s\leq t}\ell_{s,i})\), we define \(W_{t}=\sum_{i=1}^{N}\sigma_{i}\exp(-\eta\sum_{s\leq t}\ell_{s,i})\). In this way, \[\log\frac{W_{T}}{W_{0}}=\log W_{T}\geq-\eta\min_{i^{*}\in[N]}\sum_{t=1}^{T}\ell _{t,i^{*}}-\max_{i\in[N]}\log\frac{1}{\sigma_{i}}.\]
* When applying [1, Lemma 2.2], we use the interval for the rewards as \([0,L]\) instead of \([0,1]\).