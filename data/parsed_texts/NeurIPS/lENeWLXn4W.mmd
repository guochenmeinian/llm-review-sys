# A New Linear Scaling Rule for Differentially Private Hyperparameter Optimization

Anonymous Author(s)

Affiliation

Address

email

###### Abstract

A major direction in differentially private (DP) machine learning is DP fine-tuning: pretraining a model on a source of public data and transferring the extracted features to downstream tasks. This is an important setting because many industry deployments fine-tune publicly available feature extractors on proprietary data for downstream tasks. In this paper we propose a new linear scaling rule, a hyperparameter optimization algorithm that privately selects hyperparameters to optimize the privacy-utility tradeoff. A key insight into the design of our method is that our new linear scaling rule jointly increases the step size and number of steps as \(\varepsilon\) increases. Our work is the first to obtain state-of-the-art performance on a suite of 20 benchmark tasks across computer vision and natural language processing for a wide range of \(\varepsilon\in[0.01,8.0]\) while accounting for the privacy cost of hyperparameter tuning.

## 1 Introduction

Industry deployments make use of pretrained models [79] by fine-tuning on task-specific datasets [35; 6; 69] and serving consumer applications that span the range of modalities from portraiture [65] to chatbots [44]. A crucial component of interfacing machine learning models closely with user data is ensuring that the process remains _private_[74], and Differential Privacy (DP) is the gold standard for quantifying privacy risks and providing provable guarantees against attacks [20]. DP implies that the output of an algorithm e.g., the final weights trained by stochastic gradient descent (SGD) do not change much if a single datapoint in the dataset changes.

**Definition 1.1** (Differential Privacy).: A randomized mechanism \(\mathcal{M}\) with domain \(\mathcal{D}\) and range \(\mathcal{R}\) preserves \((\varepsilon,\delta)\)-differential privacy iff for any two neighboring datasets \(D,D^{\prime}\in\mathcal{D}\) and for any subset \(S\subseteq\mathcal{R}\) we have \(\Pr[\mathcal{M}(D)\in S]\leq e^{\varepsilon}\Pr[\mathcal{M}(D^{\prime})\in S ]+\delta\)

where \(D\) and \(D^{\prime}\) are neighboring datasets if they differ in a single entry, \(\varepsilon\) is the privacy budget and \(\delta\) is the failure probability.

Figure 1: Our new linear scaling rule first does a small number of trials with a very small privacy budget, then does a small number of trials with a slightly larger privacy budget, and finally does linear interpolation through the optimal hyperparameters from these low-cost runs up to the final privacy costDifferentially Private Stochastic Gradient Descent (DP-SGD) [72; 1] is the standard privacy-preserving training algorithm for training neural networks on private data, with an update rule given by \(w^{(t+1)}=w^{(t)}-\frac{\eta_{t}}{|B_{\xi}|}\left(\sum_{i\in B_{t}}\frac{1}{ \mathrm{c}}\textbf{clip}_{\text{C}}(\nabla\ell(x_{i},w^{(t)}))+\sigma\xi\right)\) where the changes to SGD are the per-sample gradient clipping \(\textbf{clip}_{\text{C}}(\nabla\ell(x_{i},w^{(t)}))=\frac{C\times\nabla\ell(x_ {i},w^{(t)})}{\max[C,||\nabla(\ell(x_{i},w^{(t)})||_{2})]}\), and addition of noise sampled from a \(d\)-dimensional Gaussian distribution \(\xi\sim\mathcal{N}(0,1)\) with standard deviation \(\sigma\). These steps alter the bias-variance tradeoff of SGD and degrade utility, creating a challenging privacy-utility tradeoff. Recent work has made significant progress in closing the gap in performance between private and non-private fine-tuning of transformer-scale models [46; 52; 7; 51], but a key problem presents a concrete obstacle to implementing DP algorithms to power real-world consumer-facing machine learning applications.

The privacy analysis of current approaches for private training does not account for the cost of hyperparameter tuning, and DP-SGD additionally increases the hyperparameter tuning burden compared to vanilla SGD. These hyperparameters include the learning rate schedule, the clipping bound, the batch size, and the amount of noise to add at each iteration. Because private training introduces additional hyperparameters, biases optimization by clipping the gradient, and imposes privacy-utility tradeoffs for existing hyperparameters, it is challenging to apply hyperparameter selection strategies from non-private training, even on the same dataset. Furthermore prior SOTA work in private training does not use similar hyperparameters as non-private training so hyperparameter search algorithms cannot be leveraged from the broader literature. More specifically, conventional non-private training uses SGD with momentum [61] or AdamW [36] to train for hundreds of epochs. However, training for additional iterations in DP-SGD requires adding additional noise [27], and taking large step sizes (such as with momentum) with low signal-to-noise ratio (SNR) can destabilize training [3]. Prior work aims to minimize the amount of noise that is added during training by utilizing early stopping, training for as little as a single iteration [51]. Prior work has either fixed these hyperparameters without explanation [7] or performed an extensive search to find the best values [15], but the hundreds of trials of hyperparameter tuning [51] go unaccounted for in the privacy analysis.

We propose a new linear scaling rule (Alg. 1, Fig. 1) that automatically selects hyperparameters to optimize the privacy-utility tradeoff of private fine-tuning. In particular, as our privacy budget increases from \(\varepsilon=0\rightarrow\infty\), we increase the step size and number of steps. Our method accounts for the privacy cost of hyperparameter selection by allotting a small portion of the budget to find the best hyperparameters at \(\varepsilon\ll 1\) and scaling these up to \(\varepsilon=1\). We summarize our contributions:

* We demonstrate that our new linear scaling rule reduces the computation and privacy cost of hyperparameter optimization by an order of magnitude without sacrificing performance
* Linear scaling can obtain new SOTAs for both full fine-tuning and linear probing of both convolutional and transformer architectures across \(20\) vision and language tasks
* We compare four model architectures for a set of five vision benchmarks and find that the private-non private utility gap decreases as models improve, with the best model across all five tasks obtaining lossless performance of \(99\%\) accuracy for \(\varepsilon=1\) on CIFAR10
* We find that linear scaling is robust to domain shifts between private training and test data
* We find that models trained with our method can provide good performance even when there is a large shift between public and private data
* We validate that models trained with our method can perform well for zero-shot classification
* We provide our code as a part of our empirical evaluation.

Figure 2: We compare the best private and best non-private test accuracy performances of our method to prior work using models pretrained on ImageNet-21k and fine-tuned on CIFAR10 and CIFAR100 datasets. Our results at \(\varepsilon=1\) include the cost of hyperparameter tuning via applying the linear scaling rule at \(\varepsilon\in[0.01,0.1]\).

## 2 A New Linear Scaling Rule

In this section we detail how our method chooses each hyperparameter in DP-SGD, prove the privacy guarantee of the overall hyperparameter selection process, and provide a theoretical analysis.

A new linear scaling ruleThe well-known linear scaling rule [29] proposes increasing the learning rate with the batch size. We propose a new linear scaling rule that details how to select all hyperparameters in DP-SGD. Our method first fixes full-batch, unit clipping norm, zero initialization and use SGD with momentum, and then jointly scales the learning rate and number of steps with \(\varepsilon\). We provide extensive ablations of each design choice in our hyperparameter optimization algorithm in Appendix A.2. Prior work has exclusively taken small step sizes [51; 52; 7; 15; 9] on the order of \(\{10^{-5},10^{-3}\}\) and works that train transformers have also trained for a small number of epochs \(\{1,3\}\)[51; 7]. While this works well to recover the bulk of the non-private performance when \(\varepsilon\) is very small, it is natural to expect that as \(\varepsilon\to\infty\) we should increase the parameters of training to more closely resemble that of non-private training. In line with this insight, we propose a linear scaling rule: jointly increase the step size and number of steps linearly with \(\varepsilon\). We make use of this simple yet powerful heuristic in the hyperparameter selection strategy that we use in all our experiments, outlined in Algorithm 1. Given a total privacy budget \(\varepsilon\), we use an initial portion of this budget to do binary search (random search and grid search are also valid) on the meta-hyperparameter \(r=\eta\times T\) for a small value of \(\varepsilon\), and use this to estimate the best value of \(r\) for the desired overall privacy budget. We provide a privacy guarantee in 2. We note that linear scaling does not hold up forever: we are primarily interested with analyzing \(\varepsilon\leq 1\), and show that in this range it holds (Fig. 3).

Linear Scaling is intuitive.Applying the linear scaling rule improves the cosine similarity between noisy weight updates and the optimal solution without degrading accuracy. First note that the classification accuracy of a linear model is scale-invariant; the optimal solution of Gradient Descent with total step size \(r\) is \(w^{\prime}=w^{*}/\left\|w^{*}\right\|\times r\): the projection of \(w^{*}\) onto \(B_{r}\), the ball of radius \(r\), and for linear models, the performance (top-1 accuracy) of \(w^{\prime}\) is the same as the performance of \(w^{*}\): \(\text{Pred}(w^{\prime}(x))=\text{Pred}(w^{*}(x))\,\forall x\in D\). An important factor in the success of optimization is the angle between the gradient update \(\nabla_{i}\) and \(w^{\prime}\): if all our updates point in the same direction, we can expect fast convergence. Let similarity(i) = \(\frac{\nabla_{i}\cdot w^{\prime}}{\left\|\nabla_{i}\cdot\left\|\cdot\right\| \cdot\left\|w^{\prime}\right\|}\). Suppose that \(\left\|w_{i}\right\|=\left\|w^{\prime}\right\|\ll 1\), then adding Gaussian noise \(\sigma\xi\) where \(\xi\sim\mathcal{N}(0,1)\) to the update will significantly decrease the cosine similarity of the updated model and \(w^{\prime}\). If we decrease \(\sigma\), it is easy to see that this mitigates the impact on the trajectory. However, we can equivalently keep \(\sigma\) constant and increase the scale of the parameters, and also decrease the impact of noise on the trajectory: \(\text{similarity}(w_{i}+\sigma\xi,w^{\prime})<\text{similarity}( \alpha\cdot w_{i}+\sigma\xi,\alpha\cdot w^{\prime}),\forall\alpha>1\). Note that by increasing \(r\) we scale the optimal solutionwhile keeping its performance identical, and thus optimize the cosine similarity of the noisy update. Increasing the number of iterations and the learning rate linearly increases \(r\) but does not linearly increase \(\sigma\) due to the composition of Gaussian differential privacy [27], therefore the impact on the optimization trajectory is minimized.

TheoryWe introduce two theoretical results. We first analyze the privacy cost including hyperparameter tuning of DP-RAFT under Gaussian DP (GDP). In Thm. 2.3 we analyze the performance gap between hyperparameters for noisy gradient descent in terms of an upper bound in expectation on the distance between private and non-private iterates, and find that applying the linear scaling rule improves the upper bound on this distance. Proofs of all results are in Appendix A.5.

**Proposition 2.1**.: _Algorithm 1 is \((\sqrt{T}/\sigma)\)-GDP. Moreover, repeating Algorithm 1 for \(n\) times for hyper parameter search would be \((\sqrt{T\cdot n}/\sigma)\)-GDP._

**Corollary 2.2**.: _Algorithm 1 is \((\epsilon,\Phi(-\epsilon\cdot\sigma/\sqrt{T}+\sqrt{T}/2\sigma))-e^{\epsilon} \cdot\Phi(-\epsilon\cdot\sigma/\sqrt{T}-\sqrt{T}/2\sigma))\)-DP. Also, for \(n\)-fold repetition, the algorithm is \((\epsilon,\Phi(-\epsilon\cdot\sigma/\sqrt{n\cdot T}+\sqrt{n\cdot T}/2\sigma)) -e^{\epsilon}\cdot\Phi(-\epsilon\cdot\sigma/\sqrt{n\cdot T}-\sqrt{n\cdot T}/ 2\sigma))\)-DP_

**Theorem 2.3**.: _Let \(f\) be gradient descent that minimizes a \(\alpha\)-strongly convex and \(\beta\)-smooth function \(\ell\) with constant learning rate \(\eta\in(0,\frac{2}{\beta})\) over \(T\) iterations. Then we can bound the "noisy radius" distance between the noisy iterate \(w^{T}\) and the benign iterate \(w^{T}_{b}\) at iteration \(T\) in expectation: \(\mathbb{E}[|w^{T}-w^{T}_{b}|]\leq\rho\eta\times(\sum_{i}^{T-1}\max(|1-\eta \alpha|,|1-\eta\beta|)^{i})\)._

Thm. 2.3 indicates that the distance between the noisy and non-noisy weights grows in a very controlled manner; at each iteration the divergence from the previous iteration is decreased by a factor strictly less than 1, and then we add some noise. The main idea of the proof is similar to the main result in Fang et al. [23] but is simpler because we only prove the result for linear models.

We apply this theorem to logistic regression (fine-tuning a linear model on extracted features). In this setting our theorem provides an upper bound on the radius of the range of solutions that DP-SGD produces. For linear models, this radius converts directly into an upper bound on the generalization error. If we use the linear scaling rule to scale \(r=\eta\times T\) with \(\varepsilon\), we expect that \(\eta\) remains appropriately bounded and \(T\) does not grow so large that the resulting noise creates significant model drift. Therefore, we find that increasing the quantity \(r=\eta\times T\) improves this upper bound.

While our theorem only holds for linear models, we will show that it holds empirically for the deep GPT2 and RoBERTa models, in line with Li et al. [47] who find that even the updates of a large model lie in a low-dimensional space during fine-tuning.

## 3 Evaluation

We provide results on a range of image classification, distribution shift, and natural language processing tasks. Full results for all datasets and models can be found in Appendix A, including ablations on all steps of our method(A.2) and key hyperparameters(A.4).

Datasets.We evaluate the performance of our method on 20 benchmark tasks spanning the data modalities of CV and NLP. Image classification: ImageNet [16], CIFAR10, CIFAR100 [40], Fashion-MNIST [80], STL10 [11], EMNIST [12]. Because these image classification datasets are generally considered in-distribution of the pretraining data, we also provide results on a number of distribution shift datasets from the WILDS suite [38] that have been used to evaluate various fine-tuning techniques. CIFAR10 \(\rightarrow\) STL, CIFAR101, CIFAR100 \(\rightarrow\) CIFAR100C [31], Waterbirds [67], FMoW [10], and Camelyon17 [8]. These datasets are considered benchmark tasks for distribution shifts [42; 43; 53] and include data that is not in-distribution of the training data, making for a more realistic evaluation of the capabilities of our method to solve challenging tasks. We are the first to show that DP-SGD is capable of learning to handle distribution shifts without using any techniques from the distributionally robust optimization (DRO) literature [64]. For NLP tasks we consider text classification tasks from the GLUE benchmark [76]: SST-2, QNLI, QQP, MNLI(m/mm) and for next word generation we use PersonaChat [84], WikiText-2 [54], and Enron Emails [37].

### Linear Scaling finds near-optimal hyperparameters with low privacy cost

We first provide a concrete example of the hyperparameter search with \(\varepsilon_{0}\) on CIFAR10. Note that regardless of what strategy we use for hyperparameter search here, our total privacy cost as given by Proposition 2 must be strictly less than \(\varepsilon_{0}\). Binary search, random search, Bayesian optimization and grid search are all methods that we can use for the initial hyperparameter search. For this example, for the sake of simplicity we will use random search with 3 trials, with \(\varepsilon_{0}=0.01\cdot\sqrt{3},\varepsilon_{1}=0.05\cdot\sqrt{3},\varepsilon_ {f}=0.9,\varepsilon_{0}+\varepsilon_{1}+\varepsilon_{f}=1.0\). For \(\varepsilon_{0}=0.01\), we randomly sample r uniformly in the range [1,100]=2,20,100 and then randomly decompose this into (approximate) \((\eta,T)\) pairs of [0.2, 10], [0.5, 40], [1, 100]. These in turn evaluate to accuracies of [91.79, 73.68, 67.21], so the best value of r at \(\varepsilon_{0}=0.01\) is 2. We do a similar process at \(\varepsilon_{1}=0.05\) and get a best r-value of 5. We do linear interpolation and obtain the line of best fit as \(r=75\cdot\varepsilon+1.25\). Approximating this to \(r=75\), we apply the linear scaling rule \(r=\eta\times T\) and randomly decomposing this value of \(r\) into an \((\eta,T)\) pair of [0.75, 100], we produce a final accuracy of 99.00 at \(\varepsilon_{f}=0.9\).

Linear Scaling outperforms prior hyperparameter search techniques.We validate the effectiveness of linear scaling against the grid search baseline. In Fig. 3 (right) we compare Alg. 1 to grid search. To avoid scale mismatch on the x-axis we do not account for the privacy cost of grid search, that does \(n=100\) trials (on the same scale as prior work [51]). It is trivial that linear scaling outperforms a naive grid search, but we also compare the effectiveness of linear scaling against the hyperparameter selection strategies used in prior work [51]. We apply linear scaling to the ViT model used in [51] on CIFAR100. Although [51] do not directly state the hyperparameters for their best results, they specify that they use 200 hyperparameter trials with Bayesian optimization. While they obtain RDP guarantees, these guarantees do not include the privacy cost of non-privately tuning hyperparameters. We apply the linear scaling rule to extrapolate a value of \(r\) from \(\varepsilon=0.1\) to \(\varepsilon=1\), obtaining \(r=20=\eta(0.2)\times T(100)\). _We recover performance of \(82.7\%\) for \(\varepsilon=1\), a \(2\%\) improvement over the best result for DP-Adam in [51] while accounting for the privacy cost of hyperparameter tuning._ They obtain their best result for DP-Adam at \(T=10\), but we cannot compute the corresponding value of \(r\) because they do not provide \(\eta\). However, because they use a clipping norm of \(0.005\) we can reasonably infer that their value of \(r\) is \(\approx 1000\times\) smaller than ours. This is farther from the optimal non-private training, as evidenced by the performance gap.

Linear Scaling scales to ImageNetIn Table 4 we do a granular comparison between our method and [52, 51]. We observe that our method is competitive with [51] even when accounting for the privacy cost of hyperparameter search, and that the linear scaling rule holds up at the scale of ImageNet for very large values of \(r=\eta\times T\). The non-private accuracy of their closed-source model is \(3.2\%\) higher than our open-source model, and so the private accuracy at \(\varepsilon=2\) is also \(3.2\%\) higher.

Figure 4: Linear Scaling on ImageNet is competitive with prior SOTA [52] (Jan. 2023) and current SOTA [51](within last month).

Figure 3: Training the beat architecture on CIFAR100, the linear scaling rule produces values for \(r=\eta\times T\) close to that of grid search, and the performance drop is only apparent at \(\varepsilon>0.2\) because the cost of tuning is \(\varepsilon=0.1\), and vanishingly small for larger \(\varepsilon\).

However, ultimately our method and the method of Mehta et al. [51] are complementary, because their method introduces new hyperparameters that we intuit our linear scaling rule can optimize. We attempted to validate this intuition empirically but were unable to reproduce the results of Mehta et al. [51] because they and Mehta et al. [52] pretrain on the closed-source JFT dataset with billions of images. We note that all numbers we report for models pretrained on ImageNet-21k using first-order methods surpass those in [51], but for sufficiently small values of \(\varepsilon\) on harder datasets the second-order methods they propose provide better performance. We note that the method in Mehta et al. [51] only works for vision tasks, whereas our approach works for both vision and language tasks.

Linear Scaling produces robust results.In Fig. 3 we report that following Algorithm 1 produces new state-of-the-art results for all values of \(\varepsilon\), shown in Table 5. In Appendix A.1 we provide detailed computations of the linear interpolation for multiple datasets and in Appendix A.4 we provide full results across the entire hyperparameter search space. Our results validate that this rule is robust: we can move from one set of hyperparameters to another similarly performing set of hyperparameters by increasing the number of iterations \(T\) by a constant factor and decreasing the learning rate \(\eta\) by the same factor (or vice versa). We find that any inaccuracy incurred by estimating the best value of \(r\) with the linear scaling rule will not reduce accuracy by much compared to doing grid search for the optimal value of \(r\), but does reduce the privacy cost of hyperparameter tuning immensely.

### Linear Scaling enables empirical analysis

Many interesting questions in DP fine-tuning remain unanswered because of the immense computational overhead of evaluating hundreds of hyperparameter trials for each privacy budget, model architecture and dataset [51]. We now employ the linear scaling rule to efficiently answer key questions in DP fine-tuning for vision tasks.

Impact of model architectures on differential privacyMany pretrained model architectures are available [79] but prior work has generally engaged with a single architecture, e.g. beit [7] or ViT [52]. We leverage our method to answer three questions:

* What model architectures can provide good DP classifiers?
* Is the best model task-specific, e.g., is an architecture search required?
* Does the private-non private utility gap depend on the model architecture?

We report our findings in Tab. 5. We evaluate multiple transformer architectures in ViT [19], beitv1 [4] and beitv2 [58], as well as the purely convolutional architecture Convnext [48]. We find that all architectures can serve as good backbones for high-accuracy DP classification. This is somewhat surprising because the different inductive biases of transformers and purely convolutional architectures tend to produce differently structured features, but we reason that the noise added by DP will'smooth out' these decision boundaries regardless of architecture. We note that one architecture, beitv2, performs the best on all benchmarks and also has the highest non-private ImageNet accuracy [78]. We therefore recommend that practitioners do not worry about architecture search when fine-tuning as this can incur further privacy costs, and instead pick the best model available. We are encouraged to report that the private-non private utility gap diminishes with model accuracy, enabling us to report for the first time _lossless privacy_ of \(99.0\%\) on CIFAR10 at \(\varepsilon=1\). We expect that as pretrained models become even better, future works may even be able to attain lossless privacy on CIFAR100, that we note remains somewhat challenging for private fine-tuning. We harness these insights for our next analyses.

Figure 5: We compare the best private and best non-private performances of all models on all datasets. We use the linear scaling rule to scale hyperparameters from \(\varepsilon=0.1\) to \(\varepsilon=1\), so our privacy analysis includes the cost of hyperparameter tuning.

**Linear Scaling is robust to distribution shifts.** Benchmarking performance on datasets with distribution shifts is increasingly important because real-world problems almost always contain distribution shift between model training and inference [64]. Prior work in distribution-only robust optimization (DRO) has addressed this problem by using knowledge of the relative imbalances between groups, but recent work with vision transformers has shown that linear probing can perform well on datasets with distribution shifts [53; 41; 43]. However there is no work that evaluates the robustness of private models to distribution shifts. We leverage our method to answer three questions:

* Can DP help when there is a domain shift from private fine-tuning to test?
* Can DP help when there is a domain shift from public data to private fine-tuning?
* Can DP fine-tuned models perform well in the zero-shot setting?

In Table 6 we compare the performance of our method across 8 benchmarks and find that the answer to all three of these questions is _yes_.

The Waterbirds dataset is a well-known benchmark for evaluating the robustness of models to spurious correlations. There is a domain shift between the private training data and the private test data created by class imbalance. We are surprised to find that in the absence of any other regularization methods, DP fine-tuning actually _improves_ performance on the OOD split. We hypothesize that the lackluster OOD non-private performance is caused by the model overfitting to the spurious correlation in the training data, and that the inherent regularization of DP prevents the model from memorizing this spurious correlation. By comparing our results to Mehta et al. [53] we determine that this robustness is unique to DP rather than an artifact of the pretrained model. Although DP does significantly degrade the ID performance, in situations where minimizing OOD error is more important, we believe that DP by itself can mitigate the domain shift from private fine-tuning to test.

Because our central assumption in DP fine-tuning is that there is no privacy leakage from the pretraining data to the private training data, it is important to understand how DP fine-tuning performs when there is a distribution shift between public data and private data. fMoW [10] and Camelyon17 [8] are two datasets that represent a signficant distribution from the pretraining data (ImageNet). We observe a similar relationship between ID and OOD degradation as above, where the OOD degradation is somewhat mitigated by DP. If we compare our results on Camelyon to the best results in Ghabtikesabi et al. [25] we find that we can improve their best performance from \(91.1\%\) at \(\varepsilon=10\) to \(93.91\%\) at \(\varepsilon=1\). Although performance on fMoW remains quite poor, we note that it is not significantly worse than in the non-private setting. We believe that DP fine-tuning from pretrained models remains a viable strategy even when the publicly available pretraining data has a very large distribution shift from the private target data.

We finally consider the zero-shot setting, where we fine-tune a model on CIFAR and then transfer it without updating any parameters to private test datasets that once again represent a distribution shift from CIFAR. We report the performance in the OOD column. For the more minute distribution shifts of STL and CIFAR10p1 we find that the fine-tuned classifier can achieve remarkable performance without ever updating parameters on these datasets; that is, we just remap the labels as per [42]. CIFAR10C and CIFAR100C represent larger distribution shifts and are used to benchmark the robustness of models to commonly reported image corruptions [31]. Our OOD performance on these larger distribution shifts is much worse, particularly for CIFAR100 where there is a \(>20\%\) degradation. Although this is lower than the top result on the RobustBench leaderboard [13] obtains \(85\%\) accuracy, we note that once again _we used no additional methods beyond DP to ensure robustness but managed to achieve reasonable performance to distribution shifts in zero-shot classification_.

Figure 6: In-distribution (ID) and out-of-distribution (OOD) performance on benchmark distribution shift datasets. Prior work is non-private (citations are in Appendix A.1). We use the linear scaling rule to scale hyperparameters from \(\varepsilon=0.1\) to \(\varepsilon=1\), so our privacy analysis includes the cost of hyperparameter tuning.

### Linear Scaling for language modeling

Prior work has generally focused on either CV or NLP because the methods used in DP fine-tuning differ greatly across data modalities [46; 51]; here we show that our method extends to NLP by validating on text classification and language modeling tasks. We also update all parameters when fine-tuning, displaying that our method works for both linear probing and full fine-tuning. We fine-tune GPT-2 [63] with our method for three language modeling tasks that have been benchmarked in prior works [46; 70; 30] on private fine-tuning: Persona-Chat [85], WikiText-2 [54] and Enron Emails [37]. We also fine-tune RoBERTa-base on four tasks in the GLUE benchmark: SST-2, QNLI, QQP and MNLI(m/mm) in Table 7. While prior works mainly focus on \(\varepsilon\) in \(\{3,8\}\), in this work we are also interested in smaller \(\varepsilon\)s like \(0.1\). Appendix B.1 includes the details for the experimental set-up.

Linear scaling holds for NLP tasksWe analyze the performance gap between estimated total step size and optimal total step size by grid search to understand how well linear scaling performs on language modeling tasks. Fig. 8 plots the optimal perplexity and perplexity by estimated total step size at different values of \(\varepsilon\) on Enron emails. We can see that the linear scaling rule generalizes well for reported values of \(\varepsilon\) and the perplexity by the estimated total step size is close to the optimal perplexity. From Table 7 we can see that linear scaling also holds across a range of tasks in the GLUE benchmark. We also have the result for WikiText-2 in Appendix B.3.

The linear scaling rule outperforms prior results on differentially private language modeling tasks.We first run a qualitative evaluation on the previous benchmark SOTA [46] on PersonaChat trained with DP-SGD by following the linear scaling rule to increase the number of epochs. We can see in Table 9 that we can push the perplexity under \(18\) for \(\varepsilon=3\) and \(\varepsilon=8\); this performance is competitive with the non-private baseline. Furthermore, even when pushing for a stricter privacy guarantee \(\varepsilon=0.5\), we can still get perplexity of \(21.25\), that is better than the result of \(\varepsilon=8\) in [46]. We also report the results of ablating these hyper-parameters and varying the number of layers trained in Appendix B.2. We quantitatively validate the linear scaling rule on WikiText-2 and Enron email dataset and report the result in Table 10 respectively. We select training parameters and the total step size with Alg. 1.

Figure 8: The linear scaling rule (accounting for the privacy cost of hyperparameter tuning) is competitive with grid search (non-private, doing N trials each with the given \(\varepsilon\)) on the Enron Emails dataset. Left: y-axis is Perplexity (lower is better).

Figure 7: Linear scaling holds for GLUE tasks when training the full RoBERTa-base model

Figure 9: Linear scaling holds when fine-tuning all layers of GPT2 on PersonaChat and outperforms Li et al. [46]For WikiText-2, a key observation is that when we compare our results to the best prior reported results in [70], for the same number of passes over the training data (20), we obtain lower perplexity for \(\varepsilon=0.2\) than they report for \(\varepsilon=3\). That is, by just increasing the effective step size from \(\sim 8\times 10^{-6}\) to \(\sim 8\times 10^{-3}\) we can strengthen the privacy guarantee without degrading performance.

## 4 Related Work and Discussion

De et al. [15] and Cattan et al. [9] propose the use of large batch sizes and initializing the weights to small values near-zero to standardize training. However, they use ResNet architectures rather than modern vision transformers, and in Appendix A.2 we find that other techniques that they use such as data augmentation, fine-tuning the embedding layer, and weight averaging do not always improve performance. [7] do end-to-end training of the same beat architecture we use, but we crucially observe that updating all parameters incurs the curse of dimensionality and therefore it is better to only update the last layer. Besides vision tasks, Li et al. [46] and Yu et al. [82] provide methods for fine-tuning large language models under DP-SGD by proposing new clipping methods to mitigate the memory burden of per-sample gradient clipping. However, they do not achieve performance comparable to non-private models when fine-tuning a pretrained model on the PersonaChat dataset. We adapt their techniques to the hyperparameter settings that we show are optimal for DP fine-tuning, and produce similar performance to non-private fine-tuning on the PersonaChat dataset. Yu et al. [83] report compelling results by only updating a sparse subset of the LLMs with LoRA [33]. We fine-tune GPT2 and RoBeRTA; Basu et al. [5] also fine-tune BERT models.

Papernot and Steinke [57] propose an RDP hyperparameter optimization algorithm that requires selecting the number of trials at random with a random variable, and exhibits the greatest savings when the number of hyperparameter trials is large. By contrast our linear scaling rule needs only a small fraction of the overall privacy budget for hyperparameter search. Their evaluation only tunes the learning rate of a 3-layer CNN on MNIST. Our rule accounts for multiple hyperparameters (batch size, clipping norm, momentum, learning rate, number of iterations) and produces SOTA results.

Golatkar et al. [26]; Nasr et al. [55]; Amid et al. [2] treat \(<10\%\) of the private training dataset and public and use it to improve DP-SGD. Although we do not use any private data during pretraining, future work can tackle applying linear scaling to this alternate threat model.

An open challenge in DP training is how to privately and efficiently do hyperparameter tuning. We complement the existing body of work by introducing a new linear scaling rule to privately optimize hyperparameters. Our key insight is that we can interpolate between the early-stopping regime that is best for small \(\varepsilon\) and the regime of many iterations that is best for \(\varepsilon\rightarrow\infty\) as \(\varepsilon\) increases. We provide find that our method attains new state-of-the-art accuracy across 20 tasks, on benchmark image classification tasks, distribution shift datasets, and natural language modeling tasks.

## 5 Limitations

**Assumptions.** The key assumption in DP fine-tuning is that there is no privacy leakage between public data and private data. We take steps towards qualifying this assumption by evaluating on datasets with distribution shifts between public and private data. **Scope of Claims.** We evaluate 20 datasets across multiple data modalities with multiple model architectures for two types of fine-tuning methods, linear probing and end-to-end training of deep (\(>100M\) param) transformers. **Key Factors that Influence the Performance of Our Approach.** The key parameter in the linear scaling rule is how to allocate privacy budget to the initial hyperparameter search. We find that with privacy budgets as small as \(\varepsilon=0.01\) we can still effectively forecast the linear trend to determine the best hyperparameters for the main privacy budget we consider \(\varepsilon=1\). However, if we need to consider even smaller privacy budgets, it may be challenging to accurately extrapolate hyperparameters.

Figure 10: Finentuning GPT-2 on WikiText-2 (\(\delta=10^{-6}\)) and Enron (\(\delta=\frac{1}{2|D_{\mathrm{mul}}|}\)) with DP-SGD. Ppl is perplexity and TSS is Total Step Size. (\({}^{*}\) means estimated). Previously reported best perplexity of GPT-2 on WikiText-2 at \(\varepsilon=3\) is 28.84 in [70].

## References

* Abadi et al. [2016] M. Abadi, A. Chu, I. Goodfellow, H. B. McMahan, I. Mironov, K. Talwar, and L. Zhang. Deep learning with differential privacy. In _Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security_. ACM, oct 2016. doi: 10.1145/2976749.2978318.
* Amid et al. [2022] E. Amid, A. Ganesh, R. Mathews, S. Ramaswamy, S. Song, T. Steinke, T. Steinke, V. M. Suriyakumar, O. Thakkar, and A. Thakurta. Public data-assisted mirror descent for private model training. In _Proceedings of the 39th International Conference on Machine Learning_, pages 517-535. PMLR, 2022.
* Bagdasaryan and Shmatikov [2019] E. Bagdasaryan and V. Shmatikov. Differential privacy has disparate impact on model accuracy, 2019. URL https://arxiv.org/abs/1905.12101.
* Bao et al. [2021] H. Bao, L. Dong, S. Piao, and F. Wei. Beit: Bert pre-training of image transformers, 2021. URL https://arxiv.org/abs/2106.08254.
* Basu et al. [2022] P. Basu, T. S. Roy, R. Naidu, Z. Muftuoglu, S. Singh, and F. Mireshghallah. Benchmarking differential privacy and federated learning for bert models, 2022.
* Brown et al. [2020] T. B. Brown, B. Mann, N. Ryder, M. Subbiah, J. Kaplan, P. Dhariwal, A. Neelakantan, P. Shyam, G. Sastry, A. Askell, S. Agarwal, A. Herbert-Voss, G. Krueger, T. Henighan, R. Child, A. Ramesh, D. M. Ziegler, J. Wu, C. Winter, C. Hesse, M. Chen, E. Sigler, M. Litwin, S. Gray, B. Chess, J. Clark, C. Berner, S. McCandlish, A. Radford, I. Sutskever, and D. Amodei. Language models are few-shot learners, 2020. URL https://arxiv.org/abs/2005.14165.
* Bu et al. [2022] Z. Bu, J. Mao, and S. Xu. Scalable and efficient training of large convolutional neural networks with differential privacy. _arXiv preprint arXiv:2205.10683_, 2022.
* Bandi et al. [2019] P. Bandi, O. Geessink, Q. Manson, M. Van Dijk, M. Balkenhol, M. Hermsen, B. Ehteshami Bejnordi, B. Lee, K. Paeng, A. Zhong, Q. Li, F. G. Zanjani, S. Zinger, K. Fukuta, D. Komura, V. Ovtcharov, S. Cheng, S. Zeng, J. Thagaard, A. B. Dahl, H. Lin, H. Chen, L. Jacobson, M. Hedlund, M. Cetin, E. Halici, H. Jackson, R. Chen, F. Both, J. Franke, H. Kusters-Vandevlele, W. Vreuls, P. Bult, B. van Ginneken, J. van der Laak, and G. Litjens. From detection of individual metastases to classification of lymph node status at the patient level: The camelyon17 challenge. _IEEE Transactions on Medical Imaging_, 38(2):550-560, 2019. doi: 10.1109/TMI.2018.2867350.
* Cattan et al. [2022] Y. Cattan, C. A. Choquette-Choo, N. Papernot, and A. Thakurta. Fine-tuning with differential privacy necessitates an additional hyperparameter search, 2022. URL https://arxiv.org/abs/2210.02156.
* Christie et al. [2017] G. Christie, N. Fendley, J. Wilson, and R. Mukherjee. Functional map of the world, 2017. URL https://arxiv.org/abs/1711.07846.
* Coates et al. [2011] A. Coates, A. Ng, and H. Lee. An analysis of single-layer networks in unsupervised feature learning. In _Proceedings of the fourteenth international conference on artificial intelligence and statistics_, pages 215-223. JMLR Workshop and Conference Proceedings, 2011.
* Cohen et al. [2017] G. Cohen, S. Afshar, J. Tapson, and A. van Schaik. Emnist: an extension of mnist to handwritten letters, 2017. URL https://arxiv.org/abs/1702.05373.
* Croce et al. [2021] F. Croce, M. Andriushchenko, V. Sehwag, E. Debenedetti, N. Flammarion, M. Chiang, P. Mittal, and M. Hein. Robustbench: a standardized adversarial robustness benchmark, 2021.
* Cutkosky and Mehta [2020] A. Cutkosky and H. Mehta. Momentum improves normalized SGD. In H. D. III and A. Singh, editors, _Proceedings of the 37th International Conference on Machine Learning_, volume 119 of _Proceedings of Machine Learning Research_, pages 2260-2268. PMLR, 13-18 Jul 2020. URL https://proceedings.mlr.press/v119/cutkosky20b.html.
* De et al. [2022] S. De, L. Berrada, J. Hayes, S. L. Smith, and B. Balle. Unlocking high-accuracy differentially private image classification through scale, 2022. URL https://arxiv.org/abs/2204.13650.

* Deng et al. [2009] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei. Imagenet: A large-scale hierarchical image database. In _2009 IEEE Conference on Computer Vision and Pattern Recognition_, pages 248-255, 2009. doi: 10.1109/CVPR.2009.5206848.
* Diffenderfer et al. [2021] J. Diffenderfer, B. R. Bartoldson, S. Chaganti, J. Zhang, and B. Kailkhura. A winning hand: Compressing deep networks can improve out-of-distribution robustness, 2021. URL https://arxiv.org/abs/2106.09129.
* Dong et al. [2019] J. Dong, A. Roth, and W. J. Su. Gaussian differential privacy, 2019. URL https://arxiv.org/abs/1905.02383.
* Dosovitskiy et al. [2020] A. Dosovitskiy, L. Beyer, A. Kolesnikov, D. Weissenborn, X. Zhai, T. Unterthiner, M. Dehghani, M. Minderer, G. Heigold, S. Gelly, J. Uszkoreit, and N. Houlsby. An image is worth 16x16 words: Transformers for image recognition at scale, 2020. URL https://arxiv.org/abs/2010.11929.
* Dwork et al. [2006] C. Dwork, F. McSherry, K. Nissim, and A. Smith. Calibrating noise to sensitivity in private data analysis. In _Proceedings of the Third Conference on Theory of Cryptography_, TCC'06, page 265-284, Berlin, Heidelberg, 2006. Springer-Verlag. ISBN 3540327312.
* Dwork et al. [2019] C. Dwork, N. Kohli, and D. Mulligan. Differential privacy in practice: Expose your epsilons! _Journal of Privacy and Confidentiality_, 9, 10 2019. doi: 10.29012/jpc.689.
* Erlingsson et al. [2018] U. Erlingsson, V. Feldman, I. Mironov, A. Raghunathan, K. Talwar, and A. Thakurta. Amplification by shuffling: From local to central differential privacy via anonymity, 2018. URL https://arxiv.org/abs/1811.12469.
* Fang et al. [2023] H. Fang, X. Li, C. Fan, and P. Li. Improved convergence of differential private SGD with gradient clipping. In _The Eleventh International Conference on Learning Representations_, 2023. URL https://openreview.net/forum?id=FRLswckPXQ5.
* Geirhos et al. [2018] R. Geirhos, P. Rubisch, C. Michaelis, M. Bethge, F. A. Wichmann, and W. Brendel. Imagenet-trained cnns are biased towards texture; increasing shape bias improves accuracy and robustness, 2018. URL https://arxiv.org/abs/1811.12231.
* Ghalebikesabi et al. [2023] S. Ghalebikesabi, L. Berrada, S. Gowal, I. Ktena, R. Stanforth, J. Hayes, S. De, S. L. Smith, O. Wiles, and B. Balle. Differentially private diffusion models generate useful synthetic images, 2023.
* Golatkar et al. [2022] A. Golatkar, A. Achille, Y.-X. Wang, A. Roth, M. Kearns, and S. Soatto. Mixed differential privacy in computer vision, 2022.
* Gopi et al. [2021] S. Gopi, Y. T. Lee, and L. Wutschitz. Numerical composition of differential privacy, 2021. URL https://arxiv.org/abs/2106.02848.
* Goyal et al. [2017] P. Goyal, P. Dollar, R. Girshick, P. Noordhuis, L. Wesolowski, A. Kyrola, A. Tulloch, Y. Jia, and K. He. Accurate, large minibatch sgd: Training imagenet in 1 hour, 2017. URL https://arxiv.org/abs/1706.02677.
* Goyal et al. [2018] P. Goyal, P. Dollar, R. Girshick, P. Noordhuis, L. Wesolowski, A. Kyrola, A. Tulloch, Y. Jia, and K. He. Accurate, large minibatch sgd: Training imagenet in 1 hour, 2018.
* Gupta et al. [2022] S. Gupta, Y. Huang, Z. Zhong, T. Gao, K. Li, and D. Chen. Recovering private text in federated learning of language models. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2022.
* Hendrycks and Dietterich [2019] D. Hendrycks and T. Dietterich. Benchmarking neural network robustness to common corruptions and perturbations, 2019. URL https://arxiv.org/abs/1903.12261.
* Hoffer et al. [2019] E. Hoffer, T. Ben-Nun, I. Hubara, N. Giladi, T. Hoefler, and D. Soudry. Augment your batch: better training with larger batches, 2019. URL https://arxiv.org/abs/1901.09335.
* Hu et al. [2021] E. J. Hu, Y. Shen, P. Wallis, Z. Allen-Zhu, Y. Li, S. Wang, L. Wang, and W. Chen. Lora: Low-rank adaptation of large language models, 2021.

* Izmailov et al. [2018] P. Izmailov, D. Podoprikhin, T. Garipov, D. Vetrov, and A. G. Wilson. Averaging weights leads to wider optima and better generalization, 2018. URL https://arxiv.org/abs/1803.05407.
* Kaplan et al. [2020] J. Kaplan, S. McCandlish, T. Henighan, T. B. Brown, B. Chess, R. Child, S. Gray, A. Radford, J. Wu, and D. Amodei. Scaling laws for neural language models, 2020. URL https://arxiv.org/abs/2001.08361.
* Kingma and Ba [2014] D. P. Kingma and J. Ba. Adam: A method for stochastic optimization, 2014. URL https://arxiv.org/abs/1412.6980.
* Klimt and Yang [2004] B. Klimt and Y. Yang. The enron corpus: A new dataset for email classification research. In _European conference on machine learning_, pages 217-226. Springer, 2004.
* Koh et al. [2020] P. W. Koh, S. Sagawa, H. Marklund, S. M. Xie, M. Zhang, A. Balsubramani, W. Hu, M. Yasunaga, R. L. Phillips, I. Gao, T. Lee, E. David, I. Stavness, W. Guo, B. A. Earnshaw, I. S. Haque, S. Beery, J. Leskovec, A. Kundaje, E. Pierson, S. Levine, C. Finn, and P. Liang. Wilds: A benchmark of in-the-wild distribution shifts, 2020. URL https://arxiv.org/abs/2012.07421.
* Kornblith et al. [2018] S. Kornblith, J. Shlens, and Q. V. Le. Do better imagenet models transfer better?, 2018. URL https://arxiv.org/abs/1805.08974.
* Krizhevsky et al. [2009] A. Krizhevsky et al. Learning multiple layers of features from tiny images. Technical report, Citeseer, 2009.
* Kumar et al. [2022] A. Kumar, A. Raghunathan, R. Jones, T. Ma, and P. Liang. Fine-tuning can distort pretrained features and underperform out-of-distribution, 2022. URL https://arxiv.org/abs/2202.10054.
* Kumar et al. [2022] A. Kumar, A. Raghunathan, R. Jones, T. Ma, and P. Liang. Fine-tuning can distort pretrained features and underperform out-of-distribution, 2022. URL https://arxiv.org/abs/2202.10054.
* Kumar et al. [2022] A. Kumar, R. Shen, S. Bubeck, and S. Gunasekar. How to fine-tune vision models with sgd, 2022. URL https://arxiv.org/abs/2211.09359.
* Lambert et al. [2022] N. Lambert, L. Castricato, L. von Werra, and A. Havrilla. Illustrating reinforcement learning from human feedback (rhlf). _Hugging Face Blog_, 2022. https://huggingface.co/blog/rhlf.
* Li et al. [2020] H. Li, P. Chaudhari, H. Yang, M. Lam, A. Ravichandran, R. Bhotika, and S. Soatto. Rethinking the hyperparameters for fine-tuning, 2020. URL https://arxiv.org/abs/2002.11770.
* Li et al. [2021] X. Li, F. Tramer, P. Liang, and T. Hashimoto. Large language models can be strong differentially private learners, 2021. URL https://arxiv.org/abs/2110.05679.
* Li et al. [2022] X. Li, D. Liu, T. Hashimoto, H. A. Inan, J. Kulkarni, Y. T. Lee, and A. G. Thakurta. When does differentially private learning not suffer in high dimensions?, 2022. URL https://arxiv.org/abs/2207.00160.
* Liu et al. [2022] Z. Liu, H. Mao, C.-Y. Wu, C. Feichtenhofer, T. Darrell, and S. Xie. A convnet for the 2020s, 2022. URL https://arxiv.org/abs/2201.03545.
* Mao et al. [2022] X. Mao, Y. Chen, X. Jia, R. Zhang, H. Xue, and Z. Li. Context-aware robust fine-tuning, 2022. URL https://arxiv.org/abs/2211.16175.
* McMahan et al. [2017] H. B. McMahan, D. Ramage, K. Talwar, and L. Zhang. Learning differentially private recurrent language models, 2017. URL https://arxiv.org/abs/1710.06963.
* Mehta et al. [2022] H. Mehta, W. Krichene, A. Thakurta, A. Kurakin, and A. Cutkosky. Differentially private image classification from features, 2022. URL https://arxiv.org/abs/2211.13403.
* Mehta et al. [2022] H. Mehta, A. Thakurta, A. Kurakin, and A. Cutkosky. Large scale transfer learning for differentially private image classification, 2022. URL https://arxiv.org/abs/2205.02973.

* Mehta et al. [2022] R. Mehta, V. Albiero, L. Chen, I. Evtimov, T. Glaser, Z. Li, and T. Hassner. You only need a good embeddings extractor to fix spurious correlations, 2022. URL https://arxiv.org/abs/2212.06254.
* Merity et al. [2017] S. Merity, C. Xiong, J. Bradbury, and R. Socher. Pointer sentinel mixture models. In _International Conference on Learning Representations_, 2017. URL https://openreview.net/forum?id=ByJ72udxe.
* Nasr et al. [2023] M. Nasr, S. Mahloujifar, X. Tang, P. Mittal, and A. Houmansadr. Effectively using public data in privacy preserving machine learning, 2023. URL https://openreview.net/forum?id=5R96mIU85IW.
* Panda et al. [2021] A. Panda, S. Mahloujifar, A. N. Bhagoji, S. Chakraborty, and P. Mittal. Sparsefed: Mitigating model poisoning attacks in federated learning with sparsification, 2021. URL https://arxiv.org/abs/2112.06274.
* Papernot and Steinke [2021] N. Papernot and T. Steinke. Hyperparameter tuning with renyi differential privacy, 2021. URL https://arxiv.org/abs/2110.03620.
* Peng et al. [2022] Z. Peng, L. Dong, H. Bao, Q. Ye, and F. Wei. Beit v2: Masked image modeling with vector-quantized visual tokenizers, 2022. URL https://arxiv.org/abs/2208.06366.
* Polyak and Juditsky [1992] B. Polyak and A. B. Juditsky. Acceleration of stochastic approximation by averaging. _Siam Journal on Control and Optimization_, 30:838-855, 1992.
* Prabhu et al. [2020] V. Prabhu, S. Khare, D. Kartik, and J. Hoffman. Sentry: Selective entropy optimization via committee consistency for unsupervised domain adaptation, 2020. URL https://arxiv.org/abs/2012.11460.
* Qian [1999] N. Qian. On the momentum term in gradient descent learning algorithms. _Neural networks_, 12(1):145-151, 1999.
* Qiao et al. [2019] S. Qiao, H. Wang, C. Liu, W. Shen, and A. Yuille. Micro-batch training with batch-channel normalization and weight standardization, 2019. URL https://arxiv.org/abs/1903.10520.
* Radford et al. [2019] A. Radford, J. Wu, R. Child, D. Luan, D. Amodei, and I. Sutskever. Language models are unsupervised multitask learners. 2019.
* Rahimian and Mehrotra [2022] H. Rahimian and S. Mehrotra. Frameworks and results in distributionally robust optimization. _Open Journal of Mathematical Optimization_, 3:1-85, jul 2022. doi: 10.5802/ojmo.15. URL https://doi.org/10.5802%2Fojmo.15.
* Rombach et al. [2022] R. Rombach, A. Blattmann, D. Lorenz, P. Esser, and B. Ommer. High-resolution image synthesis with latent diffusion models. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)_, pages 10684-10695, June 2022.
* Ryu and Boyd [2015] E. K. Ryu and S. P. Boyd. A primer on monotone operator methods. 2015.
* Sagawa et al. [2019] S. Sagawa, P. W. Koh, T. B. Hashimoto, and P. Liang. Distributionally robust neural networks for group shifts: On the importance of regularization for worst-case generalization, 2019. URL https://arxiv.org/abs/1911.08731.
* Shejwalkar et al. [2022] V. Shejwalkar, A. Ganesh, R. Mathews, O. Thakkar, and A. Thakurta. Recycling scraps: Improving private learning by leveraging intermediate checkpoints, 2022. URL https://arxiv.org/abs/2210.01864.
* Shen et al. [2021] Y. Shen, Z. Wang, R. Sun, and X. Shen. Towards understanding the impact of model size on differential private classification, 2021. URL https://arxiv.org/abs/2111.13895.
* Shi et al. [2022] W. Shi, S. Chen, C. Zhang, R. Jia, and Z. Yu. Just fine-tune twice: Selective differential privacy for large language models. _arXiv preprint arXiv:2204.07667_, 2022.
* Shorten and Khoshgoftaar [2019] C. Shorten and T. M. Khoshgoftaar. A survey on image data augmentation for deep learning. _Journal of Big Data_, 6(1):60, Jul 2019. ISSN 2196-1115. doi: 10.1186/s40537-019-0197-0. URL https://doi.org/10.1186/s40537-019-0197-0.

* Song et al. [2013] S. Song, K. Chaudhuri, and A. D. Sarwate. Stochastic gradient descent with differentially private updates. In _2013 IEEE Global Conference on Signal and Information Processing_, pages 245-248, 2013. doi: 10.1109/GlobalSIP.2013.6736861.
* Sutskever et al. [2013] I. Sutskever, J. Martens, G. Dahl, and G. Hinton. On the importance of initialization and momentum in deep learning. In S. Dasgupta and D. McAllester, editors, _Proceedings of the 30th International Conference on Machine Learning_, volume 28 of _Proceedings of Machine Learning Research_, pages 1139-1147, Atlanta, Georgia, USA, 17-19 Jun 2013. PMLR. URL https://proceedings.mlr.press/v28/sutskever13.html.
* Team [2017] A. Team. Learning with privacy at scale, 2017. URL https://docs-assets.developer.apple.com/ml-research/papers/learning-with-privacy-at-scale.pdf.
* Touvron et al. [2021] H. Touvron, M. Cord, M. Douze, F. Massa, A. Sablayrolles, and H. Jegou. Training data-efficient image transformers; distillation through attention. In M. Meila and T. Zhang, editors, _Proceedings of the 38th International Conference on Machine Learning_, volume 139 of _Proceedings of Machine Learning Research_, pages 10347-10357. PMLR, 18-24 Jul 2021. URL https://proceedings.mlr.press/v139/touvron21a.html.
* Wang et al. [2019] A. Wang, A. Singh, J. Michael, F. Hill, O. Levy, and S. R. Bowman. GLUE: A multi-task benchmark and analysis platform for natural language understanding. In _International Conference on Learning Representations_, 2019. URL https://openreview.net/forum?id=rJ4km2R5t7.
* Wang et al. [2019] Y.-X. Wang, B. Balle, and S. P. Kasiviswanathan. Subsampled renyi differential privacy and analytical moments accountant. In K. Chaudhuri and M. Sugiyama, editors, _Proceedings of the Twenty-Second International Conference on Artificial Intelligence and Statistics_, volume 89 of _Proceedings of Machine Learning Research_, pages 1226-1235. PMLR, 16-18 Apr 2019. URL https://proceedings.mlr.press/v89/wang19b.html.
* Wightman [2019] R. Wightman. Pytorch image models. https://github.com/rwightman/pytorch-image-models, 2019.
* Wolf et al. [2019] T. Wolf, L. Debut, V. Sanh, J. Chaumond, C. Delangue, A. Moi, P. Cistac, T. Rault, R. Louf, M. Funtowicz, J. Davison, S. Shleifer, P. von Platen, C. Ma, Y. Jernite, J. Plu, C. Xu, T. L. Scao, S. Gugger, M. Drame, Q. Lhoest, and A. M. Rush. Huggingface's transformers: State-of-the-art natural language processing, 2019. URL https://arxiv.org/abs/1910.03771.
* Xiao et al. [2017] H. Xiao, K. Rasul, and R. Vollgraf. Fashion-mnist: a novel image dataset for benchmarking machine learning algorithms, 2017. URL https://arxiv.org/abs/1708.07747.
* Yousefpour et al. [2021] A. Yousefpour, I. Shilov, A. Sablayrolles, D. Testuggine, K. Prasad, M. Malek, J. Nguyen, S. Ghosh, A. Bharadwaj, J. Zhao, G. Cormode, and I. Mironov. Opacus: User-friendly differential privacy library in pytorch, 2021. URL https://arxiv.org/abs/2109.12298.
* Yu et al. [2021] D. Yu, S. Naik, A. Backurs, S. Gopi, H. A. Inan, G. Kamath, J. Kulkarni, Y. T. Lee, A. Manoel, L. Wutschitz, S. Yekhanin, and H. Zhang. Differentially private fine-tuning of language models, 2021. URL https://arxiv.org/abs/2110.06500.
* Yu et al. [2021] D. Yu, H. Zhang, W. Chen, J. Yin, and T.-Y. Liu. Large scale private learning via low-rank reparametrization, 2021.
* Zhang et al. [2018] S. Zhang, E. Dinan, J. Urbanek, A. Szlam, D. Kiela, and J. Weston. Personalizing dialogue agents: I have a dog, do you have pets too?, 2018.
* Zhang et al. [2018] S. Zhang, E. Dinan, J. Urbanek, A. Szlam, D. Kiela, and J. Weston. Personalizing dialogue agents: I have a dog, do you have pets too?, 2018. URL https://arxiv.org/abs/1801.07243.
* Zhu and Wang [2019] Y. Zhu and Y.-X. Wang. Poission subsampled renyi differential privacy. In K. Chaudhuri and R. Salakhutdinov, editors, _Proceedings of the 36th International Conference on Machine Learning_, volume 97 of _Proceedings of Machine Learning Research_, pages 7634-7642. PMLR, 09-15 Jun 2019. URL https://proceedings.mlr.press/v97/zhui9c.html.