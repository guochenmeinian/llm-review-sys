# MADG: Margin-based Adversarial Learning for Domain Generalization

 Aveen Dayal

Indian Institute of Technology Hyderabad

ai21resch11003@iith.ac.in

&Vimal K B

Indian Institute of Technology Hyderabad

vimalkb96@gmail.com

&Linga Reddy Cenkeramaddi

University of Agder

linga.cekeramaddi@uia.no

&C Krishna Mohan

Indian Institute of Technology Hyderabad

ckm@cse.iith.ac.in

&Abhinav Kumar

Indian Institute of Technology Hyderabad

abhinavkumar@ee.iith.ac.in

&Vineeth N Balasubramanian

Indian Institute of Technology Hyderabad

vineethnb@cse.iith.ac.in

###### Abstract

Domain Generalization (DG) techniques have emerged as a popular approach to address the challenges of domain shift in Deep Learning (DL), with the goal of generalizing well to the target domain unseen during the training. In recent years, numerous methods have been proposed to address the DG setting, among which one popular approach is the adversarial learning-based methodology. The main idea behind adversarial DG methods is to learn domain-invariant features by minimizing a discrepancy metric. However, most adversarial DG methods use 0-1 loss based \(\mathcal{H}\Delta\mathcal{H}\) divergence metric. In contrast, the margin loss-based discrepancy metric has the following advantages: more informative, tighter, practical, and efficiently optimizable. To mitigate this gap, this work proposes a novel adversarial learning DG algorithm, **MADG**, motivated by a margin loss-based discrepancy metric. The proposed **MADG** model learns domain-invariant features across all source domains and uses adversarial training to generalize well to the unseen target domain. We also provide a theoretical analysis of the proposed **MADG** model based on the unseen target error bound. Specifically, we construct the link between the source and unseen domains in the real-valued hypothesis space and derive the generalization bound using margin loss and Rademacher complexity. We extensively experiment with the **MADG** model on popular real-world DG datasets, VLCS, PACS, OfficeHome, DomainNet, and TerraIncognita. We evaluate the proposed algorithm on DomainBed's benchmark and observe consistent performance across all the datasets.

## 1 Introduction

Over the past decade, Deep Neural Networks (DNNs) have demonstrated exceptional performance across various fields, including robotics [1], medical imaging [2], agriculture [3], and more. However, the effectiveness of DNNs in supervised learning environments relies heavily on the independently and identically distributed (\(i.i.d.\)) assumption of the training and test (target) data. Unfortunately, in reality, this assumption can be compromised due to domain shifts in target data [4]. For example, a model trained on different domains of image data may perform poorly when presented with an image of a known label featuring an unseen background or viewpoint, as explained in [5]. To address this issue, researchers have developed techniques under the framework of domain adaptation (DA) [6]. The key idea behind DA is to adapt a model trained on a source dataset to minimize the generalizationerror on the target dataset [7]. However, the major limitation of DA is that the target data, whether labeled or unlabeled, must be available during training. In contrast, the Domain Generalization (DG) setting aims to leverage knowledge from similar domains to classify previously unseen domains [8].

Recent years have seen the development of various algorithms addressing the DG setting, among which one popular approach is the adversarial learning-based methodology [9; 10; 11; 12; 13; 14]. Other approaches can be broadly classified into meta-learning techniques [15; 16; 17], data augmentation methods [18; 19; 20], self-supervised learning methods [21; 22; 23], regularization-based methods [24; 25; 26; 27; 28; 29], and so on. Additionally, there have been concerted efforts towards the development of benchmark datasets [30; 31; 32; 33; 34; 35] for the DG setting to study methods. The assumption of distribution shift, i.e., smooth variation between the conditional distribution \(\mathbb{P}(Y|X)\) and the marginal distribution \(\mathbb{P}(X)\) is also common in DG literature [36; 37].

The main objective of DG methods is to model the functional relationship between the input space \(\mathcal{X}\) and the label space \(\mathcal{Y}\) for all domains. To achieve this, adversarial DG methods learn a domain-invariant representation by minimizing a discrepancy metric among the source domains. However, despite the myriad efforts, most adversarial learning methods use the 0-1 loss based \(\mathcal{H}\Delta\mathcal{H}\) divergence metric [38] for domain alignment. In contrast, divergence metrics based on margin loss are more informative [39], practical, and efficiently optimizable [40]. This work addresses this gap by proposing a novel adversarial DG algorithm, **MADG**, motivated by a margin-based divergence metric. The proposed **MADG** leverages margin-based disparity discrepancy [40] to estimate source domain discrepancies in the DG setting and uses adversarial training to ensure that **MADG** generalizes well to unseen target domains. We also theoretically analyze the proposed **MADG** algorithm based on bounds for the unseen target error. The proposed generalization bound uses the Rademacher complexity framework [41], which provides data-dependent estimates of functional class complexities. The effectiveness of the proposed algorithm is demonstrated through extensive experiments on multiple benchmark DG datasets.

The key contributions of this work can be summarized as follows: (i) We introduce the use of margin loss and a corresponding scoring function to formulate the relationship between domains and develop upper bounds for the unseen target error (the first such margin-based effort in the DG setting, to the best of our knowledge); (ii) We subsequently analyze the generalization bound in terms of functional class complexity using the Rademacher complexity framework; (iii) We propose a novel margin-based adversarial DG training algorithm, **MADG**, motivated by our theoretical results; and (iv) We study the proposed method on five well-known benchmark datasets in the DomainBed setup, providing a higher average accuracy and consistency in model performance across these datasets.

## 2 Related Work

In this section, we discuss earlier literature proposed specifically for adversarial DG, as well as theoretical analysis for the DG problem in general. We discuss other DG literature across a broader set of categories in the Appendix. The main idea behind existing adversarial DG methods is to minimize the \(\mathcal{H}\Delta\mathcal{H}\) divergence by employing a minimax optimization between a domain discriminator and a classifier to learn domain-invariant features. One of the early works [9] proposed a method that iteratively divided samples into latent domains via clustering and trained the domain-invariant feature extractor via adversarial learning. Other efforts extended such an approach of adversarial learning with different divergence metrics and regularization techniques. Lin et al. [10] proposed a multi-dataset feature generalization network (MMFA-AAE) based on an adversarial auto-encoder to learn a generalized domain-invariant latent feature representation with the Maximum Mean Discrepancy (MMD) measure to align distributions across multiple domains. Deng et al. [11] examined adversarial censoring techniques to learn invariant representations from multiple domains. Zhao et al. [12] proposed an entropy regularization term along with adversarial loss to ensure conditional invariance of learned features. Akuzawa et al. [13] proposed the notion of accuracy-constrained domain invariance, and then developed an adversarial feature learning method with accuracy constraint (AFLAC), which explicitly provided invariance on adversarial training. Rahman et al. [42] proposed a correlation-aware adversarial DG framework where the features of the source and target data are minimized using correlation alignment along with adversarial learning. All these prior works on adversarial DG methods use a 0-1 loss based \(\mathcal{H}\Delta\mathcal{H}\) discrepancy metric to align source domains. In this work, we instead leverage a margin-based disparity discrepancy and propose a new adversarial learning strategy founded on our theoretical analysis. The margin loss is advantageous compared to the 0-1 loss as it provides informative generalization bounds, tightness, classifier-aware alignment, and efficient optimization. We discuss each of these advantages in detail in Section 4.

Early efforts for theoretical analysis for the DG problem [43; 44] used kernel-based approaches to the problem setting with corresponding generalization error analysis, and showed empirical results using traditional machine learning methods. A few other efforts [45; 46; 47] also followed a similar path, and focused on kernel-based approaches in traditional methods. From a deep learning perspective, an early attempt at such a theoretically motivated method was proposed in [48] using a convex hull formulation and distribution matching to obtain generalization bounds, which also is an inspiration for parts of our work. In [49], the authors study theoretical bounds in the DG setting using three new concepts: feature invariance across domains, feature discriminability for the classification task, and a feature expansion function to generalize the first two concepts from the source to the target domain. [50] identified measures relating to the Fisher information, predictive entropy, and maximum mean discrepancy to be good predictors of out-of-distribution generalization of empirical risk minimization (ERM) models in the DG setting. [24] proposed generalization bounds in terms of the model's Rademacher complexity and suggested using regularized ERM models for the DG problem. Finally, [14] introduced an online game in which one model (player) reduces the error on test data provided by an adversarial player, but do not provide any empirical studies. In this work, we draw inspiration from [48] by considering a convex combination of source domains and leverage this to propose a new margin-based approach to the theoretical analysis of DG, which helps develop an informative generalization bound. Motivated by this analysis, we propose the **MADG** algorithm, a novel margin-based adversarial learning approach for DG, which shows consistent performance over other state-of-the-art methods across benchmarks.

## 3 Preliminaries

We consider a set of source domains \(\mathcal{D}_{\mathcal{S}_{i}}\) with \(i\in\left\{1,2,\ldots,N_{s}\right\}\) and a set of unseen domains \(\mathcal{D}_{U_{m}}\) with \(m\in\left\{1,2,\ldots,N_{u}\right\}\). We use \(\mathcal{D}\) to refer to any of these domains when the index is not relevant. We use the terms 'domain' and 'distribution' interchangeably in this work. Each such domain \(\mathcal{D}\subseteq\mathcal{X}\times\mathcal{Y}\), where \(\mathcal{X}\) is an input space and \(\mathcal{Y}\) is an output space, which is \(\left\{0,1\right\}\) in binary classification and \(\left\{1,\cdots,k\right\}\) in multi-class classification. We use \(\hat{D}\) to denote a set of samples drawn independently from \(\mathcal{D}\), i.e. \(\hat{D}=\left\{(x_{i},y_{i})\right\}_{i=1}^{n}\) where \(x_{i}\in\mathcal{X}\) and \(y_{i}\in\mathcal{Y}\),\(\forall i\in\left\{1,2,\ldots,n\right\}\). We use \(\left(x,y\right)\) to refer to a labeled sample \(\left(x_{i},y_{i}\right)\), when the index is not relevant.

As in [51], we consider the multi-class setting with a hypothesis space \(\mathcal{F}\) of scoring functions \(f:\mathcal{X}\rightarrow\mathbb{R}^{|\mathcal{Y}|}=\mathbb{R}^{k}\), where the outputs report the confidence of the prediction on each dimension. Similar to [40], we use \(f(x,y)\) to denote the component of \(f(x)\) that corresponds to the label \(y\). In order to obtain the final predicted label, we also consider a labeling function space \(\mathcal{H}\) containing \(h_{f}:\mathcal{X}\rightarrow\mathcal{Y}\) such that \(h_{f}(x)=\text{argmax}_{y\in\mathcal{Y}}\)\(f(x,y)\), i.e. the predicted label assigned to data sample \(x\) is the one resulting in the largest confidence score.

The expected error rate of a classifier \(h\in\mathcal{H}\) with respect to a distribution \(\mathcal{D}\) is defined as \(err_{\mathcal{D}}(h)\stackrel{{\Delta}}{{=}}\mathbb{E}_{(x,y) \sim\mathcal{D}}\mathbbm{1}\big{[}h(x)\neq y\big{]}\) where \(\mathbbm{1}\) is the indicator function. We also define the margin \(\rho_{f}(\cdot)\) and the corresponding margin loss of hypothesis \(f\) for a labeled example \((x,y)\) as follows:

\[\rho_{f}(x,y)\stackrel{{\Delta}}{{=}}\frac{1}{2}\Big{(}f(x,y)- \text{max}_{y^{\prime}\neq y}\;f(x,y^{\prime})\Big{)};\qquad err_{\mathcal{D} }^{(\rho)}(f)\stackrel{{\Delta}}{{=}}\mathbb{E}_{x\sim\mathcal{D}} \big{[}\Phi_{\rho}\circ\rho_{f}(x,y)\big{]}\] (1)

where \(\circ\) denotes the composition function and \(\Phi_{\rho}\) is:

\[\Phi_{\rho}(t)=\begin{cases}0&\text{if }\rho\leq t\\ 1-\frac{t}{\rho}&\text{if }0\leq t\leq\rho\\ 1&\text{if }t\leq 0\end{cases}\] (2)

The margin disparity and its empirical version are then defined as:

\[\text{disp}_{\mathcal{D}}^{(\rho)}\big{(}f^{\prime},f\big{)} \stackrel{{\Delta}}{{=}}\mathbb{E}_{\mathcal{D}}\big{[}\Phi_{\rho} \circ\rho_{f^{\prime}}(.,h_{f})\big{]}\] (3) \[\text{disp}_{\hat{D}}^{(\rho)}\big{(}f^{\prime},f\big{)} \stackrel{{\Delta}}{{=}}\mathbb{E}_{\hat{D}}\big{[}\Phi_{\rho} \circ\rho_{f^{\prime}}(.,h_{f})\big{]}=\frac{1}{n}\sum_{i=1}^{n}\Phi_{\rho} \circ\rho_{f^{\prime}}\big{(}x_{i},h_{f}(x_{i})\big{)}\] (4)

where \(f\) and \(f^{\prime}\) are different scoring functions. Margin disparity discrepancy (MDD) is used to quantify the degree of discrepancy/disagreement between decision boundaries of classifiers (using their margins) trained on different domains in our context. Such a measure can be used to evaluate the generalization performance of a model across multiple domains. The MDD and its empirical version are defined in Eqn. (5) and Eqn. (6) below, respectively.

\[\mathrm{d}^{(\rho)}_{f,\mathcal{F}}\big{(}\mathcal{D}_{S_{i}}, \mathcal{D}_{S_{k}}\big{)} \stackrel{{\Delta}}{{=}}\text{ sup}_{f^{\prime}\in\mathcal{F}}\Big{(}\text{disp}^{(\rho)}_{ \mathcal{D}_{S_{k}}}\big{(}f^{\prime},f\big{)}-\text{disp}^{(\rho)}_{\mathcal{D }_{S_{i}}}\big{(}f^{\prime},f\big{)}\Big{)}\] (5) \[\mathrm{d}^{(\rho)}_{f,\mathcal{F}}\big{(}\hat{D}_{S_{i}},\hat{D} _{S_{k}}\big{)} \stackrel{{\Delta}}{{=}}\text{ sup}_{f^{\prime}\in\mathcal{F}}\Big{(}\text{disp}^{( \rho)}_{\hat{D}_{S_{k}}}\big{(}f^{\prime},f\big{)}-\text{disp}^{(\rho)}_{\hat {D}_{S_{i}}}\big{(}f^{\prime},f\big{)}\Big{)}\] (6)

We use the above terminologies from [40], which however focused on domain adaptation (with one source domain and one seen target domain). Handling multiple seen domains and an unseen target domain in the DG setting is non-trivial, which we focus on in this work.

## 4 Margin-based Approach to Domain Generalization: Theory

This section presents the theoretical motivation for our margin-based approach to the Domain Generalization (DG) problem. Our approach is based on considering the margin disparity discrepancy (MDD), defined above, between the source domains, thereby obtaining a generalization bound. We believe such a margin-based approach has a few advantages: (i) _Informative:_ Generalization bounds based on margin loss for classification provide more information (than 0-1 loss-based bounds) by establishing a dependency between any margin function satisfying the Lipschitz condition and the upper bounds, as demonstrated in well-known earlier work [39]. (ii) _Tightness:_ In contrast to using a 0-1 loss to identify samples causing disagreement between classifiers, margin loss computes disagreement between scoring functions using a smooth function parameterized by the threshold (\(\rho\)). Consequently, the number of samples causing agreement between classifiers is less, resulting in such an MDD-based bound being tighter, as shown in Fig. 1. (iii) _Classifier-aware Discrepancy:_ MDD considers the classifier function while measuring discrepancy; as shown in Eqns 5 and 6, the supremum is computed over \(f^{\prime}\) while holding \(f\) constant (\(f\) learns the posterior distribution \(\mathbb{P}(y|x)\) discriminatively for the classification task). This provides a classifier-aware approach to computing discrepancy. (iv) _Efficient Optimization and Practicality:_ The definition of MDD, as in Eqn. (5), only requires taking the supremum over one hypothesis. Therefore, compared to other divergence measures such as \(\mathcal{H}\Delta\mathcal{H}\)[38], MDD can be optimized with ease and is practically useful, as also stated in [40].

In this section, we derive a generalization bound for an unseen domain based on the margin-based MDD loss in the DG setting. To this end, we first show an upper bound on the unlabeled source domain error given other labeled source domains (Lemma 1 and Theorem 1). We then leverage this to develop the upper bound for the error on an unseen domain that is not necessarily a source domain (Lemma 2, Theorem 2, and Corollary 1). We subsequently analyze the upper bound from Corollary 1 using the Rademacher complexity framework and develop our final generalization bound for the unseen target domain in the DG setting (Lemma 3 and Theorem 3) using our margin-based loss. In Sec 5, we show the formulation of the proposed adversarial learning algorithm, MADG, motivated by the generalization bound in Sec 4, that employs MDD to address the DG problem.

We begin by considering a setting where training data consists of \(N_{s}-1\) labeled source domains \(\mathcal{D}_{S_{i}},i=\{1,\ldots,N_{s}-1\}\) and a single unlabeled source domain \(\mathcal{D}_{\mathcal{S}_{T}}\), and show an upper bound on error in this setting. We later use this to show an upper bound for the DG setting. We first establish an upper bound on the MDD between a weighted sum of the labeled source domains and the unlabeled one in Lemma 1 below.

**Lemma 1**: _Consider a weighted sum of \(N_{s}-1\) labeled source distributions defined as \(\mathcal{D}_{\tilde{\mathcal{S}}}:=\sum_{i=1}^{N_{s}-1}\alpha_{i}\mathcal{D}_{S _{i}}\), where \(\alpha_{i}\)s are mixture co-efficients s.t. \(\sum_{i=1}^{N_{s}-1}\alpha_{i}=1\), and \(f\) is a scoring function. Then_

\[\mathrm{d}^{(\rho)}_{f,\mathcal{F}}\big{(}\mathcal{D}_{\tilde{\mathcal{S}}}, \mathcal{D}_{\mathcal{S}_{T}}\big{)}\leq\sum_{i=1}^{N_{s}-1}\alpha_{i}d^{(\rho) }_{f,\mathcal{F}}\big{(}\mathcal{D}_{\mathcal{S}_{i}},\mathcal{D}_{\mathcal{S}_ {T}}\big{)}\] (7)

Detailed proofs for all our theoretical results are provided in the Appendix. It follows from Lemma 1 that an effective way to minimize the discrepancy between the unlabeled source domain and the mixture of labeled source domains in the hypothesis space is by minimizing the convex sum of the pairwise MDD between each labeled and unlabeled source domain. Building upon this insight, we provide bounds on the unlabeled source error below in Theorem 1.

Figure 1: Space of intersection (agreement) in MDD (yellow) is reduced as compared to 0-1 loss (blue + yellow) between \(f\) and \(f^{\prime}\) for labels \(\{0,1\}\).

**Theorem 1**: _Consider a scoring function \(f\), unlabeled source domain \(\mathcal{D}_{S_{T}}\) and a mixture of \(N_{s}-1\) source distributions denoted as \(\mathcal{D}_{\mathcal{S}}:=\sum_{i=1}^{N_{s}-1}\alpha_{i}\mathcal{D}_{\mathcal{ S}_{i}}\), where \(\alpha_{i}\)s is mixture co-efficients s.t. \(\sum_{i=1}^{N_{s}-1}\alpha_{i}=1\). Then the error on the unlabeled source \(\mathcal{D}_{\mathcal{S}_{T}}\) is bounded as:_

\[err_{\mathcal{D}_{S_{T}}}(h_{f})\leq\sum_{i=1}^{N_{s}-1}\alpha_{i}\Big{(}err_ {\mathcal{D}_{\mathcal{S}_{i}}}^{(\rho)}(f)+d_{f,\mathcal{F}}^{(\rho)}\big{(} \mathcal{D}_{\mathcal{S}_{i}},\mathcal{D}_{\mathcal{S}_{T}}\big{)}\Big{)}+ \hat{\lambda}\] (8)

**Remark 1:** From Theorem 1, we observe that the unlabeled source error is upper bounded by the labeled source errors, the pairwise discrepancy between each labeled and unlabeled source domain, and the ideal margin loss described below in Remark 2. We can also interpret Theorem 1 as an upper bound for the multi-source domain adaptation (DA) setting. While this is not our primary focus in this work, we report preliminary empirical results for a multi-source DA algorithm that reduces the first two terms in Theorem 1 in the Appendix.

**Remark 2:** The ideal loss \(\hat{\lambda}\) is defined as \(\hat{\lambda}=\min_{f^{*}\in\mathcal{F}}\Big{(}\sum_{i=1}^{N_{s}-1}\alpha_{i }\ err_{\mathcal{D}_{\mathcal{S}_{i}}}^{(\rho)}(f^{*})+err_{\mathcal{D}_{ \mathcal{S}_{T}}}^{(\rho)}(f^{*})\Big{)}\) and is a constant that is independent of function \(f\).

Building on Theorem 1, we now develop bounds for the DG setting, where all source domains (\(N_{s}\)) are labeled, and the target domain is unseen during training. To this end, we consider the relationship between the unseen target and multiple source domains. In particular, we derive our error bound on the unseen target domain using the convex hull of the labeled source domains and MDD. We also provide a DG algorithm motivated by our theoretical analysis, which we describe later in Sec 5.

Before stating our main theorem, we present Lemma 2, which states that if the maximum MDD between any two sources is bounded above by \(\epsilon\), then the MDD be between any two domains that belong to the convex hull of all the sources will also be bounded by \(\epsilon\). Let \(\Lambda_{s}\) be the convex hull of source domains defined as \(\Lambda_{s}=\Big{\{}\mathcal{D}:\bar{\mathcal{D}}=\sum_{i=1}^{N_{s}}\pi_{i} \mathcal{D}_{\mathcal{S}_{i}}\) where \(\sum_{i=1}^{N_{s}}\pi_{i}=1\Big{\}}\).

**Lemma 2**: _Let \(d_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{\mathcal{S}_{i}},\mathcal{D}_{ \mathcal{S}_{k}}\big{)}{\leq\epsilon}\ \forall i,k\in\big{\{}1,2,\ldots,N_{s}\big{\}}\) and \(f\) be a scoring function. Then the following inequality holds for the MDD between any pair of domains \(\mathcal{D}^{\prime},\mathcal{D}^{\prime\prime}\in\Lambda_{s}\):_

\[d_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}^{\prime\prime},\mathcal{D}^{ \prime\prime}\big{)}{\leq\epsilon}\] (9)

We observe from Lemma 2 that in the hypothesis space, the discrepancy among all the domains (seen or unseen) that belong to the convex hull \(\Lambda_{s}\) can be reduced by minimizing the maximum MDD between two source domains. With the necessary tools at hand, we state the key theorem, i.e., the unseen target error bound for the DG problem below in Theorem 2.

**Theorem 2**: _Consider a mixture of \(N_{s}\) source distributions, scoring function f, unseen domain \(\mathcal{D}_{U_{m}}\), and \(\gamma=d_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{U_{m}},\bar{\mathcal{D}}_ {U}\big{)}\) where \(\bar{\mathcal{D}}_{U}\) is the projection of \(\mathcal{D}_{U_{m}}\) onto the convex hull of the sources i.e. \(\bar{\mathcal{D}}_{U}=\text{argmin}_{\pi_{1},\pi_{2},\ldots,\pi_{N_{s}}}\ d_{f, \mathcal{F}}^{(\rho)}\Big{(}\mathcal{D}_{U_{m}},\sum_{i=1}^{N_{s}}\pi_{i} \mathcal{D}_{\mathcal{S}_{i}}\Big{)},\sum_{i=1}^{N_{s}}\pi_{i}=1\). Then, the unseen target error is bounded as follows:_

\[err_{\mathcal{D}_{U_{m}}}(h_{f})\leq\sum_{i=1}^{N_{s}}\pi_{i}\Big{(}err_{ \mathcal{D}_{\mathcal{S}_{i}}}^{(\rho)}(f)\Big{)}+\epsilon+\gamma+\bar{\lambda}\] (10)

**Remark 3:** As defined in Theorem 2, \(\gamma=\text{d}_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{U_{m}},\bar{ \mathcal{D}}_{U}\big{)}\). Two scenarios therefore arise: \(\gamma=0\) when the unseen domain falls in the convex hull, i.e., \(\mathcal{D}_{U_{m}}=\sum_{i=1}^{N_{s}}\pi_{i}\mathcal{D}_{\mathcal{S}_{i}}\), or \(\gamma>0\) when the unseen domain cannot be represented by available domains alone. Thus this parameter can be interpreted as the need for diverse source domains. The more diverse the source domains are, the smaller the value of \(\gamma\).

**Remark 4:** As seen from Lemma 2, \(\epsilon\) is defined as the upper bound for the MDD between any two domains that belong to the convex hull \(\Lambda_{s}\) formed by the source domains. Thus, we can also interpret \(\epsilon\) as the highest MDD value among the source domains as shown below in Eqn 11.

\[\epsilon=\text{d}_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{\mathcal{S}_{i^{ \prime}}},\mathcal{D}_{\mathcal{S}_{i^{\prime}}}\big{)},\ \textbf{s.t.}\ \text{d}_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{\mathcal{S}_{i^{ \prime}}},\mathcal{D}_{\mathcal{S}_{k^{\prime}}}\big{)}\geq\text{d}_{f, \mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{\mathcal{S}_{i}},\mathcal{D}_{\mathcal{ S}_{k}}\big{)}\ \forall i,k,i^{\prime},k^{\prime}\in\big{\{}1,\ldots,N_{s}\big{\}}\] (11)

Equipped with this definition for \(\epsilon\), we can re-state Theorem 2 as Corollary 1 below.

**Corollary 1**: _Consider a mixture of \(N_{s}\) source distributions, scoring function f, unseen domain \(\mathcal{D}_{U_{m}}\), \(\gamma=d_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{U_{m}},\bar{\mathcal{D}}_ {U}\big{)}\), and \(d_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{\mathcal{S}_{i^{\prime}}},\mathcal{D }_{\mathcal{S}_{k^{\prime}}}\big{)}\) where \(d_{f,\mathcal{F}}^{(\rho)}\big{(}\mathcal{D}_{\mathcal{S}_{i^{\prime}}},\mathcal{D }_{\mathcal{S}_{k^{\prime}}}\big{)}\geq d_{f,\mathcal{F}}^{(\rho)}\big{(} \mathcal{D}_{\mathcal{S}_{i}},\mathcal{D}_{\mathcal{S}_{k}}\big{)}\ \forall i,k,i^{\prime},k^{\prime}\in\big{\{}1,2,\ldots,N_{s}\big{\}}\). Then the unseen target error is bounded as follows:_\[err_{\mathcal{D}_{U_{m}}}(h_{f})\leq\sum_{i=1}^{N_{s}}\pi_{i}\Big{(}err^{\rho}_{ \mathcal{D}_{\mathcal{S}_{i}}}(f)\Big{)}+d^{(\rho)}_{f,\mathcal{F}}\big{(} \mathcal{D}_{\mathcal{S}_{i^{\prime}}},\mathcal{D}_{\mathcal{S}_{k^{\prime}}} \big{)}+\gamma+\bar{\lambda}\] (12)

As seen from Corollary 1, the unseen target error is bounded above by the source errors, maximum MDD between two source domains, \(\gamma\), and the ideal loss given by \(\bar{\lambda}=\min_{f^{*}\in\mathcal{F}}\Bigl{(}\sum_{i=1}^{N_{s}}\pi_{i}err^{ (\rho)}_{\mathcal{D}_{\mathcal{S}_{i}}}(f^{*})+err^{(\rho)}_{\mathcal{D}_{U_{m }}}(f^{*})\Bigr{)}\).

Before we derive the generalization bound with the Rademacher complexity framework, we define

\[\Pi_{\mathcal{H}}\mathcal{F}=\bigg{\{}x\mapsto f\big{(}x,h(x)\big{)}\bigg{|}h \in\mathcal{H},f\in\mathcal{F}\bigg{\}}\] [40] and Rademacher complexity \(\mathfrak{R}_{n,\mathcal{D}}\) in Definition 1.

**Definition 1**: _Let \(\mathcal{F}\) be a class of functions such that \(f\in\mathcal{F}:\mathcal{X}\times\mathcal{Y}\rightarrow[a,b]\) and \(\hat{D}=\big{\{}(x_{1},y_{1})\ldots,(x_{n},y_{n})\big{\}}\) be a fixed sample of size \(n\) drawn from \(\mathcal{D}\) over \(\mathcal{X}\times\mathcal{Y}\). Then the Rademacher complexity of \(\mathcal{F}\) is defined as:_

\[\mathfrak{R}_{n,\mathcal{D}}(\mathcal{F})\triangleq\mathbb{E}_{\hat{D}\sim \mathcal{D}^{n}}\bigg{[}\mathbb{E}_{\sigma}\bigg{[}\sup_{f\in\mathcal{F}} \frac{1}{n}\sum_{i=1}^{n}\sigma_{i}f(x_{i},y_{i})\bigg{]}\bigg{]}\] (13)

where \(\sigma_{i}\)s are independent Rademacher variables that assume values in \(\{-1,+1\}\). We now leverage Lemma 3.6 in [40] to derive our Lemma 3.

**Lemma 3**: _For any \(\delta>0\), with probability \(1-2\delta\), the following holds simultaneously for any scoring function \(f\):_

\[\bigg{|}d^{(\rho)}_{f,\mathcal{F}}\big{(}\hat{D}_{\mathcal{S}_{i}},\hat{D}_{ \mathcal{S}_{k}}\big{)}-d^{(\rho)}_{f,\mathcal{F}}\big{(}\mathcal{D}_{\mathcal{ S}_{i}},\mathcal{D}_{\mathcal{S}_{k}}\big{)}\bigg{|}\leq\frac{k}{\rho} \mathfrak{R}_{n_{i},\mathcal{D}_{\mathcal{S}_{i}}}\big{(}\Pi_{\mathcal{H}} \mathcal{F}\big{)}+\frac{k}{\rho}\mathfrak{R}_{n_{k},\mathcal{D}_{\mathcal{S} _{k}}}\big{(}\Pi_{\mathcal{H}}\mathcal{F}\big{)}+\sqrt{\frac{\log\frac{2}{ \delta}}{2n_{i}}}+\sqrt{\frac{\log\frac{2}{\delta}}{2n_{k}}}\] (14)

where \(n_{i}\) and \(n_{k}\) correspond to the sample size of \(\hat{D}_{\mathcal{S}_{i}}\) and \(\hat{D}_{\mathcal{S}_{k}}\), respectively. The difference between MDD and its empirical version is bounded by the Rademacher complexity as seen in Eqn 14. With these definitions, we derive our generalization bound based on Rademacher complexity and empirical MDD as below.

**Theorem 3**: _Given the same setting as Corollary 1 and Lemma 3, for any \(\delta>0\), with probability \(1-3\delta\), we obtain the following generalization bound for all \(f\):_

\[err_{\mathcal{D}_{U_{m}}}(f) \leq\sum_{i=1}^{N_{s}}\pi_{i}\Big{(}err^{\rho}_{\hat{D}_{\mathcal{ S}_{i}}}(f)\Big{)}+d^{(\rho)}_{f,\mathcal{F}}\big{(}\hat{D}_{\mathcal{S}_{i^{ \prime}}},\hat{D}_{\mathcal{S}_{k^{\prime}}}\big{)}+\gamma+\bar{\lambda}+\frac {k}{\rho}\mathfrak{R}_{n_{i},\mathcal{D}_{\mathcal{S}_{i}}}\big{(}\Pi_{ \mathcal{H}}\mathcal{F}\big{)}\] (15)

where \(\Pi_{1}\mathcal{F}\triangleq\big{\{}x\mapsto f(x,y)\big{|}y\in\mathcal{Y},f \in\mathcal{F}\big{\}}\) as defined in [51] and \(1\) (in the subscript) represents constant functions mapping all points to the same class (see Appendix for more details). Theorem 3 thus establishes a relationship between the margin value \(\rho\) and the generalization error. The first two terms on the right-hand side exhibit minimal variation with an increase in the margin \(\rho\), especially when \(\rho\) is small and the hypothesis space is rich, thus reducing the overall right-hand side. However, if \(\rho\) exceeds a certain threshold (resulting in a weak classifier), then the first two terms significantly increase, resulting in increase of the overall bound. Choosing a better \(\rho\) value thus allows one to obtain a desired error bound, making it more informative than a 0-1 loss-based bound. Inspired by this theoretical framework, we now propose our margin-based adversarial learning algorithm for DG in the next section.

## 5 MADG: Methodology

This section details the methodology of the proposed **MADG** algorithm, a novel adversarial DG algorithm motivated by the theory in Section 4. As seen in Theorem 3, the unseen target domain error is upper-bounded by the convex sum of the empirical source domain errors, \(\hat{\epsilon}\) term defined in Eqn. (16), \(\gamma\), \(\bar{\lambda}\) and complexity terms. We hence aim to minimize the two important terms, viz., the convex sum of the empirical source domain errors and the \(\hat{\epsilon}\) term (given below).

\[\hat{\epsilon}=\mathrm{d}^{(\rho)}_{f,\mathcal{F}}\big{(}\hat{D}_{\mathcal{S}_{i ^{\prime}}},\hat{D}_{\mathcal{S}_{k^{\prime}}}\big{)},\ \textbf{s.t.}\ \mathrm{d}^{(\rho)}_{f,\mathcal{F}}\big{(}\hat{D}_{\mathcal{S}_{i^{ \prime}}},\hat{D}_{\mathcal{S}_{k^{\prime}}}\big{)}\geq\mathrm{d}^{(\rho)}_{f, \mathcal{F}}\big{(}\hat{D}_{\mathcal{S}_{i}},\hat{D}_{\mathcal{S}_{k}}\big{)} \ \forall i,k,i^{\prime},k^{\prime}\in\big{\{}1,\ldots,N_{s}\big{\}}\] (16)

**Efficient estimation of \(\hat{\epsilon}\).** As stated in Eqn. (16), \(\hat{\epsilon}\) is defined as the maximum pairwise empirical MDD among all source domains. Similar to Remark 4 and Lemma 2, we can also interpret \(\hat{\epsilon}\) as the upper bound of the empirical MDD between any two domains inside the convex hull formed by the source domains. If we minimize the sum of the empirical MDD between different pairs of the source domains, then the size of the convex hull reduces, which in turn minimizes \(\hat{\epsilon}\). Thus, one effective way to estimate \(\hat{\epsilon}\) is to consider the term below in Eqn. (17).

\[\sum_{i=1}^{N_{s}-1}\sum_{k=i+1}^{N_{s}}\text{d}_{f,\mathcal{F}}^{(\rho)}\big{(} \hat{D}_{S_{i}},\hat{D}_{S_{k}}\big{)}\] (17)

**Minimax optimization.** To find the optimal \(f\) in the hypothesis space \(\mathcal{F}\), we formulate our objective function as a minimization problem. As mentioned earlier, we minimize the sum of the empirical source errors and the \(\hat{\epsilon}\) term estimated using Eqn (17). Thus, the minimization problem can be written as:

\[\min_{f\in\mathcal{F}}\sum_{i=1}^{N_{s}}\pi_{i}\Big{(}err_{\hat{D}_{S_{i}}}^{ (\rho)}(f)\Big{)}+\sum_{i=1}^{N_{s}-1}\sum_{k=i+1}^{N_{s}}\text{d}_{f,\mathcal{ F}}^{(\rho)}\big{(}\hat{D}_{S_{i}},\hat{D}_{S_{k}}\big{)}\] (18)

Since empirical MDD is defined as the supremum of the hypothesis space \(\mathcal{F}\), minimizing it is in turn a minimax game with a strong max player and weaker min player. In order to strengthen the min player, we use a feature extractor, \(\mathcal{G}\), which further modifies the optimization problem as follows:

\[\begin{split}&\min_{f,\mathcal{G}}\sum_{i=1}^{N_{s}}\pi_{i} \Big{(}err_{\mathcal{G}(\hat{D}_{S_{i}})}^{(\rho)}(f)\Big{)}+\sum_{l=1}^{j} \Big{(}\text{disp}_{\mathcal{G}(\hat{D}_{S_{i}})}^{(\rho)}\big{(}f_{l}^{*},f \big{)}-\text{disp}_{\mathcal{G}(\hat{D}_{S_{k}})}^{(\rho)}\big{(}f_{l}^{*},f \big{)}\Big{)},\\ & f_{l}^{*}=\max_{f_{l}^{\prime}}\Big{(}\text{disp}_{\mathcal{G} (\hat{D}_{S_{l}})}^{(\rho)}\big{(}f_{l}^{\prime},f\big{)}-\text{disp}_{ \mathcal{G}(\hat{D}_{S_{k}})}^{(\rho)}\big{(}f_{l}^{\prime},f\big{)}\Big{)}, \text{ where }f,f_{l}^{\prime}\in\mathcal{F}\text{ and }\forall l=\big{\{}1,\ldots,j\big{\}}.\end{split}\] (19)

where \(j=\binom{N_{s}}{2}\). The relationship between \(l,i\) and \(k\) is as follows: if \(l=3\) then we pick the \(i\) and \(k\) value corresponding to the 3rd element of the set \(\Big{\{}(i,k):i=\big{\{}1,\ldots,N_{s}-1\big{\}},k=\big{\{}i+1,\ldots,N_{s} \big{\}}\Big{\}}\). To solve the minimization problem in Eqn. (19), we design an adversarial learning algorithm whose model architecture is shown in Fig. 2. One classifier \(f\) performs the classification task on all source domains, while \(j\) other classifiers, denoted by \(f^{\prime}\), compute the empirical MDD between different pairs of source domains, which finally sum together as the _transfer loss_. To compute the source errors in Eqn. (19), we use the standard cross-entropy loss \(\mathcal{E}(\hat{D}_{S_{i}})\). For convenience of optimization (MDD can be hard to optimize directly using stochastic gradient descent), in practice, following [40], we approximate the MDD loss as \(\Big{(}\mathcal{D}_{(\hat{\rho},l)}\big{(}\hat{D}_{\mathcal{S}_{i}},\hat{D}_{ \mathcal{S}_{k}}\big{)}\Big{)}\) in terms of two loss functions, \(L\) and \(L^{\prime}\), as shown below.

\[\mathcal{E}\big{(}\hat{D}_{\mathcal{S}_{i}}\big{)} =\mathbb{E}_{(x,y)\sim\hat{D}_{\mathcal{S}_{i}}}\bigg{[}L\Big{(} f\big{(}\mathcal{G}(x)\big{)},y\Big{)}\bigg{]}\] (20) \[\mathcal{D}_{(\hat{\rho},l)}\big{(}\hat{D}_{\mathcal{S}_{i}},\hat{ D}_{\mathcal{S}_{k}}\big{)} =\mathbb{E}_{(x,y)\sim\hat{D}_{\mathcal{S}_{k}}}\bigg{[}L^{\prime }\Big{(}f_{l}^{\prime}\big{(}\mathcal{G}(x)\big{)},f\big{(}\mathcal{G}(x) \big{)}\Big{)}\bigg{]}-\hat{\rho}\mathbb{E}_{(x,y)\sim\hat{D}_{\mathcal{S}_{i}}} \bigg{[}L\Big{(}f_{l}^{\prime}\big{(}\mathcal{G}(x)\big{)},f\big{(}\mathcal{G}( x)\big{)}\Big{)}\bigg{]}.\]

We train the feature extractor, \(\mathcal{G}\), to minimize the above MDD loss term by using a Gradient Reversal Layer (GRL) proposed in [52], as \(\mathcal{D}_{(\hat{\rho},l)}(\hat{D}_{\mathcal{S}_{i}},\hat{D}_{\mathcal{S}_{k}})\) is not differentiable w.r.t the parameters of \(f\). \(L\) and \(L^{\prime}\) are defined as:

Figure 2: Architecture of the proposed MADG methodology\[L\Big{(}f\big{(}\mathcal{G}(x)\big{)},y\Big{)}\triangleq-\log\bigg{[}\sigma_{y} \Big{(}f\big{(}\mathcal{G}(x)\big{)}\Big{)}\bigg{]},\ L^{\prime}\Big{(}f^{\prime} \big{(}\mathcal{G}(x)\big{)},f\big{(}\mathcal{G}(x)\big{)}\Big{)}\overset{\Delta} {=}\log\bigg{[}1-\sigma_{\hat{h}_{f}\big{(}\mathcal{G}(x)\big{)}}\Big{(}f^{ \prime}\big{(}\mathcal{G}(x)\big{)}\Big{)}\bigg{]}\] (21)

where \(\sigma_{w}(z)=\frac{e^{iw}}{\sum_{i=1}^{N_{s}}e^{i}}\), \(z\in\mathbb{R}^{k}\), for \(w=1,\ldots,k\), and \(\hat{\rho}=e^{\rho}\). The final optimization problem that the **MADG** method solves is shown below.

\[\min_{f,\mathcal{G}}\sum_{i=1}^{N_{s}}\pi_{i}\Big{(}\mathcal{E}(\hat{D}_{ \mathcal{S}_{i}})\Big{)}+\sum_{l=1}^{j}\Big{(}\mathcal{D}_{(\hat{\rho},l)} \big{(}\hat{D}_{\mathcal{S}_{i}},\hat{D}_{\mathcal{S}_{k}}\big{)}\Big{)},\ \ \max_{f_{1}^{ \prime},\ldots,f_{j}^{\prime}}\sum_{l=1}^{j}\Big{(}\mathcal{D}_{(\hat{\rho},l) }\big{(}\hat{D}_{\mathcal{S}_{i}},\hat{D}_{\mathcal{S}_{k}}\big{)}\Big{)}\] (22)

We propose an adversarial DG algorithm to solve the minimization problem, as shown in Algorithm 1. We train the proposed adversarial model in two steps. In the first step, we update the parameters \(f\text{and}\ \mathcal{G}\). In the next step, we first do a forward pass to compute the outputs from \(f\) and then update the parameters \(f^{\prime}\)and \(\mathcal{G}\) as shown in the algorithm. We further show through our ablation studies that this way of updating parameters at different steps outperforms a joint update strategy.

``` INPUT: \(N_{s}\) labeled source domains for epoch \(\gets 1\) to total_epochs do for batch \(\gets 1\) to total_batches do  Update parameters of \(f\), \(\mathcal{G}\), using Eqn. (20) \(\hat{y}_{\hat{D}_{\mathcal{S}_{i}}}\gets f(\mathcal{G}(x))\ \forall i\in\{1,2,\ldots,N_{s}\}\)  Compute \(MDD_{l}\) as in Eqn. (20) using \(\hat{y}_{\hat{D}_{\mathcal{S}_{i}}}\)  Compute Transfer loss \(=\sum_{l=1}^{j}(\mathcal{D}_{(\hat{\rho},l)}(\hat{D}_{\mathcal{S}_{i}},\hat{D }_{\mathcal{S}_{k}}))\)  Update parameters of \(f^{\prime}\)and \(\mathcal{G}\) as in Eqn. (22) endfor endfor ```

**Algorithm 1** Margin-based adversarial learning for Domain Generalization (MADG)

## 6 Experiments

**Datasets and Implementation Details.** We perform an extensive evaluation on five benchmark DG datasets for image classification: VLCS [30], PACS [31], OfficeHome (OH) [32], TerraIncognita (TI) [33] and DomainNet (DN) [34].We follow [53] in using 'Test-domain validation' procedure for hyperparameter selection. We use the Resnet50 architecture [54] pre-trained on ImageNet dataset [55] as the feature extractor (\(\mathcal{G}\)). We train our model using stochastic gradient descent with momentum [56]. We use a mini-batch that contains 32 samples from all source domains. All other implementation details including hyperparameters such as learning rate, margin, and weight decay are provided in the Appendix.

**Baselines and evaluation metrics.** We report the results of all baseline models from [35], which are represented by \(\dagger\) in Table 1. We also present the results from [53], which are represented by \(\bot\). We run our experiments for three trials and report the average accuracy (with standard deviation). Existing state-of-the-art methods (see [35]) focus on average accuracy across the benchmarks, with each method doing well on a subset of datasets. In order to reward consistent performance across datasets while improving average accuracy, we additionally include a ranking-based metric (from [53]) and go beyond ranking with two new metrics (AD and GD), which more precisely capture the consistent performance of a method across datasets: **(i) Median rank (M) [53]:** This measures the median rank of a model's performance across all datasets and is not skewed to best/worst ranks when compared to the mean rank. **(ii) Arithmetic mean of differences (AD):** This measures the difference of a model's performance w.r.t the highest-performing model's accuracy on a given dataset, and then taking its arithmetic mean across datasets. **(iii) Geometric mean of differences (GD):** This similarly measures the geometric mean of the difference between the highest accuracy and the achieved accuracy of a model across all datasets.

**Results.** We report the results on different DG benchmark datasets on the considered evaluation metrics in Table 1. It is observed that most previous methods are far from the best-performing model's accuracy on at least one of the datasets. This is captured well by the metrics AD and GD, which quantify the mean of the differences from the best accuracy across all the datasets. Thus, we observe higher values in the first two columns of Table 1, where our **MADG** model performs the best showing its consistency. The MADG algorithm outperforms all other models on average accuracy, median rank, AD, and GD, thus demonstrating consistent performance.

The results also show that MADG outperform DANN and CDANN models (which are based on the 0-1 loss discrepancy theory) across most datasets and improves the average accuracy by \(\approx 2\%\) with significantly better AD and GD values too - corroborating our margin-based approach to the DG problem. MADG is 1% better on the avg accuracy (and lower AD-GD values) when compared to ERM, which was found to be a strong baseline for DG in [35]. Our model also reports an accuracy improvement of \(\approx 3\%\) on the OfficeHome dataset compared to all other models.

To highlight our contribution, we also provide a grouping of DG methods that are theory-based in Table 1 (also denoted with a \(*\)), some of which do not report results on all benchmark datasets. For the only such method that reports results on all datasets - MTL, MADG achieves \(1.2\%\) more average accuracy, 1.3 units less AD, 1.7 units less GD, and a lower median ranking as compared to MTL. More results, including 'Training-domain' model selection results, are provided in the Appendix.

## 7 More Empirical Analysis and Ablation Studies

**Computational Cost.** The computational cost of a model is usually measured in terms of GPU RAM occupied (GB) and time taken per step (s). In terms of computational cost, following Eqn. (17), while we iteratively compute MDD over all domains, our computational cost during training is similar to other benchmark methods as shown in Table 2. As seen in the table, even simple methods like ERM and Mixup have running times in similar ranges.

**Margin.** As shown in Theorem 3, the margin value \(\rho\) plays an important role, especially with its dependency on the generalization error. In practice, to get the desired margin while training the MADG algorithm, we approximate it as \(\hat{\rho}\stackrel{{\Delta}}{{=}}\exp\rho\). We experiment with different margin values, \(\hat{\rho}=1,1.5\), \(2\), and \(3\), and report the average accuracy for PACS and VLCS dataset in Table 3. Table 3 shows that \(\hat{\rho}=1.5\) outperforms other values on both datasets. As seen from the definition of the margin loss function Eqn. (1) and MDD Eqn. (5), although having a large margin is better to achieve low loss and higher target accuracy, there is a tradeoff between optimal margin and loss value. We observe a similar trend in Table 3.

**Experiments on Colored MNIST.** As stated in Theorem 2, \(\gamma\) is defined as the projection of the unseen domain onto the convex hull. It is also defined in Theorem 2 as the MDD between the convex hull and the unseen domain, which can be further approximated with a combination of two different cross-entropy functions as in Eq (20). This equation is equivalent to a balanced Jensen-Shannon (JS) Divergence as shown in Proposition D.1. in [40]. Thus, we can approximate this projection by computing the JS divergence between domains. We experimented on the Colored MNIST dataset, where we noted the \(\gamma\) values to be small for all domains, as shown

\begin{table}
\begin{tabular}{l c c c c c c c c} \hline \hline
**Algorithm** & **AD(\(\downarrow\))** & **GD(\(\downarrow\))** & **M(\(\downarrow\))** & **VLCS** & **OH** & **PACS** & **TI** & **DN** & **Avg(\(\uparrow\))** \\ \hline ERM (1998)\({}^{\dagger}\)[57] & 2.2 & 1.8 & 8 & 77.6\({}_{0.3}\) & 66.4\({}_{0.3}\) & 86.7\({}_{0.3}\) & 53.0\({}_{0.3}\) & 41.3\({}_{0.1}\) & 65.0 \\ CORAL (2016)\({}^{\dagger}\)[58] & 1.9 & 1.1 & 8 & 77.7\({}_{0.2}\) & 65.4\({}_{0.2}\) & 87.1\({}_{0.3}\) & 52.8\({}_{0.2}\) & 41.8\({}_{0.1}\) & 65.6 \\ DANN (2016)\({}^{\dagger}\)[59] & 3.4 & 2.1 & 16 & 79.7\({}_{0.3}\) & 65.3\({}_{0.8}\) & 85.2\({}_{0.2}\) & 50.6\({}_{0.4}\) & 38.3\({}_{0.1}\) & 63.8 \\ CDANN (2018)\({}^{\dagger}\)[60] & 3.2 & 0.7 & 14 & **79.9\({}_{0.9}\)** & 65.3\({}_{0.5}\) & 85.8\({}_{0.8}\) & 50.8\({}_{0.8}\) & 38.5\({}_{0.2}\) & 64.1 \\ MDDG (2018)\({}^{\dagger}\)[61] & 2.3 & 1.8 & 6 & 77.5\({}_{0.2}\) & 66.0\({}_{0.3}\) & 86.0\({}_{0.4}\) & 52.0\({}_{0.1}\) & 41.6\({}_{0.1}\) & 64.9 \\ MMD (2018)\({}^{\dagger}\)[62] & 5.9 & 0.9 & 10 & 77.9\({}_{0.1}\) & 66.2\({}_{0.3}\) & 87.2\({}_{0.2}\) & 52.0\({}_{0.4}\) & 23.5\({}_{0.4}\) & 61.4 \\ IRM (2019)\({}^{\dagger}\)[63] & 6.7 & 5.3 & 18 & 76.9\({}_{0.6}\) & 63.0\({}_{0.2}\) & 84.5\({}_{0.1}\) & 50.5\({}_{0.7}\) & 28.0\({}_{0.1}\) & 60.6 \\ GroupDRO (2019)\({}^{\dagger}\)[64] & 3.9 & 1.9 & 10 & 77.4\({}_{0.6}\) & 66.2\({}_{0.3}\) & 87.1\({}_{0.1}\) & 52.4\({}_{0.3}\) & 33.4\({}_{0.3}\) & 63.3 \\ Mixup (2020)\({}^{\dagger}\)[65] & 1.9 & 0.4 & 5 & 78.1\({}_{0.3}\) & 68.0\({}_{0.2}\) & 86.6\({}_{0.3}\) & 54.0\({}_{0.4}\) & 39.6\({}_{0.1}\) & 65.4 \\ ARM (2020)\({}^{\dagger}\)[66] & 4.1 & 3.4 & 14 & 77.8\({}_{0.3}\) & 64.8\({}_{0.4}\) & 58.5\({}_{0.2}\) & 51.2\({}_{0.5}\) & 36.0\({}_{0.2}\) & 63.1 \\ RSC (2020)\({}^{\dagger}\)[67] & 2.9 & 2.5 & 9 & 77.8\({}_{0.6}\) & 66.5\({}_{0.8}\) & 86.2\({}_{0.5}\) & 52.1\({}_{0.2}\) & 38.9\({}_{0.6}\) & 64.3 \\ SagNet (2021)\({}^{\dagger}\)[68] & 2.3 & 2.0 & 6 & 77.6\({}_{0.1}\) & 67.5\({}_{0.2}\) & 86.4\({}_{0.4}\) & 52.5\({}_{0.4}\) & 40.8\({}_{0.2}\) & 65.0 \\ V-REx (2021)\({}^{\dagger}\)[69] & 4.7 & 0.8 & 12 & 78.1\({}_{0.2}\) & 65.7\({}_{0.3}\) & 78.2\({}_{0.4}\) & 51.4\({}_{0.5}\) & 30.1\({}_{0.3}\) & 62.5 \\ AND-mask (2021)\({}^{\bot}\)[70] & 3.9 & 3.3 & 13 & 76.4\({}_{0.4}\) & 66.1\({}_{0.2}\) & 86.4\({}_{0.4}\) & 49.8\({}_{0.4}\) & 37.9\({}_{0.6}\) & 63.3 \\ Fish (2021)\({}^{\bot}\)[71] & 2.5 & 0.6 & 13 & 77.8\({}_{0.6}\) & 66.0\({}_{0.2}\) & 85.8\({}_{0.6}\) & 50.8\({}_{0.4}\) & **33.4\({}_{0.3}\)** & 64.8 \\ SAND-mask (2021)\({}^{\bot}\)[72] & 5.2 & 4.2 & 16 & 76.2\({}_{0.5}\) & 65.9\({}_{0.5}\) & 85.9\({}_{0.5}\) & 50.2\({}_{0.1}\) & 32.2\({}_{0.6}\) & 62.1 \\ Fisher (20221)\({}^{\bot}\)[53] & 1.5 & 1.2 & 78.2\({}_{0.2}\) & 68.2\({}_{0.2}\) & 86.2\({}_{0.3}\) & 86.9\({}_{0.2}\) & 53.6\({}_{0.4}\) & 41.8\({}_{0.2}\) & 65.7 \\ \hline G2DM (2019)\({}^{\dagger}\)[148] & - & - & - & 75.9\({}_{0.1}\) & - & 73.6\({}_{0.1}\) & - & - & - \\ MTL (2021)\({}^{\dagger}\)[47] & - & 2.5 & 2.0 & 8 & 77.7\({}_{0.5}\) & 66.5\({}_{0.1}\) & 86.7\({}_{0.2}\) & 52.2\({}_{0.4}\) & 40.8\({}_{0.1}\) & 64.8 \\ Transfer (2021)\({}^{\dagger}\)[73] & - & - & - & - & 64.3\({}_{0.1}\) & 85.3\({}_{0.2}\) & - & - & - \\ OOD (2021)\

[MISSING_PAGE_FAIL:10]

## Acknowledgments

The research of AD is supported in part by the Prime Minister Research Fellowship, Ministry of Education, Government of India. The research of LRC is supported by the Indo-Norwegian Collaboration in Autonomous Cyber-Physical Systems (INCAPS) project: 287918 of the International Partnerships for Excellent Education, Research and Innovation (INTPART) program and the Low-Altitude UAV Communication and Tracking (LUCAT) project: 280835 of the IKTPLUSS program from the Research Council of Norway. The research of AK is supported by THAN Faculty Fellowship. VNB would like to acknowledge the support through the Govt of India SERB IMPRINT and DST ICPS funding programs for this work. We are grateful to the anonymous reviewers for the feedback that helped improved the presentation of this paper.

## References

* [1] K. Aggarwal, S. K. Singh, M. Chopra, S. Kumar, and F. Colace, "Deep learning in robotics for strengthening industry 4.0.: opportunities, challenges and future directions," _Robotics and AI for Cybersecurity and Critical Infrastructure in Smart Cities_, pp. 1-19, 2022.
* [2] M. Tsuneki, "Deep learning models in medical image analysis," _Journal of Oral Biosciences_, vol. 64, no. 3, pp. 312-320, 2022.
* [3] T. Ayoub Shaikh, T. Rasool, and F. Rasheed Lone, "Towards leveraging the role of machine learning and artificial intelligence in precision agriculture and smart farming," _Computers and Electronics in Agriculture_, vol. 198, p. 107119, 2022.
* [4] J. Quionero-Candela, M. Sugiyama, A. Schwaighofer, and N. D. Lawrence, _Dataset Shift in Machine Learning_. The MIT Press, 2009.
* [5] J. Wang, C. Lan, C. Liu, Y. Ouyang, T. Qin, W. Lu, Y. Chen, W. Zeng, and P. Yu, "Generalizing to unseen domains: A survey on domain generalization," _IEEE Transactions on Knowledge and Data Engineering_, 2022.
* [6] Y. Zhang, "A survey of unsupervised domain adaptation for visual recognition," _arXiv preprint arXiv:2112.06745_, 2021.
* [7] X. Liu, C. Yoo, F. Xing, H. Oh, G. El Fakhri, J.-W. Kang, J. Woo _et al._, "Deep unsupervised domain adaptation: A review of recent advances and perspectives," _APSIPA Transactions on Signal and Information Processing_, vol. 11, no. 1, 2022.
* [8] G. Blanchard, G. Lee, and C. Scott, "Generalizing from several related classification tasks to a new unlabeled sample," in _Advances in Neural Information Processing Systems_, vol. 24, 2011.
* [9] T. Matsuura and T. Harada, "Domain generalization using a mixture of multiple latent domains," in _Proceedings of the AAAI Conference on Artificial Intelligence_, vol. 34, no. 07, 2020, pp. 11 749-11 756.
* [10] S. Lin, C.-T. Li, and A. C. Kot, "Multi-domain adversarial feature generalization for person re-identification," _IEEE Transactions on Image Processing_, vol. 30, pp. 1596-1607, 2020.
* [11] Z. Deng, F. Ding, C. Dwork, R. Hong, G. Parmigiani, P. Patil, and P. Sur, "Representation via representations: Domain generalization via adversarially learned invariant representations," _arXiv preprint arXiv:2006.11478_, 2020.
* [12] S. Zhao, M. Gong, T. Liu, H. Fu, and D. Tao, "Domain generalization via entropy regularization," _Advances in Neural Information Processing Systems_, vol. 33, pp. 16 096-16 107, 2020.
* [13] K. Akuzawa, Y. Iwasawa, and Y. Matsuo, "Adversarial invariant feature learning with accuracy constraint for domain generalization," in _Machine Learning and Knowledge Discovery in Databases: European Conference_. Springer, 2020, pp. 315-331.
* [14] E. Rosenfeld, P. Ravikumar, and A. Risteski, "An online learning approach to interpolation and extrapolation in domain generalization," in _International Conference on Artificial Intelligence and Statistics_. PMLR, 2022, pp. 2641-2657.

* [15] M.-H. Bui, T. Tran, A. Tran, and D. Phung, "Exploiting domain-specific features to enhance domain generalization," _Advances in Neural Information Processing Systems_, vol. 34, pp. 21 189-21 201, 2021.
* [16] V. Narayanan, A. A. Deshmukh, U. Dogan, and V. N. Balasubramanian, "On challenges in unsupervised domain generalization," in _NeurIPS 2021 Workshop on Pre-registration in Machine Learning_. PMLR, 2022, pp. 42-58.
* [17] Y. Shu, Z. Cao, C. Wang, J. Wang, and M. Long, "Open domain generalization with domain-augmented meta-learning," in _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, 2021, pp. 9624-9633.
* [18] J. Yuan, X. Ma, D. Chen, K. Kuang, F. Wu, and L. Lin, "Label-efficient domain generalization via collaborative exploration and generalization," in _Proceedings of the 30th ACM International Conference on Multimedia_, 2022, pp. 2361-2370.
* [19] S. Paul, T. Dutta, and S. Biswas, "Universal cross-domain retrieval: Generalizing across classes and domains," in _Proceedings of the IEEE/CVF International Conference on Computer Vision_, 2021, pp. 12 056-12 064.
* [20] Q. Xu, R. Zhang, Y. Zhang, Y. Wang, and Q. Tian, "A fourier-based framework for domain generalization," in _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, 2021, pp. 14 383-14 392.
* [21] Z. Li, Z. Cui, S. Wang, Y. Qi, X. Ouyang, Q. Chen, Y. Yang, Z. Xue, D. Shen, and J.-Z. Cheng, "Domain generalization for mammography detection via multi-style and multi-view contrastive learning," in _Medical Image Computing and Computer Assisted Intervention-MICCAI Proceedings_, 2021, pp. 98-108.
* [22] D. Kim, Y. Yoo, S. Park, J. Kim, and J. Lee, "Selfreg: Self-supervised contrastive regularization for domain generalization," in _Proceedings of the IEEE/CVF International Conference on Computer Vision_, 2021, pp. 9619-9628.
* [23] Y. Chen, Y. Wang, Y. Pan, T. Yao, X. Tian, and T. Mei, "A style and semantic memory mechanism for domain generalization," in _Proceedings of the IEEE/CVF International Conference on Computer Vision_, 2021, pp. 9164-9173.
* [24] D. Li, H. Gouk, and T. Hospedales, "Finding lost dg: Explaining domain generalization via model complexity," _arXiv preprint arXiv:2202.00563_, 2022.
* [25] M. Zhang, H. Marklund, N. Dhawan, A. Gupta, S. Levine, and C. Finn, "Adaptive risk minimization: Learning to adapt to domain shift," _Advances in Neural Information Processing Systems_, vol. 34, pp. 23 664-23 678, 2021.
* [26] A. Nasery, S. Thakur, V. Pirtala, A. De, and S. Sarawagi, "Training for the future: A simple gradient interpolation loss to generalize along time," _Advances in Neural Information Processing Systems_, vol. 34, pp. 19 198-19 209, 2021.
* [27] J. Cha, S. Chun, K. Lee, H.-C. Cho, S. Park, Y. Lee, and S. Park, "Swad: Domain generalization by seeking flat minima," _Advances in Neural Information Processing Systems_, vol. 34, pp. 22 405-22 418, 2021.
* [28] A. Robey, G. J. Pappas, and H. Hassani, "Model-based domain generalization," _Advances in Neural Information Processing Systems_, vol. 34, pp. 20 210-20 229, 2021.
* [29] J. Cha, K. Lee, S. Park, and S. Chun, "Domain generalization by mutual-information regularization with pre-trained models," in _Proceedings of the European Conference on Computer Vision (ECCV)_, 2022, pp. 440-457.
* [30] C. Fang, Y. Xu, and D. N. Rockmore, "Unbiased metric learning: On the utilization of multiple datasets and web images for softening bias," in _2013 IEEE International Conference on Computer Vision_, 2013, pp. 1657-1664.

* [31] D. Li, Y. Yang, Y.-Z. Song, and T. M. Hospedales, "Deeper, broader and artier domain generalization," in _Proceedings of the IEEE international conference on computer vision_, 2017, pp. 5542-5550.
* [32] H. Venkateswara, J. Eusebio, S. Chakraborty, and S. Panchanathan, "Deep hashing network for unsupervised domain adaptation," in _Proceedings of the IEEE conference on computer vision and pattern recognition_, 2017, pp. 5018-5027.
* [33] S. Beery, G. Van Horn, and P. Perona, "Recognition in terra incognita," in _Proceedings of the European conference on computer vision (ECCV)_, 2018, pp. 456-473.
* [34] X. Peng, Q. Bai, X. Xia, Z. Huang, K. Saenko, and B. Wang, "Moment matching for multi-source domain adaptation," in _Proceedings of the IEEE/CVF international conference on computer vision_, 2019, pp. 1406-1415.
* [35] I. Gulrajani and D. Lopez-Paz, "In search of lost domain generalization," in _9th International Conference on Learning Representations, ICLR_, 2021.
* [36] A. Gretton, A. Smola, J. Huang, M. Schmittfull, K. Borgwardt, and B. Scholkopf, "Covariate Shift by Kernel Mean Matching," in _Dataset Shift in Machine Learning_. The MIT Press, 2008.
* [37] J. Lin, Y. Tang, J. Wang, and W. Zhang, "Mitigating both covariate and conditional shift for domain generalization," in _2022 IEEE 8th International Conference on Cloud Computing and Intelligent Systems (CCIS)_. IEEE, 2022, pp. 437-443.
* [38] S. Ben-David, J. Blitzer, K. Crammer, A. Kulesza, F. Pereira, and J. W. Vaughan, "A theory of learning from different domains," _Machine learning_, vol. 79, no. 1, pp. 151-175, 2010.
* [39] V. Koltchinskii and D. Panchenko, "Empirical margin distributions and bounding the generalization error of combined classifiers," _The Annals of Statistics_, vol. 30, no. 1, pp. 1-50, 2002.
* [40] Y. Zhang, T. Liu, M. Long, and M. Jordan, "Bridging theory and algorithm for domain adaptation," in _Proceedings of the 36th International Conference on Machine Learning_, vol. 97, 2019, pp. 7404-7413.
* [41] P. L. Bartlett and S. Mendelson, "Rademacher and gaussian complexities: Risk bounds and structural results," _Journal of Machine Learning Research_, vol. 3, no. Nov, pp. 463-482, 2002.
* [42] M. M. Rahman, C. Fookes, M. Baktashmotlagh, and S. Sridharan, "Correlation-aware adversarial domain adaptation and generalization," _Pattern Recognition_, vol. 100, p. 107124, 2020.
* [43] G. Blanchard, G. Lee, and C. Scott, "Generalizing from several related classification tasks to a new unlabeled sample," _Advances in neural information processing systems_, vol. 24, 2011.
* [44] K. Muandet, D. Balduzzi, and B. Scholkopf, "Domain generalization via invariant feature representation," in _International conference on machine learning_. PMLR, 2013, pp. 10-18.
* [45] A. A. Deshmukh, Y. Lei, S. Sharma, U. Dogan, J. W. Cutler, and C. Scott, "A generalization error bound for multi-class domain generalization," _arXiv preprint arXiv:1905.10392_, 2019.
* [46] S. Hu, K. Zhang, Z. Chen, and L. Chan, "Domain generalization via multidomain discriminant analysis," in _Uncertainty in Artificial Intelligence_. PMLR, 2020, pp. 292-302.
* [47] G. Blanchard, A. A. Deshmukh, U. Dogan, G. Lee, and C. Scott, "Domain generalization by marginal transfer learning," _The Journal of Machine Learning Research_, vol. 22, no. 1, pp. 46-100, 2021.
* [48] I. Albuquerque, J. Monteiro, M. Darvishi, T. H. Falk, and I. Mitliagkas, "Generalizing to unseen domains via distribution matching," _arXiv preprint arXiv:1911.00804_, 2019.
* [49] H. Ye, C. Xie, T. Cai, R. Li, Z. Li, and L. Wang, "Towards a theoretical framework of out-of-distribution generalization," _Advances in Neural Information Processing Systems_, vol. 34, pp. 23 519-23 531, 2021.

* [50] R. Vedantam, D. Lopez-Paz, and D. J. Schwab, "An empirical investigation of domain generalization with empirical risk minimizers," _Advances in Neural Information Processing Systems_, vol. 34, pp. 28 131-28 143, 2021.
* [51] M. Mohri, A. Rostamizadeh, and A. Talwalkar, _Foundations of machine learning_. MIT press, 2018.
* [52] Y. Ganin and V. Lempitsky, "Unsupervised domain adaptation by backpropagation," in _International conference on machine learning_. PMLR, 2015, pp. 1180-1189.
* [53] A. Rame, C. Dancette, and M. Cord, "Fishr: Invariant gradient variances for out-of-distribution generalization," in _International Conference on Machine Learning_. PMLR, 2022, pp. 18 347-18 377.
* [54] K. He, X. Zhang, S. Ren, and J. Sun, "Deep residual learning for image recognition," in _Proceedings of the IEEE conference on computer vision and pattern recognition_, 2016, pp. 770-778.
* [55] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh, S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein _et al._, "Imagenet large scale visual recognition challenge," _International journal of computer vision_, vol. 115, pp. 211-252, 2015.
* [56] N. Qian, "On the momentum term in gradient descent learning algorithms," _Neural networks_, vol. 12, no. 1, pp. 145-151, 1999.
* [57] V. N. Vapnik, "An overview of statistical learning theory," _IEEE transactions on neural networks_, vol. 10, no. 5, pp. 988-999, 1999.
* [58] B. Sun and K. Saenko, "Deep coral: Correlation alignment for deep domain adaptation," in _Computer Vision-ECCV 2016 Workshops: Amsterdam, The Netherlands, October 8-10 and 15-16, 2016, Proceedings, Part III 14_. Springer, 2016, pp. 443-450.
* [59] Y. Ganin, E. Ustinova, H. Ajakan, P. Germain, H. Larochelle, F. Laviolette, M. Marchand, and V. Lempitsky, "Domain-adversarial training of neural networks," _The journal of machine learning research_, vol. 17, no. 1, pp. 2096-2030, 2016.
* [60] Y. Li, X. Tian, M. Gong, Y. Liu, T. Liu, K. Zhang, and D. Tao, "Deep domain generalization via conditional invariant adversarial networks," in _Proceedings of the European conference on computer vision (ECCV)_, 2018, pp. 624-639.
* [61] D. Li, Y. Yang, Y.-Z. Song, and T. Hospedales, "Learning to generalize: Meta-learning for domain generalization," in _Proceedings of the AAAI conference on artificial intelligence_, vol. 32, no. 1, 2018.
* [62] H. Li, S. J. Pan, S. Wang, and A. C. Kot, "Domain generalization with adversarial feature learning," in _Proceedings of the IEEE conference on computer vision and pattern recognition_, 2018, pp. 5400-5409.
* [63] M. Arjovsky, L. Bottou, I. Gulrajani, and D. Lopez-Paz, "Invariant risk minimization," _arXiv preprint arXiv:1907.02893_, 2019.
* [64] S. Sagawa, P. W. Koh, T. B. Hashimoto, and P. Liang, "Distributionally robust neural networks for group shifts: On the importance of regularization for worst-case generalization," _arXiv preprint arXiv:1911.08731_, 2019.
* [65] S. Yan, H. Song, N. Li, L. Zou, and L. Ren, "Improve unsupervised domain adaptation with mixup training," _arXiv preprint arXiv:2001.00677_, 2020.
* [66] M. Zhang, H. Marklund, A. Gupta, S. Levine, and C. Finn, "Adaptive risk minimization: A meta-learning approach for tackling group shift," _arXiv preprint arXiv:2007.02931_, vol. 8, p. 9, 2020.
* [67] Z. Huang, H. Wang, E. P. Xing, and D. Huang, "Self-challenging improves cross-domain generalization," in _Computer Vision-ECCV 2020: 16th European Conference, Glasgow, UK, August 23-28, 2020, Proceedings, Part II 16_. Springer, 2020, pp. 124-140.

* [68] H. Nam, H. Lee, J. Park, W. Yoon, and D. Yoo, "Reducing domain gap by reducing style bias," in _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, 2021, pp. 8690-8699.
* [69] D. Krueger, E. Caballero, J.-H. Jacobsen, A. Zhang, J. Binas, D. Zhang, R. Le Priol, and A. Courville, "Out-of-distribution generalization via risk extrapolation (rex)," in _International Conference on Machine Learning_. PMLR, 2021, pp. 5815-5826.
* [70] G. Parascandolo, A. Neitz, A. Orvieto, L. Gresele, and B. Scholkopf, "Learning explanations that are hard to vary," in _9th International Conference on Learning Representations, ICLR_, 2021.
* [71] Y. Shi, J. Seely, P. H. Torr, N. Siddharth, A. Hannun, N. Usunier, and G. Synnaeve, "Gradient matching for domain generalization," _arXiv preprint arXiv:2104.09937_, 2021.
* [72] S. Shahtalebi, J.-C. Gagnon-Audet, T. Laleh, M. Faramarzi, K. Ahuja, and I. Rish, "Sandmask: An enhanced gradient masking strategy for the discovery of invariances in domain generalization," _ArXiv_, vol. abs/2106.02266, 2021.
* [73] G. Zhang, H. Zhao, Y. Yu, and P. Poupart, "Quantifying and improving transferability in domain generalization," _Advances in Neural Information Processing Systems_, vol. 34, pp. 10 957-10 970, 2021.
* [74] M. Pezeshki, O. Kaba, Y. Bengio, A. C. Courville, D. Precup, and G. Lajoie, "Gradient starvation: A learning proclivity in neural networks," _Advances in Neural Information Processing Systems_, vol. 34, pp. 1256-1272, 2021.