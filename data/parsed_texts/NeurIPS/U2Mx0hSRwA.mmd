# Ordered Momentum for Asynchronous SGD

 Chang-Wei Shi Yi-Rui Yang Wu-Jun Li

National Key Laboratory for Novel Software Technology,

School of Computer Science, Nanjing University, Nanjing, China

{shicw, yangyr}@smail.nju.edu.cn, liwujun@nju.edu.cn

Corresponding author.

###### Abstract

Distributed learning is essential for training large-scale deep models. Asynchronous SGD (ASGD) and its variants are commonly used distributed learning methods, particularly in scenarios where the computing capabilities of workers in the cluster are heterogeneous. Momentum has been acknowledged for its benefits in both optimization and generalization in deep model training. However, existing works have found that naively incorporating momentum into ASGD can impede the convergence. In this paper, we propose a novel method called ordered momentum (OrMo) for ASGD. In OrMo, momentum is incorporated into ASGD by organizing the gradients in order based on their iteration indexes. We theoretically prove the convergence of OrMo with both constant and delay-adaptive learning rates for non-convex problems. To the best of our knowledge, this is the first work to establish the convergence analysis of ASGD with momentum without dependence on the maximum delay. Empirical results demonstrate that OrMo can achieve better convergence performance compared with ASGD and other asynchronous methods with momentum.

## 1 Introduction

Many machine learning problems can be formulated as optimization problems of the following form:

\[\min_{\mathbf{w}\in\mathbb{R}^{d}}F(\mathbf{w})=\mathbb{E}_{\xi\sim\mathcal{D }}\left[f(\mathbf{w};\xi)\right],\] (1)

where \(\mathbf{w}\) denotes the model parameter, \(d\) is the dimension of the parameter, \(\mathcal{D}\) represents the distribution of the training instances and \(f(\mathbf{w};\xi)\) denotes the loss on the training instance \(\xi\).

Stochastic gradient descent (SGD) [28] and its variants [6, 12] are widely employed to solve the problem in (1). At each iteration, SGD uses one stochastic gradient or a mini-batch of stochastic gradients as an estimate of the full gradient to update the model parameter. In practice, momentum [26, 36, 24, 33] is often incorporated into SGD as a crucial technique for faster convergence and better generalization performance. Many popular machine learning libraries, such as TensorFlow [1] and PyTorch [25], include SGD with momentum (SGDm) as one of the optimizers.

Due to the rapid increase in the sizes of both models and datasets in recent years, a single machine is often insufficient to complete the training task of machine learning models within a reasonable time. Distributed learning [42, 37] aims to distribute the computations across multiple machines (workers) to accelerate the training process. Because of its necessity for training large-scale machine learning models, distributed learning has become a hot research topic in recent years. Existing distributed learning methods can be categorized into two main types: synchronous distributed learning (SDL) methods [19, 35, 29, 38, 44, 39] and asynchronous distributed learning (ADL) methods [2, 27, 8, 47, 17, 43]. In SDL methods, faster workers that have completed the computation must wait idly forthe other slower workers in each communication round. Hence, the speed of SDL methods is often hindered by slow workers. In contrast, faster workers do not necessarily wait idly for the other slower workers in ADL methods, because ADL methods require aggregating information from only one worker or a subset of workers in each communication round. Representative ADL methods include asynchronous SGD (ASGD) and its variants [2; 8; 46; 30; 49; 48; 7; 3; 31; 22; 13]. In ASGD, once a worker finishes its gradient computation, the parameter (typically on the server) is immediately updated using this gradient through an SGD step, without waiting for other workers.

Momentum has been acknowledged for its benefits in both optimization and generalization in deep model training [33]. In SDL methods, momentum is extensively utilized across various domains, including decentralized algorithms [18; 45], communication compression algorithms [19; 29; 38; 40; 34; 41], infrequent communication algorithms [44; 39; 40], and federated learning algorithms [21; 32]. However, in ADL methods, some works [23; 9] have found that naively incorporating momentum into ASGD may decrease the convergence rate or even result in divergence. To tackle this challenge, some more sophisticated methods have been proposed to incorporate momentum into ASGD. The works in [23; 9] recommend tuning the momentum coefficient to enhance convergence performance when naively incorporating momentum into ASGD. The work in [9] proposes shifted momentum, which maintains local momentum on each worker. Inspired by Nesterov's accelerated gradient, the work in [4] proposes SMEGA\({}^{2}\), which leverages the momentum to estimate the future parameter. However, the process of tuning the momentum coefficient in [23; 9] is time-consuming and yields limited improvement in practice. Although shifted momentum and SMEGA\({}^{2}\) can achieve better empirical convergence performance than the method which naively incorporates momentum into ASGD, both of them lack theoretical convergence analysis.

In this paper, we propose a novel method, called ordered momentum (OrMo), for asynchronous SGD. The main contributions of this paper are outlined as follows:

* OrMo incorporates momentum into ASGD by organizing the gradients in order based on their iteration indexes.
* We theoretically prove the convergence of OrMo with both constant and delay-adaptive learning rates for non-convex problems. To the best of our knowledge, this is the first work to establish the convergence analysis for ASGD with momentum without dependence on the maximum delay.
* Empirical results demonstrate that OrMo can achieve better convergence performance compared with ASGD and other asynchronous methods with momentum.

## 2 Preliminary

In this paper, we use \(\|\cdot\|\) to denote the \(L_{2}\) norm. For a positive integer \(n\), we use \([n]\) to denote the set \(\{0,1,2,\ldots,n-1\}\). \(\nabla f(\mathbf{w};\xi)\) denotes the stochastic gradient computed over the training instance \(\xi\) and model parameter \(\mathbf{w}\). In this paper, we focus on the widely used Parameter Server framework [15], where the server is responsible for storing and updating the model parameter and the workers are responsible for sampling training instances and computing stochastic gradients. For simplicity, we assume that each worker samples one training instance for gradient computation each time. The analysis of mini-batch sampling on each worker follows a similar approach.

One of the most representative methods for distributing SGD across multiple workers is Synchronous SGD (SSGD) [20; 10]. Distributed SGD (DSGD), as presented in Algorithm 1, unifies SSGD and ASGD within a single framework [13]. The waiting set \(\mathcal{C}\) in Algorithm 1 is a collection of workers (indexes) that are awaiting the server to send the latest parameter. The only difference between SSGD and ASGD is the communication scheduler associated with the waiting set. SSGD corresponds to DSGD with a synchronous communication scheduler, while ASGD corresponds to DSGD with an asynchronous communication scheduler. We use \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) to denote the stochastic gradient \(\nabla f(\mathbf{w}_{ite(k_{t},t)};\xi^{k_{t}})\), where \(k_{t}\) is the index of the worker whose gradient participates in the parameter update at iteration \(t\) and \(\xi^{k_{t}}\) denotes a training instance sampled on worker \(k_{t}\). The function \(ite(k,t)\) denotes the iteration index of the latest parameter sent to worker \(k\) before iteration \(t\), where \(k\in[K]\) and \(t\in[T]\). The delay of the gradient \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) is defined as \(\tau_{t}=t-ite(k_{t},t)\). When \(K=1\), DSGD degenerates to vanilla SGD, i.e., \(ite(k_{t},t)\equiv t\).

In ASGD, the latest parameter \(\mathbf{w}_{t+1}\) will be immediately sent back to the worker after the server updates the parameter at each iteration. The function \(ite(k,t)\) in ASGD can be formulated as follows:

\[ite(k,t)=\begin{cases}0&t=0,\,k\in[K],\\ t&t>0,\,k=k_{t-1},\\ ite(k,t-1)&t>0,\,k\neq k_{t-1},\end{cases}\]

where \(k\in[K],t\in[T]\).

In SSGD, there is a barrier in the synchronous communication scheduler since the latest parameter \(\mathbf{w}_{t+1}\) will be sent back to the workers only when all the workers are in the waiting set. The function \(ite(k,t)\) in SSGD can be formulated as \(ite(k,t)=\lfloor\frac{t}{K}\rfloor K\), where \(k\in[K],t\in[T]\) and \(\lfloor\cdot\rfloor\) is the floor function.

**Remark 1**.: _In existing works [10, 22], SSGD is often presented in the form of mini-batch SGD:_

\[\tilde{\mathbf{w}}_{s+1}=\tilde{\mathbf{w}}_{s}-\frac{\tilde{\eta}}{K}\sum_{ k\in[K]}\nabla f(\tilde{\mathbf{w}}_{s};\xi^{k}),\] (2)

_where \(s\in[S]\) and \(S\) denotes the number of iterations. Here, all workers aggregate their stochastic gradients to obtain the mini-batch gradient \(\frac{1}{K}\sum_{k\in[K]}\nabla f(\tilde{\mathbf{w}}_{s};\xi^{k})\), which is then used to update the parameter. To unify SSGD and ASGD into a single framework in Algorithm 1, we reformulate SSGD in the form of mini-batch SGD in (2). Specifically, one update using a mini-batch gradient computed over \(K\) training instances in (2) is split into \(K\) updates, each using a stochastic gradient over a single training instance. Letting \(\eta=\frac{\tilde{\eta}}{K},T=KS\) and \(\mathbf{w}_{0}=\tilde{\mathbf{w}}_{0}\), the sequence \(\{\mathbf{w}_{sK}\}_{s\in[S]}\) in SSGD in Algorithm 1 matches \(\{\tilde{\mathbf{w}}_{s}\}_{s\in[S]}\) in (2)._

```
1:Server:
2:Input: number of workers \(K\), number of iterations \(T\), learning rate \(\eta\);
3:Initialization: initial parameter \(\mathbf{w}_{0}\), waiting set \(\mathcal{C}=\emptyset\);
4:Send the initial parameter \(\mathbf{w}_{0}\) to all workers;
5:for\(t=0\)to\(T-1\)do
6: Receive a stochastic gradient \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) from some worker \(k_{t}\);
7: Update the parameter \(\mathbf{w}_{t+1}=\mathbf{w}_{t}-\eta\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\);
8: Add the worker \(k_{t}\) to the waiting set \(\mathcal{C}=\mathcal{C}\cup\{k_{t}\}\);
9: Execute the communication scheduler:  Option I: (Synchronous) only when all the workers are in the waiting set, i.e., \(\mathcal{C}=[K]\), send the parameter \(\mathbf{w}_{t+1}\) to the workers in \(\mathcal{C}\) and set \(\mathcal{C}\) to \(\emptyset\);  Option II: (Asynchronous) once the waiting set is not empty, i.e., \(\mathcal{C}\neq\emptyset\), immediately send the parameter \(\mathbf{w}_{t+1}\) to the worker in \(\mathcal{C}\) and set \(\mathcal{C}\) to \(\emptyset\);
10:endfor
11:Notify all workers to stop;
12:Worker\(k\)\(\cdot\)\((k\in[K])\)
13:repeat
14: Wait until receiving the parameter \(\mathbf{w}\) from the server;
15: Randomly sample \(\xi^{k}\sim\mathcal{D}\) and then compute the stochastic gradient \(\mathbf{g}^{k}=\nabla f(\mathbf{w};\xi^{k})\);
16: Send the stochastic gradient \(\mathbf{g}^{k}\) to the server;
17:until receive server's notification to stop ```

**Algorithm 1** Distributed SGD

## 3 Ordered Momentum

In this section, we first propose a new reformulation of SSGD with momentum, which inspires the design of ordered momentum (OrMo) for ASGD. Then, we present the details of OrMo, including the algorithm and convergence analysis.

### Reformulation of SSGD with Momentum

The widely used SGD with momentum (SGDm) [26] can be expressed as follows:

\[\tilde{\mathbf{w}}_{s+1} =\tilde{\mathbf{w}}_{s}-\beta\tilde{\mathbf{u}}_{s}-\frac{\tilde{ \eta}}{|\mathcal{B}_{s}|}\sum_{\xi\in\mathcal{B}_{s}}\nabla f\left(\tilde{ \mathbf{w}}_{s};\xi\right),\] (3) \[\tilde{\mathbf{u}}_{s+1} =\beta\tilde{\mathbf{u}}_{s}+\frac{\tilde{\eta}}{|\mathcal{B}_{s }|}\sum_{\xi\in\mathcal{B}_{s}}\nabla f\left(\tilde{\mathbf{w}}_{s};\xi\right),\] (4)

where \(\tilde{\mathbf{u}}_{0}=\mathbf{0},\beta\in[0,1),s\in[S]\) and \(S\) denotes the number of iterations. \(\beta\) is the momentum coefficient. \(\tilde{\mathbf{u}}_{s}\) represents the Polyak's momentum. \(\frac{1}{|\mathcal{B}_{s}|}\sum_{\xi\in\mathcal{B}_{s}}\nabla f\left(\tilde{ \mathbf{w}}_{s};\xi\right)\) denotes the stochastic gradient computed over the sampled training instance set \(\mathcal{B}_{s}\), which contains either a single training instance or a mini-batch of training instances sampled from \(\mathcal{D}\). (3) denotes the parameter update step and (4) denotes the momentum update step. When \(\beta=0\), SGDm degenerates to (mini-batch) SGD.

Since SSGD can be presented in the form of mini-batch SGD as depicted in Remark 1, it's straightforward to implement SSGD with momentum (SSGDm) as follows:

\[\tilde{\mathbf{w}}_{s+1} =\tilde{\mathbf{w}}_{s}-\beta\tilde{\mathbf{u}}_{s}-\frac{\tilde {\eta}}{K}\sum_{k\in[K]}\nabla f(\tilde{\mathbf{w}}_{s};\xi^{k}),\] (5) \[\tilde{\mathbf{u}}_{s+1} =\beta\tilde{\mathbf{u}}_{s}+\frac{\tilde{\eta}}{K}\sum_{k\in[K] }\nabla f(\tilde{\mathbf{w}}_{s};\xi^{k}),\]

where \(\tilde{\mathbf{u}}_{0}=\mathbf{0},\beta\in[0,1),s\in[S]\) and \(S\) denotes the number of iterations. Here, the server aggregates the stochastic gradients from all the workers to obtain the mini-batch gradient \(\frac{1}{K}\sum_{k\in[K]}\nabla f(\tilde{\mathbf{w}}_{s};\xi^{k})\), which is then used to update both the parameter and the momentum in (5).

To gain insights from SSGDm on incorporating momentum into ASGD, we reformulate SSGDm in (5) to fit into the framework of Algorithm 1. Similar to the reformulation in Remark 1, the updates using a mini-batch gradient computed over \(K\) training instances in (5) are split into \(K\) updates, each using a stochastic gradient over a single training instance. The corresponding implementation details of SSGDm are presented in Algorithm 3 in Appendix B. In this way, the update rules of SSGDm in (5) can be reformulated as follows:

\[\mathbf{w}_{t+\frac{1}{2}} =\begin{cases}\mathbf{w}_{t}-\beta\mathbf{u}_{t}&K\mid t,\\ \mathbf{w}_{t}&K\nmid t,\\ \mathbf{u}_{t}&K\nmid t,\\ \end{cases}\] (6) \[\mathbf{w}_{t+1} =\mathbf{w}_{t+\frac{1}{2}}-\eta\mathbf{g}_{\lfloor\frac{t}{K} \rfloor K}^{k_{t}},\] \[\mathbf{u}_{t+1} =\mathbf{u}_{t+\frac{1}{2}}+\eta\mathbf{g}_{\lfloor\frac{t}{K} \rfloor K}^{k_{t}},\]

where \(\mathbf{u}_{0}=\mathbf{0},\mathbf{g}_{\lfloor\frac{t}{K}\rfloor K}^{k_{t}}= \nabla f(\mathbf{w}_{\lfloor\frac{t}{K}\rfloor K};\xi^{k_{t}})\) and \(t\in[T]\). We give the following proposition about the relationship between the sequences in (5) and those in (6). The proof details can be found in Appendix C.1.1.

**Proposition 1**.: _Letting \(\eta=\frac{\tilde{\eta}}{K},T=KS\) and \(\mathbf{w}_{0}=\tilde{\mathbf{w}}_{0}\), the sequences \(\{\mathbf{w}_{sK}\}_{s\in[S]}\) and \(\{\mathbf{u}_{sK}\}_{s\in[S]}\) in (6) are equivalent to \(\{\tilde{\mathbf{w}}_{s}\}_{s\in[S]}\) and \(\{\tilde{\mathbf{u}}_{s}\}_{s\in[S]}\) in (5), respectively._

We investigate how the momentum term \(\mathbf{u}_{t+1}\) evolves during the iterations in (6). For \(t\geq K\) and \(t\in[T]\), \(\mathbf{u}_{t+1}\) can be formulated as:

\[\mathbf{u}_{t+1}=\sum_{i=0}^{\lfloor\frac{t}{K}\rfloor-1}\left(\beta^{\lfloor \frac{t}{K}\rfloor-i}\times\sum_{k\in[K]}\eta\mathbf{g}_{iK}^{k}\right)+\beta^ {0}\times\sum_{j=\lfloor\frac{t}{K}\rfloor K}^{t}\eta\mathbf{g}_{\lfloor\frac{ t}{K}\rfloor K}^{k_{j}},\]

where the superscript of the scalar \(\beta\) indicates the exponent. For \(t<K\), \(\mathbf{u}_{t+1}=\beta^{0}\times\sum_{j=0}^{t}\eta\mathbf{g}_{0}^{k_{j}}\). Figure 1 shows \(\mathbf{u}_{10}\) as an example when \(K=4\). We define \(\{\eta\mathbf{g}_{iK}^{0},\eta\mathbf{g}_{iK}^{1},\cdots,\eta\mathbf{g}_{iK}^{K -1}\}\) as the \(i\)-th(scaled) gradient group, which contains \(K\) gradients scaled by the learning rate \(\eta\). The order of the gradient groups is based on the iteration indexes of their corresponding gradients. Though some gradients may be missing because they have not yet arrived at the server, the momentum is a weighted sum of the gradients from the first several gradient groups. Hence, the momentum in SSGDm is referred to as an _ordered momentum_. Specifically, the gradients in the \(i\)-th gradient group are weighted by \(\beta^{\lfloor\frac{t}{K}\rfloor-i}\) in the momentum \(\mathbf{u}_{t+1}\), where \(i\in[\lfloor\frac{t}{K}\rfloor+1]\). We refer to the gradient group whose gradients are weighted by \(\beta^{0}\) as the latest gradient group, which contains the latest gradients. For \(\mathbf{u}_{t+1}\) in SSGDm, the latest gradient group corresponds to the \(\lfloor\frac{t}{K}\rfloor\)-th gradient group.

Due to the barrier in the synchronous communication scheduler in SSGDm as presented in Algorithm 3, the gradients in SSGDm consistently arrive at the server in the order of their iteration indexes. The arriving gradient always belongs to the latest gradient group at each iteration. Thus, maintaining such an ordered momentum in SSGDm is straightforward. As shown in line \(13\) of Algorithm 3, the scaled gradient \(\eta\mathsf{g}^{k_{t}}_{ite(k_{i},t)}\) is always added to the momentum with a weight of \(\beta^{0}\) at each iteration. However, for ASGD, since the gradients arrive at the server out of order, it's not trivial to incorporate such an ordered momentum. To address this problem, we propose a solution in the following subsection.

### OrMo for ASGD

In this subsection, we introduce our novel method called ordered momentum (OrMo) for ASGD, and present it in Algorithm 2.

Firstly, we define the (scaled) gradient groups in OrMo for ASGD. Due to the differences in the communication scheduler, the iteration indexes of the parameters used to compute the gradients in ASGD differ from those in SSGD (SSGDm). Specifically, the sequence of gradients computed in SSGD (SSGDm) can be formulated as:

\[\mathbf{g}^{0}_{0},\mathbf{g}^{1}_{0},\cdots,\mathbf{g}^{K-1}_{0},\mathbf{g}^{ K-1}_{K},\mathbf{g}^{0}_{K},\mathbf{g}^{1}_{K},\cdots,\mathbf{g}^{K-1}_{K}, \mathbf{g}^{0}_{2K},\mathbf{g}^{1}_{2K},\cdots,\mathbf{g}^{K-1}_{2K},\cdots.\] (7)

In contrast, the sequence of gradients computed in ASGD is given by:

\[\mathbf{g}^{0}_{0},\mathbf{g}^{1}_{0},\cdots,\mathbf{g}^{K-1}_{0},\mathbf{g}^ {k_{0}}_{1},\mathbf{g}^{k_{1}}_{2},\cdots,\mathbf{g}^{k_{K-1}}_{K},\mathbf{g}^ {k_{K+1}}_{K+1},\mathbf{g}^{k_{K+2}}_{K+2},\cdots,\mathbf{g}^{k_{2K-1}}_{2K},\cdots.\] (8)

Thus, the \(i\)-th (scaled) gradient group in OrMo for ASGD is defined as:

\[\left\{\eta\mathsf{g}^{k_{(i-1)K}}_{(i-1)K+1},\eta\mathsf{g}^{k_{(i-1)K+1}}_{ (i-1)K+2},\cdots,\eta\mathsf{g}^{k_{iK-1}}_{iK}\right\},\]

where \(i\geq 1\). The \(0\)-th (scaled) gradient group in OrMo is \(\{\eta\mathsf{g}^{0}_{0},\eta\mathsf{g}^{0}_{0},\cdots,\eta\mathsf{g}^{K-1}_{ 0}\}\). Despite the difference in the gradients' iteration indexes, each gradient group in OrMo for ASGD also contains \(K\) gradients scaled by the learning rate \(\eta\), similar to that in SSGDm as discussed in Subsection 3.1.

We use \(I_{t+1}\) to denote the index of the latest gradient group of \(\mathbf{u}_{t+1}\) in OrMo. The iteration index of the latest gradient in \(\mathbf{u}_{t+1}\) can be \(t\) at most. Since the gradient with iteration index \(t\) belongs to the \(\lceil\frac{t}{K}\rceil\)-th gradient group, the latest gradient group for \(\mathbf{u}_{t+1}\) should be the \(\lceil\frac{t}{K}\rceil\)-th gradient group, i.e., \(I_{t+1}\equiv\lceil\frac{t}{K}\rceil,\forall t\in[T]\). \(\mathbf{u}_{t+1}\) is the weighted sum of the gradients from the first \(I_{t+1}+1\) gradient groups, where some gradients may be missing because they have not yet arrived at the server. The gradients in the \(i\)-th gradient group are weighted by \(\beta^{\lceil\frac{t}{K}\rceil-i}\) in the momentum \(\mathbf{u}_{t+1}\), where \(i\in[I_{t+1}+1]\) and the superscript of the scalar \(\beta\) indicates the exponent. Figure 2 shows an example of \(\mathbf{u}_{10}\) in OrMo when \(K=4\).

For the \(t\)-th iteration in OrMo, the server performs the following operations:```
1:Server:
2:Input: number of workers \(K\), number of iterations \(T\), learning rate \(\eta\), momentum coefficient \(\beta\in[0,1)\);
3:Initialization: initial parameter \(\mathbf{w}_{0}\), momentum \(\mathbf{u}_{0}=\mathbf{0}\), index of the latest gradient group \(I_{0}=0\), waiting set \(\mathcal{C}=\emptyset\);
4:Send the initial parameter \(\mathbf{w}_{0}\) and its iteration index \(0\) to all workers;
5:for\(t=0\)to\(T-1\)do
6:if the waiting set \(\mathcal{C}\) is empty and \(\lceil\frac{t}{K}\rceil>I_{t}\)then
7:\(\mathbf{w}_{t+\frac{1}{2}}=\mathbf{w}_{t}-\beta\mathbf{u}_{t}\), \(\mathbf{u}_{t+\frac{1}{2}}=\beta\mathbf{u}_{t}\), \(I_{t+1}=I_{t}+1\);
8:else
9:\(\mathbf{w}_{t+\frac{1}{2}}=\mathbf{w}_{t}\), \(\mathbf{u}_{t+\frac{1}{2}}=\mathbf{u}_{t}\), \(I_{t+1}=I_{t}\);
10:endif
11: Receive a stochastic gradient \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) and its iteration index \(ite(k_{t},t)\) from some worker \(k_{t}\) and then calculate \(\lceil\frac{ite(k_{t},t)}{K}\rceil\) (i.e., the index of the gradient group that \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) belongs to);
12: Update the momentum \(\mathbf{u}_{t+1}=\mathbf{u}_{t+\frac{1}{2}}+\beta^{I_{t+1}-\lceil\frac{ite(k_{ t},t)}{K}\rceil}\times\left(\eta\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\right)\);
13: Update the parameter \(\mathbf{w}_{t+1}=\mathbf{w}_{t+\frac{1}{2}}-\frac{1-\beta^{I_{t+1}-\lceil \frac{ite(k_{t},t)}{K}\rceil+1}}{1-\beta}\times\left(\eta\mathbf{g}_{ite(k_{t}, t)}^{k_{t}}\right)\);
14: Add the worker \(k_{t}\) to the waiting set \(\mathcal{C}=\mathcal{C}\cup\{k_{t}\}\);
15: Execute the asynchronous communication scheduler: once the waiting set is not empty, i.e., \(\mathcal{C}\neq\emptyset\), immediately send the parameter \(\mathbf{w}_{t+1}\) and its iteration index \(t+1\) to the worker in \(\mathcal{C}\) and set \(\mathcal{C}\) to \(\emptyset\);
16:endfor
17:Notify all workers to stop;
18:Worker \(k:(k\in[K])\)
19:repeat
20: Wait until receiving the parameter \(\mathbf{w}_{t^{\prime}}\) and its iteration index \(t^{\prime}\) from the server;
21: Randomly sample \(\xi^{k}\sim\mathcal{D}\) and then compute the stochastic gradient \(\mathbf{g}_{\xi^{\prime}}^{k}=\nabla f(\mathbf{w}_{t^{\prime}};\xi^{k})\);
22: Send the stochastic gradient \(\mathbf{g}_{\xi^{\prime}}^{k}\) and its iteration index \(t^{\prime}\) to the server;
23:until receive server's notification to stop ```

**Algorithm 2** OrMo

* If the parameter with iteration index \(t\) that satisfies \(\lceil\frac{t}{K}\rceil>I_{t}\) has been sent to some worker, update the parameter using the momentum and multiply the momentum with \(\beta\): \(\mathbf{w}_{t+\frac{1}{2}}=\mathbf{w}_{t}-\beta\mathbf{u}_{t},\mathbf{u}_{t+ \frac{1}{2}}=\beta\mathbf{u}_{t},I_{t+1}=I_{t}+1\). In this way, the momentum changes the index of its latest gradient group to \(\lceil\frac{t}{K}\rceil\) and gets ready to accommodate the new gradient with iteration index \(t\).
* Receive a stochastic gradient \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) and its iteration index \(ite(k_{t},t)\) from some worker \(k_{t}\) and calculate \(\lceil\frac{ite(k_{t},t)}{K}\rceil\), which is the index of the gradient group that \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) belongs to.
* Update the momentum: \(\mathbf{u}_{t+1}=\mathbf{u}_{t+\frac{1}{2}}+\beta^{I_{t+1}-\lceil\frac{ite(k_ {t},t)}{K}\rceil}\times\left(\eta\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\right)\). Since the weight of the scaled gradients from the latest gradient group in the momentum is \(\beta^{0}\), the weight of the gradients from the \(\lceil\frac{ite(k_{t},t)}{K}\rceil\)-th gradient group should be \(\beta^{I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil}\).

OrMo updates the momentum by adding the scaled gradient \(\eta\mathcal{B}^{k_{t}}_{ite(k_{t},t)}\) into the momentum with a weight of \(\beta^{I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil}\).
* Update the parameter: \(\mathbf{w}_{t+1}=\mathbf{w}_{t+\frac{1}{2}}-\frac{1-\beta^{I_{t+1}-\lceil\frac {ite(k_{t},t)}{K}\rceil_{+1}}}{1-\beta}\times\Big{(}\eta\mathcal{B}^{k_{t}}_{ite (k_{t},t)}\Big{)}\). The update rule of the parameter in OrMo is motivated by that in SSGDm, as presented in Algorithm 3. In SSGDm, the scaled gradient \(\eta\mathcal{B}^{k_{t}}_{ite(k_{t},t)}\) is always added to the momentum with a weight of \(\beta^{0}\). At the current iteration, this scaled gradient updates the parameter with a coefficient \(-\beta^{0}\). In subsequent iterations, this scaled gradient in the momentum updates the parameter with the coefficients \(-\beta,-\beta^{2},-\beta^{3},\cdots\). By the time this scaled gradient is weighted by \(\beta^{I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil}\) in the momentum of SSGDm, it has already updated the parameter for \(I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil+1\) steps, with a total coefficient \(-\sum_{j=0}^{I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil}\beta^{j}\). In OrMo, for the scaled gradient \(\eta\mathcal{B}^{k_{t}}_{ite(k_{t},t)}\) which is added to the momentum with a weight of \(\beta^{I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil}\), we compensate for the missed \(I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil+1\) steps compared with SSGDm and update the parameter with the coefficient \(-\frac{1-\beta^{I_{t+1}-\lceil\frac{ite(k_{t},t)}{K}\rceil+1}}{1-\beta}+\) at the current iteration. The design of the parameter update rule is crucial for the derivation of Lemma 2, which is further supported by the ablation study in Appendix A.3.
* Add the worker \(k_{t}\) to the waiting set \(\mathcal{C}=\mathcal{C}\cup\{k_{t}\}\) and execute the asynchronous communication scheduler.

**Remark 2**.: _Compared to ASGD, the additional communication overhead introduced by the iteration index in OrMo is negligible since the iteration index is only a scalar._

**Remark 3**.: _When the momentum coefficient \(\beta\) is set to \(0\), OrMo degenerates to ASGD in Algorithm 1. If the asynchronous communication scheduler in line 15 of Algorithm 2 is replaced by a synchronous communication scheduler: only when all the workers are in the waiting set, i.e., \(\mathcal{C}=[K]\), send the parameter \(\mathbf{w}_{t+1}\) and the iteration index \(t+1\) to the workers in \(\mathcal{C}\) and set \(\mathcal{C}\) to \(\emptyset\), OrMo degenerates to SSGDm in Algorithm 3._

### Convergence Analysis

In this section, we prove the convergence of OrMo in Algorithm 2 for non-convex problems. We only present the main results here. The proof details can be found in Appendix C.

We make the following assumptions, which are widely used in distributed learning [47; 43; 41; 22].

**Assumption 1**.: _For any stochastic gradient \(\nabla f(\mathbf{w};\xi)\), we assume that it satisfies:_

\[\mathbb{E}_{\xi\sim\mathcal{D}}\left[\nabla f(\mathbf{w};\xi)\right]=\nabla F (\mathbf{w}),\mathbb{E}_{\xi\sim\mathcal{D}}\|\nabla f(\mathbf{w};\xi)-\nabla F (\mathbf{w})\|^{2}\leq\sigma^{2},\forall\mathbf{w}\in\mathbb{R}^{d}.\]

**Assumption 2**.: _For any stochastic gradient \(\nabla f(\mathbf{w};\xi)\), we assume that it satisfies:_

\[\mathbb{E}_{\xi\sim\mathcal{D}}\|\nabla f(\mathbf{w};\xi)\|^{2}\leq G^{2}, \forall\mathbf{w}\in\mathbb{R}^{d}.\]

**Assumption 3**.: \(F(\mathbf{w})\) _is \(L\)-smooth (\(L>0\)):_

\[F(\mathbf{w})\leq F(\mathbf{w}^{\prime})+\nabla F(\mathbf{w}^{\prime})^{T}( \mathbf{w}-\mathbf{w}^{\prime})+\frac{L}{2}\|\mathbf{w}-\mathbf{w}^{\prime}\| ^{2},\forall\mathbf{w},\mathbf{w}^{\prime}\in\mathbb{R}^{d}.\]

**Assumption 4**.: _The objective function \(F(\mathbf{w})\) is lower bounded by \(F^{*}\): \(F(\mathbf{w})\geq F^{*},\forall\mathbf{w}\in\mathbb{R}^{d}\)._

Firstly, we define the auxiliary sequence \(\{\hat{\mathbf{u}}_{t}\}_{t\geq 1}\) for the momentum: \(\hat{\mathbf{u}}_{1}=\sum_{k\in[K]}\eta\mathcal{B}^{k}_{0}\), and

\[\hat{\mathbf{u}}_{t+1}=\begin{cases}\beta\hat{\mathbf{u}}_{t}+\eta\mathcal{B}^ {k_{t-1}}_{t}&K\mid(t-1),\\ \hat{\mathbf{u}}_{t}+\eta\mathcal{B}^{k_{t-1}}_{t}&K\nmid(t-1),\end{cases}\]

for \(t\geq 1\).

**Lemma 1**.: _For any \(t\geq 0\), the gap between \(\mathbf{u}_{t+1}\) and \(\hat{\mathbf{u}}_{t+1}\) can be formulated as follows:_

\[\hat{\mathbf{u}}_{t+1}-\mathbf{u}_{t+1}=\sum_{k\in[K],k\neq k_{t}}\beta^{ \lceil\frac{ite(k,t)}{K}\rceil-\lceil\frac{ite(k,t)}{K}\rceil}\eta\mathcal{B}^ {k}_{ite(k,t)}.\] (9)Then, we define the auxiliary sequence \(\{\hat{\mathbf{w}}_{t}\}_{t\geq 1}\) for the parameter: \(\hat{\mathbf{w}}_{1}=\mathbf{w}_{0}-\sum_{k\in[K]}\eta\mathbf{g}_{0}^{k}\), and

\[\hat{\mathbf{w}}_{t+1}=\begin{cases}\hat{\mathbf{w}}_{t}-\beta\hat{\mathbf{u}}_ {t}-\eta\mathbf{g}_{t}^{k_{t-1}}&K\mid(t-1),\\ \hat{\mathbf{w}}_{t}-\eta\mathbf{g}_{t}^{k_{t-1}}&K\nmid(t-1),\end{cases}\]

for \(t\geq 1\).

**Lemma 2**.: _For any \(t\geq 0\), the gap between \(\mathbf{w}_{t+1}\) and \(\hat{\mathbf{w}}_{t+1}\) can be formulated as follows:_

\[\hat{\mathbf{w}}_{t+1}-\mathbf{w}_{t+1}=-\sum_{k\in[K],k\neq k_{t}}\frac{1- \beta^{\lceil\frac{k}{K}\rceil-\lceil\frac{itc(k,t)}{K}\rceil+1}}{1-\beta} \eta\mathbf{g}_{ite(k,t)}^{k}.\] (10)

Then, we define another auxiliary sequence \(\{\hat{\mathbf{y}}_{t}\}_{t\geq 1}\): \(\hat{\mathbf{y}}_{1}=\frac{\hat{\mathbf{w}}_{1}-\beta\mathbf{w}_{0}}{1-\beta}\), and \(\hat{\mathbf{y}}_{t+1}=\hat{\mathbf{y}}_{t}-\frac{\eta}{1-\beta}\mathbf{g}_{t }^{k_{t-1}},\) for \(t\geq 1\).

**Lemma 3**.: _For any \(t\geq 1\), the gap between \(\hat{\mathbf{y}}_{t}\) and \(\hat{\mathbf{w}}_{t}\) can be formulated as follows:_

\[\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}=-\frac{\beta}{1-\beta}\hat{\mathbf{ u}}_{t}.\] (11)

**Theorem 1**.: _With Assumptions 1, 2, 3 and 4, letting \(\eta=\min\{\frac{1-\beta}{2KL},\frac{(1-\beta)\Delta^{\frac{1}{2}}}{(LT)^{\frac {1}{2}}\sigma},\frac{(1-\beta)^{\frac{5}{3}}\Delta^{\frac{1}{3}}}{(LKG)^{\frac {5}{3}}T^{\frac{1}{3}}}\}\), Algorithm 2 has the following convergence rate:_

\[\frac{1}{T}\sum_{t=1}^{T}\mathbb{E}\|\nabla F(\mathbf{w}_{t})\|^{2}\leq\mathcal{ O}\left(\sqrt{\frac{L\sigma^{2}}{T}}+\left(\frac{KLG}{T}\right)^{\frac{2}{3}}+ \frac{KL}{T}\right),\]

_where \(\Delta=F(\mathbf{w}_{0})-F^{*}\) and \(T\geq K\)._

Many works [46, 30, 7, 13, 22] consider delay-adaptive methods for ASGD. The key insight of these methods is to penalize the gradients with large delays and reduce their contribution to the parameter update. OrMo is orthogonal to these delay-adaptive methods. Concretely, we can replace the constant learning rate \(\eta\) in Algorithm 2 with a delay-adaptive learning rate \(\eta_{t}\), which is dependent on the delay of the gradient \(\tau_{t}\). Inspired by [13], we adopt the following delay-adaptive learning rate \(\eta_{t}\):

\[\eta_{t}=\begin{cases}\eta&\tau_{t}\leq 2K,\\ \min\{\eta,\frac{1}{4L\tau_{t}}\}&\tau_{t}>2K.\end{cases}\]

The convergence of OrMo with the above delay-adaptive learning rate (called OrMo-DA) is guaranteed by Theorem 2.

**Theorem 2**.: _With Assumptions 1, 3 and 4, letting \(\eta=\min\{\frac{(1-\beta)^{2}}{8KL},\sqrt{\frac{(1-\beta)^{3}\Delta}{TL \sigma^{2}}}\}\), OrMo-DA has the following convergence rate:_

\[\mathbb{E}\left\|\nabla F(\bar{\mathbf{w}}_{T})\right\|^{2}\leq\mathcal{O} \left(\sqrt{\frac{L\sigma^{2}}{T}}+\frac{KL}{T}\right),\]

_where \(\Delta=F(\mathbf{w}_{0})-F^{*}\) and \(\bar{\mathbf{w}}_{T}\) is randomly chosen from \(\{\mathbf{w}_{0},\mathbf{w}_{1},\cdots,\mathbf{w}_{T-1}\}\) according to a probability distribution which is related to the delay-adaptive learning rates._

The proof details can be found in Appendix C.3. Compared with Theorem 1, Theorem 2 removes the dependence on Assumption 2 (bounded gradient) and provides a better convergence bound.

**Remark 4**.: _We focus on the scenario where the training instances across all workers are independent and identically distributed (i.i.d.) from \(\mathcal{D}\). This scenario commonly appears in the data-center setup for distributed training [5], where all workers have access to the full training dataset. Our analysis for the i.i.d. scenario can also provide insights into the analysis in a non-i.i.d. scenario [22], which will be studied in future work._

**Remark 5**.: _Most existing theoretical analyses of ASGD [16, 49, 3, 20] rely on the maximum delay \(\tau_{max}\) (e.g., \(\mathcal{O}(\sqrt{\frac{L\sigma^{2}}{T}}+\frac{\tau_{max}\cdot L}{T})\) in [20]), where \(\tau_{max}=\max_{t\in[T]}\tau_{t}\). However, since ASGD can still perform well even when the maximum delay is extremely large (\(\tau_{max}\gg K\)) in practice, these theoretical analyses don't accurately reflect the true behavior of ASGD. The most closely related works to this work are [13, 22], which analyze ASGD without relying on the maximum delay. But the works in [13, 22] do not consider momentum. To the best of our knowledge, this is the first work to establish the convergence guarantee of ASGD with momentum without relying on the maximum delay._

[MISSING_PAGE_FAIL:9]

capability, OrMo can still be more than twice as fast as SSGDm, as shown in Figure 5(a). This advantage arises because the computation time of each worker varies within a certain range even under the homogeneous setting and some workers must wait for others to finish gradient computations in SSGDm.

## 5 Conclusion

In this paper, we propose a novel method named ordered momentum (OrMo) for asynchronous SGD. We theoretically prove the convergence of OrMo with both constant and delay-adaptive learning rates for non-convex problems. To the best of our knowledge, this is the first work to establish the convergence analysis of ASGD with momentum without dependence on the maximum delay. Empirical results demonstrate that OrMo can achieve state-of-the-art performance.

## Acknowledgment

This work is supported by National Key R&D Program of China (No. 2020YFA0713900), NSFC Project (No. 12326615), Major Key Project of Pengcheng Laboratory (No. PCL2024A06) and Key R&D Project of Jiangsu Province (No. BE2023652).

Figure 4: Test accuracy curves on CIFAR100 with different numbers of workers.

Figure 5: Training curves with respect to wall-clock time on CIFAR10 when \(K=16\).

Figure 3: Test accuracy curves on CIFAR10 with different numbers of workers.

## References

* Abadi et al. [2016] Martin Abadi, Paul Barham, Jianmin Chen, Zhifeng Chen, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Geoffrey Irving, Michael Isard, Manjunath Kudlur, Josh Levenberg, Rajat Monga, Sherry Moore, Derek Gordon Murray, Benoit Steiner, Paul A. Tucker, Vijay Vasudevan, Pete Warden, Martin Wicke, Yuan Yu, and Xiaoqiang Zheng. Tensorflow: A system for large-scale machine learning. In _Proceedings of the USENIX Symposium on Operating Systems Design and Implementation_, pages 265-283, 2016.
* Agarwal and Duchi [2011] Alekh Agarwal and John C. Duchi. Distributed delayed stochastic optimization. In _Advances in Neural Information Processing Systems_, pages 873-881, 2011.
* Arjevani et al. [2020] Yossi Arjevani, Ohad Shamir, and Nathan Srebro. A tight convergence analysis for stochastic gradient descent with delayed updates. In _Proceedings of the International Conference on Algorithmic Learning Theory_, pages 111-132, 2020.
* Cohen et al. [2022] Refael Cohen, Ido Hakimi, and Assaf Schuster. SMEGA2: distributed asynchronous deep neural network training with a single momentum buffer. In _Proceedings of the International Conference on Parallel Processing_, pages 1-10, 2022.
* Dean et al. [2012] Jeffrey Dean, Greg Corrado, Rajat Monga, Kai Chen, Matthieu Devin, Quoc V. Le, Mark Z. Mao, Marc'Aurelio Ranzato, Andrew W. Senior, Paul A. Tucker, Ke Yang, and Andrew Y. Ng. Large scale distributed deep networks. In _Advances in Neural Information Processing Systems_, pages 1232-1240, 2012.
* Defazio et al. [2014] Aaron Defazio, Francis R. Bach, and Simon Lacoste-Julien. SAGA: A fast incremental gradient method with support for non-strongly convex composite objectives. In _Advances in Neural Information Processing Systems_, pages 1646-1654, 2014.
* Dutta et al. [2018] Sanghamitra Dutta, Gauri Joshi, Soumyadip Ghosh, Parijat Dube, and Priya Nagpurkar. Slow and stale gradients can win the race: Error-runtime trade-offs in distributed SGD. In _Proceedings of the International Conference on Artificial Intelligence and Statistics_, pages 803-812, 2018.
* Feyzmahdavian et al. [2016] Hamid Reza Feyzmahdavian, Arda Aytekin, and Mikael Johansson. An asynchronous minibatch algorithm for regularized stochastic optimization. _IEEE Transactions on Automatic Control_, 61(12):3740-3754, 2016.
* Giladi et al. [2020] Niv Giladi, Mor Shpigel Nacson, Elad Hoffer, and Daniel Soudry. At stability's edge: How to adjust hyperparameters to preserve minima selection in asynchronous training of neural networks? In _Proceedings of the International Conference on Learning Representations_, 2020.
* Goyal et al. [2017] Priya Goyal, Piotr Dollar, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He. Accurate, large minibatch sgd: Training imagenet in 1 hour. _arXiv preprint arXiv:1706.02677_, 2017.
* He et al. [2016] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In _Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition_, pages 770-778, 2016.
* Johnson and Zhang [2013] Rie Johnson and Tong Zhang. Accelerating stochastic gradient descent using predictive variance reduction. In _Advances in Neural Information Processing Systems_, pages 315-323, 2013.
* Koloskova et al. [2022] Anastasia Koloskova, Sebastian U. Stich, and Martin Jaggi. Sharper convergence guarantees for asynchronous SGD for distributed and federated learning. In _Advances in Neural Information Processing Systems_, pages 17202-17215, 2022.
* Krizhevsky et al. [2009] Alex Krizhevsky, Geoffrey Hinton, et al. Learning multiple layers of features from tiny images. _Technical report_, 2009.
* Li et al. [2014] Mu Li, David G. Andersen, Alexander J. Smola, and Kai Yu. Communication efficient distributed machine learning with the parameter server. In _Advances in Neural Information Processing Systems_, pages 19-27, 2014.

* [16] Xiangru Lian, Yijun Huang, Yuncheng Li, and Ji Liu. Asynchronous parallel stochastic gradient for nonconvex optimization. In _Advances in Neural Information Processing Systems_, pages 2737-2745, 2015.
* [17] Xiangru Lian, Wei Zhang, Ce Zhang, and Ji Liu. Asynchronous decentralized parallel stochastic gradient descent. In _Proceedings of the International Conference on Machine Learning_, pages 3043-3052, 2018.
* [18] Tao Lin, Sai Praneeth Karimireddy, Sebastian U. Stich, and Martin Jaggi. Quasi-global momentum: Accelerating decentralized deep learning on heterogeneous data. In _Proceedings of the International Conference on Machine Learning_, pages 6654-6665, 2021.
* [19] Yujun Lin, Song Han, Huizi Mao, Yu Wang, and Bill Dally. Deep gradient compression: Reducing the communication bandwidth for distributed training. In _Proceedings of the International Conference on Learning Representations_, 2018.
* [20] Ji Liu and Ce Zhang. Distributed learning systems with first-order methods. _Foundations and Trends(r) in Databases_, 9(1):1-100, 2020.
* [21] Wei Liu, Li Chen, Yunfei Chen, and Wenyi Zhang. Accelerating federated learning via momentum gradient descent. _IEEE Transactions on Parallel and Distributed Systems_, 31(8):1754-1766, 2020.
* [22] Konstantin Mishchenko, Francis R. Bach, Mathieu Even, and Blake E. Woodworth. Asynchronous SGD beats minibatch SGD under arbitrary delays. In _Advances in Neural Information Processing Systems_, pages 420-433, 2022.
* [23] Ioannis Mitliagkas, Ce Zhang, Stefan Hadjis, and Christopher Re. Asynchrony begets momentum, with an application to deep learning. In _Proceedings of the Annual Allerton Conference on Communication, Control, and Computing_, pages 997-1004, 2016.
* [24] Yurii Nesterov. _Introductory lectures on convex optimization: A basic course_. Springer Science & Business Media, 2013.
* [25] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, Alban Desmaison, Andreas Kopf, Edward Z. Yang, Zachary DeVito, Martin Raison, Alykhan Tejani, Sasank Chilamkurthy, Benoit Steiner, Lu Fang, Junjie Bai, and Soumith Chintala. Pytorch: An imperative style, high-performance deep learning library. In _Advances in Neural Information Processing Systems_, pages 8024-8035, 2019.
* [26] Boris Polyak. Some methods of speeding up the convergence of iteration methods. _Ussr Computational Mathematics and Mathematical Physics_, 4:1-17, 12 1964.
* [27] Benjamin Recht, Christopher Re, Stephen J. Wright, and Feng Niu. Hogwild: A lock-free approach to parallelizing stochastic gradient descent. In _Advances in Neural Information Processing Systems_, pages 693-701, 2011.
* [28] Herbert Robbins and Sutton Monro. A stochastic approximation method. _Annals of Mathematical Statistics_, 22:400-407, 1951.
* [29] Chang-Wei Shi, Shen-Yi Zhao, Yin-Peng Xie, Hao Gao, and Wu-Jun Li. Global momentum compression for sparse communication in distributed learning. _arXiv preprint arXiv:1905.12948_, 2019.
* [30] Suvrit Sra, Adams Wei Yu, Mu Li, and Alex Smola. Adadelay: Delay adaptive distributed stochastic optimization. In _Proceedings of the International Conference on Artificial Intelligence and Statistics_, pages 957-965, 2016.
* [31] Sebastian U. Stich, Amirkeivan Mohtashami, and Martin Jaggi. Critical parameters for scalable distributed learning with large batches and asynchronous updates. In _Proceedings of the International Conference on Artificial Intelligence and Statistics_, pages 4042-4050, 2021.

* [32] Jianhui Sun, Xidong Wu, Heng Huang, and Aidong Zhang. On the role of server momentum in federated learning. In _Proceedings of the AAAI Conference on Artificial Intelligence_, pages 15164-15172, 2024.
* [33] Ilya Sutskever, James Martens, George E. Dahl, and Geoffrey E. Hinton. On the importance of initialization and momentum in deep learning. In _Proceedings of the International Conference on Machine Learning_, pages 1139-1147, 2013.
* [34] Hanlin Tang, Shaoduo Gan, Ammar Ahmad Awan, Samyam Rajbhandari, Conglong Li, Xiangru Lian, Ji Liu, Ce Zhang, and Yuxiong He. 1-bit adam: Communication efficient large-scale training with adam's convergence speed. In _Proceedings of the International Conference on Machine Learning_, pages 10118-10129, 2021.
* [35] Hanlin Tang, Shaoduo Gan, Ce Zhang, Tong Zhang, and Ji Liu. Communication compression for decentralized training. In _Advances in Neural Information Processing Systems_, pages 7663-7673, 2018.
* [36] Paul Tseng. An incremental gradient(-projection) method with momentum term and adaptive stepsize rule. _SIAM Journal on Optimization_, 8(2):506-531, 1998.
* [37] Joost Verbraeken, Matthijs Wolting, Jonathan Katzy, Jeroen Kloppenburg, Tim Verbelen, and Jan S Rellermeyer. A survey on distributed machine learning. _ACM Computing Surveys_, 53(2):1-33, 2020.
* [38] Thijs Vogels, Sai Praneeth Karimireddy, and Martin Jaggi. Powersgd: Practical low-rank gradient compression for distributed optimization. In _Advances in Neural Information Processing Systems_, pages 14236-14245, 2019.
* [39] Jianyu Wang, Vinayak Tantia, Nicolas Ballas, and Michael G. Rabbat. Slowmo: Improving communication-efficient distributed SGD with slow momentum. In _Proceedings of the International Conference on Learning Representations_, 2020.
* [40] Cong Xie, Shuai Zheng, Oluwasanmi Koyejo, Indranil Gupta, Mu Li, and Haibin Lin. CSER: Communication-efficient SGD with error reset. In _Advances in Neural Information Processing Systems_, pages 12593-12603, 2020.
* [41] An Xu and Heng Huang. Detached error feedback for distributed SGD with random sparsification. In _Proceedings of the International Conference on Machine Learning_, pages 24550-24575, 2022.
* [42] Tao Yang, Xinlei Yi, Junfeng Wu, Ye Yuan, Di Wu, Ziyang Meng, Yiguang Hong, Hong Wang, Zongli Lin, and Karl H Johansson. A survey of distributed optimization. _Annual Reviews in Control_, 47:278-305, 2019.
* [43] Yi-Rui Yang and Wu-Jun Li. BASGD: buffered asynchronous SGD for byzantine learning. In _Proceedings of the International Conference on Machine Learning_, pages 11751-11761, 2021.
* [44] Hao Yu, Rong Jin, and Sen Yang. On the linear speedup analysis of communication efficient momentum SGD for distributed non-convex optimization. In _Proceedings of the International Conference on Machine Learning_, pages 7184-7193, 2019.
* [45] Kun Yuan, Yiming Chen, Xinmeng Huang, Yingya Zhang, Pan Pan, Yinghui Xu, and Wotao Yin. Decentralam: Decentralized momentum sgd for large-batch deep training. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 3029-3039, 2021.
* [46] Wei Zhang, Suyog Gupta, Xiangru Lian, and Ji Liu. Staleness-aware async-sgd for distributed deep learning. In _Proceedings of the International Joint Conference on Artificial Intelligence_, pages 2350-2356, 2016.
* [47] Shen-Yi Zhao and Wu-Jun Li. Fast asynchronous parallel stochastic gradient descent: A lock-free approach with convergence guarantee. In _Proceedings of the AAAI Conference on Artificial Intelligence_, pages 2379-2385, 2016.

* [48] Shen-Yi Zhao, Gong-Duo Zhang, and Wu-Jun Li. Lock-free optimization for non-convex problems. In _Proceedings of the AAAI Conference on Artificial Intelligence_, pages 2935-2941, 2017.
* [49] Shuxin Zheng, Qi Meng, Taifeng Wang, Wei Chen, Nenghai Yu, Zhiming Ma, and Tie-Yan Liu. Asynchronous stochastic gradient descent with delay compensation. In _Proceedings of the International Conference on Machine Learning_, pages 4120-4129, 2017.

## Appendix A More Experimental Results

### Loss Curves

Figure 6 and Figure 7 show the training loss curves of ResNet20 model.

### Tuning \(\beta\) for Naive ASGDm

Following the suggestion in [23, 9], we conduct experiments to tune the momentum coefficient \(\beta\) for naive ASGDm and present the results when training ResNet20 on CIFAR10 in Table 3. While tuning the momentum coefficient can enhance the performance of naive ASGDm, hyperparameter tuning is quite time-consuming and costly. In contrast, OrMo achieves better performance using the commonly used momentum value of 0.9, without requiring extensive tuning.

### Ablation Study

An ablation study is also conducted to justify the parameter update rule in line \(13\) of Algorithm 2. We replace the update rule in line \(13\) of Algorithm 2 with a vanilla SGD step, \(\mathbf{w}_{t+1}=\mathbf{w}_{t+\frac{1}{2}}-\eta\mathbf{g}_{ite(k_{t},t)}^{k_ {t}}\), and name it OrMo (vanilla SGD step). The comparison between the experimental results of OrMo and OrMo (vanilla SGD step) are presented in Table 4 and Figure 8.

\begin{table}
\begin{tabular}{c|c c|c c|c c|c c} \hline \hline Number of workers & \multicolumn{2}{c|}{16 (hom.)} & \multicolumn{2}{c|}{64 (hom.)} & \multicolumn{2}{c|}{16 (het.)} & \multicolumn{2}{c}{64 (het.)} \\ \hline Algorithm (\(\beta\)) & Training Loss & Test Accuracy & Training Loss & Test Accuracy & Training Loss & Test Accuracy & Training Loss & Test Accuracy \\ \hline naive ASGDm (0.1) & 0.06 \(\pm\) 0.01 & 89.85 \(\pm\) 0.24 & 0.38 \(\pm\) 0.01 & 83.93 \(\pm\) 0.25 & 0.06 \(\pm\) 0.00 & 89.95 \(\pm\) 0.19 & 0.38 \(\pm\) 0.01 & 83.76 \(\pm\) 0.34 \\ naive ASGDm (0.3) & 0.06 \(\pm\) 0.00 & 89.91 \(\pm\) 0.20 & 0.36 \(\pm\) 0.02 & 84.23 \(\pm\) 0.49 & 0.05 \(\pm\) 0.01 & 90.26 \(\pm\) 0.05 & 0.35 \(\pm\) 0.02 & 84.43 \(\pm\) 0.22 \\ naive ASGDm (0.6) & 0.07 \(\pm\) 0.00 & 90.99 \(\pm\) 0.24 & 0.38 \(\pm\) 0.02 & 83.87 \(\pm\) 0.28 & 0.06 \(\pm\) 0.01 & 90.56 \(\pm\) 0.13 & 0.37 \(\pm\) 0.02 & 84.07 \(\pm\) 0.38 \\ naive ASGDm (0.9) & 0.29 \(\pm\) 0.07 & 88.15 \(\pm\) 1.70 & 0.44 \(\pm\) 0.06 & 82.39 \(\pm\) 1.79 & 0.58 \(\pm\) 0.86 & 73.23 \(\pm\) 31.61 & 0.78 \(\pm\) 0.77 & 68.75 \(\pm\) 29.51 \\ OnMo (0.9) & **0.04 \(\pm\) 0.01** & **90.95 \(\pm\) 0.27** & **0.15 \(\pm\) 0.02** & **88.03 \(\pm\) 0.28** & **0.04 \(\pm\) 0.00** & **91.01 \(\pm\) 0.10** & **0.16 \(\pm\) 0.03** & **87.76 \(\pm\) 0.57** \\ \hline \hline \end{tabular}
\end{table}
Table 3: Empirical results of naive ASGDm with different \(\beta\) when training ResNet20 on CIFAR10 dataset.

Figure 6: Training loss curves of different methods on CIFAR10 dataset with different numbers of workers.

Figure 7: Training loss curves of different methods on CIFAR100 dataset with different numbers of workers.

### Experimental Results on ResNet18 Model

Table 5 and Figure 9 show the performance of different methods when training the ResNet18 model on the CIFAR10 dataset. The number of workers is set to \(8\). In the homogeneous setting, each worker has similar computing capabilities. In the heterogeneous setting, one worker is designated as the slow worker, whose average computation time is 10 times longer than that of the others.

## Appendix B Algorithm Details

Algorithm 3 and Algorithm 4 show the details of SSGDm and naive ASGDm.

\begin{table}
\begin{tabular}{c|c|c|c|c|c|c} \hline \hline Number of Workers & \multicolumn{2}{c|}{16 (hom.)} & \multicolumn{2}{c|}{64 (hom.)} & \multicolumn{2}{c|}{16 (het.)} & \multicolumn{2}{c}{64 (het.)} \\ \hline Methods & Training Loss & Test Accuracy & Training Loss & Test Accuracy & Training Loss & Test Accuracy \\ \hline OMo (vanilla SGD step) & 0.07 \(\pm\) 0.02 & 90.32 \(\pm\) 0.45 & 0.27 \(\pm\) 0.07 & 86.08 \(\pm\) 1.33 & 0.07 \(\pm\) 0.01 & 90.23 \(\pm\) 0.32 & 0.27 \(\pm\) 0.07 & 86.10 \(\pm\) 1.71 \\ OMo & **0.04 \(\pm\) 0.01** & **90.95 \(\pm\) 0.27** & **0.15 \(\pm\) 0.02** & **88.03 \(\pm\) 0.28** & **0.04 \(\pm\) 0.00** & **91.01 \(\pm\) 0.10** & **0.16 \(\pm\) 0.03** & **87.76 \(\pm\) 0.57** \\ \hline \hline \end{tabular}
\end{table}
Table 4: Empirical results of OrMo and OrMo (vanilla SGD step) when training ResNet20 on CIFAR10 dataset.

Figure 8: Test accuracy curves when training ResNet20 model on CIFAR10 dataset with different numbers of worker number.

\begin{table}
\begin{tabular}{c|c|c} \hline \hline  & homogeneous & heterogeneous \\ \hline ASGD & 91.45 & 91.52 \\ naive ASGDm & 93.74 & 93.10 \\ shifted momentum & 94.02 & 94.20 \\ SMEGA\({}^{2}\) & 93.72 & 93.36 \\ OrMo & 94.32 & **94.26** \\ OrMo-DA & **94.50** & 94.03 \\ \hline \hline \end{tabular}
\end{table}
Table 5: Test accuracy of different methods when training ResNet18 on CIFAR10 dataset.

Figure 9: Test accuracy curves when training ResNet18 model on CIFAR10 dataset.

```
1:Server:
2:Input: number of workers \(K\), number of iterations \(T\), learning rate \(\eta\), momentum coefficient \(\beta\in[0,1)\);
3:Initialization: initial parameter \(\mathbf{w}_{0}\), momentum \(\mathbf{u}_{0}=\mathbf{0}\), waiting set \(\mathcal{C}=\emptyset\);
4: Send the initial parameter \(\mathbf{w}_{0}\) to all workers;
5:for\(t=0\)to\(T-1\)do
6:if the waiting set \(\mathcal{C}\) is empty then
7:\(\mathbf{w}_{t+\frac{1}{2}}=\mathbf{w}_{t}-\beta\mathbf{u}_{t}\), \(\mathbf{u}_{t+\frac{1}{2}}=\beta\mathbf{u}_{t}\);
8:else
9:\(\mathbf{w}_{t+\frac{1}{2}}=\mathbf{w}_{t}\), \(\mathbf{u}_{t+\frac{1}{2}}=\mathbf{u}_{t}\);
10:endif
11: Receive a stochastic gradient \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) from some worker \(k_{t}\);
12: Update the parameter \(\mathbf{w}_{t+1}=\mathbf{w}_{t+\frac{1}{2}}-\eta\mathbf{g}_{ite(k_{t},t)}^{k_{ t}}\);
13: Update the momentum \(\mathbf{u}_{t+1}=\mathbf{u}_{t+\frac{1}{2}}+\eta\mathbf{g}_{ite(k_{t},t)}^{k_{ t}}\);
14: Add the worker \(k_{t}\) to the waiting set \(\mathcal{C}=\mathcal{C}\cup\{k_{t}\}\);
15: Execute the synchronous communication scheduler: only when all the workers are in the waiting set, i.e., \(\mathcal{C}=[K]\), send the parameter \(\mathbf{w}_{t+1}\) to the workers in \(\mathcal{C}\) and set \(\mathcal{C}\) to \(\emptyset\);
16:endfor
17: Notify all workers to stop;
18:Worker \(k\)\(\colon\)\((k\in[K])\)
19:repeat
20: Wait until receiving the parameter \(\mathbf{w}\) from the server;
21: Randomly sample \(\xi^{k}\sim\mathcal{D}\) and then compute the stochastic gradient \(\mathbf{g}^{k}=\nabla f(\mathbf{w};\xi^{k})\);
22: Send the stochastic gradient \(\mathbf{g}^{k}\) to the server;
23:until receive server's notification to stop ```

**Algorithm 3** SSGDm

```
1:Server:
2:Input: number of workers \(K\), number of iterations \(T\), learning rate \(\eta\), momentum coefficient \(\beta\in[0,1)\);
3:Initialization: initial parameter \(\mathbf{w}_{0}\), momentum \(\mathbf{u}_{0}=\mathbf{0}\), waiting set \(\mathcal{C}=\emptyset\);
4: Send the initial parameter \(\mathbf{w}_{0}\) to all workers;
5:for\(t=0\)to\(T-1\)do
6: Receive a stochastic gradient \(\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\) from some worker \(k_{t}\);
7: Update the momentum \(\mathbf{u}_{t+1}=\beta\mathbf{u}_{t}+\eta\mathbf{g}_{ite(k_{t},t)}^{k_{t}}\)
8: Update the parameter \(\mathbf{w}_{t+1}=\mathbf{w}_{t}-\mathbf{u}_{t+1}\)
9: Add the worker \(k_{t}\) to the waiting set \(\mathcal{C}=\mathcal{C}\cup\{k_{t}\}\);
10: Execute the asynchronous communication scheduler: once the waiting set is not empty, i.e., \(\mathcal{C}\neq\emptyset\), immediately send the parameter \(\mathbf{w}_{t+1}\) to the worker in \(\mathcal{C}\) and set \(\mathcal{C}\) to \(\emptyset\);
11:endfor
12: Notify all workers to stop;
13:Worker \(k\)\(\colon\)\((k\in[K])\)
14:repeat
15: Wait until receiving the parameter \(\mathbf{w}\) from the server;
16: Randomly sample \(\xi^{k}\sim\mathcal{D}\) and then compute the stochastic gradient \(\mathbf{g}^{k}=\nabla f(\mathbf{w};\xi^{k})\);
17: Send the stochastic gradient \(\mathbf{g}^{k}\) to the server;
18:until receive server's notification to stop ```

**Algorithm 4** naive ASGDm

Proof Details

### Reformulation of SSGDm

#### c.1.1 Proof of Proposition 1

Proof.: It's easy to verify that \(\{k_{t},k_{t+1},\cdots,k_{t+K-1}\}=[K]\) in (6), where \(K\mid t\).

Base case: for s = 0, \(\tilde{\mathbf{w}}_{0}=\mathbf{w}_{0}\) and \(\tilde{\mathbf{u}}_{0}=\mathbf{u}_{0}\).

Inductive hypothesis: for some arbitrary integer \(s^{\prime}\geq 0\), assume that \(\tilde{\mathbf{w}}_{s^{\prime}}=\mathbf{w}_{s^{\prime}K},\tilde{\mathbf{u}}_{ s^{\prime}}=\mathbf{u}_{s^{\prime}K}\).

Inductive step:

\[\tilde{\mathbf{u}}_{s^{\prime}+1} =\beta\tilde{\mathbf{u}}_{s^{\prime}}+\frac{\tilde{\eta}}{K} \sum_{k\in[K]}\nabla f(\tilde{\mathbf{w}}_{s^{\prime}};\xi^{k})=\beta\mathbf{u }_{s^{\prime}K}+\eta\sum_{k\in[K]}\nabla f(\mathbf{w}_{s^{\prime}K};\xi^{k})= \mathbf{u}_{(s^{\prime}+1)K},\] \[\tilde{\mathbf{w}}_{s^{\prime}+1} =\tilde{\mathbf{w}}_{s^{\prime}}-\beta\tilde{\mathbf{u}}_{s^{ \prime}}-\frac{\tilde{\eta}}{K}\sum_{k\in[K]}\nabla f(\tilde{\mathbf{w}}_{s^{ \prime}};\xi^{k})=\mathbf{w}_{s^{\prime}K}-\beta\mathbf{u}_{s^{\prime}K}-\eta \sum_{k\in[K]}\nabla f(\mathbf{w}_{s^{\prime}K};\xi^{k})\] \[=\mathbf{w}_{(s^{\prime}+1)K}.\]

We can conclude that \(\tilde{\mathbf{w}}_{s}=\mathbf{w}_{sK}\) and \(\tilde{\mathbf{u}}_{s}=\mathbf{u}_{sK}\) for any \(s\in[S]\). 

### OrMo

#### c.2.1 Proof of Lemma 1

Lemma 1 can be viewed as a special case of Lemma 5, and its proof is completed by substituting each delay-adaptive learning rate \(\hat{\eta}_{k,t}\) in the proof of Lemma 5 with \(\eta\) for all \(k\in[K]\) and \(t\in[T]\).

#### c.2.2 Proof of Lemma 2

Lemma 2 can be viewed as a special case of Lemma 6, and its proof is completed by substituting each delay-adaptive learning rate \(\hat{\eta}_{k,t}\) in the proof of Lemma 6 with \(\eta\) for all \(k\in[K]\) and \(t\in[T]\).

#### c.2.3 Proof of Lemma 3

Lemma 3 can be viewed as a special case of Lemma 7, and its proof is completed by substituting each delay-adaptive learning rate \(\hat{\eta}_{k,t}\) in the proof of Lemma 7 with \(\eta\) for all \(k\in[K]\) and \(t\in[T]\).

**Lemma 4**.: _With Assumption 2, the gap between \(\hat{\mathbf{y}}_{t}\) and \(\hat{\mathbf{w}}_{t}\) can be bounded:_

\[\mathbb{E}\|\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\|^{2}\leq\frac{\beta^{ 2}\eta^{2}K^{2}G^{2}}{(1-\beta)^{4}},\forall t\geq 1.\] (12)

Proof.: For any \(t\geq 1\), \(\hat{\mathbf{u}}_{t}\) can be formulated as follows:

\[\hat{\mathbf{u}}_{t} =\beta^{\lfloor\frac{t+K-2}{K}\rfloor}\left(\sum_{k\in[K]}\eta \mathbf{g}_{0}^{k}\right)+\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\beta^{ \lfloor\frac{t+K-2}{K}\rfloor-s}\left(\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\eta \mathbf{g}_{j}^{k_{j-1}}\right).\]

\[\|\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\|^{2} =\frac{\beta^{2}}{(1-\beta)^{2}}\left\|\hat{\mathbf{u}}_{t}\right\| ^{2}\] \[=\frac{\beta^{2}}{(1-\beta)^{2}}\left\|\beta^{\lfloor\frac{t+K-2} {K}\rfloor}\left(\sum_{k\in[K]}\eta\mathbf{g}_{0}^{k}\right)+\sum_{s=1}^{ \lfloor\frac{t+K-2}{K}\rfloor}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\left( \sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\eta\mathbf{g}_{j}^{k_{j-1}}\right)\right\| ^{2}\]Let \(q_{t}=\sum_{k\in[K]}\beta^{\lfloor\frac{t+K-2}{K}\rfloor}+\sum_{s=1}^{\lfloor\frac{t +K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\beta^{\lfloor\frac{t+K-2}{K} \rfloor-s}\), then we have

\[\|\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\|^{2} =\frac{\beta^{2}}{(1-\beta)^{2}}\left\|\beta^{\lfloor\frac{t+K-2} {K}\rfloor}\left(\sum_{k\in[K]}\eta\mathbf{g}_{0}^{k}\right)+\sum_{s=1}^{ \lfloor\frac{t+K-2}{K}\rfloor}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\left( \sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\eta\mathbf{g}_{j}^{k_{j-1}}\right)\right\|^ {2}\] \[=\frac{\beta^{2}q_{t}^{2}}{(1-\beta)^{2}}\left\|\sum_{k\in[K]} \frac{\beta^{\lfloor\frac{t+K-2}{K}\rfloor}}{q_{t}}\eta\mathbf{g}_{0}^{k}+ \sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}} \frac{\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}}{q_{t}}\eta\mathbf{g}_{j}^{k_{ j-1}}\right\|^{2}\] \[\leq\frac{\beta^{2}q_{t}}{(1-\beta)^{2}}\left(\sum_{k\in[K]} \beta^{\lfloor\frac{t+K-2}{K}\rfloor}\|\eta\mathbf{g}_{0}^{k}\|^{2}+\sum_{s=1 }^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\beta^{ \lfloor\frac{t+K-2}{K}\rfloor-s}\left\|\eta\mathbf{g}_{j}^{k_{j-1}}\right\|^ {2}\right).\] \[\mathbb{E}\|\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\|^{2} \leq\frac{\beta^{2}q_{t}}{(1-\beta)^{2}}\left(\sum_{k\in[K]} \beta^{\lfloor\frac{t+K-2}{K}\rfloor}\mathbb{E}\|\eta\mathbf{g}_{0}^{k}\|^{2} +\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}} \beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\mathbb{E}\|\eta\mathbf{g}_{j}^{k_{j-1 }}\|^{2}\right)\] \[\leq\frac{\beta^{2}\eta^{2}G^{2}q_{t}}{(1-\beta)^{2}}\left(\sum_{ k\in[K]}\beta^{\lfloor\frac{t+K-2}{K}\rfloor}+\sum_{s=1}^{\lfloor\frac{t+K-2}{K} \rfloor}\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\beta^{\lfloor\frac{t+K-2}{K} \rfloor-s}\right)\] \[=\frac{\beta^{2}\eta^{2}G^{2}q_{t}^{2}}{(1-\beta)^{2}}\leq\frac{ \beta^{2}\eta^{2}K^{2}G^{2}}{(1-\beta)^{4}}\]

#### c.2.4 Proof of Theorem 1

Proof.: \[\mathbb{E}F\left(\hat{\mathbf{y}}_{t+1}\right) \leq F\left(\hat{\mathbf{y}}_{t}\right)-\frac{\eta}{1-\beta}\langle \nabla F(\hat{\mathbf{y}}_{t}),\mathbb{E}\mathbf{g}_{t}^{k_{t-1}}\rangle+ \frac{L\eta^{2}}{2(1-\beta)^{2}}\mathbb{E}\|\mathbf{g}_{t}^{k_{t-1}}\|^{2}\] \[\leq F(\hat{\mathbf{y}}_{t})-\frac{\eta}{1-\beta}\langle\nabla F( \hat{\mathbf{y}}_{t}),\nabla F(\mathbf{w}_{t})\rangle+\frac{L\eta^{2}}{2(1- \beta)^{2}}\mathbb{E}\|\mathbf{g}_{t}^{k_{t-1}}-\nabla F(\mathbf{w}_{t})\|^{2}\] \[\quad+\frac{L\eta^{2}}{2(1-\beta)^{2}}\|\nabla F(\mathbf{w}_{t})\| ^{2}\] \[\leq F(\hat{\mathbf{y}}_{t})-\frac{\eta}{1-\beta}\langle\nabla F( \hat{\mathbf{y}}_{t}),\nabla F(\mathbf{w}_{t})\rangle+\frac{L\eta^{2}\sigma^{2 }}{2(1-\beta)^{2}}+\frac{L\eta^{2}}{2(1-\beta)^{2}}\|\nabla F(\mathbf{w}_{t}) \|^{2}\] \[-\langle\nabla F(\hat{\mathbf{y}}_{t}),\nabla F(\mathbf{w}_{t})\rangle =-\langle\nabla F(\hat{\mathbf{y}}_{t})-\nabla F(\mathbf{w}_{t})+ \nabla F(\mathbf{w}_{t}),\nabla F(\mathbf{w}_{t})\rangle\] \[=-\langle\nabla F(\hat{\mathbf{y}}_{t})-\nabla F(\mathbf{w}_{t}), \nabla F(\mathbf{w}_{t})\rangle-\|\nabla F(\mathbf{w}_{t})\|^{2}\] \[\leq\frac{1}{2}\|\nabla F(\hat{\mathbf{y}}_{t})-\nabla F(\mathbf{ w}_{t})\|^{2}+\frac{1}{2}\|\nabla F(\mathbf{w}_{t})\|^{2}-\|\nabla F(\mathbf{w}_{t})\|^{2}\] \[\leq\frac{L^{2}}{2}\|\hat{\mathbf{y}}_{t}-\mathbf{w}_{t}\|^{2}- \frac{1}{2}\|\nabla F(\mathbf{w}_{t})\|^{2}\] \[\mathbb{E}\|\hat{\mathbf{y}}_{t}-\mathbf{w}_{t}\|^{2}\leq 2\mathbb{E}\| \hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\|^{2}+2\mathbb{E}\|\hat{\mathbf{w}}_{t}- \mathbf{w}_{t}\|^{2}\leq\frac{2\beta^{2}\eta^{2}K^{2}G^{2}}{(1-\beta)^{4}}+ \frac{2\eta^{2}K^{2}G^{2}}{(1-\beta)^{2}}\leq\frac{2\eta^{2}K^{2}G^{2}}{(1- \beta)^{4}}\] \[\mathbb{E}F(\hat{\mathbf{y}}_{t+1}) \leq\mathbb{E}F(\hat{\mathbf{y}}_{t})-\frac{\eta}{1-\beta}\mathbb{E} \langle\nabla F(\hat{\mathbf{y}}_{t}),\nabla F(\mathbf{w}_{t})\rangle+\frac{L \eta^{2}\sigma^{2}}{2(1-\beta)^{2}}+\frac{L\eta^{2}}{2(1-\beta)^{2}}\mathbb{E} \|\nabla F(\mathbf{w}_{t})\|^{2}\] \[\leq\mathbb{E}F(\hat{\mathbf{y}}_{t})+\frac{\eta L^{2}}{2(1-\beta)} \mathbb{E}\|\hat{\mathbf{y}}_{t}-\mathbf{w}_{t}\|^{2}+\left(\frac{L\eta^{2}}{2(1- \beta)^{2}}-\frac{\eta}{2(1-\beta)}\right)\mathbb{E}\|\nabla F(\mathbf{w}_{t}) \|^{2}+\frac{L\eta^{2}\sigma^{2}}{2(1-\beta)^{2}}\] \[\stackrel{{\eta\leq\frac{1-\beta}{2K}}}{{\simeq}} \mathbb{E}F(\hat{\mathbf{y}}_{t})+\frac{\eta L^{2}}{2(1-\beta)}\mathbb{E}\|\hat{ \mathbf{y}}_{t}-\mathbf{w}_{t}\|^{2}-\frac{\eta}{4(1-\beta)}\mathbb{E}\|\nabla F (\mathbf{w}_{t})\|^{2}+\frac{L\eta^{2}\sigma^{2}}{2(1-\beta)^{2}}\] \[\leq\mathbb{E}F(\hat{\mathbf{y}}_{t})-\frac{\eta}{4(1-\beta)} \mathbb{E}\|\nabla F(\mathbf{w}_{t})\|^{2}+\frac{L\eta^{2}\sigma^{2}}{2(1- \beta)^{2}}+\frac{\eta^{3}K^{2}G^{2}L^{2}}{(1-\beta)^{5}}\]Summing up the above equation from \(t=1\) to \(t=T\), we can get that

\[\frac{1}{T}\sum_{t=1}^{T}\mathbb{E}\|\nabla F(\mathbf{w}_{t})\|^{2}\leq\frac{4(1- \beta)\left[\mathbb{E}F(\hat{\mathbf{y}}_{1})-F^{*}\right]}{T\eta}+\frac{2L\eta \sigma^{2}}{1-\beta}+\frac{4\eta^{2}K^{2}G^{2}L^{2}}{(1-\beta)^{4}}.\]

Since \(\hat{\mathbf{y}}_{1}-\mathbf{w}_{0}=\frac{1}{1-\beta}(\hat{\mathbf{w}}_{1}- \mathbf{w}_{0})=-\frac{\eta}{1-\beta}\sum_{k\in[K]}\mathbf{g}_{0}^{k}\), we have

\[\mathbb{E}F(\hat{\mathbf{y}}_{1}) \leq F(\mathbf{w}_{0})-\frac{\eta}{1-\beta}\mathbb{E}\langle \nabla F(\mathbf{w}_{0}),\sum_{k\in[K]}\mathbf{g}_{0}^{k}\rangle+\frac{L\eta^{ 2}}{2(1-\beta)^{2}}\mathbb{E}\left\|\sum_{k\in[K]}\mathbf{g}_{0}^{k}\right\|^{2}\] \[\leq F(\mathbf{w}_{0})-\frac{K\eta}{1-\beta}\left\|\nabla F( \mathbf{w}_{0})\right\|^{2}+\frac{L\eta^{2}}{2(1-\beta)^{2}}\mathbb{E}\left\| \sum_{k\in[K]}\mathbf{g}_{0}^{k}-K\nabla F(\mathbf{w}_{0})+K\nabla F(\mathbf{ w}_{0})\right\|^{2}\] \[\leq F(\mathbf{w}_{0})+\left(\frac{LK^{2}\eta^{2}}{2(1-\beta)^{2 }}-\frac{K\eta}{1-\beta}\right)\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}+ \frac{KL\sigma^{2}\eta^{2}}{2(1-\beta)^{2}}\] \[\leq F(\mathbf{w}_{0})+\frac{KL\sigma^{2}\eta^{2}}{2(1-\beta)^{2 }}.\]

The last inequality above holds because \(\eta\leq\frac{1-\beta}{2KL}\).

Combining the above equations, we can get that

\[\frac{1}{T}\sum_{t=1}^{T}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t} )\right\|^{2} \leq\frac{4(1-\beta)\left[F(\mathbf{w}_{0})-F^{*}\right]}{T\eta}+ \frac{2L\eta\sigma^{2}}{1-\beta}+\frac{2LK\sigma^{2}\eta}{(1-\beta)T}+\frac{4 \eta^{2}L^{2}K^{2}G^{2}}{(1-\beta)^{4}}\] \[\stackrel{{ T\geq K}}{{\leq}}\frac{4(1-\beta)\left[F (\mathbf{w}_{0})-F^{*}\right]}{T\eta}+\frac{4L\eta\sigma^{2}}{1-\beta}+\frac{4 \eta^{2}L^{2}K^{2}G^{2}}{(1-\beta)^{4}}.\]

Let \(\eta=\min\{\frac{1-\beta}{2KL},\frac{(1-\beta)[F(\mathbf{w}_{0})-F^{*}]^{2}}{ (LT)^{\frac{1}{2}}\sigma},\frac{(1-\beta)^{\frac{5}{3}}[F(\mathbf{w}_{0})-F^{ *}]^{\frac{1}{3}}}{(LKG)^{\frac{5}{3}}T^{\frac{1}{3}}}\}\), then we can get that

\[\frac{1}{T}\sum_{t=1}^{T}\mathbb{E}\|\nabla F(\mathbf{w}_{t})\|^{2}\leq \mathcal{O}\left(\sqrt{\frac{L\sigma^{2}}{T}}+\left(\frac{KLG}{T}\right)^{ \frac{2}{3}}+\frac{KL}{T}\right).\]

### OrMo with Delay-Adaptive Learning Rate

#### c.3.1 Algorithm

The details of OrMo with delay-adaptive learning rate (OrMo-DA) are presented in Algorithm 5.

#### c.3.2 Notation

For a positive integer \(n\), \([n]=\{0,1,2,\cdots,n-1\}\). \([0]\) is defined as \(\emptyset\).

The function \(ite(k,t)\) denotes the iteration index of the latest parameter sent to worker \(k\) before iteration \(t\), which can be formulated as

\[ite(k,t)=\begin{cases}0&t=0,\,k\in[K],\\ t&t>0,\,k=k_{t-1},\\ ite(k,t-1)&t>0,\,k\neq k_{t-1},\end{cases}\]

where \(k\in[K],t\in[T+1]\).

\(\eta_{t}\) is the learning rate at iteration \(t\) and satisfies that

\[\eta_{t}=\left\{\begin{aligned} &\eta&\tau_{t}\leq 2K,\\ &\min\{\eta,\frac{1}{4L\tau_{t}}\}&\tau_{t}>2K, \end{aligned}\right.\]

where \(t\in[T]\).

The function \(next(k,t)\) denotes the index of the next iteration that the gradient from worker \(k\) will participate in the parameter update after iteration \(t\) (including iteration \(t\)), which can be formulated as

\[next(k,t)=\left\{\begin{aligned} &\min\{j\geq t:k_{j}=k\}& \exists j\in[T]\setminus[t]\,,k_{j}=k,\\ &\forall j\in[T]\setminus[t]\,,k_{j}\neq k,\end{aligned}\right.\]

where \(k\in[K]\), \(t\in[T]\). It's easy to verify that \(ite(k,next(k,t))=ite(k,t),next(k,ite(k,t))=next(k,t)\), where \(k\in[K],t\in[T]\).

We define \(\hat{\tau}_{k,t}=t-ite(k,t)\), where \(k\in[K]\) and \(t\in[T+1]\). \(\hat{\tau}_{k,t}\) denotes the current delay of the gradient \(\mathbf{g}_{ite(k,t)}^{k}\) at iteration \(t\), which is the number of iterations that have happened since \(ite(k,t)\). It's easy to verify that \(\hat{\tau}_{k_{t},t}=t-ite(k_{t},t)=\tau_{t}\), where \(t\in[T]\).

We also define an auxiliary sequence \(\hat{\eta}_{k,t}\) for the adaptive learning rates. \(\hat{\eta}_{k,t}\) denotes the learning rate corresponding to the gradient \(\mathbf{g}_{ite(k,t)}^{k}\).

\[\hat{\eta}_{k,t}=\left\{\begin{aligned} &\eta&\hat{\tau}_{k,next(k,t)} \leq 2K,\\ &\min\{\eta,\frac{1}{4L\hat{\tau}_{k,next(k,t)}}\}& \hat{\tau}_{k,next(k,t)}>2K,\end{aligned}\right.\]where \(k\in[K]\) and \(t\in[T]\). Since \(next(k,t)=next(k,ite(k,t))\), we can have that \(\hat{\eta}_{k,t}=\hat{\eta}_{k,ite(k,t)}\), where \(k\in[K],t\in[T]\).

If \(next(k,t)\in[T]\), \(\hat{\tau}_{k,next(k,t)}=\hat{\tau}_{k_{next(k,t)},next(k,t)}=\tau_{next(k,t)}\) and then we have that

\[\hat{\eta}_{k,t}=\eta_{next(k,t)}=\begin{cases}\eta&\tau_{next(k,t)}\leq 2K,\\ \min\{\eta,\frac{1}{4L\tau_{next(k,t)}}\}&\tau_{next(k,t)}>2K.\end{cases}\]

It's easy to verify that \(\hat{\eta}_{k,t}=\eta_{next(k_{t},t)}=\eta_{t}\), where \(t\in[T]\).

If \(next(k,t)=T\),

\[\hat{\eta}_{k,t}=\begin{cases}\eta&\hat{\tau}_{k,T}\leq 2K,\\ \min\{\eta,\frac{1}{4L\hat{\tau}_{k,T}}\}&\hat{\tau}_{k,T}>2K.\end{cases}\]

#### c.3.3 Convergence Analysis for OrMo-DA

Firstly, we define one auxiliary sequence \(\{\hat{\mathbf{u}}_{t}\}_{t\geq 1}\) for the momentum: \(\hat{\mathbf{u}}_{1}=\sum_{k\in[K]}\hat{\eta}_{k,0}\mathbf{g}_{0}^{k}\), and

\[\hat{\mathbf{u}}_{t+1}=\begin{cases}\beta\hat{\mathbf{u}}_{t}+\hat{\eta}_{k_{t -1},t}\mathbf{g}_{t}^{k_{t-1}}&K\mid(t-1)\,,\\ \hat{\mathbf{u}}_{t}+\hat{\eta}_{k_{t-1},t}\mathbf{g}_{t}^{k_{t-1}}&K\nmid(t- 1)\,,\end{cases}\] (13)

for \(t\geq 1\).

**Lemma 5**.: _For any \(t\geq 0\), the gap between \(\mathbf{u}_{t+1}\) and \(\hat{\mathbf{u}}_{t+1}\) can be formulated as follows:_

\[\hat{\mathbf{u}}_{t+1}-\mathbf{u}_{t+1}=\sum_{k\in[K],k\neq k_{t}}\beta^{\lceil \frac{t}{K}\rceil-\lceil\frac{ite(k,t)}{K}\rceil}\hat{\eta}_{k,ite(k,t)} \mathbf{g}_{ite(k,t)}^{k}.\] (14)

Proof.: Base case: for \(t=0\), \(\hat{\mathbf{u}}_{1}=\sum_{k\in[K]}\hat{\eta}_{k,0}\mathbf{g}_{0}^{k}\), \(\mathbf{u}_{1}=\hat{\eta}_{k_{0},0}\mathbf{g}_{0}^{k_{0}}\), then we have

\[\hat{\mathbf{u}}_{1}-\mathbf{u}_{1} =\sum_{k\in[K],k\neq k_{0}}\beta^{\lceil\frac{0}{K}\rceil-\lceil \frac{ite(k,t)}{K}\rceil}\hat{\eta}_{k,0}\mathbf{g}_{0}^{k}\] \[=\sum_{k\in[K],k\neq k_{0}}\beta^{\lceil\frac{0}{K}\rceil-\lceil \frac{ite(k,0)}{K}\rceil}\hat{\eta}_{k,ite(k,0)}\mathbf{g}_{ite(k,0)}^{k}.\]

Inductive hypothesis: for some arbitrary integer \(t^{\prime}-1\geq 0\), assume that (14) is true for \(t=t^{\prime}-1\).

Inductive step: We will prove that (14) is true for \(t=t^{\prime}\). Firstly, we divide our discussion into two cases based on whether \(t^{\prime}-1\) is divisible by \(K\) and prove that

\[\hat{\mathbf{u}}_{t^{\prime}+1}-\mathbf{u}_{t^{\prime}+1} =\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\beta^{\lceil\frac{t^{ \prime}}{K}\rceil-\lceil\frac{ite(k,t^{\prime})}{K}\rceil}\hat{\eta}_{k,ite(k, t^{\prime})}\mathbf{g}_{ite(k,t^{\prime})}^{k}+\hat{\eta}_{k_{t^{\prime}-1},t^{ \prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\] \[\quad-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k_ {t^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}},ite(k_{t^{\prime} },t^{\prime})}\mathbf{g}_{ite(k_{t^{\prime}},t^{\prime})}^{k_{t^{\prime}}}.\]Case 1: \(K\mid(t^{\prime}-1)\)

\[\hat{\mathbf{u}}_{t^{\prime}+1} =\beta\hat{\mathbf{u}}_{t^{\prime}}+\hat{\eta}_{k_{t^{\prime}-1},t^{ \prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}},\] \[\mathbf{u}_{t^{\prime}+1} =\beta\mathbf{u}_{t^{\prime}}+\beta^{\lceil\frac{t^{\prime}}{K} \rceil-\lceil\frac{it(k_{t^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{ \prime}},ite(k_{t^{\prime}},t^{\prime})}\mathbf{g}_{ite(k_{t^{\prime}},t^{ \prime})}^{k_{t^{\prime}}},\] \[\hat{\mathbf{u}}_{t^{\prime}+1}-\mathbf{u}_{t^{\prime}+1} =\beta(\hat{\mathbf{u}}_{t^{\prime}}-\mathbf{u}_{t^{\prime}})+ \hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime }-1}}-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{it(k_{t^{\prime}},t^ {\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{\prime}) }\mathbf{g}_{ite(k_{t^{\prime}},t^{\prime})}^{k_{t^{\prime}}}\] \[=\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\beta^{\lceil\frac{t^{ \prime}}{K}\rceil+1-\lceil\frac{it(k_{t^{\prime}},t^{\prime})}{K}\rceil}\hat{ \eta}_{k,ite(k,t^{\prime}-1)}\mathbf{g}_{ite(k,t^{\prime}-1)}^{k_{t^{\prime}}}\] \[\quad+\hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{ \prime}}^{k_{t^{\prime}-1}}-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil \frac{it(k_{t^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}},ite( k_{t^{\prime}},t^{\prime})}\mathbf{g}_{ite(k_{t^{\prime}},t^{\prime})}^{k_{t^{ \prime}}}\] \[=\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\beta^{\lceil\frac{t^{ \prime}}{K}\rceil-\lceil\frac{it(k_{t^{\prime}},t^{\prime}-1)}{K}\rceil}\hat{ \eta}_{k,ite(k,t^{\prime}-1)}\mathbf{g}_{ite(k,t^{\prime}-1)}^{k}\] \[\quad+\hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{ \prime}}^{k_{t^{\prime}-1}}-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil \frac{it(k_{t^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}},ite( k_{t^{\prime}},t^{\prime})}\mathbf{g}_{ite(k_{t^{\prime}},t^{\prime})}^{k_{t^{ \prime}}}.\]

The second equation above holds because \(\lceil\frac{t^{\prime}}{K}\rceil>\lceil\frac{t^{\prime}-1}{K}\rceil=I_{t^{ \prime}}\) when \(K\mid(t^{\prime}-1)\), \(I_{t^{\prime}+1}=\lceil\frac{t^{\prime}}{K}\rceil\) and \(\hat{\eta}_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{\prime})}=\eta_{next(k_{t^{ \prime}},ite(k_{t^{\prime}},t^{\prime}))}=\eta_{t^{\prime}}\). The last equation above holds because \(\lceil\frac{t^{\prime}}{K}\rceil=\lceil\frac{t^{\prime}-1}{K}\rceil+1\).

Case 2: \(K\nmid(t^{\prime}-1)\)

\[\hat{\mathbf{u}}_{t^{\prime}+1} =\hat{\mathbf{u}}_{t^{\prime}}+\hat{\eta}_{k_{t^{\prime}-1},t^{ \prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}},\] \[\mathbf{u}_{t^{\prime}+1} =\mathbf{u}_{t^{\prime}}+\beta^{\lceil\frac{t^{\prime}}{K}\rceil- \lceil\frac{it(k_{t^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}}, ite(k_{t^{\prime}},t^{\prime})}\mathbf{g}_{ite(k_{t^{\prime}},t^{ \prime})}^{k_{t^{\prime}}},\] \[\hat{\mathbf{u}}_{t^{\prime}+1}-\mathbf{u}_{t^{\prime}+1} =(\hat{\mathbf{u}}_{t^{\prime}}-\mathbf{u}_{t^{\prime}})+\hat{\eta} _{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}-\beta ^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{it(k_{t^{\prime}},t^{\prime})}{K }\rceil}\hat{\eta}_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{\prime})}\mathbf{g}_{ ite(k_{t^{\prime}},t^{\prime})}^{k_{t^{\prime}}}\] \[=\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\beta^{\lceil\frac{t^{ \prime}}{K}\rceil-\lceil\frac{it(k_{t},t^{\prime}-1)}{K}\rceil}\hat{\eta}_{k,ite(k,t^{\prime}-1)}\mathbf{g}_{ite(k_{t^{\prime}},t^{\prime})}^{k}\] \[\quad+\hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{ \prime}}^{k_{t^{\prime}-1}}-\beta^{\lceil\frac{it(k_{t^{\prime}},t^{\prime})}{K }\rceil}\hat{\eta}_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{\prime})}\mathbf{g}_{ ite(k_{t^{\prime}},t^{\prime})}^{k_{t^{\prime}}}.\]

The last equation above holds because \(\lceil\frac{t^{\prime}}{K}\rceil=\lceil\frac{t^{\prime}-1}{K}\rceil\).

Since \(ite(k,t^{\prime})=ite(k,t^{\prime}-1),\forall k\neq k_{t^{\prime}-1}\), we can get the following equation for both cases above:

\[\hat{\mathbf{u}}_{t^{\prime}+1}-\mathbf{u}_{t^{\prime}+1} =\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\beta^{\lceil\frac{t^{\prime }}{K}\rceil-\lceil\frac{it(k,t^{\prime})}{K}\rceil}\hat{\eta}_{k,ite(k,t^{ \prime})}\mathbf{g}_{ite(k,t^{\prime})}^{k}+\hat{\eta}_{k_{t^{\prime}-1},t^{ \prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\] \[\quad-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{it(k_{t ^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{ \prime})}\mathbf{g}_{ite(k_{t^{\prime}},t^{\prime})}^{k_{t^{\prime}}}.\]

If \(k_{t^{\prime}}=k_{t^{\prime}-1}\), then we have \(ite(k_{t^{\prime}},t^{\prime})=t^{\prime}\) and

\[\hat{\mathbf{u}}_{t^{\prime}+1}-\mathbf{u}_{t^{\prime}+1} =\sum_{k\in[K],k\neq k_{t^{\prime}}}\beta^{\lceil\frac{t^{\prime }}{K}\rceil-\lceil\frac{it(k_{t},t^{\prime})}{K}\rceil}\hat{\eta}_{k,ite(k,t^{ \prime})}\mathbf{g}_{ite(k,t^{\prime})}^{k}.\]If \(k_{t^{\prime}}\neq k_{t^{\prime}-1}\), then we have

\[\hat{\mathbf{u}}_{t^{\prime}+1}-\mathbf{u}_{t^{\prime}+1} =\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\beta^{\lceil\frac{t^{\prime }}{K}\rceil-\lceil\frac{ite(k_{t^{\prime}})}{K}\rceil}\hat{\eta}_{k,ite(k_{t^{ \prime}})}\mathbf{g}^{k}_{ite(k_{t},t^{\prime})}+\hat{\eta}_{k_{t^{\prime}-1},t ^{\prime}}\mathbf{g}^{k_{t^{\prime}-1}}_{t^{\prime}}\] \[\quad-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k_{ t^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{ \prime})}\mathbf{g}^{k_{t^{\prime}}}_{ite(k_{t^{\prime}},t^{\prime})}\] \[=\sum_{k\in[K],k\neq k_{t^{\prime}-1},k\neq k_{t^{\prime}}}\beta^{ \lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k_{t^{\prime}})}{K}\rceil} \hat{\eta}_{k,ite(k_{t},t^{\prime})}\mathbf{g}^{k}_{ite(k_{t},t^{\prime})}+ \hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}^{k_{t^{\prime}-1}}_{t^{ \prime}}\] \[\quad+\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k_{ t^{\prime}}-1,t^{\prime})}{K}\rceil}\hat{\eta}_{k_{t^{\prime}-1},ite(k_{t^{\prime}-1},t ^{\prime})}\mathbf{g}^{k_{t^{\prime}-1}}_{ite(k_{t^{\prime}-1},t^{\prime})}\] \[=\sum_{k\in[K],k\neq k_{t^{\prime}}}\beta^{\lceil\frac{t^{\prime}} {K}\rceil-\lceil\frac{ite(k_{t^{\prime}},t^{\prime})}{K}\rceil}\hat{\eta}_{k,ite (k,t^{\prime})}\mathbf{g}^{k}_{ite(k,t^{\prime})}.\]

We can conclude that \(\hat{\mathbf{u}}_{t+1}-\mathbf{u}_{t+1}=\sum_{k\in[K],k\neq k_{t}}\beta^{ \lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k,t)}{K}\rceil}\hat{\eta}_{ k,ite(k,t)}\mathbf{g}^{k}_{ite(k,t)}\) is true for any \(t\geq 0\). 

Then, we define one auxiliary sequence \(\{\hat{\mathbf{w}}_{t}\}_{t\geq 1}\) for the parameter: \(\hat{\mathbf{w}}_{1}=\mathbf{w}_{0}-\sum_{k\in[K]}\hat{\eta}_{k,0}\mathbf{g}^ {k}_{0}\), and

\[\hat{\mathbf{w}}_{t+1}=\begin{cases}\hat{\mathbf{w}}_{t}-\beta\hat{\mathbf{u }}_{t}-\hat{\eta}_{k_{t-1},t}\mathbf{g}^{k_{t-1}}_{t}&K\mid(t-1),\\ \hat{\mathbf{w}}_{t}-\hat{\eta}_{k_{t-1},t}\mathbf{g}^{k_{t-1}}_{t}&K\nmid(t-1 ),\end{cases}\]

for \(t\geq 1\).

**Lemma 6**.: _For any \(t\geq 0\), the gap between \(\mathbf{w}_{t+1}\) and \(\hat{\mathbf{w}}_{t+1}\) can be formulated as follows:_

\[\hat{\mathbf{w}}_{t+1}-\mathbf{w}_{t+1}=-\sum_{k\in[K],k\neq k_{t}}\frac{1- \beta^{\lceil\frac{t}{K}\rceil-\lceil\frac{ite(k,t)}{K}\rceil+1}}{1-\beta} \hat{\eta}_{k,ite(k,t)}\mathbf{g}^{k}_{ite(k,t)}.\] (15)

Proof.: Base case: for \(t=0\), \(\hat{\mathbf{w}}_{1}=\mathbf{w}_{0}-\sum_{k\in[K]}\hat{\eta}_{k,0}\mathbf{g}^ {k}_{0},\mathbf{w}_{1}=\mathbf{w}_{0}-\hat{\eta}_{k_{0},0}\mathbf{g}^{k_{0}}_{ 0}\), then we have

\[\hat{\mathbf{w}}_{1}-\mathbf{w}_{1}=-\sum_{k\in[K],k\neq k_{0}}\frac{1-\beta^{ \lceil\frac{\beta}{K}\rceil-\lceil\frac{ite(k,t)}{K}\rceil+1}}{1-\beta}\hat{ \eta}_{k,ite(k,0)}\mathbf{g}^{k}_{ite(k,0)}.\]

Inductive hypothesis: for some arbitrary integer \(t^{\prime}-1\geq 0\), assume that (15) is true for \(t=t^{\prime}-1\).

Inductive step: We will prove that (15) is true for \(t=t^{\prime}\). Firstly, we divide our discussion into two cases based on whether \(t^{\prime}-1\) is divisible by \(K\) and prove that

\[\hat{\mathbf{w}}_{t^{\prime}+1}-\mathbf{w}_{t^{\prime}+1}= -\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\frac{1-\beta^{\lceil\frac{ t^{\prime}}{K}\rceil-\lceil\frac{ite(k,t^{\prime})}{K}\rceil+1}}{1-\beta} \hat{\eta}_{k,ite(k,t^{\prime})}\mathbf{g}^{k}_{ite(k,t^{\prime})}-\hat{\eta}_{ k_{t^{\prime}-1},t^{\prime}}\mathbf{g}^{k_{t^{\prime}-1}}_{t^{\prime}}\] \[+\frac{1-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k_ {t^{\prime}},t^{\prime})}{K}\rceil+1}}{1-\beta}\hat{\eta}_{k_{t^{\prime}},ite (k_{t^{\prime}},t^{\prime})}\mathbf{g}^{k_{tte(k_{t^{\prime}},t^{\prime})}}_{ ite(k_{t^{\prime}},t^{\prime})}.\]

[MISSING_PAGE_EMPTY:25]

The last equation above holds because \(\lceil\frac{t^{\prime}}{K}\rceil=\lceil\frac{t^{\prime}-1}{K}\rceil\).

Since \(ite(k,t^{\prime})=ite(k,t^{\prime}-1),\forall k\neq k_{t^{\prime}-1}\), we can get the following equation for both cases above:

\[\hat{\mathbf{w}}_{t^{\prime}+1}-\mathbf{w}_{t^{\prime}+1} =-\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\frac{1-\beta^{\lceil\frac{t ^{\prime}}{K}\rceil-\lceil\frac{ite(k,t^{\prime})}{K}\rceil+1}}{1-\beta}\hat{ \mathbf{\eta}}_{k,ite(k,t^{\prime})}\mathbf{g}^{k}_{ite(k,t^{\prime})}-\hat{ \mathbf{\eta}}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}^{k_{t^{\prime}-1}}_{t^ {\prime}}\] \[\quad+\frac{1-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil \frac{ite(k_{t^{\prime}},t^{\prime})}{K}\rceil+1}}{1-\beta}\hat{\mathbf{\eta} }_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{\prime})}\mathbf{g}^{k_{ite(k_{t^{ \prime}},t^{\prime})}}_{ite(k_{t^{\prime}},t^{\prime})}.\]

If \(k_{t^{\prime}}=k_{t^{\prime}-1}\), then we have \(ite(k_{t^{\prime}},t^{\prime})=t^{\prime}\) and

\[\hat{\mathbf{w}}_{t^{\prime}+1}-\mathbf{w}_{t^{\prime}+1} =-\sum_{k\in[K],k\neq k_{t^{\prime}-1}}\frac{1-\beta^{\lceil \frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k_{t},t^{\prime})}{K}\rceil+1}}{1- \beta}\hat{\mathbf{\eta}}_{k,ite(k,t^{\prime})}\mathbf{g}^{k}_{ite(k,t^{ \prime})}-\hat{\mathbf{\eta}}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}^{k_{t^{ \prime}-1}}_{t^{\prime}}\] \[\quad+\frac{1-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil \frac{ite(k_{t^{\prime}},t^{\prime})}{K}\rceil+1}}{1-\beta}\hat{\mathbf{\eta} }_{k_{t^{\prime}},ite(k_{t^{\prime}},t^{\prime})}\mathbf{g}^{k_{t^{\prime}}}_ {ite(k_{t^{\prime}},t^{\prime})}\] \[=-\sum_{k\in[K],k\neq k_{t^{\prime}-1},k\neq k_{t^{\prime}}}\frac {1-\beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k,t^{\prime})}{K} \rceil+1}}{1-\beta}\hat{\mathbf{\eta}}_{k,ite(k,t^{\prime})}\mathbf{g}^{k}_{ite (k,t^{\prime})}-\hat{\mathbf{\eta}}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}^{ k_{t^{\prime}-1}}_{t^{\prime}}\] \[=-\sum_{k\in[K],k\neq k_{t^{\prime}}}\frac{1-\beta^{\lceil\frac{t ^{\prime}}{K}\rceil-\lceil\frac{ite(k,t^{\prime})}{K}\rceil+1}}{1-\beta}\hat{ \mathbf{\eta}}_{k,ite(k,t^{\prime})}\mathbf{g}^{k}_{ite(k,t^{\prime})}\]

We can conclude that \(\hat{\mathbf{w}}_{t+1}-\mathbf{w}_{t+1}=-\sum_{k\in[K],k\neq k_{t}}\frac{1- \beta^{\lceil\frac{t^{\prime}}{K}\rceil-\lceil\frac{ite(k,t^{\prime})}{K} \rceil+1}}{1-\beta}\hat{\mathbf{\eta}}_{k,ite(k,t^{\prime})}\mathbf{g}^{k}_{ite (k,t^{\prime})}\) is true for any \(t\geq 0\). 

Then, we define another auxiliary sequence \(\{\hat{\mathbf{y}}_{t}\}_{t\geq 1}\colon\hat{\mathbf{y}}_{1}=\mathbf{w}_{0}- \frac{1}{1-\beta}\sum_{k\in[K]}\hat{\mathbf{\eta}}_{k,0}\mathbf{g}^{k}_{0}\), and

\[\hat{\mathbf{y}}_{t+1}=\hat{\mathbf{y}}_{t}-\frac{1}{1-\beta}\hat{\mathbf{ \eta}}_{k_{t-1},t}\mathbf{g}^{k_{t-1}}_{t},\]

for \(t\geq 1\).

**Lemma 7**.: _For any \(t\geq 1\), the gap between \(\hat{\mathbf{y}}_{t}\) and \(\hat{\mathbf{w}}_{t}\) can be formulated as follows:_

\[\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}=-\frac{\beta}{1-\beta}\hat{\mathbf{ \eta}}_{t}.\] (16)

Proof.: Base case: For \(t=1\), we have that

\[\hat{\mathbf{y}}_{1}-\hat{\mathbf{w}}_{1} =\left(\mathbf{w}_{0}-\frac{1}{1-\beta}\sum_{k\in[K]}\hat{\mathbf{ \eta}}_{k,0}\mathbf{g}^{k}_{0}\right)-\left(\mathbf{w}_{0}-\sum_{k\in[K]}\hat{ \mathbf{\eta}}_{k,0}\mathbf{g}^{k}_{0}\right)\] \[=-\frac{\beta}{1-\beta}\sum_{k\in[K]}\hat{\mathbf{\eta}}_{k,0} \mathbf{g}^{k}_{0}=-\frac{\beta}{1-\beta}\hat{\mathbf{\eta}}_{1}.\]

Inductive hypothesis: for some arbitrary integer \(t^{\prime}\geq 1\), assume that \(\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}=-\frac{\beta}{1-\beta}\hat{\mathbf{ \eta}}_{t}\) is true for \(t=t^{\prime}\).

Inductive step: We will prove that \(\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}=-\frac{\beta}{1-\beta}\hat{\mathbf{ u}}_{t}\) is true for \(t=t^{\prime}+1\). We divide our discussion into two cases based on whether \(t^{\prime}-1\) is divisible by \(K\).

Case 1: \(K\mid(t^{\prime}-1)\)

\[\hat{\mathbf{y}}_{t^{\prime}+1} =\hat{\mathbf{y}}_{t^{\prime}}-\frac{1}{1-\beta}\hat{\eta}_{k_{t^{ \prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\] \[\hat{\mathbf{w}}_{t^{\prime}+1} =\hat{\mathbf{w}}_{t^{\prime}}-\beta\hat{\mathbf{u}}_{t^{\prime}} -\hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{ \prime}-1}}\] \[\hat{\mathbf{y}}_{t^{\prime}+1}-\hat{\mathbf{w}}_{t^{\prime}+1} =\left(\hat{\mathbf{y}}_{t^{\prime}}-\frac{1}{1-\beta}\hat{\eta}_ {k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\right) -\left(\hat{\mathbf{w}}_{t^{\prime}}-\beta\hat{\mathbf{u}}_{t^{\prime}}-\hat{ \eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\right)\] \[=\hat{\mathbf{y}}_{t^{\prime}}-\hat{\mathbf{w}}_{t^{\prime}}+ \beta\hat{\mathbf{u}}_{t^{\prime}}-\frac{\beta}{1-\beta}\hat{\eta}_{k_{t^{ \prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\] \[=-\frac{\beta^{2}}{1-\beta}\hat{\mathbf{u}}_{t^{\prime}}-\frac{ \beta}{1-\beta}\hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime} }^{k_{t^{\prime}-1}}\] \[=-\frac{\beta}{1-\beta}\hat{\mathbf{u}}_{t^{\prime}+1}\]

Case 2: \(K\nmid(t^{\prime}-1)\)

\[\hat{\mathbf{y}}_{t^{\prime}+1} =\hat{\mathbf{y}}_{t^{\prime}}-\frac{1}{1-\beta}\hat{\eta}_{k_{t^ {\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\] \[\hat{\mathbf{w}}_{t^{\prime}+1} =\hat{\mathbf{w}}_{t^{\prime}}-\hat{\eta}_{k_{t^{\prime}-1},t^{ \prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\] \[\hat{\mathbf{y}}_{t^{\prime}+1}-\hat{\mathbf{w}}_{t^{\prime}+1} =\left(\hat{\mathbf{y}}_{t^{\prime}}-\frac{1}{1-\beta}\hat{\eta}_ {k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\right) -\left(\hat{\mathbf{w}}_{t^{\prime}}-\hat{\eta}_{k_{t^{\prime}-1},t^{\prime}} \mathbf{g}_{t^{\prime}}^{k_{t^{\prime}-1}}\right)\] \[=\hat{\mathbf{y}}_{t^{\prime}}-\hat{\mathbf{w}}_{t^{\prime}}-\frac {\beta}{1-\beta}\hat{\eta}_{k_{t^{\prime}-1},t^{\prime}}\mathbf{g}_{t^{\prime }}^{k_{t^{\prime}-1}}\] \[=-\frac{\beta}{1-\beta}\hat{\mathbf{u}}_{t^{\prime}+1}\]

We can conclude that \(\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}=-\frac{\beta}{1-\beta}\hat{\mathbf{u }}_{t}\) is true for any \(t\geq 1\). 

**Lemma 8**.: _For any \(t\geq 1\), \(\hat{\mathbf{u}}_{t}\) can be formulated as follows:_

\[\hat{\mathbf{u}}_{t}=\beta^{\lfloor\frac{t+K-2}{K}\rfloor}\left(\sum_{k\in[K] }\hat{\eta}_{k,0}\mathbf{g}_{0}^{k}\right)+\sum_{s=1}^{\lfloor\frac{t+K-2}{K} \rfloor}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\left(\sum_{j=(s-1)K+1}^{\min\{ sK,t-1\}}\hat{\eta}_{k_{j-1},j}\mathbf{g}_{j}^{k_{j-1}}\right).\]

Proof.: It's straightforward to get this conclusion from the definition of the sequence \(\hat{\mathbf{u}}_{t}\) in (13). 

**Lemma 9**.: _(descent lemma) With Assumptions 1 and 3, we have the following descent lemma for \(t\geq 1\),:_

\[\mathbb{E}F(\hat{\mathbf{y}}_{t+1}) \leq F(\hat{\mathbf{y}}_{t})+\left(\frac{L(\hat{\eta}_{k_{t-1},t} )^{2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\right)\left\| \nabla F(\mathbf{w}_{t})\right\|^{2}+\frac{(\hat{\eta}_{k_{t-1},t})^{2}\sigma^{ 2}L}{2(1-\beta)^{2}}\] \[\quad+\frac{L^{2}\hat{\eta}_{k_{t-1},t}}{1-\beta}\left\|\hat{ \mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\right\|^{2}+\frac{L^{2}\hat{\eta}_{k_{t-1}, t}}{1-\beta}\left\|\hat{\mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}.\]Proof.: \[\hat{\mathbf{y}}_{t+1} =\hat{\mathbf{y}}_{t}-\frac{1}{1-\beta}\hat{\eta}_{k_{t-1},t} \mathbf{g}_{t}^{k_{t-1}}\] \[\mathbb{E}F(\hat{\mathbf{y}}_{t+1}) \leq F(\hat{\mathbf{y}}_{t})+\mathbb{E}\langle\nabla F(\hat{ \mathbf{y}}_{t}),\hat{\mathbf{y}}_{t+1}-\hat{\mathbf{y}}_{t}\rangle+\frac{L}{2 }\mathbb{E}\left\|\hat{\mathbf{y}}_{t+1}-\hat{\mathbf{y}}_{t}\right\|^{2}\] \[=F(\hat{\mathbf{y}}_{t})-\frac{1}{1-\beta}\mathbb{E}\langle \nabla F(\hat{\mathbf{y}}_{t}),\hat{\eta}_{k_{t-1},t}\mathbf{g}_{t}^{k_{t-1}} \rangle+\frac{L}{2(1-\beta)^{2}}\mathbb{E}\left[(\hat{\eta}_{k_{t-1},t})^{2} \left\|\mathbf{g}_{t}^{k_{t-1}}\right\|^{2}\right]\] \[=F(\hat{\mathbf{y}}_{t})-\frac{1}{1-\beta}\langle\nabla F(\hat{ \mathbf{y}}_{t}),\hat{\eta}_{k_{t-1},t}\nabla F(\mathbf{w}_{t})\rangle+\frac{L }{2(1-\beta)^{2}}\mathbb{E}\left[(\hat{\eta}_{k_{t-1},t})^{2}\left\|\mathbf{g }_{t}^{k_{t-1}}\right\|^{2}\right].\]

\[-\frac{\hat{\eta}_{k_{t-1},t}}{1-\beta}\langle\nabla F(\hat{ \mathbf{y}}_{t}),\nabla F(\mathbf{w}_{t})\rangle =-\frac{\hat{\eta}_{k_{t-1},t}}{1-\beta}\langle\nabla F(\hat{ \mathbf{y}}_{t})-\nabla F(\mathbf{w}_{t})+\nabla F(\mathbf{w}_{t}),\nabla F( \mathbf{w}_{t})\rangle\] \[=-\frac{\hat{\eta}_{k_{t-1},t}}{1-\beta}\langle\nabla F(\hat{ \mathbf{y}}_{t})-\nabla F(\mathbf{w}_{t}),\nabla F(\mathbf{w}_{t})\rangle- \frac{\hat{\eta}_{k_{t-1},t}}{1-\beta}\left\|\nabla F(\mathbf{w}_{t})\right\|^ {2}\] \[\leq\frac{\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\left\|\nabla F( \hat{\mathbf{y}}_{t})-\nabla F(\mathbf{w}_{t})\right\|^{2}-\frac{\hat{\eta}_{ k_{t-1},t}}{2(1-\beta)}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\] \[\leq\frac{\hat{\eta}_{k_{t-1},t}L^{2}}{2(1-\beta)}\left\|\hat{ \mathbf{y}}_{t}-\mathbf{w}_{t}\right\|^{2}-\frac{\hat{\eta}_{k_{t-1},t}}{2(1- \beta)}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\]

\[\mathbb{E}F(\hat{\mathbf{y}}_{t+1}) \leq F(\hat{\mathbf{y}}_{t})+\left(\frac{L(\hat{\eta}_{k_{t-1},t} )^{2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\right)\left\| \nabla F(\mathbf{w}_{t})\right\|^{2}+\frac{(\hat{\eta}_{k_{t-1},t})^{2}\sigma ^{2}L}{2(1-\beta)^{2}}\] \[\quad+\frac{L^{2}\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\left\|\hat{ \mathbf{y}}_{t}-\mathbf{w}_{t}\right\|^{2}\] \[\leq F(\hat{\mathbf{y}}_{t})+\left(\frac{L(\hat{\eta}_{k_{t-1},t} )^{2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\right)\left\| \nabla F(\mathbf{w}_{t})\right\|^{2}+\frac{(\hat{\eta}_{k_{t-1},t})^{2}\sigma ^{2}L}{2(1-\beta)^{2}}\] \[\quad+\frac{L^{2}\hat{\eta}_{k_{t-1},t}}{1-\beta}\left\|\hat{ \mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\right\|^{2}+\frac{L^{2}\hat{\eta}_{k_{t-1 },t}}{1-\beta}\left\|\hat{\mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}.\]

**Lemma 10**.: _With Assumption 1, the gap between \(\hat{\mathbf{y}}_{t}\) and \(\hat{\mathbf{w}}_{t}\) in OrMo-DA can be bounded as follows:_

\[\sum_{t=1}^{T-1}\mathbb{E}\left(\hat{\eta}_{k_{t-1},t}\left\| \hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\right\|^{2}\right) \leq\frac{2\beta^{2}\eta K^{2}}{(1-\beta)^{4}}\left[\sum_{k\in[K]} \left(\hat{\eta}_{k,0}\right)^{2}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}+ \sum_{t=1}^{T-1}\left(\hat{\eta}_{k_{t-1},t}\right)^{2}\mathbb{E}\left\| \nabla F(\mathbf{w}_{t})\right\|^{2}\right]\] \[\quad+\frac{2\beta^{2}\eta K\sigma^{2}}{(1-\beta)^{3}}\left[\sum_ {k\in[K]}\left(\hat{\eta}_{k,0}\right)^{2}+\sum_{t=1}^{T-1}\left(\hat{\eta}_{k_ {t-1},t}\right)^{2}\right].\]Proof.: \[\mathbb{E}\left\|\hat{\mathbf{u}}_{t}\right\|^{2}=\mathbb{E} \left\|\beta^{\lfloor\frac{t+K-2}{K}\rfloor}\left(\sum_{k\in[K]}\hat{\eta}_{k,0} \mathbf{g}_{0}^{k}\right)+\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\beta^{ \lfloor\frac{t+K-2}{K}\rfloor-s}\left(\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\hat{ \eta}_{k_{j-1},j}\mathbf{g}_{j}^{k_{j-1}}\right)\right\|^{2}\] \[\leq 2\mathbb{E}\left\|\beta^{\lfloor\frac{t+K-2}{K}\rfloor}\left( \sum_{k\in[K]}\hat{\eta}_{k,0}\nabla F(\mathbf{w}_{0})\right)+\sum_{s=1}^{ \lfloor\frac{t+K-2}{K}\rfloor}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\left( \sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\hat{\eta}_{k_{j-1},j}\nabla F(\mathbf{w}_{ j})\right)\right\|^{2}\] \[\leq 2\sum_{k\in[K]}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor}(\hat{ \eta}_{k,0})^{2}\sigma^{2}+2\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j =(s-1)K+1}^{\min\{sK,t-1\}}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor-2s}\big{(} \hat{\eta}_{k_{j-1},j}\big{)}^{2}\sigma^{2}\] \[\quad+2\mathbb{E}\left\|\beta^{\lfloor\frac{t+K-2}{K}\rfloor} \left(\sum_{k\in[K]}\hat{\eta}_{k,0}\nabla F(\mathbf{w}_{0})\right)+\sum_{s=1 }^{\lfloor\frac{t+K-2}{K}\rfloor}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\left( \sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\hat{\eta}_{k_{j-1},j}\nabla F(\mathbf{w}_{ j})\right)\right\|^{2}\]

Let \(q_{t}=\sum_{k\in[K]}\beta^{\lfloor\frac{t+K-2}{K}\rfloor}+\sum_{s=1}^{\lfloor \frac{t+K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\beta^{\lfloor\frac{t +K-2}{K}\rfloor-s}\), then we have

\[\mathbb{E}\left\|\beta^{\lfloor\frac{t+K-2}{K}\rfloor}\left(\sum_ {k\in[K]}\hat{\eta}_{k,0}\nabla F(\mathbf{w}_{0})\right)+\sum_{s=1}^{\lfloor \frac{t+K-2}{K}\rfloor}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\left(\sum_{j=(s -1)K+1}^{\min\{sK,t-1\}}\hat{\eta}_{k_{j-1},j}\nabla F(\mathbf{w}_{j})\right) \right\|^{2}\] \[=q_{t}^{2}\mathbb{E}\left\|\left(\sum_{k\in[K]}\frac{\beta^{ \lfloor\frac{t+K-2}{K}\rfloor}}{q_{t}}\hat{\eta}_{k,0}\nabla F(\mathbf{w}_{0}) \right)+\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\binom{\min\{sK,t-1\}}{\sum_{ j=(s-1)K+1}^{\min\{sK,t-1\}}\frac{\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}}{q_{t}} }\hat{\eta}_{k_{j-1},j}\nabla F(\mathbf{w}_{j})\right\|^{2}\] \[\leq q_{t}\left[\sum_{k\in[K]}\beta^{\lfloor\frac{t+K-2}{K}\rfloor} (\hat{\eta}_{k,0})^{2}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right.\] \[\quad+\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^ {\min\{sK,t-1\}}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\big{(}\hat{\eta}_{k_{j -1},j}\big{)}^{2}\mathbb{E}\left\|\nabla F(\mathbf{w}_{j})\right\|^{2}\Bigg{]}\] \[\leq\frac{K}{1-\beta}\left[\sum_{k\in[K]}\beta^{\lfloor\frac{t+K-2 }{K}\rfloor}(\hat{\eta}_{k,0})^{2}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right.\] \[\quad+\left.\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j=(s -1)K+1}^{\min\{sK,t-1\}}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\big{(}\hat{ \eta}_{k_{j-1},j}\big{)}^{2}\mathbb{E}\left\|\nabla F(\mathbf{w}_{j})\right\| ^{2}\right].\]Thus, we get that

\[\mathbb{E}\left\|\hat{\mathbf{u}}_{t}\right\|^{2}\] \[\leq 2\mathbb{E}\left\|\beta^{\lfloor\frac{t+K-2}{K}\rfloor}\left( \sum_{k\in[K]}\hat{\eta}_{k,0}\nabla F(\mathbf{w}_{0})\right)+\sum_{s=1}^{ \lfloor\frac{t+K-2}{K}\rfloor}\beta^{\lfloor\frac{t+K-2}{K}\rfloor-s}\left( \sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\hat{\eta}_{k_{j-1},j}\nabla F(\mathbf{w}_{j} )\right)\right\|^{2}\] \[\quad+2\sum_{k\in[K]}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor}{( \hat{\eta}_{k,0})}^{2}\sigma^{2}+2\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor} \sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor-2s}{( \hat{\eta}_{k_{j-1},j})}^{2}\sigma^{2}\] \[\leq\frac{2K}{1-\beta}\left[\sum_{k\in[K]}\beta^{\lfloor\frac{t+K -2}{K}\rfloor}{(\hat{\eta}_{k,0})}^{2}\left\|\nabla F(\mathbf{w}_{0})\right\| ^{2}+\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^{\lfloor\frac {t+K-2}{K}\rfloor-s}{(\hat{\eta}_{k_{j-1},j})}^{2}\mathbb{E}\left\|\nabla F( \mathbf{w}_{j})\right\|^{2}\right]\] \[\quad+2\sum_{k\in[K]}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor}{( \hat{\eta}_{k,0})}^{2}\sigma^{2}+2\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor} \sum_{j=(s-1)K+1}^{\min\{sK,t-1\}}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor-2s}{( \hat{\eta}_{k_{j-1},j})}^{2}\sigma^{2}.\]

\[\sum_{t=1}^{T-1}\mathbb{E}\left(\hat{\eta}_{k_{t-1},t}\left\| \hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\right\|^{2}\right)\leq\frac{\beta^{ 2}\eta}{{(1-\beta)}^{2}}\sum_{t=1}^{T-1}\mathbb{E}\left\|\hat{\mathbf{u}}_{t} \right\|^{2}\] \[\leq\frac{2\beta^{2}K\eta}{{(1-\beta)}^{3}}\sum_{t=1}^{T-1}\sum_{ k\in[K]}\beta^{\lfloor\frac{t+K-2}{K}\rfloor}{(\hat{\eta}_{k,0})}^{2}\left\| \nabla F(\mathbf{w}_{0})\right\|^{2}\] \[\quad+\frac{2\beta^{2}\eta\sigma^{2}}{{(1-\beta)}^{2}}\sum_{t=1}^ {T-1}\left[\sum_{k\in[K]}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor}{(\hat{\eta}_{ k,0})}^{2}+\sum_{s=1}^{\lfloor\frac{t+K-2}{K}\rfloor}\sum_{j=(s-1)K+1}^{ \min\{sK,t-1\}}\beta^{2\lfloor\frac{t+K-2}{K}\rfloor-2s}{(\hat{\eta}_{k_{j-1},j})}^{2}\right]\] \[\leq\frac{2\beta^{2}\eta K^{2}}{{(1-\beta)}^{4}}\left[\sum_{k\in[ K]}{(\hat{\eta}_{k,0})}^{2}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}+\sum_{t=1}^{T-1}{( \hat{\eta}_{k_{t-1},t})}^{2}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^ {2}\right]\] \[\quad+\frac{2\beta^{2}\eta K\sigma^{2}}{{(1-\beta)}^{3}}\left[ \sum_{k\in[K]}{(\hat{\eta}_{k,0})}^{2}+\sum_{t=1}^{T-1}{(\hat{\eta}_{k_{t-1},t })}^{2}\right].\]

**Lemma 11**.: _With Assumption 1, letting \(\eta\leq\frac{1}{8KL}\), the gap between \(\hat{\mathbf{w}}_{t}\) and \(\mathbf{w}_{t}\) in OrMo-DA can be bounded as follows:_

\[\sum_{t=1}^{T-1}\mathbb{E}\left(\hat{\eta}_{k_{t-1},t}\left\| \hat{\mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}\right) \leq\frac{\eta K}{2L{(1-\beta)}^{2}}\left[\sum_{t=1}^{T-1}\hat{ \eta}_{k_{t-1},t}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+\left( \sum_{k\in[K]}\hat{\eta}_{k,0}\right)\left\|\nabla F(\mathbf{w}_{0})\right\|^ {2}\right]\] \[\quad+\frac{\eta\sigma^{2}}{2L{(1-\beta)}^{2}}\left(\sum_{t=1}^{ T-1}\hat{\eta}_{k_{t-1},t}+\sum_{k\in[K]}\hat{\eta}_{k,0}\right).\]Proof.: \[\sum_{t=1}^{T-1}\mathbb{E}\left(\hat{\eta}_{k_{t-1},t}\left\|\hat{ \mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}\right)\leq\eta\sum_{t=1}^{T-1} \mathbb{E}\left\|\hat{\mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}\] \[=\eta\sum_{t=1}^{T-1}\mathbb{E}\left\|\sum_{k\in[K],k\neq k_{t-1}} \frac{1-\beta^{\lceil\frac{t-1}{K}\rceil-\lceil\frac{it\left(k,t-1\right)}{K} \rceil+1}}{1-\beta}\hat{\eta}_{k,ite\left(k,t-1\right)}\mathbf{g}_{ite\left(k,t -1\right)}^{k}\right\|^{2}\] \[\leq 2\eta\sum_{t=1}^{T-1}\mathbb{E}\left\|\sum_{k\in[K],k\neq k_{t- 1}}\frac{1-\beta^{\lceil\frac{t-1}{K}\rceil-\lceil\frac{it\left(k,t-1\right)} {K}\rceil+1}}{1-\beta}\hat{\eta}_{k,ite\left(k,t-1\right)}\left(\mathbf{g}_{ite \left(k,t-1\right)}^{k}-\nabla F(\mathbf{w}_{ite\left(k,t-1\right)})\right) \right\|^{2}\] \[\quad+2\eta\sum_{t=1}^{T-1}\mathbb{E}\left\|\sum_{k\in[K],k\neq k_ {t-1}}\frac{1-\beta^{\lceil\frac{t-1}{K}\rceil-\lceil\frac{it\left(k,t-1\right) }{K}\rceil+1}}{1-\beta}\hat{\eta}_{k,ite\left(k,t-1\right)}\nabla F(\mathbf{w }_{ite\left(k,t-1\right)})\right\|^{2}\] \[\leq\frac{2\eta}{\left(1-\beta\right)^{2}}\sum_{t=0}^{T-2}\sum_{k \in[K],k\neq k_{t}}\left(\hat{\eta}_{k,ite\left(k,t\right)}\right)^{2}\left( \sigma^{2}+K\mathbb{E}\left\|\nabla F(\mathbf{w}_{ite\left(k,t\right)}) \right\|^{2}\right)\] \[=\frac{2\eta}{\left(1-\beta\right)^{2}}\sum_{j=0}^{T-2}\sum_{t=0} ^{T-2}\sum_{k\in[K]}\left(\hat{\eta}_{k,ite\left(k,t\right)}\right)^{2}\left( \sigma^{2}+K\mathbb{E}\left\|\nabla F(\mathbf{w}_{ite\left(k,t\right)}) \right\|^{2}\right)\mathds{1}\left(k\neq k_{t}\right)\mathds{1}\left(j=ite(k,t)\right)\] \[\leq\frac{2\eta}{\left(1-\beta\right)^{2}}\sum_{j=1}^{T-2}\left( \hat{\eta}_{k_{j-1},j}\right)^{2}\left(\sigma^{2}+K\mathbb{E}\left\|\nabla F (\mathbf{w}_{j})\right\|^{2}\right)\left(next(k_{j-1},j)-j\right)\] \[\quad+\frac{2\eta}{\left(1-\beta\right)^{2}}\sum_{k\in[K]}\left( \hat{\eta}_{k,0}\right)^{2}\left(\sigma^{2}+K\left\|\nabla F(\mathbf{w}_{0}) \right\|^{2}\right)\left(next(k,0)-0\right)\]

\[\sum_{t=1}^{T-1}\mathbb{E}\left(\hat{\eta}_{k_{t-1},t}\left\| \hat{\mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}\right) \leq\frac{2\eta}{\left(1-\beta\right)^{2}}\sum_{t=1}^{T-1}\left( \hat{\eta}_{k_{t-1},t}\right)^{2}\left(\sigma^{2}+K\mathbb{E}\left\|\nabla F( \mathbf{w}_{t})\right\|^{2}\right)\hat{\tau}_{k_{t-1},next(k_{t-1},t)}\] \[\quad+\frac{2\eta}{\left(1-\beta\right)^{2}}\sum_{k\in[K]}\left( \hat{\eta}_{k,0}\right)^{2}\left(\sigma^{2}+K\left\|\nabla F(\mathbf{w}_{0}) \right\|^{2}\right)\hat{\tau}_{k,next(k,0)}\]

\[\sum_{t=1}^{T-1}\mathbb{E}\left(\hat{\eta}_{k_{t-1},t}\left\| \hat{\mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}\right)\] \[\leq\frac{\eta}{2L(1-\beta)^{2}}\left[\sum_{t=1}^{T-1}\hat{\eta}_{ k_{t-1},t}\left[\sigma^{2}+K\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2} \right]+\sum_{k\in[K]}\hat{\eta}_{k,0}\left[\sigma^{2}+K\left\|\nabla F( \mathbf{w}_{0})\right\|^{2}\right]\right]\] \[\leq\frac{\eta K}{2L(1-\beta)^{2}}\left[\sum_{t=1}^{T-1}\hat{ \eta}_{k_{t-1},t}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+\left( \sum_{k\in[K]}\hat{\eta}_{k,0}\right)\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right]\] \[\quad+\frac{\eta\sigma^{2}}{2L(1-\beta)^{2}}\left(\sum_{t=1}^{T-1 }\hat{\eta}_{k_{t-1},t}+\sum_{k\in[K]}\hat{\eta}_{k,0}\right).\]

**Theorem 3**.: _With Assumptions 1, 3 and 4, letting_

\[\eta_{t}=\begin{cases}\eta&\tau_{t}\leq 2K,\\ \min\{\eta,\frac{1}{4L\tau_{t}}\}&\tau_{t}>2K,\end{cases}\]

_and \(\eta=\min\{\frac{(1-\beta)^{2}}{8KL},\sqrt{\frac{(1-\beta)^{3}\Delta}{T\,L \sigma^{2}}}\}\), Algorithm 5 has the following convergence rate:_

\[\mathbb{E}\left\|\nabla F(\bar{\mathbf{w}}_{T})\right\|^{2}\leq\mathcal{O}( \sqrt{\frac{L\sigma^{2}}{T}}+\frac{KL}{T}),\]

_where \(\Delta=F(\mathbf{w}_{0})-F^{*}\) and \(\bar{\mathbf{w}}_{T}\) is randomly chosen from \(\{\mathbf{w}_{0},\mathbf{w}_{1},\cdots,\mathbf{w}_{T-1}\}\) according to a probability distribution which is related to the delay-adaptive learning rates as shown in (17)._

Proof.: According to Lemma 9, we can get that

\[\mathbb{E}F(\hat{\mathbf{y}}_{T})-\mathbb{E}F(\hat{\mathbf{y}}_{ 1})\] \[\leq\sum_{t=1}^{T-1}\left[\left(\frac{L(\hat{\eta}_{k_{t-1},t})^{ 2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\right)\mathbb{E }\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\right]+\frac{L\sigma^{2}}{2(1- \beta)^{2}}\sum_{t=1}^{T-1}\left(\hat{\eta}_{k_{t-1},t}\right)^{2}\] \[\quad+\mathbb{E}\left[\frac{L^{2}}{1-\beta}\sum_{t=1}^{T-1}\left( \hat{\eta}_{k_{t-1},t}\left\|\hat{\mathbf{w}}_{t}-\mathbf{w}_{t}\right\|^{2}+ \hat{\eta}_{k_{t-1},t}\left\|\hat{\mathbf{y}}_{t}-\hat{\mathbf{w}}_{t}\right\| ^{2}\right)\right]\] \[\leq\sum_{t=1}^{T-1}\left[\left(\frac{L(\hat{\eta}_{k_{t-1},t})^{ 2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\right)\mathbb{E }\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\right]+\frac{L\sigma^{2}}{2(1- \beta)^{2}}\sum_{t=1}^{T-1}\left(\hat{\eta}_{k_{t-1},t}\right)^{2}\] \[\quad+\frac{\eta L\sigma^{2}}{2(1-\beta)^{3}}\left(\sum_{t=1}^{T- 1}\hat{\eta}_{k_{t-1},t}+\sum_{k\in[K]}\hat{\eta}_{k,0}\right)\] \[\quad+\frac{\eta KL}{2(1-\beta)^{3}}\left[\sum_{t=1}^{T-1}\hat{ \eta}_{k_{t-1},t}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+\left( \sum_{k\in[K]}\hat{\eta}_{k,0}\right)\left\|\nabla F(\mathbf{w}_{0})\right\|^ {2}\right]\] \[\quad+\frac{2\beta^{2}\eta K^{2}L^{2}}{(1-\beta)^{5}}\left[\sum_{ k\in[K]}\left(\hat{\eta}_{k,0}\right)^{2}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}+ \sum_{t=1}^{T-1}\left(\hat{\eta}_{k_{t-1},t}\right)^{2}\mathbb{E}\left\| \nabla F(\mathbf{w}_{t})\right\|^{2}\right]\] \[\leq\sum_{t=1}^{T-1}\left[\left(\frac{L(\hat{\eta}_{k_{t-1},t})^ {2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1},t}}{2(1-\beta)}\right)\mathbb{E }\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\right]+\frac{L\sigma^{2}}{2(1- \beta)^{2}}\sum_{t=1}^{T-1}\left(\hat{\eta}_{k_{t-1},t}\right)^{2}\] \[\quad+\frac{\eta KL}{2(1-\beta)^{3}}\left[\sum_{t=1}^{T-1}\hat{ \eta}_{k_{t-1},t}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+\sum_{ k\in[K]}\hat{\eta}_{k,0}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right]\] \[\quad+\frac{\beta^{2}\eta KL}{4(1-\beta)^{3}}\left[\sum_{k\in[K]} \hat{\eta}_{k,0}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}+\sum_{t=1}^{T-1} \hat{\eta}_{k_{t-1},t}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\right]\]\[\leq\sum_{t=1}^{T-1}\left[\left(\frac{L\big{(}\hat{\eta}_{k_{t-1,t}} \big{)}^{2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1,t}}}{2(1-\beta)}\right) \mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\right]+\frac{L\sigma^{2}}{ 2(1-\beta)^{2}}\sum_{t=1}^{T-1}\left(\hat{\eta}_{k_{t-1,t}}\right)^{2}\] \[\quad+\frac{\eta L\sigma^{2}}{\left(1-\beta\right)^{3}}\left(\sum _{t=1}^{T-1}\hat{\eta}_{k_{t-1,t}}+\sum_{k\in[K]}\hat{\eta}_{k,0}\right)\] \[\quad+\frac{\eta KL}{\left(1-\beta\right)^{3}}\left[\sum_{t=1}^{ T-1}\hat{\eta}_{k_{t-1,t}}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+ \sum_{k\in[K]}\hat{\eta}_{k,0}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right]\] \[\leq\sum_{t=1}^{T-1}\left[\left(\frac{L\big{(}\hat{\eta}_{k_{t-1,t }}\big{)}^{2}}{2(1-\beta)^{2}}-\frac{\hat{\eta}_{k_{t-1,t}}}{2(1-\beta)} \right)\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\right]+\frac{L \sigma^{2}}{2(1-\beta)^{2}}\sum_{t=1}^{T-1}\left(\hat{\eta}_{k_{t-1,t}}\right) ^{2}\] \[\quad+\frac{\eta L\sigma^{2}}{\left(1-\beta\right)^{3}}\left(\sum _{t=1}^{T-1}\hat{\eta}_{k_{t-1,t}}+\sum_{k\in[K]}\hat{\eta}_{k,0}\right)\] \[\quad+\frac{1}{4(1-\beta)}\left[\sum_{t=1}^{T-1}\hat{\eta}_{k_{t- 1,t}}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+\sum_{k\in[K]}\hat{ \eta}_{k,0}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right]\] \[\mathbb{E}F(\check{\mathbf{y}}_{1}) \leq F(\mathbf{w}_{0})-\frac{1}{1-\beta}\mathbb{E}\langle\nabla F (\mathbf{w}_{0}),\left(\sum_{k\in[K]}\hat{\eta}_{k,0}\mathbf{g}_{0}^{k}\right) \rangle+\frac{L}{2(1-\beta)^{2}}\mathbb{E}\left\|\sum_{k\in[K]}\hat{\eta}_{k,0} \mathbf{g}_{0}^{k}\right\|^{2}\] \[=F(\mathbf{w}_{0})-\frac{\sum_{k\in[K]}\hat{\eta}_{k,0}}{1-\beta} \left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\] \[\quad+\frac{L}{2(1-\beta)^{2}}\mathbb{E}\left\|\sum_{k\in[K]}\hat {\eta}_{k,0}\left(\mathbf{g}_{0}^{k}-\nabla F(\mathbf{w}_{0})+\nabla F( \mathbf{w}_{0})\right)\right\|^{2}\] \[\leq F(\mathbf{w}_{0})+\left[\frac{L\Big{(}\sum_{k\in[K]}\hat{ \eta}_{k,0}\Big{)}^{2}}{2\left(1-\beta\right)^{2}}-\frac{\sum_{k\in[K]}\hat{ \eta}_{k,0}}{1-\beta}\right]\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}+\frac{ L\sigma^{2}}{2\left(1-\beta\right)^{2}}\sum_{k\in[K]}\left(\hat{\eta}_{k,0} \right)^{2}\] \[\quad+\frac{L}{2\left(1-\beta\right)^{3}}\left(\sum_{t=1}^{T-1} \hat{\eta}_{k_{t-1,t}}+\sum_{k\in[K]}\hat{\eta}_{k,0}\right)\] \[\quad+\frac{1}{4(1-\beta)}\left[\sum_{t=1}^{T-1}\hat{\eta}_{k_{t- 1,t}}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+\sum_{k\in[K]}\hat {\eta}_{k,0}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right]\] \[\quad+\left[\frac{L\Big{(}\sum_{k\in[K]}\hat{\eta}_{k,0}\Big{)}^ {2}}{2\left(1-\beta\right)^{2}}-\frac{\sum_{k\in[K]}\hat{\eta}_{k,0}}{4\left(1 -\beta\right)}\right]\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\]\[\mathbb{E}F(\hat{\mathbf{y}}_{T})-F(\mathbf{w}_{0}) \leq-\frac{1}{8\left(1-\beta\right)}\left[\sum_{t=1}^{T-1}\hat{ \eta}_{k_{t-1},t}\mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}+\sum_{k \in[K]}\hat{\eta}_{k,0}\left\|\nabla F(\mathbf{w}_{0})\right\|^{2}\right]\] \[\quad+\frac{2\eta L\sigma^{2}}{\left(1-\beta\right)^{3}}\left( \sum_{t=1}^{T-1}\hat{\eta}_{k_{t-1},t}+\sum_{k\in[K]}\hat{\eta}_{k,0}\right)\]

Thus, we can get that

\[\frac{1}{\sum_{t=0}^{T-1}\bar{\eta}_{t}}\mathbb{E}\left(\sum_{t=0}^{T-1}\bar{ \eta}_{t}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\right)\leq\frac{8\left(1 -\beta\right)\left(F(\mathbf{w}_{0})-F^{*}\right)}{\sum_{t=0}^{T-1}\bar{\eta }_{t}}+\frac{16\eta L\sigma^{2}}{\left(1-\beta\right)^{2}},\]

where \(\bar{\eta}_{0}=\sum_{k\in[K]}\hat{\eta}_{k,0}\) and \(\bar{\eta}_{t}=\hat{\eta}_{k_{t-1},t}(t\geq 1)\).

Then, we analyse the lower bound of \(\sum_{t=0}^{T-1}\bar{\eta}_{t}\).

It's easy to verify that

\[\hat{\tau}_{k,t+1}=t+1-ite(k,t+1)=\begin{cases}t-ite(k,t)+1=\hat{\tau}_{k,t}+1& k\neq k_{t},\\ 0=\hat{\tau}_{k,t}-\tau_{t}&k=k_{t}.\end{cases}\]

Since \(\sum_{k\in[K]}\hat{\tau}_{k,0}=0\), we have \(\sum_{k\in[K]}\hat{\tau}_{k,T}+\sum_{t=0}^{T-1}\tau_{t}=(K-1)T\). Moreover, \(\hat{\tau}_{k_{T-1},T}=T-ite(k_{T-1},T)=0\). We get that \(\sum_{k\in[K],k\neq kT_{-1}}\hat{\tau}_{k,T}+\sum_{t=0}^{T-1}\tau_{t}=(K-1)T\). Thus, at least \(\frac{T}{2}\) delays are smaller than \(2K\). \(\sum_{t=0}^{T}\bar{\eta}_{t}=\sum_{t=1}^{T-1}\hat{\eta}_{k_{t-1},t}+\sum_{k \in[K]}\hat{\eta}_{k,0}\geq\frac{T\eta}{2}\).

\[\frac{1}{\sum_{t=0}^{T-1}\bar{\eta}_{t}}\sum_{t=0}^{T-1}\bar{\eta}_{t} \mathbb{E}\left\|\nabla F(\mathbf{w}_{t})\right\|^{2}\leq\frac{16(1-\beta)}{ T\eta}\left(F(\mathbf{w}_{0})-F^{*}\right)+\frac{16\eta L\sigma^{2}}{\left(1- \beta\right)^{2}}.\]

If we choose an output \(\bar{\mathbf{w}}_{T}\) from \(\{\mathbf{w}_{0},\mathbf{w}_{1},\cdots,\mathbf{w}_{T-1}\}\) according to

\[\mathbb{P}(\bar{\mathbf{w}}_{T}=\mathbf{w}_{t})\propto\bar{\eta}_{t},\] (17)

where \(t\in[T]\) and let \(\eta=\min\{\frac{(1-\beta)^{2}}{8KL},\sqrt{\frac{(1-\beta)^{3}(F(\mathbf{w}_{0 })-F^{*})}{TL\sigma^{2}}}\}\), we have that

\[\mathbb{E}\left\|\nabla F(\bar{\mathbf{w}}_{T})\right\|^{2}\leq\mathcal{O} \left(\sqrt{\frac{L\sigma^{2}}{T}}+\frac{KL}{T}\right).\]

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: The main claims made in the abstract and introduction accurately reflect the paper's contributions and scope. We propose OrMo for ASGD in Subsection 3.2. We prove the convergence of OrMo theoretically in Subsection 3.3 and verify its superiority empirically in Section 4. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: We discuss the limitations of the assumptions of OrMo in Subsection 3.3. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof?Answer: [Yes] Justification: The full set of assumptions and the proof sketch can be found in Section 3.3. Please refer to Appendix C for the complete proof details. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: This paper fully discloses all the information needed to reproduce the main experimental results. The implementation details can be found in Section 4. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code**Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: We provide the code. The dataset is public. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: The implementation details can be found in Section 4. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: Each experiment is repeated 5 times as reported in Section 4. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: The type of compute workers and the time of execution are presented in Section 4. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: Our research conforms with the NeurIPS Code of Ethics in every respect. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA] Justification: There is no societal impact of the work performed. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: This paper poses no such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licensees for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: We have cited the original papers. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset. * For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.

* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: This paper does not release new assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.