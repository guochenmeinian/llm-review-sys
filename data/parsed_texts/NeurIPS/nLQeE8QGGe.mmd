# Active learning of neural population dynamics

using two-photon holographic optogenetics

 Andrew Wagenmaker

University of California, Berkeley

&Lu Mi

Georgia Tech

&Marton Rozsa

Allen Institute for Neural Dynamics

&Matthew S. Bull

Allen Institute for Brain Science

&Karel Svoboda

Allen Institute for Neural Dynamics

&Kayvon Daie

Allen Institute for Neural Dynamics

&Matthew D. Golub

University of Washington

&Kevin Jamieson

University of Washington

Equally contributing first authors.

Correspondence to: ajwagen@berkeley.edu or lmi7@gatech.edu.

###### Abstract

Recent advances in techniques for monitoring and perturbing neural populations have greatly enhanced our ability to study circuits in the brain. In particular, two-photon holographic optogenetics now enables precise photostimulation of experimenter-specified groups of individual neurons, while simultaneous two-photon calcium imaging enables the measurement of ongoing and induced activity across the neural population. Despite the enormous space of potential photostimulation patterns and the time-consuming nature of photostimulation experiments, very little algorithmic work has been done to determine the most effective photostimulation patterns for identifying the neural population dynamics. Here, we develop methods to efficiently select which neurons to stimulate such that the resulting neural responses will best inform a dynamical model of the neural population activity. Using neural population responses to photostimulation in mouse motor cortex, we demonstrate the efficacy of a low-rank linear dynamical systems model, and develop an active learning procedure which takes advantage of low-rank structure to determine informative photostimulation patterns. We demonstrate our approach on both real and synthetic data, obtaining in some cases as much as a two-fold reduction in the amount of data required to reach a given predictive power. Our active stimulation design method is based on a novel active learning procedure for low-rank regression, which may be of independent interest.

## 1 Introduction

Neural population dynamics describe how the activities across a population of neurons evolve over time due to local recurrent connectivity and inputs to the population from other neurons or brain areas. Identifying these population dynamics can provide critical insight into the computations performed by a neural population [1]. Dynamical systems models have enabled neuroscientists to generate and test a multitude of hypotheses about how specific neural populations support the neural computations that underlie, for example, motor control [2; 3; 4], motor timing [5; 6], decision making [7; 8; 9; 10], working memory [11], social behavior [12], and learning [13; 14; 15; 16].

The traditional approach to data-driven modeling of a neural population typically involves two separate stages. First, neural population activity is recorded while an animal performs a task of interest. Then, a dynamical systems model is fit to the recorded neural responses [17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33]. This approach suffers from two key limitations. First, any inferred structure is purely correlational, and cannot be interpreted with any notion of causality. Second, the experimenter has limited control over how the neural population dynamics are sampled, which can lead to inefficient data collection--oversampling in some parts of neural activity space while altogether missing others. Given constraints on time and resources in neurophysiological experiments, there is a strong need for techniques that minimize the amount of experimental data required to identify the neural population dynamics.

We seek to overcome these limitations by actively designing the causal circuit perturbations that will be most informative to learning a dynamical model of the neural population response. For circuit perturbations, we employ two-photon holographic photostimulation (Figure 1), which provides temporally precise, cellular-resolution optogenetic control over the activity of ensembles of neurons [34; 35; 36; 37; 38; 39; 40; 41]. When paired with two-photon calcium imaging, photostimulation protocols can provide insight into network connectivity by enabling the measurement of the causal influence that each perturbed neuron exerts on all other recorded neurons [36; 39; 42; 43; 44; 45; 46]. This platform enables targeted excitation of the neural population dynamics, thus providing the experimenter with unprecedented control over the data collected for informing a model of the neural population dynamics.

Here, we develop active learning techniques for designing photostimulation patterns that allow for efficient estimation of low-rank neural population dynamics and the underlying network connectivity. First, we introduce a low-rank autoregressive model that captures low-dimensional structure in neural population dynamics and allows inference of the causal interactions between recorded neurons. We then propose an active learning procedure which chooses photostimulations to target this low-dimensional structure, and demonstrate it in two settings: estimating the underlying causal interactions when using the learned autoregressive model as a simulator of the true dynamics, and adaptively selecting which samples to observe from our dataset of neural population activity recorded via two-photon calcium imaging of mouse motor cortex in response to two-photon holographic photostimulation. In both cases, we show that our active approach obtains substantially more accurate estimates with fewer measurements compared to passive baselines. Our methodology is based on a novel analysis of nuclear-norm regression with non-isotropic inputs. To the best of our knowledge, this is the first approach to demonstrate significant gains applying active learning to low-rank matrix estimation problems, and thus we believe this may be of independent interest.

## 2 Related Work

**Modeling Neural Responses to Stimulation.** Many studies have applied direct electrical or optical stimulation to neural populations to probe the dynamical properties of neural circuits and their relation to circuit function [47; 48; 49; 10; 26; 4]. However, these stimulation techniques lack the spatial specificity needed to precisely probe the causal influence of individuals neurons on the population dynamics, and these experimental designs were _passive_ in that the stimulation protocols were specified prior to data collection (with [44; 48] as notable exceptions). Other work has explored a related but separate problem of minimizing off-target effects when photostimulating individual neurons [41].

**Low-Rank Matrix Recovery.** Low-rank matrix recovery has been intensively researched over the last decade and a half [50; 51; 52]. However, existing analyses rely critically on the assumption that the set of measurements taken are highly symmetric and satisfy some notion of the restricted isometry property (RIP) or incoherence. The matrix recovery problem of our setting departs from the classical literature in several ways. First, the set of feasible measurements we can take is constrained by the physical limits of the photostimulation system. Second, as we aim to _adapt_ and _actively_ learn these matrix coefficients, we should expect that our resulting set of measurements should be highly skewed by design. Motivated by this, we develop, to the best of our knowledge, the first bounds on low-rank estimation using the nuclear norm heuristic that gives a quantification of the estimation error in terms of the precise individual measurements taken (i.e., in contrast to a more global property like RIP).

**Active Learning and Low-Rank Estimation.** The active learning literature is vast, and a full survey is beyond the scope of this work. We focus in particular on active learning for dynamical systems, and problems with low-rank structure. The estimation of dynamical systems--the _system identification_ problem--is central to many areas of engineering and science [53]. The problem of actively designing inputs to effectively estimate the parameters of a dynamical system has been studied extensively for decades [54; 55; 56; 57; 58; 59; 60; 61]. More recently, a variety of provably efficient approaches have been developed for both linear [62; 63] and nonlinear [64; 65] systems. Other related work has considered active learning for latent variable models [66], which are often effective models of neural dynamics. As compared to these works, a key feature of our setting is the low-rank structure present in the data, which to our knowledge has not been previously studied within the active system identification literature.

Beyond dynamical systems, some attention has been devoted to active learning with low-rank structure, in particular works on low-rank bandits [67; 68; 69; 70]. While the setting considered in these works is somewhat different--they aim to solve a bandit problem, while we are interested in regression--they similarly seek to develop active learning approaches which make efficient use of low-rank structure. Also related is the work of [71], which shows that in the related sparse estimation setting, there does not exist more than a logarithmic gain to being adaptive. The results of this work are minimax, however--only applying to certain "hard" problems--and do not address the matrix recovery problem.

## 3 Preliminaries

Dataset Details.Neural population activity was recorded in mouse motor cortex using two-photon calcium imaging at 20Hz of a 1mm\(\times\)1mm field of view (FoV) containing 500-700 neurons. Each recording spanned approximately 25 minutes and 2000 photostimulation trials. In each trial, a 150ms photostimulus was delivered and was followed by a 600ms response period before the next trial began. Each photostimulus targeted a group of 10-20 randomly selected neurons, and a total of 100 unique photostimulation groups were defined for each experiment (\(\approx 20\) trials per group). We evaluate our techniques on four such datasets.

### Fitting Low-Rank Dynamical Models

We first seek to develop effective dynamical models of the neural activity in our photostimulation datasets. Obtaining such models will provide insight into which photostimuli are most informative, and gives us a means to evaluate the effectiveness of our active learning methods. We consider three classes of models: autoregressive (AR) models, low-rank AR models, and nonlinear RNN models. Results from fitting these models are shown in Figure 2. We describe the model details next.

At discrete time \(t\in\mathbb{N}\), we denote the true neural activity across the \(d\) imaged neurons as \(x_{t}\in\mathbb{R}^{d}\), the noisy, measured activity as \(y_{t}\in\mathbb{R}^{d}\), and the photostimulus intensity applied across those same \(d\) neurons as \(u_{t}\in\mathbb{R}^{d}\). Applying stimulus \(u_{t}\) influences the measured neural activity at the next timestep \(y_{t+1}\). However, just the snapshot \(y_{t}\) may not capture the full true _state_ of the neural population, which may include not just the current neural activity, but potentially also multiple orders of temporal derivatives. To capture these effects, we consider an AR-\(k\) model defined as:

\[x_{t+1}=\sum_{s=0}^{k-1}(A_{s}x_{t-s}+B_{s}u_{t-s})+v,\quad y_{t}=x_{t}+w_{t} \quad\text{with}\quad w_{t}\sim\mathcal{N}(0,\sigma^{2}I_{d}),\] (3.1)

Figure 1: (a) Two-photon imaging and holographic photostimulation platform (left) and a representative image frame (right). Purple circles indicate neurons photostimulated immediately before frame acquisition. Red and blue indicate increases and decreases of firing activity, respectively, relative to before photostimulation. (b) Example time series photostimulation inputs (top) and neural responses (bottom) from 100 randomly selected neurons (out of \(d=663\) recorded neurons identified in the FoV). (c) Neural responses \(y_{t}\) occupy a low-dimensional subspace. Singular values from a representative dataset’s demeaned neural activity data matrix (blue) indicate substantially more data variance residing in a few dozen dimensions (out of the full \(d=663\) dimensional neural activity space) than is expected by chance (orange, singular values when removing low-dimensional structure by shuffling time indices independently for each neuron; note clipped horizontal axis).

where \(A_{s}\in\mathbb{R}^{d\times d}\) and \(B_{s}\in\mathbb{R}^{d\times d}\) describe the coupling between neurons and stimulus at the time lag of \(s\) timesteps, \(s=0,\ldots,k-1\), and offset \(v\in\mathbb{R}^{d}\) accounts for baseline neural activity. Given input-observation pairs \(\{(u_{t},y_{t})\}_{t}\), the coefficients \(\{(A_{s},B_{s})_{s=0}^{k-1},v\}\) of (3.1) can be fit using least squares. Despite its simplicity, this linear model reproduces the recorded neural activity remarkably well (see "full rank" model of Figure 2).

Neural population dynamics are frequently reported as residing in a subspace of lower dimension than the total number of recorded neurons [72, 73, 74, 75, 76, 2, 17, 77, 2, 2, 17]. The population dynamics in our datasets are consistent with such low-dimensional structure, as indicated by the singular value spectrum in Figure 1(c). Inspired by this observation, we introduce a set of low-rank dynamical models, where each matrix of \(\{(A_{s},B_{s})_{s=0}^{k-1}\}\) is re-defined as diagonal plus low-rank. Explicitly, we parameterize \(A_{s}=D_{A_{s}}+U_{A_{s}}V_{A_{s}}^{\top}\) and \(B_{s}=D_{B_{s}}+U_{B_{s}}V_{B_{s}}^{\top}\), where \(D\in\mathbb{R}^{d\times d}\) with \(D_{ij}=0\) for all \(i\neq j\), \(U\in\mathbb{R}^{d\times r}\), and \(V\in\mathbb{R}^{d\times r}\) for predefined rank \(r\). The diagonal matrices account for substantial autocorrelation in each neuron's activity (\(D_{A_{s}}\)) and for the reliable response of each neuron to direct photostimulation (\(D_{B_{s}}\)), whereas the low-rank matrices \((UV^{\top})\) confer coupling between neurons. To fit these parameters, we optimize the following objective function with gradient descent over all parameters:

\[\operatorname*{minimize}_{A_{s},B_{s}\in\mathbb{R}^{d\times d},s=0,\ldots,k-1,v \in\mathbb{R}^{d}}\sum_{t=1}^{T}\big{(}y_{t+1}-\sum_{s=0}^{k-1}A_{s}y_{t-s}- \sum_{s=0}^{k-1}B_{s}u_{t-s}-v)^{2}.\] (3.2)

Figure 2 shows that these low-rank models perform comparably to the full rank versions in terms of predictive performance; indeed the rank \(r=35\) model appears almost indistinguishable from the full

Figure 2: Example data and cross-validated model predictions. (a) Roll-out predictions of the activity of an example neuron \(i\) using low-rank AR-\(k\) models (\(k=4\)) and GRU networks for 22 example data segments (3.3s per segment; segments separated by brief horizontal spaces). Each model’s predictions are seeded with the first \(k=4\) timesteps (200ms) of activity from \(d=663\) neurons and are then unrolled to predict the activity across all \(d\) neurons over the next 66 timesteps, given the full 70-timestep sequence of photostimulation to all \(d\) neurons. Most responses of neuron \(i\) are tied to “direct” photostimulation of neuron \(i\) (pink, first row of panels). Several “indirect responses” are tied to stimulation of other neurons \(j\neq i\) that influence neuron \(i\) through the population dynamics. To avoid showing all indirect stimuli (to \(d-1\) neurons), only select indirect stimuli are shown (green, second row of panels). (b) Receiver operator characteristic (ROC) curve of true-positive rate and false-positive rate for response detection are calculated on indirect responses only (left) and all direct and indirect responses (right). (c) Area under ROC curve (AUROC) and (d) mean square error (MSE) for all predictions.

rank model. From a statistical perspective, low-rank models have far fewer degrees of freedom, and hence require less data to fit.

To assess whether more expressive nonlinear models could be advantageous, we also fit a gated recurrent unit (GRU) network model, adapted from [22], as shown in Figure 2. Interestingly, the GRU model did not perform as well as the AR-\(k\) models, potentially due to the complexities of hyperparameter tuning. Therefore, we focus on linear models in the analysis that follows. Additional details on model fitting are provided in Appendix B.2.

### The Causal Connectivity Matrix

While we require dynamical models to predict the temporal evolution of the neural population activity, we are also interested in inferring how the activity of one recorded neuron causally influences the activity of the other recorded neurons. To address this need, we define a _causal connectivity matrix_, \(H\in\mathbb{R}^{d\times d}\), to be the mapping such that \(Hu\in\mathbb{R}^{d}\) quantifies the total response (across time) of each neuron to a single-timestep photostimulus \(u\). That is, \(\sum_{t=1}^{\infty}x_{t}=Hu\), where \(x_{1},x_{2},x_{3},\ldots\) are the neural activities generated by the population dynamics if \(u_{0}=u,u_{t\geq 1}=0\), and \(x_{t\leq 0}=x_{\infty}\) is the steady state or resting state of the system subject to no photostimulation. If the dynamics are linear, or more specifically follow (3.1), such a matrix \(H\) is guaranteed to exist, and can be formed by simply rolling out (3.1) with the appropriate initializations. While \(H\) is not explicitly constrained to be low-rank, if it is obtained from a low-rank AR-\(k\) model, it too will exhibit low-rank structure.

In our experimental paradigm, photostimulation acts as a causal perturbation to the population dynamics, and as such, our statistical framework is able to capture causal interactions, as opposed to merely correlative interactions. This is in contrast to the majority of work on neural population dynamics, which involves fitting dynamical models to passively obtained data. Due to the lack of causal manipulations in these studies, one cannot distinguish whether statistical relationships arise between neurons due to correlation (e.g., due to a shared upstream influence) versus causation (e.g., neuron \(i\) directly influences neuron \(j\)). Such correlative relationships are typically referred to as "functional connectivity"; we instead use the term "causal connectivity" to convey the additional causal interpretability afforded in our setting.

To fit \(H\), we could first fit \(\{\widehat{A}_{s},\widehat{B}_{s}\}_{s=0}^{k-1}\) and then use these as plug-in estimates for their true values to compute \(H\). Alternatively, we take a more direct approach inspired by the definition of \(H\) itself. By inspecting the raw data of Figure 2(a) and observing the rate at which each stimulated neuron returns to baseline activity, it is clear that the system mixes (i.e., forgets the past) quickly. This suggests that the total response due to input \(u\) asymptotes after some finite number of timesteps \(\tau\). Thus, we can apply some photostimulus \(u\in\mathbb{R}^{d}\) at time \(t=0\) and then measure the total response \(z=\sum_{t=1}^{\tau}y_{t}\), where \(y_{t}\in\mathbb{R}^{d}\) is the noisy measurement of the true neural response \(x_{t}\). If we repeat this for many pairs \(\{(u_{n},z_{n})\}_{n}\) then we can approximate \(H\) as

\[\widehat{H}:=\arg\min_{H^{\prime}}\sum_{n}\|z_{n}-H^{\prime}u_{n}\|_{2}^{2}.\]

In this work we adopt this latter approach. Since we believe \(H\) to be low rank, this amounts to a low-rank matrix recovery problem with matrix-vector observations. In the next section, we will describe how to adaptively choose \(\{u_{n}\}_{n}\) to estimate \(H\) using as few (stimulus, response) pairs as possible. Subsequently in Section 5, we will demonstrate that actively designing inputs to accelerate the learning of \(H\) effectively accelerates the learning of the full dynamics as well.

## 4 Active Learning of Low-Rank Matrices

In the previous section, we saw that estimating the causal connectivity matrix \(H\) induced by the neural population dynamics amounts to low-rank matrix recovery, where we apply some photostimulus \(u\in\mathbb{R}^{d}\) and observe the neural population response \(z\approx Hu\) plus noise. In this section we seek to understand how we should choose the photostimuli to estimate the causal connectivity as quickly as possible. To this end, in Section 4.1 we present novel results characterizing the estimation error of the nuclear norm regression estimator, and in Section 4.2 present an algorithm motivated by these results which seeks to actively estimate low-rank matrices. These results will directly motivate a procedure for designing photostimulation inputs.

To demonstrate the generality of our results, in Section 4.1 we consider a general matrix regression setting. In particular, let \(\Theta_{\star}\in\mathbb{R}^{d_{1}\times d_{2}}\) be a rank \(r\) (potentially non-square) matrix,some input matrix, and assume scalar observations:

\[z_{n}=\langle\Theta_{\star},\varphi_{n}\rangle+\eta_{n},\quad\eta_{n}\sim \mathcal{N}(0,1),\] (4.1)

where \(\langle\Theta_{\star},\varphi_{n}\rangle=\operatorname{tr}(\Theta_{\star}^{ \top}\varphi_{n})\) for \(\operatorname{tr}(\cdot)\) the trace of a matrix. Note that the setting considered in Section 3.2 is a special case of this observation model with \(\Theta_{\star}\gets H\) and, for each input stimulation \(u\), measuring the response of (4.1) to \(d\) inputs \(\varphi_{j}\) of the form \(\varphi_{j}\equiv\mathbf{e}_{j}u^{\top}\) for \(j=1,\ldots,d\).

Matrix Notation.We let \(\|\cdot\|_{\mathrm{F}},\|\cdot\|_{\mathrm{op}},\|\cdot\|_{\star}\) denote the Frobenius, operator, and nuclear norm of a matrix, respectively. \(\dagger\) denotes the pseudo-inverse of a matrix. \(\operatorname{vec}(\cdot)\) denotes the vectorization of a matrix, and \(\operatorname{mat}(\cdot)\) the inverse of the vectorization. We also let \(\triangle_{\mathcal{U}}\) denote the simplex--the set of distributions--over a set \(\mathcal{U}\).

### Constrained Nuclear Norm Estimator under Non-Isotropic Measurements

We are interested in understanding how we can effectively take into account the low-rank structure of \(\Theta_{\star}\), if our goal is to estimate \(\Theta_{\star}\) from the observations of (4.1). To this end, we consider the following nuclear-norm constrained least-squares estimator for \(\Theta_{\star}\):

\[\widehat{\Theta}=\operatorname*{arg\,min}_{\Theta\in\mathcal{K}}\|\Phi( \Theta)-z\|_{2}^{2}:=\sum_{n=1}^{N}(\langle\varphi_{n},\Theta\rangle-z_{n})^{ 2}\quad\text{for}\quad\mathcal{K}:=\{\Theta:\|\Theta\|_{\star}\leq\|\Theta_{ \star}\|_{\star}\},\] (4.2)

where here we let \(\Phi(\Theta_{\star})\in\mathbb{R}^{N}\) denote the vector where the \(n\)th element is \(\langle\varphi_{n},\Theta_{\star}\rangle\), and \(z=\Phi(\Theta_{\star})+\eta\) the vector of observations, for \(\eta\) the vector with elements \(\eta_{n}\). Define \(\Theta_{\star}=U\Sigma V^{\top}\) as the skinny SVD such that \(U\in\mathbb{R}^{d_{1}\times r}\), \(V\in\mathbb{R}^{d_{2}\times r}\), and consider the linear projection operators \(P_{\perp},P_{\parallel}:\mathbb{R}^{d_{1}\times d_{2}}\to\mathbb{R}^{d_{1} \times d_{2}}\) defined as:

\[P_{\perp}(M):=(I-UU^{\top})M(I-VV^{\top})\quad\text{and}\quad P_{\parallel}(M ):=M-P_{\perp}(M),\]

for any \(M\in\mathbb{R}^{d_{1}\times d_{2}}\). We call \(P_{\parallel}\) the projection onto the _tangent space_ of \(\Theta_{\star}\). Note that the dimension of the range of \(P_{\parallel}\) is equal to just \(r(d_{1}+d_{2})-r^{2}\ll d_{1}d_{2}.\) We are now ready to state our main result on the estimation error of \(\widehat{\Theta}\), for \(\widehat{\Theta}\) as defined in (4.2).

**Theorem 1**.: _Define \(\mu:=\|(\Phi^{*}\Phi)^{1/2}((P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger })^{1/2}\|_{\mathrm{op}}\). Then with probability at least \(1-2\delta\):_

\[\|\widehat{\Theta}-\Theta_{\star}\|_{\mathrm{F}}\leq\frac{4}{1- \mu}\sqrt{\operatorname{tr}\bigl{(}(P_{\parallel}\Phi^{*}\Phi P_{\parallel}) ^{\dagger}\bigr{)}+2\|(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger}\|_ {\mathrm{op}}\log\frac{d_{1}d_{2}}{\delta}}\\ +4\|P_{\perp}(\Phi^{*}\Phi)^{1/2}\|_{\mathrm{op}}\|(P_{ \parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger}\|_{\mathrm{op}}(\sqrt{d_{1}}+ \sqrt{d_{2}}+\sqrt{2\log\frac{1}{\delta}}),\]

_where here \(\Phi^{*}\Phi(M):=\sum_{n}\varphi_{n}\langle\varphi_{n},M\rangle\) and \(\operatorname{tr}(\cdot)\) describes the sum of the eigenvalues of the linear operator \((P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger}:\mathbb{R}^{d_{1}\times d _{2}}\to\mathbb{R}^{d_{1}\times d_{2}}\)._

Theorem 1 provides a precise bound on the estimation error of the nuclear norm estimator under arbitrary inputs \(\{\varphi_{n}\}_{n}\). To the best of our knowledge, this is the first such characterization of this estimator. This characterization is particularly essential in active learning problems, such as the problem considered here, where it is critical that we understand precisely how the estimation error scales with different inputs, in order to determine which inputs will most effectively reduce the estimation error. As the observation model of Section 3.2 is a special case of the setting considered in (4.1) with \(\Theta_{\star}\gets H\), Theorem 1 provides a quantification of how quickly we can estimate the causal connectivity matrix given some set of inputs; we expand on the implications of this connection in Section 4.2.

Theorem 1 states that the estimation error of the estimator (4.2) scales (predominantly) with the strength of our inputs \(\varphi_{n}\) in the tangent space of \(\Theta_{\star}\). Indeed, if \([w_{1},\ldots,w_{d_{1}}]\) and \([v_{1},\ldots,v_{d_{2}}]\) are the left and right singular vectors of the full SVD of \(\Theta_{\star}\), and \(L\in\mathbb{R}^{d_{1}d_{2}\times r(d_{1}+d_{2})-r^{2}}\) is a matrix with orthonormal columns \(\operatorname{vec}(w_{i}v_{j}^{\top})\) for \((i,j):\{i\leq r\}\cup\{j\leq r\}\), then

\[\operatorname{tr}\bigl{(}(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger} \bigr{)}=\operatorname{tr}\bigl{(}\bigl{(}L^{\top}\sum_{n=1}^{N}\!\operatorname {vec}(\varphi_{n})\!\operatorname{vec}(\varphi_{n})^{\top}L\bigr{)}^{\dagger} \bigr{)},\]

so we see that the estimation error depends only on the scaling of \(\sum_{n=1}^{N}\!\operatorname{vec}(\varphi_{n})\!\operatorname{vec}(\varphi_{n}) ^{\top}\) in the space spanned by \(\operatorname{vec}(u_{i}v_{j}^{\top})\) for \(i\leq r\) or \(j\leq r\)--the tangent space to \(\Theta_{\star}\). As an example of how this scales, assume that for \(n=1,\ldots,N\) the entries of each \(\varphi_{n}\) are IID \(\mathcal{N}(0,1)\) and \(N\geq r(d_{1}+d_{2})-r^{2}\)Then \(\mu\approx 0,\,\operatorname{tr}\bigl{(}(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{ \dagger}\bigr{)}\approx\frac{r(d_{1}+d_{2})-r^{2}}{N}\), \(\|(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger}\|_{\mathrm{op}}\approx\frac {1}{N}\), and \(\|P_{\perp}(\Phi^{*}\Phi)^{1/2}\|_{\mathrm{op}}\approx\sqrt{N}\). This translates to a bound of \(\|\widehat{\Theta}-\Theta_{\star}\|_{\mathrm{F}}^{2}\leq\frac{r(d_{1}+d_{2})- r^{2}+\log(1/\delta)}{N}\). Critically, we see that this does not scale with the total number of parameters, \(d_{1}d_{2}\), but instead with \(r(d_{1}+d_{2})\), which could be much smaller. The following result, due to [78], provides a lower bound on the estimation error of any unbiased estimator, and shows that the rate obtained by Theorem 1 is essentially unimprovable.

**Theorem 2** (Corollary 1 of [78]).: _For unbiased estimator \(\widehat{\Theta}\), \(\mathbb{E}[\|\widehat{\Theta}-\Theta_{\star}\|_{\mathrm{F}}^{2}]\geq\operatorname {tr}\bigl{(}(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger}\bigr{)}\)._

### Active Learning for Low-Rank Matrix Estimation

Given the above characterization, we turn now to the active learning problem: how can we best choose our inputs \(\varphi_{n}\) to speed up estimation error of \(\Theta_{\star}\)? For simplicity, rather than the general matrix regression setting of (4.1), we consider here the vector regression case, as this is the setting of interest in learning the causal connectivity. In particular, assume that we play some \(u_{n}\in\mathbb{R}^{d_{2}}\) and observe \(z_{n}=\Theta_{\star}u_{n}+\eta_{n}\), for \(\eta_{n}\sim\mathcal{N}(0,I_{d_{1}})\). A single vector observation corresponds to observing \(d_{1}\) observations from (4.1), the responses to the matrix inputs \(\varphi_{j}\equiv\mathbf{e}_{j}u_{n}^{\top}\) for \(j=1,\ldots,d_{1}\). Assume that \(\Theta_{\star}\) is rank \(r\) and let \(V_{0}:=[v_{1},\ldots,v_{r}]\) denote the first \(r\) right singular vectors of the full SVD of \(\Theta_{\star}\). Then we have that:

\[\operatorname{tr}\bigl{(}(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger} \bigr{)}=(d_{1}-r)\cdot\operatorname{tr}\bigl{(}(V_{0}^{\top}\Sigma_{N}V_{0}) ^{\dagger}\bigr{)}+r\cdot\operatorname{tr}\bigl{(}(\Sigma_{N})^{\dagger} \bigr{)},\quad\Sigma_{N}:=\sum_{n=1}^{N}u_{n}u_{n}^{\top}.\] (4.3)

This calculation, combined with Theorem 1, shows that the estimation error of \(\Theta_{\star}\) scales with a weighting of two terms: one quantifying the amount of input energy we put into directions spanned by the top-\(r\) right singular vectors, and one that quantifies the amount of input energy played isotropically (that is, in all directions). Note, however, that the input energy played in directions \(V_{0}\) is weighted by a factor of \(d_{1}-r\approx d_{1}\), much larger weight than the weight of \(r\) given to the term quantifying the isotropic input energy. This suggests that, to minimize the estimation error of \(\Theta_{\star}\), we should focus a large portion of our sampling budget to target the directions spanned by the top-\(r\) right singular vectors of \(\Theta_{\star}\).

This strategy admits a transparent intuition. If \(\Theta_{\star}\) is rank-\(r\) and some vector \(u\) is orthogonal to the top-\(r\) right singular vectors of \(\Theta_{\star}\), then \(\Theta_{\star}u=0\). Thus, if we _know_ what subspace the top-\(r\) right singular vectors of \(\Theta_{\star}\) span, playing \(u\) orthogonal to this subspace gives us no additional information about \(\Theta_{\star}\); in this case we should instead play \(u\) aligned with this subspace. This is precisely what the first term in (4.3) quantifies, while the second term reflects the fact that we must also estimate the subspace spanned by the top-\(r\) right singular vectors of \(\Theta_{\star}\), for which playing inputs isotropically is optimal.

In general, as we do not know \(\Theta_{\star}\), we do not know \(V_{0}\), and so cannot directly compute inputs minimizing (4.3). To circumvent this, we consider the following iterative procedure, which alternates between obtaining an estimate of \(\Theta_{\star}\), \(\widehat{\Theta}\), and then playing the inputs that would minimize the estimation error--minimize (4.3)--if \(\widehat{\Theta}\) were the true parameter. We present this procedure in Algorithm 1.

```
1:input: horizon \(N\), feasible inputs \(\mathcal{U}\), rank \(r\), feasible set \(\mathcal{K}\)
2:\(\widehat{\Theta}_{1}\gets I,\mathfrak{D}\leftarrow\emptyset\)
3:for\(\ell=1,2,3,\ldots,\lceil\log_{2}N\rceil\)do
4: Let \(\widehat{V}_{0}\) denote the top-\(r\) right singular vectors of \(\widehat{\Theta}_{\ell}\) and \(\boldsymbol{\Lambda}(\lambda):=\sum_{u\in\mathcal{U}}\lambda_{u}uu^{\top}\), solve: \[\lambda_{\ell}^{V}\leftarrow\operatorname{arg\,min}_{\lambda\in\Delta_{\ell }}\operatorname{tr}\bigl{(}(\widehat{V}_{0}^{\top}\boldsymbol{\Lambda}( \lambda)\widehat{V}_{0})^{\dagger}\bigr{)},\quad\lambda_{\ell}^{\mathrm{ unif}}\leftarrow\operatorname{arg\,min}_{\lambda\in\Delta_{\ell}} \operatorname{tr}\bigl{(}\boldsymbol{\Lambda}(\lambda)^{\dagger}\bigr{)}\]
5: For \(2^{\ell}\) steps, play input \(u_{n}\sim\frac{1}{2}\lambda_{\ell}^{V}+\frac{1}{2}\lambda_{\ell}^{\mathrm{ unif}}\), add observations to \(\mathfrak{D}\)
6: Update estimate of \(\Theta_{\star}\): \(\widehat{\Theta}_{\ell+1}\leftarrow\operatorname{arg\,min}_{\Theta\in \mathcal{K}}\sum_{(u,z)\in\mathfrak{D}}\|z-\Theta u\|_{\mathrm{F}}^{2}\)
7:return\(\widehat{\Theta}_{\ell+1}\). ```

**Algorithm 1** Active Estimation of Low-Rank Matrices

At every iteration \(\ell\), Algorithm 1 computes two distributions over inputs: \(\lambda_{\ell}^{V}\), which targets the top-\(r\) right singular vectors of our current estimate of \(\Theta_{\star}\), and \(\lambda_{\ell}^{\mathrm{unif}}\), which plays inputs isotropically, covering all directions. Rather than playing these distributions according to the precise weighting given in (4.3), we instead found it most effective to mix them at an equal rate. As we do not initially know which directions are spanned by the top-\(r\) right singular vectors of \(\Theta_{\star}\), \(\lambda_{\ell}^{V}\) is not guaranteed to target the correct directions, especially in early iterations. \(\lambda_{\ell}^{\mathrm{unif}}\) plays inputs in every direction,however, and thus, even if \(\lambda_{\ell}^{V}\) is not aligned to the top-\(r\) right singular vectors of \(\Theta_{\star}\), will ensure sufficient energy is still being played in the correct directions to allow for learning. Given this, we increase the weight of playing \(\lambda_{\ell}^{\mathrm{unif}}\) relative to that prescribed by (4.3).

Note that the computation of the optimal inputs is a form of _\(A\)-optimal experiment design_[79], which in general can be efficiently solved by, for example, the Frank-Wolfe algorithm [80]. Furthermore, efficient procedures for solving nuclear-norm regression problems exist, allowing us to estimate \(\widehat{\Theta}_{\ell+1}\) on line 6 efficiently [81]. We remark that Algorithm 1 takes as input \(r\), the rank of \(\Theta_{\star}\), and \(\mathcal{K}\), which requires knowledge of \(\|\Theta_{\star}\|_{\ast}\). In general, when these quantities are unknown, they can be chosen via standard cross-validation procedures.

We emphasize again that the setting considered here corresponds precisely to the setting considered in Section 3.2 with \(\Theta_{\star}\gets H\), \(u_{n}\) the input stimulation patterns, and \(z_{n}\) the observed neural response to input \(u_{n}\). As such, if the causal connectivity \(H\) is low rank, Algorithm 1 and the preceding results provide a methodology to select input stimuli to most efficiently estimate \(H\). In the following section, we will apply this to our photostimulation datasets.

## 5 Active Learning for Estimating Neural Population Dynamics

We return now to the problem of photostimulus design for learning neural population dynamics, and seek to apply the insights of Section 4 to this setting. We present two sets of experiments. In Section 5.1 we use real data to fit a model of the population dynamics, treat this fitted model as a _simulator_ for the true dynamics, and then demonstrate that we can learn the causal connectivity matrix \(H\) of this simulator faster using active inputs versus passive inputs. Then, in Section 5.2 we split our real data into 750ms long trials of (stimulus, response) pairs (see Section 3) and demonstrate that our active learning algorithm is able to improve the performance of learning dynamical models on real data by adaptively selecting which trials to observe, training a model on the observed trials, and evaluating on a hold-out set of unseen trials. Here we find that our approach is able to learn an accurate model of the dynamics more quickly than non-adaptive approaches.

### Active Learning on Data-Driven Neural Population Dynamics Simulator

In Section 3.1, we demonstrated that photostimulation data can be effectively reconstructed using an AR-\(k\) dynamics model. Given the effectiveness of these models at fitting our data, in this section we treat them as a simulated representation of our true dynamics, allowing us to query them arbitrarily as a stand-in for the ground truth dynamics, and seek to determine whether carefully choosing the photostimulation pattern allows for efficient estimation of the causal connectivity matrix \(H\).

**Experiment Details.** To obtain models of the population dynamics to use for simulation, we fit an AR-\(k\) model to each dataset as described in Section 3.1. In all cases we use an AR-\(k\) model with order \(k=4\). We do one run of the experiments using low-rank model parameters \(UV^{\top}\) with rank \(r=15\), and then repeat the experiments using \(r=35\). In each case, we simulate \(N=10000\) trials, where each trial corresponds to applying a photostimulus and observing the response for \(\tau=15\) timesteps, simulating our true data generation process. To simulate measurement noise and other trial-to-trial variability in neural responses, we corrupt the observations with Gaussian random noise. Motivated by the empirically observed fast decay of population dynamics in our datasets, we reset the initial state of the simulator at each new trial.

In practice, both the magnitude of the stimuli and number of neurons stimulated at each timestep are constrained by the photostimulation platform. To reflect this limitation in our simulator, we constrain our inputs to lie in \([0,1]\), and also impose a sparsity penalty. Precisely, we choose the input set \(\mathcal{U}\) in Algorithm 1 to be \(\mathcal{U}:=\{u\in[0,1]^{d}\ :\ \|u\|_{1}\leq\gamma\}\), for some value \(\gamma>0\) (which we set to \(\gamma=30\)). While this does not explicitly constrain inputs to be sparse, it can be efficiently optimized over, and we found in practice that the optimal inputs within this constraint set are in general at least \(2\gamma\)-sparse. As baseline methods, we consider the following:

* _Random Stimulation_: At each trial \(n\), choose \(\gamma\) neurons at random, and set corresponding elements of \(u_{n}\) to 1.
* _Uniform Stimulation_: Compute \(\lambda^{\mathrm{unif}}\) as in Algorithm 1 and play inputs \(u_{n}\sim\lambda^{\mathrm{unif}}\) for all \(n\).

Our goal is to estimate the causal connectivity matrix \(H\) induced by our learned dynamics (see Section 3.2). In practice, we are most interested in estimating the _off-diagonal_ elements of \(H\), as these correspond to causal interactions between different neurons. To this end, we consider the error metric \(\frac{\|M\odot(H-\widehat{H})\|_{F}}{\|M\odot H\|_{F}}\), for \(\widehat{H}\) our estimate of \(H\), \(M\) a matrix with all entries \(1\) except its diagonal, which is \(0\), and \(\odot\) element-wise multiplication.

**Experiment Results.** We present our results in Figure 3. As can be seen, across all learned simulators and rank levels, our active learning approach yields a non-trivial gain over both baseline approaches. In particular, on Mouse 1 and both datasets for Mouse 3, we observe a gain of between \(1.5\)-\(2\times\) over baselines--that is, to achieve a given estimation error, our approach requires between \(1.5\)-\(2\times\) fewer samples than baseline methods. This demonstrates the effectiveness of our active learning procedure for estimating low-rank matrices--our method is able to exploit the low-rank structure present in the underlying dynamics to speed up estimation, as compared to methods which do not take into account this structure. Furthermore, it shows that on a realistic simulation of neural population dynamics, we can effectively design stimuli to speed up the estimation of the dynamics.

### Active Ranking of Real Data Observations

As described in Section 3, each of our datasets consist of roughly 2000 (stimulus, response) trials. In an online photostimulation experiment, we would choose the photostimulus actively for each trial. Here we seek to simulate this process using real experimental data, but offline, by choosing the _ordering_ of the trials available in our pre-collected datasets. This serves as a testbed for active learning procedures: if we can more efficiently learn models in this offline setting, that is a strong indication that we should also see gains in online experiments. Indeed, those gains may be even greater online because in our offline setting we are severely restricted to choosing from only 100 candidate stimulation patterns. Thus, we interpret the results in this section as a _lower bound_ on the performance we might expect online.

To validate this approach, we randomly choose 20 (out of the 100 total) unique photostimulation patterns and set aside a test set containing all 20 repeated trials of those photostimuli. This creates an 80%/20% train-test split of non-overlapping stimulus patterns. For \(\mathfrak{D}_{\mathrm{train}}\) and \(\mathfrak{D}_{\mathrm{test}}\) our train and test datasets, respectively, we consider the following query model:

```
1:\(\mathfrak{D}\leftarrow\emptyset\)
2:for trials \(n=1,2,\ldots,|\mathfrak{D}_{\mathrm{train}}|\)do
3: Choose input trajectory \(\tau\in\mathfrak{D}_{\mathrm{train}}\), set \(\mathfrak{D}\leftarrow\mathfrak{D}\cup\{\tau\}\), \(\mathfrak{D}_{\mathrm{train}}\leftarrow\mathfrak{D}_{\mathrm{train}}\backslash \{\tau\}\)
4: Estimate model using data in \(\mathfrak{D}\), and compute prediction MSE of model on \(\mathfrak{D}_{\mathrm{test}}\) ```

Figure 3: Performance of active stimulation design on estimating learned dynamics model. For each mouse dataset, we fit a low-rank AR-\(k\) model as described in Section 3.1 (for ranks of 15 and 35, and \(k=4\)). Treating this as a simulator of the true dynamics, we compare our active stimulation design procedure (Active, Algorithm 1) to randomly choosing groups of neurons to excite (Random), and uniformly allocating stimulation across all neurons (Uniform), and plot how effectively each is able to estimate the connectivity of the simulator dynamics. For each figure and method we average over 20 trials, and plot the mean performance with error bars denoting 1 standard error (note that the error bars are barely visible as the standard deviation is very small).

We fit a dynamics model to the current set of observed trials, as described in Section 3.1, and use this model to predict the response of the true system on the held-out test inputs, computing the mean-squared error of these predictions as our metric. We apply a variant of Algorithm 1, described in more detail in Appendix B.4, and adapted to the query model above. In particular, to apply Algorithm 1 to learning a full dynamical system, we choose our inputs to target the right singular vectors of \(B_{s}\) in (3.1). As a baseline method, we consider the procedure which randomly chooses an unobserved segment from \(\mathfrak{D}_{\mathrm{train}}\) at each iteration.

We run the above experiment for 20 different randomly generated train-test splits on each dataset, and present our results in Figure 4, providing the results for the average performance over the train-test splits, as well as the best- and worst-case splits for active learning performance. As these results illustrate, though active learning does not give a substantial gain in all cases, in many cases it is able to give a gain of up to a factor of \(2\times\) in the number of samples required over the random baseline, and in the worst case, matches the baseline performance. This further confirms that taking into account low-rank structure when choosing which measurements to take can improve estimation rates, and, we believe, is a strong indicator that our active learning procedure would speed up estimation of neural population dynamics in online settings.

## 6 Discussion

In this work, we have developed a principled approach to active learning of photostimulation inputs for the identification of neural population dynamics and connectivity. We discuss three limitations of our approach, which each suggest potential future directions. First, we have considered active learning of the causal connectivity matrix and minimization of prediction error, both uniformly across all recorded neurons. Future work may focus on more specific scenarios, such as targeting particular dimensions of the neural activity space or changes in connectivity due to learning. Second, while we found that linear dynamics fit our data remarkably well, this may not always be the case. Does our methodology effectively scale to nonlinear dynamics? Finally, our real-data experiments were performed offline. Future work may explore running our algorithm online during closed-loop photostimulation experiments.

Figure 4: Performance of active learning estimating photostimulation response on held-out trials. Each mouse dataset is split into trials corresponding to a stimulus-response pair, and we consider how these trials might be ordered to obtain more effective estimates with fewer training data trials, simulating the active learning process. Our approach (Active) is motivated by the low-rank excitation criteria of Algorithm 1 (see Appendix B.4 for more details) and we compare with randomly choosing which trial to observe next (Random). We plot the accuracy of the learned model in predicting neural responses on held-out test trials. We consider 20 different train-test splits (with 20 trials per split), and include plots of average performance across these splits, as well as splits where Active has the largest and smallest improvement over Random. We plot error bars denoting 1 standard error (note again that the error bars are barely visible as the standard deviation is very small).

#### Acknowledgments

This work was supported by NSF DMR award 2308979 to the University of Washington Materials Science Research Center (AW & KJ), the Shanahan Foundation Fellowship (LM & MSB), the Paul G. Allen Foundation (MR, KS, KD & MDG), NIH award R00-MH121533 (MDG), NSF CCF award 2007036 (KJ), and NSF CAREER award 2141511 (KJ).

## References

* [1]S. Vyas, M. D. Golub, D. Sussillo, and K. V. Shenoy (2020) Computation through neural population dynamics. Annual Review of Neuroscience43, pp. 249-275. Cited by: SS1.
* [2]M. M. Churchland, J. P. Cunningham, M. T. Kaufman, J. D. Foster, P. Nuyujukian, S. I. Ryu, and K. V. Shenoy (2012) Neural population dynamics during reaching. Nature487 (7405), pp. 51-56. Cited by: SS1.
* [3]D. Sussillo, M. M. Churchland, M. T. Kaufman, and K. V. Shenoy (2015) A neural network that finds a naturalistic solution for the production of muscle activity. Nature Neuroscience18 (7), pp. 1025-1033. Cited by: SS1.
* [4]N. Li, K. Daie, K. Svoboda, and S. Druckmann (2016) Robust neuronal dynamics in premotor cortex during motor planning. Nature532 (7600), pp. 459-464. Cited by: SS1.
* [5]E. D. Remington, D. Narain, E. A. Hosseini, and M. Jazayeri (2018) Flexible sensorimotor computations through rapid reconfiguration of cortical dynamics. Neuron98 (5), pp. 1005-1019. Cited by: SS1.
* [6]H. K. Inagaki, S. Chen, M. C. Ridder, P. Sah, N. Li, Z. Yang, H. Hasanbegovic, Z. Gao, C. R. Gerfen, and K. Svoboda (2022) A midbrain-thalamus-cortex circuit reorganizes cortical dynamics to initiate movement. Cell185 (6), pp. 1065-1081. Cited by: SS1.
* [7]V. Mante, D. Sussillo, K. V. Shenoy, and W. T. Newsome (2013) Context-dependent computation by recurrent dynamics in prefrontal cortex. Nature503 (7474), pp. 78-84. Cited by: SS1.
* [8]F. Carnevale, V. de Lafuente, R. Romo, O. Barak, and N. Parga (2015) Dynamic control of response criterion in premotor cortex during perceptual detection under temporal uncertainty. Neuron86 (4), pp. 1067-1077. Cited by: SS1.
* [9]K. Mohan, O. Zhu, and D. J. Freedman (2021) Interaction between neuronal encoding and population dynamics during categorization task switching in parietal cortex. Neuron109 (4), pp. 700-712. Cited by: SS1.
* [10]A. Finkelstein, L. Fontolan, M. N. Economo, N. Li, S. Romani, and K. Svoboda (2021) Attractor dynamics gate cortical information flow during decision-making. Nature Neuroscience24 (6), pp. 843-850. Cited by: SS1.
* [11]W. Chaisangmongkon, S. K. Swaminathan, D. J. Freedman, and X. Wang (2017) Computing by robust transience: how the fronto-parietal network performs sequential, category-based decisions. Neuron93 (6), pp. 1504-1517. Cited by: SS1.
* [12]A. Nair, T. Karigo, B. Yang, S. Ganguli, M. J. Schnitzer, S. W. Linderman, D. J. Anderson, and A. Kennedy (2023) An approximate line attractor in the hypothalamus' encodes an aggressive state. Cell186 (1), pp. 178-193. Cited by: SS1.
* [13]S. Vyas, N. Even-Chen, S. D. Stavisky, S. I. Ryu, P. Nuyujukian, and K. V. Shenoy (2018) Neural population dynamics underlying motor learning transfer. Neuron97 (5), pp. 1177-1186. Cited by: SS1.
* [14]B. A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [15]S. V. Vyas, N. Even-Chen, S. D. Stavisky, S. I. Ryu, P. Nuyujukian, and K. V. Shenoy (2018) Neural population dynamics underlying motor learning transfer. Neuron97 (5), pp. 1177-1186. Cited by: SS1.
* [16]B. V. Shoney, A. D. Degenhart, E. M. Grigsby, A. Motiwala, N. T. McClain, P. J. Marino, B. Yu, and A. P. Batista (2024) Dynamical constraints on neural population activity. bioRxiv, pp. 2024-01. Cited by: SS1.
* [17]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [18]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [19]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [20]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [21]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [22]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [23]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [24]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [25]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [26]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [27]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [28]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [29]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [30]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [31]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [32]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [33]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [34]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischiati, W. Guo, M. Kabra, N. Verma, B. Mensh, K. Branson, and A. W. Hantman (2020) Cortical pattern generation during dexterous movement is input-driven. Nature577 (7790), pp. 386-391. Cited by: SS1.
* [35]A. Sauerbrei, J. Guo, J. D. Cohen, M. Mischi* Yu et al. [2009] Byron M Yu, John P Cunningham, Gopal Santhanam, Stephen I Ryu, Krishna V Shenoy, and Maneesh Sahani. Gaussian-process factor analysis for low-dimensional single-trial analysis of neural population activity. _Journal of Neurophysiology_, 102(1):614-635, 2009.
* Macke et al. [2011] Jakob H Macke, Lars Buesing, John P Cunningham, Byron M Yu, Krishna V Shenoy, and Maneesh Sahani. Empirical models of spiking in neural populations. _Advances in Neural Information Processing Systems_, 24, 2011.
* Archer et al. [2014] Evan W Archer, Urs Koster, Jonathan W Pillow, and Jakob H Macke. Low-dimensional models of neural population activity in sensory cortical circuits. _Advances in Neural Information Processing Systems_, 27, 2014.
* Linderman et al. [2016] Scott Linderman, Ryan P Adams, and Jonathan W Pillow. Bayesian latent structure discovery from multi-neuron recordings. _Advances in Neural Information Processing Systems_, 29, 2016.
* Gao et al. [2016] Yuanjun Gao, Evan W Archer, Liam Paninski, and John P Cunningham. Linear dynamical neural population models through nonlinear embeddings. _Advances in Neural Information Processing Systems_, 29, 2016.
* Pandarianath et al. [2018] Chethan Pandarianath, Daniel J O'Shea, Jasmine Collins, Rafal Jozefowicz, Sergey D Stavisky, Jonathan C Kao, Eric M Trautmann, Matthew T Kaufman, Stephen I Ryu, Leigh R Hochberg, Jaimie M Henderson, Krishna V Shenoy, Larry F Abbott, and David Sussillo. Inferring single-trial neural population dynamics using sequential auto-encoders. _Nature Methods_, 15(10):805-815, 2018.
* Glaser et al. [2020] Joshua Glaser, Matthew Whiteway, John P Cunningham, Liam Paninski, and Scott Linderman. Recurrent switching dynamical systems models for multiple interacting neural populations. _Advances in Neural Information Processing Systems_, 33:14867-14878, 2020.
* Kim et al. [2021] Timothy D Kim, Thomas Z Luo, Jonathan W Pillow, and Carlos D Brody. Inferring latent dynamics underlying neural population activity via neural differential equations. In _International Conference on Machine Learning_, pages 5551-5561. PMLR, 2021.
* Karniol-Tambour et al. [2022] Orren Karniol-Tambour, David M Zoltowski, E Mika Diamanti, Lucas Pinto, David W Tank, Carlos D Brody, and Jonathan W Pillow. Modeling communication and switching nonlinear dynamics in multi-region neural activity. _bioRxiv_, pages 2022-09, 2022.
* O'Shea et al. [2022] Daniel J O'Shea, Lea Duncker, Werapong Goo, Xulu Sun, Saurabh Vyas, Eric M Trautmann, Ilka Diester, Charu Ramakrishnan, Karl Deisseroth, Maneesh Sahani, et al. Direct neural perturbations reveal a dynamical mechanism for robust computation. _bioRxiv_, pages 2022-12, 2022.
* Keshtkaran et al. [2022] Mohammad Reza Keshtkaran, Andrew R Sedler, Raeed H Chowdhury, Raghav Tandon, Diya Basrai, Sarah L Nguyen, Hansem Sohn, Mehrdad Jazayeri, Lee E Miller, and Chethan Pandarianath. A large-scale neural network training framework for generalized estimation of single-trial population dynamics. _Nature Methods_, 19(12):1572-1577, 2022.
* Valente et al. [2022] Adrian Valente, Jonathan W. Pillow, and Srdjan Ostojic. Extracting computational mechanisms from neural data using low-rank RNNs. In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and Kyunghyun Cho, editors, _Advances in Neural Information Processing Systems_, 2022.
* Pellegrino et al. [2023] Arthur Pellegrino, N Alex Cayco Gajic, and Angus Chadwick. Low tensor rank learning of neural dynamics. _Advances in Neural Information Processing Systems_, 36:11674-11702, 2023.
* Durstewitz et al. [2023] Daniel Durstewitz, Georgia Koppe, and Max Ingo Thurm. Reconstructing computational system dynamics from neural data with recurrent neural networks. _Nature Reviews Neuroscience_, 24(11):693-710, 2023.
* Lee et al. [2023] Hyun Dong Lee, Andrew Warrington, Joshua Glaser, and Scott Linderman. Switching autoregressive low-rank tensor models. _Advances in Neural Information Processing Systems_, 36:57976-58010, 2023.
* Galgali et al. [2023] Aniruddh R Galgali, Maneesh Sahani, and Valerio Mante. Residual dynamics resolves recurrent contributions to neural computation. _Nature Neuroscience_, 26(2):326-338, 2023.
* Sani et al. [2024] Omid G Sani, Bijan Pesaran, and Maryam M Shanechi. Dissociative and prioritized modeling of behaviorally relevant neural dynamics using recurrent neural networks. _Nature Neuroscience_, pages 1-13, 2024.

* [34] Adam M Packer, Lloyd E Russell, Henry WP Dalgleish, and Michael Hausser. Simultaneous all-optical manipulation and recording of neural circuit activity with cellular resolution in vivo. _Nature methods_, 12(2):140-146, 2015.
* [35] Zihui Zhang, Lloyd E Russell, Adam M Packer, Oliver M Gauld, and Michael Hausser. Closed-loop all-optical interrogation of neural circuits in vivo. _Nature methods_, 15(12):1037-1040, 2018.
* [36] Selmaan N Chettih and Christopher D Harvey. Single-neuron perturbations reveal feature-specific competition in v1. _Nature_, 567(7748):334-340, 2019.
* [37] James H Marshel, Yoon Seok Kim, Timothy A Machado, Sean Quirin, Brandon Benson, Jonathan Kadmon, Cephra Raja, Adelaide Chibukhchyan, Charu Ramakrishnan, Masatoshi Inoue, et al. Cortical layer-specific critical dynamics triggering perception. _Science_, 365(6453):eaaw5202, 2019.
* [38] Luis Carrillo-Reid, Shuting Han, Weijian Yang, Alejandro Akrouh, and Rafael Yuste. Controlling visually guided behavior by holographic recalling of cortical ensembles. _Cell_, 178(2):447-457, 2019.
* [39] Kayvon Daie, Karel Svoboda, and Shaul Druckmann. Targeted photostimulation uncovers circuit motifs supporting short-term memory. _Nature Neuroscience_, 24(2):259-265, 2021.
* [40] Hilleel Adesnik and Lamiae Abdeladim. Probing neural codes with two-photon holographic optogenetics. _Nature Neuroscience_, 24(10):1356-1366, 2021.
* [41] Marcus Triplett, Marta Gajowa, Hilleel Adesnik, and Liam Paninski. Bayesian target optimisation for high-precision holographic optogenetics. _Advances in Neural Information Processing Systems_, 36, 2024.
* [42] Christopher A Baker, Yishai M Elyada, Andres Parra, and M McLean Bolton. Cellular resolution circuit mapping with temporal-focused excitation of soma-targeted channelrhodopsin. _Elife_, 5:e14193, 2016.
* [43] Laurence Aitchison, Lloyd Russell, Adam M Packer, Jinyao Yan, Philippe Castonguay, Michael Hausser, and Srinivas C Turaga. Model-based bayesian inference of neural activity and connectivity from all-optical interrogation of a neural circuit. _Advances in Neural Information Processing Systems_, 30, 2017.
* [44] Anne Draelos and John Pearson. Online neural connectivity estimation with noisy group testing. _Advances in Neural Information Processing Systems_, 33:7437-7448, 2020.
* [45] Travis A Hage, Alice Bosma-Moody, Christopher A Baker, Megan B Kratz, Luke Campagnola, Tim Jarsky, Hongkui Zeng, and Gabe J Murphy. Distribution and strength of interlaminar synaptic connectivity in mouse primary visual cortex revealed by two-photon optogenetic stimulation. _BioRxiv_, pages 2019-12, 2019.
* [46] Arseny Finkelstein, Kayvon Daie, Marton Rozsa, Ran Darshan, and Karel Svoboda. Connectivity underlying motor cortex activity during naturalistic goal-directed behavior. _bioRxiv_, pages 2023-11, 2023.
* [47] Mark M Churchland and Krishna V Shenoy. Delay of movement caused by disruption of cortical preparatory activity. _Journal of neurophysiology_, 97(1):348-359, 2007.
* [48] Nishal Shah, Sasidhar Madugula, Pawel Hottowy, Alexander Sher, Alan Litke, Liam Paninski, and EJ Chichilnisky. Efficient characterization of electrically evoked responses for neural interfaces. _Advances in Neural Information Processing Systems_, 32, 2019.
* [49] Yuxiao Yang, Shaoyu Qiao, Omid G Sani, J Isaac Sedillo, Breonna Ferrentino, Bijan Pesaran, and Maryam M Shanechi. Modelling and prediction of the dynamic responses of large-scale brain networks during direct electrical stimulation. _Nature biomedical engineering_, 5(4):324-345, 2021.
* [50] Emmanuel Candes and Benjamin Recht. Exact matrix completion via convex optimization. _Communications of the ACM_, 55(6):111-119, 2012.
* [51] Roman Vershynin. _High-dimensional probability: An introduction with applications in data science_, volume 47. Cambridge university press, 2018.
* [52] Martin J Wainwright. _High-dimensional statistics: A non-asymptotic viewpoint_, volume 48. Cambridge university press, 2019.

* [53] Lennart Ljung. _System identification_. Springer, 1998.
* [54] Raman Mehra. Optimal input signals for parameter estimation in dynamic systems-survey and new results. _IEEE Transactions on Automatic Control_, 19(6):753-768, 1974.
* [55] Laszlo Gerencser and Hakan Hjalmarsson. Adaptive input design in system identification. In _Proceedings of the 44th IEEE Conference on Decision and Control_, pages 4988-4993. IEEE, 2005.
* [56] Dimitrios Katselis, Cristian R Rojas, Hakan Hjalmarsson, and Mats Bengtsson. Application-oriented finite sample experiment design: A semidefinite relaxation approach. _IFAC Proceedings Volumes_, 45(16):1635-1640, 2012.
* [57] Ian R Manchester. Input design for system identification via convex relaxation. In _49th IEEE Conference on Decision and Control (CDC)_, pages 2041-2046. IEEE, 2010.
* [58] Cristian R Rojas, James S Welsh, Graham C Goodwin, and Arie Feuer. Robust optimal experiment design for system identification. _Automatica_, 43(6):993-1008, 2007.
* [59] Graham Clifford Goodwin and Robert L Payne. _Dynamic system identification: experiment design and data analysis_. Academic press, 1977.
* [60] Kristian Lindqvist and Hakan Hjalmarsson. Identification for control: Adaptive input design using convex optimization. In _Proceedings of the 40th IEEE Conference on Decision and Control (Cat. No. 01CH37228)_, volume 5, pages 4326-4331. IEEE, 2001.
* [61] Laszlo Gerencser, Jonas Martensson, and Hakan Hjalmarsson. Adaptive input design for arx systems. In _2007 European Control Conference (ECC)_, pages 5707-5714. IEEE, 2007.
* [62] Andrew Wagenmaker and Kevin Jamieson. Active learning for identification of linear dynamical systems. In _Conference on Learning Theory_, pages 3487-3582. PMLR, 2020.
* [63] Andrew J Wagenmaker, Max Simchowitz, and Kevin Jamieson. Task-optimal exploration in linear dynamical systems. In _International Conference on Machine Learning_, pages 10641-10652. PMLR, 2021.
* [64] Horia Mania, Michael I Jordan, and Benjamin Recht. Active learning for nonlinear system identification with guarantees. _J. Mach. Learn. Res._, 23:32-1, 2022.
* [65] Andrew Wagenmaker, Guanya Shi, and Kevin G Jamieson. Optimal exploration for model-based rl in nonlinear systems. _Advances in Neural Information Processing Systems_, 36, 2024.
* [66] Aditi Jha, Zoe C Ashwood, and Jonathan W Pillow. Active learning for discrete latent variable models. _Neural Computation_, 36(3):437-474, 2024.
* [67] Sumeet Katariya, Branislav Kveton, Csaba Szepesvari, Claire Vernade, and Zheng Wen. Stochastic rank-1 bandits. In _Artificial Intelligence and Statistics_, pages 392-401. PMLR, 2017.
* [68] Kwang-Sung Jun, Rebecca Willett, Stephen Wright, and Robert Nowak. Bilinear bandits with low-rank structure. In _International Conference on Machine Learning_, pages 3163-3172. PMLR, 2019.
* [69] Yangyi Lu, Amirhossein Meisami, and Ambuj Tewari. Low-rank generalized linear bandit problems. In _International Conference on Artificial Intelligence and Statistics_, pages 460-468. PMLR, 2021.
* [70] Yue Kang, Cho-Jui Hsieh, and Thomas Chun Man Lee. Efficient frameworks for generalized low-rank matrix bandit problems. _Advances in Neural Information Processing Systems_, 35:19971-19983, 2022.
* [71] Ery Arias-Castro, Emmanuel J Candes, and Mark A Davenport. On the fundamental limits of adaptive sensing. _IEEE Transactions on Information Theory_, 59(1):472-481, 2012.
* [72] John P Cunningham and Byron M Yu. Dimensionality reduction for large-scale neural recordings. _Nature Neuroscience_, 17(11):1500-1509, 2014.
* [73] Patrick T Sadtler, Kristin M Quick, Matthew D Golub, Steven M Chase, Stephen I Ryu, Elizabeth C Tyler-Kabara, Byron M Yu, and Aaron P Batista. Neural constraints on learning. _Nature_, 512:423-426, 2014.
* [74] Saul Kato, Harris S Kaplan, Tina Schrodel, Susanne Skora, Theodore H Lindsay, Eviatar Yemini, Shawn Lockery, and Manuel Zimmer. Global brain dynamics embed the motor command sequence of caenorhabditis elegans. _Cell_, 163(3):656-669, 2015.

* [75] Matthew D Golub, Patrick T Sadtler, Emily R Oby, Kristin M Quick, Stephen I Ryu, Elizabeth C Tyler-Kabara, Aaron P Batista, Steven M Chase, and Byron M Yu. Learning by neural reassociation. _Nature Neuroscience_, 21(4):607-616, 2018.
* [76] Juan A Gallego, Matthew G Perich, Stephanie N Naufel, Christian Ethier, Sara A Solla, and Lee E Miller. Cortical population activity within a preserved neural manifold underlies multiple motor behaviors. _Nature Communications_, 9(1):4233, 2018.
* [77] Rishidev Chaudhuri, Berk Gercek, Biraj Pandey, Adrien Peyrache, and Ila Fiete. The intrinsic attractor manifold and population dynamics of a canonical cognitive circuit across waking and sleep. _Nature Neuroscience_, 22(9):1512-1520, 2019.
* [78] Gongguo Tang and Arye Nehorai. Lower bounds on the mean-squared error of low-rank matrix reconstruction. _IEEE Transactions on Signal Processing_, 59(10):4559-4571, 2011.
* [79] Friedrich Pukelsheim. _Optimal design of experiments_. SIAM, 2006.
* [80] Marguerite Frank and Philip Wolfe. An algorithm for quadratic programming. _Naval research logistics quarterly_, 3(1-2):95-110, 1956.
* [81] Maryam Fazel. _Matrix rank minimization with applications_. PhD thesis, PhD thesis, Stanford University, 2002.
* [82] Marius Pachitariu, Carsen Stringer, Sylvia Schroder, Mario Dipoppa, L Federico Rossi, Matteo Carandini, and Kenneth D Harris. Suite2p: beyond 10,000 neurons with standard two-photon microscopy. _BioRxiv_, page 061507, 2016.
* [83] Diederik P Kingma. Adam: A method for stochastic optimization. _arXiv preprint arXiv:1412.6980_, 2014.

## Appendix A Proof of Theorem 1

As \(\widehat{\Theta}\) is a minimizer, we have that \(\|\Phi(\widehat{\Theta})-z\|_{2}^{2}\leq\|\Phi(\Theta_{\star})-z\|_{2}^{2}\). Consequently,

\[\|\Phi(\Theta_{\star})-z\|_{2}^{2}<\min_{\Theta_{\star}+\Delta\in \mathcal{K}:\|\Delta\|_{\mathrm{F}}\geq\rho}\|\Phi(\Theta_{\star}+\Delta)-z\|_{ 2}^{2} \implies\widehat{\Theta}\not\in\{\Theta_{\star}+\Delta\in\mathcal{K}:\| \Delta\|_{\mathrm{F}}\geq\rho\}\] \[\implies\|\widehat{\Theta}-\Theta_{\star}\|_{\mathrm{F}}<\rho.\]

Thus, our strategy will attempt to find a minimum \(\rho>0\) that makes the first expression true. Equivalently, we show that the following quantity is non-positive

\[\|\Phi(\Theta_{\star})-z\|_{2}^{2}- \min_{\Theta_{\star}+\Delta\in\mathcal{K}:\|\Delta\|_{\mathrm{F }}\geq\rho}\|\Phi(\Theta_{\star}+\Delta)-z\|_{2}^{2}\] \[=-\Big{(}\min_{\Theta_{\star}+\Delta\in\mathcal{K}:\|\Delta\|_{ \mathrm{F}}\geq\rho}2\langle\Phi(\Delta),\Phi(\Theta_{\star})-z\rangle+\|\Phi( \Delta)\|_{2}^{2}\Big{)}\] \[=\max_{M+\Delta\in\mathcal{K}:\|\Delta\|_{\mathrm{F}}\geq\rho}2 \langle\Phi(\Delta),\eta\rangle-\|\Phi(\Delta)\|_{2}^{2}\] \[=\max_{t\geq\rho}\max_{M+\Delta\in\mathcal{K}:\|\Delta\|_{\mathrm{ F}}=t}2\langle\Phi(\Delta),\eta\rangle-\|\Phi(\Delta)\|_{2}^{2}.\]

Intuitively, when \(t\) is large, the quadratic term will dominate the inner product making the entire expression non-positive. We will employ a geometric fact about the nuclear norm ball.

**Lemma A.1**.: _Let \(\mathcal{K}=\{\Theta:\|\Theta\|_{\star}\leq\|\Theta_{\star}\|_{\star}\}\). If \(\Theta_{\star}+\Delta\in\mathcal{K}\) then \(\|P_{\perp}(\Delta)\|_{\star}\leq-\langle\Delta,UV^{\top}\rangle\leq\|P_{\parallel }(\Delta)\|_{\mathrm{F}}\)._

Proof.: If \(\|\Theta_{\star}+\Delta\|_{\star}>\|\Theta_{\star}\|_{\star}\) then \(\Theta_{\star}+\Delta\not\in\mathcal{K}\). By the convexity of the nuclear norm ball, we have that

\[\|\Theta_{\star}+\Delta\|_{\star}\geq\|\Theta_{\star}\|_{\star}+ \langle\Delta,UV^{\top}\rangle+\langle\Delta,W\rangle\qquad\forall W:W=P_{ \perp}(W)\,,\,\|W\|_{2}\leq 1.\]

Consequently, as the dual norm to \(\|\cdot\|_{2}\) is the nuclear norm \(\|\cdot\|_{\star}\) we have

\[\|\Theta_{\star}+\Delta\|_{\star}\geq\|\Theta_{\star}\|_{\star}+ \langle\Delta,UV^{\top}\rangle+\|P_{\perp}(\Delta)\|_{\star}.\]

Thus, if \(\langle\Delta,UV^{\top}\rangle+\|P_{\perp}(\Delta)\|_{\star}>0\) then \(\Theta_{\star}+\Delta\not\in\mathcal{K}\). Consequently, if \(\Theta_{\star}+\Delta\in\mathcal{K}\) then \(\langle\Delta,UV^{\top}\rangle+\|P_{\perp}(\Delta)\|_{\star}\leq 0\). 

Recalling that \(\|M\|_{\mathrm{F}}\leq\|M\|_{\star}\) for any matrix \(M\), an interesting consequence of the above lemma is that \(\|P_{\perp}(\Delta)\|_{\mathrm{F}}\leq\|P_{\parallel}(\Delta)\|_{\mathrm{F}}\) which implies \(\|P_{\parallel}(\Delta)\|_{\mathrm{F}}^{2}\leq\|\Delta\|_{\mathrm{F}}^{2}\leq 2\|P_{ \parallel}(\Delta)\|_{\mathrm{F}}^{2}\). That is, the total error is dominated by the error in the tanget space of \(\Theta_{\star}\).

Applying this lemma, we have that

\[\max_{M+\Delta\in K:\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(\Delta ),\eta\rangle- \|\Phi(\Delta)\|_{2}^{2}\leq\max_{\Delta:\|P_{\perp}(\Delta)\|_{ \star}\leq\|P_{\parallel}(\Delta)\|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2 \langle\Phi(\Delta),\eta\rangle-\|\Phi(\Delta)\|_{2}^{2}\] \[=\max_{\Delta:\|P_{\perp}(\Delta)\|_{\star}\leq\|P_{\parallel}( \Delta)\|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(P_{\parallel}( \Delta))+\Phi(P_{\perp}(\Delta)),\eta\rangle-\|\Phi(\Delta)\|_{2}^{2}\] \[\leq\max_{\Delta:\|P_{\perp}(\Delta)\|_{\star}\leq\|P_{\perp}( \Delta)\|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(P_{\parallel}( \Delta)),\eta\rangle-\|\Phi(\Delta)\|_{2}^{2}\] \[\qquad+\max_{\Delta:\|P_{\perp}(\Delta)\|_{\star}\leq\|P_{\perp}( \Delta)\|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(P_{\perp}(\Delta) ),\eta\rangle\]

where the equality uses the fact that \(\Delta=P_{\parallel}(\Delta)+P_{\perp}(\Delta)\) and the linearity of \(\Phi\). For any \(v\in\mathbb{R}^{N}\) we have

\[\langle\Phi(\Delta),v\rangle=\langle\Delta,\sum_{n=1}^{N}X_{n}v_ {n}\rangle=:\langle\Delta,\Phi^{\star}(v)\rangle\]

where \(\Phi^{\star}\) denotes the adjoint of \(\Phi\). We also recognize that the operator \(\Phi^{\star}\Phi:\mathbb{R}^{d_{1}\times d_{2}}\to\mathbb{R}^{d_{1}\times d_{2}}\) is also linear, defined as \(\Phi^{\star}\Phi(M)=\Phi^{\star}(\{\langle X_{n},M\rangle\}_{n})=\sum_{n=1}^{N}X _{n}\langle X_{n},M\rangle\). Consequently \((\Phi^{\star}\Phi)^{1/2}\) is well-defined and is the same operator as \(\Phi^{\star}\Phi\) after taking the square root of its eigenvalues.

The next three lemmas bound the two terms of above. Combining them yields the result of the theorem.

**Lemma A.2**.: _With probability at \(1-\delta\) we have_

\[\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq\|P_{\parallel}(\Delta)\|_{ \mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(P_{\perp}(\Delta)),\eta \rangle\leq 2t\|P_{\perp}(\Phi^{*}\Phi)^{1/2}\|_{\mathrm{op}}(\sqrt{d_{1}}+ \sqrt{d_{2}}+\sqrt{2\log(1/\delta)}).\]

Proof.: Computing this term amounts to bounding a Gaussian width. Begin by recognizing that by the non-expansive property of projections, \(\|P_{\parallel}(\Delta)\|_{\mathrm{F}}\leq\|\Delta\|_{\mathrm{F}}\leq t\) which results in the simplification:

\[\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq\|P_{\parallel}(\Delta) \|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(P_{\perp}(\Delta)),\eta\rangle \leq\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq t}2\langle\Phi(P_{ \perp}(\Delta)),\eta\rangle\] \[=\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq t}2\langle\sum_{n=1} ^{N}\eta_{n}X_{n},P_{\perp}(\Delta)\rangle\] \[=\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq t}2\langle P_{\perp} (\sum_{n=1}^{N}\eta_{n}X_{n}),P_{\perp}(\Delta)\rangle\] \[\leq 2t\|P_{\perp}(\sum_{n=1}^{N}\eta_{n}X_{n})\|_{\mathrm{op}}\]

using the fact that the operator norm and nuclear norm are dual to each other, and that the projection \(P_{\perp}\) is non-expansive. Note that

\[\sum_{n=1}^{N}\eta_{n}X_{n}=\text{mat}(\sum_{n=1}^{N}\eta_{n}\text{vec}(X_{i}) )=\text{mat}((\sum_{n=1}^{N}\text{vec}(X_{n})\text{vec}(X_{n})^{\top})^{1/2} \text{vec}(\eta^{\prime}))=:(\Phi^{*}\Phi)^{1/2}(\eta)\]

where \(\eta^{\prime}\in\mathbb{R}^{d_{1}\times d_{2}}\) with \(\eta^{\prime}_{i,j}\sim\mathcal{N}(0,1)\). We then observe that

\[\|P_{\perp}(\sum_{n=1}^{N}\eta_{n}X_{n})\|_{\mathrm{op}} =\|P_{\perp}(\text{mat}((\sum_{n=1}^{N}\text{vec}(X_{n})\text{vec} (X_{n})^{\top})^{1/2}\text{vec}(\eta^{\prime})))\|_{\mathrm{op}}\] \[\leq\|P_{\perp}(\Phi^{*}\Phi)^{1/2}\|_{\mathrm{op}}\|\eta^{ \prime}\|_{\mathrm{op}}\]

which completes the proof of the first claim. Recognizing that \(\|\eta^{\prime}\|_{\mathrm{op}}\) is just the largest singular value of a Gaussian matrix, we find that \(\mathbb{E}[\sup_{\|u\|_{2}\leq 1,\|v\|_{2}\leq 1}\langle uv^{\top},\eta \rangle]\leq\sqrt{d_{1}}+\sqrt{d_{2}}\) by Exercise 5.14 of [52]. Applying a sub-Gaussian tail bound completes the proof. 

**Lemma A.3**.: _Define \(\mu:=\|(\Phi^{*}\Phi)^{1/2}((P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{1/2}\|_ {\mathrm{op}}\). Then_

\[\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq\|P_{\parallel}(\Delta) \|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t} 2\langle\Phi(P_{\parallel}(\Delta)),\eta\rangle-\|\Phi( \Delta)\|_{2}^{2}\] \[\leq\max_{\Delta:\|P_{\parallel}(\Delta)\|_{\mathrm{F}}\geq t/ \sqrt{2}}2\langle\Phi(P_{\parallel}(\Delta)),\eta\rangle-(1-\mu)\|\Phi(P_{ \parallel}(\Delta))\|_{2}^{2}\]

Proof.: Recognizing that \(\Phi(\Delta)\in\mathbb{R}^{N}\) we have

\[\|\Phi(\Delta)\|_{2}^{2} =\|\Phi(P_{\parallel}(\Delta)+P_{\perp}(\Delta))\|_{2}^{2}\] \[=\|\Phi(P_{\parallel}(\Delta))+\Phi(P_{\perp}(\Delta))\|_{2}^{2}\] \[=\|\Phi(P_{\parallel}(\Delta))\|_{2}^{2}+\|\Phi(P_{\perp}(\Delta) )\|_{2}^{2}+2\langle\Phi(P_{\parallel}(\Delta)),\Phi(P_{\perp}(\Delta))\rangle.\]

To aid in readability, we make a number of notational modifications. First, we drop parentheses so that \(\Phi(P_{\parallel}(\Delta))\) is just notated as \(\Phi P_{\parallel}\Delta\). Second, we define \(M^{\dagger/2}:=(M^{\dagger})^{1/2}\) where \(M^{\dagger}\) is the pseudoinverse. If \(\Phi^{*}\Phi\) is invertible restricted to the range of \(P_{\parallel}\), then \(P_{\parallel}\Delta=(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger/2}(\Phi^{ *}\Phi)^{1/2}P_{\parallel}\Delta\) for all \(\Delta\). Thus,

\[|\langle\Phi(P_{\parallel}(\Delta)), \Phi(P_{\perp}(\Delta))\rangle|=|\langle\Phi P_{\parallel}\Delta, \Phi P_{\perp}\Delta\rangle|\] \[=|\langle P_{\parallel}\Delta,(\Phi^{*}\Phi)P_{\perp}\Delta\rangle|\] \[=|\langle(\Phi^{*}\Phi)^{1/2}P_{\parallel}\Delta,(\Phi^{*}\Phi)^{ 1/2}P_{\perp}\Delta\rangle|\] \[=|\langle(\Phi^{*}\Phi)^{1/2}P_{\parallel}(P_{\parallel}\Phi^{*} \Phi P_{\parallel})^{1/2}(\Phi^{*}\Phi)^{1/2}P_{\parallel}\Delta,(\Phi^{*}\Phi) ^{1/2}P_{\perp}\Delta\rangle|\] \[\leq\|(\Phi^{*}\Phi)^{1/2}(P_{\parallel}\Phi^{*}\Phi P_{\parallel}) ^{1/2}(\Phi^{*}\Phi)^{1/2}P_{\parallel}\Delta\|_{\mathrm{F}}\,\|(\Phi^{*}\Phi)^{ 1/2}P_{\perp}\Delta\|_{\mathrm{F}}\] \[\leq\|(\Phi^{*}\Phi)^{1/2}(P_{\parallel}\Phi^{*}\Phi P_{\parallel}) ^{1/2}\|_{\mathrm{op}}\,\|(\Phi^{*}\Phi)^{1/2}P_{\parallel}\Delta\|_{\mathrm{F }}\,\|(\Phi^{*}\Phi)^{1/2}P_{\perp}\Delta\|_{\mathrm{F}}\]where the last two lines follow from Cauchy-Schwartz. Observe that for \(\mu<1\) we have

\[a^{2}+b^{2}-2ab\mu =(1-\mu)a^{2}+(1-\mu)b^{2}+\mu a^{2}+\mu b^{2}-2ab\mu\] \[=(1-\mu)a^{2}+(1-\mu)b^{2}+\mu(a-b)^{2}\] \[\geq(1-\mu)a^{2}.\]

Thus, if \(\mu:=\|(\Phi^{*}\Phi)^{1/2}(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{\dagger/ 2}\|_{\mathrm{op}}\) then

\[\|\Phi(\Delta)\|_{2}^{2} \geq\|\Phi(P_{\parallel}(\Delta))\|_{2}^{2}+\|\Phi(P_{\perp}( \Delta))\|_{2}^{2}-2|\langle\Phi(P_{\parallel}(\Delta)),\Phi(P_{\perp}(\Delta) )\rangle|\] \[\geq\|\Phi(P_{\parallel}(\Delta))\|_{2}^{2}+\|\Phi(P_{\perp}( \Delta))\|_{2}^{2}-2\mu\|(\Phi^{*}\Phi)^{1/2}P_{\parallel}\Delta\|_{\mathrm{ F}}\,\|(\Phi^{*}\Phi)^{1/2}P_{\perp}\Delta\|_{\mathrm{F}}\] \[\geq(1-\mu)\|\Phi(P_{\parallel}(\Delta))\|_{2}^{2}\]

Thus,

\[\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq\|P_{\parallel}(\Delta) \|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(P_{\parallel}(\Delta)), \eta\rangle-\|\Phi(\Delta)\|_{2}^{2}\] \[\qquad\qquad\leq\max_{\Delta:\|P_{\perp}(\Delta)\|_{*}\leq\|P_{ \parallel}(\Delta)\|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}=t}2\langle\Phi(P_{ \parallel}(\Delta)),\eta\rangle-(1-\mu)\|\Phi(P_{\parallel}(\Delta))\|_{2}^{2}\] \[\qquad\qquad\qquad\leq\max_{\Delta:\|P_{\parallel}(\Delta)\|_{ \mathrm{F}}\leq\|P_{\parallel}(\Delta)\|_{\mathrm{F}},\|\Delta\|_{\mathrm{F}}= t}2\langle\Phi(P_{\parallel}(\Delta)),\eta\rangle-(1-\mu)\|\Phi(P_{\parallel}( \Delta))\|_{2}^{2}\] \[\qquad\qquad\qquad\leq\max_{\Delta:\|P_{\parallel}(\Delta)\|_{ \mathrm{F}}\geq t/\sqrt{2}}2\langle\Phi(P_{\parallel}(\Delta)),\eta\rangle-(1- \mu)\|\Phi(P_{\parallel}(\Delta))\|_{2}^{2}\]

where we've used the facts that \(\|\cdot\|_{*}\leq\|\cdot\|_{\mathrm{F}}\) and \(t^{2}=\|\Delta\|_{\mathrm{F}}^{2}=\|P_{\parallel}(\Delta)\|_{\mathrm{F}}^{2}+ \|P_{\perp}(\Delta)\|_{\mathrm{F}}^{2}\leq 2\|P_{\parallel}(\Delta)\|_{\mathrm{F}}^{2}\). 

**Lemma A.4**.: _Let \(K=\min\{\log_{2}(N),d_{1}d_{2}\}\). Then for any \(\alpha>0\), if_

\[t\geq\frac{1}{1-\mu}\sqrt{16\mathrm{tr}\Big{(}(P_{\parallel}\Phi^{*}\Phi P_{ \parallel})^{\dagger}\Big{)}+32\|(P_{\parallel}\Phi^{*}\Phi P_{\parallel})^{ \dagger}\|_{\mathrm{op}}\log(K/\delta)}+\frac{2\alpha\|(P_{\parallel}\Phi^{*} \Phi P_{\parallel})^{\dagger}\|_{\mathrm{op}}}{1-\mu}\]

_then with probability at least \(1-\delta\) we have_

\[\alpha t+\max_{\Delta:\|P_{\parallel}(\Delta)\|_{\mathrm{F}}\geq t/\sqrt{2}}2 \langle\Phi(P_{\parallel}(\Delta)),\eta\rangle-(1-\mu)\|\Phi(P_{\parallel}( \Delta))\|_{2}^{2}\leq 0.\]

Proof.: The linear operator \(\Phi P_{\parallel}:\mathbb{R}^{d_{1}\times d_{2}}\to\mathbb{R}^{N}\) can be decomposed as \(\Phi P_{\parallel}=\sum_{n=1}^{N}\beta_{n}w_{n}\psi_{n}\) where \(\{w_{n}\}_{n}\) are orthonormal on \(\mathbb{R}^{T}\), \(\{\psi_{n}\}_{n}\) are orthonormal linear operators on \(\mathbb{R}^{d_{1}\times d_{2}}\), and \(\beta_{n}\geq 0\) are decreasing. For \(k=0,1,\ldots,\min\{\log_{2}(N),d_{1}d_{2}\}-1\) let \(W_{k}=[w_{2^{k}},\ldots,w_{2^{k+1}-1}]\) so that

\[\beta_{2^{k}}=\max_{\|\Delta\|_{\mathrm{F}}=1,\|u\|_{2}=1}u^{\top}W_{k}^{\top} \Phi P_{\parallel}(\Delta)\geq\min_{\|\Delta\|_{\mathrm{F}}=1,\|u\|_{2}=1}u^{ \top}W_{k}^{\top}\Phi P_{\parallel}(\Delta)\geq\beta_{2^{k+1}}\]

Then

\[\max_{\Delta:\|P_{\parallel}(\Delta)\|_{\mathrm{F}}\geq t/\sqrt{2}} 2\langle\Phi(P_{\parallel}(\Delta)),\eta\rangle-(1-\mu)\|\Phi(P_{ \parallel}(\Delta))\|_{2}^{2}\] \[=\max_{\Delta:\|P_{\parallel}(\Delta)\|_{\mathrm{F}}\geq t/\sqrt{ 2}}\sum_{k=0}^{K}2\langle W_{k}^{\top}\Phi(P_{\parallel}(\Delta)),\eta \rangle-(1-\mu)\|W_{k}W_{k}^{\top}\Phi(P_{\parallel}(\Delta))\|_{2}^{2}\] \[=\max_{\Delta:\|P_{\parallel}(\Delta)\|_{\mathrm{F}}\geq t/\sqrt{ 2}}\sum_{k=0}^{K}2\langle W_{k}^{\top}\Phi(P_{\parallel}(\Delta)),W_{k}^{\top} \eta\rangle-(1-\mu)\|W_{k}^{\top}\Phi(P_{\parallel}(\Delta))\|_{2}^{2}\] \[\leq\sum_{k=0}^{K}\max_{\Delta:\|P_{\parallel}(\Delta)\|_{\mathrm{F }}\geq t/\sqrt{2}}2\|W_{k}^{\top}\Phi(P_{\parallel}(\Delta))\|_{2}\,\|W_{k}^{ \top}\eta\|_{2}-(1-\mu)\|W_{k}^{\top}\Phi(P_{\parallel}(\Delta))\|_{2}^{2}\] \[\leq\sum_{k=0}^{K}t\sqrt{2}\beta_{2^{k+1}}\|W_{k}^{\top}\eta\|_{2} -\frac{t^{2}(1-\mu)}{2}\beta_{2^{k+1}}^{2}\]where the first inequality holds by Cauchy-Schwartz, and the second holds for all \(t\geq\max_{k=0,\ldots,K}\frac{\|W_{k}^{\top}\eta\|_{2}2\sqrt{2}}{(1-\mu)\beta_{2^ {k+1}}}\). Moreover, \(t\sqrt{2}\beta_{2^{k+1}}\|W_{k}^{\top}\eta\|_{2}-\frac{t^{2}(1-\mu)}{2}\beta_{2^ {k+1}}^{2}\leq-\alpha t\) if

\[t\geq\max_{k=0,\ldots,K}\frac{\|W_{k}^{\top}\eta\|_{2}2\sqrt{2}}{(1-\mu)\beta_ {2^{k+1}}}+\max_{k=0,\ldots,K}\frac{2\alpha}{(1-\mu)\beta_{2^{k+1}}^{2}}=\sqrt{ \max_{k=0,\ldots,K}\frac{8\|W_{k}^{\top}\eta\|_{2}^{2}}{(1-\mu)^{2}\beta_{2^{k +1}}^{2}}}+\max_{k=0,\ldots,K}\frac{2\alpha}{(1-\mu)\beta_{2^{k+1}}^{2}}\]

Note that for \(K=\min\{\log_{2}(N),d_{1}d_{2}\}\) we have

\[\mathbf{P}(\cup_{k=1}^{K}\{\|W_{k}^{\top}\eta\|_{2}\geq\sqrt{2^{k}}+\sqrt{2 \log(K/\delta)}\})\leq\mathbf{P}(\cup_{k=1}^{K}\{\|W_{k}^{\top}\eta\|_{2}\geq \mathbb{E}[\|W_{k}^{\top}\eta\|_{2}]+\sqrt{2\log(K/\delta)}\})\leq\delta.\]

On this good event, we have that

\[\max_{k=0,\ldots,K}\frac{\|W_{k}^{\top}\eta\|_{2}^{2}}{\beta_{2^{ k+1}}^{2}} \leq\max_{k=0,\ldots,K}\frac{(\sqrt{2^{k}}+\sqrt{2\log(K/\delta)}) ^{2}}{\beta_{2^{k+1}}^{2}}\] \[\leq\max_{k=0,\ldots,K}\frac{2^{k+1}}{\beta_{2^{k+1}}^{2}}+\frac{ 4\log(K/\delta)}{\beta_{2^{k+1}}^{2}}\] \[\leq 2\sum_{n=1}^{N}\frac{1}{\beta_{n}^{2}}+\max_{n=1,\ldots,N} \frac{4\log(K/\delta)}{\beta_{n}^{2}}\] \[=2\mathrm{tr}\Big{(}(P_{\|}\Phi^{*}\Phi P_{\|})^{\dagger}\Big{)}+ 4\|(P_{\|}\Phi^{*}\Phi P_{\|})^{\dagger}\|_{\mathrm{op}}\log(K/\delta)\]

where we use the fact that

\[\sum_{n=1}^{N}\frac{1}{\beta_{n}^{2}}=\sum_{k=0}^{K}\sum_{n=2^{k}}^{2^{k+1}-1 }\frac{1}{\beta_{n}^{2}}\geq\sum_{k=0}^{K-1}\frac{2^{k}}{\beta_{2^{k+1}}^{2}} \geq\max_{k=0,\ldots,K-1}\frac{2^{k}}{\beta_{2^{k+1}}^{2}}.\]

## Appendix B Additional Details on Experiments

### Further Details on Dataset

The photostimulation data were collected from transgenic reporter mice Ai229, which express Cre-recombinase-dependent cytosolic GCaMP6m and soma-targeted ChRmine, crossed with the Vglut1-cre mouse line. Imaging and photostimulation experiments were performed on a Bergamo (Thorlabs) microscope equipped with a 16x (0.8 NA) Nikon objective. Post-hoc motion correction and neuron segmentation were performed with the Suite2p package [82] (https://github.com/MouseLand/suite2p).

### Further Details on Experiment of Section 3.1

We split each of our photostimulation datasets into non-overlapping training and test datasets. All models were trained exclusively using the training dataset and were then evaluated (as shown in Figure 2) using the test dataset. To build our test datasets, we randomly chose 5 (out of the 100 total) unique photostimulation patterns and then included all 70-timestep windows about each of the 20 instances of those 5 unique photostimuli. The resulting test set amounted to \(\sim\)20% of each dataset. In Figure 2, all models were evaluated using these 70-timestep test sequences of the form \(\{y_{t},u_{t}\}_{t=1}^{70}\), where \(y_{t}\in R^{d}\) is the recorded neural activity and \(u_{t}\in R^{d}\) is the photostimulation delivered at time \(t\). During evaluation on a given test window, all models were provided \(\{y_{t}\}_{t=1}^{4}\) and \(\{u_{t}\}_{t=1}^{70}\) to predict \(\{y_{t}\}_{t=5}^{70}\).

**Autoregressive-k models:** We fit the full-rank AR-\(k\) models to training datasets via linear regression by expressing

\[y_{t+1}=\sum_{s=0}^{k-1}A_{s}y_{t-s}+\sum_{s=0}^{k-1}B_{s}u_{t-s}+v\] (B.1)as \(Y=XW\), where

\[Y=\begin{bmatrix}y_{1}\\ y_{2}\\ \vdots\\ y_{T+1}\end{bmatrix}\quad X=\begin{bmatrix}y_{0}&y_{-1}&\ldots&y_{1-k}&u_{0}&u_{-1}& \ldots&u_{1-k}&1\\ y_{1}&y_{0}&\ldots&y_{2-k}&u_{1}&u_{0}&\ldots&u_{2-k}&1\\ \vdots&\vdots&&\vdots&\vdots&\vdots&&\vdots&1\\ y_{T}&y_{T-1}&\ldots&y_{T+1-k}&u_{T}&u_{T-1}&\ldots&u_{T+1-k}&1\end{bmatrix}\]

\[W=\begin{bmatrix}A_{0}\\ A_{1}\\ \vdots\\ A_{k-1}\\ B_{0}\\ B_{1}\\ \vdots\\ B_{k-1}\\ v\end{bmatrix}\]

and the closed-form solution is \(\widehat{W}=(X^{T}X)^{-1}X^{T}Y\). For the low-rank AR-\(k\) models, we fit all parameters via gradient descent using Adam [83] over 100 training epochs with a learning rate of 0.01. Gradient descent was implemented in PyTorch and ran on a single NVIDIA Tesla T4 GPU.

During evaluation of the AR-\(k\) models, for each test window we first computed \(\widehat{y}_{k+1}\) given \(\{y_{t},u_{t}\}_{t=1}^{k}\) using (B.1). Then for all subsequent predictions, on the right-hand side of (B.1) we replaced all instances of \(y_{t}\) with \(\widehat{y}_{t}\) for \(t>k\). In this manner, each entire roll-out prediction of \(\{y_{t}\}_{t=k+1}^{70}\) used all photostimulation inputs \(\{u_{t}\}_{t=1}^{70}\), but only the first \(k\) timesteps of neural activity \(\{y_{t}\}_{t=1}^{k}\). All AR-\(k\) models in this paper used \(k=4\).

**Gated recurrent unit (GRU) networks:** GRU networks were loosely based on the sequential variational autoencoders of [22]. Each model consisted of an encoder GRU network that encodes \(k=4\) initial timesteps of recorded neural activity into a bottlenecked initial state for a decoder GRU network. The decoder then unrolls an entire predicted timeseries of recorded neural activity given (as input) all photostimulation that was delivered over that time period. Model fitting proceeded by optimizing the evidence lower bound (ELBO) with respect to all model parameters. Both encoder and decoder GRUs had 512 hidden units. We used Adam optimization with a learning rate of 0.001 over 4000 training epochs of batch size 100. Models were implemented with PyTorch, and optimized on a single NVIDIA Tesla T4 GPU.

**Evaluation metrics:** We evaluated all models using roll-out predictions on held-out test windows. We quantified performance with mean squared error between recorded and predicted neural activity for each neuron. We also performed thresholded response detection, whereby detections were defined as timesteps at which a given neuron's measured calcium fluorescence exceeded a predefined threshold. To calculate a receiver operator characteristic (ROC) curve, we enumerated a range of thresholds, normalized by the standard deviation of each neuron's empirical activity distribution, and performed threshold detection separately on the real and model-predicted neural activity traces. We then compute the overall false-positive rate and true-positive rate at each threshold level to trace out an ROC curve. We calculate area under the ROC curve (AUROC) to quantify the accuracy of each model.

**Longer roll-out evaluations:** To assess AR-\(k\) models' ability to predict over longer time horizons, we implemented another train-test strategy, where the first 80% of timesteps in a recording are used for training, and the last 20% of timesteps (6736 steps) are used for testing. During the test phase, we use the same procedure described above, providing only the \(k=4\) initial timesteps of neural activity and then unrolling predictions over the remainder of this long test window. We report these results in Figure 5.

### Further Details on Experiment of Section 5.1

To fit the \(H\) parameter in this experiment, we generate observations as described in Section 5.1. We then estimate \(H\) as:

\[\widehat{H}\leftarrow\operatorname*{arg\,min}_{\widehat{H}\in\mathcal{K}}\sum_{( u,z)\in\mathfrak{D}}\|z-Hu\|_{\mathrm{F}}^{2}\]

for \(u\) our input, and \(z=\sum_{t=1}^{\tau}x_{t}\) the observed response, where here \(x_{t}\) are the observations generated from playing input \(u\), and \(\tau=15\).

As \(\mathcal{K}\) is defined with respect to the nuclear norm of the true parameter, which we do not assume is known, we run each method with a range of possible values for the nuclear-norm constraint, and plot the performance of each method for the constraint value that has minimum error. We state the value of the nuclear-norm constraint used for each plot below:

To choose the input rank of Algorithm 1, we ran our experiment with several different ranks and provide results for the best-performing rank. We found, however, that results are typically robust to the setting of the rank parameter of Algorithm 1, and our choice of \(r\) did not significantly impact performance. Furthermore, we believe this could effectively be chosen adaptively. We state our chosen values of \(r\) below.

For all experiments, we add observation noise distributed as \(\mathcal{N}(0,0.4\cdot I)\) to \(z=\sum_{t=1}^{\tau}x_{t}\).

\begin{table}
\begin{tabular}{|c|c|c|c|} \hline  & Active & Random & Uniform \\ \hline Mouse 1, rank 15 & 10 & 10 & 10 \\ \hline Mouse 1, rank 35 & 10 & 10 & 10 \\ \hline Mouse 2, rank 15 & 5 & 5 & 5 \\ \hline Mouse 2, rank 35 & 5 & 5 & 5 \\ \hline Mouse 3 (FoV A), rank 15 & 25 & 25 & 25 \\ \hline Mouse 3 (FoV A), rank 35 & 25 & 25 & 25 \\ \hline Mouse 3 (FoV B), rank 15 & 50 & 100 & 100 \\ \hline Mouse 3 (FoV B), rank 35 & 100 & 100 & 100 \\ \hline \end{tabular}
\end{table}
Table 1: Nuclear-Norm Constraint Settings for Results of Section 5.1

Figure 5: Longer roll-out evaluations. Same format as in Figure 2.

To ground the estimation error values shown in Figure 3, in Figure 6 will illustrate the causal connectivity matrix for Mouse 3 FoV B with different levels of estimation error.

### Further Details on Experiment of Section 5.2

For this experiment, on the data \(\mathfrak{D}\) we observed thus far, we fit the AR-\(k\) model described in Section 3.1 with \(k=1\). We found that for this experiment, simply using the least squares estimator with no low-rank penalty produced the best results. We use the same estimation method for both our method and the baseline method.

Given a input response trajectory in the test set, \((x_{1},\ldots,x_{15})\), with input \(u\), to compute the test MSE, we provide our learned dynamics model with the initial state \(x_{1}\) and input \(u\), and then roll this out for 15 timesteps to generate predictions \(\widehat{x}_{2},\ldots,\widehat{x}_{15}\). Precisely, if \(\widehat{A}\) and \(\widehat{B}\) are our estimated parameters, we let

\[\widehat{x}_{2} =\widehat{A}x_{1}+\widehat{B}u,\] \[\widehat{x}_{t+1} =\widehat{A}\widehat{x}_{t},\quad t\geq 1.\]

We the compute the MSE on this segment as:

\[\frac{1}{14}\sum_{t=2}^{15}\|\widehat{x}_{t}-x_{t}\|_{2}^{2}\]

It is not immediately obvious how to apply Algorithm 1 to this setting, since we must choose each trajectory sequentially, and once we have observed a trajectory it can no longer be chosen again. Rather than solving the optimization of Algorithm 1 to find the best inputs, we instead seek to

\begin{table}
\begin{tabular}{|c|c|} \hline  & Input Rank \(r\) \\ \hline Mouse 1, rank 15 & 10 \\ \hline Mouse 1, rank 35 & 10 \\ \hline Mouse 2, rank 15 & 5 \\ \hline Mouse 2, rank 35 & 5 \\ \hline Mouse 3 (FoV A), rank 15 & 25 \\ \hline Mouse 3 (FoV A), rank 35 & 25 \\ \hline Mouse 3 (FoV B), rank 15 & 25 \\ \hline Mouse 3 (FoV B), rank 35 & 50 \\ \hline \end{tabular}
\end{table}
Table 2: Input Rank \(r\) for Results of Section 5.1

Figure 6: Causal connectivity matrix for Mouse 3 FoV B with different levels of estimation error (corresponding to Figure 3).

iteratively choose the next input that would maximize "information gain" in some sense. In particular, note that applying the Frank-Wolfe algorithm [80] to the objective, if we have inputs \(\mathcal{U}\) available:

\[\min_{\lambda\in\triangle_{\mathcal{U}}}\operatorname{tr}((V^{\top}\boldsymbol {\Lambda}(\lambda)V)^{-1}),\]

the update is given by:

\[u_{i+1} =\min_{u\in\mathcal{U}}u^{\top}V(V^{\top}\boldsymbol{\Lambda}( \lambda_{i})V)^{-2}V^{\top}u\] \[\lambda_{i+1} \leftarrow(1-\gamma_{i})\lambda_{i}+\gamma_{i}\mathbb{I}\{u=u_{ i+1}\}\]

for learning rate \(\gamma_{i}\).

In this experiment, we simply choose \(u_{n}\) as above, with \(\mathcal{U}\) the set of remaining active inputs in \(\mathfrak{D}_{\mathrm{train}}\), and \(\boldsymbol{\Lambda}(\lambda_{n})\) replaced with \(\sum_{s=1}^{n-1}u_{s}u_{s}^{\top}\). This therefore approximates the solution to the experiment design of Algorithm 1, and has the advantage of being very computationally efficient. Furthermore, we set \(V\) to be the right singular vectors of \(\widehat{B}\). We believe this is reasonable in dynamical system settings with fast decay.

The primary hyperparameter for this experiment is the choice of \(r\), the rank of \(V\). As in the previous section, we did not find the results particularly sensitive to setting of \(r\). For each dataset, we ran with \(r\in[25,50,75,100,125,150]\), and include results for the best-performing setting.

For both sets of experiments in Section 5, we ran on 56 Intel(R) Xeon(R) CPU E5-2690 v4 @ 2.60GHz CPUs.

To ground the MSE values shown in Figure 4, in Figure 7 we plot the predictions from the estimated model at different MSE values on heldout trials for Mouse 2.

Figure 7: Estimated neural activity vs true neural activity on heldout trials for Mouse 2, Neurons 0, 3, and 95, at different levels of overall MSE on heldout trials (corresponding to Figure 4).

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: We validate all claims with theoretical results or experiments. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: Please see our discussion section. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes]Justification: Proofs are given in the supplemental for stated theorems (or citations given to works where they proved). Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: To the extent possible, we provide as much information as we can on all results to ensure they are reproducible. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code**Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [No] Justification: We have not yet released our code but plan to in the future. We also hope to release the data we used in the future. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: To the extent possible, we state all hyperparameters. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: Where possible, we state confidence intervals in our results. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).

* The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)
* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: Computational resources are listed in the supplemental. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: Our work does not raise any ethical concerns, and conforms with all ethical guidelines. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA] Justification: This work studies fundamental concepts in machine learning and neuroscience, and we do not believe it has any immediate societal consequences. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.

* Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.
* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: We are not releasing high-risk models or data with this work. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: We have credited all those involved with the collection of the data we utilize. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.

* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: No new assets are introduced in this work. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: No human subjects were involved in this work. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: No human subjects were involved with this work. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.