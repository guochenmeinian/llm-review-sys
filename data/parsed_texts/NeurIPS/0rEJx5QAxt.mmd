# Convex-Concave 0-Sum Markov Stackelberg Games

Denizalp Goktas

Brown University, Computer Science

denizalp_goktas@brown.edu

&Arjun Prakash

Brown University, Computer Science

arjun_prakash@brown.edu

&Amy Greenwald

Brown University, Computer Science

amy_greenwald@brown.edu

###### Abstract

Zero-sum Markov Stackelberg games can be used to model myriad problems, in domains ranging from economics to human robot interaction. We develop a policy gradient method which we prove solves these games in continuous state, continuous action settings, using noisy gradient estimates computed from observed trajectories of play. When the games are convex-concave, we prove that our algorithm converges to Stackelberg equilibrium in polynomial time. We also prove that reach-avoid problems are naturally modeled as convex-concave zero-sum Markov Stackelberg games, and show experimentally that Stackelberg equilibrium policies are more effective than their Nash counterparts in these problems.1

Footnote 1: A full and current version of the paper can be found at: https://arxiv.org/abs/2401.12437

## 1 Introduction

Markov games [28, 65, 70] are a generalization of Markov decision processes (MDPs) comprising multiple players simultaneously making decisions over time, collecting rewards along the way depending on their collective actions. They have been used by practitioners to model many real-world multiagent planning and learning environments, such as autonomous driving [31, 59], cloud computing [77], and telecommunications [3]. Moreover, theoreticians are beginning to formally analyze policy gradient methods, proving polynomial-time convergence to optimal policies in MDPs [2, 16], and to Nash equilibrium policies [53] in zero-sum Markov games [24], the canonical solution concept. While Markov games are a fruitful way to model some problems (e.g., robotic soccer [46]), others, such as reach-avoid [48], may be more productively modeled as sequential-move games, where some players commit to moves that are observed by others, before they make their own moves. To this end, we study two-player zero-sum Markov Stackelberg [74] (i.e., sequential-move) games. While polynomial-time value-iteration (i.e., planning) algorithms are known for these games assuming discrete states [36], we develop a policy gradient method that converges to Stackelberg equilibrium in polynomial time in continuous state, continuous action games, using noisy gradients based only on observed trajectories of play. Furthermore, we demonstrate experimentally that Stackelberg equilibrium policies are more effective than their Nash counterparts in reach-avoid problems.

A _(discounted discrete-time) zero-sum Markov Stackelberg game_[36] is played over an infinite horizon \(t=0,1,\ldots\) between two players, a leader and a follower. The game starts at time \(t=0\), at some initial state \(S^{(0)}\sim\mu\in\Delta(\mathcal{S})\) drawn randomly from a set of states \(\mathcal{S}\). At each time step \(t=1,2,\ldots\), the players encounter a state \(\bm{s}^{(t)}\in\mathcal{S}\), where the leader takes its action \(\bm{a}^{(t)}\) first, from its action space \(\mathcal{A}(\bm{s}^{(t)})\), after which the follower, having observed the leader's action, makes it own move \(\bm{b}^{(t)}\), chosen from a feasible subset \(\mathcal{C}(\bm{s}^{(t)},\bm{a}^{(t)})\) determined by the leader's action \(\bm{a}^{(t)}\)of its action space \(\mathcal{B}(\bm{s}^{(t)})\).2 After both players have taken their actions, they receive respective rewards, \(-r(\bm{s}^{(t)},\bm{a}^{(t)},\bm{b}^{(t)})\) and \(r(\bm{s}^{(t)},\bm{a}^{(t)},\bm{b}^{(t)})\). The game then moves to time step \(t+1\) and transitions either to a new state \(S^{(t+1)}\sim p(\cdot\mid\bm{s}^{(t)},\bm{a}^{(t)},\bm{b}^{(t)})\) with probability \(\gamma\), called the _discount factor_, or the game ends with the remaining probability. Each player's goal is to play a (potentially history-dependent) _policy_ that maximizes its respective _expected (cumulative discounted) payoff_s, \(-\operatorname{\mathbb{E}}\left[\sum_{t=0}^{\infty}\gamma^{t}r(S^{(t)},A^{(t)},B^{(t)})\right]\) and \(\operatorname{\mathbb{E}}\left[\sum_{t=0}^{\infty}\gamma^{t}r(S^{(t)},A^{(t)},B^{(t)})\right]\).3

Footnote 2: To simplify notation, we drop the dependency of action spaces \(\mathcal{A}\) and \(\mathcal{B}\) on states going forward, but our theory applies in this more general setting.

Footnote 3: Unlike \(\bm{a}^{(t)}\) and \(\bm{b}^{(t)}\), which are deterministic actions because they depend on a realized history of states and actions encountered, \(A^{(t)}\) and \(B^{(t)}\) are random variables, because they might depend on a random history.

In zero-sum Markov Stackelberg games, when the reward function \((\bm{a},\bm{b})\mapsto r(\bm{s},\bm{a},\bm{b})\) is continuous and bounded, for all \(\bm{s}\in\mathcal{S}\), and the correspondence \(\bm{a}\mapsto\operatorname{\mathbb{E}}\left(\bm{s},\bm{a}\right)\) is continuous, as well as non-empty- and compact-valued, a _recursive_ (or _Markov perfect_) [49]_Stackelberg equilibrium_ is guaranteed to exist [36], meaning a _stationary policy profile_ (i.e., a pair of mappings from states to the actions of the leader and the follower, respectively) specifying the actions taken at each state s.t. the leader's policy maximizes its expected payoff assuming the follower best responds, while the follower indeed best responds to the leader's policy. In other words, the aforementioned assumptions guarantee the existence of a _policy profile_\(\bm{\pi}^{*}\doteq(\bm{\pi}^{*}_{\bm{a}},\bm{\pi}^{*}_{\bm{b}})\), with \(\bm{\pi}^{*}_{\bm{a}}:\mathcal{S}\to\mathcal{A}\) and \(\bm{\pi}^{*}_{\bm{b}}:\mathcal{S}\to\mathcal{B}\), that solves the following _coupled_ min-max optimization problem:

\[\min_{\bm{\pi}_{\bm{a}}:\mathcal{S}\to\mathcal{A}}\max_{\begin{subarray}{c} \bm{\pi}_{\bm{b}}:\mathcal{S}\to\mathcal{B}:\\ \forall\bm{s}\in\mathcal{S},\bm{\pi}_{\bm{b}}(\bm{s})\in\mathcal{C}(\bm{s}, \bm{\pi}_{\bm{a}}(\bm{s}))\end{subarray}}\operatorname{\mathbb{E}}\left[\sum _{t=0}^{\infty}\gamma^{t}r(S^{(t)},\bm{\pi}_{\bm{a}}(S^{(t)}),\bm{\pi}_{\bm{b}} (S^{(t)}))\right]\enspace,\] (1)

where the expectation is with respect to \(S^{(0)}\sim\mu\) and \(S^{(t+1)}\sim p(\cdot\mid\bm{s}^{(t)},\bm{\pi}_{\bm{a}}(S^{(t)}),\bm{\pi}_{\bm {b}}(S^{(t)}))\). The problem is "coupled" because the players' actions sets constrain one another; in particular, the set of actions available to the follower at each state is determined by the leader's choice.

In spite of multiple compelling applications, including autonomous driving [29, 43], reach-avoid problems in human-robot interaction [10], robust optimization in stochastic environments [15], and resource allocation over time [36], very little is known about computing recursive Stackelberg equilibria in zero-sum Markov Stackelberg games. A version of value iteration is known to converge in polynomial time when the state space is discrete [36], but this (planning) method becomes intractable in large or continuous state spaces. Furthermore, nothing is known, to our knowledge, about _learning_ Stackelberg equilibria from observed trajectories of play. We develop an efficient policy gradient method for convex-concave zero-sum Markov Stackelberg games, and we show that reach-avoid problems naturally lie in this class of games.

**Contributions.** Equation (1) reveals that the problem of computing Stackelberg equilibria in zero-sum Markov Stackelberg games is an instance of a coupled min-max optimization problem. Goktas and Greenwald [33] studied coupled min-max optimization problems assuming an _exact_ first-order oracle, meaning one that returns a function's exact value and gradient at any point in its domain. As access to an exact oracle is an unrealistic assumption in Markov games, we develop a first-order method for solving these problems, assuming access to a _stochastic_ first-order oracle, which returns noisy estimates of a function's value and gradient at any point in its domain. We show that our method converges in polynomial-time (Theorem 3.1) in a large class of coupled min-max optimization problems, namely those which are convex-concave.

We then proceed to study zero-sum Markov Stackelberg games, providing sufficient conditions on the action correspondence \(\mathcal{C}:\mathcal{S}\times\mathcal{A}\to\mathcal{B}\), the rewards \(r:\mathcal{S}\times\mathcal{A}\times\mathcal{B}\to\mathbb{R}\), and the transition probabilities \(p:\mathcal{S}\times\mathcal{S}\times\mathcal{A}\times\mathcal{B}\to\mathbb{R}_{+}\) to guarantee that the game is convex-concave. Furthermore, we develop a policy gradient algorithm that provably converges to Stackelberg equilibrium in polynomial time when such games are convex-concave (Theorem 4.1), the first reinforcement learning algorithm of this kind. Our method specializes to continuous state, continuous action zero-sum Markov games; as such, we provide a provably-convergent policy gradient method for these problems as well. Finally, we prove that our framework naturally models reach-avoid problems, and run experiments which show that the Stackelberg equilibrium policies learned by our method exhibit better safety and liveness properties than their Nash counterparts.

## 2 Preliminaries

**Notation.** All notation for variable types, e.g., vectors, should be clear from context; if any confusion arises, see Appendix A. Unless otherwise noted, we assume \(\left\lVert\cdot\right\rVert\) is the Euclidean norm, \(\left\lVert\cdot\right\rVert_{2}\). We let \(\Delta_{n}=\{\bm{x}\in\mathbb{R}_{+}^{n}\mid\sum_{i=1}^{n}x_{i}=1\}\) denote the unit simplex in \(\mathbb{R}^{n}\), and \(\Delta(A)\), the set of probability distributions on the set \(A\). We also define the support of any distribution \(f\in\Delta(\mathcal{X})\) as \(\operatorname{supp}(f)\doteq\{\bm{x}\in\mathcal{X}:f(\bm{x})>0\}\). We denote the orthogonal projection operator onto a set \(C\) by \(\Pi_{C}\), i.e., \(\Pi_{C}(\bm{x})=\operatorname*{arg\,min}_{\bm{y}\in C}\left\lVert\bm{x}-\bm{y }\right\rVert^{2}\). We denote by \(\mathbbm{1}_{\mathcal{C}}(\bm{x})\) the indicator function of a set \(\mathcal{C}\), with value 1 if \(\bm{x}\in\mathcal{C}\) and 0 otherwise. Given two vectors \(\bm{x},\bm{y}\in\mathbb{R}^{n}\), we write \(\bm{x}\geq\bm{y}\) or \(\bm{x}>\bm{y}\) to mean component-wise \(\geq\) or \(>\), respectively. For any set \(\mathcal{C}\), we denote the diameter by \(\operatorname{diam}(\mathcal{C})\doteq\max_{\bm{c},\bm{c}^{\prime}\in\mathcal{ C}}\lVert\bm{c}-\bm{c}^{\prime}\rVert\). Given a tuple consisting of a sequences of iterates and weights \((\{\bm{z}^{(t)}\}_{t},\{\eta^{(t)}\}_{t})\), the weighted average of the iterates is given by \(\overline{\bm{z}}_{\bm{\eta}}\doteq\frac{\sum_{\bm{\eta}}\eta^{(t)}\bm{z}^{(t)}} {\sum_{\bm{\eta}}\eta^{(t)}}\).

**Mathematical Concepts.** Given \(\mathcal{X}\subset\mathbb{R}^{n}\), the function \(f:\mathcal{X}\to\mathcal{Y}\) is said to be _\(\ell_{f}\)-Lipschitz-continuous_ w.r.t. norm \(\left\lVert\cdot\right\rVert\) iff \(\forall\bm{x}_{1},\bm{x}_{2}\in\mathcal{X}\), \(\left\lVert f(\bm{x}_{1})-f(\bm{x}_{2})\right\rVert\leq\ell_{f}\left\lVert \bm{x}_{1}-\bm{x}_{2}\right\rVert\). If \(\mathcal{Y}=\mathbb{R}\), then \(f\) is _convex_ (resp. _concave_) iff for all \(\lambda\in(0,1)\) and \(\bm{x},\bm{x}^{\prime}\in\mathcal{X}\), \(f(\lambda\bm{x}+(1-\lambda)\bm{x}^{\prime})\leq\text{(resp. }\geq)\,\lambda f(\bm{x})+(1-\lambda)f(\bm{x}^{\prime})\). For any \(\mathcal{Y}\), if the relation holds with equality, then \(f\) is called _affine_. A two-sided function \(h:\mathcal{X}\times\mathcal{Y}\to\mathcal{Z}\) is _biaffine_ if \(\bm{x}\mapsto f(\bm{x},\bm{y})\) is affine for all \(\bm{y}\in\mathcal{Y}\), and \(\bm{y}\mapsto h(\bm{x},\bm{y})\) is affine for all \(\bm{x}\in\mathcal{X}\). \(f\) is _\(\mu\)-strongly convex_ if \(f(\bm{x}_{1})\geq f(\bm{x}_{2})+\left\langle\nabla_{\bm{x}}f(\bm{x}_{2}),\bm{x }_{1}-\bm{x}_{2}\right\rangle+\nicefrac{{\mu}}{{2}}\left\lVert\bm{x}_{1}-\bm{ x}_{1}\right\rVert^{2}\). For convenience, we say that an \(l\)-dimensional vector-valued function \(\bm{g}:\mathcal{X}\to\mathcal{Y}\subset\mathbb{R}^{l}\) is log-convex, convex, log-concave, or concave, respectively, if \(g_{k}\) is log-convex, convex, pose-concave, or concave, for all \(k\in[l]\). A correspondence \(\mathcal{Z}:\mathcal{X}\to\mathcal{Y}\) is _concave_ if for all \(\lambda\in(0,1)\) and \(\bm{x},\bm{x}^{\prime}\in\mathcal{X}\), \(\mathcal{Z}(\lambda\bm{x}+(1-\lambda)\bm{x}^{\prime})\subseteq\lambda\mathcal{ Z}(\bm{x})+(1-\lambda)\mathcal{Z}(\bm{x})\), assuming Minkowski summation [22; 57].

We require notions of stochastic convexity related to stochastic dominance of probability distributions [7]. Given non-empty and convex parameter and outcome spaces \(\mathcal{W}\) and \(\mathcal{O}\) respectively, a conditional probability distribution \(\bm{w}\mapsto p(\cdot\mid\bm{w})\in\Delta(\mathcal{O})\) is said to be _stochastically convex_ (resp. _stochastically concave_) in \(\bm{w}\in\mathcal{W}\) if for all continuous, bounded, and convex (resp. concave) functions \(v:\mathcal{O}\to\mathbb{R}\), \(\lambda\in(0,1)\), and \(\bm{w}^{\prime},\bm{w}^{\dagger}\in\mathcal{W}\) s.t. \(\overline{\bm{w}}=\lambda\bm{w}^{\prime}+(1-\lambda)\bm{w}^{\dagger}\), it holds that \(\mathbb{E}_{\mathcal{O}\sim p(\cdot\mid\overline{\bm{w}})}\left[v(O)\right]\leq \left(\text{resp}\geq\right)\lambda\,\mathbb{E}_{\mathcal{O}\sim p(\cdot\mid \bm{w}^{\dagger})}\left[v(O)\right]+(1-\lambda)\,\mathbb{E}_{\mathcal{O}\sim p (\cdot\mid\bm{w}^{\dagger})}\left[v(O)\right]\).

## 3 Coupled Min-Max Optimization Problems

_A min-max Stackelberg game_, denoted \((\mathcal{X},\mathcal{Y},f,\bm{g})\), is a two-player, zero-sum game, where one player, called the _leader_, first commits to an action \(\bm{x}\in\mathcal{X}\) from its _action space_\(\mathcal{X}\subset\mathbb{R}^{n}\), after which the second player, called the _follower_, takes an action \(\bm{y}\in\mathcal{Z}(\bm{x})\subset\mathcal{Y}\) from a subset of of his _action space_\(\mathcal{Y}\subseteq\mathbb{R}^{m}\) determined by the _action correspondence_\(\mathcal{Z}:\mathbb{R}^{n}\rightrightarrows\mathcal{Y}\). As is standard in the optimization literature, we assume throughout that the follower's action correspondence can be equivalently represented via a _coupling constraint function_\(\bm{g}:\mathbb{R}^{n}\times\mathbb{R}^{m}\to\mathbb{R}^{d}\) s.t. \(\mathcal{Z}(\bm{x})\doteq\{\bm{y}\in\mathcal{Y}\mid\bm{g}(\bm{x},\bm{y})\geq \bm{0}\}\). An _action profile_\((\bm{x},\bm{y})\in\mathcal{X}\times\mathcal{Y}\) comprises actions for both players. Once both players have taken their actions, the leader (resp. follower) receives a loss (resp. payoff) \(f(\bm{x},\bm{y})\), defined by an _objective function_\(f:\mathbb{R}^{n}\times\mathbb{R}^{m}\to\mathbb{R}\). We define the _marginal function_\(f^{*}(\bm{x})\doteq\max_{\bm{y}\in\mathcal{Z}(\bm{x})}f(\bm{x},\bm{y})\), which, given an action for the leader, outputs its ensuing payoff, assuming the follower best responds. The constraints in a min-max Stackelberg game are said to be _uncoupled_ if \(\mathcal{Z}(\bm{x})=\mathcal{Y}\), for all \(\bm{x}\in\mathcal{X}\). A min-max Stackelberg game is said to be _continuous_ iff 1. the objective function \(f\) is continuous; 2. the action spaces \(\mathcal{X}\) and \(\mathcal{Y}\) are non-empty and compact; and 3. the action correspondence \(\mathcal{Z}\) is continuous, non-empty- and compact-valued.4

Footnote 4: See Theorem 5.9 and Example 5.10 of Rockafellar and Wets [63] for conditions on \(\bm{g}\) that guarantee the continuity of \(\mathcal{Z}\) or Section 3 of Goktas and Greenwald [33].

**Stackelberg Equilibrium.** The canonical solution concept for min-max Stackelberg games is the \((\varepsilon,\delta)\)-_Stackelberg equilibrium (\((\varepsilon,\delta)\)-SE, or SE if \(\varepsilon=\delta=0\)), an action profile \((\bm{x}^{*},\bm{y}^{*})\in\mathcal{X}\times\mathcal{Y}\) s.t. \(\left\lVert\Pi_{\mathbb{R}^{n}_{\mathbb{R}}}\left[\bm{g}(\bm{x}^{*},\bm{y}^{*}) \right]\right\rVert\leq\delta\) and \(\min_{\bm{x}\in\mathcal{X}}f^{*}(\bm{x})+\varepsilon\geq f(\bm{x}^{*},\bm{y}^{* })\geq\max_{\bm{y}\in\mathcal{Z}(\bm{x}^{*})}f\left(\bm{x}^{*},\bm{y}\right)-\delta\), for \(\varepsilon,\delta\geq 0\).5 As a straightforward corollary of Theorem 3.2 of Goktas and Greenwald [33], a SE is guaranteed to exist in continuous Stackelberg games. Moreover, the set of SE can be characterized as solutions to the following _coupled min-max optimization problem_: \(\min_{\bm{x}\in\mathcal{X}}\max_{\bm{y}\in\mathcal{Z}(\bm{x})}f(\bm{x},\bm{y})\).

An alternative but weaker solution concept previously considered for min-max Stackelberg games [71] is the \(\varepsilon\)_-generalized Nash equilibrium_ (\(\varepsilon\)_-GNE, or GNE if \(\varepsilon=0\)), i.e., \((\bm{x}^{*},\bm{y}^{*})\in\mathcal{X}\times\mathcal{Z}(\bm{x}^{*})\) s.t. \(\min_{\bm{x}\in\mathcal{X}}f\left(\bm{x},\bm{y}^{*}\right)+\varepsilon\geq f \left(\bm{x}^{*},\bm{y}^{*}\right)\geq\max_{\bm{y}\in\mathcal{Z}(\bm{x}^{*})} f\left(\bm{x}^{*},\bm{y}\right)-\varepsilon\), for some \(\varepsilon\geq 0\).6 In general, the set of GNE and SE need not intersect; as such, GNE are not necessarily solutions of \(\min_{\bm{x}\in\mathcal{X}}\max_{\bm{y}\in\mathcal{Z}(\bm{x})}f\left(\bm{x}, \bm{y}\right)\) (see, Appendix A of Goktas and Greenwald [33]). Furthermore, there is no GNE whose value is less than the SE value of a game. When a min-max Stackelberg game's constraints are uncoupled, a(n \(\varepsilon\))-GNE is called a(n \(\varepsilon\))_-saddle point_, or a(n \(\varepsilon\))_-Nash equilibrium_, and _is_ also an SE. Finally, a saddle point is guaranteed to exist [67, 73] in continuous min-max Stackelberg games with uncoupled constraints, a convex-concave objective \(f\), and convex action spaces \(\mathcal{X}\) and \(\mathcal{Y}\), in which case such games have traditionally been referred to as convex-concave min-max (simultaneous-move) games or saddle-point problems [13].

Footnote 6: A GNE is guaranteed to exist in continuous min-max Stackelberg games when the objective function \(f\) is convex-concave, the action spaces \(\mathcal{A}\) and \(\mathcal{B}\) are convex, and the action correspondence \(\mathcal{Z}\) is convex-valued [4].

**Convex-Concave Games.** A min-max Stackelberg game is said to be _convex-concave_ if, in addition to being continuous, 1. \(f^{*}\) is convex; 2. \(\bm{y}\mapsto f(\bm{x},\bm{y})\) is concave, for all \(\bm{x}\in\mathcal{X}\); 3. \(\mathcal{X}\) and \(\mathcal{Y}\) are convex; and 4. \(\mathcal{Z}\) is convex-valued. This definition generalizes that of convex-concave min-max (simultaneous-move) game, because in such games, the marginal function \(f^{*}\) is necessarily convex when \(f\) is convex, by Danskin's theorem [23]. Assuming access to an exact first-order oracle, an \((\varepsilon,\delta)\)-SE of a convex-concave min-max Stackelberg game can be computed in polynomial time when \(f\) and \(\bm{g}\) are Lipschitz-continuous [33], while the computation is NP-hard in continuous min-max Stackelberg games, even when \(\mathcal{X}\) and \(\mathcal{Y}\) are convex, \(f\) is convex-concave, and \(\bm{g}\) is affine [47].

All the conditions that define a convex-concave Stackelberg game depend on the game primitives, namely \((\mathcal{X},\mathcal{Y},f,\bm{g})\), and are well-understood (see, for instance Section 5 of Rockafellar and Wets [63]), with the exception of the condition that the marginal function \(f^{*}\) be convex. While it is difficult to obtain necessary and sufficient conditions on the game primitives that ensure the convexity of \(f^{*}\), one possibility is to require \(f\) to be convex in \((\bm{x},\bm{y})\) and \(\mathcal{Z}\) to be concave.7 The following sufficient conditions, which also guarantee concavity, were introduced by Goktas and Greenwald [33].

Footnote 7: See Section 2 of Nikodem [57] and Chapter 36 of Czerwik [22] for conditions on \(\bm{g}\) which guarantee that \(\mathcal{Z}\) is concave and/or continuous and/or convex-valued.

**Assumption 1** (Convex-Concave Assumptions).: _1. The objective function \(f(\bm{x},\bm{y})\) is convex in \((\bm{x},\bm{y})\), and concave in \(\bm{y}\), for all \(\bm{x}\in\mathcal{X}\); 2. the action correspondence \(\mathcal{Z}\) is concave; 3. the action spaces \(\mathcal{X}\) and \(\mathcal{Y}\) are convex._

As these assumptions are only sufficient, they are not necessarily satisfied in all applications of convex-concave min-max Stackelberg game. Hence, the convexity of the marginal function must sometimes be established by other means. We thus provide the following alternative set of sufficient conditions, which we use to show that the reach-avoid problem we study in Section 5 is convex-concave.

**Assumption 2** (Alternative Convex-Concave Assumptions).: _1. (Convex-concave objective) The objective \(f(\bm{x},\bm{y})\) is convex in \(\bm{x}\), for all \(\bm{y}\in\mathcal{Y}\), and concave in \(\bm{y}\), for all \(\bm{x}\in\mathcal{X}\); 2. (log-convex-concave coupling) the coupling constraint \(\bm{g}(\bm{x},\bm{y})\) is log-convex in \(\bm{x}\) for all \(\bm{y}\in\mathcal{Y}\), and concave in \(\bm{y}\) for all \(\bm{x}\in\mathcal{X}\); and 3. the action spaces \(\mathcal{X}\) and \(\mathcal{Y}\) are convex._

**Computation.** We now turn our attention to the computation of \((\varepsilon,\delta)\)-SE in convex-concave min-max Stackelberg games, assuming access to an _unbiased first-order stochastic oracle_\((\widehat{F},\widehat{G},\mathcal{F},\mathcal{G})\) comprising random functions \(\widehat{F}:\mathbb{R}^{n}\times\mathbb{R}^{m}\times\Theta\to\mathbb{R}\) and \(\widehat{G}:\mathbb{R}^{n}\times\mathbb{R}^{m}\times\Phi\to\mathbb{R}^{d}\) and sampling distributions \(\mathcal{F}\in\Delta(\Theta)\) and \(\mathcal{G}\in\Delta(\Phi)\) s.t. \(\mathbb{E}_{\bm{\theta}\sim\mathcal{F}}[\widehat{F}(\bm{x},\bm{y};\bm{\theta} )]=f(\bm{x},\bm{y})\), \(\mathbb{E}_{\bm{\theta}\sim\mathcal{G}}[\widehat{G}(\bm{x},\bm{y};\bm{\phi} )]=\bm{g}(\bm{x},\bm{y})\), \(\mathbb{E}_{\bm{\theta}}[\nabla_{(\bm{x},\bm{y})}\widehat{F}(\bm{x},\bm{y}; \bm{\theta})]=\nabla f(\bm{x},\bm{y})\), and \(\mathbb{E}_{\bm{\phi}}[\nabla_{(\bm{x},\bm{y})}\widehat{G}(\bm{x},\bm{y};\bm{ \phi})]=\nabla\bm{g}(\bm{x},\bm{y})\). The following assumptions are required for the convergence of our methods.

**Assumption 3**.: _1. (Lipschitz game) \(f\) and \(\bm{g}\) are Lipschitz-continuous; 2. (concave representation) the coupling constraint function \(\bm{y}\mapsto\bm{g}(\bm{x},\bm{y})\) is concave for all \(\bm{x}\in\mathcal{X}\); 3. (Slater's condition) \(\forall\bm{x}\in\mathcal{X},\exists\widehat{\bm{y}}\in\mathcal{Y}\) s.t. \(\bm{g}(\bm{x},\widehat{\bm{y}})>0\); and 4. (stochastic oracle) there exists an unbiased first-order stochastic oracle \((\widehat{F},\widehat{G},\mathcal{F},\mathcal{G})\) with bounded variance s.t. \(\forall(\bm{x},\bm{y})\in\mathcal{X}\times\mathcal{Y}\), \(\mathbb{E}[\|\widehat{G}(\bm{x},\bm{y};\bm{\phi})\|^{2}]\leq\sigma_{\bm{g}}\), \(\mathbb{E}[\|\nabla_{(\bm{x},\bm{y})}\widehat{F}(\bm{x},\bm{y};\bm{\theta}) \|^{2}]\leq\sigma_{\nabla\bm{f}}\), and \(\mathbb{E}[\|\nabla_{(\bm{x},\bm{y})}\widehat{G}(\bm{x},\bm{y};\bm{\phi})\|^{2}] \leq\sigma_{\nabla\bm{g}}\), for \(\sigma_{\bm{g}},\sigma_{\nabla\bm{f}},\sigma_{\nabla\bm{g}}\geq 0\)._

In the sequel, we rely on the following notation and definitions. For any action \(\bm{x}\in\mathcal{X}\) of the leader, we can re-express the marginal function in terms of the _Lagrangian_\(\ell(\bm{y},\bm{\lambda};\bm{x})\doteq f(\bm{x},\bm{y})+\langle\bm{\lambda},\bm{g} (\bm{x},\bm{y})\rangle\) (see, for instance, Section 5 of Boyd et al. [17]) as follows: \(f^{*}(\bm{x})=\max_{\bm{y}\in\mathcal{Y}}\min_{\bm{\lambda}\in\mathbb{R}^{d}_{+ }}\ell(\bm{y},\bm{\lambda};\bm{x})\). Further, we define the follower's best-response correspondence \(\mathcal{Y}^{*}(\bm{x})\doteq\operatorname*{arg\,max}_{\bm{y}\in\mathcal{Y}}\min_{ \bm{\lambda}\in\mathbb{R}^{d}}\ell\left(\bm{y},\bm{\lambda};\bm{x}\right)\), and the KKT multiplier correspondence \(\Lambda^{*}(\bm{x})\doteq\operatorname*{arg\,min}_{\bm{\lambda}\in\mathbb{R}^{d} _{+}}\max_{\bm{y}\in\mathcal{Y}}\ell\left(\bm{y},\bm{\lambda};\bm{\hat{x}}\right)\). With these definitions in hand, under Assumption 3, we can build an unbiased first-order stochastic oracle \(\widehat{\mathcal{L}}(\bm{y},\bm{\lambda};\bm{x},\bm{\theta},\bm{\phi})\doteq \widehat{F}(\bm{x},\bm{y};\bm{\theta})+<\bm{\lambda},\widehat{G}(\bm{x},\bm{y} ;\bm{\phi})>\) for the Lagrangian \(\ell\) s.t. \(\mathbb{E}_{(\bm{\theta},\bm{\phi})}[\widehat{\mathcal{L}}(\bm{y},\bm{\lambda} ;\bm{x},\bm{\theta},\bm{\phi})]\), where the expectation is taken over \((\bm{\theta},\bm{\phi})\sim\mathcal{F}\times\mathcal{G}\).

**Algorithms.** Assuming access to an exact first-order oracle \((f,\bm{g})\), a natural approach to computing SE in convex-concave min-max Stackelberg games with uncoupled constraints games (i.e., saddle-point problems) is to simultaneously run projected gradient descent and projected gradient ascent on the objective function \(f\) w.r.t. \(\bm{x}\in\mathcal{X}\) and \(\bm{y}\in\mathcal{Y}\), i.e., for \(t=0,1,2,\ldots\), \((\bm{x}^{(t+1)},\bm{y}^{(t+1)})\leftarrow\Pi_{\mathcal{X}\times\mathcal{Y}}[ (\bm{x}^{(t)},\bm{y}^{(t)})+(-\nabla_{\bm{x}}f,\nabla_{\bm{y}}f)(\bm{x}^{(t)}, \bm{y}^{(t)})]\), a method known under the names of _Arrow-Hurwicz-Uzawa, primal-dual_, and (simultaneous) _gradient descent ascent (GDA)_[5, 6]. Intuitively, any fixed point of GDA in such games, i.e., \((\bm{x}^{*},\bm{y}^{*})\in\mathcal{X}\times\mathcal{Y}\) s.t. \(\|(\bm{x}^{*},\bm{y}^{*})-\Pi_{\mathcal{X}\times\mathcal{Y}}[(\bm{x}^{*},\bm {y}^{*})+(-\nabla_{\bm{x}}f,\nabla_{\bm{y}}f)(\bm{x}^{*},\bm{y}^{*})]\|=0\), satisfies the necessary and sufficient optimality condition for an action profile to be a SE. More generally, in convex-concave min-max Stackelberg games (without coupled constraints), this approach fails, as the necessary and sufficient optimality condition for an action profile \((\bm{x}^{*},\bm{y}^{*})\in\mathcal{X}\times\mathcal{Y}\) to be a SE is \(\|(\bm{x}^{*},\bm{y}^{*})-\Pi_{\mathcal{X}\times\mathcal{Z}(\bm{x}^{*})}[(\bm {x}^{*},\bm{y}^{*})+(-\nabla_{\bm{x}}f^{*}(\bm{x}^{*}),\nabla_{\bm{y}}f(\bm{x} ^{*},\bm{y}^{*}))]\|=0\), where, for any leader action \(\widehat{\bm{x}}\in\mathcal{X},\nabla_{\bm{x}}f^{*}(\widehat{\bm{x}})\doteq \ell(\bm{y}^{*}(\widehat{\bm{x}}),\bm{\lambda}^{*}(\widehat{\bm{x}});\widehat {\bm{x}})\), for some \((\bm{y}^{*},\bm{\lambda}^{*})(\widehat{\bm{x}})\in\mathcal{Y}^{*}(\widehat{ \bm{x}})\times\Lambda^{*}(\widehat{\bm{x}})\), by the subdifferential envelope theorem [33]. The observation that any subgradient of \(\nabla_{\bm{x}}f^{*}\) depends on the optimal KKT multipliers motivates a first-order method based on the gradient of the Lagrangian.

A min-max Stackelberg game can be seen as a three-player game \(\min_{\bm{x}\in\mathcal{X}}\max_{\bm{y}\in\mathcal{Z}(\bm{x})}f(\bm{x},\bm{y} )=\min_{\bm{x}\in\mathcal{X}}\max_{\bm{y}\in\mathcal{Y}}\min_{\bm{\lambda}\in \mathbb{R}^{d}_{+}}\ell\left(\bm{y},\bm{\lambda};\bm{x}\right)\), where the \(\bm{x}\)-player moves first, and the \(\bm{y}\)- and \(\bm{\lambda}\)-players move second, simultaneously, because strong duality holds under Assumption 3 (Slater's condition [68]) for the inner min-max optimization problem, i.e., \(\max_{\bm{y}\in\mathcal{Y}}\min_{\bm{\lambda}\in\mathbb{R}^{d}_{+}}\ell\left( \bm{y},\bm{\lambda};\bm{x}\right)=\min_{\bm{\lambda}\in\mathbb{R}^{d}_{+}} \max_{\bm{y}\in\mathcal{Y}}\ell\left(\bm{y},\bm{\lambda};\bm{x}\right)\). The problem of computing an SE can thus be reduced to the min-max optimization \(\min_{(\bm{x},\bm{\lambda})\in\mathcal{X}\times\mathbb{R}^{d}_{+}}\max_{\bm{y} \in\mathcal{Y}}\ell\left(\bm{y},\bm{\lambda};\bm{x}\right)\), which we might hope to solve by running GDA on \(\ell(\bm{y},\bm{\lambda};\bm{x})\) w.r.t. \((\bm{x},\bm{\lambda})\) and \(\bm{y}\) over \(\mathcal{X}\times\mathbb{R}^{d}_{+}\) and \(\mathcal{Y}\), respectively. Although \(\bm{y}\mapsto\ell(\bm{y},\bm{\lambda};\bm{x})\) is concave, \((\bm{x},\bm{\lambda})\mapsto\ell(\bm{y},\bm{\lambda};\bm{x})\) is not convex, and its stationary points (i.e., points \((\bm{y}^{*},\bm{\lambda}^{*};\bm{x}^{*})\) s.t. \(\|(\bm{y}^{*},\bm{\lambda}^{*};\bm{x}^{*})-\Pi_{\mathcal{Y}\times\mathbb{R}^{ d}_{+}\times\mathcal{X}}[(\bm{y}^{*},\bm{\lambda}^{*};\bm{x}^{*})+(\nabla_{\bm{y}} \ell,-\nabla_{\bm{\lambda}}\ell,-\nabla_{\bm{x}}\ell)(\bm{y}^{*},\bm{\lambda}^{ *};\bm{x}^{*})]\|=0\)) do not necessarily coincide with SE even in simple convex-concave min-max Stackelberg games [35].

```
1:\(\mathcal{X},\mathcal{Y},\widehat{F},\widehat{G},\mathcal{F},\mathcal{G},\bm{x}^{(0 )},T_{\bm{x}},\{\eta_{\bm{x}}^{(t)}\}_{t},\delta\) (+ for nested SGDA:) \(\Lambda,\bm{y}^{\prime(0)},\bm{\lambda}^{\prime(0)},T_{\bm{y}},\{\eta_{\bm{y} }^{(t)}\}_{t}\)
2:\((\bm{x}^{(t)},\bm{y}^{(t)},\bm{\lambda}^{(t)})_{t=0}^{T_{\bm{x}}}\)
3:for\(t=0,\ldots,T_{\bm{x}}\)do
4:ifSaddle-Point-Oracle SGDthen
5: Find \((\bm{y}^{(t)},\bm{\lambda}^{(t)})\in\mathcal{Y}\times\mathbb{R}^{d}_{+}\) s.t. \(\max_{\bm{y}\in\mathcal{Y}}\ell\left(\bm{y}^{(t)},\bm{\lambda};\bm{x}^{(t)} \right)-\min_{\bm{\lambda}\in\mathbb{R}^{d}_{+}}\ell\left(\bm{y},\bm{\lambda} ^{(t)};\bm{x}^{(t)}\right)\leq\delta\), the convexity of the marginal function \(f^{*}\), the algorithm runs a descent step on \(f^{*}\) w.r.t. \(\bm{x}\), in which, for any leader action \(\bm{x}\in\mathcal{X}\), a subgradient \(\nabla_{\bm{x}}f^{*}\) is approximated by \(\widehat{\nabla_{\bm{x}}f^{*}}(\bm{x})=\ell(\widehat{\bm{y}},\widehat{\bm{ \lambda}};\bm{x})\). In this paper, we replace the exact first-order oracle used by nested GDA with a stochastic one, the gradient descent step with a step of stochastic gradient descent (SGD), and GDA with stochastic GDA (SGDA), using in both cases the stochastic 

[MISSING_PAGE_FAIL:6]

follower). Additionally, the _marginal action-value function_\(q^{*\bm{\pi}}(\bm{s},\bm{a})\doteq\max_{\bm{b}\in\mathcal{C}(\bm{s},\bm{a})}q^{ \bm{\pi}}(\bm{s},\bm{a},\bm{b})\) is the payoff when play initiates at state \(\bm{s}\) with the leader taking action \(\bm{a}\), after which the follower best responds (at state \(\bm{s}\) only), with both players playing according to \(\bm{\pi}\) thereafter. Finally, for any leader policy \(\bm{\pi}_{\bm{a}}\in\mathcal{A}^{\mathcal{S}}\), we define the _marginal (state-value) function_\(u^{*}(\bm{\pi}_{\bm{a}})\doteq\max_{\bm{\pi}_{\bm{b}}\in\mathcal{Z}(\bm{ \pi}_{\bm{a}})}u(\bm{\pi}_{\bm{a}},\bm{\pi}_{\bm{b}})\).

**Recursive Stackelberg Equilibrium.** A policy profile \(\bm{\pi}^{*}\doteq(\bm{\pi}_{\bm{a}}^{*},\bm{\pi}_{\bm{b}}^{*})\in\mathcal{A} ^{\mathcal{S}}\times\mathcal{B}^{\mathcal{S}}\) is called an \((\varepsilon,\delta)\)_-recursive (or Markov perfect) Stackelberg equilibrium_ iff \(\forall\bm{s}\in\mathcal{S}\), \(\|\nabla_{\bm{\Pi}^{\mathcal{R}}}\|\,\bm{g}(\bm{s},\bm{\pi}^{*}(\bm{s}))\|\leq\delta\) and \(\max_{\bm{\pi}_{\bm{b}}\in\mathcal{Z}(\bm{\pi}_{\bm{a}})}v^{(\bm{\pi}_{\bm{a }}^{*},\bm{\pi}_{\bm{b}})}(\bm{s})-\delta\leq v^{\bm{\pi}^{*}}(\bm{s})\leq \min_{\bm{\pi}_{\bm{a}}\in\mathcal{A}^{\mathcal{S}}}\max_{\bm{\pi}_{\bm{b}}\in \mathcal{Z}(\bm{\pi}_{\bm{a}})}v^{(\bm{\pi}_{\bm{a}},\bm{\pi}_{\bm{b}})}(\bm{s })+\varepsilon\). A recursive SE is guaranteed to exist in continuous state, continuous action zero-sum Markov Stackelberg games [36]. A policy profile \(\bm{\pi}^{*}\doteq(\bm{\pi}_{\bm{a}}^{*},\bm{\pi}_{\bm{b}}^{*})\in\mathcal{A} ^{\mathcal{S}}\times\mathcal{Z}(\bm{\pi}_{\bm{a}}^{*})\) is called an \((\varepsilon,\delta)\)_-Markov perfect GNE_ iff \(\forall\bm{s}\in\mathcal{S}\), \(\max_{\bm{\pi}_{\bm{b}}\in\mathcal{Z}(\bm{\pi}_{\bm{a}})}v^{(\bm{\pi}_{\bm{a }}^{*},\bm{\pi}_{\bm{b}}^{*})}(\bm{s})-\delta\leq v^{\bm{\pi}^{*}}(\bm{s})\leq \min_{\bm{\pi}_{\bm{a}}\in\mathcal{A}^{\mathcal{S}}}v^{\bm{\pi}_{\bm{a}},\bm{ \pi}_{\bm{b}}^{*}}(\bm{s})+\varepsilon\).

**Convex-Concave Markov Stackelberg Games.** As we have shown (Theorem 3.1), Stackelberg equilibria can be computed in polynomial time in convex-concave min-max Stackelberg games, assuming access to an unbiased first order-stochastic oracle. We now define an analogous class of Markov Stackelberg games, namely zero-sum Markov Stackelberg games in which the min-max Stackelberg game played at each state is convex-concave. A _convex-concave zero-sum Markov Stackelberg game_ is a continuous state, continuous action zero-sum Markov game where, for all policy profiles \(\bm{\pi}\in\mathcal{A}^{\mathcal{S}}\times\mathcal{B}^{\mathcal{S}}\), 1. the marginal action-value function \((\bm{s},\bm{a})\mapsto q^{*\bm{\pi}}(\bm{s},\bm{a})\) is convex, 2. the action-value function \((\bm{s},\bm{b})\mapsto q^{\bm{\pi}}(\bm{s},\bm{a},\bm{b})\) is concave, for all \(\bm{a}\in\mathcal{A}\), 3. the state and action spaces \(\mathcal{S},\mathcal{A}\) and \(\mathcal{B}\) are convex, and 4. the action correspondence \(\mathcal{C}\) is convex-valued. We note that any _continuous state, continuous action convex-concave zero-sum Markov game_, i.e., 1. \(\mathcal{N}=\emptyset\), 2. \((\bm{s},\bm{a})\mapsto r(\bm{s},\bm{a},\bm{b})\) is convex, for all \(\bm{b}\in\mathcal{B}\), 3. \((\bm{s},\bm{b})\mapsto r(\bm{s},\bm{a},\bm{b})\) is concave, for all \(\bm{a}\in\mathcal{A}\), 4. \((\bm{s},\bm{a})\mapsto p(\cdot\mid\bm{s},\bm{a},\bm{b})\) is stochastically convex, for all \(\bm{b}\in\mathcal{B}\); and 5. \((\bm{s},\bm{b})\mapsto p(\cdot\mid\bm{s},\bm{a},\bm{b})\) is stochastically concave, for all \(\bm{a}\in\mathcal{A}\), is a convex-concave zero-sum Markov Stackelberg game for which the set of Markov perfect generalized Nash equilibria is a subset of the recursive SE.

As our plan is to use our nested SGDA algorithm to compute recursive Stackelberg equilibria, we begin by showing that zero-sum Markov Stackelberg games are an instance of min-max Stackelberg games. Assume parametric policy classes for the leader and follower, respectively, namely \(\mathcal{P}_{\mathcal{X}}\doteq\{\bm{\pi}_{\bm{x}}:\mathcal{S}\to\mathcal{A} \mid\bm{x}\in\mathcal{X}\}\subseteq\mathcal{A}^{\mathcal{S}}\) and \(\mathcal{P}_{\mathcal{Y}}\doteq\{\bm{\pi}_{\bm{y}}:\mathcal{S}\to\mathcal{B} \mid\bm{y}\in\mathcal{Y}\}\subseteq\mathcal{B}^{\mathcal{S}}\), for parameter spaces \(\mathcal{X}\subset\mathbb{R}^{d}\) and \(\mathcal{Y}\subset\mathbb{R}^{d}\). Using these parameterizations, we redefine \(v^{(\bm{x},\bm{y})}\doteq v^{(\bm{\pi}_{\bm{x}},\bm{\pi}_{\bm{y}})}\), \(q^{(\bm{x},\bm{y})}\doteq q^{(\bm{\pi}_{\bm{x}},\bm{\pi}_{\bm{y}})}\), \(u(\bm{x},\bm{y})\doteq u(\bm{\pi}_{\bm{x}},\bm{\pi}_{\bm{y}})\), etc., and thus restate the problem of computing a recursive SE as finding \((\bm{x},\bm{y})\in\mathcal{X}\times\mathcal{Y}\) that solves \(\min_{\bm{x}\in\mathcal{X}}\max_{\bm{y}\in\mathcal{Y}\in\mathcal{Z}(\bm{x})}v^{( \bm{x},\bm{y})}(\bm{s})\), for all states \(\bm{s}\in\mathcal{S}\). As this optimization problem is infinite dimensional for continuous state games, we optimize the objective and satisfy the constraints, both in expectation over the initial state distribution \(\mu\), thereby reducing the problem to the min-max Stackelberg game \(\min_{\bm{x}\in\mathcal{X}}\max_{\bm{y}\in\mathcal{Z}(\bm{x})}u(\bm{x},\bm{y})\).

In Appendix D, assuming 1. biaffine parametric policy classes, i.e., \((\bm{s},\bm{x})\mapsto\bm{\pi}_{\bm{x}}(\bm{s})\) and \((\bm{s},\bm{y})\mapsto\bm{\pi}_{\bm{y}}(\bm{s})\) are biaffine, and 2. non-empty, compact, and convex parameter spaces \(\mathcal{X}\) and \(\mathcal{Y}\), we show that the min-max Stackelberg game associated with any convex-concave zero-sum Markov Stackelberg game is also convex-concave (Lemma 4). We also provide sufficient conditions on the primitives \(\mathcal{M}\) of any zero-sum Markov Stackelberg game to ensure that it is convex-concave (Lemma 5 and 6). At a high level, our results allow us to conclude that a zero-sum Markov Stackelberg game is convex-concave if the 1. reward (resp. transition probability) function is concave (resp. stochastically concave) in the state and the follower's action; 2. the reward (resp. transition probability) function is convex (resp. stochastically convex) in the state and the leader's follower's actions; and 3. the follower's action correspondence is concave.

**Computation.** We now turn our attention to the computation of recursive SE in convex-concave zero-sum Markov Stackelberg games. Mirroring the steps by which policy gradient has been show to converge in other settings [24], we first define an unbiased first-order stochastic oracle for zero-sum Markov-Stackelberg games, given access to an unbiased first-order stochastic oracle for the reward and probability transition functions. We then establish convergence of nested SGDA in this setting by invoking Theorem 3.1 under the following assumptions.

**Assumption 4** (Convergence Assumptions).: _1. The parameter spaces \(\mathcal{X}\) and \(\mathcal{Y}\) are non-empty, compact, and convex; 2. the policy parameterizations are biaffine, i.e., \((\bm{s},\bm{x})\mapsto\bm{\pi}_{\bm{x}}(\bm{s})\) and \((\bm{s},\bm{y})\mapsto\bm{\pi}_{\bm{y}}(\bm{s})\) are biaffine; 3. the set of non-trivially constrained sets is finite \(\mathcal{N}\), i.e. \(\|\mathcal{N}\|<\infty\);_4. (Slater's condition) for all \(\bm{s}\in\mathcal{N}\) and \(\bm{a}\in\mathcal{A}\), there exists \(\widehat{\bm{b}}\in\mathcal{B}\) s.t. \(\bm{g}(\bm{s},\bm{a},\widehat{\bm{b}})>0\); and 5. the reward \(r\), probability transition \(p\), and coupling constraint \(\bm{g}\) functions are Lipschitz-continuous._

Stochastic nested GDA relies on an unbiased first-order stochastic oracle \((\widehat{F},\widehat{G},\mathcal{F},\mathcal{G})\), which we can use to obtain unbiased first-order stochastic estimators of \(u\) and \(\bm{g}\). Since the constraints are deterministic, we simply set \(\widehat{G}(\bm{x},\bm{y};\bm{s})\doteq(\bm{g}(\bm{s},\bm{\pi}_{\bm{x}}(\bm{s} ),\bm{\pi}_{\bm{y}}(\bm{s})))_{\bm{s}\in\mathcal{S}}\) and \(\mathcal{G}(\bm{s})\doteq\rho(\bm{s})\), for any distribution \(\rho\in\Delta(\mathcal{S})\) over the state space to obtain an unbiased first-order stochastic oracle for the constraints \(\bm{g}\). While for simplicity we define \(\widehat{G}\) as such, \(\widehat{G}\) is tractable to compute (i.e., finite-dimensional) only when \(\mathcal{N}\) is finite. When \(\mathcal{N}\) is infinite, our theoretical results generalize by setting \(\widehat{G}(\bm{x},\bm{y};\bm{s})\doteq(\min_{\bm{s}\in\mathcal{N}}g_{c}(\bm{s },\bm{\pi}_{\bm{x}}(\bm{s}),\bm{\pi}_{\bm{y}}(\bm{s})))_{c\in[d]}\); however, in practice, this estimator might be intractable, in which case one might choose to abandon our theoretical guarantees in favor of the biased estimator \(\widehat{G}(\bm{x},\bm{y};\bm{s})\doteq\bm{g}(\bm{s},\bm{\pi}_{\bm{x}}(\bm{s} ),\bm{\pi}_{\bm{y}}(\bm{s}))\). In all cases, the definition of \(\nabla_{(\bm{x},\bm{y})}\widehat{G}\) follows directly, since \(\widehat{G}\) is deterministic. Now, for any history \(\bm{h}\) of length \(\tau\), define the _cumulative payoff estimator_\(\widehat{R}(\bm{\pi};\bm{h})\doteq\sum_{t=0}^{\tau-1}\mu(\bm{s}^{(0)})\prod_{k= 0}^{t-1}\gamma^{k}p(\bm{s}^{(k+1)}\mid\bm{s}^{(k)},\bm{\pi}(\bm{s}^{(k)}))r( \bm{s}^{(k)},\bm{\pi}(\bm{s}^{(k)})))\). We then construct an estimator for \(u\) using _first-order gradient estimator_[69], i.e., we set \(\widehat{F}(\bm{x},\bm{y};\bm{h})\doteq\widehat{R}(\bm{\pi}_{\bm{x}},\bm{\pi} _{\bm{y}};\bm{h})\), and \(\nabla_{(\bm{x},\bm{y})}\widehat{F}(\bm{x},\bm{y};\bm{h})\doteq\nabla_{(\bm{x },\bm{y})}\widehat{R}(\bm{\pi}_{\bm{x}},\bm{\pi}_{\bm{y}};\bm{h})\). Regarding the variances of this oracle model, as \(\widehat{G}\) and \(\nabla_{(\bm{x},\bm{y})}\widehat{G}\) are deterministic, they have bounded variance. Moreover, if the policy and the reward and transition probability functions are Lipschitz-continuous, then \(\widehat{R}\) and \(\nabla_{(\bm{x},\bm{y})}\widehat{R}\) are also Lipschitz-continuous if their domains are compact (i.e., if \(\mathcal{S}\), \(\mathcal{A}\), and \(\mathcal{B}\) are compact). Hence \(\widehat{F}\) and \(\nabla F\) likewise must be Lipschitz-continuous, which implies that their variances must be bounded, e.g., there exists \(\sigma_{\nabla f}\in\mathbb{R}\) s.t. \(\mathbb{E}_{\bm{h}}\left[\|\nabla\widehat{F}(\bm{x},\bm{y};\bm{h})\|^{2}\right] \leq\|\nabla\widehat{F}(\bm{x},\bm{y};\bm{h})\|_{\infty}^{2}=\sigma_{\nabla f}\) where the middle expression is well-defined since \(\nabla\widehat{F}\) is Lipschitz-continuous over its compact domain.

With all of this machinery in place, we can now extend nested SGDA to compute recursive Stackelberg equilibria in zero-sum Markov Stackelberg games (Algorithm 2; Appendix C). In the usual case, when the policy parameterization does not represent the space of _all_ policies \(\mathcal{A}^{\mathcal{S}}\times\mathcal{B}^{\mathcal{S}}\), this result should be understood as convergence to the recursive Stackelberg equilibria of a game in which the players' action spaces are restricted to the parameterized policies.

**Theorem 4.1**.: _Let \(\mathcal{M}\) be a convex-concave zero-sum Markov Stackelberg game. Under Assumption 4, for any \(\varepsilon,\delta\geq 0\), if nested policy gradient descent ascent (Algorithm 2, Appendix C) is run with inputs that satisfy for all \(t\in\mathbb{N}_{+}\), \(\eta_{\bm{x}}^{(t)},\eta_{\bm{x}}^{(t)}\in\Theta\left(\nicefrac{{1}}{{\sqrt{t+1 }}}\right)\), and outputs \((\bm{x}^{*},\bm{y}^{*},\bm{\lambda}^{*})\), then in expectation over all runs of the algorithm (i.e., sample paths of \(\bm{\theta}\) and \(\phi\)), the policy profile \((\bm{\pi}_{\bm{x}^{*}},\bm{\pi}_{\bm{y}^{*}})\) is an \((\varepsilon+\delta,\delta)-\)recursive SE after \(\tilde{O}(\nicefrac{{1}}{{\varepsilon^{2}\delta^{2}}})\) oracle calls._

## 5 Application: Reach-Avoid Problems

In this section, we endeavor to apply our algorithms to a real-world application, namely reach-avoid problems. In a reach-avoid problem (e.g., [29, 32]), an agent seeks to reach one of a set of targets--achieve _liveness_--while avoiding obstacles along the way--ensuring _safety_. Reach-avoid problems have myriad applications, including network consensus problems [42], motion planning [21, 41], pursuit-evasion games [30, 44], autonomous driving [43], and path planning [80], to name a few.

The obstacles in a reach-avoid problem are not necessary stationary; they may move, either randomly or deliberately, around the environment. When the obstacles' movement is random, the problem can be modeled as an MDP. But when their movement is deliberate, so that they are more like a rational opponent than a stochastic process, the problem is naturally modeled as a zero-sum game, where the agent--the protagonist--aims to reach its target, while an antagonist--representing the obstacles--seeks to prevent the protagonist from doing so. Past work has modeled these games as simultaneous-move (e.g., [29, 32]), imposing what should be a hard constraint--that the agent cannot collide with any of the obstacles--as a soft constraint in the form of large negative rewards.

Using the framework of zero-sum Markov Stackelberg games, we model this hard constraint properly, with the leader as the antagonist, whose movements impose constraints on the moves of the follower, the protagonist. We then use nested policy GDA to compute Stackelberg equilibria and simultaneous SGDA to compute GNE, and show experimentally that the protagonist learns stronger policies in the sequential (i.e., Stackelberg) game than in the simultaneous.

A (discrete-time discounted infinite-horizon continuous state and action) _reach-avoid game_\((l,\mathcal{S},\mathcal{T},\mathcal{V},\mathcal{A},\mathcal{B},\mu,r,\boldsymbol{ h})\) comprises two players, the _antagonist_ (or \(\boldsymbol{a}\)-player) and the _protagonist_ (or \(\boldsymbol{b}\)-player), each of whom occupies a state \(\boldsymbol{s}_{\boldsymbol{a}},\boldsymbol{s}_{\boldsymbol{b}}\in\mathcal{S}\) in a state space \(\mathcal{S}\subset\mathbb{R}^{l}\), for some \(l\in\mathbb{N}\). The protagonist's goal is to find a path through the safe set \(\mathcal{V}\subset\mathcal{S}\times\mathcal{S}\) that reaches a state in the target set \(\mathcal{T}\subset\mathcal{V}\), while steering clear of the avoid set \(\overline{\mathcal{V}}=\mathcal{S}\times\mathcal{S}\setminus\mathcal{V}\). This safe and avoid set formulation is intended to represent capture constraints, which have been the focus of the reach-avoid literature [80].

Initially, the players occupy some state \(\boldsymbol{s}^{(0)}\sim\mu\in\Delta(\mathcal{V})\) drawn from an initial joint distribution \(\mu\) over all states, excluding the target and avoid sets. At each subsequent time-step \(t\in\mathbb{N}_{+}\), the antagonist (resp. protagonist) chooses \(\boldsymbol{a}^{(t)}\in\mathcal{A}\) (resp. \(\boldsymbol{b}^{(t)}\in\mathcal{B}\)) from a set of possible directions \(\mathcal{A}\subseteq\mathbb{R}^{l}\) (resp. \(\mathcal{B}\subseteq\mathbb{R}^{l}\)) in which to move. After both the antagonist and the protagonist move, they receive respective rewards \(-r(\boldsymbol{s}^{(t)},\boldsymbol{a}^{(t)},\boldsymbol{b}^{(t)})\) and \(r(\boldsymbol{s}^{(t)},\boldsymbol{a}^{(t)},\boldsymbol{b}^{(t)})\). Then, either the game ends, with probability \(1-\gamma\), for some discount rate \(\gamma\in(0,1)\), or the players move to a new state \(\boldsymbol{s}^{(t+1)}\doteq\boldsymbol{h}(\boldsymbol{s}^{(t)},\boldsymbol{ a},\boldsymbol{b})=\left(\boldsymbol{h}_{\boldsymbol{a}}(\boldsymbol{s}^{(t)} _{\boldsymbol{a}},\boldsymbol{a}),\boldsymbol{h}_{\boldsymbol{b}}( \boldsymbol{s}^{(t)}_{\boldsymbol{b}},\boldsymbol{b})\right)\), as determined by their respective displacement functions \(\boldsymbol{h}_{\boldsymbol{a}}:\mathcal{S}\times\mathcal{A}\to\mathcal{S}\) and \(\boldsymbol{h}_{\boldsymbol{b}}:\mathcal{S}\times\mathcal{B}\to\mathcal{S}\). We can express this deterministic transition as the following probability transition function \(p(\boldsymbol{s}^{\prime}\mid\boldsymbol{s},\boldsymbol{a},\boldsymbol{b}) \doteq\mathbbm{1}_{\boldsymbol{s}^{\prime}}(\boldsymbol{h}(\boldsymbol{s}, \boldsymbol{a},\boldsymbol{b}))\).

We define the feasible action correspondence \(\mathcal{C}(\boldsymbol{s},\boldsymbol{a})\doteq\{\boldsymbol{b}\in\mathcal{ B}\mid\boldsymbol{\alpha}(\boldsymbol{s},\boldsymbol{a},\boldsymbol{b})\geq \boldsymbol{0}\}\) via a vector-valued _safety constraint function_\(\boldsymbol{\alpha}:\mathcal{S}^{2}\times\mathcal{S}\times\mathcal{S} \to\mathbb{R}^{d}\), which outputs a subset of the protagonist's actions in the safe set, i.e., for all \((\boldsymbol{s},\boldsymbol{a})\in\mathcal{S}^{2}\times\mathcal{A}\), \(\mathcal{C}(\boldsymbol{s},\boldsymbol{a})\subseteq\{\boldsymbol{b}\in\mathcal{ B}\mid\boldsymbol{h}(\boldsymbol{s},\boldsymbol{a},\boldsymbol{b})\in\mathcal{V}\}\). Note that we do not require this inclusion to hold with equality; in this way, the protagonist can choose to restrict itself to actions far from the boundaries of the avoid set, thereby increasing its safety, albeit perhaps at the cost of liveness. Overloading notation, we define the feasible policy correspondence \(\mathcal{C}(\boldsymbol{\pi}_{\boldsymbol{a}})\doteq\{\boldsymbol{\pi}_{ \boldsymbol{b}}:\mathcal{S}\to\mathcal{B}\mid\boldsymbol{\pi}_{\boldsymbol{ b}}(\boldsymbol{s})\in\mathcal{C}(\boldsymbol{s},\boldsymbol{\pi}_{ \boldsymbol{a}}(\boldsymbol{s})),\text{for all }\boldsymbol{s}\in\mathcal{S}\}\).

We consider two forms of reward functions. The first, called the _reach probability reward_, \(r(\boldsymbol{s},\boldsymbol{a},\boldsymbol{b})=\mathbbm{1}_{\mathcal{T}}( \boldsymbol{s}_{\boldsymbol{b}})\), is an indicator function that awards the protagonist with a payoff of \(1\) if it enters the target set, and \(0\) otherwise. Under this reward function, the cumulative payoff function (i.e., the expected value of these rewards in the long term) represents the probability that the protagonist reaches the target, hence its name. The second reward function is the _reach distance reward function_, \(r(\boldsymbol{s},\boldsymbol{a},\boldsymbol{b})=-\min_{\boldsymbol{s}^{ \prime}\in\mathcal{T}}\|\boldsymbol{s}_{\boldsymbol{b}}-\boldsymbol{s}^{ \prime}\|^{2}\), which penalizes the protagonist based on how far away it is from the target set. With all these definitions in hand, we can now cast the reach-avoid game as a zero-sum Markov Stackelberg game \((2l,l,l,d,\mathcal{S},\mathcal{A},\mathcal{B},\mu,r,\boldsymbol{\alpha},p,\gamma)\).

The next assumption ensures that 1. under the reach probability reward function, a reach-avoid game is a convex-_non_-concave zero-sum Markov Stackelberg game (i.e., the marginal function \(\boldsymbol{x}\mapsto u^{*}(\boldsymbol{x})\) is convex, and the cumulative payoff function \(\boldsymbol{y}\mapsto u(\boldsymbol{x},\boldsymbol{y})\) is _non_-concave, for all \(\boldsymbol{x}\in\mathcal{X}\)); and 2. under the reach distance reward function, a reach-avoid game is a convex-concave zero-sum Markov Stackelberg game. Furthermore, a Markov perfect GNE is guaranteed to exist under this assumption, assuming the reach distance reward but not under the reach probability distance.10

Footnote 10: The existence of Markov perfect GNE, and hence GNE, is guaranteed by a straightforward generalization of Shapley’s [65] result on the existence of Markov perfect Nash equilibria in zero-sum Markov games.

To state this assumption, for convenience, we model the leader's policy \(\boldsymbol{\pi}_{\boldsymbol{a}}(\boldsymbol{s})\doteq\boldsymbol{x} \boldsymbol{s}_{\boldsymbol{a}}\) as parameterized by \(\boldsymbol{x}\in\mathcal{X}\subset\mathbb{R}^{l\times l}\), and the follower's policy \(\boldsymbol{\pi}_{\boldsymbol{b}}(\boldsymbol{s})\doteq\boldsymbol{y} \boldsymbol{s}_{\boldsymbol{b}}\) as parameterized by \(\boldsymbol{y}\in\mathcal{V}\subset\mathbb{R}^{l\times l}\). Note also that we assume decentralized, play, meaning the players learn only from their own state and rewards, and maintain their policies independently of one another.

**Assumption 5** (Convex-Concave Reach-Avoid Game).: _1. The state space \(\mathcal{S}\) and the target set \(\mathcal{T}\) are non-empty and convex; 2. the action spaces \(\mathcal{A},\mathcal{B}\) are non-empty, compact and convex; 3. the displacement functions \(\boldsymbol{h}_{\boldsymbol{a}},\boldsymbol{h}_{\boldsymbol{b}}\) are affine; 4. \(\boldsymbol{a}\mapsto\boldsymbol{\alpha}(\boldsymbol{s},\boldsymbol{a}, \boldsymbol{b})\) is log-convex for all \(\boldsymbol{b}\in\mathcal{B}\), and \(\boldsymbol{b}\mapsto\boldsymbol{\alpha}(\boldsymbol{s},\boldsymbol{a}, \boldsymbol{b})\) for all \((\boldsymbol{s},\boldsymbol{a})\in\mathcal{S}\times\mathcal{A}\); 5. the players' parameter spaces \(\mathcal{X}\) and \(\mathcal{Y}\) are non-empty, compact, and convex; and 6. the players policies are biaffine, i.e., \(\boldsymbol{\pi}_{\boldsymbol{a}}(\boldsymbol{s})\doteq\boldsymbol{x} \boldsymbol{s}_{\boldsymbol{a}}\) and \(\boldsymbol{\pi}_{\boldsymbol{y}}(\boldsymbol{s})\doteq\boldsymbol{x} \boldsymbol{s}_{\boldsymbol{b}}\)._

Part 1 is a standard assumption commonly imposed on reach-avoid games (see, for instance Fisac et al. [29]). Part 3 is satisfied by natural displacement functions of the type \(\boldsymbol{h}(\boldsymbol{s},\boldsymbol{a},\boldsymbol{b})=\boldsymbol{s}+ \beta(\boldsymbol{a},\boldsymbol{b})\), for some \(\beta\in\mathbb{R}\), which is a natural characterization of all displacement functions with constant velocity \(\beta\), when \(\mathcal{A}=\mathcal{B}\subseteq\{\boldsymbol{z}\in\mathcal{S}\mid\|\boldsymbol{z} \|=1\}\). Part 4 is satisfied by various action correspondences, such as \(\boldsymbol{\alpha}(\boldsymbol{s},\boldsymbol{a},\boldsymbol{b})\doteq \exp\{\min_{\boldsymbol{s}^{\prime}\in\overline{\mathcal{V}}}\|(\boldsymbol{h}_{ \boldsymbol{a}}(\boldsymbol{s}_{\boldsymbol{a}},\boldsymbol{a}),\boldsymbol{s}_{ \boldsymbol{b}})-\boldsymbol{s}^{\prime}\|\}-1-\|\boldsymbol{h}_{\boldsymbol{b}}( \boldsymbol{s}_{\boldsymbol{b}},\boldsymbol{b})-\boldsymbol{s}_{\boldsymbol{b}}\|\), which shrinksthe space of actions exponentially as the protagonist approaches the antagonist, and can thus be interpreted as describing a safety-conscious protagonist. The following theorem states the convex-concavity properties of reach-avoid games, and shows polynomial-time computability of recursive SE under Assumption 5. Note that for the reach probability reward function, it is not possible to obtain a polynomial-time convergence result, result since the rewards are not even continuous.

**Theorem 5.1**.: _Under the reach distance (resp. reach probability) reward function, any reach-avoid game for which Assumption 5 hold is convex-concave (resp. convex-non-concave). Moreover, if \(\boldsymbol{\alpha}\) is Lipschitz-continuous, then nested SGDA is guaranteed to converge in such games to recursive SE policies in polynomial time._

**Experiments.** We ran a series of experiments on reach-avoid problems,11 which were designed to assess the efficacy of policies learned in a Stackelberg game formulation as compared to those learned in a simultaneous-move game formulation, assuming complex, i.e., neural, policy parameterizations.

Footnote 11: Our code is found at: https://github.com/arjun-prakash/stackelberg-reach-avoid.

We consider a variant of the two-player differential game introduced in Isaacs [38], played by two Dubins cars. A Dubins car is a simplified model of a vehicle with a constant forward speed \(\nu\) and a constrained turning radius \(\omega\). We model both the protagonist and antagonist as Dubins cars [38] moving around a 2-dimensional state space. The target set is a select subset of the state space, while the avoid set, which defines the safe set, is a ball around the antagonist.

We experiment with only the reach distance, not the reach probability, reward function. In all safe states, the reward is actually a penalty, measuring the protagonist's distance to the target set, while a bonus \(\beta\) is awarded upon reaching a target, at which point the game ends. This reward function suffices for our Stackelberg game setup, which enforces the hard constraint that the protagonist cannot move into the avoid set. In our simultaneous-move game setup, we achieve a similar effect by enhancing the aforementioned reward function with a large penalty (\(-\beta\)) whenever the protagonist touches the avoid set. As in the case of reaching the target, touching the avoid set ends the game.

We note that this reach-avoid game is not actually a continuous game, as there is a discontinuity in the reward function when the target is reached. Additionally, it is possible for the antagonist to be "cornered," meaning left with an empty set of feasible actions (in which case the game ends). For these reasons, recursive SE are not guaranteed to exist in our setup.

Our experiments were run on a 7x7 square grid, with the target set \(\mathcal{T}\) a closed ball of radius 1 centered along the lower edge, and the avoid set \(\overline{\mathcal{V}}\) a closed ball of radius \(0.3\) around the antagonist. We set the bonus (resp. penalty) for reaching the target (resp. avoid set) \(\beta=200\), \(\omega=30^{\circ}\), and \(\nu=0.25\).

Using this experimental setup, we train two agents by playing two games, the Stackelberg and simultaneous-move variants of the reach-avoid game, using nested policy GDA and SGDA, respectively. We evaluate the protagonists' policies to assess their safety and liveness characteristics.

To assess liveness, we ran our agents against an opponent that plays actions sampled uniformly at random. To assess safety, we ran our agents against an opponent that plays actions sampled uniformly at random. To assess safety, we ran our agents against an opponent who chases them, always taking actions that minimize their distance. Table 1 reports the number of wins (W), losses (L), and draws (D), and average game lengths, of 100 games against each opponent. An agent, playing the role of the protagonist, wins when it reaches the target set. A GNE agent loses if it enters \(\overline{\mathcal{V}}\), while a Stackelberg agent loses if it finds itself cornered. The game is a draw if neither player wins or loses within 50 time steps.

We find that the SE agent outperforms the GNE agent by a large margin. The SE agent wins almost all of its games against random, and roughly \(\mathcal{H}\) of its games against the chaser, while the GNE agent wins only half of its games against random, and none of its games against the chaser. Moreover, even when the SE agent loses or draws, it tends to stay alive longer than the GNE agent. Not only does our Stackelberg approach outperform GNE, it is tractable as well. Our methods thus seem to offer a promising path to further progress solving the myriad of robotic applications of reach-avoid.

\begin{table}
\begin{tabular}{|c|l|l|l|} \hline
**Match-up** & **Outcome** & **Mean win length** & **Loss/draw length** \\ \hline \hline GNE vs. random & 47 W, 18 L, 35 D & \(23.23\pm 7.53\) & \(33.71\pm 19.31\) \\ \hline SE vs. random & 95 W, 2 L, 3 D & \(18.16\pm 3.69\) & \(33.0\pm 20.8\) \\ \hline GNE vs. chaser & 0 W, 100 L, 0 D & N/A & \(8.53\pm 1.90\) \\ \hline SE vs. chaser & 63 W, 36 L, 1 D & \(21.63\pm 5.04\) & \(11.06\pm 7.71\) \\ \hline \end{tabular}
\end{table}
Table 1: Game results summary for GNE and SE agents.

## 6 Acknowledgments

Denizalp Goktas was supported by a JP Morgan AI fellowship. Arjun Prakash was partially supported by ONR N00014-22-1-2592 and the Quad Fellowship.

## References

* Agarwal et al. [2020] Alekh Agarwal, Sham M Kakade, Jason D Lee, and Gaurav Mahajan. Optimality and approximation with policy gradient methods in markov decision processes. In _Conference on Learning Theory_, pages 64-66. PMLR, 2020.
* Agarwal et al. [2021] Alekh Agarwal, Sham M. Kakade, Jason D. Lee, and Gaurav Mahajan. On the theory of policy gradient methods: Optimality, approximation, and distribution shift. 22(1), jan 2021. ISSN 1532-4435.
* Altman [1994] Eitan Altman. Flow control using the theory of zero sum markov games. _IEEE transactions on automatic control_, 39(4):814-818, 1994.
* Arrow and Debreu [1954] Kenneth Arrow and Gerard Debreu. Existence of an equilibrium for a competitive economy. _Econometrica: Journal of the Econometric Society_, pages 265-290, 1954.
* Arrow and Hurwicz [1958] Kenneth J. Arrow and Leonid Hurwicz. On the stability of the competitive equilibrium, i. _Econometrica_, 26(4):522-552, 1958. ISSN 00129682, 14680262. URL http://www.jstor.org/stable/1907515.
* Arrow et al. [1958] Kenneth Joseph Arrow, Leonid Hurwicz, and Hirofumi Uzawa. Studies in linear and non-linear programming. 1958.
* Atakan [2003] Alp E. Atakan. Stochastic convexity in dynamic programming. _Economic Theory_, 22(2):447-455, 2003. ISSN 09382259, 14320479. URL http://www.jstor.org/stable/25055693.
* Bai et al. [2021] Yu Bai, Chi Jin, Huan Wang, and Caiming Xiong. Sample-efficient learning of stackelberg equilibria in general-sum games. _Advances in Neural Information Processing Systems_, 34:25799-25811, 2021.
* Banach [1922] Stefan Banach. Sur les operations dans les ensembles abstraits et leur application aux equations integrales. _Fund. math_, 3(1):133-181, 1922.
* Bansal et al. [2017] Somil Bansal, Mo Chen, Sylvia Herbert, and Claire J Tomlin. Hamilton-jacobi reachability: A brief overview and recent advances. In _2017 IEEE 56th Annual Conference on Decision and Control (CDC)_, pages 2242-2253. IEEE, 2017.
* Bellman [1952] Richard Bellman. On the theory of dynamic programming. _Proceedings of the National Academy of Sciences of the United States of America_, 38(8):716, 1952.
* Bensoussan et al. [2015] Alain Bensoussan, Shaokuan Chen, and Suresh P Sethi. The maximum principle for global solutions of stochastic stackelberg differential games. _SIAM Journal on Control and Optimization_, 53(4):1956-1981, 2015.
* Bertsekas [2009] Dimitri Bertsekas. _Convex optimization theory_, volume 1. Athena Scientific, 2009.
* Bertsekas [2012] Dimitri Bertsekas. _Dynamic programming and optimal control: Volume I_, volume 4. Athena scientific, 2012.
* Bertsimas et al. [2011] Dimitris Bertsimas, David B Brown, and Constantine Caramanis. Theory and applications of robust optimization. _SIAM review_, 53(3):464-501, 2011.
* Bhandari and Russo [2019] Jalaj Bhandari and Daniel Russo. Global optimality guarantees for policy gradient methods. _arXiv preprint arXiv:1906.01786_, 2019.
* Boyd et al. [2004] Stephen Boyd, Stephen P Boyd, and Lieven Vandenberghe. _Convex optimization_. Cambridge university press, 2004.
* Bradtke and Barto [1996] Steven J Bradtke and Andrew G Barto. Linear least-squares algorithms for temporal difference learning. _Machine learning_, 22:33-57, 1996.
* Chang et al. [2015] Yanling Chang, Alan L Erera, and Chelsea C White. A leader-follower partially observed, multiobjective markov game. _Annals of Operations Research_, 235(1):103-128, 2015.

* [20] Lv Chen and Yang Shen. On a new paradigm of optimal reinsurance: a stochastic stackelberg differential game between an insurer and a reinsurer. _ASTIN Bulletin: The Journal of the IAA_, 48(2):905-960, 2018.
* [21] Mo Chen, Zhengyuan Zhou, and Claire J Tomlin. Multiplayer reach-avoid games via low dimensional solutions and maximum matching. In _2014 American control conference_, pages 1444-1449. IEEE, 2014.
* [22] Stefan Czerwik. _Functional equations and inequalities in several variables_. World Scientific, 2002.
* [23] John M. Danskin. The theory of max-min, with applications. _SIAM Journal on Applied Mathematics_, 14(4):641-664, 1966. ISSN 00361399. URL http://www.jstor.org/stable/2946123.
* [24] Constantinos Daskalakis, Dylan J Foster, and Noah Golowich. Independent policy gradient methods for competitive reinforcement learning. _Advances in neural information processing systems_, 33:5527-5540, 2020.
* [25] Victor DeMiguel and Huifu Xu. A stochastic multiple-leader stackelberg model: analysis, computation, and application. _Operations Research_, 57(5):1220-1235, 2009.
* [26] Maryam Fazel, Rong Ge, Sham Kakade, and Mehran Mesbahi. Global convergence of policy gradient methods for the linear quadratic regulator. In _International conference on machine learning_, pages 1467-1476. PMLR, 2018.
* [27] Anthony V Fiacco and Jerzy Kyparisis. Convexity and concavity properties of the optimal value function in parametric nonlinear programming. _Journal of optimization theory and applications_, 48(1):95-126, 1986.
* [28] Arlington M Fink. Equilibrium in a stochastic \(n\)-person game. _Journal of science of the hiroshima university, series ai (mathematics)_, 28(1):89-93, 1964.
* [29] Jaime F. Fisac, Mo Chen, Claire J. Tomlin, and S. Shankar Sastry. Reach-avoid problems with time-varying dynamics, targets and constraints. In _Proceedings of the 18th International Conference on Hybrid Systems: Computation and Control_, HSCC '15, page 11-20, New York, NY, USA, 2015. Association for Computing Machinery. ISBN 9781450334334. doi: 10.1145/2728606.2728612. URL https://doi.org/10.1145/2728606.2728612.
* [30] James Flynn. Lion and man: the general case. _SIAM Journal on Control_, 12(4):581-597, 1974.
* [31] David Fridovich-Keil, Ellis Ratner, Lasse Peters, Anca D Dragan, and Claire J Tomlin. Efficient iterative linear-quadratic approximations for nonlinear multi-player general-sum differential games. In _2020 IEEE international conference on robotics and automation (ICRA)_, pages 1475-1481. IEEE, 2020.
* [32] Yan Gao, John Lygeros, and Marc Quincampoix. On the reachability problem for uncertain hybrid systems. _IEEE Transactions on Automatic Control_, 52(9):1572-1586, 2007.
* [33] Denizalp Goktas and Amy Greenwald. Convex-concave min-max stackelberg games. _Advances in Neural Information Processing Systems_, 34, 2021.
* [34] Denizalp Goktas and Amy Greenwald. Robust no-regret learning in min-max Stackelberg games, 2022.
* [35] Denizalp Goktas and Amy Greenwald. Gradient descent ascent in min-max stackelberg games. _arXiv preprint arXiv:2208.09690_, 2022.
* [36] Denizalp Goktas, Sadie Zhao, and Amy Greenwald. Zero-sum stochastic stackelberg games. _Advances in Neural Information Processing Systems_, 35:11658-11672, 2022.
* [37] Xiuli He, Ashutosh Prasad, and Suresh P Sethi. Cooperative advertising and pricing in a dynamic stochastic supply chain: Feedback stackelberg strategies. In _PICMET'08-2008 Portland International Conference on Management of Engineering and Technology_, pages 1634-1649. IEEE, 2008.
* [38] Rufus Isaacs. _Differential Games I: Introduction_. RAND Corporation, Santa Monica, CA, 1954.

* Jin et al. [2020] Chi Jin, Zhuoran Yang, Zhaoran Wang, and Michael I Jordan. Provably efficient reinforcement learning with linear function approximation. In _Conference on Learning Theory_, pages 2137-2143. PMLR, 2020.
* Kakade and Langford [2002] Sham Kakade and John Langford. Approximately optimal approximate reinforcement learning. In _Proceedings of the Nineteenth International Conference on Machine Learning_, pages 267-274, 2002.
* Karaman and Frazzoli [2011] Sertac Karaman and Emilio Frazzoli. Sampling-based algorithms for optimal motion planning. _The international journal of robotics research_, 30(7):846-894, 2011.
* Khanafer et al. [2013] Ali Khanafer, Behrouz Touri, and Tamer Basar. Robust distributed averaging on networks with adversarial intervention. In _52nd IEEE Conference on Decision and Control_, pages 7131-7136. IEEE, 2013.
* Leung et al. [2022] Karen Leung, Sushant Veer, Edward Schmerling, and Marco Pavone. Learning autonomous vehicle safety concepts from demonstrations. _arXiv preprint arXiv:2210.02761_, 2022.
* Lewin [1986] J Lewin. The lion and man problem revisited. _Journal of optimization theory and applications_, 49:411-430, 1986.
* Li and Sethi [2017] Tao Li and Suresh P Sethi. A review of dynamic stackelberg game models. _Discrete and Continuous Dynamical Systems-B_, 22(1):125, 2017.
* Littman [1994] Michael L. Littman. Markov games as a framework for multi-agent reinforcement learning. In _Proceedings of the Eleventh International Conference on International Conference on Machine Learning_, ICML'94, page 157-163, San Francisco, CA, USA, 1994. Morgan Kaufmann Publishers Inc. ISBN 1558603352.
* Lu et al. [2020] Songtao Lu, Ioannis Tsaknakis, Mingyi Hong, and Yongxin Chen. Hybrid block successive approximation for one-sided non-convex min-max problems: Algorithms and applications. _IEEE Transactions on Signal Processing_, 68:3676-3691, 2020. doi: 10.1109/TSP.2020.2986363.
* Margellos and Lygeros [2011] Kostas Margellos and John Lygeros. Hamilton-Jacobi Formulation for Reach-Avoid Differential Games. _IEEE Transactions on Automatic Control_, 56(8):1849-1861, August 2011. ISSN 1558-2523. doi: 10.1109/TAC.2011.2105730.
* Maskin and Tirole [2001] Eric Maskin and Jean Tirole. Markov perfect equilibrium: I. observable actions. _Journal of Economic Theory_, 100(2):191-219, 2001.
* Melo and Ribeiro [2007] Francisco S Melo and M Isabel Ribeiro. Q-learning with linear function approximation. In _International Conference on Computational Learning Theory_, pages 308-322. Springer, 2007.
* Mohammadi [2022] Ashkan Mohammadi. Penalty methods to compute stationary solutions for constrained optimization problems. _arXiv preprint arXiv:2206.04020_, 2022.
* Mohammadi et al. [2022] Ashkan Mohammadi, Boris S Mordukhovich, and M Ebrahim Sarabi. Variational analysis of composite models with applications to continuous optimization. _Mathematics of Operations Research_, 47(1):397-426, 2022.
* Nash [1950] John F. Nash. Equilibrium points in <i>n</i>-person games. _Proceedings of the National Academy of Sciences_, 36(1):48-49, 1950. doi: 10.1073/pnas.36.1.48. URL https://www.pnas.org/doi/abs/10.1073/pnas.36.1.48.
* Nedic and Ozdaglar [2009] Angelia Nedic and Asuman Ozdaglar. Approximate primal solutions and rate analysis for dual subgradient methods. _SIAM Journal on Optimization_, 19(4):1757-1780, 2009.
* Nedic and Ozdaglar [2009] Angelia Nedic and Asuman Ozdaglar. Subgradient methods for saddle-point problems. _Journal of optimization theory and applications_, 142(1):205-228, 2009.
* Nemirovski et al. [2009] Arkadi Nemirovski, Anatoli Juditsky, Guanghui Lan, and Alexander Shapiro. Robust stochastic approximation approach to stochastic programming. _SIAM Journal on optimization_, 19(4):1574-1609, 2009.
* Nikodem [1989] Kazimierz Nikodem. _K-convex and K-concave set-valued functions_. Wydawnictwo Politechniki Lodzkiej, 1989.
* Oksendal et al. [2013] Bernt Oksendal, Leif Sandal, and Jan Uboe. Stochastic stackelberg equilibria with applications to time-dependent newsvendor models. _Journal of Economic Dynamics and Control_, 37(7):1284-1299, 2013.

* [59] Praveen Palanisamy. Multi-agent connected autonomous driving using deep reinforcement learning. In _2020 International Joint Conference on Neural Networks (IJCNN)_, pages 1-7. IEEE, 2020.
* [60] Matteo Papini, Damiano Binaghi, Giuseppe Canonaco, Matteo Pirotta, and Marcello Restelli. Stochastic variance-reduced policy gradient. In _International conference on machine learning_, pages 4026-4035. PMLR, 2018.
* [61] Giorgia Ramponi and Marcello Restelli. Learning in markov games: can we exploit a general-sum opponent? In _The 38th Conference on Uncertainty in Artificial Intelligence_, 2022.
* [62] Sean C Rismiller, Jonathan Cagan, and Christopher McComb. Stochastic stackelberg games for agent-driven robust design. In _International Design Engineering Technical Conferences and Computers and Information in Engineering Conference_, volume 84003, page V11AT11A039. American Society of Mechanical Engineers, 2020.
* [63] R Tyrrell Rockafellar and Roger J-B Wets. _Variational analysis_, volume 317. Springer Science and Business Media, 2009.
* [64] Sailik Sengupta and Subbarao Kambhampati. Multi-agent reinforcement learning in bayesian stackelberg markov games for adaptive moving target defense. _arXiv preprint arXiv:2007.10457_, 2020.
* [65] Lloyd S Shapley. Stochastic games. _Proceedings of the national academy of sciences_, 39(10):1095-1100, 1953.
* [66] Zebang Shen, Alejandro Ribeiro, Hamed Hassani, Hui Qian, and Chao Mi. Hessian aided policy gradient. In _International conference on machine learning_, pages 5729-5738. PMLR, 2019.
* [67] Maurice Sion. On general minimax theorems. _Pacific Journal of mathematics_, 8(1):171-176, 1958.
* [68] Morton Slater. Lagrange multipliers revisited. Cowles Foundation Discussion Papers 80, Cowles Foundation for Research in Economics, Yale University, 1959. URL https://EconPapers.repec.org/RePEc:cw1:cw1ddpp:80.
* [69] Hyung Ju Suh, Max Simchowitz, Kaiqing Zhang, and Russ Tedrake. Do differentiable simulators give better policy gradients? In _International Conference on Machine Learning_, pages 20668-20696. PMLR, 2022.
* [70] Masayuki Takahashi. Equilibrium points of stochastic non-cooperative \(n\)-person games. _Journal of Science of the Hiroshima University, Series AI (Mathematics)_, 28(1):95-99, 1964.
* [71] Ioannis Tsaknakis, Mingyi Hong, and Shuzhong Zhang. Minimax problems with coupled linear constraints: Computational complexity, duality and solution methods. _arXiv preprint arXiv:2110.11210_, 2021.
* [72] Deepanshu Vasal. Stochastic stackelberg games, 2020.
* [73] John von Neumann. Zur theorie der gesellschaftsspiele. _Mathematische annalen_, 100(1):295-320, 1928.
* [74] Heinrich von Stackelberg. _Marktform und gleichgewicht_. J. springer, 1934.
* [75] Yevgeniy Vorobeychik and Satinder Singh. Computing stackelberg equilibria in discounted stochastic games. In _Proceedings of the AAAI Conference on Artificial Intelligence_, volume 26, pages 1478-1484, 2012.
* [76] Quoc-Liem Vu, Zane Alumbaugh, Ryan Ching, Quanchen Ding, Arnav Mahajan, Benjamin Chasnov, Sam Burden, and Lillian J Ratliff. Stackelberg policy gradient: Evaluating the performance of leaders and followers. In _ICLR 2022 Workshop on Gamification and Multiagent Solutions_, 2022.
* [77] Yuandou Wang, Hang Liu, Wanbo Zheng, Yunni Xia, Yawen Li, Peng Chen, Kunyin Guo, and Hong Xie. Multi-objective workflow scheduling with deep-q-network-based multi-agent reinforcement learning. _IEEE access_, 7:39974-39982, 2019.
* [78] Yu Yuan, Zhibin Liang, and Xia Han. Robust reinsurance contract with asymmetric information in a stochastic stackelberg differential game. _Scandinavian Actuarial Journal_, pages 1-28, 2021.

* [79] Kaiqing Zhang, Alec Koppel, Hao Zhu, and Tamer Basar. Global convergence of policy gradient methods to (almost) locally optimal policies. _SIAM Journal on Control and Optimization_, 58 (6):3586-3612, 2020.
* [80] Zhengyuan Zhou, Jerry Ding, Haomiao Huang, Ryo Takei, and Claire Tomlin. Efficient path planning algorithms in reach-avoid problems. _Automatica_, 89:28-36, 2018.