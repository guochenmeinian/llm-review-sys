# Self-Play Fine-Tuning of Diffusion Models for Text-to-Image Generation

 Huizhuo Yuan Zixiang Chen Kaixuan Ji Quanquan Gu

Department of Computer Science

University of California, Los Angeles

Los Angeles, CA 90095

{hzyuan,chenzx19,kaixuanji,qgu}@cs.ucla.edu

Equal contribution

###### Abstract

Fine-tuning Diffusion Models remains an underexplored frontier in generative artificial intelligence (GenAI), especially when compared with the remarkable progress made in fine-tuning Large Language Models (LLMs). While cutting-edge diffusion models such as Stable Diffusion (SD) and SDXL rely on supervised fine-tuning, their performance inevitably plateaus after seeing a certain volume of data. Recently, reinforcement learning (RL) has been employed to fine-tune diffusion models with human preference data, but it requires at least two images ("winner" and "loser" images) for each text prompt. In this paper, we introduce an innovative technique called self-play fine-tuning for diffusion models (SPIN-Diffusion), where the diffusion model engages in competition with its earlier versions, facilitating an iterative self-improvement process. Our approach offers an alternative to conventional supervised fine-tuning and RL strategies, significantly improving both model performance and alignment. Our experiments on the Pick-a-Pic dataset reveal that SPIN-Diffusion outperforms the existing supervised fine-tuning method in aspects of human preference alignment and visual appeal right from its first iteration. By the second iteration, it exceeds the performance of RLHF-based methods across all metrics, achieving these results with less data. Codes are available at https://github.com/uclaml/SPIN-Diffusion/.

## 1 Introduction

Diffusion models (Ho et al., 2020; Peebles and Xie, 2023; Podell et al., 2023; Nichol et al., 2021; Rombach et al., 2022a; Song et al., 2020) have rapidly emerged as critical entities within the realm of generative AIs (Creswell et al., 2018; Kingma and Welling, 2013), demonstrating exceptional capabilities in generating high-fidelity outputs. Their versatility spans a diverse area of applications, ranging from image generation (Rombach et al., 2022a; Podell et al., 2023; Ramesh et al., 2022) to more complex tasks like structure-based drug design (Corso et al., 2022; Guan et al., 2023), protein structure prediction (Watson et al., 2021), text generation (Austin et al., 2021; Zheng et al., 2023; Chen et al., 2023), and more. Prominent diffusion models in image generation, including DALL-E (Ramesh et al., 2022), Stable Diffusion (Rombach et al., 2022b), SDXL (Podell et al., 2023), and Dreamlike, etc., typically undergo a fine-tuning process following their initial pre-training phase.

Standard fine-tuning method for diffusion models suffers from low alignment with human preferences and low data efficiency due to two main reasons: (1) it does not directly optimize for alignment with human preferences, and (2) only one round of training can be performed. Recently, using Reinforcement Learning (RL) for fine-tuning diffusion models has received increasing attention. Lee et al. (2023) first studied the alignment of text-image diffusion models to human preferences using reward-weighted likelihood maximization with a reward function trained on human preference data.

Black et al. (2023) formulated the fine-tuning of diffusion models as a RL problem solved by policy gradient optimization. In a concurrent work, Fan et al. (2023) studied a similar formulation but with a KL regularization. Very recently, Wallace et al. (2023) have bypassed the need for training reward functions by using Direct Preference Optimization (DPO) (Rafailov et al., 2023) for fine-tuning diffusion models. Similar approach was proposed in Yang et al. (2023) as well.

While RL fine-tuning of diffusion methods has been proven effective, its dependency on human preference data, often necessitating multiple images per prompt, poses a significant challenge. In many datasets including the community-sourced ones featuring custom content, it is often the case to have only one image associated with each prompt. This makes RL fine-tuning infeasible.

In this paper, drawing inspiration from the recently proposed self-play fine-tuning (SPIN) technique (Chen et al., 2024) for large language models (LLM), we introduce a new supervised fine-tuning (SFT) method for diffusion models, eliminating the necessity for human preference data in the fine-tuning process. Central to our method is a general-sum minimax game, where both the participating players, namely the main player and the opponent player, are diffusion models. The main player's goal is to discern between samples drawn from the target data distribution and those generated by the opponent player. The opponent player's goal is to garner the highest score possible, as assessed by the main player. A self-play mechanism can be made possible, if and only if the main player and the opponent player have the same structure, and therefore the opponent player can be designed to be previous copies of the main player (Chen et al., 2024). The proposed algorithm SPIN-Diffusion overcomes the drawbacks of both supervised fine-tuning (SFT) and RL fine-tuning. Compared with SFT, our method is more data-efficient, by repeatedly using the prompts from the SFT dataset to improve the model through self-play. Compared with RL fine-tuning methods, our method does not need external reward models or expensive human-annotated winner/loser pairs.

When applying the self-play fine-tuning technique (Chen et al., 2024) to diffusion models, there are two challenges: (a) an exponential or even infinite number of possible trajectories can lead to the same image. The generator in a diffusion model operates through a sequence of intermediate steps, but the performance of the generator is only determined by the quality of the image in the last step; and (b) diffusion models are parameterized by a sequence of score functions, which are the gradient of the probabilities rather than probabilities in LLMs. Our algorithm design effectively surmounts these challenges by (a) designing an objective function that considers all intermediate images generated during the reverse sampling process; and (b) decomposing and approximating the probability function step-by-step into products related to the score function. We also employ the Gaussian reparameterization technique in DDIM (Song et al., 2020) to support the advanced sampling method. All these techniques together lead to an unbiased objective function that can be effectively calculated based on intermediate samples. For computational efficiency, we further propose an approximate objective function, which eliminates the need for intermediate images used in our model.

**Contributions.** Our contributions are summarized below:

* We propose a novel fine-tuning method for diffusion models based on the self-play mechanism, called SPIN-Diffusion. The proposed algorithm iteratively improves upon a diffusion model until converging to the target distribution. Theoretically, we prove that the model obtained by SPIN-Diffusion cannot be further improved via standard SFT. Moreover, the stationary point of our self-play mechanism is achieved when the diffusion model aligns with the target distribution.
* Empirically, we evaluate the performance of SPIN-Diffusion on text-to-image generation tasks (Ramesh et al., 2022; Rombach et al., 2022; Saharia et al., 2022). Our experiments on the Pick-a-Pic dataset (Kirstain et al., 2023), with base model being Stable Diffusion-1.5 (Rombach et al., 2022), demonstrate that SPIN-Diffusion surpasses SFT from the very first iteration. Notably, by the second iteration, SPIN-Diffusion outperforms Diffusion-DPO (Wallace et al., 2023) that utilizes additional data from 'loser' samples. By the third iteration, the images produced by SPIN-Diffusion achieve a higher PickScore (Kirstain et al., 2023) than the base model SD-1.5 \(79.8\%\) of the times, and a superior Aesthetic score \(88.4\%\) of the times.

SPIN-Diffusion exhibits a remarkable performance improvement over current state-of-the-art fine-tuning algorithms, retaining this advantage even against models trained with more extensive data usage. This highlights its exceptional efficiency in dataset utilization. It is beneficial for the general public, particularly those with restricted access to datasets containing multiple images per prompt.

**Notation.** We use lowercase letters and lowercase boldface letters to denote scalars and vectors, respectively. We use \(0:T\) to denote the index set \(\{0,\ldots,T\}\). In the function space, let \(\mathcal{F}\) be the function class. We use the symbol \(\mathbf{q}\) to denote the real distribution in a diffusion process, while \(\mathbf{p_{\theta}}\) represents the distribution parameterized by a nueral network during sampling. The Gaussian distribution is represented as \(\mathcal{N}(\bm{\mu},\bm{\Sigma})\), where \(\bm{\mu}\) and \(\bm{\Sigma}\) are the mean and covariance matrix, respectively. Lastly, \(\mathrm{Uniform}\{1,\ldots,T\}\) denotes the uniform distribution over the set \(\{1,\ldots,T\}\).

## 2 Related Work

**Diffusion Models.** Diffusion-based generative models (Sohl-Dickstein et al., 2015) have recently gained prominence, attributed to their ability to produce high-quality and diverse samples. A popular diffusion model is denoising diffusion probabilistic modeling (DDPM) (Ho et al., 2020). Song et al. (2020) proposed a denoising diffusion implicit model (DDIM), which extended DDPM to a non-Markov diffusion process, enabling a deterministic sampling process and the accelerated generation of high-quality samples. In addition to DDPM and DDIM, diffusion models have also been studied with a score-matching probabilistic model using Langevin dynamics (Song and Ermon, 2019; Song et al., 2020). Diffusion models evolved to encompass guided diffusion models, which are designed to generate conditional distributions. When the conditioning input is text and the output is image, these models transform into text-to-image diffusion models (Rombach et al., 2022; Ramesh et al., 2022; Ho et al., 2022; Saharia et al., 2022). They bridge the gap between textual descriptions and image synthesis, offering exciting possibilities for content generation. A significant advancement in text-to-image generation is the introduction of Stable Diffusion (SD) (Rombach et al., 2022). SD has expanded the potential of diffusion models by integrating latent variables into the generation process. This innovation in latent diffusion models enables the exploration of latent spaces and improves the diversity of generated content. Despite the introduction of latent spaces, generating images with desired content from text prompts remains a significant challenge (Gal et al., 2022; Ruiz et al., 2023). This is due to the difficulty in learning the semantic properties of text prompts with limited high-quality data.

**Fine-Tuning Diffusion Models.** Efforts to improve diffusion models have focused on aligning them more closely with human preferences. Rombach et al. (2022) fine-tuned a pre-trained model using the COCO dataset (Caesar et al., 2018), demonstrating superior performance compared to a generative model directly trained on the same dataset. Podell et al. (2023) expanded the model size of Stable Diffusion (SD) to create the SDXL model, which was fine-tuned on a high-quality but private dataset, leading to a significant improvement in the aesthetics of the generated images. Dai et al. (2023) further demonstrated the effectiveness of fine-tuning and highlighted the importance of the supervised fine-tuning (SFT) dataset. In addition to using datasets with high-quality images, Betker et al. (2023); Segalis et al. (2023) found that SFT on a data set with high text fidelity can also improve the performance of the diffusion model. The aforementioned methods only requires a high-quality SFT dataset. Recently, preference datasets have been studied in finetuning diffusion models (Lee et al., 2023). Concurrently, DDPO (Black et al., 2023) and DPOK (Fan et al., 2023) proposed to use the preference dataset to train a reward model and then fine-tune diffusion models using reinforcement learning. Drawing inspiration from the recent Direct Preference Optimization (DPO) (Rafailov et al., 2023), Diffusion-DPO (Wallace et al., 2023) and D3PO (Yang et al., 2023) used the implicit reward to fine-tune diffusion models directly on the preference dataset. Furthermore, when a differentiable reward model is available, Clark et al. (2023); Prabhudesai et al. (2023) applied reward backpropagation for fine-tuning diffusion models. Our SPIN-Diffusion is most related to the SFT method, as it only assumes access to high-quality image-text pairs. However, the high-quality image-text dataset can be obtained from various sources, including selecting the winner from a preference dataset or identifying high-reward image-text pairs through a reward model.

## 3 Problem Setting and Preliminaries

In this section, we introduce basic settings for text-to-image generation by diffusion models and the self-play fine-tuning (SPIN) method.

### Text-to-Image Diffusion Model

Denoising diffusion implicit models (DDIM) (Song et al., 2020) is a generalized framework of denoising diffusion probabilistic models (DDPM) (Sohl-Dickstein et al., 2015; Ho et al., 2020). DDIM enables the fast generation of high-quality samples and has been widely used in text-to-imagediffusion models such as Stable Diffusion (Rombach et al., 2022). We formulate our method building upon DDIM, which makes it more general.

**Forwrd Process.** Following Saharia et al. (2022), the problem of text-to-image generation can be formulated as conditional diffusion models. We use \(\mathbf{x}_{0}\in\mathbb{R}^{d}\) to denote the value of image pixels where \(d\) is the dimension and use \(\mathbf{c}\) to denote the text prompt. Given a prompt \(\mathbf{c}\), image \(\mathbf{x}_{0}\) is drawn from a target data distribution \(p_{\mathrm{data}}(\cdot|\mathbf{c})\). The diffusion process is characterized by the following dynamic parameterized by a positive decreasing sequence \(\{\alpha_{t}\}_{t=1}^{T}\) with \(\alpha_{0}=1\),

\[q(\mathbf{x}_{1:T}|\bm{x}_{0}):=q(\mathbf{x}_{T}|\mathbf{x}_{0})\prod_{t=2}^{ T}q(\mathbf{x}_{t-1}|\mathbf{x}_{t},\mathbf{x}_{0}),\] (3.1)

where \(q(\mathbf{x}_{t-1}|\mathbf{x}_{t},\mathbf{x}_{0})\) represents a Gaussian distribution \(\mathcal{N}(\bm{\mu}_{t},\sigma_{t}^{2}\mathbf{I})\). Here, \(\bm{\mu}_{t}\) is the mean of Gaussian defined as

\[\bm{\mu}_{t}:=\sqrt{\alpha_{t-1}}\mathbf{x}_{0}+\sqrt{1-\alpha_{t-1}-\sigma_ {t}^{2}}\cdot\frac{\mathbf{x}_{t}-\sqrt{\alpha_{t}}\mathbf{x}_{0}}{\sqrt{1- \alpha_{t}}}.\]

It can be derived from (3.1) that \(q(\mathbf{x}_{t}|\mathbf{x}_{0})=\mathcal{N}(\sqrt{\alpha_{t}}\mathbf{x}_{0}, (1-\alpha_{t})\mathbf{I})\) for all \(t\)(Song et al., 2020). As a generalized diffusion process of DDPM, (3.1) reduces to DDPM (Ho et al., 2020) with a special choice of \(\sigma_{t}=\sqrt{(1-\alpha_{t-1})/(1-\alpha_{t})\sqrt{(1-\alpha_{t}/\alpha_{t- 1})}}\).

**Generative Process.** Given the sequence of \(\{\alpha_{t}\}_{t=1}^{T}\) and \(\{\sigma_{t}\}_{t=1}^{T}\), examples from the generative model follows

\[p_{\bm{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})=\prod_{t=1}^{T}p_{\bm{\theta}}( \mathbf{x}_{t-1}|\mathbf{x}_{t},\mathbf{c})\cdot p_{\bm{\theta}}(\mathbf{x}_{ T}|\mathbf{c}),\qquad p_{\bm{\theta}}(\mathbf{x}_{t-1}|\mathbf{x}_{t}, \mathbf{c})=\mathcal{N}\big{(}\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c },t),\sigma_{t}^{2}\mathbf{I}\big{)}.\] (3.2)

Here \(\bm{\theta}\) belongs to the parameter space \(\bm{\Theta}\) and \(\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\) is the estimator of mean \(\bm{\mu}_{t}\) that can be reparameterized (Ho et al., 2020; Song et al., 2020) as the combination of \(\mathbf{x}_{t}\) and a neural network \(\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\) named score function. Please see Appendix C for more details.

**Training Objective.** The score function \(\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\) is trained by minimizing the evidence lower bound (ELBO) associated with the diffusion models in (3.1) and (3.2), which is equivalent to minimizing the following denoising score matching objective function \(L_{\mathrm{DSM}}\):

\[L_{\mathrm{DSM}}(\bm{\theta})=\mathbb{E}\big{[}\gamma_{t}\big{\|}\bm{ \epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)-\bm{\epsilon}_{t}\big{\|} _{2}^{2}\big{]},\] (3.3)

where \(\mathbf{x}_{t}=\sqrt{\alpha_{t}}\mathbf{x}_{0}+\sqrt{1-\alpha_{t}}\bm{ \epsilon}_{t}\) and the expectation is computed over the distribution \(\mathbf{c}\sim q(\cdot),\mathbf{x}_{0}\sim q_{\mathrm{data}}(\cdot|\mathbf{c }),\bm{\epsilon}_{t}\sim\mathcal{N}(0,\mathbf{I})\), \(t\sim\mathrm{Uniform}\{1,\dots,T\}\). In addition, \(\{\gamma_{t}\}_{t=1}^{T}\) are pre-specified weights that depends on the sequences \(\{\alpha_{t}\}_{t=1}^{T}\) and \(\{\sigma_{t}\}_{t=1}^{T}\).

### Self-Play Fine-Tuning

Self-Play mechanism, originating from TD-Gammon (Tesauro et al., 1995), has achieved great successes in various fields, particularly in strategic games (Silver et al., 2017, 201). Central to Self-Play is the idea of progressively improving a model by competing against its previous iteration. This approach has recently been adapted to fine-tuning Large Language Models (LLMs) (Chen et al., 2024), called self-play fine-tuning (SPIN). Considering an LLM where \(\mathbf{c}\) is the input prompt and \(\mathbf{x}_{0}\) is the response, the goal of SPIN is to fine-tune an LLM agent, denoted by \(p_{\bm{\theta}}(\cdot|\mathbf{c})\), based on an SFT dataset. Chen et al. (2024) assumed access to a main player and an opponent player at each iteration and takes the following steps iteratively:

1. The main player maximizes the expected value gap between the target data distribution \(p_{\mathrm{data}}\) and the opponent player's distribution \(p_{\bm{\theta}_{k}}\):
2. The opponent player generates responses that are indistinguishable from \(p_{\mathrm{data}}\) by the main player.

Instead of alternating optimization, SPIN directly utilizes a closed-form solution of the opponent player, which results in the opponent player at iteration \(k+1\) to copy parameters \(\bm{\theta}_{k+1}\), and forming an end-to-end training objective:

\[L_{\mathrm{SPIN}}=\mathbb{E}\bigg{[}\ell\bigg{(}\lambda\log\frac{p_{\bm{\theta} }(\mathbf{x}_{0}|\mathbf{c})}{p_{\bm{\theta}_{k}}(\mathbf{x}_{0}|\mathbf{c})} -\lambda\log\frac{p_{\bm{\theta}}(\mathbf{x}_{0}^{\prime}|\mathbf{c})}{p_{\bm{ \theta}_{k}}(\mathbf{x}_{0}^{\prime}|\mathbf{c})}\bigg{)}\bigg{]}.\] (3.4)

Here the expectation is taken over the distribution \(\mathbf{c}\sim q(\mathbf{c}),\mathbf{x}\sim p_{\mathrm{data}}(\mathbf{x}| \mathbf{c}),\mathbf{x}^{\prime}\sim p_{\bm{\theta}_{k}}(\mathbf{x}^{\prime}| \mathbf{c})\), \(\ell(\cdot)\) is a loss function that is both monotonically decreasing and convex, and \(\lambda>0\) is a hyperparameter. Notably, (3.4) only requires the knowledge of demonstration/SFT data, i.e., prompt-response pairs.

## 4 Method

In this section, we are going to present a method for fine-tuning diffusion models with self-play mechanism.

Consider a setting where we are training on a high-quality dataset containing image-text pairs \((\mathbf{c},\mathbf{x}_{0})\sim p_{\mathrm{data}}(\mathbf{x}_{0}|\mathbf{c})q( \mathbf{c})\) where \(\mathbf{c}\) is the text prompt and \(\mathbf{x}_{0}\) is the image. Our goal is to fine-tune a pretrained diffusion model, denoted by \(p_{\boldsymbol{\theta}}\), to align with the distribution \(p_{\mathrm{data}}(\mathbf{x}_{0}|\mathbf{c})\). Instead of directly minimizing the denoising score matching objective function \(L_{\mathrm{DSM}}\) in (3.3), we adapt SPIN to diffusion models. However, applying SPIN to fine-tuning diffusion models presents unique challenges. Specifically, the objective of SPIN (3.4) necessitates access to the marginal probability \(p_{\boldsymbol{\theta}}(\mathbf{x}_{0}|\mathbf{c})\). While obtaining \(p_{\boldsymbol{\theta}}(\mathbf{x}_{0}|\mathbf{c})\) is straightforward in LLMs, this is not the case with diffusion models. Given the parameterization of the diffusion model as \(p_{\boldsymbol{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})\), computing the marginal probability \(p_{\boldsymbol{\theta}}(\mathbf{x}_{0}|\mathbf{c})\) requires integration over all potential trajectories \(\int_{\mathbf{x}_{1:T}}p_{\boldsymbol{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})d \mathbf{x}_{1:T}\), which is computationally intractable.

In the following, we propose a novel SPIN-Diffusion method with a decomposed objective function that only requires the estimation of score function \(\boldsymbol{\epsilon}_{\boldsymbol{\theta}}\). This is achieved by employing the DDIM formulation discussed in Section 3. The key technique is self-play mechanism with a focus on the joint distributions of the entire diffusion process, i.e., \(p_{\mathrm{data}}(\mathbf{x}_{0:T}|\mathbf{c})=q(\mathbf{x}_{1:T}|\mathbf{x}_ {0})p_{\mathrm{data}}(\mathbf{x}_{0}|\mathbf{c})\) and \(p_{\boldsymbol{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})\), instead of marginal distributions.

### Differentiating Diffusion Processes

In iteration \(k+1\), we focus on training a function \(f_{k+1}\) to differentiate between the diffusion trajectory \(\mathbf{x}_{0:T}\) generated by the diffusion model parameterized by \(p_{\boldsymbol{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})\), and the diffusion process \(p_{\mathrm{data}}(\mathbf{x}_{0:T}|\mathbf{c})\) from the data. Specifically, the training of \(f_{k+1}\) involves minimizing a generalized Integral Probability Metric (IPM) (Muller, 1997):

\[f_{k+1}=\operatorname*{argmin}_{f\in\mathcal{F}_{k}}\mathbb{E}\big{[}\ell\big{(} f(\mathbf{c},\mathbf{x}_{0:T})-f(\mathbf{c},\mathbf{x}_{0:T}^{\prime}) \big{)}\big{]}.\] (4.1)

Here, the expectation is taken over the distributions \(\mathbf{c}\sim q(\cdot),\mathbf{x}_{0:T}\sim p_{\mathrm{data}}(\cdot|\mathbf{ c})\), and \(\mathbf{x}_{0:T}^{\prime}\sim p_{\boldsymbol{\theta}_{k}}(\cdot|\mathbf{c})\). \(\mathcal{F}_{k}\) denotes the class of functions under consideration and \(\ell(\cdot)\) is a monotonically decreasing and convex function that helps stabilize training. The value of \(f\) reflects the degree of belief that the diffusion process \(\mathbf{x}_{0:T}\) given context \(\mathbf{c}\) originates from the target diffusion process \(p_{\mathrm{data}}(\mathbf{x}_{0:T}|\mathbf{c})\) rather than the diffusion model \(p_{\boldsymbol{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})\). We name \(f\) the test function.

### Receiving the Test Function

The opponent player wants to maximize the expected value \(\mathbb{E}_{\mathbf{c}\sim q(\cdot),\mathbf{x}_{0:T}\sim p(\cdot|\mathbf{c})} [f_{k+1}(\mathbf{c},\mathbf{x})]\). In addition, to prevent excessive deviation of \(p_{\boldsymbol{\theta}_{k+1}}\) from \(p_{\boldsymbol{\theta}_{k}}\) and stabilize the self-play fine-tuning, we incorporate a Kullback-Leibler (KL) regularization term. Putting these together gives rise to the following optimization problem:

\[\operatorname*{argmax}_{p}\mathbb{E}_{\mathbf{c}\sim q(\cdot),\mathbf{x}_{0:T }\sim p(\cdot|\mathbf{c})}[f_{k+1}(\mathbf{c},\mathbf{x}_{0:T})]-\lambda \mathbb{E}_{\mathbf{c}\sim q(\cdot)}\mathrm{KL}\big{(}p(\cdot|\mathbf{c})||p_{ \boldsymbol{\theta}_{k}}(\cdot|\mathbf{c})\big{)},\] (4.2)

where \(\lambda>0\) is the regularization parameter. Notably, (4.2) has a closed-form solution \(\widehat{p}(\cdot|\mathbf{c})\):

\[\widehat{p}(\mathbf{x}_{0:T}|\mathbf{c})\propto p_{\boldsymbol{\theta}_{k}}( \mathbf{x}_{0:T}|\mathbf{c})\exp\big{(}\lambda^{-1}f_{k+1}(\mathbf{c},\mathbf{ x}_{0:T})\big{)}.\] (4.3)To ensure that \(\widehat{p}\) lies in the diffusion process space \(\{p_{\bm{\theta}}(\cdot|\mathbf{c})|\bm{\theta}\in\bm{\Theta}\}\), we utilize the following test function class (Chen et al., 2024):

\[\mathcal{F}_{k}=\bigg{\{}\lambda\cdot\log\frac{p_{\bm{\theta}}( \mathbf{x}_{1:T}|\mathbf{c})}{p_{\bm{\theta}_{k}}(\mathbf{x}_{1:T}|\mathbf{c})} \bigg{|}\bm{\theta}\in\bm{\Theta}\bigg{\}}.\] (4.4)

Given the choice of \(\mathcal{F}_{k}\) in (4.4), optimizing (4.1) gives \(f_{k+1}\) parameterized by \(\bm{\theta}_{k+1}\) in the following form:

\[f_{k+1}(\mathbf{c},\mathbf{x}_{0:T})=\lambda\cdot\log\frac{p_{ \bm{\theta}_{k+1}}(\mathbf{x}_{0:T}|\mathbf{c})}{p_{\bm{\theta}_{k}}(\mathbf{ x}_{0:T}|\mathbf{c})}.\] (4.5)

Substituting (4.5) into (4.3) yields \(\widehat{p}(\mathbf{x}_{0:T}|\mathbf{c})=p_{\bm{\theta}_{k+1}}(\mathbf{x}_{0 :T}|\mathbf{c})\). In other words, \(\bm{\theta}_{k+1}\) learned from (4.1) is exactly the diffusion parameter for the ideal choice of opponent.

### Decomposed Training Objective

The above two steps provide a training scheme depending on the full trajectory of \(\mathbf{x}_{0:T}\). Specifically, substituting (4.4) into (4.1) yields the update rule \(\bm{\theta}_{k+1}=\operatorname*{argmin}_{\bm{\theta}\in\bm{\Theta}}L_{ \mathsf{SPIN}}(\bm{\theta},\bm{\theta}_{k})\), where \(L_{\mathsf{SPIN}}\) is defined as:

\[L_{\mathsf{SPIN}}=\mathbb{E}\bigg{[}\ell\bigg{(}\lambda\log\frac {p_{\bm{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})}{p_{\bm{\theta}_{k}}(\mathbf{x} _{0:T}|\mathbf{c})}-\lambda\log\frac{p_{\bm{\theta}}(\mathbf{x}^{\prime}_{0:T} |\mathbf{c})}{p_{\bm{\theta}_{k}}(\mathbf{x}^{\prime}_{0:T}|\mathbf{c})} \bigg{)}\bigg{]}.\] (4.6)

Here the expectation is taken over the distributions \(\mathbf{c}\sim q(\cdot),\mathbf{x}_{0:T}\sim p_{\text{data}}(\cdot|\mathbf{c}),\mathbf{x}^{\prime}_{0:T}\sim p_{\bm{\theta}_{k}}(\cdot|\mathbf{c})\). To formulate a computationally feasible objective, we decompose \(\log p_{\bm{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})\) using the backward process of diffusion models. Substituting (3.2) into (4.6), we have that

\[\log p_{\bm{\theta}}(\mathbf{x}_{0:T}|\mathbf{c}) =\log\bigg{(}\prod_{t=1}^{T}p_{\bm{\theta}}(\mathbf{x}_{t-1}| \mathbf{x}_{t},\mathbf{c})\cdot p_{\bm{\theta}}(\mathbf{x}_{T}|\mathbf{c}) \bigg{)}\] \[=\log p_{\bm{\theta}}(\mathbf{x}_{T}|\mathbf{c})+\sum_{t=1}^{T} \log\big{(}p_{\bm{\theta}}(\mathbf{x}_{t-1}|\mathbf{x}_{t},\mathbf{c})\big{)}\] \[=\text{Constant}-\sum_{t=1}^{T}\frac{1}{2\sigma_{t}^{2}}\big{\|} \mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_ {2}^{2}.\] (4.7)

where the last equality holds since \(p_{\bm{\theta}}(\mathbf{x}_{t-1}|\mathbf{x}_{t},\mathbf{c})\) is a Gaussian distribution \(\mathcal{N}\big{(}\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t),\sigma_{t }^{2}\mathbf{I}\big{)}\) according to (3.2), and \(p_{\bm{\theta}}(\mathbf{x}_{T}|\mathbf{c})\) is approximately a Gaussian independent of \(\bm{\theta}\). By substituting (4.7) into (4.6) and introducing a reparameterization \(\sigma_{t}^{2}=\lambda T/(2\beta_{t})\), where \(\beta_{t}\) is a fixed positive value, we obtain

\[L_{\mathsf{SPIN}}(\bm{\theta},\bm{\theta}_{k}) =\mathbb{E}\bigg{[}\ell\bigg{(}-\sum_{t=1}^{T}\frac{\beta_{t}}{T} \big{[}\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{ c},t)\big{\|}_{2}^{2}-\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}_{k}}( \mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}\] \[\quad-\big{\|}\mathbf{x}^{\prime}_{t-1}-\bm{\mu}_{\bm{\theta}}( \mathbf{x}^{\prime}_{t},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}^{ \prime}_{t-1}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}^{\prime}_{t},\mathbf{c},t )\big{\|}_{2}^{2}\bigg{]}\bigg{)}\bigg{]}.\] (4.8)

Here the expectation is taken over the distributions \(\mathbf{c}\sim q(\cdot),\mathbf{x}_{0:T}\sim p_{\text{data}}(\cdot|\mathbf{c}),\mathbf{x}^{\prime}_{0:T}\sim p_{\bm{\theta}_{k}}(\cdot|\mathbf{c})\). Note that by considering the main player (reward function) across the full trajectory (3.2), rather than focusing solely on the final state as in Fan et al. (2023); Black et al. (2023); Wallace et al. (2023), we are able to formulate an exact objective function up to Equation (4.8). The detailed algorithm is presented in Algorithm 1. (4.8) naturally provides an objective function for DDIM with \(\sigma_{t}>0\), where \(\sigma_{t}\) controls the determinism of the reverse process (3.2). (4.8) remains valid for deterministic generation processes as \(\sigma_{t}\to 0\).

### Approximate Training Objective

While (4.8) is the exact ELBO, optimizing it requires storing all intermediate images during the reverse sampling. When the trajectory length \(T\) is large, it would require an impractical amount of GPU memory when the loss is summed over \(T\). Additionally, the required samples from a reverse process are not readily accessible. To address these limitations, we propose an approximate objective function. By applying Jensen's inequality and the convexity of the loss function \(\ell\), we can give an upper bound of (4.8) and thus move the average over \(t\) outside the loss function \(\ell\):

\[L_{\mathsf{SPIN}}^{\mathrm{approx}}(\bm{\theta},\bm{\theta}_{k}) =\mathbb{E}\bigg{[}\ell\Big{(}-\beta_{t}\Big{[}\big{\|}\mathbf{x}_{t-1}-\bm{ \mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}-\big{\|} \mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2 }^{2}\]\[-\left\|\mathbf{x}_{t-1}^{\prime}-\boldsymbol{\mu}_{\boldsymbol{\theta}}( \mathbf{x}_{t}^{\prime},\mathbf{c},t)\right\|_{2}^{2}+\left\|\mathbf{x}_{t-1}^{ \prime}-\boldsymbol{\mu}_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t}^{\prime}, \mathbf{c},t)\right\|_{2}^{2}\right]\right)\Biggr{]},\] (4.9)

where the expectation is taken over the distributions \(\mathbf{c}\sim q(\mathbf{c}),(\mathbf{x}_{t-1},\mathbf{x}_{t})\sim p_{\mathrm{ data}}(\mathbf{x}_{t-1},\mathbf{x}_{t}|\mathbf{c}),(\mathbf{x}_{t-1}^{\prime}, \mathbf{x}_{t}^{\prime})\sim p_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t-1}^{ \prime},\mathbf{x}_{t}^{\prime}|\mathbf{c})\), \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\). This approximation is directly motivated by the nature of diffusion models, which inherently decouple operations on a per-time-step basis. We provide theoretical justifications for our approximation method in the following sections.

The following lemma shows that \(L^{\mathrm{approx}}_{\mathrm{SPIN}}\) is an upper bound of \(L_{\mathrm{SPIN}}\).

**Lemma 4.1**.: Fix \(\boldsymbol{\theta}_{k}\in\boldsymbol{\Theta}\) which serves as the starting point of Algorithm 1 for iteration \(k+1\). It holds that \(L_{\mathrm{SPIN}}(\boldsymbol{\theta},\boldsymbol{\theta}_{k})\leq L^{ \mathrm{approx}}_{\mathrm{SPIN}}(\boldsymbol{\theta},\boldsymbol{\theta}_{k})\) for all \(\boldsymbol{\theta}\in\boldsymbol{\Theta}\).

\(L^{\mathrm{approx}}_{\mathrm{SPIN}}\) eliminates the need to store all intermediate steps, as it only involves two consecutive sampling steps \(t-1\) and \(t\). Since the reverse process \(p_{\boldsymbol{\theta}}(\mathbf{x}_{1:T}^{\prime}|\mathbf{x}_{0}^{\prime}, \mathbf{c})\) approximates the forward process \(q(\mathbf{x}_{1:T}^{\prime}|\mathbf{x}_{0}^{\prime})\), we use the per step forward process \(q(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime}|\mathbf{x}_{0}^{\prime})\) to approximate \(p_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime}| \mathbf{x}_{0}^{\prime},\mathbf{c})\). We can further approximate \(p_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime}| \mathbf{c})=\int p_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t-1}^{\prime}, \mathbf{x}_{t}^{\prime}|\mathbf{x}_{0}^{\prime},\mathbf{c})p_{\boldsymbol{ \theta}_{k}}(\mathbf{x}_{0}^{\prime}|\mathbf{c})d\mathbf{x}_{0}^{\prime}\) with \(\int q(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime}|\mathbf{x}_{0}^{ \prime})p_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{0}^{\prime}|\mathbf{c})d \mathbf{x}_{0}^{\prime}\). Substituting the corresponding terms in (4.9) with the above approximation allows us to only compute the expectation of (4.9) over the distribution \(\mathbf{c}\sim q(\mathbf{c}),(\mathbf{x}_{t-1},\mathbf{x}_{t})\sim p_{\mathrm{ data}}(\mathbf{x}_{t-1},\mathbf{x}_{t}|\mathbf{c}),(\mathbf{x}_{t-1}^{\prime}, \mathbf{x}_{t}^{\prime})\sim\int p_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{0}^ {\prime}|\mathbf{c})q(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime}| \mathbf{x}_{0}^{\prime})d\mathbf{x}_{0}^{\prime}\), \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\). Furthermore, by incorporating the parameterization of \(\boldsymbol{\mu}_{\boldsymbol{\theta}}\) into (4.8) and (4.9), we can express (4.8) and (4.9) in terms of \(\boldsymbol{\epsilon}_{\boldsymbol{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\). Detailed derivations of (4.8) and (4.9) are provided in Appendix C.

## 5 Main Theory

In this section, we provide a theoretical analysis of Algorithm 1. Section 4 introduces two distinct objective functions, as defined in (4.8) and (4.9), both of which use the loss function \(\ell\). Since (4.8) is an exact objective function, its analysis closely follows the framework established by Chen et al. (2024). Consequently, we instead focus on the approximate objective function \(L^{\mathrm{approx}}_{\mathrm{SPIN}}\) defined in (4.9), which is more efficient to optimize and is the algorithm we use in our experiments. However, its behavior is more difficult to analyze. We begin with a formal assumption regarding the loss function \(\ell\) as follows.

**Assumption 5.1**.: The function \(\ell(t):\mathbb{R}\rightarrow\mathbb{R}\) in (4.9) is monotonically decreasing, i.e., \(\forall t,\ell^{\prime}(t)\leq 0\) and satisfies \(\ell^{\prime}(0)<0\). In addition, \(\ell(t)\) is a convex function.

Assumption 5.1 can be satisfied by various commonly used loss functions in machine learning. This includes the correlation loss \(\ell(t)=1-t\), the hinge loss \(\ell(t)=\max(0,1-t)\), and the logistic loss \(\ell(t)=\log(1+\exp(-t))\). In our experiments, we are using the logistic loss.

To understand the behavior of SPIN-Diffusion, let us first analyze the gradient of the objective function (4.9),

\[\nabla L^{\mathrm{approx}}_{\mathrm{SPIN}}=\mathbb{E}\Big{[}\underbrace{(- \beta_{t}\ell_{t}^{\prime})}_{\mathrm{Reweighting}}\cdot\big{(}\underbrace{ \nabla_{\boldsymbol{\theta}}\big{\|}\mathbf{x}_{t-1}-\boldsymbol{\mu}_{ \boldsymbol{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}}_{\mathrm{ Matching}}-\underbrace{\nabla_{\boldsymbol{\theta}}\big{\|}\mathbf{x}_{t-1}^{ \prime}-\boldsymbol{\mu}_{\boldsymbol{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c },t)\big{\|}_{2}^{2}}_{\mathrm{Pushing}}\big{)}\Big{]},\] (5.1)

where the expectation is taken over the distributions \(\mathbf{c}\sim q(\mathbf{c}),(\mathbf{x}_{t-1},\mathbf{x}_{t})\sim p_{\mathrm{ data}}(\mathbf{x}_{t-1},\mathbf{x}_{t}|\mathbf{c}),(\mathbf{x}_{t-1}^{ \prime},\mathbf{x}_{t}^{\prime})\sim p_{\theta_{k}}(\mathbf{x}_{t-1}^{\prime}, \mathbf{x}_{t}^{\prime}|\mathbf{c})\). (D.3) can be divided into three parts:

* **Reweighting:**\(\ell^{\prime}(\cdot)\) in the "Reweighting" term is negative and increasing because \(\ell()\) is monotonically decreasing and convex according to Assumption 5.1. Therefore, \(-\beta_{t}\ell_{t}^{\prime}=-\beta_{t}\ell^{\prime}\big{(}-\beta_{t}\big{[} \|\mathbf{x}_{t-1}-\boldsymbol{\mu}_{\boldsymbol{\theta}}(\mathbf{x}_{t}, \mathbf{c},t)\|_{2}^{2}-\ldots+\|\mathbf{x}_{t-1}^{\prime}-\boldsymbol{\mu}_{ \boldsymbol{\theta}_{k}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\|_{2}^{2}\big{]} \big{)}\) is always non-negative. Furthermore, \(-\beta_{t}\ell_{t}^{\prime}\) decreases as the argument inside \(\ell()\) increases.
* **Matching:** The "Matching" term matches \(\boldsymbol{\mu}_{\boldsymbol{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\) to \(\mathbf{x}_{t-1}\) coming from pairs \((\mathbf{x}_{t-1},\mathbf{x}_{t})\), that are sampled from the target distribution. This increases the likelihood of \((\mathbf{x}_{t-1},\mathbf{x}_{t})\sim p_{\mathrm{data}}(\mathbf{x}_{t-1}, \mathbf{x}_{t})\) following the generative process (3.2).
* **Pushing:** Contrary to the "Matching" term, the "Pushing" term pushes \(\boldsymbol{\mu}_{\boldsymbol{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\) away from \(\mathbf{x}_{t-1}^{\prime}\) coming from pairs \((\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime})\) drawn from the synthetic distribution \(p_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime})\). Therefore, the "Pushing" term decreases the likelihood of these samples following the process in the generative process (3.2).

The "Matching" term aligns conceptually with the \(L_{\mathrm{DSM}}\) in SFT, as both aim to maximize the likelihood that the target trajectory \(\mathbf{x}_{0:T}\) follows the generative process described in (3.2). The following theorem shows a formal connection, which is pivotal for understanding the optimization dynamics of our method.

**Theorem 5.2**.: Under Assumption 5.1, if \(\bm{\theta}_{k}\) is not the global optima of \(L_{\mathrm{DM}}\) in (3.3), there exists an appropriately chosen \(\beta_{t}\), such that \(\bm{\theta}_{k}\) is not the global minima of (4.9) and thus \(\bm{\theta}_{k+1}\neq\bm{\theta}_{k}\).

Theorem 5.2 suggests that the optimization process stops only when \(\bm{\theta}\) reaches global optimality of \(L_{\mathrm{DSM}}\). Consequently, the optimal diffusion model \(\bm{\theta}^{*}\) found by Algorithm 1 cannot be further improved using \(L_{\mathrm{DSM}}\). This theoretically supports that SFT with (3.3) cannot improve over SPIN-Diffusion. It is also worth noting that Theorem 5.2 does not assert that every global minimum of \(L_{\mathrm{DSM}}\) meets the convergence criterion (i.e., \(\bm{\theta}_{k+1}=\bm{\theta}_{k}\)), particularly due to the influence of the "Pushing" term in (D.3). The following theorem provides additional insight into the conditions under which Algorithm 1 converges.

**Theorem 5.3**.: Under Assumption 5.1, if \(p_{\bm{\theta}_{k}}(\cdot|\mathbf{x})=p_{\mathrm{data}}(\cdot|\mathbf{x})\), then \(\bm{\theta}_{k}\) is the global minimum of (4.9) for any \(\lambda\geq 0\).

Theorem 5.3 shows that Algorithm 1 converges when \(p_{\bm{\theta}}(\cdot|\mathbf{x})=p_{\mathrm{data}}(\cdot|\mathbf{x})\), indicating the efficacy of SPIN-Diffusion in aligning with the target data distribution. In addition, while Theorems 5.2 and 5.3 are directly applicable to (4.9), the analogous conclusion can be drawn for (4.8) as well (see Appendix D for a detailed discussion).

## 6 Experiments

In this section, we conduct extensive experiments to demonstrate the effectiveness of SPIN-Diffusion. Our results show that SPIN-Diffusion outperforms other baseline fine-tuning methods including SFT and Diffusion-DPO.

### Experiment Setup

**Models, Datasets and Baselines.** We use the stable diffusion v1.5 (SD-1.5) (Rombach et al., 2022) as our base model. While adopting the original network structure, we use its Huggingface pretrained version2, which is trained on LAION-5B (Schuhmann et al., 2022) dataset, a text-image pair dataset containing approximately 5.85 billion CLIP-filtered image-text pairs. We use the Pick-a-Pic dataset (Kirstain et al., 2023) for fine-tuning. Pick-a-Pic is a dataset with pairs of images generated by Dreamlike3 (a fine-tuned version of SD-1.5) and SDXL-beta (Podell et al., 2023), where each pair corresponds to a human preference label. We also train SD-1.5 with SFT and Diffusion-DPO (Wallace et al., 2023) as the baselines. For SFT, we train the model to fit the winner images in the Pick-a-Pic (Kirstain et al., 2023) dataset. In addition to the Diffusion-DPO checkpoint provided by Wallace et al. (2023)4 (denoted by Diffusion-DPO), we also fine-tune an SD-1.5 using Diffusion-DPO and denote it by "Diffusion-DPO (reproduced)".

Footnote 2: https://huggingface.co/runwayml/stable-diffusion-v1-5

Footnote 3: https://dreamlike.art/

Footnote 4: https://huggingface.co/mhdang/dpo-sd1.5-text2image-v1

**Evaluation.** We use the Pick-a-Pic test set, PartiPrompts (Yu et al., 2022) and HPSv2 (Wu et al., 2023) as our evaluation benchmarks. We defer the detailed introduction and results of PartiPrompts and HPSv2 to Appendix A.3. Our evaluation rubric contains two dimensions, human preference alignment and visual appeal. For visual appeal assessment, we follow Wallace et al. (2023); Lee et al. (2024) and use Aesthetic score. For human-preference alignment, we employ reward models including PickScore (Kirstain et al., 2023), ImageReward (Xu et al., 2023) and HPS (Wu et al., 2023). All these reward models are trained according to the Bradley-Terry-Luce (Bradley and Terry, 1952) model on different human-labeled preference datasets. For each prompt, we generate \(5\) images and choose the image with highest average score over those four metrics (best out of \(5\)). We report the average of HPS, PickScore, ImageReward and Aesthetic scores over all the prompts. To investigate how the scores align with human preference, we further compare the accuracy of these reward models on a small portion of the Pick-a-Pic training set. It is worth noticing that PickScore is most aligned with human preference according to the experiments conducted by Kirstain et al. (2023).

### Main Results

In this subsection, we provide empirical evidence demonstrating the superiority of our SPIN-Diffusion model over previous fine-tuning baselines based on the network structure of SD1.5.

**Comparison in Terms of Average Score.** The results are presented in Table 1. While all fine-tuning algorithms yield improvements over the SD1.5 baseline, at iteration 1, our SPIN-Diffusion not only exceeds the original DPO checkpoint but also surpasses SFT in both Aesthetic score and PickScore.

At iteration 2, the superiority of our model becomes even more pronounced, particularly in terms of Aesthetic score, where it consistently outperforms other fine-tuning methods, indicating a dominant performance in visual quality. Furthermore, at iteration 3, our model's HPSv2 score surpasses all competing models, highlighting the effectiveness and robustness of the SPIN-Diffusion approach. Specifically, on the Pick-a-Pic dataset, while SFT achieves a PickScore of \(21.45\), and Diffusion-DPO has a slightly higher score of \(21.45\), SPIN-Diffusion achieves \(22.00\) at iteration \(3\), showing a total improvement of \(0.80\) over the original SD1.5 checkpoint. Furthermore, SPIN-Diffusion demonstrates exceptional performance in terms of Aesthetic score, achieving \(6.25\) at iteration \(3\), which significantly surpasses \(5.86\) achieved by Diffusion-DPO and \(5.77\) by SD1.5.

**Comparison in Terms of Winning Rate.** We further validate our claim by a comparative analysis of the winning rate for our trained model. The winning rate is defined as the proportion of prompts for which a model's generated images exceed the quality of those produced by another model. This experiment is conducted on the Pick-a-Pic test set. We show both the winning rate over SD-1.5, as well as the winning rate over Diffusion-DPO (reproduced) in Figure 1. The complete results are detailed in Tables 3 and 4 in Appendix A.2. We observe that throughout fine-tuning, our SPIN-Diffusion tremendously beats the baselines. When competing with SD-1.5, SPIN-Diffusion achieves an impressive winning rate of 90.0% at iteration 2, which further increases to 91.6% at iteration 3. This winning rate surpasses 73.2% achieved by SFT and 84.8% achieved by Diffusion-DPO (reproduced). When competing with Diffusion-DPO (reproduced), at iteration 3, SPIN-Diffusion

\begin{table}
\begin{tabular}{l|c c c c c} \hline \hline Model & HPS \(\uparrow\) & Aesthetic \(\uparrow\) & ImageReward \(\uparrow\) & PickScore \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 0.2699 & 5.7691 & 0.8159 & 21.1983 & 7.0133 \\ SFT (reproduced) & 0.2749 & 5.9451 & 1.1051 & 21.4542 & 7.1948 \\ Diffusion-DPO & 0.2724 & 5.8635 & 0.9625 & 21.5919 & 7.1726 \\ Diffusion-DPO (reproduced) & 0.2753 & 5.8918 & 1.0495 & 21.8866 & 7.2758 \\ \hline SPIN-Diffusion-Iter1 & 0.2728 & 6.1206 & 1.0131 & 21.6651 & 7.2679 \\ SPIN-Diffusion-Iter2 & 0.2751 & 6.2399 & 1.1086 & 21.9567 & 7.3951 \\ SPIN-Diffusion-Iter3 & **0.2759** & **6.2481** & **1.1239** & **22.0024** & **7.4126** \\ \hline \hline \end{tabular}
\end{table}
Table 1: The results on the Pick-a-Pic test set. We report the mean of PickScore, HPS, ImageReward and Aesthetic over the whole test set. We also report the average score over the three evaluation metrics. SPIN-Diffusion outperforms all the baselines in terms of four metrics. For this and following tables, we use blue background to indicate our method, **bold** numbers to denote the best and underlined for the second best.

Figure 1: Left: winning rate in percentage of SFT, Diffusion-DPO, Diffusion-DPO (reproduced) and SPIN-Diffusion over SD1.5 checkpoint. Right: winning rate in percentage of SFT, Diffusion-DPO, Diffusion-DPO (reproduced) and SPIN-Diffusion over SD1.5 checkpoint. SPIN-Diffusion shows a much higher winning rate than SFT and Diffusion-DPO tuned models.

achieves a winning rate of 56.2% on HPS, 86.8% on Aesthetic, 62.4% on PickScore, 55.8% on Image Reward, and has an overall winning rate of 70.2%.

### Qualitative Analysis

We illustrate the qualitative performance of our model on three prompts coming from the Pick-a-Pic test dataset. We prompt SD-1.5, SFT, Diffusion-DPO (reproduced), and SPIN-Diffusion at iteration 1 to 3 and present the generated images in Figure 2. Compared to the baseline methods, SPIN-Diffusion demonstrates a notable improvement in image quality, even more apparent than the improvements in scores. This is especially evident in aspects such as aligning, shading, visual appeal, and the intricacy of details within each image. This qualitative assessment underscores the effectiveness of SPIN-Diffusion in producing images that are not only contextually accurate but also visually superior to those generated by other existing models.

## 7 Conclusion

This paper presents SPIN-Diffusion, an innovative fine-tuning approach tailored for diffusion models, particularly effective in scenarios where only a single image is available per text prompt. By employing a self-play mechanism, SPIN-Diffusion iteratively refines the model's performance, converging towards the target data distribution. Theoretical evidence underpins the superiority of SPIN-Diffusion, demonstrating that traditional supervised fine-tuning cannot surpass its stationary point, achievable at the target data distribution. Empirical evaluations highlight SPIN-Diffusion's remarkable success in text-to-image generation tasks, surpassing the state-of-the-art fine-tuning methods even without the need for additional data. This underscores SPIN-Diffusion's potential to revolutionize the practice of diffusion model fine-tuning, leveraging solely demonstration data to achieve unprecedented performance levels.

**Limitations** While our theoretical analysis ensures that \(\bm{\theta}_{k}\) is the only global optimum of our objective function, it relies on the assumption that the data distribution can be adequately represented by the parameterized family. Additionally, as our methodology is fundamentally a distribution matching algorithm, it cannot, in principle, exceed the performance of the underlying data distribution. Finally, although SPIN-Diffusion is data-efficient, it requires additional sampling overhead. The high sampling cost can be alleviated by software-level upgrades such as larger batch size, and memory-efficient attention backends. On the algorithm level, advanced sampling acceleration techniques also offer promising improvements. These techniques are orthogonal to our efforts in improving the performance of fine-tuning diffusion models, and therefore we decide to explore them as a future work.

Figure 2: We show the images generated by different models. The prompts are “_a very cute boy, looking at audience, silver hair, in his room, wearing hoodie, at daytime, ai language model, 3d art, c4d, blender, pop mart, blind box, clay material, pixar trend, animation lighting, depth of field, ultra detailed_”, “_painting of a castle in the distance_” and “_red and green eagle_”. The models are: SD-1.5, SFT, Diffusion-DPO (reproduced), SPIN-Diffusion-Iter1, SPIN-Diffusion-Iter2, SPIN-Diffusion-Iter3 from left to right. SPIN-Diffusion demonstrates a notable improvement in image quality. The quantitative evaluation of the aesthetic score of the above images is in Table 5.

## Acknowledgement

We thank the anonymous reviewers and area chair for their helpful comments. HY, ZC, KJ, and QG are supported in part by the National Science Foundation CAREER Award 1906169, IIS-2008981, and the Sloan Research Fellowship. The views and conclusions contained in this paper are those of the authors and should not be interpreted as representing any funding agencies.

## References

* Austin et al. (2021)Austin, J., Johnson, D. D., Ho, J., Tarlow, D. and Van Den Berg, R. (2021). Structured denoising diffusion models in discrete state-spaces. _Advances in Neural Information Processing Systems_**34** 17981-17993.
* Betker et al. (2023)Betker, J., Goh, G., Jing, L., Brooks, T., Wang, J., Li, L., Ouyang, L., Zhuang, J., Lee, J., Guo, Y. et al. (2023). Improving image generation with better captions. _Computer Science. https://cdn. openai. com/papers/dall-e-3. pdf_**2** 3.
* Black et al. (2023)Black, K., Janner, M., Du, Y., Kostrikov, I. and Levine, S. (2023). Training diffusion models with reinforcement learning. _arXiv preprint arXiv:2305.13301_.
* Bradley and Terry (1952)Bradley, R. A. and Terry, M. E. (1952). Rank analysis of incomplete block designs: I. the method of paired comparisons. _Biometrika_**39** 324-345.
* Caesar et al. (2018)Caesar, H., Uijlings, J. and Ferrari, V. (2018). Coco-stuff: Thing and stuff classes in context. In _Proceedings of the IEEE conference on computer vision and pattern recognition_.
* Chen et al. (2024)Chen, Z., Deng, Y., Yuan, H., Ji, K. and Gu, Q. (2024). Self-play fine-tuning converts weak language models to strong language models. _arXiv preprint arXiv:2401.01335_.
* Chen et al. (2023)Chen, Z., Yuan, H., Li, Y., Kou, Y., Zhang, J. and Gu, Q. (2023). Fast sampling via de-randomization for discrete diffusion models. _arXiv preprint arXiv:2312.09193_.
* Clark et al. (2023)Clark, K., Vicol, P., Swersky, K. and Fleet, D. J. (2023). Directly fine-tuning diffusion models on differentiable rewards. _arXiv preprint arXiv:2309.17400_.
* Corso et al. (2022)Corso, G., Stark, H., Jing, B., Barzilay, R. and Jaakkola, T. (2022). Diffdock: Diffusion steps, twists, and turns for molecular docking. _arXiv preprint arXiv:2210.01776_.
* Creswell et al. (2018)Creswell, A., White, T., Dumoulin, V., Arulkumaran, K., Sengupta, B. and Bharath, A. A. (2018). Generative adversarial networks: An overview. _IEEE signal processing magazine_**35** 53-65.
* Dai et al. (2023)Dai, X., Hou, J., Ma, C.-Y., Tsai, S., Wang, J., Wang, R., Zhang, P., Vandenhende, S., Wang, X., Dubey, A. et al. (2023). Emu: Enhancing image generation models using photogenic needles in a haystack. _arXiv preprint arXiv:2309.15807_.
* Fan et al. (2023)Fan, Y., Watkins, O., Du, Y., Liu, H., Ryu, M., Boutilier, C., Abbeel, P., Ghavamzadeh, M., Lee, K. and Lee, K. (2023). Dpok: Reinforcement learning for fine-tuning text-to-image diffusion models. _arXiv preprint arXiv:2305.16381_.
* Gal et al. (2022)Gal, R., Alaluf, Y., Atzmon, Y., Patashnik, O., Bermano, A. H., Chechik, G. and Cohen-Or, D. (2022). An image is worth one word: Personalizing text-to-image generation using textual inversion. _arXiv preprint arXiv:2208.01618_.
* Guan et al. (2023)Guan, J., Zhou, X., Yang, Y., Bao, Y., Peng, J., Ma, J., Liu, Q., Wang, L. and Gu, Q. (2023). Decompdiff: Diffusion models with decomposed priors for structure-based drug design.
* Ho et al. (2020)Ho, J., Jain, A. and Abbeel, P. (2020). Denoising diffusion probabilistic models. _Advances in neural information processing systems_**33** 6840-6851.
* Ho et al. (2022)Ho, J., Saharia, C., Chan, W., Fleet, D. J., Norouzi, M. and Salimans, T. (2022). Cascaded diffusion models for high fidelity image generation. _The Journal of Machine Learning Research_**23** 2249-2281.
* Ho et al. (2020)Kingma, D. P. and Welling, M. (2013). Auto-encoding variational bayes. _arXiv preprint arXiv:1312.6114_.
* Kirstain et al. (2023)Kirstain, Y., Polyak, A., Singer, U., Matiana, S., Penna, J. and Levy, O. (2023). Pick-a-pic: An open dataset of user preferences for text-to-image generation. _arXiv preprint arXiv:2305.01569_.
* Lee et al. (2023)Lee, K., Liu, H., Ryu, M., Watkins, O., Du, Y., Boutilier, C., Abbeel, P., Ghavamzadeh, M. and Gu, S. S. (2023). Aligning text-to-image models using human feedback. _arXiv preprint arXiv:2302.12192_.
* Lee et al. (2024)Lee, S. H., Li, Y., Ke, J., Yoo, I., Zhang, H., Yu, J., Wang, Q., Deng, F., Entis, G., He, J., Li, G., Kim, S., Essa, I. and Yang, F. (2024). Parrot: Pareto-optimal multi-reward reinforcement learning framework for text-to-image generation.
* Lin et al. (2014)Lin, T.-Y., Maire, M., Belongie, S., Hays, J., Perona, P., Ramanan, D., Dollar, P. and Zitnick, C. L. (2014). Microsoft coco: Common objects in context. In _Computer Vision-ECCV 2014: 13th European Conference, Zurich, Switzerland, September 6-12, 2014, Proceedings, Part V 13_. Springer.
* Muller (1997)Muller, A. (1997). Integral probability metrics and their generating classes of functions. _Advances in applied probability_**29** 429-443.
* Nichol et al. (2021)Nichol, A., Dhariwal, P., Ramesh, A., Shyam, P., Mishkin, P., McGrew, B., Sutskever, I. and Chen, M. (2021). Glide: Towards photorealistic image generation and editing with text-guided diffusion models. _arXiv preprint arXiv:2112.10741_.
* Peebles and Xie (2023)Peebles, W. and Xie, S. (2023). Scalable diffusion models with transformers. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_.
* Podell et al. (2023)Podell, D., English, Z., Lacey, K., Blattmann, A., Dockhorn, T., Muller, J., Penna, J. and Rombach, R. (2023). Sdxl: Improving latent diffusion models for high-resolution image synthesis. _arXiv preprint arXiv:2307.01952_.
* Prabhudesai et al. (2023)Prabhudesai, M., Goyal, A., Pathak, D. and Fragkiadaki, K. (2023). Aligning text-to-image diffusion models with reward backpropagation. _arXiv preprint arXiv:2310.03739_.
* Rafailov et al. (2023)Rafailov, R., Sharma, A., Mitchell, E., Ermon, S., Manning, C. D. and Finn, C. (2023). Direct preference optimization: Your language model is secretly a reward model. _arXiv preprint arXiv:2305.18290_.
* Ramesh et al. (2022)Ramesh, A., Dhariwal, P., Nichol, A., Chu, C. and Chen, M. (2022). Hierarchical text-conditional image generation with clip latents. _arXiv preprint arXiv:2204.06125_ **1** 3.
* Rombach et al. (2022a)Rombach, R., Blattmann, A., Lorenz, D., Esser, P. and Ommer, B. (2022a). High-resolution image synthesis with latent diffusion models. In _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition_.
* Rombach et al. (2022b)Rombach, R., Blattmann, A., Lorenz, D., Esser, P. and Ommer, B. (2022b). High-resolution image synthesis with latent diffusion models. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)_.
* Ruiz et al. (2023)Ruiz, N., Li, Y., Jampani, V., Pritch, Y., Rubinstein, M. and Aberman, K. (2023). Dream-booth: Fine tuning text-to-image diffusion models for subject-driven generation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_.
* Saharia et al. (2022a)Saharia, C., Chan, W., Saxena, S., Li, L., Whang, J., Denton, E. L., Ghasemipour, K., Gontijo Lopes, R., Karagol Ayan, B., Salimans, T. et al. (2022a). Photorealistic text-to-image diffusion models with deep language understanding. _Advances in Neural Information Processing Systems_**35** 36479-36494.
* Saharia et al. (2022b)Saharia, C., Ho, J., Chan, W., Salimans, T., Fleet, D. J. and Norouzi, M. (2022b). Image super-resolution via iterative refinement. _IEEE Transactions on Pattern Analysis and Machine Intelligence_**45** 4713-4726.
* Saharia et al. (2022c)Schuhmann, C., Beaumont, R., Vencu, R., Gordon, C., Wightman, R., Cherti, M., Coombes, T., Katta, A., Mullis, C., Wortsman, M. et al. (2022). Lainon-5b: An open large-scale dataset for training next generation image-text models. _Advances in Neural Information Processing Systems_**35** 25278-25294.
* Segalis et al. (2023)Segalis, E., Valevski, D., Lumen, D., Matias, Y. and Leviathan, Y. (2023). A picture is worth a thousand words: Principelled recaptioning improves image generation. _arXiv preprint arXiv:2310.16656_.
* Silver et al. (2017a)Silver, D., Hubert, T., Schrittwieser, J., Antonoglou, I., Lai, M., Guez, A., Lanctot, M., Sifre, L., Kumaran, D., Graepel, T. et al. (2017a). Mastering chess and shogi by self-play with a general reinforcement learning algorithm. _arXiv preprint arXiv:1712.01815_.
* Silver et al. (2017b)Silver, D., Schrittwieser, J., Simonyan, K., Antonoglou, I., Huang, A., Guez, A., Hubert, T., Baker, L., Lai, M., Bolton, A. et al. (2017b). Mastering the game of go without human knowledge. _nature_**550** 354-359.
* Sohl-Dickstein et al. (2015)Sohl-Dickstein, J., Weiss, E., Maheswaranathan, N. and Ganguli, S. (2015). Deep unsupervised learning using nonequilibrium thermodynamics. In _International conference on machine learning_. PMLR.
* Song et al. (2020a)Song, J., Meng, C. and Ermon, S. (2020a). Denoising diffusion implicit models. _arXiv preprint arXiv:2010.02502_.
* Song and Ermon (2019)Song, Y. and Ermon, S. (2019). Generative modeling by estimating gradients of the data distribution. _Advances in neural information processing systems_**32**.
* Song et al. (2020b)Song, Y., Sohl-Dickstein, J., Kingma, D. P., Kumar, A., Ermon, S. and Poole, B. (2020b). Score-based generative modeling through stochastic differential equations. _arXiv preprint arXiv:2011.13456_.
* Tesauro et al. (1995)Tesauro, G. et al. (1995). Temporal difference learning and td-gammon. _Communications of the ACM_**38** 58-68.
* Wallace et al. (2023)Wallace, B., Dang, M., Rafailov, R., Zhou, L., Lou, A., Purushwalkam, S., Ermon, S., Xiong, C., Joty, S. and Naik, N. (2023). Diffusion model alignment using direct preference optimization. _arXiv preprint arXiv:2311.12908_.
* Watson et al. (2021)Watson, D., Ho, J., Norouzi, M. and Chan, W. (2021). Learning to efficiently sample from diffusion probabilistic models. _arXiv preprint arXiv:2106.03802_.
* Wu et al. (2023)Wu, X., Hao, Y., Sun, K., Chen, Y., Zhu, F., Zhao, R. and Li, H. (2023). Human preference score v2: A solid benchmark for evaluating human preferences of text-to-image synthesis. _arXiv preprint arXiv:2306.09341_.
* Xu et al. (2023)Xu, J., Liu, X., Wu, Y., Tong, Y., Li, Q., Ding, M., Tang, J. and Dong, Y. (2023). Imagereward: Learning and evaluating human preferences for text-to-image generation. _arXiv preprint arXiv:2304.05977_.
* Yang et al. (2023)Yang, K., Tao, J., Lyu, J., Ge, C., Chen, J., Li, Q., Shen, W., Zhu, X. and Li, X. (2023). Using human feedback to fine-tune diffusion models without any reward model. _arXiv preprint arXiv:2311.13231_.
* Yu et al. (2022)Yu, J., Xu, Y., Koh, J. Y., Luong, T., Baid, G., Wang, Z., Vasudevan, V., Ku, A., Yang, Y., Ayan, B. K. et al. (2022). Scaling autoregressive models for content-rich text-to-image generation. _arXiv preprint arXiv:2206.10789_**2** 5.
* Zheng et al. (2023)Zheng, L., Yuan, J., Yu, L. and Kong, L. (2023). A reparameterized discrete diffusion model for text generation. _arXiv preprint arXiv:2302.05737_.

### Broader Impact

This approach enhances model performance across diverse benchmarks without the need for supervision from more advanced models, facilitating better alignment of AI with human preferences. This improvement bolsters the reliability and safety of AI systems in the field of text-to-image generation. It provides a more effective and scalable method for model fine-tuning, resulting in cost reductions and the expedited deployment of models that more accurately reflect human aesthetic and content preferences.

However, there exists the potential for overfitting, which may not lead to genuine improvements in real-world applications. Adhering too closely in creative fields such as text-to-image generation could inadvertently perpetuate existing societal biases in the generated imagery. Furthermore, the capability to finely tune alignment with human preferences could be exploited for unethical ends, such as crafting tailored and manipulative content or disseminating false information.

## Appendix A Additional Details for Experiments

### Hyperparameters

We train the SPIN-Diffusion on 8 NVIDIA A100 GPUs with 80G memory. In training the SPIN-Diffusion, we use the AdamW optimizer with a weight decay factor of \(1e-2\). The images are processed at a \(512\times 512\) resolution. The batch size is set to 8 locally, alongside a gradient accumulation of 32. For the learning rate, we use a schedule starting with \(200\) warm-up steps, followed by linear decay. We conduct a grid search on the learning rate, coefficient \(\beta_{t}\), and number of training steps, and choose the hyperparameters that perform the best on the validation set. We set the learning rate at \(2.0e-5\) for the initial two iterations, reducing it to \(5.0e-8\) for the third iteration. The coefficient \(\beta_{t}\) is chosen as \(2000\) for the first iteration, increasing to \(5000\) for the subsequent second and third iterations. The trend in different learning rate and \(\beta_{t}\) choices reveals that later iterations typically benefit from more conservative updates. Training steps are \(50\) for the first iteration, \(500\) for the second, and \(200\) for the third. In training the DPO model, we employ the same AdamW optimizer and maintain a batch size of 8 and a gradient accumulation of 32. The learning rate is set to \(2.0e-5\), and \(\beta_{t}\) is set to \(2000\). The total number of training steps for DPO is \(350\). In SFT training, we use 4 NVIDIA A6000 GPUs. We use the AdamW optimizer with a weight decay of \(0.01\). The local batch size is set to 32 and the global batch size is set to 512. Our learning rate is 1e-5, with linear warmup for 500 steps with no learning rate decay. We save checkpoints every 500 steps and evaluate the checkpoints on Pick-a-Pic validation. We select the best checkpoint, trained after 2000 steps as our SFT checkpoint.

During generation, we use a guidance scale of \(7.5\), and fixed the random seed as \(5775709\).

### Additional Results

In this section, we first illustrate the main results shown in Table 1 by Figure 3 and a radar plot Figure 4.

We present the median scores of baselines and SPIN-Diffusion on Pick-a-Pic testset in Table 2. The results are consistent to the results in Table 1. We present the detailed winning rate of baselines and SPIN-Diffusion over SD-1.5 in Table 3 and the winning rate over Diffusion-DPO in Table 4. We present the aesthetic scores of the images in Figure 2 in Table 5.

### Additional Ablation Study

We conduct ablation study to investigate several aspects in the performance of SPIN-Diffusion.

Continual Training for More Epochs.We further study the training behavior of SPIN-Diffusion by continual training within iteration 1. Both iteration 1 and iteration 2 commence training from the same checkpoint. However, for subsequent epochs in iteration 1, images generated by SD-1.5 are used, with SD-1.5 also serving as the opponent player. In contrast, during iteration 2, both the generated images and the opponent player originate from the iteration 1 checkpoint. The results shown in Figure 5 are reported on the \(500\) prompts validation set of Pick-a-Pic. We observe that in terms of PickScore, HPS, and average score, continual training on iteration 1 even results in a performance decay. Even in terms of Aesthetic score, continual training cannot guarantee a consistent improvement. Compared to training for more epochs in iteration 1, iteration 2 has a much more ideal performance. These results show the key role in updating the opponent.

Evaluation on Other BenchmarksWe also conduct experiment on PartiPrompts (Yu et al., 2022) and HPSv2 (Wu et al., 2023). PartiPrompts consist of 1632 prompts that contains a wide range of categories and difficulties that beyond daily scenarios and natural objects. HPSv2 is a text-image preference dataset, where the prompts come from DiffusionDB and MSCOCO (Lin et al., 2014) dataset.

Figure 4: The main result is presented in radar chart. The scores are adjusted to be shown on the same scale. Compared with the baselines, SPIN achieves higher scores in all the four metrics and the average score by a large margin. In the legend, Diffusion-DPO (ours) denotes our reproduced version of Diffusion-DPO.

Figure 3: Comparison between SPIN-Diffusion at different iterations with SD-1.5, SFT and Diffusion-DPO. SPIN-Diffusion outperforms SFT at iteration 1, and outperforms all the baselines after iteration 2. In the legend, Diffusion-DPO (ours) denotes our reproduced version of Diffusion-DPO.

In our experiment, we use the prompts from its test set, which contains 3200 prompts. We use the same evaluation metrics as before and the results are shown in Table 7 and 8. The results show that, on both PartiPrompts and HPSv2, SPIN-Diffusion achieves a comparable performance with Diffusion DPO (reproduced) and surpasses other baseline models at the first iteration. SPIN-Diffusion further outperforms the baseline models.

\begin{table}
\begin{tabular}{c|c c c} \hline Benchmarks & Pick-a-Pic & PartiPrompts & HPSv2 \\ \hline \# Prompts & 500 & 1630 & 3200 \\ \hline \hline \end{tabular}
\end{table}
Table 6: The size of benchmark datasets in our evaluation

\begin{table}
\begin{tabular}{l|c c c c c} \hline Model & PickScore \(\uparrow\) & HPS \(\uparrow\) & ImageReward \(\uparrow\) & Aesthetic \(\uparrow\) & Average \(\uparrow\) \\ \hline SFT (reproduced) & 62.4 & 82.0 & 75.0 & 70.8 & 73.2 \\ Diffusion-DPO & 78.4 & 75.8 & 65.0 & 65.4 & 79.8 \\ Diffusion-DPO (reproduced) & 83.8 & 81.2 & 71.2 & 69.0 & 84.8 \\ \hline SPIN-Diffusion-Iter1 & 75.4 & 70.0 & 65.8 & 86.0 & 80.8 \\ SPIN-Diffusion-Iter2 & 86.6 & 82.6 & 72.6 & 92.2 & 90.0 \\ SPIN-Diffusion-Iter3 & **87.0** & **86.2** & **77.0** & **93.8** & **91.6** \\ \hline \hline \end{tabular}
\end{table}
Table 4: The winning rate over Diffusion DPO (reproduced) on Pick-a-Pic testset. SPIN-Diffusion shows the highest winning rate over Diffusion DPO (reproduced) among all the baselines.

\begin{table}
\begin{tabular}{l|c c c c c} \hline Model & HPS \(\uparrow\) & Aesthetic \(\uparrow\) & ImageReward \(\uparrow\) & PickScore \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 0.2705 & 5.7726 & 0.9184 & 21.1813 & 7.0357 \\ SFT (reproduced) & 0.2750 & 5.9331 & **1.3161** & 21.4159 & 7.2350 \\ Diffusion-DPO & 0.2729 & 5.8837 & 1.1361 & 21.6064 & 7.2248 \\ Diffusion-DPO (reproduced) & 0.2756 & 5.8895 & 1.2219 & 21.8995 & 7.3216 \\ \hline SPIN-Diffusion-Iter1 & 0.2739 & 6.1297 & 1.1366 & 21.6464 & 7.2967 \\ SPIN-Diffusion-Iter2 & 0.2751 & 6.2385 & 1.3059 & 22.0101 & 7.4574 \\ SPIN-Diffusion-Iter3 & **0.2761** & **6.2769** & 1.3073 & **22.0703** & **7.4827** \\ \hline \hline \end{tabular}
\end{table}
Table 2: The results of median scores on Pick-a-Pic test set. We report the median of PickScore, HPSv2, ImageReward and Aesthetic over the whole test set. We also report the average score over the four evaluation metric. SPIN-Diffusion outperforms all the baselines regarding HPS, Aesthetic, PickScore and the average score, which agrees with the results of mean scores.

\begin{table}
\begin{tabular}{l|c c c c c} \hline Model & PickScore \(\uparrow\) & HPS \(\uparrow\) & ImageReward \(\uparrow\) & Aesthetic \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 16.2 & 20.8 & 28.8 & 31.0 & 15.2 \\ SFT (reproduced) & 26.8 & 48.2 & 51.4 & 52.8 & 35.2 \\ Diffusion-DPO & 30.6 & 29.4 & 36.8 & 45.2 & 30.4 \\ \hline SPIN-Diffusion-Iter1 & 37.2 & 35.6 & 40.6 & 74.8 & 47.4 \\ SPIN-Diffusion-Iter2 & 56.8 & 49.0 & 52.6 & 86.6 & 68.2 \\ SPIN-Diffusion-Iter3 & **62.4** & **56.2** & **55.8** & **86.8** & **70.2** \\ \hline \hline \end{tabular}
\end{table}
Table 5: Aesthetic scores of pictures in Figure 2

\begin{table}
\begin{tabular}{l|c|c c|c c|c} \hline Model & PickScore \(\uparrow\) & HPS \(\uparrow\) & ImageReward \(\uparrow\) & Aesthetic \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 16.2 & 20.8 & 28.8 & 31.0 & 15.2 \\ SFT (reproduced) & 26.8 & 48.2 & 51.4 & 52.8 & 35.2 \\ Diffusion-DPO & 30.6 & 29.4 & 36.8 & 45.2 & 30.4 \\ \hline SPIN-Diffusion-Iter1 & 37.2 & 35.6 & 40.6 & 74.8 & 47.4 \\ SPIN-Diffusion-Iter2 & 56.8 & 49.0 & 52.6 & 86.6 & 68.2 \\ SPIN-Diffusion-Iter3 & **62.4** & **56.2** & **55.8** & **86.8** & **70.2** \\ \hline \hline \end{tabular}
\end{table}
Table 4: The winning rate over Diffusion DPO (reproduced) on Pick-a-Pic testset. SPIN-Diffusion shows the highest winning rate over Diffusion DPO (reproduced) among all the baselines.

reaches an average score of 7.4326 and 7.5244 on PariPrompts and HPSv2 dataset respectively at second iteration, which outperforms all other baselines by a large margin. These results consolidate our statement that SPIN shows a superior performance over both SFT and DPO. We also conduct qualitative result on ParitiPrompts and the results are shown in Figure 6.

**Remarks on LoRA fine-tuning** While LoRA is a parameter-efficient fine-tuning method that focuses on reducing trainable parameters under resource constraints, it is orthogonal to SPIN-Diffusion, which utilizes a self-play mechanism for fine-tuning. We also provide SFT (LoRA) fine-tuning results in Figure 11. We can see that full fine-tuning generally surpasses the performance of LoRA fine-tuning. Therefore, we leave the exploration of LoRA version of SPIN-Diffusion to future work.

\begin{table}
\begin{tabular}{l|c c c c c} \hline \hline Model & HPS \(\uparrow\) & Aesthetic \(\uparrow\) & ImageReward \(\uparrow\) & PickScore \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 0.2769 & 5.6721 & 0.9196 & 21.8926 & 7.1903 \\ SFT (reproduced) & 0.2814 & 5.8568 & **1.1559** & 21.9719 & 7.3165 \\ Diffusion-DPO & **0.2815** & 5.7758 & 1.1495 & 22.2723 & 7.3698 \\ \hline SPIN-Diffusion-Iter1 & 0.2783 & 5.9073 & 0.9952 & 22.1221 & 7.3257 \\ SPIN-Diffusion-Iter2 & 0.2804 & 6.0533 & 1.0845 & 22.3122 & 7.4326 \\ SPIN-Diffusion-Iter3 & 0.2813 & **6.0534** & 1.0893 & **22.3435** & **7.4419** \\ \hline \hline \end{tabular}
\end{table}
Table 7: The results of mean scores on ParitiPrompts. We report the mean and median of PickScore, HPS, ImageReward and Aesthetic score over the whole dataset. We also report the average score over the four evaluation metrics. SPIN-Diffusion outperforms all the baselines in terms of four metrics.

Figure 5: The evaluation results on Pick-a-Pic validation set of continual training within SPIN-Diffusion iteration 1, and SPIN-Diffusion iteration 2. The x-axis is the number of epochs. Consecutive epochs in iteration 1 reach their limit quickly while switching to iteration 2 boosts the performance.

### Training Dynamics of SFT and DPO

We first study the training dynamic of SPIN-Diffusion in comparison with SFT and Diffusion-DPO, and we plot the results in Figure 7. We observe that after training with about 50k data, the performance of SFT stop improving and maintains at about 20.8 in PickScore, 0.270 in HPS, 5.6 in Aesthetic and 8.9 in average score. These results is significantly inferior to those achieved by SPIN-Diffusion, which achieves 21.2 in PickScore, 0.272 in HPS, 5.9 in Aesthetic and 9.1 in average score. Compared to Diffusion-DPO, SPIN-Diffusion achieves a superior performance without the loser image. These results demonstrate that self-play fine-tuning plays a key role in SPIN-Diffusion's performance.

\begin{table}
\begin{tabular}{l|c c c c c} \hline \hline Model & HPS \(\uparrow\) & Aesthetic \(\uparrow\) & ImageReward \(\uparrow\) & PickScore \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 0.2781 & 5.8529 & 0.9324 & 21.4825 & 7.1365 \\ SFT (reproduced) & 0.2847 & 6.0057 & 1.308 & 21.8211 & 7.3549 \\ Diffusion-DPO & 0.2847 & 5.9878 & **1.3085** & 22.2854 & 7.4666 \\ \hline SPIN-Diffusion-Iter1 & 0.2803 & 6.1519 & 1.1331 & 21.858 & 7.3558 \\ SPIN-Diffusion-Iter2 & 0.2839 & **6.3401** & 1.2711 & 22.2577 & 7.5382 \\ SPIN-Diffusion-Iter3 & **0.2849** & 6.3296 & 1.2853 & **22.3029** & **7.5507** \\ \hline \hline \end{tabular}
\end{table}
Table 10: The results of median scores on HPSv2. We report the mean and median of PickScore, HPS, ImageReward and Aesthetic score over the whole dataset. We also report the average score over the four evaluation metrics. SPIN-Diffusion outperforms all the baselines in terms of four metrics.

\begin{table}
\begin{tabular}{l|c c c|c c} \hline \hline Model & HPS \(\uparrow\) & Aesthetic \(\uparrow\) & ImageReward \(\uparrow\) & PickScore \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 0.2781 & 5.6823 & 1.1247 & 21.9339 & 7.2548 \\ SFT (reproduced) & 0.2781 & 5.6823 & 1.1247 & 21.9339 & 7.2548 \\ Diffusion-DPO & 0.2822 & 5.7820 & **1.3823** & 22.3251 & 7.4429 \\ \hline SPIN-Diffusion-Iter1 & 0.2793 & 5.8926 & 1.1906 & 22.1632 & 7.3814 \\ SPIN-Diffusion-Iter2 & 0.2810 & 6.0400 & 1.2857 & 22.2998 & 7.4766 \\ SPIN-Diffusion-Iter3 & **0.2825** & **6.0480** & 1.3095 & **22.3361** & **7.4940** \\ \hline \hline \end{tabular}
\end{table}
Table 8: The results of median scores on PartiPrompts. We report the mean and median of PickScore, HPS, ImageReward and Aesthetic score over the whole dataset. We also report the average score over the four evaluation metrics. SPIN-Diffusion outperforms all the baselines in terms of four metrics.

\begin{table}
\begin{tabular}{l|c c c c c} \hline \hline Model & HPS \(\uparrow\) & Aesthetic \(\uparrow\) & ImageReward \(\uparrow\) & PickScore \(\uparrow\) & Average \(\uparrow\) \\ \hline SD-1.5 & 0.2783 & 5.9017 & 0.8548 & 21.4978 & 7.1332 \\ SFT (reproduced) & 0.2846 & 6.0378 & **1.1547** & 21.8549 & 7.333 \\ Diffusion-DPO & 0.2843 & 6.0306 & 1.1391 & 22.3012 & 7.4388 \\ \hline SPIN-Diffusion-Iter1 & 0.2804 & 6.1943 & 1.0133 & 21.8778 & 7.3415 \\ SPIN-Diffusion-Iter2 & 0.2838 & 6.3403 & 1.1145 & 22.2994 & 7.5095 \\ SPIN-Diffusion-Iter3 & **0.2849** & **6.342** & 1.1292 & **22.3415** & **7.5244** \\ \hline \hline \end{tabular}
\end{table}
Table 9: The results of mean scores on HPSv2. We report the mean and median of PickScore, HPS, ImageReward and Aesthetic score over the whole dataset. We also report the average score over the four evaluation metrics. SPIN-Diffusion outperforms all the baselines in terms of four metrics.

[MISSING_PAGE_FAIL:19]

\(\alpha_{t}\))\(\mathbf{I}\)) for all \(t\) and reduces to DDPM (Ho et al., 2020) with a special choice of \(\sigma_{t}=\sqrt{(1-\alpha_{t-1})/(1-\alpha_{t})}\sqrt{(1-\alpha_{t}/\alpha_{t-1})}\).

Given noise schedule \(\alpha_{t}\) and \(\sigma_{t}\), examples from the generative model follows

\[p_{\bm{\theta}}(\mathbf{x}_{0:T}|\mathbf{c})=\prod_{t=1}^{T}p_{\bm{\theta}}( \mathbf{x}_{t-1}|\mathbf{x}_{t},\mathbf{c})\cdot p_{\bm{\theta}}(\mathbf{x}_{T }|\mathbf{c}),\]

\[p_{\bm{\theta}}(\mathbf{x}_{t-1}|\mathbf{x}_{t},\mathbf{c})=\mathcal{N}\big{(} \bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t),\sigma_{t}^{2}\mathbf{I} \big{)}.\]

Here \(\bm{\theta}\) belongs to the parameter space \(\bm{\Theta}\) and \(\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\) is the mean of the Gaussian that can be parameterized (Ho et al., 2020; Song et al., 2020) as

\[\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)=\sqrt{\alpha_{t-1}}\bigg{(} \frac{\mathbf{x}_{t}-\sqrt{1-\alpha_{t}}\bm{\epsilon}_{\bm{\theta}}(\mathbf{x }_{t},\mathbf{c},t)}{\sqrt{\alpha_{t}}}+\sqrt{1-\alpha_{t-1}-\sigma_{t}^{2}} \cdot\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t),\] (C.2)

where \(\{\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\}_{t=1}^{T}\) are score functions that approximate noise. Compare (C.2) and (C.1), we can see that \(\big{(}\frac{\mathbf{x}_{t}-\sqrt{1-\alpha_{t}}\bm{\epsilon}_{\bm{\theta}}( \mathbf{x}_{t},\mathbf{c},t)}{\sqrt{\alpha_{t}}}\big{)}\) approximates \(\mathbf{x}_{0}\), and \(\bm{\epsilon}_{\bm{\theta}}\) approximates the noise \(\bm{\epsilon}_{t}:=\frac{\mathbf{x}_{t}-\sqrt{\alpha_{t}}\mathbf{x}_{0}}{ \sqrt{1-\alpha_{t}}}\sim\mathcal{N}(0,\mathbf{I})\).

### Decoupling Technique

In Section 4, we demonstrate that the objective function defined in (4.8) can be simplified to the form in (4.9). This reformulation only requires considering two consecutive sampling steps, \(t-1\) and \(t\), rather than involving all intermediate steps. Now, we provide a detailed derivation.

Proof of Lemma 4.1.: \(L_{\mathrm{SPIN}}(\bm{\theta},\bm{\theta}_{k})\)

Figure 7: The evaluation results on the Pick-a-Pic validation set of SFT, Diffusion-DPO and SPIN-Diffusion. The x-axis is the number of training data. SFT reaches its limit quickly, while Diffusion-DPO and SPIN-Diffusion continue to improve after training with over 800k data.

\[=\mathbb{E}_{\mathbf{c}\sim q(\cdot),\mathbf{x}_{0,T}\sim p_{\mathrm{data }}(\cdot|\mathbf{c}),\mathbf{x}_{0,T}^{\prime}\sim p_{\mathbf{\theta_{k}}}(\cdot| \mathbf{c})}\bigg{[}\ell\bigg{(}-\sum_{t=1}^{T}\frac{\beta_{t}}{T}\Big{[}\| \mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\|_{2}^{2 }-\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}_{t},\mathbf{c },t)\big{\|}_{2}^{2}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm{\mu}_{\bm{\theta}}( \mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}_{t-1 }^{\prime}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t) \big{\|}_{2}^{2}\Big{]}\bigg{)}\bigg{]}\] \[\leq\mathbb{E}_{\mathbf{c}\sim q(\cdot),\mathbf{x}_{0,T}\sim p_{ \mathrm{data}}(\cdot|\mathbf{c}),\mathbf{x}_{0,T}^{\prime}\sim p_{\mathbf{ \theta_{k}}}(\cdot|\mathbf{c})}\bigg{[}\frac{1}{T}\sum_{t=1}^{T}\ell\bigg{(}- \beta_{t}\Big{[}\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t },\mathbf{c},t)\big{\|}_{2}^{2}-\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta} _{k}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm{\mu}_{\bm{\theta}}( \mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}_{t-1 }^{\prime}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t) \big{\|}_{2}^{2}\bigg{]}\bigg{)}\bigg{]}\] \[=\mathbb{E}_{\mathbf{c}\sim q(\cdot),\mathbf{x}_{0,T}\sim p_{ \mathrm{data}}(\cdot|\mathbf{c}),\mathbf{x}_{0,T}^{\prime}\sim p_{\mathbf{ \theta_{k}}}(\cdot|\mathbf{c}),t\sim\mathrm{Uniform}\{1,\ldots,T\}}\bigg{[}\ell \bigg{(}-\beta_{t}\Big{[}\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}( \mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}_{t }^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}-\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm {\mu}_{\bm{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2} \bigg{]}\bigg{)}\bigg{]}\] \[=\mathbb{E}_{\mathbf{c}\sim q(\mathbf{c}),(\mathbf{x}_{t-1}, \mathbf{x}_{t})\sim p_{\mathrm{data}}(\mathbf{x}_{t-1},\mathbf{x}_{t}|\mathbf{ c}),(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime})\sim p_{\mathbf{ \theta_{k}}}(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime}|\mathbf{c}),t \sim\mathrm{Uniform}\{1,\ldots,T\}}\bigg{[}\ell\bigg{(}-\beta_{t}\Big{[}\big{\|} \mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2 }^{2}\]\] \[\qquad-\big{\|}\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{ x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}-\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm{\mu}_{\bm{ \theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{ x}_{t-1}^{\prime}-\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t) \big{\|}_{2}^{2}\bigg{]}\bigg{)}\bigg{]}\] \[=L_{\mathbf{g}\mathrm{i}\mathrm{i}\mathrm{P}\mathrm{i}\mathrm{N}}^ {\mathrm{approx}}(\bm{\theta},\bm{\theta}_{k}),\]

where the first inequality is by Jensen's inequality and the convexity of the function \(\ell\), the second equality is by integrating the average \(\frac{1}{T}\sum_{t=1}^{T}\) into the expectation via \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\), and the third inequality holds because the argument inside the expectation is only depend of sampling step \(t-1\) and \(t\).

Figure 8: We show the figures generated by different models based on a prompt from Pick-A-Pic test set. The prompt used is “_a picture of the sea on which a boat sails in a storm and sways in the sea_”. The models are SD-1.5, SFT, Diffusion-DPO (reproduced), SPIN-Diffusion-Iter1, SPIN-Diffusion-Iter2, and SPIN-Diffusion-Iter3, displayed from left to right. Each row shows the results for a different random seed. SPIN-Diffusion demonstrates a notable improvement in image quality

### Objective Function of SPIN-Diffusion

We look deep into the term \(\left\|\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t) \right\|_{2}^{2}\) and \(\left\|\mathbf{x}_{t-1}^{\prime}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t}^{\prime}, \mathbf{c},t)\right\|_{2}^{2}\) of (4.8) and (4.9) in this section.

**When \(\mathbf{x}_{0:T}\) Follows Forward Process.** We have that \(\mathbf{x}_{0:T}\sim p_{\mathrm{data}}(\cdot|\mathbf{c})\) and by (C.1) and (C.2) we have that

\[\mathbf{x}_{t-1} =\sqrt{\alpha_{t-1}}\mathbf{x}_{0}+\sqrt{1-\alpha_{t-1}-\sigma_{t }^{2}}\cdot\frac{\mathbf{x}_{t}-\sqrt{\alpha_{t}}\mathbf{x}_{0}}{\sqrt{1- \alpha_{t}}}+\sigma_{t}\widehat{\bm{\epsilon}}_{t}\] \[\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t) =\sqrt{\alpha_{t-1}}\bigg{(}\frac{\mathbf{x}_{t}-\sqrt{1-\alpha _{t}}\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)}{\sqrt{\alpha_ {t}}}\bigg{)}+\sqrt{1-\alpha_{t-1}-\sigma_{t}^{2}}\cdot\bm{\epsilon}_{\bm{ \theta}}(\mathbf{x}_{t},\mathbf{c},t),\]

where \(\widehat{\bm{\epsilon}}_{t}\sim\mathcal{N}(0,\mathbf{I})\). Therefore, \(\left\|\mathbf{x}_{t-1}-\bm{\mu}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t) \right\|_{2}^{2}\) can be simplified to

\[h_{t}^{2}\bigg{\|}\frac{\mathbf{x}_{t}-\sqrt{\alpha_{t}}\mathbf{x}_{0}}{\sqrt {1-\alpha_{t}}}-\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)+( \sigma_{t}/h_{t})\cdot\widehat{\bm{\epsilon}}_{t}\bigg{\|}_{2}^{2},\] (C.3)

where \(h_{t}=\left[\sqrt{1-\alpha_{t-1}-\sigma_{t}^{2}}-\sqrt{\alpha_{t-1}/\alpha_{ t}}\sqrt{1-\alpha_{t-1}}\right]\) and \(\frac{\mathbf{x}_{t}-\sqrt{\alpha_{t}}\mathbf{x}_{0}}{\sqrt{1-\alpha_{t}}} \sim\mathcal{N}(0,\mathbf{I})\) following a Gaussian distribution. When \(\sigma_{t}\to 0\), (C.3) becomes \(h_{t}^{2}\big{\|}\bm{\epsilon}_{t}-\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}\) with \(h_{t}=\left[\sqrt{1-\alpha_{t-1}}-\sqrt{\alpha_{t-1}/\alpha_{t}}\sqrt{1- \alpha_{t-1}}\right]\) and \(\bm{\epsilon}_{t}:=\frac{\mathbf{x}_{t}-\sqrt{\alpha_{t}}\mathbf{x}_{0}}{\sqrt {1-\alpha_{t}}}\sim\mathcal{N}(0,\mathbf{I})\).

**When \(\mathbf{x}_{0:T}^{\prime}\) Follows the Backward Process.** We have that \(\mathbf{x}_{0:T}^{\prime}\sim p_{\bm{\theta}_{k}}(\cdot|\mathbf{c})\) and

\[\mathbf{x}_{t-1}^{\prime} =\bm{\mu}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t )+\sigma_{t}\widehat{\bm{\epsilon}}_{t}^{\prime}\] \[=\sqrt{\alpha_{t-1}}\bigg{(}\frac{\mathbf{x}_{t}^{\prime}-\sqrt{1 -\alpha_{t}}\bm{\epsilon}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{\prime},\mathbf{c },t)}{\sqrt{\alpha_{t}}}\bigg{)}+\sqrt{1-\alpha_{t-1}-\sigma_{t}^{2}}\cdot\bm{ \epsilon}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)+\sigma_{t} \widehat{\bm{\epsilon}}_{t}^{\prime}\]

Figure 9: We show the figures generated by different models based on a prompt from Pick-A-Pic test set. The prompt used is “_A cute hedgehog holding flowers_”. The models are SD-1.5, SFT, Diffusion-DPO (reproduced), SPIN-Diffusion-Iter1, SPIN-Diffusion-Iter2, and SPIN-Diffusion-Iter3, displayed from left to right. Each row shows the results for a different random seed. SPIN-Diffusion demonstrates a notable improvement in image quality\[\boldsymbol{\mu}_{\boldsymbol{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)= \sqrt{\alpha_{t-1}}\bigg{(}\frac{\mathbf{x}_{t}^{\prime}-\sqrt{1-\alpha_{t}} \boldsymbol{\epsilon}_{\boldsymbol{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c}, t)}{\sqrt{\alpha_{t}}}\bigg{)}+\sqrt{1-\alpha_{t-1}-\sigma_{t}^{2}}\cdot\boldsymbol{ \epsilon}_{\boldsymbol{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t),\]

where \(\boldsymbol{\epsilon}_{t}^{\prime}\sim\mathcal{N}(0,\mathbf{I})\). Therefore, \(\left\|\mathbf{x}_{t-1}^{\prime}-\boldsymbol{\mu}_{\boldsymbol{\theta}}( \mathbf{x}_{t}^{\prime},\mathbf{c},t)\right\|_{2}^{2}\) can be simplified to

\[h_{t}^{2}\big{\|}\boldsymbol{\epsilon}_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t }^{\prime},\mathbf{c},t)-\boldsymbol{\epsilon}_{\boldsymbol{\theta}}(\mathbf{ x}_{t},\mathbf{c},t)+(\sigma_{t}/h_{t})\cdot\widehat{\boldsymbol{\epsilon}}_{t}^{ \prime}\big{\|}_{2}^{2},\] (C.4)

where \(h_{t}=\big{[}\sqrt{1-\alpha_{t-1}-\sigma_{t}^{2}}-\sqrt{\alpha_{t-1}/\alpha_{ t}}\sqrt{1-\alpha_{t-1}}\big{]}\). When \(\sigma_{t}\to 0\), (C.4) becomes \(h_{t}^{2}\big{\|}\boldsymbol{\epsilon}_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{ t}^{\prime},\mathbf{c},t)-\boldsymbol{\epsilon}_{\boldsymbol{\theta}}(\mathbf{ x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}\) with \(h_{t}=\big{[}\sqrt{1-\alpha_{t-1}}-\sqrt{\alpha_{t-1}/\alpha_{t}}\sqrt{1- \alpha_{t-1}}\big{]}\).

Simple Decoupled SPIN-Diffusion Objective Function.Substituting (C.3) and (C.4) into (4.9) and applying \(\sigma_{t}\to 0\) yields,

\[L_{\text{SPIN}}^{\text{approx}}(\boldsymbol{\theta},\boldsymbol{\theta}_{k}) =\mathbb{E}\bigg{[}\ell\bigg{(}-\beta_{t}h_{t}^{2}\Big{[}\big{\|} \boldsymbol{\epsilon}_{t}-\boldsymbol{\epsilon}_{\boldsymbol{\theta}}( \mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}-\big{\|}\boldsymbol{\epsilon}_{t} -\boldsymbol{\epsilon}_{\boldsymbol{\theta}_{k}}(\mathbf{x}_{t},\mathbf{c},t) \big{\|}_{2}^{2}\]

Figure 10: We show the figures generated by different models based on prompts from PartiPrompts. The prompts are “_a old-time car with a large front gville_”, “_a full moon rising above a mountain at night_”, “_a young badger delicately sniffing a yellow rose, richly textured oil painting_”, “_a cartoon of a man standing under a tree_” and “_a prop plane flying low over the Great Wall_”. The models are: SD-1.5, SFT, Diffusion-DPO, Diffusion-DPO (reproduced), SPIN-Diffusion-Iter2 from left to right, all utilizing the same random seed for fair comparison

\[-\big{\|}\bm{\epsilon_{\theta_{k}}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)-\bm{ \epsilon_{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}\big{]} \bigg{)}\bigg{]},\] (C.5)

where \(h_{t}=\sqrt{1-\alpha_{t-1}}-\sqrt{\alpha_{t-1}/\alpha_{t}}\sqrt{1-\alpha_{t-1}}\), \(\mathbf{x}_{t}=\alpha_{t}\mathbf{x}_{0}+(1-\alpha_{t})\bm{\epsilon}_{t}\), and the expectation is computed over the distribution,\(\mathbf{c}\sim q(\mathbf{c}),\mathbf{x}_{0}\sim p_{\mathrm{data}}(\mathbf{x}_{0}| \mathbf{c}),\mathbf{x}_{t}^{\prime}\sim p_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{ \prime}|\mathbf{c})\), \(\bm{\epsilon}_{t}\sim\mathcal{N}(0,\mathbf{I})\) and \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\). (C.5) still need the intermediate steps \(\mathbf{x}_{t}^{\prime}\), as discussed below (4.9) in Section 4, we can approximate the backward process with the forward process and obtain

\[L_{\mathrm{SPIN}}^{\mathrm{approx}}(\bm{\theta},\bm{\theta}_{k}) =\mathbb{E}\bigg{[}\ell\bigg{(}-\beta_{t}h_{t}^{2}\Big{[}\big{\|} \bm{\epsilon}_{t}-\bm{\epsilon_{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_ {2}^{2}-\big{\|}\bm{\epsilon}_{t}-\bm{\epsilon_{\theta}}(\mathbf{x}_{t}, \mathbf{c},t)\big{\|}_{2}^{2}-\big{\|}\bm{\epsilon}_{t}^{\prime}-\bm{\epsilon _{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}\] \[\qquad\qquad+\big{\|}\bm{\epsilon}_{t}^{\prime}-\bm{\epsilon_{ \theta_{k}}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}\Big{]} \bigg{)}\bigg{]},\]

where \(h_{t}=\sqrt{1-\alpha_{t-1}}-\sqrt{\alpha_{t-1}/\alpha_{t}}\sqrt{1-\alpha_{t-1}}\), \(\mathbf{x}_{t}=\alpha_{t}\mathbf{x}_{0}+(1-\alpha_{t})\bm{\epsilon}_{t}\), \(\mathbf{x}_{t}^{\prime}=\alpha_{t}\mathbf{x}_{0}^{\prime}+(1-\alpha_{t})\bm {\epsilon}_{t}^{\prime}\), and the expectation is computed over the distribution,\(\mathbf{c}\sim q(\mathbf{c}),\mathbf{x}_{0}\sim p_{\mathrm{data}}(\mathbf{x}_{0}| \mathbf{c}),\mathbf{x}_{0}^{\prime}\sim p_{\bm{\theta}_{k}}(\mathbf{x}_{0}^{ \prime}|\mathbf{c})\), \(\bm{\epsilon}_{t}\sim\mathcal{N}(0,\mathbf{I})\), \(\bm{\epsilon}_{t}^{\prime}\sim\mathcal{N}(0,\mathbf{I})\) and \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\).

Figure 11: We show the figures generated by different models based on prompts from PartiPrompts. The prompts are “_A cartoon house with red roof_”, “_a cartoon of an angry shark_”, “_a cartoon of a bear birthday party_”, “_a cartoon of a house on a mountain_” and “_a cartoon of a boy playing with a tiger_”. The models are: SD-1.5, SFT, Diffusion-DPO, Diffusion-DPO (reproduced), SPIN-Diffusion-Iter2 from left to right, all utilizing the same random seed for fair comparison

## Appendix D Proof of Theorems in Section 5

Proof of Theorem 5.2.: Plugging (C.3) and (C.4) into (4.9) yields the following loss parameterized with \(\bm{\epsilon}_{\bm{\theta}}\),

\[L^{\,\mathrm{approx}}_{\text{SPIN}}(\bm{\theta},\bm{\theta}_{k})= \mathbb{E}\bigg{[}\ell\bigg{(}-\beta_{t}h_{t}^{2}\Big{[}\big{\|} \bm{\epsilon}-\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t},c,t)+(\sigma_{t}/h_{ t})\cdot\bm{\epsilon}_{t}\big{\|}_{2}^{2}-\big{\|}\bm{\epsilon}-\bm{\epsilon}_{ \bm{\theta}_{k}}(\mathbf{x}_{t},c,t)+(\sigma_{t}/h_{t})\cdot\bm{\epsilon}_{t} \big{\|}_{2}^{2}\] \[\qquad+\big{\|}(\sigma_{t}/h_{t})\cdot\bm{\epsilon}_{t}^{\prime} \big{\|}_{2}^{2}-\big{\|}\bm{\epsilon}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{ \prime},c,t)-\bm{\epsilon}_{\bm{\theta}}(\mathbf{x}_{t}^{\prime},c,t)+(\sigma _{t}/h_{t})\cdot\bm{\epsilon}_{t}^{\prime}\big{\|}_{2}^{2}\Big{]}\bigg{)} \bigg{]},\] (D.1)

where \(\bm{\epsilon}_{t},\bm{\epsilon}_{t}^{\prime}\sim\mathcal{N}(0,\mathbf{I})\). When \(\sigma_{t}\to 0\), (D.1) can be simplified to (C.5). In this proof, we will stick to the formula (D.1) to provide the proof for all \(\sigma_{t}\geq 0\).

Since \(\bm{\theta}_{k}\) is not the global optimum of \(L_{\mathrm{DM}}\) by condition, there exists \(\bm{\theta}^{*}\) such that \(L_{\mathrm{DM}}(\bm{\theta}^{*})\leq L_{\mathrm{DM}}(\bm{\theta}_{k})\), which gives that

\[\mathbb{E}\Big{[}\gamma_{t}\big{\|}\bm{\epsilon}_{\bm{\theta}^{*}}(\mathbf{x} _{t},t,c)-\bm{\epsilon}\big{\|}_{2}^{2}\Big{]}\leq\mathbb{E}\Big{[}\gamma_{t} \big{\|}\bm{\epsilon}_{\bm{\theta}_{k}}(\mathbf{x}_{t},t,c)-\bm{\epsilon} \big{\|}_{2}^{2}\Big{]},\] (D.2)

where the expectation is computed over the distribution \(c\sim q(\cdot),\mathbf{x}_{0}\sim q_{\mathrm{data}}(\cdot|c),\bm{\epsilon}\sim \mathcal{N}(0,\mathbf{I})\), \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\). Define \(g(s)=L^{\mathrm{approx}}_{\text{SPIN}}(\bm{\theta}^{*},\bm{\theta}_{k})\) with \(\beta_{t}=s\gamma_{t}/h_{t}^{2}\) as follows,

\[g(s) =\mathbb{E}\bigg{[}\ell\bigg{(}-\beta_{t}h_{t}^{2}\Big{[}\big{\|} \bm{\epsilon}-\bm{\epsilon}_{\bm{\theta}^{*}}(\mathbf{x}_{t},c,t)+(\sigma_{t} /h_{t})\cdot\bm{\epsilon}_{t}\big{\|}_{2}^{2}-\big{\|}\bm{\epsilon}-\bm{ \epsilon}_{\bm{\theta}_{k}}(\mathbf{x}_{t},c,t)+(\sigma_{t}/h_{t})\cdot\bm{ \epsilon}_{t}\big{\|}_{2}^{2}\] \[\qquad+\big{\|}(\sigma_{t}/h_{t})\cdot\bm{\epsilon}_{t}^{\prime} \big{\|}_{2}^{2}-\big{\|}\bm{\epsilon}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{ \prime},c,t)-\bm{\epsilon}_{\bm{\theta}^{*}}(\mathbf{x}_{t}^{\prime},c,t)+( \sigma_{t}/h_{t})\cdot\bm{\epsilon}_{t}^{\prime}\big{\|}_{2}^{2}\Big{]}\bigg{)} \bigg{]}\] \[=\mathbb{E}\bigg{[}\ell\bigg{(}-s\gamma_{t}\Big{[}\big{\|}\bm{ \epsilon}-\bm{\epsilon}_{\bm{\theta}^{*}}(\mathbf{x}_{t},c,t)+(\sigma_{t}/h_{ t})\cdot\bm{\epsilon}_{t}\big{\|}_{2}^{2}-\big{\|}\bm{\epsilon}-\bm{\epsilon}_{\bm{ \theta}_{k}}(\mathbf{x}_{t},c,t)+(\sigma_{t}/h_{t})\cdot\bm{\epsilon}_{t} \big{\|}_{2}^{2}\] \[\qquad+\big{\|}(\sigma_{t}/h_{t})\cdot\bm{\epsilon}_{t}^{\prime} \big{\|}_{2}^{2}-\big{\|}\bm{\epsilon}_{\bm{\theta}_{k}}(\mathbf{x}_{t}^{ \prime},c,t)-\bm{\epsilon}_{\bm{\theta}^{*}}(\mathbf{x}_{t}^{\prime},c,t)+( \sigma_{t}/h_{t})\cdot\bm{\epsilon}_{t}^{\prime}\big{\|}_{2}^{2}\Big{]}\bigg{)} \bigg{]}.\]

Figure 12: Image galaxy generated by SPIN-Diffusion, a self-play fine-tuning algorithm for diffusion models. The results are fine-tuned from Stable Diffusion v1.5 on the winner images of the Pick-a-Pic dataset. The prompts used for generating the above images are chosen from the Pick-a-Pic test set. The generated images demonstrate superior performance in terms of overall visual attractiveness and coherence with the prompts. SPIN-Diffusion is featured by its independence from paired human preference data, offering a useful tool for fine-tuning on custom datasets with only single image per text prompt provided.

Then we have that \(g(0)=0\) and

\[\frac{dg}{ds}(0) =\mathbb{E}\bigg{[}-\ell^{\prime}(0)\gamma_{t}\bigg{(}\big{\|} \boldsymbol{\epsilon}-\boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t},c,t)+( \sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}\big{\|}_{2}^{2}-\big{\|} \boldsymbol{\epsilon}-\boldsymbol{\epsilon_{\theta_{k}}}(\mathbf{x}_{t},c,t)+ (\sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}\big{\|}_{2}^{2}\] \[\qquad+\big{\|}(\sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}^ {\prime}\big{\|}_{2}^{2}-\big{\|}\boldsymbol{\epsilon_{\theta_{k}}}(\mathbf{x}_ {t}^{\prime},c,t)-\boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t}^{\prime},c,t)+(\sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}^{\prime}\big{\|}_{2}^{2} \bigg{)}\bigg{]}\] \[=-\ell^{\prime}(0)\bigg{(}\mathbb{E}\gamma_{t}\big{\|} \boldsymbol{\epsilon}-\boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t},c,t)+ (\sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}\big{\|}_{2}^{2}-\mathbb{E} \gamma_{t}\big{\|}\boldsymbol{\epsilon}-\boldsymbol{\epsilon_{\theta_{k}}}( \mathbf{x}_{t},c,t)+(\sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}\big{\|}_ {2}^{2}\] \[\qquad+\mathbb{E}\gamma_{t}\big{\|}(\sigma_{t}/h_{t})\cdot \boldsymbol{\epsilon}_{t}^{\prime}\big{\|}_{2}^{2}-\mathbb{E}\gamma_{t} \big{\|}\boldsymbol{\epsilon_{\theta_{k}}}(\mathbf{x}_{t}^{\prime},c,t)- \boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t}^{\prime},c,t)+(\sigma_{t}/h_ {t})\cdot\boldsymbol{\epsilon}_{t}^{\prime}\big{\|}_{2}^{2}\bigg{)},\] (D.3)

where \(\mathbf{x}_{t}=\sqrt{\alpha_{t}}\mathbf{x}_{0}+\sqrt{1-\alpha_{t}}\boldsymbol {\epsilon}\) and the expectation is computed over the distribution \(c\sim q(\cdot),\mathbf{x}_{0}\sim q_{\mathrm{data}}(\cdot|c),\boldsymbol{ \epsilon}\sim\mathcal{N}(0,\mathbf{I})\), \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\) and \(\boldsymbol{\epsilon}_{t},\boldsymbol{\epsilon}_{t}^{\prime}\sim\mathcal{N}( 0,\mathbf{I})\). Since \(\boldsymbol{\epsilon}_{t},\boldsymbol{\epsilon}_{t}^{\prime}\) follows standard Multivariate normal distribution and independent with \(\mathbf{x}_{t},\mathbf{x}_{t}^{\prime},\boldsymbol{\epsilon},\mathbf{x}_{0}\), we can simplify the the terms in (D.3) as follows,

\[\mathbb{E}\gamma_{t}\big{\|}\boldsymbol{\epsilon}-\boldsymbol{ \epsilon_{\theta^{*}}}(\mathbf{x}_{t},c,t)+(\sigma_{t}/h_{t})\cdot \boldsymbol{\epsilon}_{t}\big{\|}_{2}^{2}\] (D.4) \[\mathbb{E}\gamma_{t}\big{\|}\boldsymbol{\epsilon}-\boldsymbol{ \epsilon_{\theta_{k}}}(\mathbf{x}_{t},c,t)+(\sigma_{t}/h_{t})\cdot \boldsymbol{\epsilon}_{t}\big{\|}_{2}^{2}\] \[=\mathbb{E}\gamma_{t}\big{\|}\boldsymbol{\epsilon}-\boldsymbol{ \epsilon_{\theta_{k}}}(\mathbf{x}_{t},c,t)\big{\|}_{2}^{2}+\mathbb{E}\gamma_{t }\big{\|}(\sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}\big{\|}_{2}^{2}\] (D.5) \[\mathbb{E}\gamma_{t}\big{\|}\boldsymbol{\epsilon_{\theta_{k}}}( \mathbf{x}_{t}^{\prime},c,t)-\boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t }^{\prime},c,t)+(\sigma_{t}/h_{t})\cdot\boldsymbol{\epsilon}_{t}^{\prime} \big{\|}_{2}^{2}\] \[=\mathbb{E}\gamma_{t}\big{\|}\boldsymbol{\epsilon_{\theta_{k}}}( \mathbf{x}_{t}^{\prime},c,t)-\boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t }^{\prime},c,t)\big{\|}_{2}^{2}+\mathbb{E}\gamma_{t}\big{\|}(\sigma_{t}/h_{t })\cdot\boldsymbol{\epsilon}_{t}^{\prime}\big{\|}_{2}^{2}\] (D.6)

where we apply the property of standard normal distribution that \(\mathbb{E}[\boldsymbol{\epsilon}_{t}]=\mathbb{E}[\boldsymbol{\epsilon}_{t}^{ \prime}]=\mathbf{0}\). Plugging (D.4), (D.5), (D.6) into (D.3) gives that

\[\frac{dg}{ds}(0) =-\ell^{\prime}(0)\bigg{(}\mathbb{E}\gamma_{t}\big{\|} \boldsymbol{\epsilon}-\boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t},c,t) \big{\|}_{2}^{2}-\mathbb{E}\gamma_{t}\big{\|}\boldsymbol{\epsilon}-\boldsymbol{ \epsilon_{\theta_{k}}}(\mathbf{x}_{t},c,t)\big{\|}_{2}^{2}\] \[\qquad-\mathbb{E}\gamma_{t}\big{\|}\boldsymbol{\epsilon_{\theta_{ k}}}(\mathbf{x}_{t}^{\prime},c,t)-\boldsymbol{\epsilon_{\theta^{*}}}(\mathbf{x}_{t}^{ \prime},c,t)\big{\|}_{2}^{2}\bigg{)}\] \[<0,\]

where the last inequality is by (D.2). Here \(\mathbf{x}_{t}=\sqrt{\alpha_{t}}\mathbf{x}_{0}+\sqrt{1-\alpha_{t}}\boldsymbol {\epsilon}\) and the expectation is computed over the distribution \(c\sim q(\cdot),\mathbf{x}_{0}\sim q_{\mathrm{data}}(\cdot|c),\boldsymbol{ \epsilon}\sim\mathcal{N}(0,\mathbf{I})\), \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\).

Therefore, there exist a \(\lambda_{0}\) such that for all \(0<\lambda<\lambda_{0}\), we have \(g(\lambda)<\ell(0)\). So for those \(\beta_{t}=s\gamma_{t}/h_{t}^{2}\) with \(0<\lambda<\lambda_{0}\), we have that

\[L^{\mathrm{approx}}_{\mathtt{SPII}}(\boldsymbol{\theta}^{*},\boldsymbol{\theta}_ {k})=g(\lambda)<g(0)=L_{\mathtt{SPII}}(\boldsymbol{\theta}_{k},\boldsymbol{ \theta}_{k}),\]

where the inequality holds due to the choice of \(\lambda\). Therefore, we conclude that \(\boldsymbol{\theta}_{k}\) is not the global optimum of (4.9).

Proof of Theorem 5.3.: By (4.9) we have that,

\[L^{\mathrm{approx}}_{\mathtt{SPII}}(\boldsymbol{\theta},\boldsymbol{ \theta}_{k}) =\mathbb{E}\bigg{[}\ell\bigg{(}-\beta_{t}\Big{[}\big{\|}\mathbf{x}_{t-1}- \boldsymbol{\mu_{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}-\big{\|} \mathbf{x}_{t-1}-\boldsymbol{\mu_{\theta_{k}}}(\mathbf{x}_{t},\mathbf{c},t) \big{\|}_{2}^{2}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}^{\prime}-\boldsymbol{\mu_{\theta}}( \mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}_{t-1}^{ \prime}-\boldsymbol{\mu_{\theta_{k}}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t) \big{\|}_{2}^{2}\bigg{]}\bigg{)}\bigg{]},\]

where the expectationis computed over the distribution \(\mathbf{c}\sim q(\mathbf{c})\), \((\mathbf{x}_{t-1},\mathbf{x}_{t})\sim\int p_{\mathrm{data}}(\mathbf{x}_{0}| \mathbf{c})q(\mathbf{x}_{t-1},\mathbf{x}_{t}|\mathbf{x}_{0})d\mathbf{x}_{0}\), \((\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime})\sim\int p_{\boldsymbol{ \theta}_{k}}(\mathbf{x}_{0}^{\prime}|\mathbf{c})q(\mathbf{x}_{t-1}^{\prime}, \mathbf{x}_{t}^{\prime}|\mathbf{x}_{0}^{\prime})d\mathbf{x}_{0}^{\prime}\), \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\). Since \(p_{\mathrm{data}}(\cdot|\mathbf{c})=p_{\boldsymbol{\theta}_{t}}(\cdot| \mathbf{c})\), we can conclude that \((\mathbf{x}_{t-1},\mathbf{x}_{t})\) and \((\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime})\) are independent and identically distributed random variable. Therefore, by symmetry property of \((\mathbf{x}_{t-1},\mathbf{x}_{t})\) and \((\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}

\[L^{\rm approx}_{\rm SPH}(\bm{\theta},\bm{\theta}_{k}) =\frac{1}{2}\mathbb{E}\bigg{[}\ell\bigg{(}-\beta_{t}\Big{[}\big{\|} \mathbf{x}_{t-1}-\bm{\mu_{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2} -\big{\|}\mathbf{x}_{t-1}-\bm{\mu_{\theta}}_{b}(\mathbf{x}_{t},\mathbf{c},t) \big{\|}_{2}^{2}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm{\mu_{\theta}}(\mathbf{ x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm{ \mu_{\theta}}_{b}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}\bigg{]}\bigg{)}\] \[\qquad+\ell\bigg{(}-\beta_{t}\Big{[}\big{\|}\mathbf{x}_{t-1}^{ \prime}-\bm{\mu_{\theta}}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2 }-\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm{\mu_{\theta}}_{b}(\mathbf{x}_{t}^{ \prime},\mathbf{c},t)\big{\|}_{2}^{2}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}-\bm{\mu_{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}_{t-1}-\bm{\mu_{\theta}}_{b} (\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}\Big{]}\bigg{)}\bigg{)}\bigg{]}\] \[\geq\mathbb{E}\bigg{[}\ell\bigg{(}-\frac{\beta_{t}}{2}\Big{[} \big{\|}\mathbf{x}_{t-1}-\bm{\mu_{\theta}}(\mathbf{x}_{t},\mathbf{c},t) \big{\|}_{2}^{2}-\big{\|}\mathbf{x}_{t-1}-\bm{\mu_{\theta}}_{b}(\mathbf{x}_{t },\mathbf{c},t)\big{\|}_{2}^{2}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}^{\prime}-\bm{\mu_{\theta}}( \mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}_{t-1 }^{\prime}-\bm{\mu_{\theta}}_{b}(\mathbf{x}_{t}^{\prime},\mathbf{c},t)\big{\|} _{2}^{2}\bigg{]}\bigg{.}\] \[\qquad-\big{\|}\mathbf{x}_{t-1}-\bm{\mu_{\theta}}(\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}+\big{\|}\mathbf{x}_{t-1}-\bm{\mu_{\theta}}_{b} (\mathbf{x}_{t},\mathbf{c},t)\big{\|}_{2}^{2}\bigg{]}\bigg{)}\bigg{)}\bigg{]}\] \[=\ell(0),\]

where the inequality is due to Jensen's inequality (recalling that \(\ell\) is convex in Assumption 5.1), and the expectation is computed over the distribution \(\mathbf{c}\sim q(\mathbf{c})\), \((\mathbf{x}_{t-1},\mathbf{x}_{t})\sim\int p_{\rm data}(\mathbf{x}_{0}|\mathbf{c })q(\mathbf{x}_{t-1},\mathbf{x}_{t}|\mathbf{x}_{0})d\mathbf{x}_{0}\), \((\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{\prime})\sim\int p_{\bm{\theta}_{ k}}(\mathbf{x}_{0}^{\prime}|\mathbf{c})q(\mathbf{x}_{t-1}^{\prime},\mathbf{x}_{t}^{ \prime}|\mathbf{x}_{0}^{\prime})d\mathbf{x}_{0}^{\prime}\), \(t\sim\mathrm{Uniform}\{1,\ldots,T\}\). Therefore, we have that

\[L^{\rm approx}_{\rm SPH}(\bm{\theta},\bm{\theta}_{k})\geq\ell(0)=L^{\rm approx}_{ \rm SPH}(\bm{\theta}_{k},\bm{\theta}_{k}),\]

which means that \(\bm{\theta}_{k}\) is the global optimum of (4.9). As a consequence, \(\bm{\theta}_{k+1}=\bm{\theta}_{k}\).

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: We validate our claim through theoretical analysis and experimental results. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: We discuss the limitations after our conclusion. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. 3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes] Justification: The assumptions and proof are fully presented.

Guidelines:

* The answer NA means that the paper does not include theoretical results.
* All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced.
* All assumptions should be clearly stated or referenced in the statement of any theorems.
* The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.
* Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.
* Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: We provide a detailed descriptions on model, data, pipeline and parameters. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [No]Justification: We are not able to reorganize the code at the time of submission. Guidelines:

* The answer NA means that paper does not include experiments requiring code.
* Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).
* The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.
* The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.
* At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).
* Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: We provide the training methods in detail. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [No] Justification: Error bars are not involved in our paper. However, we provide the qualitative results of different random seed. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) * The assumptions made should be given (e.g., Normally distributed errors). * It should be clear whether the error bar is the standard deviation or the standard error of the mean.

* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: We describe the computing resource with experimental settings. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: The research conducted in this paper conform with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: We place our broader impact section at the start of the Appendix. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: This paper proposes fine-tuning methodology that is generally applicable to any pretrained language model and preference model, and poses no particular such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licensees for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: We cite the original papers that produced the dataset and base models. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset. * For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.

* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: The paper does not release new assets Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.