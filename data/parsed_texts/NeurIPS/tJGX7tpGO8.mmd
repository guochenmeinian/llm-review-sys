# What Matters in Graph Class Incremental Learning?

An Information Preservation Perspective

 Jialu Li\({}^{1,2,3,}\)

jialuli@tju.edu.cn

&Yu Wang\({}^{1,2,3,}\)

wang.yu@tju.edu.cn

&Pengfei Zhu\({}^{1,2,3,}\)

zhupengfei@tju.edu.cn

&Wanyu Lin\({}^{4}\)

wan-yu.lin@polyu.edu.hk

&Qinghua Hu\({}^{1,2,3}\)

huqinghua@tju.edu.cn

Equal contribution.Corresponding author.

\({}^{1}\)College of Intelligence and Computing, Tianjin University, Tianjin, China

\({}^{2}\)Engineering Research Center of City Intelligence and Digital Governance,

Ministry of Education of the People's Republic of China, Tianjin, China

\({}^{3}\)Haile Lab of ITAI, Tianjin, China

\({}^{4}\)Department of Computing, The Hong Kong Polytechnic University, Hong Kong, China

###### Abstract

Graph class incremental learning (GCIL) requires the model to classify emerging nodes of new classes while remembering old classes. Existing methods are designed to preserve effective information of old models or graph data to alleviate forgetting, but there is no clear theoretical understanding of what matters in information preservation. In this paper, we consider that present practice suffers from high semantic and structural shifts assessed by two devised shift metrics. We provide insights into information preservation in GCIL and find that maintaining graph information can preserve information of old models in theory to calibrate node semantic and graph structure shifts. We correspond graph information into low-frequency local-global information and high-frequency information in spatial domain. Based on the analysis, we propose a framework, Graph Spatial Information Preservation (GSIP). Specifically, for low-frequency information preservation, the old node representations obtained by inputting replayed nodes into the old model are aligned with the outputs of the node and its neighbors in the new model, and then old and new outputs are globally matched after pooling. For high-frequency information preservation, the new node representations are encouraged to imitate the near-neighbor pair similarity of old node representations. GSIP achieves a 10% increase in terms of the forgetting metric compared to prior methods on large-scale datasets. Our framework can also seamlessly integrate existing replay designs. The code is available through https://github.com/Jillian555/GSIP.

## 1 Introduction

In real-world applications, graph data is continuously generated. For instance, in citation networks, new types of papers and their citations may constantly emerge, an ideal literature classifier needs to continuously distinguish literature in emerging research areas [1, 2]. Therefore, it is critical for a graph model to incrementally integrate new classes on an extended graph, which is referred to as Graph class incremental learning (GCIL). However, this poses a major challenge known as catastrophic forgetting, where the model needs to preserve previous information while continuously acquiring new information [3, 4].

Many approaches attempt to preserve information from previous models or graph data to prevent catastrophic forgetting in GCIL, which can be divided into four groups. The parameter isolation methods entirely or partially preserve parameters of different tasks to protect model performance, such as dynamically incrementing feature extractors and prototypes [2]. Regularization methods, on the one hand, preserve important parameters, such as assessing parameter importance by considering loss and topology [1], and maintaining orthogonality with parameters from previous tasks [5], on the other hand, preserve the absolute position of nodes in feature space or output space, such as aligning the outputs of samples on old and new models [6]. The replay methods preserve a few nodes or subgraphs to retrain the model to prevent forgetting, such as saving representative nodes [7], selecting subgraphs according to node degree [8], and compressing training graphs [9]. The hybrid methods combine different learning paradigms (_i.e._ the combination of replay and regularization methods), such as feature distillation after identifying critical nodes [10] and minimizing distribution disparity of selected nodes across new and prior models [11]. These hybrid methods have demonstrated considerable potential and achieved state-of-the-art results. Despite their effectiveness, the information preservation mechanism by existing methods remains unclear, making it challenging to develop effective solutions for GCIL. This motivates us to explore a fresh perspective: _What matters in information preservation when learning from the old model to the new model for GCIL?_

We investigate the unique characteristics of catastrophic forgetting on graphs and find **node semantic and graph structure shifts** in GCIL. The visualization of node embeddings for new model of baseline (ERGNN [7]) and our method on old classes of CoraFull dataset are exhibited in Figure 1. The structure learned by old model is selected as target instead of original topology due to noisy real structure [12]. Five nodes belonging to two old classes are randomly selected and connected (darker edges indicate more similar features). We detect distortion in the features of baseline (Figure 1(a)) relative to those of the target (Figure 1(c)), especially nodes located within the black dotted box. The two categories can be well separated in the feature distribution of target but not in the baseline model and lead to false predictions (grey nodes in Figure 1(a)). The topological correlation is also significantly changed, node #2 is in proximity to node #1 but is distant from node #3. Surprisingly, within the representation space of baseline, node #2 appears to be moving closer to node #3 while simultaneously becoming more distant from node #1, which exacerbates catastrophic forgetting. Our method (Figure 1(b)) designs graph information preservation modules to mitigate shifts successfully.

In this paper, we inspect GCIL from the perspective of information preservation and theoretically find a key factor in reducing catastrophic forgetting risk with hybrid methods is preserving old graph information. We correspond graph information into low-frequency local-global information and high-frequency information in spatial domain. Subsequently, a Graph Spatial Information Preservation (GSIP) framework is proposed for calibrating semantic and structural shifts. In detail, the old and new representations of nodes are obtained after replay graph data is input to old and new models. The old representations of a node are locally aligned with new representations of a node and its neighbors. Further, old and new representations are globally matched after mean pooling. Finally, new representations of nodes are encouraged to mimic neighbor distance similarities that appear in old representations.

The proposed GSIP can outperform existing replay designs by up to 10% in terms of the forgetting metric on large-scale datasets. It is easy to implement and can be easily adapted to information-preserving approaches to boost their performance. Experiments show that GSIP greatly improves

Figure 1: Visualizations of semantic shift and structure shift.

over current information-preserving methods under different experimental settings and calibrates node semantic and graph structure shifts. Our main contributions can be summarized as follows:

* We provide theoretical insights into GCIL and find that preserving old graph information corresponding to low-frequency local-global and high-frequency information in spatial domain can calibrate semantic and structural shifts and reduce catastrophic forgetting risk.
* We propose a simple yet effective method that utilizes node representations on old and new models to preserve node features, graph representations, and neighbor distances.
* By combining with graph replay-based methods, our framework consistently achieves performance improvements across several benchmark datasets and shows the effectiveness of all the proposed components.

## 2 Related Work

### Incremental Learning

Incremental learning requires the model to retain the capability of predicting old tasks while acquiring information about new ones [3; 13; 14; 15; 16; 17; 18]. Class incremental learning is not assigned a task ID and has greater training difficulty than task incremental learning [19; 20]. Existing methods can be categorized into three groups. Parameter isolation methods dynamically adapt the model without restricting its structure and capacity, providing distinct parameters for each task [21; 22; 23; 24; 25]. Replay-based methods replay a subset of examples stored in previous tasks or generated using generative models to mitigate forgetting [26; 27; 28; 29]. Regularization-based methods introduce an additional regularization term in the loss function to prevent modifications to crucial parameters related to previous tasks [6; 30; 31; 32; 33].

Traditional incremental learning methods for images or text lack topology learning, making it challenging to achieve effective topology mining and information preservation. By contrast, we analyze the basics of preventing catastrophic forgetting in GCIL from information preservation and solve them in the spatial domain.

### Graph Incremental Learning

Graph incremental learning focuses on handling streaming graph data, and numerous methods have been developed explicitly for graph data [34; 35; 36; 37; 38; 39; 40; 41]. Topology-aware Weight Preserving (TWP) preserves key parameters and topology of previous tasks through regularization terms [1]. Experience Replay Graph Neural Network (ERGNN) framework incorporates memory replay by storing representative nodes [7]. Sparsified Subgraph Memory (SSM) stores sampled sparse subgraphs in a memory repository to preserve structural information [8]. Su _et al._ introduced regularization terms to mitigate catastrophic forgetting from structural drift [11]. Zhang _et al._ redesigned the architecture into a three-layer prototype that adaptively selects different parameter combinations for different tasks [2]. The Condense and Train (CaT) [9] framework compresses the graph into a small but informative synthetic replay graph. Furthermore, two graph incremental learning benchmarks have recently been developed [42; 43].

In comparison, GSIP combines graph information preservation to avoid catastrophic forgetting through low-frequency local-global and high-frequency information preservation.

## 3 Problem Analysis

Graph Class Incremental Learning (GCIL).GCIL addresses the problem of supervised node classification within the context of an expanding graph. Specifically, each \(G^{t}\) denotes a newly emerging subgraph within the overarching graph. A \(G^{t}\) consists of a node set \(V^{t}\) and an edge set \(\mathcal{E}^{t}\) with its connectivity captured by adjacency matrix \(A^{t}\in\mathbb{R}^{n\times n}\), where \(n\) is the number of nodes. Each vertex \(v\) is associated with node features \(X_{v}\) and a target label \(Y_{v}\in\{0,1\}^{c}\), where \(c\) represents the total number of classes. At time \(t\), the GCIL problem denoted as \(\mathbb{P}_{GCIL}\) is provided with a subgraph \(G^{t}=\{X^{t},A^{t}\}\). The \(\mathbb{P}_{GCIL}\) problem is formally defined with the following signature:

\[\mathbb{P}_{GCIL}^{t}:\left\langle f^{t-1},\left(G^{t},Y^{t}\right),\mathcal{ M}^{t-1}\right\rangle\rightarrow\left\langle f^{t},\mathcal{M}^{t}\right\rangle,\] (1)where \(f\) is graph neural networks and \(\mathcal{M}\) signifies an external memory capable of storing a subset of training nodes or other useful graph data.

In the scenario of graph incremental learning, disparate tasks are mapped into distinct partitions of the graph. Once the learning for a specific task is completed, access to the corresponding data is restricted. Our objective is to learn a shared graph neural network model that distinguishes all classes from existing ones. Formally, we aim to minimize the loss caused by previously seen nodes at time step \(\tau\) in \(\mathbb{P}_{\mathit{GCIL}}\), the statistical risk of catastrophic forgetting is defined as:

\[\min_{\theta^{\tau}}\sum_{t=1}^{\tau}\mathbb{E}_{(G^{t},Y^{t})}\left[\mathcal{ H}\left(Y^{t},\sigma\left(f\left(G^{t};\theta^{\tau}\right)\right)\right) \right],\] (2)

where \(\theta\) indicates parameters of the model, \(\mathcal{H}\) represents cross-entropy loss, and \(\sigma\) denotes softmax activation function.

Replay-Based GCIL.Replay-based methods store replayed nodes or subgraphs in memory \(\mathcal{M}\) by sampling. Catastrophic forgetting is solved by maintaining the historical distribution. These methods train a new model by minimizing loss of old task nodes on new model concerning the true labels. Given node representations on new model \(Z^{new}(Z=f\left(\mathcal{M};\theta\right))\), the replay loss is calculated as:

\[\mathcal{L}_{replay}=\frac{1}{\left|\mathcal{M}\right|}\sum_{i\in\mathcal{M}} \mathcal{H}\left(Y_{i},\sigma\left(Z_{i}^{new}\right)\right).\] (3)

Semantic Shift and Structural Shift.Due to memory and privacy limitations, a large amount of old graph data cannot be accessed in graph incremental learning, which leads to material information of old models being gradually forgotten and seriously damages new model performance on old classes. We design two novel shift metrics measuring semantic and structural forgetting degrees when trained on novel classes to show that model divergence manifests in node-level semantics and graph-level structure aspects. On CoraFull dataset, we conduct shift tests using model representations \(Z^{old}\) and \(Z^{new}\) generated by classical replay method ERGNN [7]. Specifically, central kernel alignment [44] scheme is leveraged to compute Semantic Shift Score (\(SSS_{X}\)):

\[SSS_{X}(Z^{old},Z^{new})=1-\frac{HS(Z^{old},Z^{new})}{\sqrt{HS(Z^{old},Z^{old} )HS(Z^{new},Z^{new})}},HS(Z^{old},Z^{new})=\frac{tr(Z^{old}CZ^{new}C)}{(n-1)^{2 }},\] (4)

where \(C\) is centering matrix \(C_{n}=I_{n}-1/n\mathbf{11}^{\top}\). In particular, Structural Shift Score (\(SSS_{A}\)) is derived by performing structure \(\widehat{A}\) inference using feature cosine similarity, then computing differences between graph representations obtained by Anonymous Walk Embedding (AWE) [45]:

\[SSS_{A}(Z^{old},Z^{new})=1-COS(AWE(\widehat{A}^{old}),AWE(\widehat{A}^{new})),\widehat{A}_{ij}=\mathbbm{1}\left[COS(Z_{i},Z_{j})>\delta\right],\] (5)

where cosine similarity function \(COS(a,b)=a^{\top}b/(\left\|a\right\|\left\|b\right\|)\) is used to calculate feature similarity degree, and \(\delta\) is similarity threshold. Each task is trained for 200 epochs, and shift scores range from 0 (no shift) to 1 (completely different). We observe that \(SSS_{X}\) and \(SSS_{A}\) in Figure 2 gradually rise with the increase of epochs. Serious shifts are found in both node semantic and graph structure between old and new models as new classes are trained.

## 4 Graph Spatial Information Preservation

### Graph Information Preservation

Model information preservation for GCIL can be defined as the mutual information of graph information across old and new models when considering the corresponding model parameters:

\[\mathcal{P}_{\theta^{old}\rightarrow\theta^{new}}=\mathcal{I}\left(\mathscr{Z }^{old};\mathscr{Z}^{new}\right),\] (6)

here, \(\mathscr{Z}^{old}\) and \(\mathscr{Z}^{new}\) are graph information on old and new models. We directly maximize mutual information between \(\mathscr{Z}^{old}\) and \(\mathscr{Z}^{new}\), which inherits powerful encoding capability of \(\theta^{old}\) to \(\theta^{new}\)

Figure 2: Semantic shift (left) and structural shift (right) between old and new models.

**Proposition 1**.: _The upper bound on graph information preservation can be estimated as:_

\[-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\leq\left\|\mathscr{ Z}^{old}-\mathscr{Z}^{new}\right\|_{2}^{2}=\left\|\Delta\mathscr{Z}\right\|_{2}^{2},\] (7)

_we expect to maximize mutual information \(\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\), thus minimizing \(-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\) in estimation is needed._

Proposition 1 is proved in Appendix A.1, which suggests that graph information preservation is bounded with the square of Euclidean norm between old graph information \(\mathscr{Z}^{old}\) and new graph information \(\mathscr{Z}^{new}\).

### Spatial Property

Based on the spatial properties of graphs, we analyze the maintenance of graph information in spatial domain to capture complex spatial relationships between nodes and edges in graphs.

**Lemma 1**.: _(Graph spatial information factorization [46]) The graph convolution between convolution kernel \(\mathcal{F}\) and the signal \(\mathbf{x}\) to obtain graph information is formulated as follows:_

\[\mathcal{F}\ast\mathbf{x}=\frac{1}{2}\left(\mathcal{F}^{l}+\mathcal{F}^{h} \right)\ast\mathbf{x}=\frac{1}{2}\left(\mathcal{F}^{l}\ast\mathbf{x}+\mathcal{ F}^{h}\ast\mathbf{x}\right)=\mathbf{x},\] (8)

_where \(\mathcal{F}^{l}\ast\mathbf{x}\) and \(\mathcal{F}^{h}\ast\mathbf{x}\) are low-/high- frequency graph information, \(\mathcal{F}^{l}=I_{n}+\widetilde{D}^{-\frac{1}{2}}\widetilde{A}\widetilde{D} ^{-\frac{1}{2}}\), \(\mathcal{F}^{h}=I_{n}-\widetilde{D}^{-\frac{1}{2}}\widetilde{A}\widetilde{D} ^{-\frac{1}{2}}\), \(\widetilde{D}\) is diagonal degree matrix with \(\widetilde{D}_{i,i}=\sum_{j}\widetilde{A}_{i,j}\), and \(\widetilde{A}=A+I_{n}\) represents adjacency matrix with self-loop. Two pieces of information in spatial domain can be derived as follows:_

\[\mathcal{F}^{l}\ast\mathbf{x}_{i}\rightarrow\mathbf{x}_{i}^{l}=x_{i}+\sum_{j \in\mathcal{N}_{i}}\frac{x_{j}}{\sqrt{\left|\mathcal{N}_{i}\right|\left| \mathcal{N}_{j}\right|}},\mathcal{F}^{h}\ast\mathbf{x}_{i}\rightarrow\mathbf{x }_{i}^{h}=x_{i}-\sum_{j\in\mathcal{N}_{i}}\frac{x_{j}}{\sqrt{\left|\mathcal{N }_{i}\right|\left|\mathcal{N}_{j}\right|}},\] (9)

_where \(\mathcal{N}\) represents node neighbors._

According to Lemma 1, there is an identity map that filters out graph information \(\mathscr{Z}\) with graph convolution, which provides effective solutions to correspond \(\mathscr{Z}^{old}\) and \(\mathscr{Z}^{new}\) to spatial domain. For each component \(i\), low-frequency information preserving \(\left\|\Delta\mathscr{Z}_{i}^{l}\right\|_{2}^{2}\) is defined as:

\[\left\|\Delta\mathscr{Z}_{i}^{l}\right\|_{2}^{2}=\left\|\left(Z_{i}^{old}+\sum _{j\in\mathcal{N}_{i}}\frac{Z_{j}^{old}}{\sqrt{\left|\mathcal{N}_{i}\right| \left|\mathcal{N}_{j}\right|}}\right)-\left(Z_{i}^{new}+\sum_{j\in\mathcal{N}_ {i}}\frac{Z_{j}^{new}}{\sqrt{\left|\mathcal{N}_{i}\right|\left|\mathcal{N}_{j }\right|}}\right)\right\|_{2}^{2},\] (10)

where \(Z^{old}\) and \(Z^{new}\) denote obtained representations on old and new models. This implies that the low-frequency information preserving is a semantic gap between the sum of node features and their neighbor features of replay data on old and new models.

Sustained global connectivity is crucial to avert the erasure of global semantic information inherited from the preceding model. As displayed in Figure 3, global semantic shift does exist. We extend the concept of first-hop neighbor nodes in the previous equation to include the entire replay graph (_i.e._ multi-hop neighbors), which is denoted as:

\[\left\|\Delta\mathscr{Z}_{i}^{l}\right\|_{2}^{2}=\left\|\left(Z_{i}^{old}+ \sum_{j\in\mathcal{M}}\frac{Z_{j}^{old}}{\sqrt{\left|\mathcal{M}\right| \left|\mathcal{M}\right|}}\right)-\left(Z_{i}^{new}+\sum_{j\in\mathcal{M}} \frac{Z_{j}^{new}}{\sqrt{\left|\mathcal{M}\right|\left|\mathcal{M}\right|}} \right)\right\|_{2}^{2}.\] (11)

Similarly, the generalized low-frequency information preserving is the gap between the sum of node features and all replay data features on old and new models. It is worth noting that Eq. (10) provides a semantic comparison from a local perspective, whereas Eq. (11) compares from a global perspective.

For each component \(i\), high-frequency information preserving \(\left\|\Delta\mathscr{Z}_{i}^{h}\right\|_{2}^{2}\) is defined as:

\[\left\|\Delta\mathscr{Z}_{i}^{h}\right\|_{2}^{2}=\left\|\left(Z_{i}^{old}- \sum_{j\in\mathcal{N}_{i}}\frac{Z_{j}^{old}}{\sqrt{\left|\mathcal{N}_{i} \right|\left|\mathcal{N}_{j}\right|}}\right)-\left(Z_{i}^{new}-\sum_{j\in \mathcal{N}_{i}}\frac{Z_{j}^{new}}{\sqrt{\left|\mathcal{N}_{i}\right|\left| \mathcal{N}_{j}\right|}}\right)\right\|_{2}^{2}.\] (12)

Figure 3: Global semantic shift on old and new models.

High-frequency information preserving captures the gap between the difference in node features and neighbor features on old and new models from topological space.

Motivated by the above concepts, we introduce the following definition:

**Definition 1**.: _(Graph spatial information preservation) A graph spatial information preservation model mainly consists of three kinds of information preservation \(\left\|\Delta\,\mathcal{Z}\right\|_{2}^{2}\approx\left\|\Delta\,\mathcal{Z}^{t} \right\|_{2}^{2}\cup\left\|\Delta\,\mathcal{Z}^{t}\right\|_{2}^{2}\cup\left\| \Delta\,\mathcal{Z}^{t}\right\|_{2}^{2}\) (defined in Eq. (10), (11), and (12))._

### Instantiations for Graph Spatial Information Preservation

The above analysis yields two crucial insights: (1) old model information preservation can be solved by preserving the learned graph information; (2) graph information preserving can correspond to low-frequency local-global information and high-frequency information from spatial domain to calibrate node semantic and graph structure shifts. Inspired by these two insights, we propose low-/high-frequency information preservation to adequately capture the old model's information. A high-level overview of GSIP framework is shown in Figure 4. The pseudo-code can be found in Appendix A.4.

Low-Frequency Information Preservation.The node representations within the previous model are derived via iterative feature integration and neighborhood communication, so it contains low-frequency graph information. The information of old model is aligned into the neighborhood of new model to better utilize low-frequency information, which can be represented as:

\[\mathcal{L}_{l}=\sum_{i\in\mathcal{M}}\sum_{j\in\mathcal{N}_{i}\cup i}\left\| Z_{i}^{old},Z_{j}^{new}\right\|_{2}^{2},\] (13)

where \(Z\) is the output given by model. Low-frequency local information preserving loss uses Mean Squared Error (MSE) loss to locally match representations of nodes on old model \(Z^{old}\) with representations of nodes and their neighbors on new model \(Z^{new}\). For replay methods that do not explicitly save neighbors, neighbor selection can be found in Appendix A.2. It is worth noting that since inputs become sparse when converted to probabilities, the softmax followed by Kullback Leibler (KL) divergence loss is not applied [47].

Preserving global information about low-frequency components aligns old model information as a whole and prevents catastrophic forgetting. Low-frequency global information preserving loss is introduced to minimize difference between global representations of old and new models, which is defined as:

\[\mathcal{L}_{\widehat{l}}=\left\|R(Z^{old}),R(Z^{new})\right\|_{2}^{2},\] (14)

where \(R\) represents pooling method, which is computed by mean pooling \(R(Z)=1/|\mathcal{M}|\sum_{i\in\mathcal{M}}Z_{i}\). Similarly, MSE loss is used to calculate global representation gaps.

Figure 4: A high-level overview of GSIP framework. It consists of low-/high- frequency modules to preserve old information. The old and new node representations are used to calculate information preserving loss of node representations, graph representations, and neighbor distances.

High-Frequency Information Preservation.The high-frequency part of spatial domain represents the difference between the features of nodes and neighbors. The updated model preserves old topology by incorporating prior local contextual information and then mitigates heterogeneous information propagation blockage caused by smoothness assumption. Specifically, for node \(v_{i}\), \(\mathcal{N}_{i}\) denotes neighborhood node set and defines \(S^{old}(v_{i},\mathcal{N}_{i})\) as the similarity of selected node vector with adjacent nodes computed by old model:

\[S^{old}\left(v_{i},\mathcal{N}_{i}\right)=\left[S_{1}^{old},\ldots,S_{| \mathcal{N}_{i}|}^{old}\right],S_{j}^{old}=\frac{\exp\left(\mathcal{K}\left(Z _{i}^{old},Z_{j}^{old}\right)\right)}{\sum_{j^{\prime}\in\mathcal{N}_{i}}\exp \left(\mathcal{K}\left(Z_{i}^{old},Z_{j^{\prime}}^{old}\right)\right)},\] (15)

where \(\mathcal{K}(\cdot,\cdot)\) represents kernel function that measures pairwise distances between each node and its neighbors in the latent feature space, and element-wise absolute values \(\mathcal{K}\left(Z_{i},Z_{j}\right)=|Z_{i}-Z_{j}|\) is used. Then, we measure similarity distribution from new model \(S^{new}(v_{i},\mathcal{N}_{i})\), which is formed by:

\[S^{new}\left(v_{i},\mathcal{N}_{i}\right)=\left[S_{1}^{new},\ldots,S_{| \mathcal{N}_{i}|}^{new}\right],S_{j}^{new}=\frac{\exp\left(\mathcal{K}\left( Z_{i}^{new},Z_{j}^{new}\right)\right)}{\sum_{j^{\prime}\in\mathcal{N}_{i}}\exp \left(\mathcal{K}\left(Z_{i}^{new},Z_{j^{\prime}}^{new}\right)\right)}.\] (16)

High-frequency information preserving is proposed to map neighborhood pairwise differences between old and new models in topological space, information loss from old structure to new structure is more easily recognized with the help of KL divergence, which is denoted as follows:

\[\mathcal{L}_{h}=\sum_{i\in\mathcal{M}}S^{old}\left(v_{i},\mathcal{N}_{i} \right)\log\frac{S^{old}\left(v_{i},\mathcal{N}_{i}\right)}{S^{new}\left(v_{ i},\mathcal{N}_{i}\right)}.\] (17)

Model Learning.To combine different preserving losses, the final graph information preservation loss function is defined as:

\[\mathcal{L}_{gip}=\mathcal{L}_{l}+\beta\mathcal{L}_{\widehat{l}}+\gamma \mathcal{L}_{h},\] (18)

where \(\beta\) and \(\gamma\) are loss weights.

Node classification loss is obtained by \(\mathcal{L}_{nc}=1/\left|G\right|\sum_{i\in G}\mathcal{H}\left(Y_{i},\sigma \left(f\left(G;\theta^{new}\right)\right)\right))\). Therefore, the overall model learning objective is the weighted sum of current node classification loss, replay loss, and graph information preserving loss:

\[\mathcal{L}=\mathcal{L}_{nc}+\alpha_{replay}\mathcal{L}_{replay}+\alpha_{gip} \mathcal{L}_{gip},\] (19)

where \(\alpha_{replay}\) and \(\alpha_{gip}\) are loss weights, and the value of \(\alpha_{replay}\) is relevant to the design of replayed method. More analysis about the preservation of other graph frequency information (_i.e._ mid-frequency information and high-frequency global information) is given in Appendix A.3.

## 5 Experiments

### Datasets and Setups

Datasets and Settings.We utilize five public datasets to evaluate the effectiveness of the proposed method in GCIL, the statistics of datasets are reported in Appendix B.1. Three ways of dividing classes are used: one is divided unequally, and the other two are divided equally, with equal classes per task. The first dataset is CoraFull [48], which has 70 classes, 30 classes are used as base classes for dividing unequally, then 20 classes are used as an increment, and we divide classes equally into 10 or 2 classes per task. Arxiv [49] and Reddit [50], both containing 40 classes, dividing unequally using 10 classes as base classes, then in increments of 5 classes, and dividing equally with 10 or 2 classes per task. Each dataset has 3 tasks with 2 classes per task on Cora [51] and Citeseer [51]. The latest benchmark [42] is employed to implement ERGNN, along with CaT [9] is used to implement SSM and CaT, we follow their settings in graph class incremental learning. Our implementation and detailed settings are available in Appendix B.4 and B.5.

Baselines and Metrics.We compare our method with the following baselines, including Finetuning, Joint, EWC [30], GEM [31], MAS [32], LwF [6], TWP [1], SSRM [11], and three replay-based methods (_i.e._ ERGNN [7], SSM [8], and CaT [9]), where three graph replay methods apply our framework. Finetuning is the lower bound baseline updating the model only with newly emerging graph data. Joint is the ideal upper bound and inputs contain all previous graph data. We choose two widely used metrics to evaluate the performance of the compared methods, including Average Performance (AP) and Average Forgetting (AF) [31].

[MISSING_PAGE_FAIL:8]

GSIP can offer information preservation capability to calibrate semantic shift and structural shift.Figure 5(c) exhibits the curves of shift scores during the incremental process for ERGNN on CoraFull. It can be noted that shift scores start at a relatively high value, gradually decrease, and smooth out after graph spatial information is maintained, demonstrating that the low-frequency local-global information and high-frequency information of old model are well captured, and semantic and structural shifts are nicely calibrated.

### Ablation Study

We investigate the effectiveness of low-frequency local modules (LL), low-frequency global modules (LG), and high-frequency modules (H), the experimental results use ERGNN as baseline (B). The results of ERGNN, SSM, and CaT with standard deviation are summarized in Appendix C.2. The above components are added one by one to baseline for performance comparison. From Table 3 we observe that: (1) When LL is utilized, the model can easily learn the aggregation rules of nodes and neighbors from old model locally. AP (AF) improves by about 2% (6%) to 45% (55%) over the baseline demonstrating the superiority of LL. (2) Combining LG significantly improves performance, especially on Reddit. The reason may be that larger datasets have greater overall shifts during increments. (3) H also brings significant improvements, with AP (AF) improving by about 1.6% (0.9%) to 2.4% (7.4%) over B+LL+LG on Reddit. This indicates that the H module can extract more topology information for better performance.

### Further Analysis

Hyper-Parameter Analysis.We analyze the impact of the number of storage nodes for each task \(\#\mathcal{M}\) on performance. As depicted in Figure 5(d), it can be observed that the proposed method consistently outperforms the original method in terms of the -AF metric (the lower, the better), regardless of the value of \(\#\mathcal{M}\). Interestingly, even with less memory, the proposed method still achieves better performance. CaT cannot be trained on 400 nodes due to Cuda memory constraints. We analyze the impact of loss weight \(\alpha_{gip}\) on ERGNN, SSM, and CaT across CoraFull, Arxiv, and Reddit datasets with increments of 2 in Figure 6. For ERGNN, SSM, and CaT, \(\alpha_{gip,1}\) is set to \([1,1,0.1]\), \([0.01,0.01,0.01]\), and \([0.1,0.01,0.01]\) for three datasets. It can be observed that the performance change is not as significant with the variation of \(\alpha_{gip}\) on SSM and CaT. However, different \(\alpha_{gip}\) has a greater impact on performance with ERGNN-GSIP. The possible reason is that ERGNN selects representative nodes for replay, which may cause class imbalance and topology discarding. For ERGNN, SSM, and CaT, the optimal hyper-parameters \(\alpha_{gip}\) on three datasets are \([50,10,1]\), \([0.1,0.1,0.1]\), and \([1,0.5,0.5]\). Because of space limitation, we provide more curves about \(\#\mathcal{M}\) in Appendix C.3 and hyper-parameter analysis of loss weights \(\beta\) and \(\gamma\) in Appendix C.4.

Figure 5: (a)-(b) Performance matrices on CoraFull dataset. (c) Semantic and structural shift calibration of old and new models during increments. (d) Performance changes affected by \(\#\mathcal{M}\) on CoraFull dataset.

\begin{table}
\begin{tabular}{l c c c c c c c c c c c c c c c c c c} \hline \hline  & \multicolumn{6}{c}{CoraFull} & \multicolumn{6}{c}{Arxiv} & \multicolumn{6}{c}{Reddit} \\ \cline{2-13} \multicolumn{13}{l}{Method} & Unequally & Equally (10) & Equally (2) & Unequally & Equally (10) & Equally (2) & Unequally & Equally (2) & Unequally & Equally (10) & Equally (2) \\ \cline{2-13}  & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) & AP\(|\) \\ \hline B & 60.91 & -19.47 & 24.39 & -69.31 & 3.01 & -94.94 & 31.18 & -45.45 & 24.47 & -49.11 & 24.70 & -62.76 & 76.60 & -23.22 & 75.22 & -25.26 & 83.16 & -16.21 \\ B+LL & 65.79 & -12.32 & 69.02 & -14.13 & 41.37 & -47.39 & 33.27 & -34.66 & 27.10 & -40.95 & 38.09 & -35.04 & 84.63 & -12.09 & 84.26 & -12.37 & 87.52 & -10.97 \\ B+LL+LG & 66.22 & -12.78 & 69.77 & -13.13 & 41.84 & -46.73 & 34.00 & -33.61 & 32.80 & -34.40 & 39.39 & -88.88 & **85.92** & -6.97 & 81.77 & 9.45 & 91.34 & -7.12 \\ B+LL+LG+H & **67.22** & **-10.91** & **71.15** & **-11.37** & **44.79** & **-44.60** & **34.09** & **-32.59** & **33.88** & **-27.97** & **40.21** & -28.96 & **90.82** & **-6.05** & **89.59** & **-2.03** & **93.03** & **-5.50** \\ \hline \hline \end{tabular}
\end{table}
Table 3: Ablation comparisons of graph spatial information preservation.

Visualization.To qualitatively demonstrate the effectiveness of our representations, we adopt t-SNE [52] to visualize the learned node embeddings. After learning the last task, Figure 7(a) and Figure 7(b) show the results of the learned node embeddings in Task 1 on CoraFull, while Figure 7(c) and Figure 7(d) demonstrate the results of the last task. We can clearly observe that GSIP possesses better representation ability by considering representations and classifying old and new classes well.

## 6 Conclusion

We contribute to the literature of GCIL by addressing the issue of information preservation from old model when adapting to new classes. The key insight is that preserving graph information from spatial domain plays a vital role in preserving information about old model, and subsequently calibrates semantic and structural shifts and reduces catastrophic forgetting risk. To accomplish this objective, we introduce a framework, GSIP, which utilizes the outputs of nodes in old model to diffuse the outputs of new model and its neighbors, then aligns the outputs of new model with old model after pooling. Finally, GSIP maintains kernel distance of neighbor pairs on both old and new models. The graph information is remembered by low-frequency local-global information preserving and high-frequency information preserving in feature and topological space. Evaluations over benchmark datasets show the superiority of GSIP in handling different dataset splitting cases. In the future, we will investigate comprehensive analysis for the preservation of complicated graph signals.

## Acknowledgement

This work was supported in part by the National Science and Technology Major Project under Grant 2022ZD0116500, in part by the National Natural Science Foundation of China under Grants 62436002, 62476195, 61925602, U23B2049, and 62222608, in part by Tianjin Natural Science Funds for Distinguished Young Scholar under Grant 23JCJQJC00270, and in part by Zhejiang Provincial Natural Science Foundation of China under Grant LD24F020004.

Figure 6: The analysis of \(\alpha_{gip}\) in ERGNN, SSM, and CaT on CoraFull, Arxiv, and Reddit datasets.

Figure 7: The visualization of node embeddings in Task 1 and Task 7 on CoraFull dataset.

## References

* [1] Huihui Liu, Yiding Yang, and Xinchao Wang. Overcoming catastrophic forgetting in graph neural networks. In _Thirty-Fifth AAAI Conference on Artificial Intelligence_, pages 8653-8661, 2021.
* [2] Xikun Zhang, Dongjin Song, and Dacheng Tao. Hierarchical prototype networks for continual graph representation learning. _IEEE Trans. Pattern Anal. Mach. Intell._, 45(4):4622-4636, 2023.
* [3] Matthias De Lange, Rahaf Aljundi, Marc Masana, Sarah Parisot, Xu Jia, Ales Leonardis, Gregory G. Slabaugh, and Tinne Tuytelaars. A continual learning survey: Defying forgetting in classification tasks. _IEEE Trans. Pattern Anal. Mach. Intell._, 44(7):3366-3385, 2022.
* [4] Xinting Hu, Kaihua Tang, Chunyan Miao, Xian-Sheng Hua, and Hanwang Zhang. Distilling causal effect of data in class-incremental learning. In _IEEE Conference on Computer Vision and Pattern Recognition_, pages 3957-3966, 2021.
* [5] Jie Cai, Xin Wang, Chaoyu Guan, Yateng Tang, Jin Xu, Bin Zhong, and Wenwu Zhu. Multimodal continual graph learning with neural architecture search. In _The ACM Web Conference_, pages 1292-1300, 2022.
* [6] Zhizhong Li and Derek Hoiem. Learning without forgetting. _IEEE Trans. Pattern Anal. Mach. Intell._, 40(12):2935-2947, 2018.
* [7] Fan Zhou and Chengtai Cao. Overcoming catastrophic forgetting in graph neural networks with experience replay. In _Thirty-Fifth AAAI Conference on Artificial Intelligence_, pages 4714-4722, 2021.
* [8] Xikun Zhang, Dongjin Song, and Dacheng Tao. Sparsified subgraph memory for continual graph representation learning. In _IEEE International Conference on Data Mining_, pages 1335-1340, 2022.
* [9] Yilun Liu, Ruihong Qiu, and Zi Huang. Cat: Balanced continual graph learning with graph condensation. In _IEEE International Conference on Data Mining_, pages 1157-1162, 2023.
* [10] Seoyoon Kim, Seongjun Yun, and Jaewoo Kang. Dysgrain: An incremental learning framework for dynamic graphs. In _Proceedings of the Thirty-First International Joint Conference on Artificial Intelligence_, pages 3157-3163, 2022.
* [11] Junwei Su, Difan Zou, Zijun Zhang, and Chuan Wu. Towards robust graph incremental learning on evolving graphs. In _International Conference on Machine Learning_, volume 202, pages 32728-32748, 2023.
* [12] Seungyoon Choi, Wonjoong Kim, Sungwon Kim, Yeonjun In, Sein Kim, and Chanyoung Park. DSLR: diversity enhancement and structure learning for rehearsal-based graph continual learning. In _The ACM Web Conference_, pages 733-744, 2024.
* [13] Dipam Goswami, Yuyang Liu, Bartlomiej Twardowski, and Joost van de Weijer. Fecam: Exploiting the heterogeneity of class distributions in exemplar-free continual learning. In _Advances in Neural Information Processing Systems_, pages 1-14, 2023.
* [14] Yaoyao Liu, Bernt Schiele, and Qianru Sun. RMM: reinforced memory management for class-incremental learning. In _Advances in Neural Information Processing Systems_, pages 3478-3490, 2021.
* [15] Qi-Wei Wang, Da-Wei Zhou, Yi-Kai Zhang, De-Chuan Zhan, and Han-Jia Ye. Few-shot class-incremental learning via training-free prototype calibration. In _Advances in Neural Information Processing Systems_, pages 1-17, 2023.
* [16] Depeng Li, Tianqi Wang, Junwei Chen, Qining Ren, Kenji Kawaguchi, and Zhigang Zeng. Towards continual learning desiderata via hsc-bottleneck orthogonalization and equiangular embedding. In _Thirty-Eighth AAAI Conference on Artificial Intelligence_, pages 13464-13473, 2024.

* [17] Liyuan Wang, Jingyi Xie, Xingxing Zhang, Mingyi Huang, Hang Su, and Jun Zhu. Hierarchical decomposition of prompt-based continual learning: Rethinking obscured sub-optimality. In _Advances in Neural Information Processing Systems_, pages 1-23, 2023.
* [18] Qi Chen, Changjian Shui, Ligong Han, and Mario Marchand. On the stability-plasticity dilemma in continual meta-learning: Theory and algorithm. In _Advances in Neural Information Processing Systems_, pages 1-15, 2023.
* [19] Marc Masana, Xialei Liu, Bartlomiej Twardowski, Mikel Menta, Andrew D. Bagdanov, and Joost van de Weijer. Class-incremental learning: Survey and performance evaluation on image classification. _IEEE Trans. Pattern Anal. Mach. Intell._, 45(5):5513-5533, 2023.
* [20] Songsong Tian, Lusi Li, Weijun Li, Hang Ran, Xin Ning, and Prayag Tiwari. A survey on few-shot class-incremental learning. _Neural Networks_, 169:307-324, 2024.
* [21] Andrei A. Rusu, Neil C. Rabinowitz, Guillaume Desjardins, Hubert Soyer, James Kirkpatrick, Koray Kavukcuoglu, Razvan Pascanu, and Raia Hadsell. Progressive neural networks. _CoRR_, abs/1606.04671, 2016.
* [22] Jaehong Yoon, Eunho Yang, Jeongtae Lee, and Sung Ju Hwang. Lifelong learning with dynamically expandable networks. In _Sixth International Conference on Learning Representations_, pages 1-11, 2018.
* [23] Yue Wu, Yinpeng Chen, Lijuan Wang, Yuancheng Ye, Zicheng Liu, Yandong Guo, and Yun Fu. Large scale incremental learning. In _IEEE Conference on Computer Vision and Pattern Recognition_, pages 374-382, 2019.
* [24] Mitchell Wortsman, Vivek Ramanujan, Rosanne Liu, Aniruddha Kembhavi, Mohammad Rastegari, Jason Yosinski, and Ali Farhadi. Supermasks in superposition. In _Advances in Neural Information Processing Systems_, pages 15173-15184, 2020.
* [25] Johannes von Oswald, Christian Henning, Joao Sacramento, and Benjamin F. Grewe. Continual learning with hypernetworks. In _Eighth International Conference on Learning Representations_, pages 1-12, 2020.
* [26] Hanul Shin, Jung Kwon Lee, Jaehong Kim, and Jiwon Kim. Continual learning with deep generative replay. In _Advances in Neural Information Processing Systems_, pages 2990-2999, 2017.
* [27] Jeremias Knoblauch, Hisham Husain, and Tom Diethe. Optimal continual learning has perfect memory and is np-hard. In _Proceedings of the Thirty-Seventh International Conference on Machine Learning_, volume 119, pages 5327-5337, 2020.
* [28] Lucas Caccia, Eugene Belilovsky, Massimo Caccia, and Joelle Pineau. Online learned continual compression with adaptive quantization modules. In _Proceedings of the Thirty-Seventh International Conference on Machine Learning_, volume 119, pages 1240-1250, 2020.
* [29] Liyuan Wang, Xingxing Zhang, Kuo Yang, Longhui Yu, Chongxuan Li, Lanqing Hong, Shifeng Zhang, Zhenguo Li, Yi Zhong, and Jun Zhu. Memory replay with data compression for continual learning. In _The Tenth International Conference on Learning Representations_, pages 1-13, 2022.
* [30] James Kirkpatrick, Razvan Pascanu, Neil Rabinowitz, Joel Veness, Guillaume Desjardins, Andrei A Rusu, Kieran Milan, John Quan, Tiago Ramalho, Agnieszka Grabska-Barwinska, et al. Overcoming catastrophic forgetting in neural networks. _Proceedings of the national academy of sciences_, 114(13):3521-3526, 2017.
* [31] David Lopez-Paz and Marc'Aurelio Ranzato. Gradient episodic memory for continual learning. In _Advances in Neural Information Processing Systems_, pages 6467-6476, 2017.
* [32] Rahaf Aljundi, Francesca Babiloni, Mohamed Elhoseiny, Marcus Rohrbach, and Tinne Tuytelaars. Memory aware synapses: Learning what (not) to forget. In _European Conference on Computer Vision_, volume 11207, pages 144-161, 2018.

* [33] Yilin Lyu, Liyuan Wang, Xingxing Zhang, Zicheng Sun, Hang Su, Jun Zhu, and Liping Jing. Overcoming recency bias of normalization statistics in continual learning: Balance and adaptation. In _Advances in Neural Information Processing Systems_, pages 1-12, 2023.
* [34] Qiao Yuan, Sheng-Uei Guan, Pin Ni, Tianlun Luo, Ka Lok Man, Prudence W. H. Wong, and Victor Chang. Continual graph learning: A survey. _CoRR_, abs/2301.12230, 2023.
* [35] Falih Gozi Febrinanto, Feng Xia, Kristen Moore, Chandra Thapa, and Charu Aggarwal. Graph lifelong learning: A survey. _IEEE Comput. Intell. Mag._, 18(1):32-51, 2023.
* [36] Zonggui Tian, Du Zhang, and Hong-Ning Dai. Continual learning on graphs: A survey. _CoRR_, abs/2402.06330, 2024.
* [37] Dongjie Wang, Zhengzhang Chen, Yanjie Fu, Yanchi Liu, and Haifeng Chen. Incremental causal graph learning for online root cause analysis. In _Proceedings of the Twenty-Ninth ACM SIGKDD Conference on Knowledge Discovery and Data Mining_, pages 2269-2278, 2023.
* [38] Chen Wang, Yuheng Qiu, Dasono Gao, and Sebastian A. Scherer. Lifelong graph learning. In _IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 13709-13718, 2022.
* [39] Bin Lu, Xiaoying Gan, Lina Yang, Weinan Zhang, Luoyi Fu, and Xinbing Wang. Geometer: Graph few-shot class-incremental learning via prototype representation. In _The Twenty-Eighth ACM SIGKDD Conference on Knowledge Discovery and Data Mining_, pages 1152-1161, 2022.
* [40] Thanh Duc Hoang, Do Viet Tung, Duy-Hung Nguyen, Bao-Sinh Nguyen, Huy Hoang Nguyen, and Hung Le. Universal graph continual learning. _Trans. Mach. Learn. Res._, 1(1):1-15, 2023.
* [41] Jiajun Liu, Wenjun Ke, Peng Wang, Ziyu Shang, Jinhua Gao, Guozheng Li, Ke Ji, and Yanhe Liu. Towards continual knowledge graph embedding via incremental distillation. In _Thirty-Eighth AAAI Conference on Artificial Intelligence_, pages 8759-8768, 2024.
* [42] Xikun Zhang, Dongjin Song, and Dacheng Tao. CGLB: benchmark tasks for continual graph learning. In _Advances in Neural Information Processing Systems_, pages 13006-13021, 2022.
* [43] Jihoon Ko, Shinhwan Kang, and Kijung Shin. Begin: Extensive benchmark scenarios and an easy-to-use framework for graph continual learning. _CoRR_, abs/2211.14568, 2022.
* [44] Simon Kornblith, Mohammad Norouzi, Honglak Lee, and Geoffrey E. Hinton. Similarity of neural network representations revisited. In _Proceedings of the Thirty-Sixth International Conference on Machine Learning_, volume 97, pages 3519-3529, 2019.
* [45] Eunjeong Jeong, Seungeun Oh, Hyesung Kim, Jihong Park, Mehdi Bennis, and Seong-Lyun Kim. Communication-efficient on-device machine learning: Federated distillation and augmentation under non-iid private data. _CoRR_, abs/1811.11479, 2018.
* [46] Lirong Wu, Haitao Lin, Yufei Huang, Tianyu Fan, and Stan Z. Li. Extracting low-/high-frequency knowledge from graph neural networks and injecting it into mlps: An effective gnn-to-mlp distillation framework. In _Thirty-Seventh AAAI Conference on Artificial Intelligence_, pages 10351-10360, 2023.
* [47] Chaitanya K. Joshi, Fayao Liu, Xu Xun, Jie Lin, and Chuan Sheng Foo. On representation knowledge distillation for graph neural networks. _IEEE Trans. Neural Networks Learn. Syst._, 35(4):4656-4667, 2024.
* [48] Aleksandar Bojchevski and Stephan Gunnemann. Deep gaussian embedding of graphs: Unsupervised inductive learning via ranking. In _Sixth International Conference on Learning Representations_, pages 1-11, 2018.
* [49] Weihua Hu, Matthias Fey, Marinka Zitnik, Yuxiao Dong, Hongyu Ren, Bowen Liu, Michele Catasta, and Jure Leskovec. Open graph benchmark: Datasets for machine learning on graphs. In _Advances in Neural Information Processing Systems_, pages 22118-22133, 2020.
* [50] William L. Hamilton, Zhitao Ying, and Jure Leskovec. Inductive representation learning on large graphs. In _Advances in Neural Information Processing Systems_, pages 1024-1034, 2017.

* [51] Prithviraj Sen, Galileo Namata, Mustafa Bilgic, Lise Getoor, Brian Gallagher, and Tina Eliassi-Rad. Collective classification in network data. _AI Mag._, 29(3):93-106, 2008.
* [52] Laurens van der Maaten. Accelerating t-sne using tree-based algorithms. _J. Mach. Learn. Res._, 15(1):3221-3245, 2014.
* [53] Sungsoo Ahn, Shell Xu Hu, Andreas C. Damianou, Neil D. Lawrence, and Zhenwen Dai. Variational information distillation for knowledge transfer. In _IEEE Conference on Computer Vision and Pattern Recognition_, pages 9163-9171, 2019.
* [54] Jincheng Huang, Lun Du, Xu Chen, Qiang Fu, Shi Han, and Dongmei Zhang. Robust mid-pass filtering graph convolutional networks. In _the ACM Web Conference_, pages 328-338, 2023.
* [55] Haitong Luo, Xuying Meng, Suhang Wang, Hanyun Cao, Weiyao Zhang, Yequan Wang, and Yujun Zhang. Spectral-based graph neural networks for complementary item recommendation. In _Thirty-Eighth AAAI Conference on Artificial Intelligence_, pages 8868-8876, 2024.

Method

### The Proof of Proposition 1

**Proposition 1**.: _The upper bound on graph information preservation can be estimated as:_

\[-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\leq\|\mathscr{Z}^{ old}-\mathscr{Z}^{new}\|_{2}^{2}=\|\Delta\mathscr{Z}\|_{2}^{2}\,,\] (20)

_we expect to maximize mutual information \(\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\), thus minimizing \(-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\) in estimation is needed._

Proof.: The mutual information of graph information on old model and new model [53] can be equivalent to:

\[\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right) =\int d\mathscr{Z}^{new}d\mathscr{Z}^{old}p(\mathscr{Z}^{new}, \mathscr{Z}^{old})\log\left(\frac{p(\mathscr{Z}^{new},\mathscr{Z}^{old})}{p( \mathscr{Z}^{new})p(\mathscr{Z}^{old})}\right)\] (21) \[=\sum_{\mathscr{Z}^{new},\mathscr{Z}^{old}}p(\mathscr{Z}^{new}, \mathscr{Z}^{old})\log\left(\frac{p(\mathscr{Z}^{new},\mathscr{Z}^{old})}{p( \mathscr{Z}^{new})p(\mathscr{Z}^{old})}\right)\] \[=\sum_{\mathscr{Z}^{new},\mathscr{Z}^{old}}p(\mathscr{Z}^{new}, \mathscr{Z}^{old})\log\left(\frac{p(\mathscr{Z}^{new},\mathscr{Z}^{old})}{p( \mathscr{Z}^{new})}\right)\] \[-\sum_{\mathscr{Z}^{new},\mathscr{Z}^{old}}p(\mathscr{Z}^{new}, \mathscr{Z}^{old})\log p(\mathscr{Z}^{old})\] \[=\sum_{\mathscr{Z}^{new},\mathscr{Z}^{old}}p(\mathscr{Z}^{new})p( \mathscr{Z}^{old}\mid\mathscr{Z}^{new})\log(p(\mathscr{Z}^{old}\mid\mathscr{Z}^ {new}))\] \[-\sum_{\mathscr{Z}^{new},\mathscr{Z}^{old}}p(\mathscr{Z}^{new}, \mathscr{Z}^{old})\log p(\mathscr{Z}^{old})\] \[=-\sum_{\mathscr{Z}^{new}}p(\mathscr{Z}^{new})\mathcal{H}(\mathscr{ Z}^{old}\mid\mathscr{Z}^{new}=\mathscr{Z}^{new})-\sum_{\mathscr{Z}^{old}}\log p( \mathscr{Z}^{old})p(\mathscr{Z}^{old})\] \[=\mathcal{H}\left(\mathscr{Z}^{old}\right)-\mathcal{H}\left( \mathscr{Z}^{old}\mid\mathscr{Z}^{new}\right)\] \[=\mathcal{H}(\mathscr{Z}^{old})+\mathbb{E}_{\mathscr{Z}^{old}, \mathscr{Z}^{new}}[\log p(\mathscr{Z}^{old}\mid\mathscr{Z}^{new})]\] \[=\mathcal{H}(\mathscr{Z}^{old})+\mathbb{E}_{\mathscr{Z}^{old}, \mathscr{Z}^{new}}[\log q(\mathscr{Z}^{old}\mid\mathscr{Z}^{new})]\] \[+\mathbb{E}_{\mathscr{Z}^{new}}\left[\mathcal{D}_{KL}(p(\mathscr{Z }^{old}\mid\mathscr{Z}^{new})\|q(\mathscr{Z}^{old}\mid\mathscr{Z}^{new}))\right]\] \[\geq\mathbb{E}_{\mathscr{Z}^{old},\mathscr{Z}^{new}}[\log q( \mathscr{Z}^{old}\mid\mathscr{Z}^{new})],\]

where expectations are over distribution \(p(\mathscr{Z}^{old},\mathscr{Z}^{new})\), \(\mathcal{H}(\mathscr{Z}^{old})\) has been removed since it is constant with respect to optimized parameters. The reason for the inequality is the non-negativity of entropy \(\mathcal{H}\) and Kullback-Leibber divergence \(\mathcal{D}_{KL}\).

We expect to maximize mutual information \(\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\), so we need to minimize \(-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\) in the loss function, hence we can obtain:

\[-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\leq-\mathbb{E}_ {\mathscr{Z}^{old},\mathscr{Z}^{new}}[\log q(\mathscr{Z}^{old}\mid\mathscr{Z} ^{new})].\] (22)

The conditional likelihood is maximized to fit the information of old model, and the new model receives compressed information needed to recover old model. A Gaussian distribution with mean \(\boldsymbol{\mu}\) and variance \(\boldsymbol{\sigma}\) is employed to estimate variational distribution \(q(\mathscr{Z}^{old}\mid\mathscr{Z}^{new})\), which is expressed as follows:

\[-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right) \leq-\sum_{i=1}^{|\mathcal{M}|}\log q\left(\mathscr{Z}^{old}_{i} \mid\mathscr{Z}^{new}\right)\] (23) \[=\sum_{i=1}^{|\mathcal{M}|}\log\boldsymbol{\sigma}_{i}+\frac{ \left(\mathscr{Z}^{old}_{i}-\boldsymbol{\mu}_{i}(\mathscr{Z}^{new})\right)^{2} }{2\boldsymbol{\sigma}_{i}^{2}}+\mathcal{C},\]

where \(\mathcal{C}\) is constant. Mean squared error matching can be seen as a specific instance of the above formula when \(\boldsymbol{\mu}(\mathscr{Z}^{new})=\mathscr{Z}^{new}\) and \(\boldsymbol{\sigma}=1\), thus \(-\mathcal{I}\left(\mathscr{Z}^{old};\mathscr{Z}^{new}\right)\leq\|\mathscr{Z} ^{old}-\mathscr{Z}^{new}\|_{2}^{2}\).

### Neighbor Selection

Some replay-based methods do not explicitly save topology, so we treat nodes with high representation similarity and label correlation on old model as neighbors for each node when computing low-frequency local information preserving loss. Nodes whose feature similarity is greater than the given threshold and whose labels are the same can be neighbors, formulated as follows:

\[\mathcal{N}_{i}=\{j\ |\ (COS(Z_{i}^{old},Z_{j}^{old})>\widehat{\delta})\cap(Y_{i} =Y_{j}),\forall j\in\mathcal{M}\},i\in\mathcal{M},\] (24)

where the cosine similarity function \(COS(Z_{i},Z_{j})=Z_{i}^{\top}Z_{j}/(\left\|Z_{i}\right\|\left\|Z_{j}\right\|)\) is used to calculate the degree of feature similarity, and \(\widehat{\delta}\) is similarity threshold.

We only use node feature similarity when calculating the loss of high-frequency information preservation for neighbor selection. The absence of label correlation captures the distance between nodes on different classes, which is conducive to the model to distinguish different classes. The neighborhood selection process is expressed as follows:

\[\mathcal{N}_{i}=\{j\ |\ COS(Z_{i}^{old},Z_{j}^{old})>\delta,\forall j\in \mathcal{M}\},i\in\mathcal{M},\] (25)

where \(\delta\) is the similarity threshold.

### The Analysis of Other Graph Frequency Information Preservation

We perform analyses and experiments to assess the preservation of various aspects of graph frequency information, including mid-frequency information and high-frequency global information.

Mid-Frequency Information Preservation.According to the definition of mid-frequency filtering graph convolutional networks [54; 55], the mid-frequency convolution can be expressed as:

\[\mathcal{F}^{m}=(I_{n}-\widetilde{D}^{-\frac{1}{2}}\widetilde{A}\widetilde{D }^{-\frac{1}{2}})(I_{n}+\widetilde{D}^{-\frac{1}{2}}\widetilde{A}\widetilde{D }^{-\frac{1}{2}}).\] (26)

Through a similar analysis as mentioned above, mid-frequency information preservation is defined as:

\[\left\|\Delta\mathscr{Z}_{i}^{m}\right\|_{2}^{2}=\left\|\left(Z_{i}^{old}- \sum_{j\in\mathcal{N}_{i}^{2}}\frac{Z_{j}^{old}}{\sqrt{\left|\mathcal{N}_{i}^ {2}\right|\left|\mathcal{N}_{j}^{2}\right|}}\right)-\left(Z_{i}^{new}-\sum_{j \in\mathcal{N}_{i}^{2}}\frac{Z_{j}^{new}}{\sqrt{\left|\mathcal{N}_{i}^{2} \right|\left|\mathcal{N}_{j}^{2}\right|}}\right)\right\|_{2}^{2},\] (27)

where \(\mathcal{N}^{2}\) is the second-hop neighbors of nodes. The distinction between mid-/high- frequency information preservation lies in that mid-frequency signals calculate the differences between the node and its second-hop neighbors.

High-Frequency Global Information Preservation.The general formula for high-frequency global information preservation is represented as follows:

\[\left\|\Delta\mathscr{Z}_{i}^{\widehat{h}}\right\|_{2}^{2}=\left\|\left(Z_{i} ^{old}-\sum_{j\in\mathcal{M}}\frac{Z_{j}^{old}}{\sqrt{\left|\mathcal{M} \right|\left|\mathcal{M}\right|}}\right)-\left(Z_{i}^{new}-\sum_{j\in\mathcal{ M}}\frac{Z_{j}^{new}}{\sqrt{\left|\mathcal{M}\right|\left|\mathcal{M}\right|}} \right)\right\|_{2}^{2}.\] (28)

It implies that every node in replayed graph needs to calculate disparity with other nodes. Since graph neural network assumes that neighboring nodes have similar representations, the penalizing distance between nodes and their neighbors at multiple hops away is redundant and does not contribute to structural preservation. Moreover, the inclusion of this term imposes an optimization burden and exhibits high time complexity (\(O(|\mathcal{M}|^{2}\cdot\mathds{k})\), where \(\mathds{k}\) denotes the dimensions of the hidden spaces).

We add mid-frequency information preservation (**M**) and high-frequency global information preservation (**HG**) to GSIP in Table 4, which can yield a slight performance improvement in some cases. However, it does not lead to better performance enhancements or outstanding results. The possible reason is that the preservation of first-hop neighbors is sufficient to calibrate structural shift.

### Algorithm

The proposed method is summarized in Algorithm 1.

## Appendix B Implementation Details

### Datasets

As illustrated in Table 5, we utilize five public datasets to evaluate the effectiveness of our proposed method in graph class incremental learning. Three different ways for partitioning datasets are employed: one involves an unequal division, where more classes are designated as base classes to enhance model robustness, while the remaining classes are treated as novel classes; the other two ways involve an equal division, with an equal number of classes allocated per task. The first dataset is CoraFull [48], which encompasses 70 classes. For the unequal division, 30 classes are used as base classes, and an additional 20 classes are selected as increments. Additionally, the classes are divided equally into either 10 or 2 classes per task. Arxiv [49] and Reddit [50], both of which consist of 40 classes. In the unequal division, 10 classes are designated as base classes, with increments of 5 classes. Similarly, the classes are evenly divided into either 10 or 2 classes per task. Each dataset has 3 tasks with 2 classes per task on Cora [51] and Citeseer [51].

### Baselines

In this subsection, we introduce the baselines in the main paper. These baselines are as follows:

* **Finetuning** is the lower bound baseline updating the model only with newly emerging graph data.
* **Joint** is the ideal upper bound and inputs contain all previous graph data.

\begin{table}
\begin{tabular}{l c c c c c c c c c c c} \hline \hline  & \multicolumn{4}{c}{Unequally} & \multicolumn{4}{c}{Equally (10)} & \multicolumn{4}{c}{Equally (2)} \\ \cline{2-13} Method & AP\(\uparrow\) & AF\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) & AP\(\uparrow\) \\ \hline \multirow{2}{*}{GSIP} & **55.32** & **-2.50** & **67.22** & -10.91 & **63.86** & 0.08 & **71.15** & **-11.37** & **79.31** & 0.70 & **44.79** & **-44.60** \\  & \(\pm\)0.75 & \(\pm\)1.13 & \(\pm\)0.44 & \(\pm\)0.62 & \(\pm\)0.85 & \(\pm\)0.76 & \(\pm\)0.98 & \(\pm\)0.74 & \(\pm\)0.50 & \(\pm\)0.25 & \(\pm\)1.77 & \(\pm\)1.67 \\ \multirow{2}{*}{\(\mathbf{+M\:/\:HG}\)} & 55.28 & **-2.61** & **66.63** & **-10.07** & **63.89** & **0.20** & **69.96** & **-12.85** & **79.29** & **0.75** & **24.66** & **-68.48** \\  & \(\pm\)0.65 & \(\pm\)1.04 & \(\pm\)0.49 & \(\pm\)1.75 & \(\pm\)0.86 & \(\pm\)0.68 & \(\pm\)0.85 & \(\pm\)0.94 & \(\pm\)0.67 & \(\pm\)0.52 & \(\pm\)1.47 & \(\pm\)1.35 \\ \hline \hline \end{tabular}
\end{table}
Table 4: Performance comparison before and after adding other graph frequency information preservation on CoraFull dataset.

\begin{table}
\begin{tabular}{l c c c c c} \hline \hline Datasets & CoraFull & Arxiv & Reddit & Cora & Citeseer \\ \hline \# nodes & 19,793 & 169,343 & 227,853 & 2,708 & 3,327 \\ \# edges & 130,622 & 1,166,243 & 114,615,892 & 5,429 & 4,732 \\ \# class & 70 & 40 & 40 & 7 & 6 \\ \hline \# task & 3 / 7 / 35 & 7 / 4 / 20 & 7 / 4 / 20 & 3 & 3 \\ \# base class & 30 / 10 / 2 & 10 / 10 / 2 & 10 / 10 / 2 & 2 & 2 \\ \# novel class & 20 / 10 / 2 & 5 / 10 / 2 & 5 / 10 / 2 & 2 & 2 \\ \hline \hline \end{tabular}
\end{table}
Table 5: Statistics of datasets.

* Elastic Weight Consolidation **(EWC)**[30] quadratically penalizes model weights according to their importance to previous tasks.
* Gradient Episodic Memory **(GEM)**[31] modifies gradients of the current task using gradients computed from stored graph data.
* Memory Aware Synapses **(MAS)**[32] utilizes analysis of parameter prediction as the importance of parameters when adding regularization terms.
* Learning without Forgetting **(LwF)**[6] utilizes information distillation to reduce the discrepancy between old and new models.
* Topology-aware Weight Preserving **(TWP)**[1] preserves the key parameters and topology of the previous task through regularization terms.
* Structural Shift Risk Mitigation **(SSRM)**[11] introduces regularization terms to mitigate catastrophic forgetting from structural drift.
* Experience Replay Graph Neural Network **(ERGNN)**[7] framework incorporates memory replay by storing representative nodes.
* Sparsified Subgraph Memory **(SSM)**[8] stores sampled sparse subgraphs in memory repository to preserve structural information.
* The Condense and Train **(CaT)**[9] framework compresses the graph into a small but informative synthetic replay graph.

### Metrics

We choose two widely used metrics to evaluate the performance of the compared methods, including Average Performance (AP) and Average Forgetting (AF) [31]. When the model learns the latest task, all previous tasks are evaluated and a lower triangular performance matrix \(W=\{w_{tt^{\prime}}\}\in w^{\tau\times\tau}\) is formed, where \(w_{tt^{\prime}}\) is node classification accuracy on task \(t\) after learning task \(t^{\prime}\) (\(t\leq t^{\prime}\)) and \(\tau\) is the total number of tasks. Average performance \(\mathrm{AP}=1/\tau\sum_{t=1}^{\tau}w_{\tau,t}\) evaluates the average performance of model on previous task after learning from new task \(\tau\). Average Forgetting \(\mathrm{AF}=1/(\tau-1)\sum_{t=1}^{\tau-1}\left(w_{\tau,t}-w_{t,t}\right)\) represents the average performance degradation on previous tasks after learning from task \(\tau\).

### Reproducibility

Our method is trained using a fixed random seed to ensure the consistency and verifiability of results. We are committed to open-sourcing and sharing our code to promote academic collaboration and knowledge sharing, enabling other researchers to reproduce and validate our experimental results.

### Detailed Settings

Our model is deployed in PyTorch with an NVIDIA RTX 3090 GPU and trained with 200 epochs for every task. We use Adam with weight decay for optimization, and the learning rate is set to 0.005. We use a two-layer GCN with a hidden dimension 256 as the backbone. All results are reported in means and standard deviations over 3 trials. The train-validation-test splitting ratios are 60%, 20%, and 20% for all datasets. The train-validation-test split is achieved through random sampling, resulting in variations in performance across different rounds of random sampling, \(\widehat{\delta}\) is set to 0.99 and the search space of \(\delta\) is \(\{0.5,0.6,0.7,0.8,0.9\}\). Table 6 is the hyper-parameters we adopt from [42] and [9].

## Appendix C Experimental Results

### Performance Comparison

\begin{table}
\begin{tabular}{l l} \hline \hline ERGNN-GSIP & d: 0.5, sampler: CM \\ SSM-GSIP & subgraph\_sampler: random \\ CaT-GSIP & n\_encoders: 500, feat\_init: randomChoice, feat\_lr: 0.001, hid\_dim: 512, hop: 1 \\ \hline \hline \end{tabular}
\end{table}
Table 6: Incremental learning settings.

[MISSING_PAGE_FAIL:19]

[MISSING_PAGE_FAIL:20]

[MISSING_PAGE_FAIL:21]

[MISSING_PAGE_FAIL:22]

[MISSING_PAGE_FAIL:23]

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: See abstract and introduction. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: The limitations are discussed in Appendix D.1. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes]Justification: See Section 4 for assumptions and the detailed proof is provided in Appendix A.1. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: All the information needed to reproduce the main experimental results is added in Appendix B. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code**Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: They are enclosed in the supplemental material. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: The experiment settings are provided in Appendix B.5. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: See that Table 7-Table 11 report the standard deviation of experimental results. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: The detailed description is provided in Appendix B.5 and C.6. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: The research conducted in the paper conforms with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: Broader impacts are discussed in Appendix D.2. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: The paper poses no such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licensees for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [NA] Justification: The paper does not use existing assets. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset. * For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.

* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: The paper does not release new assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.