# BiSLS/SPS: Auto-tune Step Sizes for

Stable Bi-level Optimization

Chen Fan

University of British Columbia

Gaspard Chone-Ducasse

Ecole Normale Superieure

Mark Schmidt

Christos Thrampoulidis

University of British Columbia

###### Abstract

The popularity of bi-level optimization (BO) in deep learning has spurred a growing interest in studying gradient-based BO algorithms. However, existing algorithms involve two coupled learning rates that can be affected by approximation errors when computing hypergradients, making careful fine-tuning necessary to ensure fast convergence. To alleviate this issue, we investigate the use of recently proposed adaptive step-size methods, namely stochastic line search (SLS) and stochastic Polyak step size (SPS), for computing both the upper and lower-level learning rates. First, we revisit the use of SLS and SPS in single-level optimization without the additional interpolation condition that is typically assumed in prior works. For such settings, we investigate new variants of SLS and SPS that improve upon existing suggestions in the literature and are simpler to implement. Importantly, these two variants can be seen as special instances of general family of methods with an envelope-type step-size. This unified envelope strategy allows for the extension of the algorithms and their convergence guarantees to BO settings. Finally, our extensive experiments demonstrate that the new algorithms, which are available in both SGD and Adam versions, can find large learning rates with minimal tuning and converge faster than corresponding vanilla SGD or Adam BO algorithms that require fine-tuning.

## 1 Introduction

Bi-level optimization (BO) has found its applications in various fields of machine learning such as hyperparameter optimization [14; 17; 30; 40], adversarial training [51], data distillation [2; 53], neural architecture search [28; 39], neural-network pruning [52], and meta-learning [13; 37; 11]. Specifically, BO is used widely for problems that exhibit a hierarchical structure of the following form:

\[\min_{x\in X}F(x)=\mathbb{E}_{\phi}[f(x,y^{*}(x);\phi)]\qquad\text{s.t.}\qquad y ^{*}(x)=\operatorname*{argmin}_{y\in Y}\mathbb{E}_{\psi}[g(x,y;\psi)].\] (1)

Here, the solution to the lower-level objective \(g\) becomes the input to the upper-level objective \(f\), and in (1) the upper-level variable \(x\) is fixed when optimizing the lower-level variable \(y\). To solve such bi-level problems using gradient-based methods requires computing the hypergradient of \(F\), which based on the chain rule is given as [15]:

\[\nabla F(x)=\nabla_{x}f(x,y^{*}(x))-\nabla_{xy}^{2}g(x,y^{*}(x))[\nabla_{yy}^{ 2}g(x,y^{*}(x))]^{-1}\nabla_{y}f(x,y^{*}(x)).\] (2)

In practice, the closed-form solution \(y^{*}(x)\) can be difficult to obtain, and one strategy is to run a few steps of (stochastic) gradient descent on \(g\) with respect to \(y\) to get an approximation \(\bar{y}\), anduse \(\bar{y}\) in places of \(y^{*}(x)\). We denote the stochastic hypergradient based on \(\bar{y}\) as \(h_{f}(x,\bar{y})\) and the stochastic gradient of \(g\) with respect to \(y\) as \(h_{g}\). This leads to a general gradient-based framework for solving bi-level optimization [15; 19; 4]. At each iteration \(k\), run T (can be one or more) steps of SGD on \(y\) with a step size \(\beta\), \(y^{k,t+1}=y^{k,t}-\beta h_{g}^{k,t}\), then run one step on \(x\) using the approximated hypergradient:

\[x^{k+1}=x^{k}-\alpha h_{f}(x^{k},y^{k+1}),\quad\text{where}\quad y^{k+1}=y^{k, T}.\] (3)

Based on this framework, a series of stochastic algorithms have been developed to achieve the optimal or near-optimal rate of their deterministic counterparts [7; 8]. These algorithms can be broadly divided into single-loop (\(T=1\)) or double-loop (\(T>1\)) categories [23].

Unlike minimizing the single-level finite-sum (convex) problem

\[F(x):=\min_{x\in\mathcal{C}}\frac{1}{N}\sum_{i=1}^{N}f_{i}(x),\] (4)

where only one learning rate is involved when using SGD, bi-level optimization involves tuning both the lower and upper-level learning rates (\(\beta\) and \(\alpha\) respectively). This poses a significant challenge due to the potential correlation between these learning rates [19]. Thus, as observed in Figure 1, algorithm divergence can occur when either \(\alpha\) or \(\beta\) is large. While there is considerable literature on achieving faster rates in bi-level optimization [24; 5; 7; 8], only a few studies have focused on stabilizing its training and automating the tuning of \(\alpha\) and \(\beta\).

This work addresses the question: **Is it possible to utilize large \(\alpha\) and \(\beta\) without manual tuning?** In doing so, we explore the use of stochastic adaptive-step size methods, namely stochastic Polyak step size (SPS) and stochastic line search (SLS), which utilize gradient information to adjust the learning rate at each iteration [44; 29]. These methods have been demonstrated to perform well in interpolation settings with strong convergence guarantees [44; 29]. However, applying them to bi-level optimization (BO) introduces significant challenges, as follows. BO requires tuning two correlated learning rates (for lower and upper-level). The bias in the stochastic approximation of the hypergradient complicates the practical performance and convergence analysis of SLS and SPS. Other algorithmic challenges arise for both algorithms. For SLS, verifying the stochastic Armijo condition at the upper-level involves evaluating the objective at a new \((x,y^{*}(x))\) pair, while \(y^{*}(x)\) is only approximately known; For SPS, most existing variants guarantee good performance only in interpolating settings, which are typically not satisfied for the upper-level objective in BO [22]. Before presenting our solutions to the challenges above in Sec 2, we first review the most closely related literature.

### Related Work

Gradient-Based Bi-level OptimizationPenalty or gradient-based approaches have been used for solving bi-level optimization problems [10; 45; 21]. Here we focus our discussions on stochastic gradient-based methods as they are closely related to this work. For double-loop algorithms, an early work (BSA) by Ghadimi and Wang [15] has derived the sample complexity of \(\phi\) in achieving an \(\epsilon\)-stationary point to be \(\mathcal{O}(\epsilon^{-2})\), but require the number of lower-level steps to satisfy \(T\sim\mathcal{O}(\epsilon^{-1})\). Using a warm start strategy (stobeBiO), Ji et al. [22] removed this requirement on \(T\). However, to achieve the same sample complexity, the batch size of stocBiO grows as \(\mathcal{O}(\epsilon^{-1})\). Chen et al. [4] removed both requirements on \(T\) and batch size by using the smoothness properties of \(y^{*}(x)\) and setting the step sizes \(\alpha\) and \(\beta\) at the same scale. For single-loop algorithms, a pioneering work by Hong et al. [19] gave a sample complexity of \(\mathcal{O}(\epsilon^{-2.5})\), provided \(\alpha\) and \(\beta\) are on two different scales (TTSA). By making corrections to the \(y\) variable update (STABLE), Chen et al. [5] improved the rate to \(\mathcal{O}(\epsilon^{-2})\). However, extra matrix projections required by STABLE can incur high computation cost [5; 4]. By incorporating momentum into the updates of \(x\) and \(y\) (SUSTAIN), Khanduri et al.

Figure 1: Results based on hyper-representation learning task (see Sec 4 for details). Validation loss against upper-level iterations for different values of \(\beta\) (left, \(\alpha=0.005\)) and \(\alpha\) (right, \(\beta=0.01\)). Unless carefully tuned, vanilla SGD-based methods for BO are very unstable.

[24] further improved the rate to \(\mathcal{O}(\epsilon^{-1.5})\)[6]. Besides these single or double-loop algorithms, a series of works have drawn ideas from variance reduction to achieve faster convergence rates for BO. For example, Yang et al. [49] designed the VRBO algorithm based on SPIDER [12]. Dagreou et al. [7; 8] designed the SABA and SRBA algorithms based on SAGA and SARAH respectively, and demonstrate that they can achieve the optimal rate of \(\mathcal{O}(\epsilon^{-1})\)[9; 35]. Huang et al. [20] proposes to use Adam-type step sizes in BO. However, it introduces three sequences of learning rates \((\alpha_{k},\beta_{k},\eta_{k})\) that require tuning, which limits its practical usage. To our knowledge, none of these works have explicitly addressed the fundamental problem of how to select \(\alpha\) and \(\beta\) in bi-level optimization. In this work, we focus on the alternating SGD framework (T can be \(1\) or larger), and design efficient algorithms that find large \(\alpha\) and \(\beta\) without tuning, while ensuring the stability of training.

Adaptive Step SizeAdaptive step-size such as Adam has found great success in modern machine learning, and different variants have been proposed [25; 38; 47; 31; 32]. Here, we limit our discussions on two adaptive step sizes that are most relevant to this work. The Armijo line search is a classic way for finding step sizes for gradient descent [48]. Vaswani et al. [44] extends it to the stochastic setting (SLS) and demonstrates that the algorithm works well with minimal tuning required under interpolation, where the model fits the data perfectly. This method is adaptive to local smoothness of the objective, which is typically difficult to predict a priori. However, the theoretical guarantee of SLS in the non-interpolating regime is lacking. In fact, the results in Figure 3 suggest that SLS can perform poorly for convex losses when interpolation is not satisfied. Besides SLS, another adaptive method derived from the Polyak step size is proposed by Loizou et al. [29] with the name stochastic Polyak step size (SPS). Loizou et al. [29] further places an upper bound on the step size resulting in the SPS\({}_{\max}\) variant. Similar to SLS, the algorithm performs well when the model is over-parametrized. Without interpolation, the algorithm converges to a neighborhood of the solution whose size depends on this upper bound.

In a later work, Orvieto et al. [36] make the SPS converge to the exact solution by ensuring the step size and its upper bound are both non-increasing (DecSPS ). However, enforcing monotonicity may result in the step size being smaller than decaying-step SGD and losing the adaptive features of SPS (see Figure 2, 3). In this work, we propose new versions of SLS and SPS that do not require monotonicity and extend them into the alternating SGD bi-level optimization framework (3).

Figure 2: Experiments on quadratic functions adapted from [29]. The objective is the sum of two-dimensional functions \(f_{i}=\frac{1}{2}(x-x_{i}^{*})^{T}H_{i}(x-x_{i}^{*})\), where \(H_{i}\) is positive definite and \(i=1,2\) (see Appendix B for more details). From left to right, we show: the objective value, distance to optimum, step size, and iterate trajectories.

## 2 Summary of Contributions

We discuss our main contributions in this section, which is organized as follows. First, we discuss our variants of SPS and SLS, and unify them under the umbrella of "envelope-type step-size". Then, we extend the envelope-type step size to the bi-level setting. Finally, we discuss our bi-level line-search algorithms based on Adam and SGD.

Converging SPSB and SLSB by Envelope ApproachWe first propose simple variants of SLS and SPS that converge in the non-interpolating setting while not requiring the step size to be monotonic. To this end, we introduce a new stochastic Polyak step size (SPSB). For comparison, we also recall the step-sizes of SPS\({}_{\max}\) and DecSPS. For all methods, the iterate updates are given as \(x_{k+1}=x_{k}-\gamma_{k}\nabla f_{i_{k}}(x^{k})\) where \(i_{k}\) is sampled uniformly from \([n]=\{1,\ldots,n\}\) at each iteration \(k\). The step-sizes \(\gamma_{k}\) are then defined as follows:

\[\text{SPS}_{\max}\] (29): \[\gamma_{k}=\min\{\frac{f_{i_{k}}(x^{k})-f_{i_{k}}^{*}}{c\|\nabla f _{i_{k}}(x^{k})\|^{2}},\gamma_{b,0}\}\] (5) \[\text{DecSPS}\] (30): \[\gamma_{0}=\bar{\gamma}\quad\gamma_{k}=\frac{1}{c_{k}}\min\{ \frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{*}}{\|\nabla f_{i_{k}}(x^{k})\|^{2}},c_{k-1 }\gamma_{k-1}\}\quad\forall k\geq 1\] (6) \[\text{\bf SPSB (ours):}\quad\gamma_{k}=\min\{\frac{f_{i_{k}}(x^{k})-l _{i_{k}}^{*}}{c_{k}\|\nabla f_{i_{k}}(x^{k})\|^{2}},\gamma_{b,k}\},\] (7)

where \(f_{i}^{*}=\inf_{x}f_{i}(x)\), \(\bar{\gamma}=\frac{1}{c_{0}}\min\{\frac{f_{i_{0}}(x^{0})-l_{i_{0}}^{*}}{\| \nabla f_{i_{0}}(x^{0})\|^{2}},c_{0}\gamma_{b,0}\}\), \(c_{k}\) is non-decreasing, \(\gamma_{b,k}\) is non-increasing, and \(l_{i}^{*}\leq f_{i}^{*}\) is any lower bound.

Unlike SPS\({}_{\max}\) in which \(\gamma_{b,0}\) is a constant, our upper bound \(\gamma_{b,k}\) is non-increasing. Also, unlike DecSPS in which both the step size and the upper bound are non-increasing (this is because \(\gamma_{k}\leq\frac{c_{k-1}}{c_{k}}\gamma_{k-1}\) and \(\min\{\frac{1}{2c_{k-1}},\frac{c_{0}\gamma_{b,0}}{c_{k}}\}\leq\gamma_{k}\leq \frac{c_{0}\gamma_{b,0}}{c_{0}}\)[36, Lemma 1]), we simplify the recursive structure and do not require the step-size to be monotonic. As we empirically observe in Figure 3, the step size of DecSPS is similar to that of decaying SGD and in fact can be much smaller. Interestingly, the resulting performance of DecSPS is worse than SPS\({}_{\max}\) despite SPS\({}_{\max}\) eventually becoming unstable once the iterates get closer to the neighborhood of a solution and the step-size naturally behaves erratically. This is not unexpected due to small gradient norms (note the division by gradient-norm in (5)) and dissimilarity between samples in the non-interpolating scenario. Moreover, note that the adaptivity of SPS in the early stage seems to be lost in DecSPS due to the monotonicity of the latter. On the other hand, SPSB not only takes advantage of the large SPS steps that leads to fast convergence, but also stays regularized due to the non-increasing upper bound \(\gamma_{b,k}\) in (19). These observations are further supported by the experiments on quadratic functions given in Figure 2, where we observe the fast convergence of SPSB and the instability of SPS\({}_{\max}\). Furthermore, SPSB is significantly more robust to the choice of \(\gamma_{b,0}\) than decaying-step SGD as shown by Figure 2(a). Motivated by the good practical performance of SPSB, we take a similar approach for SLS. The

Figure 3: Binary linear classification on w8a dataset using logistic loss [3]. (a) Minimum loss of decaying-step SGD and SPSB for different \(\gamma_{b,0}\)’s. (b)(c) Train loss and step size against iterations, respectively. We choose \(c=1\) and \(\bar{c}=1\) for SPS\({}_{\max}\) and SLS respectively; \(c_{k}=\sqrt{k+1}\) for DecSPS ; \(c_{k}=1\) and \(\gamma_{b,k}=\frac{\gamma_{b,0}}{\sqrt{k+1}}\) for SPSB ; \(\bar{c}=0.1\) and \(\gamma_{b,k}=\frac{\gamma_{b,0}}{\sqrt{k+1}}\) for SLSB ; \(\gamma_{b,k}=\frac{\gamma_{b,0}}{\sqrt{k+1}}\) for decaying-step SGD. For (b) and (c), we set \(\gamma_{b,0}=1000\) for all algorithms.

SLS proposed and analyzed by Vaswani et al. [44] starts with \(\gamma_{b,0}\) and in each iteration \(k\) finds the largest \(\gamma_{k}\leq\gamma_{b,0}\) that satisfies:

\[f_{i_{k}}(x_{k}-\gamma_{k}\nabla f_{i_{k}}(x_{k}))\leq f_{i_{k}}(x_{k})-\bar{c} \cdot\gamma_{k}\|\nabla f_{i_{k}}(x_{k})\|^{2},\quad 0<\bar{c}<1.\] (8)

To ensure its convergence without interpolation, we replace \(\gamma_{b,0}\) with appropriate non-increasing sequence \(\gamma_{b,k}\). We name this variant of SLS as SLSB. Interestingly, the empirical performance and step size of SLSB are similar to those of SPSB (see Figure 3). This can be explained by observing that the step sizes of SPSB and SLSB share similar envelope structures, as follows (see Lemma 1 in Appendix A):

\[\text{SPSB}: \min\{\frac{1}{2cL_{\max}},\gamma_{b,k}\}\leq\gamma_{k}=\min\{ \frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{*}}{c\|\nabla f_{i_{k}}(x^{k})\|^{2}},\gamma _{b,k}\},\quad 0<c,\] \[\text{SLSB}: \min\{\frac{2(1-\bar{c})}{L_{\max}},\gamma_{b,k}\}\leq\gamma_{k} \leq\min\{\frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{*}}{c\|\nabla f_{i_{k}}(x^{k})\|^{ 2}},\gamma_{b,k}\},\quad 0<\bar{c}<1.\]

Therefore, we unify their analysis based on the following generic _envelope-type step size_:

\[\gamma_{k}=\min\{\max\{\gamma_{l,k},\tilde{\gamma}_{k}\},\gamma_{b,k}\},\quad \gamma_{l,k}=\min\{w,\gamma_{b,k}\},\] (9)

where \(\omega>0\), \(\gamma_{b,k}\) is non-increasing, and \(\tilde{\gamma}_{k}\) satisfies \(\gamma_{l,k}:=\min\{\omega,\gamma_{b,k}\}\leq\tilde{\gamma}_{k}\leq\gamma_{b,k}\). We show that this envelope-type step size converges at a rate \(\mathcal{O}(\frac{1}{\sqrt{K}})\) and \(\mathcal{O}(\frac{1}{K})\) for convex and strongly-convex losses respectively.

Envelope Step Size for Bi-level Optimization (BiSPS)We extend the use of envelope-type step sizes to the bi-level setting. The step sizes for upper and lower-level objectives of our general envelope-type method are:

\[\text{Upper: }\alpha_{k}=\min\{\max\{\alpha_{l,k},\tilde{ \alpha}_{k}\},\alpha_{b,k}\}\quad\text{hence}\quad\alpha_{l,k}\leq\tilde{ \alpha}_{k}\leq\alpha_{b,k}\] (10) \[\text{Lower: }\beta_{k,t}=\min\{\frac{g(x^{k},y^{k,t};\psi)-g(x^{k},y _{x^{k},\psi}^{*};\psi)}{p\|\nabla_{y}g(x^{k},y^{k,t};\psi)\|^{2}},\beta_{b,k} \}\quad\forall t,\] (11)

where \(y_{x^{k},\psi}^{*}\) is the minimizer of the function \(g(x^{k},\cdot;\psi)\), and \(\alpha_{l,k}\), \(\alpha_{b,k}\), and \(\beta_{b,k}\) are three non-increasing sequences. Note that \(\beta_{b,k}\) is fixed over the lower-level iterations for a given \(k\), therefore this is equivalent to running \(T\) steps of \(\text{SPS}_{\max}\) to minimize the function \(g\) at each upper iteration \(k\). However, the decrease in the upper bound \(\beta_{b,k}\) with \(k\) is crucial to guarantee the overall convergence of the algorithm (see Theorem 3). Starting from the general step-size rules in (10) and (11), our bi-level extension of SPS (BiSPS) follows by setting \(\alpha_{k}\) in the form of SPS computed using stochastic hypergradient \(h_{f}^{k}\). That is,

\[\bar{\alpha}_{k}=\frac{f(x^{k},y^{k+1};\phi)-l_{f(\cdot,y^{k+1}; \phi)}^{*}}{p\|h_{f}^{k}\|^{2}},\quad\alpha_{l,k}=\frac{\alpha_{l,0}}{\sqrt{k+ 1}},\quad\alpha_{b,k}=\frac{\alpha_{b,0}}{\sqrt{k+1}},\] (12)

where \(\alpha_{l,0}\leq\alpha_{b,0}\) and \(l_{f(\cdot,y^{k+1};\phi)}^{*}\) is a lower bound for \(\inf_{x}f(x,y^{k+1};\phi)\). For computing \(h_{f}^{k}\), we can take a similar approach as previous works [15, 19, 4] that use a Neumann series approximation

\[h_{f}^{k}=\nabla_{x}f(x^{k},y^{k+1};\phi)-\nabla_{xy}g(x^{k},y^{k+1};\psi_{0}) \big{[}\frac{1}{L_{g}}\prod_{j=1}^{\bar{N}}(I-\nabla_{yy}^{2}g(x^{k},y^{k+1}; \psi_{j}))\big{]}\nabla_{y}f(x^{k},y^{k+1};\phi),\] (13)

where \(\bar{N}\) is sampled uniformly from \([N]\) and \(N\) is the total number of samples. For BiSPS, we use the same sample for \(f(x^{k},y^{k+1};\phi)\) and \(\nabla_{x}f(x^{k},y^{k+1};\phi)\) when evaluating \(\bar{\alpha}_{k}\) in (12). Interestingly, we also empirically observe that using independent samples for computing \(\bar{\alpha}_{k}\) and \(h_{f}^{k}\) results in similar performance as using the same sample. The optimal rate of SGD for non-convex bi-level optimization is \(\mathcal{O}(\frac{1}{\sqrt{K}})\) without a growing batch size [4]. We show that BiSPS can obtain the same rate (see Theorem 3) by taking the envelope-type step-size of the form (10) and (11). We implement BiSPS according to (12) and observe that it has better performances over decaying-step SGD with less variations across different values of \(\alpha_{b,0}\) (see Figure 4 and note that decaying-step SGD is of the form \(\frac{\alpha_{b,0}}{\sqrt{k+1}}\)).

Stochastic Line-Search Algorithms for Bi-level OptimizationThe challenge of extending SLS to bi-level optimization is rooted in the term \(y^{*}(x)\). In fact, we realize that some of the bi-level objectives are of the form \(F(x)=f(y^{*}(x))\). That is, \(f\) does not have an explicit dependence on \(x\) as in the data hyper-cleaning task [22]. This implies that when SLS takes a potential step on \(x\), the approximation of \(y^{*}(x)\) (i.e, \(\bar{y}(x)\)) also needs to be updated, otherwise there is no change in function values. Moreover, the use of approximation \(\bar{y}(x)\) and the stochastic estimation error in hypergradient would not gaurantee a step size can be always found. To this end, we modify the Armijo line-search rule to be:

\[\begin{split}\text{BiSLS-SGD:}&\quad f\big{(}x^{k }-\alpha_{k}h_{f}^{k},\hat{y}^{k+1}(x^{k}-\alpha_{k}h_{f}^{k})\big{)}\leq f(x^ {k},y^{k+1})-p\alpha_{k}\|h_{f}^{k}\|^{2}+\delta,\\ \text{BiSLS-Adam:}&\quad f\big{(}x^{k}-\alpha_{k}A_{ k}^{-1}h_{f}^{k},\hat{y}^{k+1}(x^{k}-\alpha_{k}A_{k}^{-1}h_{f}^{k})\big{)}\leq f(x^ {k},y^{k+1})-p\alpha_{k}\|h_{f}^{k}\|^{2}_{A_{k}^{-1}}+\delta,\end{split}\] (14)

where \(p,\delta>0\) and \(A_{k}\) is a positive definite matrix such that \(A_{k}^{2}=G_{k}\).

Similar to the single-level Adam case, the matrix \(G_{k}\) in the bi-level setting is defined as \(G_{k}=(\beta_{2}G_{k-1}+(1-\beta_{2})\operatorname{diag}(h_{f}^{k}{h_{f}^{k}}^ {T}))/(1-\beta_{2}^{k})\)[25, 43]. Moreover, BiSLS-Adam takes the following steps for updating the variable \(x\): \(x^{k+1}=x^{k}-\alpha_{k}A_{k}^{-1}m_{k}\) where \(m^{k+1}=\beta_{1}m^{k}-(1-\beta_{1})h_{f}^{k}\). The details are given in Algorithms 1 and 2. We denote the search starting point for the upper-level as \(\alpha_{b,k}\) at iteration \(k\), and denote it as \(\beta_{b,k}^{!}\) at step \(t\) within iteration \(k\) for the lower-level. We remark the following key benefits of resetting \(\alpha_{b,k}\) and \(\beta_{b,k}^{!}\) (by using Algorithm 2) to larger values with reference to \(\alpha_{k}\) and \(\beta_{k}^{!}\) (respectively) at each step: (1) we avoid always searching from \(\alpha_{b,0}\) or \(\beta_{b,0}^{0}\), thus reducing computation cost and (2) preserving an overall non-increasing (not necessarily monotonic) trend for \(\alpha_{b,k}\) and \(\beta_{b,k}^{!}\) (improving training stability). We found that different values of \(\eta\) all give good empirical performances (see Appendix B). The key algorithmic challenge we are facing is that during the backtracking process, for any candidate \(\alpha_{k}\), we need to compute \(\hat{x}^{k}:=x^{k}-\alpha_{k}h_{f}^{k}\) and approximate \(y^{*}(\hat{x}^{k})\) with \(\hat{y}^{k+1}\) (see Algorithm 1). To limit the cost induced by this nested loop, we limit the number of steps to obtain \(\hat{y}^{k+1}\) to be 1.

Moreover, \(\delta\) in (14) plays the role of a safeguard that ensures a step size can be found. We set \(\delta\) to be small to avoid finding unrealistically large learning rates while tolerating some error in the

Figure 4: Results on data distillation experiments adapted from Lorraine et al. [30] (see Sec 4 for details). We compare BiSPS and decaying-step SGD for different values of \(\alpha_{b,0}\) where Hessian inverse in (2) is computed based on the Identity matrix (left) or Neumann series (right). The lower-level learning rate is fixed at \(10^{-4}\).

Figure 5: Results on hyper-representation learning task (see Sec 4 for details). (a) Validation loss against upper-level iterations for comparing BiSLS-Adam/SGD to fine-tuned Adam/SGD. (b)(c) Upper (left) and lower-level (right) learning rates found by BiSLS-Adam. For the fine-tuned Adam, the optimal lower and upper-level learning rates are \(\mathcal{O}(1)\) and \(\mathcal{O}(10^{-4})\), respectively. BiSLS-Adam outperforms fine-tuned Adam/SGD with a starting point that is \(5\) orders of magnitude larger than the optimal step size.

hypergradient estimation (see Appendix B for experiments on the sensitivity of \(\delta\)). In practice, we found that simply setting \(\delta=0\) works well. In Figure 4(a), we observe that BiSLS-Adam outperforms fine-tuned Adam or SGD. Surprisingly, its training is stable even when the search starting point \(\alpha_{b,0}\) is \(5\) orders of magnitude larger than a fine-tuned learning rate (\(\mathcal{O}(10^{-4})\)). Importantly, BiSLS-Adam finds large upper and lower-level learning rates in early phase (see Figure 4(b), 4(c)) for different values of \(\alpha_{b,0}\) and \(\beta_{b,0}\) that span \(3\) orders of magnitudes. Interestingly, the learning rates naturally decay with training (also see Figure 4(c) and 4(d)). In essence, BiSLS is a **truly adaptive (no knowledge of initialization required) and robust (different initialization works) method that finds large \(\alpha\) and \(\beta\) without tuning**. In the next section, we give the convergence results of the envelope-type step size.

## 3 Convergence Results

### Envelope-type step size for single-level optimization

We first state the assumptions, which are standard in the literature, that will be used for analyzing single-level problems. Assumption 1 is on the Lipschitz continuity of \(f\) and \(f_{i}\) in Problem 4.

**Assumption 1**.: _The individual function \(f_{i}\) is convex and \(L_{i}\)-smooth such that \(\|\nabla f_{i}(x)-\nabla f_{i}(x^{\prime})\|\leq L_{i}\|x-x^{\prime}\|,\forall i,\forall x\in\operatorname{dom}f\) and the overall function \(f\) is \(L\)-smooth. We denote \(L_{\max}\triangleq\max_{i}L_{i}\). Furthermore, we assume there exists \(l_{i}^{*}\) such that \(l_{i}^{*}\leq f_{i}^{*}:=\inf_{x}f_{i}(x),\forall i\), and \(f\) is lower bounded by \(f^{*}\) obtained by some \(x^{*}\) such that \(f^{*}=f(x^{*})\)._

The following bounded gradient assumption is also used in the analysis of convex problems [41; 33].

**Assumption 2**.: _There exists \(G>0\) such that \(\|\nabla f_{i}(x)\|^{2}\leq G,\forall i\)._

We first state the theorem for the envelope-type step size defined in (9) for convex functions.

**Theorem 1**.: _Suppose Assumption 1, 2 hold, each \(f_{i}\) is convex, \(C=\operatorname{dom}f\), \(\gamma_{k}\) is independent of the sample \(\nabla f_{k}(x^{k})\), and choose \(\gamma_{b,k}=\frac{\gamma_{b,0}}{\sqrt{k+1}}\). Then, the envelope-type step size in (9) achieves the following rate,_

\[\mathbb{E}[f(\bar{x}^{K})-f(x^{*})]\leq\frac{\|x^{0}-x^{*}\|^{2}}{2\gamma_{l, K-1}K}+\frac{\gamma_{b,0}^{2}G^{2}\log(K)}{2\gamma_{l,K-1}K},\]

_where \(\gamma_{l,K-1}=\min\{\omega,\frac{\gamma_{b,0}}{\sqrt{K}}\}\) and \(\bar{x}^{K}=\frac{1}{K}\sum_{k=0}^{K}x^{k}\)._

We were not able to give a convergence result that uses the same sample for computing the step size and the gradient. However, we empirically observe that the performance is similar when using either one or two independent samples per iteration (see Figure 2 and Appendix B). When two independent samples \(i_{k}\) and \(j_{k}\) are used per iteration, the first computes the gradient sample \(\nabla f_{i_{k}}(x^{k})\), and the other computes the step-size \(\gamma_{k}\). For example, for SPSB this gives \(\gamma_{k}=\min\{\frac{f_{j_{k}}(x^{k})-l_{j_{k}}^{*}}{c_{k}\|\nabla f_{j_{k}} (x^{k})\|^{2}},\gamma_{b,k}\}\). This type of assumption has been used in several other works for analyzing adaptive step sizes [27; 44; 29]. Under this assumption, we specialize the results of Theorem 1 to SPSB and SLSB, where \(\gamma_{l,K-1}=\min\{\frac{1}{2cL_{\max}},\frac{\gamma_{b,0}}{\sqrt{K}}\}\) and \(\gamma_{l,K-1}=\min\{\frac{2(1-\bar{c})}{L_{\max}},\frac{\gamma_{b,0}}{\sqrt{K}}\}\) respectively. Concretely, for \(K\geq\gamma_{b,0}^{2}L_{\max}^{2}\), SLSB and SPSB with \(\gamma_{b,k}=\frac{\gamma_{b,0}}{\sqrt{k+1}}\) and \(c=\bar{c}=\frac{1}{2}\) achieve the following rate: \(\mathbb{E}[f(\bar{x}^{K})-f(x^{*})]\leq\frac{\|x^{0}-x^{*}\|^{2}}{2\gamma_{b,0}\sqrt{K}}+\frac{\gamma_{b,0}G^{2}\log(K)}{2\sqrt{K}}\). Next, we state the result for the envelop-type step size when \(f\) is \(\mu\)-strongly convex.

**Theorem 2**.: _Suppose a \(\mu\)-strongly convex function \(f\) satisfying Assumptions 1 and 2, assume \(\mathcal{C}\) is a closed and convex set, and \(\gamma_{k}\) is independent of the sample \(\nabla f_{k}(x^{k})\). Then an envelope-type step size as in (9) with \(\gamma_{b,k}=\frac{\gamma_{b,0}}{k+1}\), \(\gamma_{b,0}\geq\frac{1}{\mu}\), and \(\omega\mu<1\) achieves the following rate_

\[\mathbb{E}[f(\bar{x}_{K})-f(x^{*})]\leq\frac{\mu k_{0}}{2(K-k_{0})}\big{(}e^{- k_{0}\mu\omega}\|x_{0}-x^{*}\|^{2}+\gamma_{b,0}^{2}G^{2}\big{)}+\frac{\gamma_{b,0}G^{ 2}\log K}{2(K-k_{0})},\]

_where \(\bar{x}_{K}=\frac{1}{K-k_{0}}\sum_{k=k_{0}}^{K-1}x^{k}\) and \(k_{0}=\max\{1,\lceil\gamma_{b,0}/\omega\rceil-1\}\)._We can again apply the result of Theorem 2 to SPSB and SLSB with \(\gamma_{b,k}=\frac{\gamma_{b,0}}{k}\), \(\gamma_{b,0}\geq\frac{1}{\mu}\), \(\omega=1/L_{\max}\), and \(c=\bar{c}=\frac{1}{2}\) to get an explicit rate: \(\mathbb{E}[f(\bar{x}_{K})-f(x^{*})]\leq\frac{\mu k_{0}}{2(K-k_{0})}(e^{\frac{- k_{0}}{k_{\max}}}\|x_{0}-x^{*}\|^{2}+\gamma_{b,0}^{2}G^{2})+\frac{\gamma_{b,0}G^{2} \log K}{2(K-k_{0})}\), where \(k_{0}=\max\{1,\lceil\gamma_{b,0}L_{\max}\rceil-1\}\).

**Remark 1**.: _Under the envelop-type step size framework and the assumption of two independent samples, SLSB and SPSB share the same convergence rates of \(\mathcal{O}(\frac{1}{\sqrt{K}})\) and \(\mathcal{O}(\frac{1}{K})\) as SGD with decaying step-size for convex and strongly-convex losses respectively. For the latter, a projection operation is required to stay in the closed and convex set \(\mathcal{C}\). These rates are not surprising because of the structure of the envelope step-size in (9). Indeed, the proof is similar to the standard proof of analogous rate for SGD with decaying step-size. Nonetheless, we include it here for completeness._

### Envelope-type step size for bi-level optimization

We start with recalling standard assumptions in BO [22; 19; 15; 4]. We denote \(z=[x;y]\) and recall the bi-level problem in (1). The first assumption is on the lower-level objective \(g\).

**Assumption 3**.: _The function \(g(x,y)\) is \(\mu_{g}\) strongly convex in \(y\) for any given \(x\). Moreover, \(\nabla g\) is Lipschitz continuous: \(\|\nabla g(x_{1},y_{1})-\nabla g(x_{2},y_{2})\|\leq L_{g}\|z_{1}-z_{2}\|\) (also assume that this holds true for each sampled function \(g(x,y;\psi)\)), and \(\nabla^{2}g\) is Lipschitz continuous: \(\|\nabla^{2}g(x_{1},y_{1})-\nabla^{2}g(x_{2},y_{2})\|\leq L_{G}\|z_{1}-z_{2}\|\). We further assume that \(\|\nabla_{xy}^{2}g(x,y)\|\leq C_{g}\), and the condition number is defined as \(\kappa=\frac{L_{g}}{\mu_{g}}\)._

Next, we state the assumptions on the upper objective \(f\).

**Assumption 4**.: _The function \(f\) and its gradients are Lipschitz continuous. That is: \(\|f(x_{1},y_{1})-f(x_{2},y_{2})\|\leq L_{1}\|z_{1}-z_{2}\|\) and \(\|\nabla f(x_{1},y_{1})-\nabla f(x_{2},y_{2})\|\leq L_{f,1}\|z_{1}-z_{2}\|\). We also assume that \(\|\nabla_{y}f(x,y)\|\leq C_{f}\)._

Furthermore, we make the following standard assumptions on the estimates of \(\nabla f\), \(\nabla g\), and \(\nabla^{2}g\).

**Assumption 5**.: _The stochastic gradients are unbiased: \(\mathbb{E}_{\phi}[\nabla f(x,y;\phi)]=\nabla f(x,y)\), \(\mathbb{E}_{\psi}[\nabla g(x,y;\psi)]=\nabla g(x,y)\), and \(\mathbb{E}_{\psi}[\nabla^{2}g(x,y;\psi)]=\nabla^{2}g(x,y)\). The variances of \(\nabla f(x,y;\phi)\) and \(\nabla^{2}g(x,y;\psi)]\) are bounded: \(\mathbb{E}_{\phi}[\|\nabla f(x,y;\phi)-\nabla f(x,y)\|^{2}]\leq\sigma_{f}^{2}\) and \(\mathbb{E}_{\psi}[\|\nabla^{2}g(x,y;\psi)-\nabla^{2}g(x,y)\|^{2}]\leq\sigma_{G} ^{2}\)._

Finally, we introduce the bounded optimal function value assumption in (15), which is used specifically for analyzing step size of the form (11) in the bi-level setting:

\[\mathbb{E}_{\psi}[g(x,y^{*}(x);\psi)-g(x,y_{x,\psi}^{*};\psi)] \leq\sigma_{g}^{2},\forall x,\] (15) \[\mathbb{E}[\|\nabla_{y}g(x,y)-\nabla_{y}g(x,y;\phi)\|^{2}]\leq \sigma_{g}^{2},\forall x,y,\] (16)

where \(y^{*}(x)=\min_{y}g(x,y)\) and \(y_{x,\psi}^{*}=\min_{y}g(x,y;\psi)\) for a given \(x\) (recall that at any iteration \(k\), the lower-level steps in BiSPS are \(\text{SPS}_{\max}\) with an upper bound \(\beta_{b,k}\); furthermore, \(\beta_{b,k}\) is non-increasing w.r.t. upper iteration \(k\)). The one-variable analogous assumption of (15) has been used in the analysis of \(\text{SPS}_{\max}\)[29]. Here, we extend it to a two-variable function. Unlike the bounded variance assumption (16), which needs to hold true for all \(x\) and \(y\), we require (15) to hold at \(y^{*}(x)\) for any given \(x\). As mentioned previously, the closed form solution \(y^{*}(x)\) is difficult to obtain. Thus, we define the following expression by replacing \(y^{*}(x)\) with \(y\) in (2):

\[\bar{\nabla}f(x,y)=\nabla_{x}f(x,y)-\nabla_{xy}^{2}g(x,y)[\nabla_{yy}^{2}g(x,y) ]^{-1}\nabla_{y}f(x,y).\] (17)

A stochastic Neumann series in (13) approximates (17) with \(x\) and \(y\) being \(x^{k}\) and \(y^{k+1}\) (respectively), also recall that \(y^{k+1}\) is an approximation of \(y^{*}(x^{k})\) by running \(T\) lower-level SGD steps to minimize \(g\) w.r.t. \(y\) for a fixed \(x^{k}\). Based on Assumptions 3, 4, and 5, we have the following results to be used in the analysis [15]: \(\|\nabla F(x_{1})-\nabla F(x_{2})\|\leq L_{F}\|x_{1}-x_{2}\|\), \(\|y^{*}(x_{1})-y^{*}(x_{2})\|\leq L_{y}\|x_{1}-x_{2}\|\), and \(\|\bar{\nabla}f(x,y^{*}(x))-\bar{\nabla}f(x,y)\|\leq L_{f}\|y^{*}(x)-y\|\). Furthermore, the bias in the stochastic hypergradient in (13) (denoted as \(B\)) decays exponentially with \(N\) and its variance is bounded, i.e. \(\mathbb{E}[\|h_{f}^{k}-\mathbb{E}[h_{f}^{k}]\|^{2}]\leq\tilde{\sigma}_{f}^{2}\) (see Appendix A for details) [19].

Now, we state our main theorem based on step size of the form (10) and (11).

**Theorem 3**.: _Suppose \(f\) and \(g\) satisfy Assumptions 3, 4, and 5, learning-rate upper bounds \(\alpha_{b,k}=\frac{\alpha_{b,0}}{\sqrt{k+1}}\) and \(\alpha_{l,k}=\frac{\alpha_{l,0}}{\sqrt{k+1}}\) with \(\alpha_{b,0}\) and \(\alpha_{l,0}\) satisfying \(\frac{1}{L_{F}+4L_{y}^{2}}\geq\frac{\alpha_{b,0}^{2}}{\alpha_{l,0}}\) and \(\alpha_{l,0}\leq\alpha_{b,0}\). Further assume that \(\alpha_{k}\) is independent of the stochastic hypergradient \(h_{I}^{k}\), and each sampled function \(g(x,y;\psi)\) is convex. Then under the Assumption (15) with \(p\geq\frac{1}{2}\), \(C_{k}=\min\{\frac{1}{2pL_{g}},\beta_{b,k}\}\), \(T\geq\frac{\log(\alpha_{b,0}L_{f}^{2}+2)}{-\log(1-\mu_{g}C_{K-1})}\), and \(\beta_{b,k}=\frac{\beta_{b,0}}{k+1}\). BiSPS achieves the rate:_

\[\frac{1}{K}\sum_{k=0}^{K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]\leq\tilde{ \mathcal{O}}(\frac{\kappa^{3}}{\sqrt{K}}+\frac{\kappa^{2}\log K}{\sqrt{K}}).\] (18)

**Remark 2**.: _We further give the convergence result under the bounded variance assumption (16) in Appendix A. Theorem 3 shows that BiSPS matches the optimal rate of SGD up to a logarithmic factor without a growing batch size. We notice that the assumption (15) largely simplifies the expression on \(T\) and does not require an explicit upper bound on \(\beta_{b,0}\). As in the single-level case, whether using one sample or two samples (which makes upper-level step-size independent of gradient) gives similar empirical performances (see Appendix B). Note that the independence assumption is only needed for the upper-level. Thus, the two-sample requirement of theorem does not apply to the lower-level problem. This is useful from computational standpoint as typical bi-level algorithms run multiple lower-level updates for each upper-level iteration._

## 4 Additional Hyper-Representation and Data Distillation Experiments

**Hyper-representation learning:** The experiments are performed on MNIST dataset using LeNet [26; 42]. We use conjugate gradient method for solving system of equations when computing the hypergradient [17]. The upper and lower-level objectives are to optimize the embedding layers and the classifier (i.e. the last layer of the neural net), respectively (see Appendix B for details). For constant-step SGD and Adam, we tune the lower-level learning rate \(\beta\in\{10.0,5.0,1.0,0.5,0.1,0.05,0.01\}\). For the upper-level learning rate, we tune \(\alpha\in\{0.001,0.0025,0.005,0.01,0.05,0.1\}\) for SGD, and \(\alpha\in\{10^{-5},5\cdot 10^{-5},10^{-4},5\cdot 10^{-4},0.001,0.01\}\) for Adam (recall that \(\delta\) in (14) is set to \(0\)). Based on the results of Figure 6, we make the following key observations: **1 line-search at the upper-level is essential for achieving the optimal performance (Figure 6a); 2 BiSLS-Adam/SGD not only converges fast but also generalizes well (Figure 6b); 3 BiSLS-Adam/SGD is highly robust to search starting points \(\alpha_{b,0}\) and \(\beta_{b,0}\) (Figure 6c, 6d). It addresses the fundamental question of how to tune \(\alpha\) and \(\beta\) in bi-level optimization** (see Appendix B for additional results on search cost).

Search cost and run-time comparison:The search cost of reset option 1 in Algorithm 2 for BiSLS-SGD and BiSLS-Adam is \(89\pm 15\) and \(115\pm 16\) per iteration, respectively, measured in the number of condition-checking via (14). These costs are significantly reduced when option 3 is used. Concretely, Figure 7b suggests that choosing \(\eta=2\) in option 3 results in \(\sim 9\) evaluations of (14) per iteration for both BiSLS-Adam and BiSLS-SGD. Choosing \(\eta=1\) in reset option 3 is equivalent to reset option 2, which further cuts down the cost to \(\sim 4\). However, this choice forces the learning rate to be monotonically-decreasing, which leads to a slower convergence compared to other \(\eta\)'s (see Appendix B for more details). Besides this, Figure 7a shows that a single step for

Figure 6: Validation loss (a) and accuracy (b) against iterations. (a) Comparisons between whether to use or not use line-search at the upper or lower level; (b) Generalization performance of BiSLS-Adam/SGD and fine-tuned Adam/SGD; (c) Validation loss against iterations for different values of \(\alpha_{b,0}\) (\(\beta_{b,0}\) fixed at \(100\)). (d) Same plot as (c) but for different values of \(\beta_{b,0}\) (\(\alpha_{b,0}\) fixed at \(10\)).

approximating the \(y^{*}(x)\) in (14) is sufficient, considering the trade-off between performance gain and extra computation overhead introduced. Most importantly, BiSPS-Adam takes less time to reach a threshold test accuracy than fine-tuned Adam (Figure 6(c)) due to a suitable (and potentially large) learning rate found using (14) (note that Figure 6(c) excludes the cost of tuning the learning rate of Adam).

**Data distillation:** The goal of data distillation is to generate a small set of synthetic data from an original dataset that preserves the performance of a model when trained using the generated data [46; 50]. We adapted the experiment set up from Lorraine et al. [30] to distill MNIST digits. We present the results in Figure 8, where we observe that BiSLS-SGD converges significantly faster than fine-tuned Adam or SGD, and generate realistic MNIST images (see Appendix B for more results).

## 5 Conclusion

In this work, we have given simple alternatives to SLS and SPS that show good empirical performance in non-interpolating scenario without requiring the step size to be monotonic. We unify their analysis based on a simplified envelope-type step size, and extend the analysis to the bi-level setting while designing a SPS-based bi-level algorithm. In the end, we propose bi-level line-search algorithm BiSLS-Adam/SGD that is empirically truly robust and adaptive to learning rate initialization. Our work opens several possible future directions. Given the superior performance of BiSLS, we prioritize an analysis of its convergence rates. The difficulty stems from: (a) the bias in hypergradient estimation; (b) the dual updates in \(x\) and \(y^{*}(x)\) (incurring nested loop structures); (c) the error in estimating \(y^{*}(x)\). On single-level optimization, we remark as an important direction to relax the two-sample assumption on SPSB /SLSB. Ultimately, we hope to promote further research on bi-level optimization algorithms with minimal tuning.

Figure 8: (a)(b): Comparison between BiSLS-SGD and Adam/SGD for Data Distillation on MNIST dataset. Validation loss plotted against iterations. (a) Hypergradient computed using Neumann series; (b) Inverse Hessian in (2) treated as the Identity [30] when computing the hypergradient; (c) Distilled MNIST images after 3000 iterations of BiSLS-SGD.

Figure 7: (a) Validation accuracy and run time (in seconds) against different number of gradient steps for approximating \(y^{*}(x)\) in (14). (b) Search cost (i.e. number of evaluations of (14) per iteration) against different \(\eta\)’s for reset option 3 in Algorithm 2. (c) Run time (in seconds) of BiSLS-Adam and fine-tuned Adam to reach \(85\%\) validation accuracy against different number of conjugate gradient steps for computing the hypergradient.

[MISSING_PAGE_FAIL:11]

* [24] Prashant Khanduri, Sillang Zeng, Mingyi Hong, Hoi-To Wai, Zhaoran Wang, and Zhuoran Yang. A near-optimal algorithm for stochastic bilevel optimization via double-momentum, 2021.
* [25] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. _arXiv preprint arXiv:1412.6980_, 2014.
* [26] Yann LeCun, Leon Bottou, Yoshua Bengio, and Patrick Haffner. Gradient-based learning applied to document recognition. _Proceedings of the IEEE_, 86(11):2278-2324, 1998.
* [27] Xiaoyu Li and Francesco Orabona. On the convergence of stochastic gradient descent with adaptive stepsizes, 2019.
* [28] Hanxiao Liu, Karen Simonyan, and Yiming Yang. Darts: Differentiable architecture search, 2019.
* [29] Nicolas Loizou, Sharan Vaswani, Issam Laradji, and Simon Lacoste-Julien. Stochastic polyak step-size for sgd: An adaptive learning rate for fast convergence, 2021.
* [30] Jonathan Lorraine, Paul Vicol, and David Duvenaud. Optimizing millions of hyperparameters by implicit differentiation. In _International Conference on Artificial Intelligence and Statistics_, pages 1540-1552. PMLR, 2020.
* [31] Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization, 2019.
* [32] Liangchen Luo, Yuanhao Xiong, Yan Liu, and Xu Sun. Adaptive gradient methods with dynamic bound of learning rate, 2019.
* [33] Arkadi Nemirovski, Anatoli Juditsky, Guanghui Lan, and Alexander Shapiro. Robust stochastic approximation approach to stochastic programming. _SIAM Journal on optimization_, 19(4):1574-1609, 2009.
* [34] Yurii Nesterov. _Introductory lectures on convex optimization: A basic course_, volume 87. Springer Science & Business Media, 2003.
* [35] Lam M Nguyen, Jie Liu, Katya Scheinberg, and Martin Takac. Sarah: A novel method for machine learning problems using stochastic recursive gradient. In _International Conference on Machine Learning_, pages 2613-2621. PMLR, 2017.
* [36] Antonio Orvieto, Simon Lacoste-Julien, and Nicolas Loizou. Dynamics of sgd with stochastic polyak stepsizes: Truly adaptive variants and convergence to exact solution, 2022.
* [37] Aravind Rajeswaran, Chelsea Finn, Sham Kakade, and Sergey Levine. Meta-learning with implicit gradients, 2019.
* [38] Sashank J Reddi, Satyen Kale, and Sanjiv Kumar. On the convergence of adam and beyond. _arXiv preprint arXiv:1904.09237_, 2019.
* [39] Pengzhen Ren, Yun Xiao, Xiaojun Chang, Po-Yao Huang, Zhihui Li, Xiaojiang Chen, and Xin Wang. A comprehensive survey of neural architecture search: Challenges and solutions. _ACM Computing Surveys (CSUR)_, 54(4):1-34, 2021.
* [40] Amirreza Shaban, Ching-An Cheng, Nathan Hatch, and Byron Boots. Truncated backpropagation for bilevel optimization. In _The 22nd International Conference on Artificial Intelligence and Statistics_, pages 1723-1732. PMLR, 2019.
* [41] Shai Shalev-Shwartz, Yoram Singer, and Nathan Srebro. Pegasos: Primal estimated sub-gradient solver for svm. In _Proceedings of the 24th international conference on Machine learning_, pages 807-814, 2007.
* [42] Daouda Sow, Kaiyi Ji, and Yingbin Liang. On the convergence theory for hessian-free bilevel algorithms, 2022.
* [43] Sharan Vaswani, Issam Laradji, Frederik Kunstner, Si Yi Meng, Mark Schmidt, and Simon Lacoste-Julien. Adaptive gradient methods converge faster with over-parameterization (but you should do a line-search). _arXiv preprint arXiv:2006.06835_, 2020.
* [44] Sharan Vaswani, Aaron Mishkin, Issam Laradji, Mark Schmidt, Gauthier Gidel, and Simon Lacoste-Julien. Painless stochastic gradient: Interpolation, line-search, and convergence rates, 2021.
* [45] Luis Vicente, Gilles Savard, and Joaquim Judice. Descent approaches for quadratic bilevel programming. _Journal of optimization theory and applications_, 81(2):379-399, 1994.

* [46] Tongzhou Wang, Jun-Yan Zhu, Antonio Torralba, and Alexei A. Efros. Dataset distillation, 2020.
* [47] Rachel Ward, Xiaoxia Wu, and Leon Bottou. Adagrad stepsizes: Sharp convergence over nonconvex landscapes, 2021.
* [48] Jorge Nocedal Stephen J Wright. Numerical optimization, 2006.
* [49] Junjie Yang, Kaiyi Ji, and Yingbin Liang. Provably faster algorithms for bilevel optimization, 2021.
* [50] Ruonan Yu, Songhua Liu, and Xinchao Wang. Dataset distillation: A comprehensive review, 2023.
* [51] Yihua Zhang, Guanhua Zhang, Prashant Khanduri, Mingyi Hong, Shiyu Chang, and Sijia Liu. Revisiting and advancing fast adversarial training through the lens of bi-level optimization. In _International Conference on Machine Learning_, pages 26693-26712. PMLR, 2022.
* [52] Yihua Zhang, Yuguang Yao, Parikshit Ram, Pu Zhao, Tianlong Chen, Mingyi Hong, Yanzhi Wang, and Sijia Liu. Advancing model pruning via bi-level optimization, 2023.
* [53] Yongchao Zhou, Ehsan Nezhadarya, and Jimmy Ba. Dataset distillation using neural feature regression. _arXiv preprint arXiv:2206.00719_, 2022.

Proofs of Theorems and Additional Convergence Results

### Useful Lemmas

Lemma 1 provides more details on the envelope structure of SPSB and SLSB given in (10) and (11). The lower bound in (19) will also be used in Lemma 5 (for bounding the term \(\|y^{k+1}-y^{*}(x^{k})\|^{2}\)).

**Lemma 1**.: _Under the Assumption 1, we have the following:_

\[\text{SPSB :}\quad\min\{\frac{1}{2cL_{\max}},\gamma_{b,k}\}\leq \gamma_{k}=\min\{\frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{*}}{c\|\nabla f_{i_{k}}(x^{ k})\|^{2}},\gamma_{b,k}\},\quad 0<c,\] (19) \[\text{SLSB :}\quad\min\{\frac{2(1-\bar{c})}{L_{\max}},\gamma_{b,k}\} \leq\gamma_{k}\leq\min\{\frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{*}}{\bar{c}\|\nabla f _{i_{k}}(x^{k})\|^{2}},\gamma_{b,k}\},\quad 0<\bar{c}<1.\] (20)

Proof.: The bounds in (19) have been shown in [29; 36]. For (20), the first part of the inequality has been shown in [44]. For the second part, recall the Armijo condition (14):

\[f_{i_{k}}(x_{k}-\gamma_{k}\nabla f_{i_{k}}(x_{k}))\leq f_{i_{k}}(x_{k})-\bar {c}\cdot\gamma_{k}\|\nabla f_{i_{k}}(x_{k})\|^{2},\quad 0<\bar{c}<1.\]

We can then rearrange this to obtain

\[\gamma_{k}\leq\frac{f_{i_{k}}(x_{k})-f_{i_{k}}(x_{k}-\gamma_{k} \nabla f_{i_{k}}(x_{k}))}{\bar{c}\|\nabla f_{i_{k}}(x^{k})\|^{2}}\leq\frac{f_{ i_{k}}(x_{k})-f_{i_{k}}^{*}}{\bar{c}\|\nabla f_{i_{k}}(x^{k})\|^{2}}\leq\frac{f_{i_{ k}}(x_{k})-l_{i_{k}}^{*}}{\bar{c}\|\nabla f_{i_{k}}(x^{k})\|^{2}},\] (21)

where \(l_{i_{k}}^{*}\) is any lower bound for \(f_{i_{k}}^{*}\). Also recall that \(\gamma_{b,k}\) is the search starting point at iteration \(k\), hence (20) holds for SLSB. 

Lemma 2 gives the expressions for the constants \(L_{F}\), \(L_{y}\), and \(L_{f}\). The proof can be found in [15; Lem 2.2].

**Lemma 2**.: _Under Assumptions 3 and 4, we have the following:_

\[\|\nabla F(x_{1})-\nabla F(x_{2})\|\leq L_{F}\|x_{1}-x_{2}\|,\] \[\|y^{*}(x_{1})-y^{*}(x_{2})\|\leq L_{y}\|x_{1}-x_{2}\|,\] \[\|\bar{\nabla}f(x,y^{*}(x))-\bar{\nabla}f(x,y)\|\leq L_{f}\|y^{*} (x)-y\|,\]

_where_

\[L_{f} =L_{f,1}+\frac{L_{f,1}L_{g}}{\mu_{g}}+\frac{L_{1}}{\mu_{g}}(L_{G }+\frac{L_{g}L_{G}}{\mu_{g}})\sim\mathcal{O}(\kappa^{2})\] \[L_{y} =\frac{L_{g}}{\mu_{g}}\sim\mathcal{O}(\kappa)\] \[L_{F} =L_{f,1}+\frac{L_{g}(L_{f,1}+L_{f})}{\mu_{g}}+\frac{L_{1}}{\mu_{ g}}(L_{G}+\frac{L_{g}L_{G}}{\mu_{g}})\sim\mathcal{O}(\kappa^{3})\]

Lemma 3 is on the bias and variance of the stochastic hypergradient in (13), which has the following form [19]

\[h_{f}^{k}=\nabla_{x}f(x^{k},y^{k+1};\phi)-\nabla_{xy}g(x^{k},y^{k+1};\psi_{0} )\big{[}\frac{N}{L_{g}}\prod_{j=1}^{\bar{N}}(I-\nabla_{yy}^{2}g(x^{k},y^{k+1}; \psi_{j}))\big{]}\nabla_{y}f(x^{k},y^{k+1};\phi).\] (22)

Recall that the hypergradient surrogate defined in (17) based on \((x^{k},y^{k+1})\) is

\[\bar{\nabla}f(x^{k},y^{k+1})=\nabla_{x}f(x^{k},y^{k+1})+\nabla_{xy}^{2}g(x^{k},y^{k+1})[\nabla_{yy}^{2}g(x^{k},y^{k+1})]^{-1}\nabla_{y}f(x^{k},y^{k+1}).\] (23)

Given a filtration \(\mathcal{F}_{k}^{\prime}\) up to and including \(x^{k}\) and \(y^{k+1}\), the bias of the stochastic hypergradient is defined as \(B=\bar{\nabla}f(x^{k},y^{k+1})-\mathbb{E}[h_{f}^{k}|\mathcal{F}_{k}^{\prime}]\), and the variance is defined as \(\mathbb{E}[\|\bar{\nabla}f(x^{k},y^{k+1})-\mathbb{E}[h_{f}^{k}|\mathcal{F}_{k }^{\prime}]\|^{2}]\). Lemma 3 has been proven in [19, Lem 1.] (also see [4, Lem 5.]). Lemmas 1, 2, and 3 will be used in the proofs of Theorems 3 and 4.

**Lemma 3**.: _Under Assumptions 3, 4, and 5, the bias and variance of the stochastic hypergradient \(h_{f}^{k}\) satisfy the following_

\[\text{Bias: }\|\bar{\nabla}f(x^{k},y^{k+1})-\mathbb{E}[h_{f}^{k}| \mathcal{F}_{k}]\|\leq\frac{C_{g}C_{f}}{\mu_{g}}(1-\frac{\mu_{g}}{L_{g}})^{N}, \forall k\] \[\text{Variance: }\mathbb{E}[\|\bar{\nabla}f(x^{k},y^{k+1})- \mathbb{E}[h_{f}^{k}|\mathcal{F}_{k}^{{}^{\prime}}\|]^{2}]\leq\tilde{\sigma}_{ f}^{2},\forall k,\]

_where N is the total number of samples, and \(\tilde{\sigma}_{f}^{2}=\sigma_{f}^{2}+[(\sigma_{f}^{2}+L_{1}^{2})(\sigma_{G}^ {2}+2L_{g}^{2})+\sigma_{f}^{2}L_{g}^{2}]\frac{3}{\mu_{g}^{2}}\sim\mathcal{O}( \kappa^{2})\)._

Lemma 4 is on the descent of the quantity \(V^{k}:=F(x^{k})-F(x^{*})+\|y^{k}-y^{*}(x^{k})\|^{2}\). It will be used in the proofs of Theorem 3 and 4.

**Lemma 4**.: _Suppose \(F\) satisfies Assumptions 3, 4, and 5, sequences \(\alpha_{b,k}=\frac{\alpha_{b,0}}{\sqrt{k+1}}\) and \(\alpha_{l,k}=\frac{\alpha_{l,0}}{\sqrt{k+1}}\) with \(\alpha_{b,0}\) and \(\alpha_{l,0}\) satisfying \(\frac{1}{L_{F}+4L_{y}^{2}}\geq\frac{\alpha_{b,0}^{2}}{\alpha_{l,0}}\) and \(\alpha_{l,0}\leq\alpha_{b,0}\). Further assume that \(\alpha_{k}\) is independent of \(h_{f}^{k}\). Then step sizes of the form (10) and (11) achieve the following:_

\[E[V^{k+1}]\leq\mathbb{E}[V^{k}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F(x ^{k})\|^{2}]+(\alpha_{b,k}L_{f}^{2}+2)\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]+\]

\[\alpha_{b,k}B^{2}+(2L_{y}^{2}\alpha_{b,k}^{2}+\frac{L_{F}\alpha_{b,k}^{2}}{2}) \tilde{\sigma}_{f}^{2}-\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2}],\forall k,\] (24)

_where \(V^{k}=F(x^{k})-F(x^{*})+\|y^{k+1}-y^{*}(x^{k+1})\|^{2}\) and recall that \(F\) is the upper-level loss defined in (1)._

Proof.: We denote \(\mathbb{E}[h_{f}^{k}|\mathcal{F}_{k}^{{}^{\prime}}]=\bar{h}_{f}^{k}\). By the \(L_{F}\)-smoothness of the objective \(F\):

\[F(x^{k+1})\leq F(x^{k})+\langle\nabla F(x^{k}),x^{k+1}-x^{k}\rangle+\frac{L_{F }}{2}\|x^{k+1}-x^{k}\|^{2}.\]

Take expectation conditioned on a filtration of past iterates \(\mathcal{F}_{k}^{{}^{\prime}}\) (up to and include \(x^{k}\), \(y^{k+1}\)):

\[\mathbb{E}[F(x^{k+1})|\mathcal{F}_{k}^{{}^{\prime}}] \leq F(x^{k})+\mathbb{E}[\langle\nabla F(x^{k}),x^{k+1}-x^{k} \rangle|\mathcal{F}_{k}^{{}^{\prime}}]+\frac{L_{F}}{2}\mathbb{E}[\|x^{k+1}-x^ {k}\|^{2}|\mathcal{F}_{k}^{{}^{\prime}}]\] \[=F(x^{k})-\mathbb{E}[\alpha_{k}\langle\nabla F(x^{k}),h_{f}^{k} \rangle|\mathcal{F}_{k}^{{}^{\prime}}]+\frac{L_{F}\mathbb{E}[\alpha_{k}^{2}| \mathcal{F}_{k}^{{}^{\prime}}]}{2}\mathbb{E}[\|h_{f}^{k}-\bar{h}_{f}^{k}+ \bar{h}_{f}^{k}\|^{2}|\mathcal{F}_{k}^{{}^{\prime}}]\] \[\stackrel{{(\text{a})}}{{=}}F(x^{k})-\mathbb{E}[ \alpha_{k}|\mathcal{F}_{k}^{{}^{\prime}}]\langle\nabla F(x^{k}),\bar{h}_{f}^{k} \rangle+\frac{L_{F}\mathbb{E}[\alpha_{k}^{2}|\mathcal{F}_{k}^{{}^{\prime}}]}{2 }\|\bar{h}_{f}^{k}\|^{2}+\frac{L_{F}\mathbb{E}[\alpha_{k}^{2}|\mathcal{F}_{k}^{ {}^{\prime}}]}{2}\tilde{\sigma}_{f}^{2}\] \[=F(x^{k})-\frac{\mathbb{E}[\alpha_{k}|\mathcal{F}_{k}^{{}^{ \prime}}]}{2}\|\nabla F(x^{k})\|^{2}-\frac{\mathbb{E}[\alpha_{k}|\mathcal{F}_{k }^{{}^{\prime}}]}{2}\|\bar{h}_{f}^{k}\|^{2}+\frac{\mathbb{E}[\alpha_{k}| \mathcal{F}_{k}^{{}^{\prime}}]}{2}\|\nabla F(x^{k})-\bar{h}_{f}^{k}\|^{2}+\] \[\frac{L_{F}\mathbb{E}[\alpha_{k}^{2}|\mathcal{F}_{k}^{{}^{ \prime}}]}{2}\|\bar{h}_{f}^{k}\|^{2}+\frac{L_{F}\mathbb{E}[\alpha_{k}^{2}| \mathcal{F}_{k}^{{}^{\prime}}]}{2}\tilde{\sigma}_{f}^{2},\]

where (a) is by the assumption that \(\alpha_{k}\) is independent of \(h_{f}^{k}\). Then expand the term \(\|\nabla F(x^{k})-\bar{h}_{f}^{k}\|^{2}\) as follows:

\[\|\nabla F(x^{k})-\bar{h}_{f}^{k}\|^{2} =\|\nabla F(x^{k})-\bar{\nabla}f(x^{k},y^{k+1})+\bar{\nabla}f(x^{k },y^{k+1})-\bar{h}_{f}^{k}\|^{2}\] \[\leq 2\|\nabla F(x^{k})-\bar{\nabla}f(x^{k},y^{k+1})\|^{2}+2\|\bar{ \nabla}f(x^{k},y^{k+1})-\bar{h}_{f}^{k}\|^{2}\] \[\stackrel{{(\text{b})}}{{\leq}}2L_{f}^{2}\|y^{k+1}-y^ {*}(x^{k})\|^{2}+2B^{2},\]

where (b) is by Lemma 2 and 3. Substituting this into the above:

\[\mathbb{E}[F(x^{k+1})|F_{k}^{{}^{\prime}}] \leq F(x^{k})-\frac{\mathbb{E}[\alpha_{k}|F_{k}^{{}^{\prime}}]}{2} \|\nabla F(x^{k})\|^{2}-\frac{\mathbb{E}[\alpha_{k}|F_{k}^{{}^{\prime}}]}{2}\| \bar{h}_{f}^{k}\|^{2}+\frac{L_{F}\mathbb{E}[\alpha_{k}^{2}|F_{k}^{{}^{\prime}}]}{2 }\|\bar{h}_{f}^{k}\|^{2}+\] \[\qquad E[\alpha_{k}|\mathcal{F}_{k}^{{}^{\prime}}]L_{f}^{2}\|y^{k+ 1}-y^{*}(x^{k})\|^{2}+E[\alpha_{k}|\mathcal{F}_{k}^{{}^{\prime}}]B^{2}+\frac{L_{F} \mathbb{E}[\alpha_{k}^{2}|\mathcal{F}_{k}^{{}^{\prime}}]}{2}\tilde{\sigma}_{f}^{2}\] \[\stackrel{{(\text{c})}}{{\leq}}F(x^{k})-\frac{ \alpha_{l,k}}{2}\|\nabla F(x^{k})\|^{2}-\frac{\alpha_{l,k}}{2}\|\bar{h}_{f}^{k}\|^{ 2}+\frac{L_{F}\alpha_{b,k}^{2}}{2}\|\bar{h}_{f}^{k}\|^{2}+\] \[\qquad\alpha_{b,k}L_{f}^{2}\|y^{k+1}-y^{*}(x^{k})\|^{2}+\alpha_ {b,k}B^{2}+\frac{L_{F}\alpha_{b,k}^{2}}{2}\tilde{\sigma}_{f}^{2},\]where (c) is by \(\alpha_{l,k}\leq\alpha_{k}\) and \(\alpha_{b,k}\geq\alpha_{k}\). Then take total expectations and subtract \(F(x^{*})\):

\[\mathbb{E}[F(x^{k+1})-F(x^{*})]\leq\mathbb{E}[F(x^{k})-F(x^{*})]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\| \tilde{h}_{f}^{k}\|^{2}]+\frac{L_{F}\alpha_{b,k}^{2}}{2}\mathbb{E}[\|\tilde{h}_ {f}^{k}\|^{2}]+\]

\[\alpha_{b,k}L_{f}^{2}\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]+\alpha_{b,k}B^{2 }+\frac{L_{F}\alpha_{b,k}^{2}}{2}\tilde{\sigma}_{f}^{2}\] (25)

Now define the potential function \(V^{k}:=F(x^{k})-F(x^{*})+\|y^{k+1}-y^{*}(x^{k+1})\|^{2}\) and expand the term \(\|y^{k+1}-y^{*}(x^{k+1})\|^{2}\) as follows:

\[\|y^{k+1}-y^{*}(x^{k+1})\|^{2} =\|y^{k+1}-y^{*}(x^{k})+y^{*}(x^{k})-y^{*}(x^{k+1})\|^{2}\] \[\leq 2\|y^{k+1}-y^{*}(x^{k})\|^{2}+2\|y^{*}(x^{k})-y^{*}(x^{k+1})\| ^{2}\] \[\stackrel{{(d)}}{{\leq}}2\|y^{k+1}-y^{*}(x^{k})\|^{2 }+2L_{y}^{2}\|x^{k+1}-x^{k}\|^{2}\] \[=2\|y^{k+1}-y^{*}(x^{k})\|^{2}+2L_{y}^{2}\alpha_{k}^{2}\|h_{f}^{k }\|^{2}\] \[=2\|y^{k+1}-y^{*}(x^{k})\|^{2}+2L_{y}^{2}\alpha_{k}^{2}\|h_{f}^{k }-\bar{h}_{f}^{k}+\bar{h}_{f}^{k}\|^{2},\]

where (d) is by Lemma 2. Take expectation conditioned on \(\mathcal{F}_{k}^{{}^{\prime}}\):

\[\mathbb{E}[\|y^{k+1}-y^{*}(x^{k+1})\|^{2}|\mathcal{F}_{k}^{{}^{ \prime}}] \leq 2\|y^{k+1}-y^{*}(x^{k})\|^{2}+2L_{y}^{2}\alpha_{k}^{2}\|\bar{h }_{f}^{k}\|^{2}+2L_{y}^{2}\alpha_{k}^{2}\tilde{\sigma}_{f}^{2}\] \[\leq 2\|y^{k+1}-y^{*}(x^{k})\|^{2}+2L_{y}^{2}\alpha_{b,k}^{2}\| \bar{h}_{f}^{k}\|^{2}+2L_{y}^{2}\alpha_{b,k}^{2}\tilde{\sigma}_{f}^{2}.\]

Then, take total expectations:

\[\mathbb{E}[\|y^{k+1}-y^{*}(x^{k+1})\|^{2}]\leq 2\mathbb{E}[\|y^{k+1}-y^{*}(x^{k}) \|^{2}]+2L_{y}^{2}\alpha_{b,k}^{2}\mathbb{E}[\|\bar{h}_{f}^{k}\|^{2}]+2L_{y}^ {2}\alpha_{b,k}^{2}\tilde{\sigma}_{f}^{2}.\] (26)

Now, based on the definition of \(V^{k}\) and combining (25) and (26):

\[E[V^{k+1}] \leq\mathbb{E}[F(x^{k})-F(x^{*})]-\frac{\alpha_{l,k}}{2}\mathbb{E }[\|\nabla F(x^{k})\|^{2}]\] \[\qquad-\frac{\mathbb{E}[\|\bar{h}_{f}^{k}\|^{2}]}{2}(\alpha_{l,k} -L_{F}\alpha_{b,k}^{2}-4L_{y}^{2}\alpha_{b,k}^{2})+(\alpha_{b,k}L_{f}^{2}+2) \mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]+\] \[\qquad\alpha_{b,k}B^{2}+(2L_{y}^{2}\alpha_{b,k}^{2}+\frac{L_{F} \alpha_{b,k}^{2}}{2})\tilde{\sigma}_{f}^{2}\] \[\stackrel{{(e)}}{{\leq}}\mathbb{E}[F(x^{k})-F(x^{*} )]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]+(\alpha_{b,k}L_{f} ^{2}+2)\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]+\] \[\qquad\alpha_{b,k}B^{2}+(2L_{y}^{2}\alpha_{b,k}^{2}+\frac{L_{F} \alpha_{b,k}^{2}}{2})\tilde{\sigma}_{f}^{2}\] \[=\mathbb{E}[V^{k}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F(x^ {k})\|^{2}]+(\alpha_{b,k}L_{f}^{2}+2)\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]+\] \[\qquad\alpha_{b,k}B^{2}+(2L_{y}^{2}\alpha_{b,k}^{2}+\frac{L_{F} \alpha_{b,k}^{2}}{2})\tilde{\sigma}_{f}^{2}-\mathbb{E}[\|y^{k}-y^{*}(x^{k})\| ^{2}],\]

where (e) is because \(\frac{1}{L_{F}+4L_{y}^{2}}\geq\frac{\alpha_{b,0}^{2}}{\alpha_{l,0}}\), which guarantees that \(\alpha_{l,k}=\frac{\alpha_{l,0}}{\sqrt{k+1}}\geq(L_{F}+4L_{y}^{2})\alpha_{b,k}=(L _{F}+4L_{y}^{2})\frac{\alpha_{b,0}^{2}}{k+1}\). 

Lemma 5 and Lemma 6 give two alternatives for bounding the term \(\|y^{k+1}-y^{*}(x^{k})\|^{2}\). Lemma 5 is based on the assumption \(\mathbb{E}_{\psi}[g(x,y^{*}(x);\psi)-g(x,y^{*}_{x,\psi};\psi)]\leq\sigma_{g}^{2},\forall x\). The proof for its one-variable analogous assumption is given in Loizou et al. [29]. Here we follow a similar approach for the two-variable function \(g(x,y)\). Lemma 5 will be used in the proof of Theorem 3.

**Lemma 5**.: _Suppose Assumptions 3, 5, and the bounded optimal function value assumption (15) hold. Further assume that each sampled function \(g(x,y;\psi)\) is convex, then step size of the form 11 achieves the following:_

\[\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]\leq(1-\mu_{g}C_{k})^{T}\mathbb{E}[\|y^{k }-y^{*}(x^{k})\|^{2}]+2\beta_{b,k}T\sigma_{g}^{2},\]

_where \(C_{k}=\min\{\frac{1}{2pL_{g}},\beta_{b,k}\}\)._Proof.: We denote \(h_{g}^{k,t}=\nabla_{y}g(x^{k},y^{k,t};\psi)\), and \(\mathcal{F}_{k,t}\) be a filtration up to and including \(x^{k}\) and \(y^{k,t}\).

We have,

\[\|y^{k,t+1}-y^{*}(x^{k})\|^{2} =\|y^{k,t}-\beta_{k,t}h_{g}^{k,t}-y^{*}(x^{k})\|^{2}\] \[=\|y^{k,t}-y^{*}(x^{k})\|^{2}-2\beta_{k,t}\langle y^{k,t}-y^{*}(x^ {k}),h_{g}^{k,t}\rangle+\beta_{k,t}^{2}\|h_{g}^{k,t}\|^{2}\] \[\overset{(a)}{\leq}\|y^{k,t}-y^{*}(x^{k})\|^{2}-2\beta_{k,t} \langle y^{k,t}-y^{*}(x^{k}),h_{g}^{k,t}\rangle+\frac{\beta_{k,t}}{p}[g(x^{k},y ^{k,t};\psi)-g(x^{k},y_{x^{k},\psi}^{*};\psi)]\] \[\overset{(b)}{\leq}\|y^{k,t}-y^{*}(x^{k})\|^{2}-2\beta_{k,t} \langle y^{k,t}-y^{*}(x^{k}),h_{g}^{k,t}\rangle+2\beta_{k,t}[g(x^{k},y^{k,t}; \psi)-g(x^{k},y_{x^{k},\psi}^{*};\psi)]\] \[=\|y^{k,t}-y^{*}(x^{k})\|^{2}-2\beta_{k,t}\langle y^{k,t}-y^{*}(x ^{k}),h_{g}^{k,t}\rangle+\] \[\qquad 2\beta_{k,t}[g(x^{k},y^{k,t};\psi)-g(x^{k},y^{*}(x^{k}); \psi)+g(x^{k},y^{*}(x^{k});\psi)-g(x^{k},y_{x^{k},\psi}^{*};\psi)]\] \[=\|y^{k,t}-y^{*}(x^{k})\|^{2}+2\beta_{k,t}[-\langle y^{k,t}-y^{*} (x^{k}),h_{g}^{k,t}\rangle+g(x^{k},y^{k,t};\psi)-g(x^{k},y^{*}(x^{k});\psi)]+\] \[\qquad 2\beta_{k,t}[g(x^{k},y^{*}(x^{k});\psi)-g(x^{k},y_{x^{k}, \psi}^{*};\psi)]\] \[\overset{(c)}{\leq}\|y^{k,t}-y^{*}(x^{k})\|^{2}+2C_{k}[-\langle y ^{k,t}-y^{*}(x^{k}),h_{g}^{k,t}\rangle+g(x^{k},y^{k,t};\psi)-g(x^{k},y^{*}(x^{ k});\psi)]+\] \[\qquad 2\beta_{k,k}[g(x^{k},y^{*}(x^{k});\psi)-g(x^{k},y_{x^{k}, \psi}^{*};\psi)],\]

where (a) is by Lemma 1, (b) is by choosing \(p\geq\frac{1}{2}\), and, (c) is by individual convexity of \(g(x,y;\psi)\) such that \(-\langle y^{k,t}-y^{*}(x^{k}),h_{g}^{k,t}\rangle+g(x^{k},y^{k,t};\psi)-g(x^{k},y^{*}(x^{k});\psi)\leq 0\) and recalling that \(C_{k}=\min\{\frac{1}{2PL_{g}},\beta_{b,k}\}\leq\beta_{k,t}\) by Lemma 1. Take expectation conditioned on \(\mathcal{F}_{k,t}^{{}^{\prime}}\) and note that \(\mathbb{E}[h_{g}^{k,t}|\mathcal{F}_{k,t}^{{}^{\prime}}]=\nabla_{y}g(x^{k},y^{k +1})\), \(\mathbb{E}[g(x^{k},y^{k,t};\psi)|\mathcal{F}_{k,t}^{{}^{\prime}}]=g(x^{k},y^{ k,t})\), and \(\mathbb{E}[g(x^{k},y^{*}(x^{k});\psi)]=g(x^{k},y^{*}(x^{k}))\):

\[\mathbb{E}[\|y^{k,t+1}-y^{*}(x^{k})\|^{2}|\mathcal{F}_{k,t}^{{}^ {\prime}}]\leq\|y^{k,t}-y^{*}(x^{k})\|^{2}+2C_{k}[-\langle y^{k,t}-y^{*}(x^{k} ),\nabla_{y}g(x^{k},y^{k+1})\rangle+\] \[g(x^{k},y^{k,t})-g(x^{k},y^{*}(x^{k}))]+2\beta_{b,k}\sigma_{g}^{2}.\] (27)

Now, based on the strong convexity of \(g\) w.r.t. \(y\),

\[-\langle y^{k,t}-y^{*}(x^{k}),\nabla_{y}g(x^{k},y^{k+1})\rangle+g(x^{k},y^{k, t})-g(x^{k},y^{*}(x^{k}))\leq\frac{\mu_{g}}{2}\|y^{k,t}-y^{*}(x^{k})\|^{2},\]

we can further obtain (by taking total expectations of (27) and using strong-convexity):

\[\mathbb{E}[\|y^{k,t+1}-y^{*}(x^{k})\|^{2}]\leq(1-\mu_{g}C_{k})\mathbb{E}[\|y^ {k,t}-y^{*}(x^{k})\|^{2}]+2\beta_{b,k}\sigma_{g}^{2}.\]

Solve this recursively from \(t=0\) to \(t=T-1\) (recall \(T\) is the total number of lower-level steps, \(y^{k,0}=y^{k}\) and \(y^{k+1}=y^{k,T}\)):

\[\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}] \leq(1-\mu_{g}C_{k})^{T}\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2}]+2 \beta_{b,k}\sigma_{g}^{2}\sum_{j=0}^{T-1}(1-\mu_{g}C_{k})^{j}\] \[\leq(1-\mu_{g}C_{k})^{T}\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2}]+2 \beta_{b,k}T\sigma_{g}^{2}.\]

Lemma 6 is based on the standard bounded variance assumption \(\mathbb{E}_{\psi}[\|\nabla_{y}g(x,y^{*}(x);\psi)-\nabla_{y}g(x,y^{*}(x))\|^{2}] \leq\sigma_{g}^{2}\), \(\forall x,y\) in the bi-level optimization literature [19, 4]. Lemma 6 will be used in the proof of Theorem 4.

**Lemma 6**.: _Suppose Assumptions 3, 5 and the bounded variance assumption (16) hold. Suppose that \(p\geq\max\{\frac{\mu_{g}}{\mu_{g}+L_{g}},\frac{\mu_{g}+L_{g}}{4L_{g}}\}\), \(\beta_{b,0}\leq\min\{\frac{2}{\mu_{g}+L_{g}},\frac{\mu_{g}+L_{g}}{2\mu_{g}L_{g}}, \frac{1}{2pL_{g}-\frac{\mu_{g}L_{g}}{\mu_{g}+L_{g}}}\}\). Then step size of the form 11 achieves the following:_

\[\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]\leq(\frac{\beta_{b,k}}{C_{k}}-\frac{2 \mu_{g}L_{g}}{\mu_{g}+L_{g}}\beta_{b,k})^{T}\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2}]+T \beta_{b,k}^{2}\sigma_{g}^{2},\]

_where \(C_{k}=\min\{\frac{1}{2pL_{g}},\beta_{b,k}\}\)._Proof.: Similar to the proof of Lemma 5, we can start with

\[\|y^{k,t+1}-y^{*}(x^{k})\|^{2}=\|y^{k,t}-y^{*}(x^{k})\|^{2}-2\beta_{k,t}\langle y ^{k,t}-y^{*}(x^{k}),h_{g}^{k,t}\rangle+\beta_{k,t}^{2}\|h_{g}^{k,t}\|^{2}.\]

Divide both sides by \(\beta_{k,t}\)

\[\frac{\|y^{k,t+1}-y^{*}(x^{k})\|^{2}}{\beta_{k,t}}=\frac{\|y^{k,t}-y^{*}(x^{k}) \|^{2}}{\beta_{k,t}}-2\langle y^{k,t}-y^{*}(x^{k}),h_{g}^{k,t}\rangle+\beta_{k, t}\|h_{g}^{k,t}\|^{2}.\]

Then use the facts that \(\beta_{k,t}\leq\beta_{b,k}\) and \(\beta_{k,t}\geq C_{k}\),

\[\frac{\|y^{k,t+1}-y^{*}(x^{k})\|^{2}}{\beta_{b,k}}\leq\frac{\|y^{k,t}-y^{*}(x^ {k})\|^{2}}{C_{k}}-2\langle y^{k,t}-y^{*}(x^{k}),h_{g}^{k,t}\rangle+\beta_{b, k}\|h_{g}^{k,t}\|^{2}\,.\]

Next, take expectation conditioned on the Filtration \(\mathcal{F}_{k,t}^{{}^{\prime}}\) up to and including \(x^{k}\) and \(y^{k,t}\)

\[\frac{1}{\beta_{b,k}}\mathbb{E}[\|y^{k,t+1}-y^{*}(x^{k})\|^{2}| \mathcal{F}_{k,t}^{{}^{\prime}}] \leq\frac{1}{C_{k}}\mathbb{E}[\|y^{k,t}-y^{*}(x^{k})\|^{2}| \mathcal{F}_{k,t}^{{}^{\prime}}]-2\langle y^{k,t}-y^{*}(x^{k}),\nabla g(x^{k},y^{k,t})\rangle\] \[\qquad\qquad+\beta_{b,k}\mathbb{E}[\|h_{g}^{k,t}\|^{2}|\mathcal{ F}_{k,t}^{{}^{\prime}}]\] \[=\frac{1}{C_{k}}\mathbb{E}[\|y^{k,t}-y^{*}(x^{k})\|^{2}|\mathcal{ F}_{k,t}^{{}^{\prime}}]-2\langle y^{k,t}-y^{*}(x^{k}),\nabla g(x^{k},y^{k,t})\rangle\] \[\qquad\qquad+\beta_{b,k}\mathbb{E}[\|h_{g}^{k,t}-\nabla g(x^{k},y ^{k,t})+\nabla g(x^{k},y^{k,t})\|^{2}|\mathcal{F}_{k,t}^{{}^{\prime}}]\] \[\overset{(a)}{\leq}\frac{1}{C_{k}}\mathbb{E}[\|y^{k,t}-y^{*}(x^{ k})\|^{2}|\mathcal{F}_{k,t}^{{}^{\prime}}]-2\langle y^{k,t}-y^{*}(x^{k}),\nabla g(x ^{k},y^{k,t})\rangle\] \[\qquad\qquad+\beta_{b,k}\sigma_{g}^{2}+\beta_{b,k}\|\nabla g(x^{ k},y^{k,t})\|^{2},\]

where (a) is by the bounded variance assumption (16). Based on strong-convexity of \(g\)[34, Theorem 2.1.11], we have

\[\frac{1}{\beta_{b,k}}\mathbb{E}[\|y^{k,t+1}-y^{*}(x^{k})\|^{2}| \mathcal{F}_{k,t}^{{}^{\prime}}] \leq\frac{1}{C_{k}}\|y^{k,t}-y^{*}(x^{k})\|^{2}-\frac{2\mu_{g}L_{g}}{\mu_{g}+ L_{g}}\|y^{k,t}-y^{*}(x^{k})\|^{2}\] \[\qquad\qquad-\frac{2}{\mu_{g}+L_{g}}\|\nabla g(x^{k},y^{k,t})\|^{2 }+\beta_{b,k}\sigma_{g}^{2}+\beta_{b,k}\|\nabla g(x^{k},y^{k,t})\|^{2}\]

Multiply by \(\beta_{b,k}\) in both sides, group terms, and take total expectations to reach

\[\mathbb{E}[\|y^{k,t+1}-y^{*}(x^{k})\|^{2}] \leq(\frac{\beta_{b,k}}{C_{k}}-\frac{2\mu_{g}L_{g}}{\mu_{g}+L_{g} }\beta_{b,k})\mathbb{E}[\|y^{k,t}-y^{*}(x^{k})\|^{2}]+\beta_{b,k}^{2}\sigma_{g}^ {2}\] \[\qquad\qquad+\beta_{b,k}(\beta_{b,k}-\frac{2}{\mu_{g}+L_{g}})\| \nabla g(x^{k},y^{k,t})\|^{2}\] \[\overset{(b)}{\leq}(\frac{\beta_{b,k}}{C_{k}}-\frac{2\mu_{g}L_{g} }{\mu_{g}+L_{g}}\beta_{b,k})\mathbb{E}[\|y^{k,t}-y^{*}(x^{k})\|^{2}]+\beta_{b, k}^{2}\sigma_{g}^{2},\]

where in (b) we have chosen \(\beta_{b,k}\leq\beta_{b,0}\leq\frac{2}{\mu_{g}+L_{g}},\forall k\). Solving this recursion similar to Lemma 5, we obtain:

\[\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]\leq(\frac{\beta_{b,k}}{C_{k}}-\frac{2 \mu_{g}L_{g}}{\mu_{g}+L_{g}}\beta_{b,k})^{T}\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2 }]+T\beta_{b,k}^{2}\sigma_{g}^{2}.\] (28)

In (28), we require \(\frac{\beta_{b,k}}{C_{k}}-\frac{2\mu_{g}L_{g}}{\mu_{g}+L_{g}}\beta_{b,k}\geq 0\) (recall \(C_{k}=\min\{\frac{1}{2pL_{g}},\,\beta_{b,k}\}\leq\beta_{k,t}\leq\beta_{b,k}\)), this is equivalent to \(C_{k}\leq\frac{\mu_{g}+L_{g}}{2\mu_{g}L_{g}}\). In case of \(C_{k}=\frac{1}{2pL_{g}}\), we choose \(p\geq\frac{\mu_{g}}{\mu_{g}+L_{g}}\) (to avoid contradictions, we also choose \(p\geq\frac{\mu_{g}+L_{g}}{4L_{g}}\)). In case of \(C_{k}=\beta_{b,k}\), we choose \(\beta_{b,k}\leq\beta_{b,0}\leq\frac{\mu_{g}+L_{g}}{2\mu_{g}L_{g}}\).

We also require \(\frac{\beta_{b,k}}{C_{k}}-\frac{2\mu_{g}L_{g}}{\mu_{g}+L_{g}}\beta_{b,k}\leq 1\). In case of \(C_{k}=\beta_{b,k}\), this is equivalent to \(\frac{2\mu_{g}L_{g}}{\mu_{g}+L_{g}}\beta_{b,k}\geq 0\), which is satisfied by all \(\beta_{b,k}\). In case of \(C_{k}=\frac{1}{2pL_{g}}\), we choose \(\beta_{b,k}\leq\beta_{b,0}\leq\frac{1}{2pL_{g}-\frac{2\mu_{g}L_{g}}{\mu_{g}+L_{g}}}\). Putting everything together, we have \(p\geq\max\{\frac{\mu_{g}}{\mu_{g}+L_{g}},\frac{\mu_{g}+L_{g}}{4L_{g}}\}\), and \(\beta_{b,0}\leq\min\{\frac{2}{\mu_{g}+L_{g}},\frac{\mu_{g}+L_{g}}{2\mu_{g}L_{g}}, \frac{1}{2pL_{g}-\frac{2\mu_{g}L_{g}}{\mu_{g}+L_{g}}}\}\).

### Single-level Convex Proofs

#### a.2.1 Proof of Theorem 1

The proof of Theorem 1 is similar to the standard proof of decaying-step SGD (GD) that can be found in e.g. Beck [1]. Here, we give the proof for completeness.

\[\|x^{k+1}-x^{*}\|^{2} =\|x^{k}-x^{*}\|^{2}-2\gamma_{k}\langle x^{k}-x^{*},\nabla f_{i}( x^{k})\rangle+\gamma_{k}^{2}\|\nabla f_{i}(x^{k})\|^{2}\] \[\overset{(a)}{\leq}\|x^{k}-x^{*}\|^{2}-2\gamma_{k}(f_{i}(x^{k})- f_{i}(x^{*}))+\gamma_{k}^{2}\|\nabla f_{i}(x^{k})\|^{2}\] \[\overset{(b)}{\leq}\|x^{k}-x^{*}\|^{2}-2\gamma_{k}(f_{i}(x^{k})- f_{i}(x^{*}))+\gamma_{b,k}^{2}G^{2},\]

where (a) is by individual convexity of \(f_{i}\), and (b) is by Assumption 2. Take conditional expectation and assume that \(\gamma_{k}\) is independent of sample \(k\)

\[\mathbb{E}[\|x^{k+1}-x^{*}\|^{2}|x^{k}] \overset{(c)}{\leq}\|x^{k}-x^{*}\|^{2}-2E[\gamma_{k}|x^{k}](f(x^ {k})-f(x^{*}))+\gamma_{b,k}^{2}G^{2}\] \[\overset{(d)}{\leq}\|x^{k}-x^{*}\|^{2}-2\gamma_{l,k}(f(x^{k})-f( x^{*}))+\gamma_{b,k}^{2}G^{2},\]

where (c) is by independence of \(\gamma_{k}\) and \(x^{k}\), and (d) is because \(\gamma_{l,k}\leq\gamma_{k},\forall k\). Take total expectation and rearrange

\[2\gamma_{l,k}\mathbb{E}[f(x^{k})-f(x^{*})]\leq\mathbb{E}[\|x^{k}-x^{*}\|^{2}] -E[\|x^{k+1}-x^{*}\|^{2}]+\gamma_{b,k}^{2}G^{2}\]

Using the fact that \(\gamma_{l,K-1}\leq\gamma_{l,k}\quad\forall k\in[K-1]\) and set \(\gamma_{b,k}=\frac{\gamma_{0}}{\sqrt{k+1}}\), we obtain

\[2\gamma_{l,K-1}\mathbb{E}[f(x^{k})-f(x^{*})]\leq\mathbb{E}[\|x^{k}-x^{*}\|^{2 }]-E[\|x^{k+1}-x^{*}\|^{2}]+\frac{\gamma_{0}^{2}}{k+1}G^{2}\]

Summing over \(k=0\) to \(k=K-1\) we obtain

\[2\gamma_{l,K-1}\frac{1}{K}\sum_{k=0}^{K-1}\mathbb{E}[f(x^{k})-f( x^{*})] \leq\frac{\|x^{0}-x^{*}\|^{2}-\mathbb{E}[\|x^{K}-x^{*}\|^{2}]}{K} +\gamma_{0}^{2}G^{2}\frac{1}{K}\sum_{k=0}^{K-1}\frac{1}{k+1}\] \[\leq\frac{\|x^{0}-x^{*}\|^{2}}{K}+\frac{\gamma_{0}^{2}G^{2}\log( K)}{K}\]

Define \(\bar{x}=\frac{1}{K}\sum_{k=0}^{K-1}x^{k}\), apply Jensen's inequality and rearrange

\[\mathbb{E}[f(\bar{x}^{K})-f(x^{*})]\leq\frac{\|x^{0}-x^{*}\|^{2}}{2\gamma_{l, K-1}K}+\frac{\gamma_{0}^{2}G^{2}\log(K)}{2\gamma_{l,K-1}K}.\]

#### a.3 Proof of Theorem 2

The approach of Theorem 2 is similar to [16, Theorem 3.2]. The crucial difference is that the step size in [16, Theorem 3.2] is constant (\(\gamma_{k}=\frac{1}{L_{\max}}\)) for \(k\leq 4\lceil\kappa\rceil\), whereas for envelope-type step size it is of the form:

\[\gamma_{k}=\min\{\max\{\gamma_{l,k},\tilde{\gamma}_{k}\},\gamma_{b,k}\}, \quad\gamma_{l,k}=\min\{w,\gamma_{b,k}\},\]

where \(\tilde{\gamma}_{k}\) can be (e.g. in the case of SPSB ):

\[\tilde{\gamma}_{k}=\min\{\frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{*}}{c_{k}\|\nabla f _{i_{k}}(x^{k})\|^{2}},\frac{\gamma_{b,0}}{k+1}\},\quad w=\frac{1}{2c_{k}L_{ \max}}\.\]

The proof of Theorem 2 suggests that the step size can be either \(\frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{*}}{c_{k}\|\nabla f_{i_{k}}(x^{k})\|^{2}}\) or \(\frac{\gamma_{b,0}}{k+1}\) depending on their magnitudes for \(k\leq k_{0}-1\) (\(k_{0}=\max\{1,\lceil\gamma_{0}/\omega\rceil-1\}\)). After \(k_{0}\) iterations, the step size is \(\gamma_{k}=\frac{\gamma_{b,0}}{k+1}\). This finding is numerically confirmed by the experimental results in Section B.

To proceed with the proof, we have:

\[\|x^{k+1}-x^{*}\|^{2} =\|x^{k}-\gamma_{k}\nabla f_{i}(x^{k})-x^{*}\|^{2}\] \[=\|x^{k}-x^{*}\|^{2}-2\gamma_{k}\langle\nabla f_{i}(x^{k}),x^{k}-x ^{*}\rangle+\gamma_{k}^{2}\|\nabla f_{i}(x^{k})\|^{2}\] \[\stackrel{{(a)}}{{\leq}}\|x^{k}-x^{*}\|^{2}-2\gamma_ {k}\langle\nabla f_{i}(x^{k}),x^{k}-x^{*}\rangle+\gamma_{b,k}^{2}\|\nabla f_{i }(x^{k})\|^{2},\]

where (a) is because \(\gamma_{k}\leq\gamma_{b,k},\forall k\). Take conditional expectations

\[\mathbb{E}[\|x^{k+1}-x^{*}\|^{2}|x^{k}] \leq\|x^{k}-x^{*}\|^{2}-2\mathbb{E}[\gamma_{k}|x^{k}]\langle \nabla f(x^{k}),x^{k}-x^{*}\rangle+\gamma_{b,k}^{2}\mathbb{E}[\|\nabla f_{i}( x^{k})\|^{2}|x^{k}]\] \[\stackrel{{(b)}}{{\leq}}\|x^{k}-x^{*}\|^{2}-\mu \mathbb{E}[\gamma_{k}|x^{k}]\|x^{k}-x^{*}\|^{2}-2\mathbb{E}[\gamma_{k}|x^{k}] [f(x^{k})-f(x^{*})]+\gamma_{b,k}^{2}G^{2}\] \[\stackrel{{(c)}}{{\leq}}\|x^{k}-x^{*}\|^{2}-\mu \gamma_{l,k}\|x^{k}-x^{*}\|^{2}-2\gamma_{l,k}[f(x^{k})-f(x^{*})]+\gamma_{b,k} ^{2}G^{2}\]

where (b) is by bounded gradients assumption and strong convexity of \(f\). Take total expectation and rearrange

\[2\mathbb{E}[f(x^{k})-f(x^{*})]\leq\frac{(1-\mu\gamma_{l,k})\mathbb{E}[\|x^{k} -x^{*}\|^{2}]-\mathbb{E}[\|x^{k+1}-x^{*}\|^{2}]}{\gamma_{l,k}}+\frac{\gamma_{ b,k}^{2}G^{2}}{\gamma_{l,k}}\]

Choose \(k_{0}=\max\{1,\lceil\gamma_{0}/\omega\rceil-1\}\), then for \(\forall k\) s.t. \(k\geq k_{0}\), we have \(\gamma_{l,k}=\min\{\omega,\gamma_{b,k}\}=\gamma_{b,k}=\frac{\gamma_{0}}{k+1}\), which means \(\gamma_{k}=\frac{\gamma_{0}}{k+1}\) after \(k_{0}\) steps. Within the first \(k_{0}\) steps, the step size is \(\gamma_{k}=\min\{\omega,\gamma_{b,k}\}\). Hence, for \(k\geq k_{0}\) we have

\[2\mathbb{E}[f(x^{k})-f(x^{*})]\leq\frac{(1-\mu\gamma_{l,k})\mathbb{E}[\|x^{k} -x^{*}\|^{2}]-\mathbb{E}[\|x^{k+1}-x^{*}\|^{2}]}{\gamma_{l,k}}+\frac{\gamma_{0 }G^{2}}{k+1}\]

Now, sum from \(k=k_{0}\) to \(K-1\)

\[2\sum_{k=k_{0}}^{K-1}\mathbb{E}[f(x^{k})-f(x^{*})]\leq\sum_{k=k_{0}}^{K-1} \frac{(1-\mu\gamma_{l,k})\mathbb{E}[\|x^{k}-x^{*}\|^{2}]-\mathbb{E}[\|x^{k+1}- x^{*}\|^{2}]}{\gamma_{l,k}}+\sum_{k=k_{0}}^{K-1}\frac{\gamma_{0}G^{2}}{k+1}\] (29)

For the first term in (29), call it \(A\), we expand it as

\[A =\sum_{k=k_{0}+1}^{K-1}\mathbb{E}[\|x^{k}-x^{*}\|^{2}](\frac{1}{ \gamma_{l,k}}-\frac{1}{\gamma_{l,k-1}}-\mu)+\mathbb{E}[\|x_{k_{0}}-x^{*}\|^{2 }](\frac{1}{\gamma_{l,k_{0}}}-\mu)-\frac{\mathbb{E}[\|x_{K}-x^{*}\|^{2}]}{ \gamma_{l,K-1}}\] \[\leq\sum_{k=k_{0}+1}^{K-1}\mathbb{E}[\|x^{k}-x^{*}\|^{2}](\frac{k +1}{\gamma_{0}}-\frac{k}{\gamma_{0}}-\mu)+\mathbb{E}[\|x_{k_{0}}-x^{*}\|^{2}]( \frac{k_{0}+1}{\gamma_{0}}-\mu)\] \[\stackrel{{(d)}}{{\leq}}\mathbb{E}[\|x_{k_{0}}-x^{*} \|^{2}]\mu k_{0}.\]

where (d) is because \(\gamma_{0}\geq\frac{1}{\mu}\), we have \(\frac{k+1}{\gamma_{0}}-\frac{k}{\gamma_{0}}-\mu\leq 0,\forall k\) and \(\frac{k_{0}+1}{\gamma_{0}}-\mu\leq\mu k_{0}\). For the second term in (29), call it B, we have

\[B=\sum_{k=k_{0}}^{K-1}\frac{\gamma_{0}G^{2}}{k+1}\leq\gamma_{0}G^{2}\int_{k_{0 }}^{K-1}\frac{1}{x+1}dx=\gamma_{0}G^{2}[\log(K)-\log(k_{0}+1)]\leq\gamma_{0}G^ {2}\log K\]

Putting \(A\) and \(B\) together, we obtain

\[\frac{1}{K-k_{0}}\sum_{k=k_{0}}^{K-1}\mathbb{E}[f(x^{k})-f(x^{*})]\leq\frac{ \mathbb{E}[\|x^{k_{0}}-x^{*}\|^{2}]\mu k_{0}}{2(K-k_{0})}+\frac{\gamma_{0}G^{2 }\log(K)}{2(K-k_{0})}\] (30)

Within the first \(k_{0}-1\) iterations, similarly to the above, we have

\[\mathbb{E}[\|x^{k+1}-x^{*}\|] \leq(1-\mu\gamma_{l,k})\mathbb{E}[\|x^{k}-x^{*}\|^{2}]-2\gamma_{l,k}\mathbb{E}[f(x^{k})-f(x^{*})]+\gamma_{b,k}^{2}G^{2}\] \[\leq(1-\mu\gamma_{l,k})\mathbb{E}[\|x^{k}-x^{*}\|^{2}]+\gamma_{b, k}^{2}G^{2}\,.\]For the first \(k\leq k_{0}-1\) iterations, \(\gamma_{l,k}=\omega\) where \(\omega\mu<1\); thus, we obtain the following

\[\mathbb{E}[\|x^{k+1}-x^{*}\|]\leq(1-\mu\omega)E[\|x^{k}-x^{*}\|^{2}]+\gamma_{b,k }^{2}G^{2}.\]

Solve this recursively,

\[\mathbb{E}[\|x^{k_{0}}-x^{*}\|^{2}] \leq(1-\mu\omega)^{k_{0}}\|x^{0}-x^{*}\|^{2}+\sum_{k=0}^{k_{0}-1} (1-\mu\omega)^{k_{0}-k-1}\frac{\gamma_{0}^{2}G^{2}}{(k+1)^{2}}\] \[\leq(1-\mu\omega)^{k_{0}}\|x^{0}-x^{*}\|^{2}+\sum_{k=0}^{k_{0}-1} \frac{\gamma_{0}^{2}G^{2}}{(k+1)^{2}}\] \[\leq(1-\mu\omega)^{k_{0}}\|x^{0}-x^{*}\|^{2}+\gamma_{0}^{2}G^{2} \int_{0}^{k_{0}-1}\frac{1}{(1+x)^{2}}dx\] \[=(1-\mu\omega)^{k_{0}}\|x^{0}-x^{*}\|^{2}+\gamma_{0}^{2}G^{2}(1- \frac{1}{k_{0}})\] \[\leq(1-\mu\omega)^{k_{0}}\|x^{0}-x^{*}\|^{2}+\gamma_{0}^{2}G^{2}.\] (31)

Putting this into (30), we obtain

\[\frac{1}{K-k_{0}}\sum_{k=k_{0}}^{K-1}\mathbb{E}[f(x^{k})-f(x^{*})]\leq\frac{ \mu k_{0}}{2(K-k_{0})}\{\exp(-k_{0}\mu\omega)\|x_{0}-x^{*}\|^{2}+\gamma_{0}^{2} G^{2}\}+\frac{\gamma_{0}G^{2}\log K}{2(K-k_{0})}.\]

Define \(\bar{x}_{K}=\frac{1}{K-k_{0}}\sum_{k=k_{0}}^{K-1}x^{k}\), then by Jensen's inequality we have

\[\mathbb{E}[f(\bar{x}_{K})-f(x^{*})]\leq\frac{\mu k_{0}}{2(K-k_{0})}\{\exp(-k_ {0}\mu\omega)\|x_{0}-x^{*}\|^{2}+\gamma_{0}^{2}G^{2}\}+\frac{\gamma_{0}G^{2} \log K}{2(K-k_{0})},\]

where \(k_{0}=\max\{1,\lceil\gamma_{0}/\omega\rceil-1\}\) and \(\gamma_{0}\geq\frac{1}{\mu}\).

### Bi-level Proofs

#### a.4.1 Proof of Theorem 3

Start with Lemma 4:

\[E[V^{k+1}] \leq\mathbb{E}[V^{k}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F (x^{k})\|^{2}]+(\alpha_{b,k}L_{f}^{2}+2)\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{ 2}]+\] \[\alpha_{b,k}B^{2}+(2L_{y}^{2}\alpha_{b,k}^{2}+\frac{L_{F}\alpha_{b,k}^{2}}{2})\tilde{\sigma}_{f}^{2}-\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2}].\]

We substitute the result of Lemma 5 for the expression \(\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]\),

\[E[V^{k+1}] \leq\mathbb{E}[V^{k}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F (x^{k})\|^{2}]+[(\alpha_{b,k}L_{f}^{2}+2)(1-\mu_{g}C_{k})^{T}-1]\mathbb{E}[\| y^{k}-y^{*}(x^{k})\|^{2}]+\] \[\stackrel{{(a)}}{{\leq}}\mathbb{E}[V^{k}]-\frac{ \alpha_{l,k}}{2}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]+[(\alpha_{b,0}L_{f}^{2}+2) (1-\mu_{g}C_{K-1})^{T}-1]\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2}]+\] \[\stackrel{{(b)}}{{\leq}}E[V^{k}]-\frac{\alpha_{l,k} }{2}E[\|\nabla F(x^{k})\|^{2}]+2\alpha_{b,k}\beta_{b,k}TL_{f}^{2}\sigma_{g}^{2} +4\beta_{b,k}T\sigma_{g}^{2}+\alpha_{b,k}B^{2}+(2L_{y}^{2}+\frac{L_{F}}{2}) \alpha_{b,k}^{2}\tilde{\sigma}_{f}^{2},\]

where (a) is by \(\alpha_{b,0}\geq\alpha_{b,k},C_{K-1}\leq C_{k},\forall k\), hence \((\alpha_{b,0}L_{f}^{2})(1-\mu_{g}C_{K-1})^{T}\geq(\alpha_{b,k}L_{f}^{2})(1- \mu_{g}C_{k})^{T}\) (recall that \(C_{k}=\min\{\frac{1}{2pL_{g}},\beta_{b,k}\}\) in Lemma 1); (b) is by \(T\geq\frac{\log[\alpha_{b,0}L_{f}^{2}+2]}{-\log(1-\mu C_{K-1})}\), which implies that \((\alpha_{b,0}L_{f}^{2}+2)(1-\mu_{g}C_{K-1})^{T}\leq 1\). Now, rearrange and use the fact that \(\alpha_{l,K-1}\leq\alpha_{l,k}\),

\[\alpha_{l,K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]\leq 2\mathbb{E}[V^{k}]-2 \mathbb{E}[V^{k+1}]+4\alpha_{b,k}\beta_{b,k}TL_{f}^{2}\sigma_{g}^{2}+8\beta_{b, k}T\sigma_{g}^{2}+2\alpha_{b,k}B^{2}+(4L_{y}^{2}+L_{F})\alpha_{b,k}^{2} \tilde{\sigma}_{f}^{2}.\]Then sum over \(k=0\) to \(K-1\):

\[\frac{1}{K}\sum_{k=0}^{K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}] \leq\frac{2V^{0}}{\alpha_{l,K-1}K}+\frac{4TL_{f}^{2}\sigma_{g}^{2} }{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\alpha_{b,k}\beta_{b,k}+\frac{8T\sigma_{g}^{2 }}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\beta_{b,k}+\frac{2B^{2}}{\alpha_{l,K-1}K} \sum_{k=0}^{K-1}\alpha_{b,k}+\] \[\qquad\frac{(4L_{y}^{2}+L_{F})\tilde{\sigma}_{f}^{2}}{\alpha_{l,K- 1}K}\sum_{k=0}^{K-1}\alpha_{b,k}^{2}\] \[\overset{(c)}{=}\frac{2V^{0}}{\alpha_{l,K-1}K}+\frac{4TL_{f}^{2} \sigma_{g}^{2}\alpha_{b,0}\beta_{b,0}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\frac{ 1}{(k+1)^{1.5}}+\frac{8T\sigma_{g}^{2}\beta_{b,0}}{\alpha_{l,K-1}K}\sum_{k=0} ^{K-1}\frac{1}{k+1}+\] \[\qquad+\frac{2B^{2}\alpha_{b,0}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1 }\frac{1}{\sqrt{k+1}}+\frac{(4L_{y}^{2}+L_{F})\tilde{\sigma}_{f}^{2}\alpha_{ b,0}^{2}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\frac{1}{k+1}\] \[\overset{(d)}{\leq}\frac{2V^{0}}{\alpha_{l,0}\sqrt{K}}+\frac{8 TL_{f}^{2}\sigma_{g}^{2}\alpha_{b,0}\beta_{b,0}}{\alpha_{l,0}\sqrt{K}}+\frac{8T \sigma_{g}^{2}\beta_{b,0}\log(K)}{\alpha_{l,0}\sqrt{K}}+\] \[\qquad\frac{2B^{2}\alpha_{b,0}}{\alpha_{l,0}}+\frac{(4L_{y}^{2}+L _{F})\tilde{\sigma}_{f}^{2}\alpha_{b,0}^{2}\log(K)}{\alpha_{l,0}\sqrt{K}},\]

where we substituted \(\alpha_{b,k}=\frac{\alpha_{b,0}}{\sqrt{k+1}}\) and \(\beta_{b,k}=\frac{\beta_{b,0}}{k+1}\) in (c); (d) is based on \(\sum_{k=0}^{K-1}\frac{1}{(k+1)^{1.5}}\leq 2\), \(\sum_{k=0}^{K-1}\frac{1}{k+1}\leq\log(K)\), and \(\sum_{k=0}^{K-1}\frac{1}{\sqrt{k+1}}\leq\sqrt{K}\). Recall that in Lemma 2, we have \(L_{f}\sim\mathcal{O}(\kappa^{2})\), \(L_{y}\sim\mathcal{O}(\kappa^{3})\), and \(L_{F}\sim\mathcal{O}(\kappa^{3})\). Also recall that \(\alpha_{b,k}=\frac{\alpha_{b,0}}{\sqrt{k+1}}\) and \(\alpha_{l,k}=\frac{\alpha_{l,0}}{\sqrt{k+1}}\), hence we choose \(\alpha_{l,0}\sim\alpha_{b,0}\sim\mathcal{O}(\kappa^{-3})\), \(T\sim\mathcal{O}(\kappa)\), and \(\beta_{b,0}\sim\mathcal{O}(\kappa^{-2})\). Then we can obtain \(\frac{1}{K}\sum_{k=0}^{K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]\leq\mathcal{O}( \frac{\kappa^{3}}{\sqrt{K}}+\frac{\kappa^{2}\log(K)}{\sqrt{K}})\).

#### a.4.2 Theorem 4 and its proof

**Theorem 4**.: _Suppose \(f\) and \(g\) satisfy Assumptions 3, 4, and 5, and, learning-rate upper bounds \(\alpha_{b,k}=\frac{\alpha_{b,0}}{\sqrt{k+1}}\) and \(\alpha_{l,k}=\frac{\alpha_{l,0}}{\sqrt{k+1}}\) with \(\alpha_{b,0}\) and \(\alpha_{l,0}\) satisfying \(\frac{1}{L_{F}+4L_{F}^{2}}\geq\frac{\alpha_{b,0}^{2}}{\alpha_{l,0}}\) and \(\alpha_{l,0}\leq\alpha_{b,0}\). Further assume that \(\alpha_{k}\) is independent of the stochastic hypergradient \(h_{f}^{k}\). Then, under the Bounded-variance assumption in (16) with \(p\geq\max\{\frac{\mu_{g}}{\mu_{g}+L_{g}},\frac{\mu_{g}+L_{g}}{4L_{g}}\}\), \(\beta_{b,0}\leq\min\{\frac{2}{\mu_{g}+L_{g}},\frac{\mu_{g}+L_{g}}{2\mu_{g}L_{g }},\frac{1}{2pL_{g}-\frac{2\mu_{g}L_{g}}{\mu_{g}+L_{g}}}\}\), and \(T\geq\frac{\log(\frac{3}{2}\alpha_{b,0}L_{f}^{2}+2)}{\min\{-\log(1-\frac{2\mu_ {g}L_{g}}{\mu_{g}+L_{g}}\beta_{b,K-1}),-\log((2pL_{g}-\frac{2\mu_{g}L_{g}}{\mu _{g}+L_{g}}\beta_{b,0}))\}}\), BiSPS achieves the following rate:_

\[\frac{1}{K}\sum_{k=0}^{K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]\leq\tilde{ \mathcal{O}}(\frac{\kappa^{3}}{\sqrt{K}}+\frac{\kappa^{2}\log K}{\sqrt{K}}).\]

Proof.: Start with Lemma 4:

\[E[V^{k+1}] \leq\mathbb{E}[V^{k}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F (x^{k})\|^{2}]+(\alpha_{b,k}L_{f}^{2}+2)\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]+\] \[\qquad\alpha_{b,k}B^{2}+(2L_{y}^{2}\alpha_{b,k}^{2}+\frac{L_{F} \alpha_{b,k}^{2}}{2})\tilde{\sigma}_{f}^{2}-\mathbb{E}[\|y^{k}-y^{*}(x^{k})\|^{2 }].\]

We substitute the result of Lemma 6 for the expression \(\mathbb{E}[\|y^{k+1}-y^{*}(x^{k})\|^{2}]\),

\[E[V^{k+1}] \leq\mathbb{E}[V^{k}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\|\nabla F (x^{k})\|^{2}]+[(\alpha_{b,k}L_{f}^{2}+2)(\frac{\gamma_{b,k}}{C_{k}}-\frac{2 \mu_{g}L_{g}}{\mu_{g}+L_{g}}\beta_{b,k})^{T}-1]\mathbb{E}[\|y^{k}-y^{*}(x^{k}) \|^{2}]+\] \[\qquad+L_{f}^{2}T\sigma_{g}^{2}\alpha_{b,k}\beta_{b,k}^{2}+2T \sigma_{g}^{2}\beta_{b,k}^{2}+\alpha_{b,k}B^{2}+[2L_{y}^{2}+\frac{L_{F}}{2}] \alpha_{b,k}^{2}\tilde{\sigma}_{f}^{2}\] \[\overset{(a)}{\leq}E[V^{k}]-\frac{\alpha_{l,k}}{2}\mathbb{E}[\| \nabla F(x^{k})\|^{2}]+L_{f}^{2}T\sigma_{g}^{2}\alpha_{b,k}\beta_{b,k}^{2}+2T \sigma_{g}^{2}\beta_{b,k}^{2}+\alpha_{b,k}B^{2}+[2L_{y}^{2}+\frac{L_{F}}{2}] \alpha_{b,k}^{2}\tilde{\sigma}_{f}^{2},\]where in (a) we have chosen \(T\geq\max\{\frac{\log(\alpha_{b,0}L_{f}^{2}+2)}{-\log(1-\frac{\ln_{2}\sigma_{g}L_{ g}}{\sigma_{b}+L_{g}}\beta_{b,K-1})},\frac{\log(\alpha_{b,0}^{2}L_{f}^{2}+2)}{- \log(2pL_{g}-\frac{2\sigma_{g}L_{g}}{\sigma_{g}+L_{g}}\beta_{b,0})}\}\). This ensures that \(T\geq\frac{\log(\alpha_{b,0}L_{f}^{2}+2)}{-\log(\frac{\alpha_{b,0}L_{f}^{2}+2 }{\sigma_{b}+L_{g}}\beta_{b,k})},\forall k\), which guarantees that \((\alpha_{b,k}L_{f}^{2}+2)(\frac{\beta_{b,k}}{C_{k}}-\frac{2\mu_{g}L_{g}}{\mu_{ g}+L_{g}}\beta_{b,k})^{T}-1\leq 0\).

Now, rearrange and use the fact that \(\alpha_{l,K-1}\leq\alpha_{l,k}\),

\[\alpha_{l,K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]\leq 2\mathbb{E}[V^{k}]-2 \mathbb{E}[V^{k+1}]+2\alpha_{b,k}\beta_{b,k}^{2}TL_{f}^{2}\sigma_{g}^{2}+4 \beta_{b,k}^{2}T\sigma_{g}^{2}+2\alpha_{b,k}B^{2}+(4L_{y}^{2}+L_{F})\alpha_{b,k}^{2}\tilde{\sigma}_{f}^{2}.\]

Sum over \(k=0\) to \(k=K-1\):

\[\frac{1}{K}\sum_{k=0}^{K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}] \leq\frac{2V^{0}}{\alpha_{l,K-1}K}+\frac{2TL_{f}^{2}\sigma_{g}^{2 }}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\alpha_{b,k}\beta_{b,k}^{2}+\frac{4T\sigma_ {g}^{2}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\beta_{b,k}^{2}+\] \[\qquad\frac{2B^{2}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\alpha_{b,k}+ \frac{(4L_{y}^{2}+L_{F})\tilde{\sigma}_{f}^{2}}{\alpha_{l,K-1}K}\sum_{k=0}^{ K-1}\alpha_{b,k}^{2}\] \[\overset{(b)}{=}\frac{2V^{0}}{\alpha_{l,K-1}K}+\frac{2TL_{f}^{2} \sigma_{g}^{2}\alpha_{b,0}\beta_{b,0}^{2}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1} \frac{1}{(k+1)^{3/2}}+\frac{4T\sigma_{g}^{2}\beta_{b,0}^{2}}{\alpha_{l,K-1}K} \sum_{k=0}^{K-1}\frac{1}{k+1}+\] \[\qquad\frac{2B^{2}\alpha_{b,0}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1} \frac{1}{(k+1)^{0.5}}+\frac{(4L_{y}^{2}+L_{F})\tilde{\sigma}_{f}^{2}\alpha_{b,0}^{2}}{\alpha_{l,K-1}K}\sum_{k=0}^{K-1}\frac{1}{k+1}\] \[\overset{(c)}{\leq}\frac{2V^{0}}{\alpha_{l,K-1}K}+\frac{2TL_{f}^ {2}\sigma_{g}^{2}\alpha_{b,0}\beta_{b,0}^{2}}{\alpha_{b,0}\sqrt{K}}+\frac{4T \sigma_{g}^{2}\beta_{b,0}^{2}\log(K)}{\alpha_{b,0}\sqrt{K}}+\] \[\qquad+\frac{2B^{2}\alpha_{b,0}}{\alpha_{l,0}}+\frac{(4L_{y}^{2} +L_{F})\tilde{\sigma}_{f}^{2}\alpha_{b,0}^{2}\log(K)}{\alpha_{l,0}\sqrt{K}},\]

where in (b) we have substituted \(\alpha_{b,k}=\frac{\alpha_{b,0}}{\sqrt{k+1}}\) and \(\beta_{b,k}=\frac{\beta_{b,0}}{\sqrt{k+1}}\), and (c) is by \(\sum_{k=0}^{K-1}\frac{1}{(k+1)^{3/2}}\leq 2\), \(\sum_{k=0}^{K-1}\frac{1}{k+1}\leq\log(K)\), and \(\sum_{k=0}^{K-1}\frac{1}{(k+1)^{1/2}}\leq\sqrt{K}\). Similar to the proof of Theorem 3, we choose \(\alpha_{l,0}\sim\alpha_{b,0}\sim\mathcal{O}(\kappa^{-3})\), \(T\sim\mathcal{O}(\kappa)\), and \(\beta_{b,0}\sim\mathcal{O}(\kappa^{-1})\) to obtain \(\frac{1}{K}\sum_{k=0}^{K-1}\mathbb{E}[\|\nabla F(x^{k})\|^{2}]\leq\mathcal{O}( \frac{\kappa^{3}}{\sqrt{K}}+\frac{\kappa^{2}\log(K)}{\sqrt{K}})\). 

## Appendix B Additional Experiment Results

This section is organized as follows. First, we discuss synthetic quadratics experiments. Second, we provide more details on the sensitivity of the algorithms to the choices of \(\delta\) in (14), on the reset procedure, and on the search cost of BiSLS. Third, we compare the empirical performance of 1-sample vs 2-samples implementations of our algorithms for single-level convex and bi-level optimization. Some additional results for hyper-representation learning and data distillation experiments are also presented. We run \(5\) independent runs for all our experiments.

### Synthetic Quadratics

The experiments on quadratic functions are adapted from Loizou et al. [29]. The training objective is as follows:

\[f(x)=\frac{1}{2}\left(x-x_{1}^{*}\right)^{T}H_{1}(x-x_{1}^{*})\,+\,\frac{1}{2} \left(x-x_{2}^{*}\right)^{T}H_{2}(x-x_{2}^{*}),\]

where \(H_{i}\) (\(i=1,2\)) are positive definite. The optimal solutions \(x_{i}^{*}\) (\(i=1,2\)) are generated randomly from a standard normal distribution. Specifically, \(H_{i}\) is defined as follows:

\[H_{i}=O^{T}\cdot\text{Diag}(\log(1+\lambda_{i}))\cdot O,\quad i=1,2,\]

where \(O\) and \(\lambda_{i}\) are taken from the spectral decomposition of \(P^{T}P\), and \(P\) is generated from the standard normal distribution. Figure 9 shows the convergence of various algorithms with different starting points. Interestingly, both SPSB with either 1 sample or 2 samples (1 sample for computing the gradient and the other for computing the step size) converge to the optimal solution (labelled with a star).

### Sensitivity of \(\delta\), reset, and search cost

In this section, we discuss the effects of \(\delta\) in (14), \(\eta\) in Algorithm 2, and comment on the search cost of the options in the Reset Algorithm 2. Recall that the line-search condition (8) assumes that we can find a largest \(\gamma_{k}\leq\gamma_{b,0}\) to satisfy it. However, in practice, we apply a backtracking procedure, i.e. \(\gamma_{k}=\gamma_{k}*w,0<w<1\), until \(\gamma_{k}\) satisfies (8). Therefore, the found learning rate is not guaranteed to be the largest. Nonetheless, we assume that \(\gamma_{k}\) is the largest to simplify our analysis given above (similar arguments apply to line-search at both upper and lower-level in the bi-level optimization). The experiments in this section are based on hyper-representation learning [42]. In this case, the objective of the induced bilevel-optimization problem can be written as:

\[\min_{w}F(w)=\frac{1}{2D_{X_{1}}}\|\tilde{f}(X_{1};w)c^{*}(w)-Y_{1 }\|^{2}\] \[s.t.\quad c^{*}(w)=\operatorname*{argmin}_{c}\frac{1}{2D_{X_{2}} }\|\tilde{f}(X_{2};w)c-Y_{2}\|^{2}+\frac{\lambda}{2}\|c\|^{2}\,,\]

where \((X_{1},Y_{1})\) and \((X_{2},Y_{2})\) are validation and training data sets with sizes \(D_{X_{1}}\) and \(D_{X_{2}}\), respectively; \(\tilde{f}(\cdot;w)\) are the embedding layers of the model parameterized by \(w\); and, \(c\) is the classification layer. Moreover, we use conjugate gradient methods (CG) [17; 18] to solve the linear system when computing the hypergradient for hyper-representation learning experiments.

ResetWhile Algorithm 2 (reset) can be applied to both upper and lower-level problems, we focus our discussions here on the upper-level learning rate (\(\alpha_{k}\)). This is because we empirically find it to be more critical for the convergence performance (see Figure 5(a)). As shown in Algorithm 2, reset has \(3\) options. Options \(1\), \(2\), and \(3\) search starting from \(\alpha_{b,0}\), \(\alpha_{k-1}\), and \(\eta\alpha_{k-1}\), at iteration \(k\) respectively. Option \(1\) has the highest search cost as it always starts from the same initial upper bound (\(\alpha_{b,0}\)). Option \(2\) ensures the monotonicity of the learning rate due to \(\alpha_{k}\leq\alpha_{b,k}=\alpha_{k-1}\). Option \(3\) chooses the search starting point at iteration \(k\) (\(\alpha_{b,k}\)) by multiplying the previous learning rate (\(\alpha_{k-1}\)) by a factor \(\eta\geq 1\). As in the single-level convex case where monotonicity in the step size can potentially lead to slow convergence (see Figure 3), we again observe that monotonicity in the upper learning rate (i.e. option 2) leads to poorer performance when compared against options 1 or 3 as shown in Figure 10. Finally, we compare the performance of different \(\eta\)s in option \(3\) (note that \(\eta=1\) in option 3 is equivalent to option 2). We observe in Figure 11 that different \(\eta\)s perform equally well. This shows the robustness of our algorithm to the choice of \(\eta\). As mentioned previously, the choice of option \(3\) over option \(1\) are due to 2 reasons: (a) reduced search cost; (b) provides an overall non-increasing and non-monotonic trend of upper bound \(\alpha_{b,k}\). We discuss search cost of different \(\eta\)s in option 3 below.

Search CostBased on the results in Figure 6(b), we observe the use of option 3 in reset can significantly reduce the search cost for both BiSLS-Adam and BiSLS-SGD. Figure 10 further suggests that options 1 and 3 have nearly the same performance. Therefore, option 3 is an efficient algorithm that maintains good performance while reducing computation cost. Option 2 has the lowest search cost (\(\sim 4\) rounds per iteration). However, its performance is not as good as option 1 or 3 as

Figure 9: Iterate trajectories of different starting points for the synthetic quadratic experiments.

observed in Figure 10. Moreover, the average lower-level search cost is only \(1\) round per iteration when option 1 is used (see Figure 12).

Sensitivity on \(\delta\)As mentioned in Sec 2, due to the stochastic error in hypergradient computation, further complicated by the approximation error of \(y^{*}(x)\) (see (14)), a learning rate is not guaranteed to be found in the bi-level case. Specifically, this is in contrast to the single-level convex problems. To avoid this, we introduce in (14) a \(\delta\) slack to give some tolerance to such errors. Here, we give a thorough investigation of the effects of \(\delta\) on performance. We vary its magnitude across 6 orders for both reset options \(1\) and \(3\) (see Algorithm 2 and discussions on reset above). We observe that despite a large difference on the magnitudes of \(\delta\), they all share very similar performance for both BiSLS-SGD and BiSLS-Adam: see Figures 13 and 14. We summarize the key fins in this section as follows: 1 **The option 3 in reset has good empirical performance (outperforms option 2) and is an effective way to reduce search cost (Figure 10, 27); 2 BiSLS is highly robust to different choices of \(\eta\) in option 3 and \(\delta\) in (14) (Figure 11, 13, 14).**

Figure 11: Validation loss against iterations for different \(\eta\)s based on reset option 3. Results for BiSLS-SGD are given in (a) and for BiSLS-Adam are given in (b). Note that \(\eta=1\) in reset option 3 is equivalent to reset option 2. For the lower-level search, we fix it option 1 with \(\beta_{b,0}=100\). Results are based on hyper-representation learning.

Figure 10: Validation loss against iterations with search options \(1\), \(2\), and \(3\) for the upper-level learning rate. The results for BiSLS-SGD and BiSLS-Adam are in (a) and (b), respectively. For the lower-level search, we fix it option 1 with \(\beta_{b,0}=100\). Results are based on hyper-representation learning.

### Data distillation objective and additional results

We let \(\mathcal{L}_{S}(w)\) denote the loss evaluated on dataset \(S\) with model weights \(w\). The objective of _data distillation_ can be expressed as a BO problem as follows:

\[D^{*}\,=\,\operatorname*{argmin}_{D}\mathcal{L}_{\tilde{V}}(w^{*}(D))\quad \text{s.t.}\quad w^{*}(D)\,=\,\operatorname*{argmin}_{w}\mathcal{L}_{D}(w),\]

where \(\tilde{V}\) is of the same size as \(D\) and subsampled from the entire (original) dataset \(V\). The solution \(D^{*}\) is the distilled data, e.g. 9 MNIST digits each corresponding to a different label. In figure 14(a), we show the performance of BiSPS for different values of \(\alpha_{b,0}\) in comparison with BiSLS-SGD, and observe that BiSLS-SGD has better performance. In 14(b), we show the results when we increase the number of lower-level iterations (T) from 20 to 50. As observed for \(T=20\) (in Figure 8), BiSLS-SGD here also outperforms a fine-tuned Adam or SGD.

### 1-sample or 2-samples versions of algorithms for convex and bi-level optimization

We provide additional results to compare the performance of 1-sample and 2-samples (one for computing the gradient and the other for computing the step size) versions of our algorithms for

Figure 12: Lower-level search cost measured in the same way as upper-level against different lower-level search starting points (\(\beta_{b,0}\)). The lower-level search is done with option 1 (see above for discussions about these options).

Figure 13: Validation loss against iterations for different \(\delta\)s based on reset option 1. Results for BiSLS-SGD (a) and for BiSLS-Adam (b). For the lower-level search, we fix it option 1 with \(\beta_{b,0}=100\). Results are based on hyper-representation learning.

SPSB and BiSPS used for single-level and bi-level optimization, respectively. In the single-level case (Figure 16), we observe that \(2\)-samples SPSB performs just as well as 1-sample SPSB. Interestingly, we observe that their step sizes also follow a similar pattern. That is: an initial increase followed by a regime where \(\gamma_{k}=\frac{f_{i_{k}}(x^{k})-l_{i_{k}}^{\epsilon}}{c\|\nabla f_{i_{k}}(x^{ k})\|^{2}}\) is frequently used, and eventually changes to decaying-step SGD. This seems to also match with Theorem 2 where a transition point for SPSB (\(k_{0}=\max\{1,|\gamma_{0}/\omega|-1\},w=\frac{1}{2cL_{\max}},\gamma_{0}\geq \frac{1}{\mu}\)) is predicted. At the same time, we also note that (perhaps, unsurprisingly) the 2-samples version seems to have a slightly more oscillatory behavior than the 1-sample version as shown in Figure 16. SLSB with either 1-sample or 2-samples also result in a similar performance and step size. Overall, despite the requirements of Theorems 1 and 2 for a 2-samples assumption, the empirical performance of 1-sample and 2-samples for either SPSB or SLSB appears to be very similar. Moving on to the bi-level case, recall that Theorems 3 and 4 require the 2-samples assumption (i.e., \(\alpha_{k}\) independent of \(h_{f}^{k}\)) for the upper-level learning rate. We empirically verify this assumption with both hyper-representation learning and data distillation experiments. For hyper-representation learning experiments in Figure 17, BiSPS with either 1-sample or 2-samples for different values of \(\alpha_{b,0}\) show similar performance. In fact, for \(\alpha_{b,0}=0.1\) we even observe that the 2-samples variant outperforms the 1-sample BiSPS. For data distillation experiments in Figure 18, the performances of 1-sample and 2-samples BiSPS are similar to each other when

Figure 14: Validation loss against iterations for different \(\delta\)s based on reset option 3 (\(\eta=10\)). Results for BiSLS-SGD (a) and for BiSLS-Adam (b). For the lower-level search, we fix it option 1 with \(\beta_{b,0}=100\). Results are based on hyper-representation learning.

Figure 15: Validation loss against iterations. (a) Comparison between BiSPS with different \(\alpha_{b,0}\)s and BiSLS-SGD. (b) Comparison between BiSLS-SGD to fine-tuned Adam/SGD (\(\beta_{k}\) fixed at \(10^{-4}\)). Inverse Hessian in (2) treated as the Identity [30] when computing the hypergradient. Recall that T is the total number of lower-level iterations and we have shown the results for \(T=20\) in Figure 8b.

\(\alpha_{b,0}=10.0\) or \(\alpha_{b,0}=50.0\). In general, the performance difference between 1-sample and 2-samples in the single-level or bi-level settings is small.

Figure 16: Binary linear classification on w8a dataset using logistic loss [3]. Train loss (left) and step size (right) against iterations. We choose \(\gamma_{b,0}=1000\) for all algorithms. The upper bound for either SPSB or SLSB decays as \(\gamma_{b,k}=\frac{\gamma_{b,0}}{\sqrt{k+1}}\). For decaying-step SGD, the learning rate schedule is \(\frac{\gamma_{b,0}}{\sqrt{k+1}}\).

Figure 17: Comparison between BiSPS (2-samples), BiSPS (1-sample) and decaying-step SGD. Experiments are based on hyper-representation learning. For either version of BiSPS, the lower-level learning rate (\(\beta_{k}\)) is fixed at \(10\). The hypergradient is computed using conjugate gradient [17].

Figure 18: Comparison between BiSPS (2-samples), BiSPS (1-sample) and decaying-step SGD. Experiments are based on data distillation. For either version of BiSPS, the lower-level learning rate (\(\beta_{k}\)) is fixed at \(10^{-4}\). The Inverse Hessian in (2) is treated as the Identity when computing the hypergradient [30].