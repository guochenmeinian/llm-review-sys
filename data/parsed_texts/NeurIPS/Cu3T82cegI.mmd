# A General Framework for Learning under Corruption: Label Noise, Attribute Noise, and Beyond

Anonymous Author(s)

Affiliation

Address

email

###### Abstract

Corruption is frequently observed in collected data and has been extensively studied in machine learning under different corruption models. Despite this, there remains a limited understanding of how these models relate such that a unified view of corruptions and their consequences on learning is still lacking. In this work, we formally analyze corruption models at the distribution level through a general, exhaustive framework based on Markov kernels. We highlight the existence of intricate joint and dependent corruptions on both labels and attributes, which are rarely touched by existing research. Further, we show how these corruptions affect standard supervised learning by analyzing the resulting changes in Bayes Risk. Our findings offer qualitative insights into the consequences of "more complex" corruptions on the learning problem, and provide a foundation for future quantitative comparisons. Applications of the framework include corruption-corrected learning, a subcase of which we study in this paper by theoretically analyzing loss correction with respect to different corruption instances.

## 1 Introduction

Machine learning starts with data. The most widespread conception of data defines them as atomic facts, perfectly describing some reality of interest [1]. In learning theories, this is reflected by the often-used assumption that training and test data are drawn independently from the same distribution. The goal of learning is to identify and synthesize patterns based on the knowledge, or information, embedded in these data. In practice, however, corruption regularly occurs in data collection. This creates a mismatch between training and test distributions, forcing us to learn from imperfect facts.

We should thus doubt the view of data as static facts, and consider them as a dynamic element of a learning task [2]. Besides the predictor and the loss function, one may focus on the data dynamics, studying corruptions and intervening in the learning process. Toward this goal, there has been a surge of research in the machine learning community proposing various corruption models, examining and correcting their effects on learning formally or empirically [3; 4; 5; 6; 7; 8]. Nevertheless, it is still unclear how these models relate and whether they characterize all types of corruption. Even though the necessity of investigating this topic is recognized both at a practical [9; 10] and a theoretical [11; 12] level, no standardized way to model and analyze corruption has been so far created [13].

Our primary objective here is to systematically study the problem of learning under corruption, providing a general framework for analysis. Whilst there have been some existing attempts, certain limitations persist in terms of homogeneity and exhaustiveness. A famous early endeavor is Quinonero-Candela et al. [14], grouping together works about the multi-faceted topic of dataset shift, yet not in a unifying or comprehensive manner. Later on, several studies aim to provide a more homogeneous view of corruption, often referred to as noise or distribution shift. However, their frameworkstypically rely on some corruption-invariant assumptions on the marginal or conditional probabilities, and the extent of exhaustiveness is merely conjectured or not considered [15; 16; 17; 18].

In this paper, we take a different point of view from the previous work: we categorize corruption based on its dependence on the feature and label space, rather than relying on the notion of invariance. Our resulting framework is generic, encompassing all possible pairwise stochastic corruptions.1 The underpinning mathematical tool that enables such exhaustiveness is the Markov kernel. While Markov kernels have been utilized in formalizing corruption [7; 19], their primary focus has been solely on label corruption, attribute corruption, or simple joint corruption. To our knowledge, the proposed framework is novel in the sense of demonstrated exhaustiveness in this domain. Our contributions are summarized as follows:

Footnote 1: As for non-stochastic ones, we show that they always have a stochastic alternative representation. See ยง 3.

**C1**: We propose a new taxonomy of corruption in the supervised learning setting (SS 3), hierarchically organized through the notion of dependence (Fig. 1), and connect existing corruption models to this taxonomy (Tab. 1).
**C2**: We analyze the implications of our family of corruptions on learning (SS 4), linking the Bayes risk of the clean and corrupted supervised learning problems through equality results (Theorem 3, Theorem 4, Theorem 5).
**C3**: We derive corruption-corrected loss functions for different corruption instances within our framework (SS 5). A subcase of these corrections (Theorem 8) generalizes prior results on corruption-corrected learning in simple label corruption.

Though abstract in general, our results expand upon existing ones on specific corruption models and shed light on the relatively under-explored joint and dependent corruptions.

## 2 Background

Before introducing our analysis, we review the background framework and notations.

Supervised learningIn statistical decision theory [20; 21], a general decision problem can be viewed as a two-player game between _nature_ and _decision-maker_. Nature chooses its _state_, then _experiment_ leads to some _observations_ given the state, and the decision-maker picks a suitable _action_ from a fixed set of _decision rules_. In the specific setting of _supervised learning_, observations are in the feature space \(X\subset\mathbb{R}^{d},d\geq 1\), states are in the label space \(Y\), then the _experiment_\(E\) leads to a probability associated with the observation \(X\), given the state \(Y\). Here we focus on the classification task, that is, assuming the label space to be _finite_. All the stated results can be easily extended to regression cases by considering a continuous label space; we leave it for future application.

To formalize the processes described above, we introduce the Markov kernel.

**Definition 1** (Klenke [22]).: _A Markov kernel\(\kappa\) from a measurable space \((X_{1},\mathcal{X}_{1})\) to a measurable space \((X_{2},\mathcal{X}_{2})\) is a function \(x_{1}\mapsto\kappa(x_{1},\cdot)\) from \(X_{1}\) to \(\mathcal{P}(X_{2})\), the set of probability measures on \(X_{2}\), such that \(\kappa(x_{1},B)\) is measurable in \(x_{1}\) for each set \(B\in\mathcal{X}_{2}\). We denote it by \(\kappa:X_{1}\rightsquigarrow X_{2}\), or more compactly by \(\kappa_{X_{1}X_{2}}\). The set of Markov kernels from \(X_{1}\) to \(X_{2}\) is referred to as \(\mathcal{M}(X_{1},X_{2})\)._

The Markov kernel generalizes the concept of conditional probability. Looking at the function \(\kappa(\cdot,B)\), it associates different probabilities to the set \(B\) given different values of the _parameter_\(x_{1}\). It can transform a distribution \(\mu\in\mathcal{P}(X_{1})\) into another distribution \(\mu\kappa\in\mathcal{P}(X_{2})\), as well as transform a function \(f:X_{2}\to\mathbb{R}\) into another function \(\kappa f:X_{1}\to\mathbb{R}\) with the following two operators:

\[\mu\kappa(B)\coloneqq\int_{X_{1}}\kappa(x_{1},B)\mu(dx_{1})\;\;\forall B\in \mathcal{X}_{2}\;,\qquad\kappa f(x_{1})\coloneqq\int_{X_{2}}\kappa(x_{1},dx_{ 2})f(x_{2})\;\;\forall x_{1}\in X_{1}\;,\]

provided the integral exists. Next, we define different operations to combine Markov kernels:

**P1**: Given \(\kappa:X_{1}\rightsquigarrow X_{2}\) and \(\lambda:X_{1}\times X_{2}\rightsquigarrow X_{3}\), their _chain composition_\(\kappa\circ\lambda:X_{1}\rightsquigarrow X_{3}\) is defined by \((\kappa\circ\lambda)f(x_{1})\coloneqq\int_{X_{2}}\kappa(x_{1},dx_{2})\int_{X_ {3}}\lambda((x_{1},x_{2}),dx_{3})f(x_{3})=\kappa(\lambda\;f)(x_{3})\) where \(f:X_{3}\to\mathbb{R}\) is a positive \(\mathcal{X}_{3}\)-measurable function;
**P2**: For \(\kappa:X_{1}\rightsquigarrow X_{2}\) and \(\lambda:X_{1}\times X_{2}\rightsquigarrow X_{3}\), their _product composition_\(\kappa\times\lambda:X_{1}\rightsquigarrow X_{2}\times X_{3}\) is \((\kappa\times\lambda)f(x_{1})\coloneqq\int_{X_{2}}\kappa(x_{1},dx_{2})\int_{X_ {3}}\lambda((x_{1},x_{2}),dx_{3})\,f(x_{2},x_{3})\) for every \(f\) positive \(\mathcal{X}_{2}\times\mathcal{X}_{3}\)-measurable.

Notice that a probability distribution is a specific instance of a Markov kernel, constant in its parameter space. Therefore, **P1** and **P2** are well defined for \(\kappa\equiv\mu\in\mathcal{P}(X_{2})\). We can unify the notation of \(\times\) for distributions thanks to the flexibility of kernels, and consider the \(\mu\kappa\) as a subcase of \(\mu\circ\kappa\).

Bayes riskHaving defined all these objects, a supervised learning problem can be represented by the diagram \(Y\stackrel{{ E}}{{\rightsquigarrow}}X\stackrel{{ h}}{{\rightsquigarrow}}Y,\) where \(h\) is a decision rule chosen in \(\mathcal{M}(X,Y)\). Its task can be formalized as a risk minimization problem, i.e., finding the optimal action \(h\in\mathcal{H}\) by considering the _Bayes Risk_ (BR) measure

\[BR_{\ell}(\pi\times E)=\inf_{h\in\mathcal{M}(X,Y)}R_{\pi,\ell}(\pi\times E)=\inf _{h\in\mathcal{M}(X,Y)}\mathbb{E}_{\mathsf{Y}\sim\pi}\mathbb{E}_{\mathsf{X} \sim E_{\mathsf{Y}}}\ell(h_{\mathsf{X}},\mathsf{Y})\,\]

where the notation \(\kappa_{\mathsf{X}}\) stands for the kernel \(\kappa\) evaluated on the parameter \(\mathsf{X}\), e.g., \(h_{\mathsf{X}},E_{\mathsf{Y}}\) (this subscript notation will be used throughout), and \(\pi\) is a prior distribution on \(Y\). The function \(\ell\) is asked to be bounded and a _proper loss_[23, 24], i.e., a loss function \(\ell:\mathcal{P}(Y)\times Y\to\mathbb{R}^{+}\) whose minimization set contains the ground truth class probability. More formally, we ask for

\[\exists\;h^{*}\in\arg\min_{h\in\mathcal{M}(X,Y)}R_{\pi,\ell,\mathcal{A}}(E) \text{ such that }h^{*}\times\mu=E\times\pi\;,\exists\;\mu\in\mathcal{P}(X)\.\]

Since in real-world applications, one deploys a model with only limited representation capacity, we consider the constrained version of BR

\[BR_{\ell,\mathcal{H}}(\pi_{Y}\times E)=\inf_{h\in\mathcal{H}\subseteq \mathcal{M}(X,Y)}\mathbb{E}_{\mathsf{Y}\sim\pi_{Y}}\mathbb{E}_{\mathsf{X}\sim E _{\mathsf{Y}}}\ell(h_{\mathsf{X}},\mathsf{Y})\.\]

We call \(\mathcal{H}\) the _model class_. If we fix the joint space to \(Z=X\times Y\) and the joint probability distribution to \(P=\pi_{Y}\times E\in\mathcal{P}(Z)\), we can refer to a _supervised learning problem_ as the triple \((\ell,\mathcal{H},P)\). Notice that we can also use an equivalent decomposition of the joint distribution through a posterior kernel \(F:X\rightsquigarrow Y\), so that \(P=\pi_{X}\times F\) for some prior on the feature space. Hence, each supervised learning problem can have two associated kernels, the experiment \(E\) and the posterior one \(F\). We then obtain two views of the learning problem, a generative and a discriminative one, as previously noted by Reid et al. [25]. By means of these, we can define two _Conditional BR_ (CBR):

\[\text{Discriminative:}\;\;\mathbb{E}_{\mathsf{X}\sim\pi_{X}}CBR_{ \ell,\mathcal{H}}(F_{\mathsf{X}}) =\mathbb{E}_{\mathsf{X}\sim\pi_{X}}\inf_{h_{\mathsf{X}}\in \mathcal{H}_{\mathsf{X}}}\mathbb{E}_{\mathsf{Y}\sim F_{\mathsf{X}}}\ell(h_{ \mathsf{X}},\mathsf{Y})\,\] (1) \[\text{Generative:}\;\;\mathbb{E}_{\mathsf{Y}\sim\pi_{Y}}CBR_{ \ell,\mathcal{H}}(E_{\mathsf{Y}}) =\mathbb{E}_{\mathsf{Y}\sim\pi_{Y}}\inf_{h\in\mathcal{H}}\mathbb{E }_{\mathsf{X}\sim E_{\mathsf{Y}}}\ell(h_{\mathsf{X}},\mathsf{Y})\,\]

both equal to their corresponding constrained BR. Notice that for Eq. (1) to be well defined, we need at least one minimum of the unconstrained BR to be included in the model class. For our convenience, we ask it to be the _\(h\) matching_ the \(F\).

## 3 A general framework for corruption

In this section, we present a general framework of pairwise corruptions based on the notion of _dependence_ and discuss how existing corruption models fit into this framework as subcategories. First, let us formally define corruption and two additional kernel operations, which will be useful in the buildup of our corruption taxonomy.

**Definition 2**.: _A corruption is a Markov kernel \(\kappa\) that sends a probability space \((X\times Y,\mathcal{X}\times\mathcal{Y},P)\) into another, \((X\times Y,\mathcal{X}\times\mathcal{Y},\tilde{P})\). We write it as \(\kappa_{\tilde{Z}\tilde{Z}}\),2 and call the variables \(z=(x,y)\in Z\) parameters and the differentials \(d\tilde{z}=d\tilde{x}d\tilde{y}\) corrupted variables._

Footnote 2: We slightly abuse the kernel notation \(\kappa_{Z\tilde{Z}}\) to describe how corruption changes the probability spaces. For instance, if a corruption acts solely on the space \(X\), it will be written as \(\kappa_{X\tilde{X}}\); however, only the probability measure on it will be actually changed.

The following operations are not considered in the classical probability literature but have been studied in other areas, e.g., through the lens of category theory [26, 27, 28]. Here we rework them to fit our framework.

Given \(\kappa:X_{1}\rightsquigarrow X_{2}\) and \(\lambda:X_{3}\rightsquigarrow X_{4}\), their _superposition_ (see SS S2.1) is equal to \(\kappa\lambda:X_{1}\times X_{3}\rightsquigarrow X_{2}\times X_{4}\) as \((\kappa\lambda)f(x_{1},x_{3}):=\int_{X_{2}}\kappa(x_{1},dx_{2})\int_{X_{4}} \lambda(x_{3},dx_{4})\,f(x_{2},x_{4})\), where \(f:X_{2}\times X_{4}\to\mathbb{R}\) is positive \(\mathcal{X}_{2}\times\mathcal{X}_{4}\)-measurable;* The _pseudo-inverse_ of a kernel \(\kappa:X_{1}\rightsquigarrow X_{2}\) is defined as \(\kappa^{\dagger}:X_{2}\rightsquigarrow X_{1}\) such that \((\kappa^{\dagger}\circ\kappa)\mu_{1}=\mu_{1}\) and \((\kappa\circ\kappa^{\dagger})\mu_{2}=\mu_{2}\) with \(\mu_{1},\mu_{2}\) being the probabilities associated to \(X_{1},X_{2}\). In general, the pseudo-inverse is not unique, since it corresponds to a class of equivalence induced by the probability measure on \(X_{1}\) (see details in SS S2.2).

Again, **P3** is well defined for \(\kappa\equiv\mu\in\mathcal{P}(X_{2})\). This operation allows for more flexible combinations of kernels, in a "parallel" fashion. No restriction is imposed on the parameter spaces to be equal, e.g., \(X_{1}=X_{2}\), or Cartesian products with some space in common, e.g., \(X_{1}=Y_{1}\times Y_{2},X_{2}=Y_{1}\times Y_{3}\). When this happens, the action of the two kernels "superpose" on the same space. In addition, having more than one measure in the integral acting on the same space would make the integral ill-defined, so this case is excluded. Because of these properties, we say that **P3** is the operation with the _weakest feasibility conditions_, i.e., the set of rules to fulfill a well-defined operation.

Building a taxonomy of corruptionsCorruptions can be naturally classified in different ways, depending on their behavior with respect parameters and corrupted variables. In Fig. 0(a), we show all possible non-trivial corruption types, i.e., those that are not identical and not constantly equal to a probability. We classify them based on the number of parameters they _depend on_, and the type of corrupted variables they _result in_. Specifically, we employ the following abbreviations: J is short for Joint (both variables are corrupted), S is short for Simple (the parameter and the corrupted variable are the same), and D is short for Dependent (others). We then obtain the classification: 2-parameter joint corruption (2J), 1-parameter joint corruption (1J), 2-parameter dependent corruption (2D), 1-parameter dependent corruption (1D), simple corruption (S), along with an indication of parameter or corrupted space. The general naming rule is {#parameters} + {abbreviation} + {-} + {parameter or corrupted space, depending on where the ambiguity lies}.

We now want to generate all possible corruptions of the type \(\kappa_{Z\tilde{Z}}:X\times Y\rightsquigarrow\tilde{X}\times\tilde{Y}\). We combine the nodes in Fig. 0(a) using the superposition operation (**P3**), obtaining all the feasible combinations included in Fig. 0(b). The missing couples are excluded because of **P3**'s feasibility conditions described above, which, even if weak, still do not allow some corruption pairings. Needing each corrupted variable to appear _exactly once_, we cannot include the 1-parameter joint corruptions in any factorization of the \(\kappa_{XY\tilde{X}\tilde{Y}}\). It is easy to check that no corruption from (a subset of) \(\{X,Y\}\) to (a subset of) \(\{\tilde{X},\tilde{Y}\}\) can be combined with them. Compatibility problems arise also when trying to combine a simple corruption (S) with a 1-parameter dependent one (1D); we cannot fulfill the feasibility conditions for **P3** and obtain a complete joint corruption, since we will be always missing a parameter. We then exclude this combination from our taxonomy.3

Footnote 3: Note that JJs are still valid corruptions if seen as a subcase of a 2J, the full one, e.g., \(2J=\kappa_{X\tilde{X}\tilde{Y}}(\tilde{dx}\tilde{dy},x)\,\textbf{1}(y)\). Similarly, a 1D corruption can be seen as a subcase of a 2D corruption. Here we are exploring the possibility of combining them with other corruptions. The constraints are only dimensional.

Markov kernels and exhaustivenessOur motivation for formalizing corruptions through Markov kernels is their representation power in terms of couplings. A _coupling_ is formally defined for two probability spaces \(\Sigma_{1}\coloneqq(Z_{1},\mathcal{Z}_{1},P_{1}),\,\Sigma_{2}\coloneqq(Z_{2}, \mathcal{Z}_{2},P_{2})\) as a probability space \(\Sigma\coloneqq(Z_{1}\times Z_{2},\mathcal{Z}_{1}\times\mathcal{Z}_{2},P)\), such that the marginal probabilities associated to \(P\) w.r.t. \(Z_{i},\,\ i\in\{1,2\}\) are

Figure 1: Partial orderings on the corruption and combination sets, based on the amount of _dependence_ on the spaces. In the left panel, we underline with dotted nodes the corruptions that cannot be used in any feasible combination. Trivial cases of independence from all parameters or identical kernels are excluded from this analysis.

the respective \(P_{i}\). By construction, Markov kernels are in bijection with all the possible couplings existent on \(Z\times Z\) with two _fixed_ probability measures, for us, \(P,\tilde{P}\). Hence, they represent all possible pairwise dependencies between probability spaces that are _stochastic_, and for non-stochastic mappings, we are sure to have an alternative Markov kernel representation.4

Footnote 4: When the mapping between two fixed probability spaces is a transition kernel, e.g., a non-normalized Markov kernel, the map is _deterministic_. An example is the selection bias classically formalized as absolutely continuous probabilities \(\tilde{P}\ll P\)[14]. However, given the bijection with the coupling space, we can always find a stochastic map connecting \(\Sigma_{1},\Sigma_{2}\). A similar argument can be replicated for mappings between \(\Sigma_{1},\Sigma_{2}\) that are not kernel-induced, e.g., they are not positive. For more details, see ยง S2.2.

In most machine learning research considering corruption, the corruption process typically involves two environments, that is, the training one and the test one. Our definition of corruption (Def. 2) covers all such pairwise cases. Furthermore, one may also apply this framework to settings with more than two spaces, e.g., online learning or learning from multiple different domains [29]. For these cases, we can employ a composed model, where different corruptions are acting together in a "chained" (**P1**, **P2**) or "parallel" (**P3**) fashion and creating more complex patterns. We discuss further possibilities for applying this framework to \(n>2\) corrupted spaces in SS S2.3.

Relations to existing paradigmsNext, we examine how existing corruption models fit into our taxonomy. To do so, we reformulate them as specific instantiations of Markov corruptions. This reveals their relationships within the corruption hierarchy presented in Fig. 0(a). Our goal here is not to merely demonstrate that a child problem can be solved by a parent one, but rather to gain a deeper understanding of the problem settings. The exhaustiveness of the framework allows us to identify what has been previously overlooked in characterizing all types of corruption. Notably, we highlight the existence of joint and dependent corruptions, which receive far less attention than simple

\begin{table}
\begin{tabular}{c c c c} \hline \hline Name & Action diagram & Corrupted distribution & Examples \\ \hline S-\(\tilde{X}\) & \(Y\overset{\text{\tiny$E$}}{\rightsquigarrow}X\overset{\text{\tiny$\pi_{X}$}}{ \rightsquigarrow}\tilde{X}\) & \(\tilde{P}=(\kappa_{X\tilde{X}}\delta_{Y\tilde{Y}})\circ(\pi_{Y}\times E)\) & attribute noise [30, 31, 4, 19] \\ \hline S-\(\tilde{Y}\) & \(X\overset{\text{\tiny$E$}}{\rightsquigarrow}Y\overset{\text{\tiny$\pi_{X}$}}{ \rightsquigarrow}\tilde{Y}\) & \(\tilde{P}=(\delta_{X\tilde{X}}\kappa_{Y\tilde{Y}})\circ(\pi_{X}\times F)\) & class-conditional noise \\ \hline
1D-\(\tilde{X}\) & \(X\overset{\text{\tiny$E$}}{\rightsquigarrow}Y\overset{\text{\tiny$\pi_{X}$}}{ \rightsquigarrow}\tilde{X}\) & \(\tilde{P}=(\kappa_{Y\tilde{X}}\delta_{Y\tilde{Y}})\circ(\pi_{X}\times F)\) & style transfer [35, 36, 37] \\ \hline
1D-\(\tilde{Y}\) & \(Y\overset{\text{\tiny$E$}}{\rightsquigarrow}X\overset{\text{\tiny$\pi_{X}$}}{ \rightsquigarrow}\tilde{Y}\) & \(\tilde{P}=(\delta_{X\tilde{X}}\kappa_{X\tilde{Y}})\circ(\pi_{Y}\times E)\) & instance-dependent noise \\  & & & (IDN) [8] \\ \hline
2D-\(\tilde{X}\) & \(Y\overset{\text{\tiny$E$}}{\rightsquigarrow}X\overset{\text{\tiny$\pi_{X}$}}{ \rightsquigarrow}\tilde{X}\) & \(\tilde{P}=(\kappa_{XY\tilde{X}}\delta_{Y\tilde{Y}})\circ(\pi_{Y}\times E)\) & adversarial noise [38, 39, 40, 41, 42] \\ \hline
2D-\(\tilde{Y}\) & \(X\overset{\text{\tiny$E$}}{\rightsquigarrow}Y\overset{\text{\tiny$E$}}{\rightsquigarrow} \overset{\text{\tiny$\pi_{X}$}}{\rightsquigarrow}\tilde{Y}\) & \(\tilde{P}=(\delta_{X\tilde{X}}\kappa_{XY\tilde{Y}})\circ(\pi_{X}\times F)\) & instance \& label-dependent noise [8, 43, 44, 45] \\ \hline S-\(\tilde{X}\), \(\tilde{Y}\overset{\text{\tiny$E$}}{\rightsquigarrow}X\overset{\text{\tiny$E$}}{ \rightsquigarrow}Y\overset{\text{\tiny$E$}}{\rightsquigarrow}\tilde{X}\) & \(\tilde{P}=(\kappa_{X\tilde{X}}\kappa_{Y\tilde{Y}})\circ(\pi_{Y}\times E)\) & combined simple noise [19] \\ S-\(\tilde{Y}\) & \(\tilde{X}\overset{\text{\tiny$E$}}{\rightsquigarrow}X\overset{\text{\tiny$E$}}{ \rightsquigarrow}Y\overset{\text{\tiny$E$}}{\rightsquigarrow}\overset{\text{ \tiny$E$}}{\rightsqucorruptions, while far greater problems arise in such complicated cases (see SS 4). Moreover, we notice that existing categorizations rely mostly on the notion of invariance, i.e., corruptions are defined based on which element of the distributions are preserved. These invariance-based taxonomies have been introduced mainly for robustness and causal analyses. However, they do not have a one-to-one correspondence with ours, and do not allow for a hierarchical nor compositional view of corruption. A summary of representative corruption models in the literature is given in Tab. 1, while all the technical details about correspondences and relations between taxonomies are given in SS S1.

## 4 Consequences of corruption in supervised learning

Traditionally, experiments have been compared through Bayes Risk using what is known as the Data Processing Inequality, or Blackwell-Sherman-Stein Theorem [20, 60].5 Recently, in Williamson and Cranko [19], Data Processing Equality results have also been studied within the supervised learning framework. Here we adopt the equality approach to compare the clean and corrupted experiments through Bayes Risk. The equalities formally characterize how the optimization problem is affected by the different kinds of joint corruption in our taxonomy. This gives us a quantitative result in terms of conserved "information" [19] between corrupted and clean learning problems, and a bridge between the problems themselves.

Footnote 5: Briefly, the theorem states that for an experiment \(E\) and its image through a suitably defined Markov kernel \(\kappa\) w.r.t. some operation, we have \(BR_{\tau,\ell,\mathcal{H}}(E)\leq BR_{\tau,\ell,\mathcal{H}}(\kappa E)\) for all \(\pi,\ell,\mathcal{H}\).

We rewrite the minimization set of the BR in a more compact way, such as \(\ell\circ\mathcal{H}\coloneqq\{\,(x,y)\mapsto\ell(h_{x},y)\,|\,h\in\mathcal{H} \subseteq\mathcal{M}(X,Y)\,\}\). We define the action of a corruption \(\kappa\) on this set as the set of all the corrupted functions \(\kappa f,\,f\in\ell\circ\mathcal{H}\). Lastly, we ask \(f^{*}=\ell\circ h^{*}\in\operatorname*{arg\,min}_{f}\mathbb{E}_{\tilde{P}}[f( \tilde{X},\tilde{Y})]\) to belong to the constraining space \(\ell\circ\mathcal{H}\), for reasons already discussed for Eq. (1).

The first two theorems cover the (S, 2D) cases and their subcase (S-\(\tilde{X}\), S-\(\tilde{Y}\)), as proved in [19].

**Theorem 3** (BR under (S-\(\tilde{X}\), S-\(\tilde{Y}\)), (2D-\(\tilde{X}\), S-\(\tilde{Y}\)) joint corruption).: _Let \((\ell,\mathcal{H},P)\) be a learning problem, \(E:Y\rightsquigarrow X\) an experiment and \(\kappa^{\tilde{X}}\in\{\kappa_{X\tilde{X}},\kappa_{YX\tilde{X}}\}\) a corruption. Let \(\kappa_{Y\tilde{Y}}\) be a simple corruption on \(Y\). Then we can form the corrupted experiment as per the transition diagram6_

Footnote 6: The first arrow in the diagram is \(\tilde{Y}\rightsquigarrow Y\), the opposite direction given for the \(Y\) corruption. However, we are not using any notion of inverse corruption here. We are only using the flexibility of Markov kernels as operators and introducing an alternative notation. The kernel used here is exactly the \(\kappa_{Y\tilde{Y}}:Y\rightsquigarrow\tilde{Y}\), which acts on an input measure in a โpush-forwardโ fashion. The notation will be further used in the rest of the paper.

\[\mathbb{E}_{\tilde{Y}\rightsquigarrow\kappa_{Y\tilde{Y}}\tau_{Y}}CBR_{\ell \circ\mathcal{H}}(\kappa^{\tilde{X}}E_{\tilde{Y}})=\mathbb{E}_{Y\rightsquigarrow \kappa_{Y\tilde{Y}}CBR_{\kappa^{\tilde{X}}(\kappa_{Y\tilde{Y}}\ell\circ \mathcal{H})}}(E_{\tilde{Y}})\.\]

_Moreover, if \(\kappa^{\tilde{X}}=\kappa_{X\tilde{X}}\), we have_

\[BR_{\ell\circ\mathcal{H}}[\kappa_{Y\tilde{Y}}(\pi_{Y}\times\kappa_{X\tilde{X}} E)]=BR_{\kappa_{X\tilde{X}}(\kappa_{Y\tilde{Y}}\ell\circ\mathcal{H})}(\pi_{Y} \times E)\.\] (2)

Here in Theorem 3 we have shown the BR equality for the experiment \(E\), in line with the Comparison of Experiments and Information Equalities literature mentioned at the beginning of the section. However, for some corruptions the equalities results cannot be stated with \(E\) and the Generative CBR, unless ignoring the joint corruption factorization formula (see SS S5 for a detailed explanation). We hence use the posterior kernel \(F\) defined with the Discriminative CBR (Eq. (1)), and gain more insights about the minimization set while paying a price in elegance of the result.

**Theorem 4** (BR under (S-\(\tilde{X}\), 2D-\(\tilde{Y}\)) joint corruption).: _Let \((\ell,\mathcal{H},P)\) be a learning problem, \(F:X\rightsquigarrow Y\) a posterior and \(\kappa_{XY\tilde{Y}}\) a \(Y\) corruption. Let \(\kappa_{X\tilde{X}}\) be a simple corruption on \(X\). Then we can form the corrupted experiment as per the transition diagram \(\tilde{X}\rightsquigarrow X\rightsquigarrow X\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\rightsquigarrow Y\) and obtain_

\[\mathbb{E}_{\tilde{X}\rightsquigarrow\kappa_{X\tilde{X}}\pi_{X}}CBR_{\ell\circ \mathcal{H}}(\kappa_{XY\tilde{Y}}F_{\tilde{X}})=\mathbb{E}_{X\rightsquigarrow \kappa_{X}}CBR_{\kappa_{X\tilde{X}}(\kappa_{XY\tilde{Y}}\ell\circ\mathcal{H})}(F _{\tilde{X}})\.\]

[MISSING_PAGE_FAIL:7]

Past work from Van Rooyen and Williamson [7] and Patrini et al. [34] considered unbiased learning as what is known as _generalization_, i.e. learn on the corrupted space \(\tilde{P}\) a hypothesis \(h^{*}\) such that it is also optimal on the clean distribution \(P\) at test time. They choose the approach of corrected learning, which is, correcting the loss function or the model class in order to learn a \(h^{*}\) capable to generalize. They both used frameworks related to ours, although only in the presence of simple \(Y\) corruption.

We prove similar results to these works for the _loss correction_ task and analyze what we can achieve in other corruption cases described by our taxonomy. In general, we cannot prove generalization but we exhibit a corrected loss allowing the model learned on \(\tilde{P}\) to have the same _biases (i.e. loss scores)_ as the one found for the clean learning problem. To do so, we make use of the pseudo-inverse of a Markov kernel (**P4**), as it is more convenient and powerful than the kernel reconstruction introduced in [7]. The results we show here also serve as a first step towards understanding the effect of corruption of the minimization set \(\ell\circ\mathcal{H}\), in the cases where the BR equalities are not giving us much information (i.e. all the cases that are not simple label noise [19]).

Again, in this analysis, we ignore the influence of the data sample and the optimization technique. We use all the assumptions introduced when defining the learning problem in SS 2 and the BR results SS 4.

The BR equalities for cleaning kernelsThe theorems proved in SS 4 can then be restated, in terms of learning problems and pseudo-inverse \(\kappa^{\dagger}:\tilde{Z}\rightsquigarrow Z\), as

\[(\ell,\mathcal{H},P)\rightarrow(\kappa^{\dagger}(\ell\circ\mathcal{H}), \kappa P)\.\] (5)

We will refer here to the pseudo-inverse of our corruption as the _cleaning kernel_. Notice that the set \(\kappa^{\dagger}(\ell\circ\mathcal{H})\) is not trivially decomposable as \(\tilde{\ell}\circ\tilde{\mathcal{H}}\) for some loss and model class. In this case, \(\kappa^{\dagger}(\ell\circ\mathcal{H})\) is said to have no _\(\circ\)-factorized structure_.

The BR equalities are ensuring the existence of a function \(f^{*}\in\ell\circ\mathcal{H}\ \cap\ \kappa^{\dagger}(\ell\circ\mathcal{H})\) that minimizes the Bayes Risk, i.e.

\[f^{*}\in\operatorname*{arg\,min}_{f\in\ell\circ\mathcal{H}}\mathbb{E}_{P}f(Z) \text{ and }f^{*}\in\operatorname*{arg\,min}_{f\in\kappa^{\dagger}(\ell\circ \mathcal{H})}\mathbb{E}_{\kappa P}f(Z)\.\]

Sadly, this is not enough for us to find an optimal hypothesis working for both probability spaces. Formal results on this optimal \(h\in\mathcal{H}\) for both clean and corrupted spaces only exist for label noise [7, 8]. However, by introducing a few further assumptions, we can get results on which alternative loss to use on train distribution so that the learned \(h\) on \(\tilde{P}\) will have the same performance scores as the optimal on \((\ell,\mathcal{H},P)\). Let us consider the composed representation of the function \(f^{*}\) in the test (clean) minimization set, which is \(f^{*}=\ell\circ h^{*}\). We want to construct a suitable composed representation for \(f^{*}\) also in the space \(\kappa^{\dagger}(\ell\circ\mathcal{H})\), namely \(f^{*}=\tilde{\ell}\circ\tilde{h}^{*}\). We start by fixing a \(\tilde{h}^{*}\in\mathcal{H}\) of our choice, that if asked to be invertible (**A1**) identifies the loss function as \(\tilde{\ell}=\ell\circ h^{*}\circ(\tilde{h}^{*})^{-1}:\mathcal{P}(Y)\times Y \rightarrow\mathbb{R}^{+}\).7 There can be weaker conditions on \((\tilde{\ell},\tilde{h}^{*})\) enabling all the following results, but do not investigate the here.

Footnote 7: Here \(h^{*}\) is inverted as a function, not as a kernel. That means, \(\tilde{\ell}(p,y)=\ell(h^{*}((\tilde{h}^{*})^{-1}(p)),y)\).

Since in general \(\kappa^{\dagger}(f^{*})\neq f^{*}\), we have that: \(\exists h^{\prime}\in\mathcal{H}\) s.t. \(\kappa^{\dagger}(\ell\circ h^{\prime})=\tilde{\ell}\circ\tilde{h}^{*}\,\) where we ask \(h^{\prime}\neq h^{*}\), otherwise we would be imposing the trivial condition \(\ell\circ h^{*}=\tilde{\ell}\circ\tilde{h}^{*}=\kappa^{\dagger}(\ell\circ h^{*})\), i.e. the corruption is harmless w.r.t. the Bayes Risk value. In order to study the possible loss correction, we choose the corrupted optimum as \(\tilde{h}^{*}=h^{\prime}\) (**A2**).

Loss correctionsWe now try to formalize how to define a suitable loss for the corrupted learning problem, such that the optimal hypothesis is learned in the clean learning space. The problem setting gives us access to \(\ell,\kappa^{\dagger}\) given by the problem, and \(\tilde{h}^{*}\) chosen by us. We want to find a way to retrieve a suitable \(h^{*}\) for the clean distribution. That means, the loss correction task here is _finding a formulation of \(\tilde{\ell}\) that depends on \(\ell,\kappa^{\dagger}\)_. An essential preliminary result, for which the proof is given in SS 4.1, is

**Lemma 7**.: _The feasible factorization of a Markov kernel \(\kappa\) is also a valid factorization for its pseudo-inverse \(\kappa^{\dagger}\), both for the full kernel or considering their parameterized versions._

We then give the correction results (proof in SS S4.2), and discuss them.

**Theorem 8**.: _Let \((\ell,\mathcal{H},P)\) be a clean learning problem and \((\kappa^{\dagger}(\ell\circ\mathcal{H}),\kappa P)\) its associated corrupted one, not necessarily with a \(\circ\)-factorized structure. Let \(\kappa^{\dagger}\) be the joint cleaning kernel reversing \(\kappa\), such that assumptions **A1** and **A2** hold for the said problems. The factorization of \(\kappa^{\dagger}\) is assumed to be feasible and to have an equality result of the form Eq. (5). We write \(\kappa^{\dagger}(dz,\tilde{z})=\kappa^{X}(dx,\cdot)\kappa^{Y}(dy,\cdot)\), with \((\cdot)\) some feasible parameters. Hence, we can prove the following points:_

1. _When_ \(\kappa^{\dagger}\) _is either_ \((id_{X}\)_, S-Y) or_ \((id_{X}\)_, 2D-Y), we can write the corrected loss as_ \[\tilde{\ell}(h(\tilde{x}),\tilde{y})=(\kappa^{Y}\ell)\left(h(\tilde{x}),\tilde {y}\right)\quad\forall\,(\tilde{x},\tilde{y})\in\tilde{X}\times\tilde{Y}\,\] _with_ \(\kappa^{Y}\ell=\kappa^{Y}_{\tilde{x}}\ell\) _for the second case._
2. _When_ \(\kappa^{\dagger}\) _is_ (S-_X_, S-Y), (2D-_X_, S-Y) or (S-_X_, 2D-_Y), we have_ \[\tilde{\ell}(\tilde{x},\tilde{y},h)=\mathbb{E}_{u\sim\kappa^{X}h(\tilde{x})}[ \kappa^{Y}\ell\left(u,\tilde{y}\right)]\quad\forall\,(\tilde{x},\tilde{y})\in \tilde{X}\times\tilde{Y}\,\] _with_ \(\kappa^{X}_{\tilde{x}}h(\tilde{x})(A)\coloneqq\kappa^{X}(h^{-1}(A),\tilde{x})\,\ A \subset\mathcal{P}(Y)\) _being the push-forward probability measure of_ \(\kappa^{X}(\tilde{x})\) _through_ \(h\)_,_ \(h\) _seen as a function. For the cases that involve a 2D corruption, we have_ \(\kappa^{Y}\ell=\kappa^{Y}_{\tilde{x}}\ell\) _for the former_ \(\kappa^{\dagger}\) _factorization,_ \(\kappa^{X}h(\tilde{x})=\kappa^{X}_{\tilde{y}}h(\tilde{x})\) _for the latter._
3. _When_ \(\kappa^{\dagger}\) _is a (1D-_X_, 1D-_Y) corruption, we can write the corrected loss as_ \[\tilde{\ell}(\tilde{x},\tilde{y},h)=\mathbb{E}_{u\sim\kappa^{X}h(\tilde{y})}[ \kappa^{Y}\ell\left(u,\tilde{x}\right)]\quad\forall\,(\tilde{x},\tilde{y})\in \tilde{X}\times\tilde{Y}\,\] _with_ \(\kappa^{X}_{\tilde{x}}h(\tilde{y})(B)\coloneqq\kappa^{X}(h^{-1}(B),\tilde{y})\,\ B \subset\mathcal{P}(X)\)_._
4. _When_ \(\kappa^{\dagger}\) _is a (2D, 1D) corruption, we can write the corrected loss as_ \[\tilde{\ell}(\tilde{x},\tilde{y},h)=\mathbb{E}_{u\sim\kappa^{X}h(\tilde{y})}[ \kappa_{\tilde{x}}{}^{Y}\ell\left(u,\tilde{y}\right)]\quad,\quad\tilde{\ell} (\tilde{x},\tilde{y},h)=\mathbb{E}_{u\sim\kappa^{X}_{\tilde{y}}h(\tilde{x})}[ \kappa^{Y}\ell\left(u,\tilde{x}\right)]\quad\forall\,(\tilde{x},\tilde{y})\in \tilde{X}\times\tilde{Y}\.\] _for the (1D-_X_, 2D-_Y_), (2D-_X_, 1D-_Y_) respectively._

When minimized, the corrected losses will by construction give back the hypothesis \(\tilde{h}^{*}\). Since \(\ell\circ h^{*}=\tilde{\ell}\circ\tilde{h}^{*}\), the learned \(\tilde{h}^{*}\) has on the clean distribution the optimum performance we wanted to achieve with the original loss function \(\ell\). Hence, we achieve unbiased learning in the sense of matching scores and in the distributional sense.

The corrections found by the theorem are more complex than the ones defined in previous work [7; 34], i.e., the first part of point 1. In the second part, we characterize the effect of a more "dependent" \(Y\) cleaning kernel, i.e. closer to the root in Fig. 1a. When also \(\kappa^{X}\) is non-trivial in the factorization, we have an action on \(h\). Then, the corrected functions lie in a larger function space than the usual one, the one of positive, bounded functions \(\ell:X\times Y\times\mathcal{H}\rightarrow\mathbb{R}^{+}\).

The result additionally underlines how the cleaning kernel affects the a hypothesis on \(X\): it induces a set of "reachable predictions" from \(h\) through \(\kappa^{\dagger}\), depending on the outcome of the stochastic process \(\kappa^{\dagger}:\tilde{X}\leadsto X\). The push-forward probability measures are probabilities on a _set of probabilities_. For instance, in point 2 we have \(\kappa^{X}_{\tilde{y}}h(\tilde{x})\in\mathcal{P}(\mathcal{P}(Y))\), while for point 3 we have \(\kappa^{X}_{\tilde{x}}h(\tilde{x})\in\mathcal{P}(\mathcal{P}(X))\).

## 6 Conclusions

We proposed a comprehensive and unified framework for corruption using Markov kernels, systematically studying corruption in three key aspects: classification, consequence, and correction. We established a new taxonomy of corruption, enabling qualitative comparisons between corruption models in terms of the corruption hierarchy. To gain a deeper quantitative understanding of corruption, we analyzed the consequences of different corruptions from an information-theoretic standpoint by proving Data Processing Equalities for Bayes Risk. As a consequence of them, we obtained loss correction formulas that gives us more insights into the effect of corruption on losses.

Throughout the work, we consider data as probability distributions, implicitly assuming that each dataset has an associated probabilistic generative process. We treat corruption as Markov kernels, assuming full access to their actions, and analyze the consequences of corruption through Bayes risks without accounting for sampling or optimization. Bridging the gap between the distributional-level and the sample-level results would be the next step for this study, which requires tailored ad-hoc analyses. Other directions for making this framework more practically usable include developing quantitative methods to compare corruption severity and investigating the effects of optimization algorithms on the analysis.

[MISSING_PAGE_EMPTY:10]

* [26] Fredrik Dahlqvist, Vincent Danos, Ilias Garnier, and Ohad Rammar. Bayesian inversion by \(\omega\)-complete cone duality. In _27th International Conference on Concurrency Theory_, 2016.
* [27] Kenta Cho and Bart Jacobs. Disintegration and bayesian inversion via string diagrams. _Mathematical Structures in Computer Science_, 29(7):938-971, 2019.
* [28] Bart Jacobs and Fabio Zanasi. The logical essentials of bayesian reasoning. _Foundations of Probabilistic Programming_, pages 295-331, 2020.
* [29] Shai Ben-David, John Blitzer, Koby Crammer, Alex Kulesza, Fernando Pereira, and Jennifer Vaughan. A theory of learning from different domains. _Machine Learning_, 79:151-175, 2010.
* [30] George Shackelford and Dennis Volper. Learning k-dnf with noise in the attributes. In _Proceedings of the first annual workshop on Computational learning theory_, pages 97-103, 1988.
* [31] Sally A. Goldman and Robert H. Sloan. Can pac learning algorithms tolerate random attribute noise? _Algorithmica_, 14(1):70-84, 1995.
* [32] Dana Angluin and Philip Laird. Learning from noisy examples. _Machine Learning_, 2:343-370, 1988.
* [33] Avrim Blum and Tom Mitchell. Combining labeled and unlabeled data with co-training. In _Proceedings of the eleventh annual conference on Computational learning theory_, pages 92-100, 1998.
* [34] Giorgio Patrini, Alessandro Rozza, Aditya Krishna Menon, Richard Nock, and Lizhen Qu. Making deep neural networks robust to label noise: A loss correction approach. In _Proceedings of the IEEE conference on computer vision and pattern recognition_, pages 1944-1952, 2017.
* [35] Leon A Gatys, Alexander S Ecker, and Matthias Bethge. A neural algorithm of artistic style. _arXiv preprint arXiv:1508.06576_, 2015.
* [36] Justin Johnson, Alexandre Alahi, and Li Fei-Fei. Perceptual losses for real-time style transfer and super-resolution. In _Computer Vision-ECCV 2016: 14th European Conference, Amsterdam, The Netherlands, October 11-14, 2016, Proceedings, Part II 14_, pages 694-711. Springer, 2016.
* [37] Eric Grinstein, Ngoc QK Duong, Alexey Ozerov, and Patrick Perez. Audio style transfer. In _2018 IEEE international conference on acoustics, speech and signal processing (ICASSP)_, pages 586-590. IEEE, 2018.
* [38] Christian Szegedy, Wojciech Zaremba, Ilya Sutskever, Joan Bruna, Dumitru Erhan, Ian Goodfellow, and Rob Fergus. Intriguing properties of neural networks. _arXiv preprint arXiv:1312.6199_, 2013.
* [39] Ian J Goodfellow, Jonathon Shlens, and Christian Szegedy. Explaining and harnessing adversarial examples. _arXiv preprint arXiv:1412.6572_, 2014.
* [40] Nicolas Papernot, Patrick McDaniel, Somesh Jha, Matt Fredrikson, Z Berkay Celik, and Ananthram Swami. The limitations of deep learning in adversarial settings. In _2016 IEEE European symposium on security and privacy (EuroS&P)_, pages 372-387. IEEE, 2016.
* [41] Alexey Kurakin, Ian J Goodfellow, and Samy Bengio. Adversarial examples in the physical world. In _Artificial intelligence safety and security_, pages 99-112. Chapman and Hall/CRC, 2018.
* [42] Dan Hendrycks, Kevin Zhao, Steven Basart, Jacob Steinhardt, and Dawn Song. Natural adversarial examples. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 15262-15271, 2021.
* [43] Jiacheng Cheng, Tongliang Liu, Kotagiri Ramamohanarao, and Dacheng Tao. Learning with bounded instance and label-dependent label noise. In _International Conference on Machine Learning_, pages 1789-1799. PMLR, 2020.
* [44] Yu Yao, Tongliang Liu, Mingming Gong, Bo Han, Gang Niu, and Kun Zhang. Instance-dependent label-noise learning under a structural causal model. _Advances in Neural Information Processing Systems_, 34:4409-4420, 2021.
* [45] Qizhou Wang, Bo Han, Tongliang Liu, Gang Niu, Jian Yang, and Chen Gong. Tackling instance-dependent label noise via a universal probabilistic model. In _Proceedings of the AAAI Conference on Artificial Intelligence_, volume 35, pages 10183-10191, 2021.
* [46] Nathalie Japkowicz and Shaju Stephen. The class imbalance problem: A systematic study. _Intelligent data analysis_, 6(5):429-449, 2002.
* [47] Haibo He and Edwardo A Garcia. Learning from imbalanced data. _IEEE Transactions on knowledge and data engineering_, 21(9):1263-1284, 2009.
* [48] Mateusz Buda, Atsuto Maki, and Maciej A Mazurowski. A systematic study of the class imbalance problem in convolutional neural networks. _Neural networks_, 106:249-259, 2018.
* [49] Zachary Lipton, Yu-Xiang Wang, and Alexander Smola. Detecting and correcting for label shift with black box predictors. In _International conference on machine learning_, pages 3122-3130. PMLR, 2018.

* [50] Gilles Blanchard, Marek Flaska, Gregory Handy, Sara Pozzi, and Clayton Scott. Classification with asymmetric label noise: Consistency and maximal denoising. _Electronic Journal of Statistics_, 10(2):2780-2824, 2016.
* [51] Julian Katz-Samuels, Gilles Blanchard, and Clayton Scott. Decontamination of mutual contamination models. _Journal of machine learning research_, 20(41), 2019.
* [52] Arthur Gretton, Alex Smola, Jiayuan Huang, Marcel Schmittfull, Karsten Borgwardt, and Bernhard Scholkopf. Covariate shift by kernel mean matching. _Dataset shift in machine learning_, 3(4):5, 2009.
* [53] Masashi Sugiyama and Motoaki Kawanabe. _Machine learning in non-stationary environments: Introduction to covariate shift adaptation_. MIT press, 2012.
* [54] Tianyi Zhang, Ikko Yamane, Nan Lu, and Masashi Sugiyama. A one-step approach to covariate shift adaptation. In _Asian Conference on Machine Learning_, pages 65-80. PMLR, 2020.
* [55] Kun Zhang, Bernhard Scholkopf, Krikamol Muandet, and Zhikun Wang. Domain adaptation under target and conditional shift. In _International conference on machine learning_, pages 819-827. PMLR, 2013.
* [56] Mingming Gong, Kun Zhang, Tongliang Liu, Dacheng Tao, Clark Glymour, and Bernhard Scholkopf. Domain adaptation with conditional transferable components. In _International conference on machine learning_, pages 2839-2848. PMLR, 2016.
* [57] Xiyu Yu, Tongliang Liu, Mingming Gong, Kun Zhang, Kayhan Batmanghelich, and Dacheng Tao. Label-noise robust domain adaptation. In _International conference on machine learning_, pages 10913-10924. PMLR, 2020.
* [58] Gerhard Widmer and Miroslav Kubat. Learning in the presence of concept drift and hidden contexts. _Machine learning_, 23:69-101, 1996.
* [59] Jie Lu, Anjin Liu, Fan Dong, Feng Gu, Joao Gama, and Guangquan Zhang. Learning under concept drift: A review. _IEEE Transactions on Knowledge and Data Engineering_, pages 1-1, 2018. doi: 10.1109/tkde.2018.2876857.
* [60] Brendan Van Rooyen et al. _Machine learning via transitions_. PhD thesis, The Australian National University, 2015.
* [61] Bianca Zadrozny. Learning and evaluating classifiers under sample selection bias. In _Proceedings of the twenty-first international conference on Machine learning_, page 114, 2004.
* [62] Masashi Sugiyama, Matthias Krauledat, and Klaus-Robert Muller. Covariate shift adaptation by importance weighted cross validation. _Journal of Machine Learning Research_, 8(5), 2007.
* [63] Ievgen Redko, Emilie Morvant, Amaury Habrard, Marc Sebban, and Younes Bennani. A survey on domain adaptation theory: learning bounds and theoretical guarantees. _arXiv preprint arXiv:2004.11829_, 2020.
* [64] Christopher M Bishop and Nasser M Nasrabadi. _Pattern recognition and machine learning_, volume 4. Springer, 2006.
* [65] Madelyn Glymour, Judea Pearl, and Nicholas P Jewell. _Causal inference in statistics: A primer_. John Wiley & Sons, 2016.
* [66] Vladimir Igorevich Bogachev. _Measure theory_, volume 1. Springer, 2007.