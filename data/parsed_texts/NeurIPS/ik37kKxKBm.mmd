# In-Context Learning with Representations:

Contextual Generalization of Trained Transformers

 Tong Yang

CMU

&Yu Huang

UPenn

&Yingbin Liang

OSU

&Yuejie Chi

CMU

Department of Electrical and Computer Engineering, Carnegie Mellon University; email: tongyang@andrew.cmu.edu. Department of Statistics and Data Science, Wharton School, University of Pennsylvania; email: yuh42@wharton.upenn.edu. Department of Electrical and Computer Engineering, The Ohio State University; email: liang.889@osu.edu. Department of Electrical and Computer Engineering, Carnegie Mellon University; email: yuejiechi@cmu.edu.

###### Abstract

In-context learning (ICL) refers to a remarkable capability of pretrained large language models, which can learn a new task given a few examples during inference. However, theoretical understanding of ICL is largely under-explored, particularly whether transformers can be trained to generalize to unseen examples in a prompt, which will require the model to acquire contextual knowledge of the prompt for generalization. This paper investigates the training dynamics of transformers by gradient descent through the lens of non-linear regression tasks. The contextual generalization here can be attained via learning the template function for each task in-context, where all template functions lie in a linear space with \(m\) basis functions. We analyze the training dynamics of one-layer multi-head transformers to in-contextly predict unlabeled inputs given partially labeled prompts, where the labels contain Gaussian noise and the number of examples in each prompt are not sufficient to determine the template. Under mild assumptions, we show that the training loss for a one-layer multi-head transformer converges linearly to a global minimum. Moreover, the transformer effectively learns to perform ridge regression over the basis functions. To our knowledge, this study is the first provable demonstration that transformers can learn contextual (i.e., template) information to generalize to both unseen examples and tasks when prompts contain only a small number of query-answer pairs.

## 1 Introduction

Transformers (Vaswani et al., 2017) have achieved tremendous successes in machine learning, particularly in natural language processing, by introducing self-attention mechanisms that enable models to capture long-range dependencies and contextualized representations. In particular, these self-attention mechanisms endow transformers with remarkable in-context learning (ICL) capabilities, allowing them to adapt to new tasks or domains by simply being prompted with a few examples that demonstrate the desired behavior, without any explicit fine-tuning or updating of the model's parameters (Brown et al., 2020).

A series of papers have empirically studied the underlying mechanisms behind in-context learning in transformer models (Garg et al., 2022; Von Oswald et al., 2023; Wei et al., 2023; Olsson et al., 2022; Xie et al., 2021; Chen and Zou, 2024; Agarwal et al., 2024), which have shown that transformers can predict unseen examples after being prompted on a few examples. The pioneering work ofGarg et al. (2022) showed empirically that transformers can be trained from scratch to perform in-context learning of simple function classes, providing a theoretically tractable in-context learning framework. Following this well-established framework, several works have investigated various properties of in-context learning in transformers. For instance, studies have explored generalization and stability (Li et al., 2023), expressive power (Bai et al., 2024; Akyurek et al., 2022; Giannou et al., 2023), causal structures (Nichani et al., 2024; Edelman et al., 2024), statistical properties (Xie et al., 2021; Jeon et al., 2024), to name a few.

In particular, analysis from an optimization perspective can provide valuable insights into how these models acquire and apply knowledge that enable in-context learning. A few works (Huang et al., 2023; Chen et al., 2024; Li et al., 2024; Nichani et al., 2024) thus studied the training dynamics of shallow transformers with softmax attention in order to in-context learn simple tasks such as linear regression (Huang et al., 2023; Chen et al., 2024), binary classification tasks (Li et al., 2024), and causal graphs (Nichani et al., 2024). Their theoretical analyses illuminated how transformers, given an arbitrary query token, learn to _directly_ apply the answer corresponding to it from the query-answer pairs that appear in each prompt. Therefore, they all require the sequence length of each prompt to be large enough so that all query-answer pairs have been seen in each prompt with sufficiently high probability, whereas practical prompts are often too short to contain many query examples. This suggests that in-context learning can exploit _inherent contextual_ information of the prompt to generalize to _unseen_ examples, which further raise the following intriguing theoretical question:

_How do transformers learn contextual information from more general function classes to predict unseen examples given prompts that contain only partial examples?_

Since our paper studies ICL of non-linear function regression, the function mapping (which we also term as "template") naturally serves as the "contextual information" that can be learned for generalization to unseen examples. When each prompt contains only a small number of (noisy) examples, the template that generates the labels may be _underdetermined_, i.e., multiple templates could generate the same labels in the prompt. Such an issue of underdetermination further raises a series of intriguing questions, such as:

_When the template that generates a prompt is underdetermined, what is the transformer's preference for choosing the template and how good is such a choice?_

### Our contributions

In this paper, we answer the above questions by analyzing the training dynamics of a one-layer transformer with multi-head softmax attention through the lens of non-linear regression tasks. In our setting, the template function for each task lies in the linear space formed by \(m\) nearly-arbitrary basis functions that capture representation (i.e., features) of data. Our goal is to provide insights on how transformers trained by gradient descent (GD) acquire template information from more general function classes to generalize to unseen examples and tasks when each prompt contains only a small number of query-answer pairs. We summarize our contributions are as follows.

* We first establish the convergence guarantee of a one-layer transformer with multi-head softmax attention trained with gradient descent on general non-linear regression in-context learning tasks. We assume each prompt contains only a few (i.e., partial) examples with their Gaussian noisy labels, which are not sufficient to determine the template. Under mild assumptions, we establish that the training loss of the transformer converges at a linear rate. Moreover, by analyzing the limit point of the transformer parameters, we are able to uncover what information about the basic tasks the transformer extracts and memorizes during training in order to perform in-context prediction.
* We then analyze the transformer's behavior at inference time after training, and show that the transformer chooses its generating template by performing ridge regression over the basis functions. We also provide the iteration complexity for pretraining the transformer to reach \(\varepsilon\)-precision with respect to its choice of the template given an arbitrary prompt at inference time. We further compare the choice of the transformer and the best possible choice over the template class and characterize how the sequence length of each prompt influences the inference time performance of the model.

* Under more realistic assumptions, our analysis framework allows us to overcome a handful of assumptions made in previous works such as large prompt length (Huang et al., 2023; Chen et al., 2024; Li et al., 2024; Nichani et al., 2024), orthogonality of data (Huang et al., 2023; Chen et al., 2024; Li et al., 2024; Nichani et al., 2024), restrictive initialization conditions (Chen et al., 2024), special structure of the transformer (Nichani et al., 2024), and mean-field models (Kim and Suzuki, 2024). Further, the function classes we consider are a generalization of those considered in most theoretical works (Huang et al., 2023; Chen et al., 2024; Li et al., 2024; Wu et al., 2023; Zhang et al., 2023a). We also highlight the importance of multi-head attention mechanism in this process.

To our best knowledge, this is the _first_ work that analyzes how transformers learn contextual (i.e., template) information to generalize to unseen examples and tasks when prompts contain only a small number of query-answer pairs. Table 1 provides a detailed comparison with existing theoretical works in terms of settings, training analysis and generalization of in-context learning.

### Related work

In-context learning.Recent research has investigated the theoretical underpinnings of transformers' ICL capabilities from diverse angles. For example, several works focus on explaining the in-context learning of transformers from a Bayesian perspective (Xie et al., 2021; Ahuja et al., 2023; Han et al., 2023; Jiang, 2023; Wang et al., 2023; Wies et al., 2024; Zhang et al., 2023b; Jeon et al., 2024; Hahn and Goyal, 2023). Li et al. (2023) analyzed the generalization and stability of transformers' in-context learning. Focusing on the representation theory, Akyurek et al. (2022), Bai et al. (2024) studied the expressive power of transformers on the linear regression task. Akyurek et al. (2022) showed by construction that transformers can represent GD of ridge regression or the closed-form ridge regression solution. Bai et al. (2024) extended Akyurek et al. (2022) and showed that transformers can implement a broad class of standard machine learning algorithms in-context. Dai et al. (2022), Von Oswald et al. (2023) showed transformers could in-context learn to perform GD.

More pertinent to our work, Guo et al. (2023) considered an ICL setting very similar to ours, where the label depends on the input through a basis of possibly complex but fixed template functions, composed with a linear function that differs in each prompt. By construction, the optimal ICL algorithm first transforms the inputs by the representation function, and then performs linear ICL on top of the transformed dataset. Guo et al. (2023) showed the existence of transformers that approximately implement such algorithms, whereas our work is from a different perspective, showing that (pre)training the transformer loss by GD will naturally yield a solution with the aforementioned desirable property characterized in Guo et al. (2023).

Training dynamics of transformers performing ICL.A line of work initiated by Garg et al. (2022) aims to understand the ICL ability of transformers from an optimization perspective. (Zhang et al., 2023a; Kim and Suzuki, 2024) analyzed the training dynamics of transformers with _linear_ attention. Huang et al. (2023), Chen et al. (2024), Li et al. (2024) studied the optimization dynamics of one-layer softmax attention transformers performing simple in-context learning tasks, such as linear regression (Huang et al., 2023; Chen et al., 2024) and binary classification (Li et al., 2024).

\begin{table}
\begin{tabular}{c c c c c c c} \hline \hline \multirow{2}{*}{Reference} & nonlinear & multi & task & GD & noisy & representation \\  & attention & head & shift & convergence & data & learning \\ \hline Wu et al. (2023) & ✗ & ✗ & ✓ & ✓ & ✓ & ✗ \\ Zhang et al. (2023a) & ✗ & ✗ & ✓ & ✓ & ✓ & ✗ \\ Huang et al. (2023) & ✓ & ✗ & ✓ & ✓ & ✗ & ✗ \\ Li et al. (2024) & ✓ & ✗ & ✓ & ✓ & ✓ & ✗ \\ Chen et al. (2024) & ✓ & ✓ & ✗ & ✗ & ✓ & ✗ \\ Kim and Suzuki (2024) & ✗ & ✗ & ✓ & ✗ & ✗ & ✓ \\ Ours & ✓ & ✓ & ✓ & ✓ & ✓ & ✓ \\ \hline \hline \end{tabular}
\end{table}
Table 1: Comparisons with existing theoretical works that study the learning dynamics of transformers in ICL. Here, the last column refers to the fact that the response in the regression task is generated by a linearly weighted unknown representation (feature) model.

Among them, Huang et al. (2023) was the first to study the training dynamics of softmax attention, where they gave the convergence results of a one-layer transformer with single-head attention on linear regression tasks, assuming context features come from an orthogonal dictionary and each token in the prompts is drawn from a multinomial distribution. In order to leverage the concentration property inherent to multinomial distributions, they require the sequence length to be much larger than the size of dictionary. Their analysis indicates that the prompt tokens that are the same as the query will have dominating attention weights, which allows the transformer to _copy-paste_ the correct answer from those prompt tokens.

Li et al. (2024) studied the training of a one-layer single-head transformer in ICL on binary classification tasks. Same as Huang et al. (2023), they required the data to be pairwise orthogonal, and shared the same copy-paste mechanism as in Huang et al. (2023). To be precise, a fraction of their context inputs needs to contain the same pattern as the query to guarantee that the total attention weights on contexts matching the query pattern outweigh those on other contexts.

Chen et al. (2024) studied the dynamics of _gradient flow_ for training a one-layer multi-head softmax attention model for ICL of multi-task linear regression, where the coefficient matrix has certain spectral properties. They required the sequence length to be sufficiently large (Chen et al., 2024, Assumption 2.1), together with restrictive initialization conditions (Chen et al., 2024, Definition 3.1). While using the copy-paste analysis framework as in Huang et al. (2023), Li et al. (2024), the attention probability vector in their work is delocalized, so that the attention is spread out to capture the information from similar tokens in regression tasks. Kim and Suzuki (2024) studied the dynamics of Wasserstein gradient flow for training a one-layer transformer with an infinite-dimensional fully-connected layer followed by a linear attention layer for ICL of linear regression, assuming infinite prompt length. Nichani et al. (2024) analyzed the optimization dynamics of a simplified two-layer transformer with gradient descent on in-context learning a latent causal graph.

Notation.Boldface small and capital letters denote vectors and matrices, respectively. Sets are denoted with curly capital letters, e.g., \(\mathcal{W}\). We let \(\left(\mathbb{R}^{d},\left\lVert\cdot\right\rVert\right)\) denote the \(d\)-dimensional real coordinate space equipped with norm \(\left\lVert\cdot\right\rVert\). \(I_{d}\) is the identity matrix of dimension \(d\). The \(\ell^{p}\)-norm of \(\bm{v}\) is denoted by \(\left\lVert\bm{v}\right\rVert_{p}\), where \(1\leq p\leq\infty\), and the spectral norm and the Frobenius norm of a matrix \(\bm{M}\) are denoted by \(\left\lVert\bm{M}\right\rVert_{2}\) and \(\left\lVert\bm{M}\right\rVert_{F}\), respectively. \(\bm{M}^{\dagger}\) stands for the Moore-Penrose pseudoinverse of matrix \(\bm{M}\), and \(\bm{\tilde{M}}_{\cdot,i}\) stands for its \(i\)-th column vector. We let \([N]\) denote \(\{1,\ldots,N\}\), and denote \(\bm{1}_{N}\) to represent the all-one vector of length \(N\), and by \(\bm{0}\) a vector or a matrix consisting of all \(0\)'s. We allow the application of functions such as \(\exp(\cdot)\) to vectors or matrices, with the understanding that they are applied in an element-wise manner. We use \(\bm{e}_{i}\) to denote the one-hot vector whose \(i\)-th entry is \(1\) and the other entries are all \(0\).

## 2 Problem Setup

In-context learning with representation.We consider ICL of regression with unknown representation, similar to the setup introduced in Guo et al. (2023). To begin, let \(f:\mathbb{R}^{d}\rightarrow\mathbb{R}^{m}\) be a fixed representation map that \(f(\bm{x})=(f_{1}(\bm{x}),\cdots,f_{m}(\bm{x}))^{\top}\) for any \(\bm{x}\in\mathbb{R}^{d}\). The map \(f\) can be quite general, which can be regarded as a feature extractor that will be learned by the transformer. We assume that each ICL task corresponds to a map \(\bm{\lambda}^{\top}f(\cdot)\) that lies in the linear span of those \(m\) basis functions in \(f(\cdot)\), where \(\bm{\lambda}\) is generated according to the distribution \(\mathcal{D}_{\bm{\lambda}}\). Thus, for each ICL instance, the (noisy) label of an input \(\bm{v}_{k}\) (\(\forall k\in[K]\)) is given as

\[y_{k}=\bm{\lambda}^{\top}(f(\bm{v}_{k})+\bm{\epsilon}_{k}),\qquad\bm{\lambda }\sim\mathcal{D}_{\bm{\lambda}},\quad\bm{\epsilon}_{k}\stackrel{{ i.i.d.}}{{\sim}}\mathcal{N}(0,\tau\bm{I}_{m})\] (1)

where \(\tau>0\) is the noise level.

The goal of ICL is to form predictions on query \(\bm{x}_{\mathsf{query}}\) given in-context labels of the form (1) on a few inputs, known as _prompts_. In this paper, we use \(\mathcal{V}\) to denote the _dictionary_ set that contains all \(K\) unit-norm _distinct_ tokens, i.e., \(\mathcal{V}\coloneqq\{\bm{v}_{1},\cdots,\bm{v}_{K}\}\subset\mathbb{R}^{d}\) with each token \(\left\lVert\bm{v}_{k}\right\rVert_{2}=1\). We assume that each prompt \(P=P_{\bm{\lambda}}\) provides the first \(N\) tokens (with \(N\ll K\)) and their labels, and is embedded in the following matrix

\[\bm{E}^{P}\coloneqq\begin{pmatrix}\bm{v}_{1}&\bm{v}_{2}&\cdots&\bm{v}_{N}\\ y_{1}&y_{2}&\cdots&y_{N}\end{pmatrix}\coloneqq\begin{pmatrix}\bm{V}\\ \bm{y}^{\top}\end{pmatrix}\in\mathbb{R}^{(d+1)\times N},\] (2)

where

\[\bm{V}\coloneqq(\bm{v}_{1},\cdots,\bm{v}_{N})\in\mathbb{R}^{d\times N}\] (3)is the collection of prompt tokens, and \(\bm{y}\coloneqq(y_{1},\cdots,y_{N})^{\top}\) is the prompt label. Given the prompt as the input, the transformer predicts the labels for all the \(K\) tokens \(y_{1},\cdots,y_{K}\) in the dictionary set.

Transformer architecture.We adopt a one-layer transformer with multi-head softmax attention (Chen et al., 2024) -- illustrated in Figure 1 -- to predict the labels of all the tokens in the dictionary \(\mathcal{V}\), where \(H\) is the number of heads. Denote the query embedding as

\[\bm{E}^{Q}\coloneqq\begin{pmatrix}\bm{v}_{N+1}&\bm{v}_{N+2}&\cdots&\bm{v}_{K} \\ 0&0&\cdots&0\end{pmatrix}\in\mathbb{R}^{(d+1)\times(K-N)},\] (4)

and denote the embedding of both the prompt and the query as \(\bm{E}\coloneqq(\bm{E}^{P},\bm{E}^{Q})\in\mathbb{R}^{(d+1)\times K}\). We define the output of each transformer head as

\[\text{head}_{h}(\bm{E})\coloneqq\bm{W}_{h}^{\mathsf{V}}\bm{E}^{P}\cdot\text{ softmax}\left((\bm{E}^{P})^{\top}(\bm{W}_{h}^{\mathsf{K}})^{\top}\bm{W}_{h}^{ \mathsf{Q}}\bm{E}\right),\quad h\in[H],\] (5)

where \(\bm{W}_{h}^{\mathsf{Q}}\in\mathbb{R}^{d_{k}\times(d+1)}\), \(\bm{W}_{h}^{\mathsf{K}}\in\mathbb{R}^{d_{k}\times(d+1)}\), and \(\bm{W}_{h}^{\mathsf{V}}\in\mathbb{R}^{K\times(d+1)}\) are the query, key, and value matrices, respectively, and the softmax is applied column-wisely, i.e., given a vector input \(\bm{x}\), the \(i\)-th entry of \(\text{softmax}(\bm{x})\) is given by \(e^{x_{i}}/\sum_{j}e^{x_{j}}\). The attention map of the transformer \(\mathcal{T}(\bm{E})\) is defined as

\[\mathcal{T}(\bm{E})\coloneqq\bm{W}^{\mathsf{O}}\begin{pmatrix}\text{head}_{1} (\bm{E})\\ \vdots\\ \text{head}_{H}(\bm{E})\end{pmatrix}\in\mathbb{R}^{K\times K},\] (6)

where \(\bm{W}^{\mathsf{O}}\) is the output matrix. Following recent theoretical literature to streamline analysis (Huang et al., 2023; Nichani et al., 2024; Deora et al., 2023; Chen et al., 2024), we assume that the embedding matrices take the following forms:

\[\bm{W}^{\mathsf{O}}\coloneqq(\bm{I}_{K},\cdots,\bm{I}_{K})\in \mathbb{R}^{K\times HK},\quad\bm{W}_{h}^{\mathsf{V}}\coloneqq(\bm{0},\bm{w}_{ h})\in\mathbb{R}^{K\times(d+1)},\] (7a) \[(\bm{W}_{h}^{\mathsf{K}})^{\top}\bm{W}_{h}^{\mathsf{Q}}=\begin{pmatrix} \bm{Q}_{h}&\bm{0}\\ \bm{0}&0\end{pmatrix}\in\mathbb{R}^{(d+1)\times(d+1)},\quad\forall h\in[H],\] (7b)

where \(\bm{w}_{h}=(w_{h,1},\cdots,w_{h,K})^{\top}\in\mathbb{R}^{K}\) and \(\bm{Q}_{h}\in R^{d\times d}\) are trainable parameters for all \(h\in[H]\).

The prediction of the labels is provided by the diagonal entries of \(\mathcal{T}(\bm{E})\), which we denote by \(\widehat{\bm{y}}=(\widehat{y}_{1},\cdots,\widehat{y}_{K})\in\mathbb{R}^{K}\). Note that \(\widehat{y}_{k}\) takes the following form under our parameter specification:

\[\forall k\in[K]:\qquad\widehat{y}_{k}=\Big{\langle}\bm{y},\sum_{h=1}^{H}w_{h, k}\,\text{softmax}(\bm{V}^{\top}\bm{Q}_{h}\bm{v}_{k})\Big{\rangle}.\] (8)

Training via GD.Let \(\bm{\theta}=\{\bm{Q}_{h},\bm{w}_{h}\}_{h=1}^{H}\) denote all trainable parameters of \(\mathcal{T}\). Let \(\bm{\epsilon}\coloneqq(\bm{\epsilon}_{1},\cdots,\bm{\epsilon}_{K})\in\mathbb{ R}^{m\times K}\) denote the noise matrix. Given training data over ICL instances, the goal of training is to predict labels \(y_{k}\) for all \(\bm{v}_{k}\in\mathcal{V}\). Specifically, we train the transformer using gradient descent (GD) by optimizing the following mean-squared population loss:

\[\mathcal{L}(\bm{\theta})\coloneqq\frac{1}{2}\mathbb{E}_{\bm{\lambda},\bm{ \epsilon}}\left[\frac{1}{K}\sum_{k=1}^{K}\left(\widehat{y}_{k}-y_{k}\right)^{2} \right].\] (9)

Figure 1: The structure of a one-layer transformer with multi-head softmax attention.

We apply different learning rates \(\eta_{Q},\eta_{w}>0\) for updating \(\{\bm{Q}_{h}\}_{h=1}^{H}\) and \(\{\bm{w}_{h}\}_{h=1}^{H}\), respectively, i.e., at the \(t\)-th (\(t\geq 1\)) step, we have

\[\forall h\in[H]:\quad\bm{Q}_{h}^{(t)}=\bm{Q}_{h}^{(t-1)}-\eta_{Q}\nabla_{\bm{Q }_{h}}\mathcal{L}(\bm{\theta}^{(t-1)}),\quad\bm{w}_{h}^{(t)}=\bm{w}_{h}^{(t-1) }-\eta_{w}\nabla_{\bm{w}_{h}}\mathcal{L}(\bm{\theta}^{(t-1)}),\] (10)

where \(\bm{\theta}^{(t)}=\{\bm{Q}_{h}^{(t)},\bm{w}_{h}^{(t)}\}_{h=1}^{H}\) is the parameter at the \(t\)-th step.

Inference time.At inference time, given a prompt \(P=P_{\bm{\lambda}}\) with \(N\) examples, where \(\bm{\lambda}\)_may not be in the support of the generation distribution_\(\mathcal{D}_{\bm{\lambda}}\), the transformer applies the pretrained parameters and predicts the labels of all \(K\) tokens without further parameter updating.

## 3 Theoretical Analysis

### Training time convergence

In this section, we show that the training loss \(\mathcal{L}\) converges to its minimum value at a linear rate during training, i.e., the function gap

\[\Delta^{(t)}\coloneqq\mathcal{L}(\bm{\theta}^{(t)})-\inf_{\bm{\theta}} \mathcal{L}\to 0,\quad t\to\infty\] (11)

at a linear rate, under some appropriate assumptions.

Key assumptions.We first state our technical assumptions. The first assumption is on the distribution \(\mathcal{D}_{\bm{\lambda}}\) for generating the coefficient vector \(\bm{\lambda}\) of the representation maps.

**Assumption 1** (Assumption on distribution \(\mathcal{D}_{\bm{\lambda}}\)).: _We assume that in (1) each entry \(\lambda_{i}\) is drawn independently and satisfies \(\mathbb{E}[\lambda_{i}]=0\) and \(\mathbb{E}[\lambda_{i}^{2}]=1\) for all \(i\in[m]\)._

To proceed, we introduce the following notation:

\[\bm{Z}\coloneqq(f(\bm{v}_{1})\cdots f(\bm{v}_{N}))\in\mathbb{R}^{m\times N}, \quad\bar{\bm{Z}}\coloneqq\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I}_{N}\right)^{1 /2}\in\mathbb{R}^{N\times N},\ \ \bar{f}_{\max}\coloneqq\max_{i\in[N]}\left\|\bar{\bm{z}}_{i} \right\|_{2},\] (12)

where \(\bar{\bm{z}}_{i}\) is the \(i\)-th column vector of \(\bar{\bm{Z}}\) for \(i\in[N]\). We further define \(\bm{C}_{k}^{(t)}\) (\(k\in[K]\), \(t\in\mathbb{N}_{+}\)) and \(\bm{B}_{k}^{(t)}\) as follows:

\[\bm{C}_{k}^{(t)}\coloneqq\mathsf{softmax}(\bm{V}^{\top}\bm{Q}_{1}^{(t)}\bm{v}_ {k},\cdots,\bm{V}^{\top}\bm{Q}_{H}^{(t)}\bm{v}_{k})\in\mathbb{R}^{N\times H}, \qquad\bm{B}_{k}^{(t)}=\bar{\bm{Z}}\bm{C}_{k}^{(t)}\in\mathbb{R}^{N\times H}.\] (13)

To guarantee the convergence, we require the initialization of the parameters \(\bm{\theta}^{(0)}\) satisfies the following condition.

**Assumption 2** (Assumption on initialization).: _For all \(k\in[K]\), \(\bm{B}_{k}^{(0)}\) has full row rank._

Before stating our main theorem, let us examine when the initialization condition in Assumption 2 is met. Fortunately, we only require the following mild assumption on \(\bm{V}\) to ensure our parameter initialization has good properties.

**Assumption 3** (Assumption on \(\bm{V}\)).: _There exists one row vector \(\bm{x}=(x_{1},\cdots,x_{N})^{\top}\) of the prompt token matrix \(\bm{V}\) (cf. (3)) such that \(x_{i}\neq x_{j}\), \(\forall i\neq j\)._

Assumption 3 implies that \(\mathcal{V}\) has distinct tokens, i.e., \(\bm{v}_{j}\neq\bm{v}_{k}\) when \(j\neq k\). It is worth noting that Assumption 3 is the only assumption we have on the dictionary \(\mathcal{V}\). In comparison, all other theoretical works in Table 1 impose somewhat unrealistic assumptions on \(\mathcal{V}\). For example, Huang et al. (2023), Li et al. (2023), Nichani et al. (2024) assume that the tokens are pairwise orthogonal, which is restrictive since it implies that the dictionary size \(K\) should be no larger than the token dimension \(d\), whereas in practice it is often the case that \(K\gg d\)(Reid et al., 2024; Touvron et al., 2023). In addition, Chen et al. (2024), Zhang et al. (2023), Wu et al. (2023) assume that each token is independently sampled from some Gaussian distribution, which also does not align with practical scenarios where tokens are from a fixed dictionary and there often exist (strong) correlations between different tokens.

The following proposition states that when the number of heads exceeds the number of prompts, i.e. \(H\geq N\), we can guarantee that Assumption 2 holds with probability 1 by simply initializing \(\{\bm{Q}_{h}\}_{h=1}^{H}\) using Gaussian distribution.

**Proposition 1** (Initialization of \(\{\bm{Q}_{h}\}_{h=1}^{H}\)).: _Suppose Assumptions 1, 3 hold and \(H\geq N\). For any fixed \(\beta>0\), let \(\bm{Q}_{h}^{(0)}(i,j)\overset{i.i.d.}{\sim}\mathcal{N}(0,\beta^{2})\), then Assumption 2 holds almost surely._

Proof.: See Appendix E.1. 

Choice of learning rates.Define

\[\zeta_{0}\coloneqq\min_{k\in[K]}\left\{\lambda_{\min}\left(\bm{B}_{k}^{(0)}\bm {B}_{k}^{(0)\top}\right)\right\},\] (14)

where \(\Delta^{(0)}\) is the initial function gap (c.f. (11)). Assumption 2 indicates that \(\zeta_{0}>0\). Let \(\gamma\) be any positive constant that satisfies

\[\gamma\geq\zeta_{0}^{-5/4}\left(\frac{128\sqrt{2}}{\sqrt{2}-1}\left\|\bm{Z} \right\|_{2}^{2}\sqrt{H}\bar{f}_{\max}K^{3/2}\Delta^{(0)}\right)^{1/2}.\] (15)

We set the learning rates as

\[\eta_{Q}\leq 1/L\quad\text{and}\quad\eta_{w}=\gamma^{2}\eta_{Q},\] (16)

where5

Footnote 5: We leave a tighter, but more complicated, expression of \(L\) in the appendix (cf. (61)) in the appendix and present a simplified form in the main paper for readability.

\[L^{2}=\left(8\sqrt{2}H\sqrt{K}\frac{\left\|\bm{Z}\right\|_{2}^{2 }}{\zeta_{0}}\sqrt{\Delta^{(0)}}+1+\frac{\left\|\bm{Z}^{\top}\bm{\bar{Z}} \right\|_{2}}{m\tau}\right)^{2}\left\|\bm{Z}\right\|_{2}^{4}\cdot\left(\tfrac{ 8}{K}\gamma^{2}+\tfrac{4096}{\gamma\zeta_{0}^{2}}K^{2}N\Delta^{(0)}\right)\] \[\qquad+2H^{2}\left\|\bm{Z}\right\|_{2}^{4}\left(\tfrac{\gamma^{4 }}{K^{2}}+\tfrac{16384}{\gamma\zeta_{0}^{4}}K^{3}\left\|\bm{Z}\right\|_{2}^{2} \left(\Delta^{(0)}\right)^{2}\right).\] (17)

Theoretical guarantee.Now we are ready to state our first main result, regarding the training dynamic of the transformer.

**Theorem 1** (Training time convergence).: _Suppose Assumptions 1, 2 hold. We let \(\bm{w}_{k}^{(0)}=\bm{0}\) and set the learning rates as in (16). Then we have_

\[\mathcal{L}(\bm{\theta}^{(t)})-\inf_{\bm{\theta}}\mathcal{L}(\bm{\theta})\leq \left(1-\frac{\eta_{w}\zeta_{0}}{2K}\right)^{t}\left(\mathcal{L}(\bm{\theta}^{ (0)})-\inf_{\bm{\theta}}\mathcal{L}(\bm{\theta})\right),\quad\forall t\in \mathbb{N}.\] (18)

Proof.: See Appendix C. 

Theorem 1, together with Proposition 1, shows that the training loss converges to its minimum value at a linear rate, under mild assumptions of the task coefficients and token dictionary. This gives the _first_ convergence result for transformers with multi-head softmax attention trained using GD to perform ICL tasks (see Table 1). Our convergence guarantee (18) also indicates that the convergence speed decreases as the size \(K\) of the dictionary or the number \(H\) of attention heads increases, which is intuitive because training with a larger vocabulary size or number of parameters is more challenging. However, a small \(H\) will limit the expressive power of the model (see Section 3.3 for detailed discussion), and we require \(H\geq N\) to guarantee Assumption 2 holds, as stated in Proposition 1.

### Inference time performance

We now move to examine the inference time performance, where the coefficient vector \(\bm{\lambda}\) corresponding to the inference task may not drawn from \(\mathcal{D}_{\bm{\lambda}}\). In fact, we only assume that the coefficient vector \(\bm{\lambda}\) at inference time is bounded as in the following assumption.

**Assumption 4** (Boundedness of \(\bm{\lambda}\) at inference time).: _We assume that at inference time \(\left\|\bm{\lambda}\right\|_{2}\leq B\) for some \(B>0\)._

For notational simplicity, let \(\bm{Z}^{Q}\in\mathbb{R}^{m\times(K-N)}\) denote

\[\bm{Z}^{Q}\coloneqq(f(\bm{v}_{N+1}),\cdots,f(\bm{v}_{K}))\in\mathbb{R}^{m \times(K-N)}.\] (19)

The following theorem characterizes the performance guarantee of the transformer's output \(\widehat{\bm{y}}\) (after sufficient training) at the inference time.

**Theorem 2** (Inference time performance).: _Let \(\widehat{\bm{\lambda}}\) be the solution to the following ridge regression problem:_

\[\widehat{\bm{\lambda}}\coloneqq\arg\min_{\bm{\lambda}}\left\{\frac{1}{2N}\sum_{ i=1}^{N}(y_{i}-\bm{\lambda}^{\top}f(\bm{v}_{i}))^{2}+\frac{m\tau}{2N}\left\|\bm{ \lambda}\right\|_{2}^{2}\right\}.\] (20)

_Under the assumptions in Theorem 1, for any \(\varepsilon>0\) and \(\delta\in(0,1)\), if the number of training iterates \(T\) satisfies_

\[T\geq\frac{\log\left(B^{2\Delta^{(0)}}\left(\left\|\bm{Z}\right\|_{2}+\sqrt{ \tau}\left(2\sqrt{N\log(1/\delta)}+2\log(1/\delta)+N\right)^{1/2}\right)^{2} \right/\left(m\tau\varepsilon\right)\right)}{\log\left(1/\left(1-\frac{\eta _{\mathrm{sc}}\varepsilon\zeta}{2R}\right)\right)},\] (21)

_then given any prompt \(P\) that satisfies Assumption 4 at the inference time, with probability at least \(1-\delta\), the output of the transformer \(\widehat{\bm{y}}\) satisfies_

\[\frac{1}{2K}\left\|\widehat{\bm{y}}-\widehat{\bm{y}}^{\star}\right\|_{2}^{2} \leq\varepsilon,\qquad\text{with}\quad\widehat{\bm{y}}^{\star}\coloneqq \begin{pmatrix}\bm{y}\\ \left(\bm{Z}^{Q}\right)^{\top}\widehat{\bm{\lambda}}\end{pmatrix}.\] (22)

Proof.: See Appendix D. 

In Theorem 2, (22) shows that after training, the transformer learns to output the given labels of the first \(N\) tokens in each prompt, and more importantly, predicts the labels of the rest \(K-N\) tokens by implementing the ridge regression given in (20). Note that Akyurek et al. (2022) studied the expressive power of transformers on the linear regression task and showed by construction that transformers can represent the closed-form ridge regression solution. Interestingly, here we show from an optimization perspective that transformers can in fact be trained to do so.

Generalization capabilities of the pretrained transformer.Theorem 2 captures two generalization capabilities that the pretrained transformer can have.

1. _Contextual generalization to unseen examples:_ Theorem 2 suggests that the transformer exploits the _inherent contextual_ information (to be further discussed in Section 3.3) of the function template in the given prompt, and can further use such information to predict the unseen tokens.
2. _Generalization to unseen tasks:_ Theorem 2 also suggests that the pretrained transformer can generalize to a function map corresponding to any \(\bm{\lambda}\in\mathbb{R}^{m}\) at the inference time (albeit satisfying Assumption 4), which is not necessarily sampled from the support of its training distribution \(\mathcal{D}_{\bm{\lambda}}\).

We note that the contextual generalization that the transformer has here is different in nature from the prediction ability shown in previous works on ICL (Huang et al., 2023; Chen et al., 2024; Li et al., 2024; Nichani et al., 2024). Those work focuses on a setting where each prompt contains a good portion of tokens similar to the query token, allowing the transformer to _directly_ use the label of the corresponding answers from the prompt as the prediction. However, in practical scenarios, prompts often contain only partial information, and our analysis sheds lights on explaining how transformers generalize to unseen examples by leveraging ridge regression to infer the underlying template.

How does the representation dimension affect the performance?Beyond the above discovery, several questions are yet to be explored. For instance, while we demonstrate that transformers can be trained to implement ridge regression, how good is the performance of the ridge regression itself? What is the best choice of ridge regression we could expect? How close is the transformer's choice to the best possible choice? We address these questions as follows.

Given any prompt \(P\) at inference time, since there is no label information about the rest \(K-N\) tokens, the best prediction we could hope for from the transformer shall be

\[\widehat{\bm{y}}^{\text{best}}\coloneqq\begin{pmatrix}\bm{y}\\ \left(\bm{Z}^{Q}\right)^{\top}\widehat{\bm{\lambda}}_{\tau}\end{pmatrix},\] (23)

where \(\bm{Z}^{Q}\) is defined in (19), and \(\widehat{\bm{\lambda}}_{\tau}\) satisfies:

\[\widehat{\bm{\lambda}}_{\tau}\coloneqq\arg\min_{\bm{\lambda}}\mathbb{E}_{ \bm{\xi}}\left[\tfrac{1}{2N}\sum_{i=1}^{N}(y_{i}-\bm{\lambda}^{\top}\left(f( \bm{v}_{i})+\bm{\epsilon}_{i}\right))^{2}\right].\] (24)In other words, we hope the transformer outputs the given \(N\) labels as they are. For the rest \(K-N\) labels, the best we could hope for is that the transformer estimates the coefficient vector \(\bm{\lambda}\) by solving the above regression problem to obtain \(\widehat{\bm{\lambda}}_{\tau}\), and predict the \(k\)-th label by \(\widehat{\bm{\lambda}}_{\tau}^{\top}f(\bm{v}_{k})\) for \(k=N+1,\cdots,K\). Note that (24) is equivalent to the following ridge regression problem (see Lemma 4 in the appendix for its derivation):

\[\widehat{\bm{\lambda}}_{\tau}=\arg\min_{\bm{\lambda}}\left\{\tfrac{1}{2N}\sum _{i=1}^{N}(y_{i}-\bm{\lambda}^{\top}f(\bm{v}_{i}))^{2}+\tfrac{\tau}{2}\left\| \bm{\lambda}\right\|_{2}^{2}\right\}.\] (25)

The only difference between the two ridge regression problems (20) and (25) is the coefficient of the regularization term. This indicates that at the training time, the transformer learns to implement ridge regression to predict the labels of the rest \(K-N\) tokens, assuming the noise level is given by \(\tfrac{m}{N}\tau\). This observation also reflects how the sequence length \(N\) affects the transformer's preference for choosing templates and its performance at inference time:

* The closer \(m\) is to \(N\), the closer the transformer's choice of templates is to the best possible choice, and the better the transformer's prediction will be;
* When \(N<m\), the transformer tends to underfit by choosing a \(\bm{\lambda}\) with small \(\ell_{2}\)-norm;
* When \(N>m\), the transformer tends to overfit since it underestimates the noise level and in turn captures noise in the prediction.

### Further interpretation

We provide more interpretation on our results, which may lead to useful insights into the ICL ability of the transformer.

How does the transformer gain ICL ability with representations?Intuitively speaking, our pretrained transformer gains in-context ability by extracting and memorizing some "inherent information" of all basic function maps \(f_{i}\) (\(i\in[m]\)) during the training. Such information allows it to infer the coefficient vector \(\bm{\lambda}\) from the provided labels in each prompt and calculate the inner product \(\langle\bm{\lambda},f(\bm{v}_{k})\rangle\) to compute \(y_{k}\) given any token \(\bm{v}_{k}\in\mathcal{V}\) at inference time. To be more specific, the "inherent information" of all basic tasks could be described by the \(N\)-by-\(K\) matrix \(\bm{A}\) defined as follows (see also (34)):

\[\bm{A}\coloneqq\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I}_{N}\right)^{-1}\left( \bm{Z}^{\top}\widehat{\bm{Z}}+(m\tau\bm{I}_{N},\bm{0})\right)\in\mathbb{R}^{N \times K},\]

where \(\widehat{\bm{Z}}\coloneqq(f(\bm{v}_{1}),\cdots,f(\bm{v}_{K}))=(\bm{Z},\bm{Z} ^{Q})\in\mathbb{R}^{m\times K}\). During training, the transformer learns to approximate \(\bm{A}_{:,k}\) by \(\sum_{h=1}^{H}w_{h,k}\mathsf{softmax}(\bm{V}^{\top}\bm{Q}_{k}\bm{v}_{k})\) for each \(k\in[K]\).

To further elaborate, we take a closer look at the special case when the labels do not contain any noise, i.e., \(\tau=0\), and \(N\geq m\). In this case, \(\bm{A}\) becomes \(\bm{Z}^{\dagger}\widehat{\bm{Z}}\), and given any prompt \(P=P_{\bm{\lambda}}\), the coefficient vector \(\bm{\lambda}\) could be uniquely determined from the provided token-label pairs in the prompt. It is straightforward to verify that the label of each token \(\bm{v}_{k}\) could be represented by the inner product of the given label vector \(\bm{y}\) and the \(k\)-th column of \(\bm{Z}^{\dagger}\widehat{\bm{Z}}\), i.e.,

\[y_{k}=\left\langle\bm{y},\bm{Z}^{\dagger}\widehat{\bm{Z}}_{:,k}\right\rangle.\] (26)

Comparing the above equation with (8), it can be seen that in order to gain the in-context ability, the transformer needs to learn an approximation of \(\bm{Z}^{\dagger}\widehat{\bm{Z}}_{:,k}\) by \(\sum_{h=1}^{H}w_{h,k}\mathsf{softmax}(\bm{V}^{\top}\bm{Q}_{h}\bm{v}_{k})\) for each \(k\in[K]\).

More generally, in the proof of Theorem 2, we show that

\[\widehat{\bm{y}}_{k}^{\star}=\left\langle\bm{y},\bm{A}_{:,k}\right\rangle,\] (27)

comparing which with (8) suggests that a small training error implies that \(\sum_{h=1}^{H}w_{h,k}\mathsf{softmax}(\bm{V}^{\top}\bm{Q}_{h}\bm{v}_{k})\) is close to \(\bm{A}_{:,k}\). In fact, this is the necessary and sufficient condition for the training loss to be small. A rigorous argument is provided in Lemma 5.

The necessity and trade-offs of multi-head attention mechanism.Multi-head attention mechanism is essential in our setting. In fact, it is generally impossible to train a shallow transformer with only one attention head to succeed in the ICL task considered in our paper. This is because, as we have discussed above, the key for the transformer is to approximate \(\bm{A}_{:,k}\) by \(\sum_{h=1}^{H}w_{h,k}\mathsf{softmax}(\bm{V}^{\top}\bm{Q}_{h}\bm{v}_{k})\) for each \(k\in[K]\). If \(H=1\), the transformer could not approximate each \(\bm{A}_{:,k}\) by \(w_{1,k}\mathsf{softmax}(\bm{V}^{\top}\bm{Q}_{1}\bm{v}_{k})\) in general since the entries of the latter vector are either all positive or all negative. In addition, Proposition 1 indicates that when \(H\geq N\), the weights of the transformer with a simple initialization method satisfy our desired property that is crucial to guarantee the fast linear convergence. However, (18) implies that we should not set \(H\) to be too large, since larger \(H\) yields slower convergence rate.

## 4 Conclusion

We analyze the training dynamics of a one-layer transformer with multi-head softmax attention trained by gradient descent to solve complex non-linear regression tasks using partially labeled prompts. In this setting, the labels contain Gaussian noise, and each prompt may include only a few examples, which are insufficient to determine the underlying template. Our work overcomes several restrictive assumptions made in previous studies and proves that the training loss converges linearly to its minimum value. Furthermore, we analyze the transformer's strategy for addressing the issue of underdetermination during inference and evaluate its performance by comparing it with the best possible strategy. Our study provides the first analysis of how transformers can acquire contextual (template) information to generalize to unseen examples when prompts contain a limited number of query-answer pairs.

## Acknowledgments and Disclosure of Funding

The work of T. Yang and Y. Chi is supported in part by the grants NSF CCF-2007911, DMS-2134080 and ONR N00014-19-1-2404. The work of Y. Liang was supported in part by the U.S. National Science Foundation under the grants ECCS-2113860, DMS-2134145 and CNS-2112471.

## References

* Agarwal et al. (2024) R. Agarwal, A. Singh, L. M. Zhang, B. Bohnet, S. Chan, A. Anand, Z. Abbas, A. Nova, J. D. Co-Reyes, E. Chu, et al. Many-shot in-context learning. _arXiv preprint arXiv:2404.11018_, 2024.
* Ahuja et al. (2023) K. Ahuja, M. Panwar, and N. Goyal. In-context learning through the bayesian prism. _arXiv preprint arXiv:2306.04891_, 2023.
* Akyurek et al. (2022) E. Akyurek, D. Schuurmans, J. Andreas, T. Ma, and D. Zhou. What learning algorithm is in-context learning? investigations with linear models. _arXiv preprint arXiv:2211.15661_, 2022.
* Bai et al. (2024) Y. Bai, F. Chen, H. Wang, C. Xiong, and S. Mei. Transformers as statisticians: Provable in-context learning with in-context algorithm selection. _Advances in neural information processing systems_, 36, 2024.
* Brown et al. (2020) T. Brown, B. Mann, N. Ryder, M. Subbiah, J. D. Kaplan, P. Dhariwal, A. Neelakantan, P. Shyam, G. Sastry, A. Askell, et al. Language models are few-shot learners. _Advances in neural information processing systems_, 33:1877-1901, 2020.
* Chen et al. (2024) S. Chen, H. Sheen, T. Wang, and Z. Yang. Training dynamics of multi-head softmax attention for in-context learning: Emergence, convergence, and optimality. _arXiv preprint arXiv:2402.19442_, 2024.
* Chen and Zou (2024) X. Chen and D. Zou. What can transformer learn with varying depth? case studies on sequence learning tasks. _arXiv preprint arXiv:2404.01601_, 2024.
* Dai et al. (2022) D. Dai, Y. Sun, L. Dong, Y. Hao, S. Ma, Z. Sui, and F. Wei. Why can gpt learn in-context? language models implicitly perform gradient descent as meta-optimizers. _arXiv preprint arXiv:2212.10559_, 2022.
* Dai et al. (2020)P. Deora, R. Ghaderi, H. Taheri, and C. Thrampoulidis. On the optimization and generalization of multi-head attention. _arXiv preprint arXiv:2310.12680_, 2023.
* Edelman et al. [2022] B. L. Edelman, S. Goel, S. Kakade, and C. Zhang. Inductive biases and variable creation in self-attention mechanisms. In _International Conference on Machine Learning_, pages 5793-5831. PMLR, 2022.
* Edelman et al. [2024] B. L. Edelman, E. Edelman, S. Goel, E. Malach, and N. Tsilivis. The evolution of statistical induction heads: In-context learning markov chains. _arXiv preprint arXiv:2402.11004_, 2024.
* Garg et al. [2022] S. Garg, D. Tsipras, P. S. Liang, and G. Valiant. What can transformers learn in-context? a case study of simple function classes. _Advances in Neural Information Processing Systems_, 35:30583-30598, 2022.
* Giannou et al. [2023] A. Giannou, S. Rajput, J.-y. Sohn, K. Lee, J. D. Lee, and D. Papailiopoulos. Looped transformers as programmable computers. In _International Conference on Machine Learning_, pages 11398-11442. PMLR, 2023.
* Guo et al. [2023] T. Guo, W. Hu, S. Mei, H. Wang, C. Xiong, S. Savarese, and Y. Bai. How do transformers learn in-context beyond simple functions? a case study on learning with representations. _arXiv preprint arXiv:2310.10616_, 2023.
* Hahn and Goyal [2023] M. Hahn and N. Goyal. A theory of emergent in-context learning as implicit structure induction. _arXiv preprint arXiv:2303.07971_, 2023.
* Han et al. [2023] C. Han, Z. Wang, H. Zhao, and H. Ji. In-context learning of large language models explained as kernel regression. _arXiv preprint arXiv:2305.12766_, 2023.
* Huang et al. [2023] Y. Huang, Y. Cheng, and Y. Liang. In-context convergence of transformers. _arXiv preprint arXiv:2310.05249_, 2023.
* Jeon et al. [2024] H. J. Jeon, J. D. Lee, Q. Lei, and B. Van Roy. An information-theoretic analysis of in-context learning. _arXiv preprint arXiv:2401.15530_, 2024.
* Jiang [2023] H. Jiang. A latent space theory for emergent abilities in large language models. _arXiv preprint arXiv:2304.09960_, 2023.
* Karimi et al. [2016] H. Karimi, J. Nutini, and M. Schmidt. Linear convergence of gradient and proximal-gradient methods under the Polyak-Lojasiewicz condition. In _European Conference on Machine Learning and Knowledge Discovery in Databases_, pages 795-811, 2016.
* Kim and Suzuki [2024] J. Kim and T. Suzuki. Transformers learn nonlinear features in context. In _ICLR 2024 Workshop on Mathematical and Empirical Understanding of Foundation Models_, 2024.
* Laurent and Massart [2000] B. Laurent and P. Massart. Adaptive estimation of a quadratic functional by model selection. _Annals of statistics_, pages 1302-1338, 2000.
* Li et al. [2024] H. Li, M. Wang, S. Lu, X. Cui, and P.-Y. Chen. Training nonlinear transformers for efficient in-context learning: A theoretical learning and generalization analysis. _arXiv preprint arXiv:2402.15607_, 2024.
* Li et al. [2023] Y. Li, M. E. Ildiz, D. Papailiopoulos, and S. Oymak. Transformers as algorithms: Generalization and stability in in-context learning. In _International Conference on Machine Learning_, pages 19565-19594. PMLR, 2023.
* Nguyen and Mondelli [2020] Q. N. Nguyen and M. Mondelli. Global convergence of deep networks with one wide layer followed by pyramidal topology. _Advances in Neural Information Processing Systems_, 33:11961-11972, 2020.
* Nichani et al. [2024] E. Nichani, A. Damian, and J. D. Lee. How transformers learn causal structure with gradient descent. _arXiv preprint arXiv:2402.14735_, 2024.
* Olsson et al. [2022] C. Olsson, N. Elhage, N. Nanda, N. Joseph, N. DasSarma, T. Henighan, B. Mann, A. Askell, Y. Bai, A. Chen, et al. In-context learning and induction heads. _arXiv preprint arXiv:2209.11895_, 2022.
* Olsson et al. [2020]M. Reid, N. Savinov, D. Teplyashin, D. Lepikhin, T. Lillicrap, J.-B. Alayrac, R. Soricut, A. Lazaridou, O. Firat, J. Schrittwieser, et al. Gemini 1.5: Unlocking multimodal understanding across millions of tokens of context. _arXiv preprint arXiv:2403.05530_, 2024.
* Touvron et al. (2023) H. Touvron, L. Martin, K. Stone, P. Albert, A. Almahairi, Y. Babaei, N. Bashlykov, S. Batra, P. Bhargava, S. Bhosale, et al. Llama 2: Open foundation and fine-tuned chat models. _arXiv preprint arXiv:2307.09288_, 2023.
* Vaswani et al. (2017) A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, L. Kaiser, and I. Polosukhin. Attention is all you need. _Advances in neural information processing systems_, 30, 2017.
* Von Oswald et al. (2023) J. Von Oswald, E. Niklasson, E. Randazzo, J. Sacramento, A. Mordvintsev, A. Zhmoginov, and M. Vladymyrov. Transformers learn in-context by gradient descent. In _International Conference on Machine Learning_, pages 35151-35174. PMLR, 2023.
* Wang et al. (2023) X. Wang, W. Zhu, M. Saxon, M. Steyvers, and W. Y. Wang. Large language models are implicitly topic models: Explaining and finding good demonstrations for in-context learning. In _Workshop on Efficient Systems for Foundation Models@ ICML2023_, 2023.
* Wei et al. (2023) J. Wei, J. Wei, Y. Tay, D. Tran, A. Webson, Y. Lu, X. Chen, H. Liu, D. Huang, D. Zhou, et al. Larger language models do in-context learning differently. _arXiv preprint arXiv:2303.03846_, 2023.
* Wies et al. (2024) N. Wies, Y. Levine, and A. Shashua. The learnability of in-context learning. _Advances in Neural Information Processing Systems_, 36, 2024.
* Wu et al. (2023) J. Wu, D. Zou, Z. Chen, V. Braverman, Q. Gu, and P. L. Bartlett. How many pretraining tasks are needed for in-context learning of linear regression? _arXiv preprint arXiv:2310.08391_, 2023.
* Xie et al. (2021) S. M. Xie, A. Raghunathan, P. Liang, and T. Ma. An explanation of in-context learning as implicit bayesian inference. _arXiv preprint arXiv:2111.02080_, 2021.
* Zhang et al. (2023) R. Zhang, S. Frei, and P. L. Bartlett. Trained transformers learn linear models in-context. _arXiv preprint arXiv:2306.09927_, 2023a.
* Zhang et al. (2023b) Y. Zhang, F. Zhang, Z. Yang, and Z. Wang. What and how does in-context learning learn? bayesian model averaging, parameterization, and generalization. _arXiv preprint arXiv:2305.19420_, 2023b.

Experiments

This section aims to provide some empirical validation to our theoretical findings and verify that some of our results could be generalized to deeper transformers.

Setup.We conduct experiments on a synthetic dataset, where we randomly generate each token \(\bm{v}_{k}\) and their representation \(f(\bm{v}_{k})\) from standard Gaussian distribution. We employ both the 1-layer transformer described in Section 2 and a standard 4-layer transformer in Vaswani et al. (2017) with \(d_{\text{model}}=256\) and \(d_{\text{tf}}=512\). We set the training loss to be the population loss defined in (9), and initialize \(\{\bm{Q}_{h}^{(0)}\}_{h\in[H]}\) using standard Gaussian and set \(\{\bm{w}_{h}^{(0)}\}_{h\in[H]}\) to be \(\bm{0}\), identical to what is specified in Section 3. We generate \(\bm{\lambda}\) from standard Gaussian distribution to create the training set with \(10000\) samples and in-domain test set with \(200\) samples; we also create an out-of-domain (ood) test set with \(200\) samples by sampling \(\bm{\lambda}\) from \(\mathcal{N}(\bm{1}_{m},\bm{4}\bm{I}_{m})\). Given \(\bm{\lambda}\), we generate the label \(y_{k}\) of token \(\bm{v}_{k}\) using (1), for \(k\in[K]\). We train with a batch size \(256\). All experiments use the Adam optimizer with a learning rate \(1\times 10^{-4}\).

Training and inference performance.We set \(N=30\), \(K=200\), \(d=100\), \(m=20\), and set \(H\) to be \(64\) and \(8\) for 1-layer and 4-layer transformers, respectively. Figure 2 shows the training and inference losses of both 1-layer and 4-layer transformers, where we measure the inference loss by \(\frac{1}{K}\|\widehat{\bm{y}}-\widehat{\bm{y}}^{*}\|_{2}^{2}\) to validate (22): after sufficient training, the output of the transformer \(\widehat{\bm{y}}\) converges to \(\widehat{\bm{y}}^{*}\). From Figure 2 we can see that for both 1-layer and 4-layer transformers, the three curves have the same descending trend, despite the inference loss on the ood dataset is higher than that on the in-domain dataset. This experiment also shows the transformer's contextual generalization to unseen examples and to unseen tasks, validating our claim in Section 3.2.

Figure 3 plots the performance gap \(\frac{1}{K}\left\|\widehat{\bm{y}}^{*}-\widehat{\bm{y}}^{\text{best}}\right\| _{2}^{2}\) of the one-layer transformer with respect to different \(N\) ranging from \(50\) to \(150\), when we fix \(m=100\) and \(\tau=0.01\). This verifies that the ridge regression implemented by the pretrained transformer has a better performance when \(m\) is close to \(N\), again verifying our claim at the end of Section 2.

Impact of the number of attention heads.We now turn to examine the impact of the number of attention heads. In this experiment, we use the population loss (9), and set the other configurations same as those in Figure 2. Figure 4 shows the training loss curves for different \(H\) with respect the iteration number, which validates our claims. From Figure 4, we can see that we need to set \(H\) large enough to guarantee the convergence of the training loss. However, setting \(H\) too large (\(H=400\)) leads to instability and divergence of the loss. Recall that in Proposition 1, we require \(H\geq N\) to guarantee our convergence results hold. Although this condition may not be necessary, Figure 4 shows that when \(H<N=30\), the loss stopped descending even when it is far from the minimal value. On the other side, the loss keeps descending when \(H=30\) (though slowly).

Figure 2: Training and inference losses of (a) 1-layer and (b) 4-layer transformers, which validate Theorem 2, as well as the transformer’s contextual generalization to unseen examples and to unseen tasks.

We also explore how \(H\) affects the training of the 4-layer transformer, as displayed in Figure 5, where we set \(K=200\) and the configurations other than \(H\) are the same as in Figure 3. We fix the wall-clock time to be 100 seconds and plot the training loss curves with different \(H\). Figure 5 (a) shows the final training and inference losses with respect to \(H\). It reflects that the losses converge faster with smaller \(H\) (here the final training loss is the smallest when \(H=4\)). The training curves in Figure 5 (b) corresponding to different \(H\) within 100s may provide some explanation to this phenomenon: (i) transformers with larger \(H\) could complete less iterations within a fixed amount of time (the curves corresponding to larger \(H\) are shorter); (ii) the training loss curves corresponding to large \(H\) (\(H=32,64\)) descend more slowly. This suggests our claim that larger \(H\) may yield slower convergence rate is still valid on deeper transformers. Note that unlike the 1-layer transformer, deeper transformers don't require a large \(H\) to guarantee convergence. This is because deeper transformers have better expressive power even when \(H\) is small.

## Appendix B Proof Preparation

### Summary of key notation

We summarize the frequently used notation in Table 2 for ease of reference.

### Auxiliary lemmas

We provide some useful facts that will be repeatedly used later on. Let

\[\bm{z}_{k}\coloneqq f(\bm{v}_{k})=(f_{1}(\bm{v}_{k}),f_{2}(\bm{v}_{k}),\cdots,f_{m}(\bm{v}_{k}))^{\top}\in\mathbb{R}^{m},\qquad\forall k\in[K].\]

Recalling (12), we can rewrite

\[\bm{Z}\coloneqq(\bm{z}_{1},\cdots,\bm{z}_{N})\in\mathbb{R}^{m\times N}.\]

We further define \(\bm{s}_{k}^{h}\in\mathbb{R}^{N}\) as follows:

\[\bm{s}_{k}^{h}\coloneqq\mathsf{softmax}(\bm{V}^{\top}\bm{Q}_{h}\bm{v}_{k})=(s _{1k}^{h},\cdots,s_{Nk}^{h})^{\top},\quad\forall k\in[K],h\in[H].\] (28)

Figure 4: Training losses of the 1-layer transformer with different number of attention heads \(H\), where \(H\) should be large enough to guarantee the convergence of the training loss, but setting \(H\) too large leads to instability and slower divergence.

**Lemma 1** (Softmax gradient).: _For all \(j\in[N],k\in[K]\) and \(h\in[H]\), we have_

\[\frac{\partial s_{jk}^{h}}{\partial\bm{Q}_{h}}=s_{jk}^{h}\sum_{i=1}^{N}s_{ik}^{h} (\bm{v}_{j}-\bm{v}_{i})\bm{v}_{k}^{\top}\,,\] (29)

_where \(s_{jk}^{h}\) is defined in (28)._

Proof.: See the proof of Lemma A.1 in Huang et al. (2023). 

**Lemma 2** (Smoothness of softmax).: _For vectors \(\bm{\xi}_{1},\bm{\xi}_{2}\in\mathbb{R}^{l}\), we have_

\[\left\|\mathsf{softmax}(\bm{\xi}_{1})-\mathsf{softmax}(\bm{\xi}_{2})\right\| _{1}\leq 2\left\|\bm{\xi}_{1}-\bm{\xi}_{2}\right\|_{\infty}.\] (30)

Proof.: See Corollary A.7 in Edelman et al. (2022). 

We also need to make use of the following form of Young's inequality.

**Lemma 3**.: _For any \(\bm{x}_{1},\cdots,\bm{x}_{l}\in\mathbb{R}^{p}\), we have_

\[\left\|\sum_{i=1}^{l}\bm{x}_{i}\right\|_{2}^{2}\leq l\sum_{i=1}^{l}\left\|\bm {x}_{i}\right\|_{2}^{2}.\] (31)

The following lemma shows the equivalence between (24) and (25).

**Lemma 4** (Equivalence of the regression problems).: _Given any prompt \(P_{\bm{\lambda}}\coloneqq(\bm{v}_{1},y_{1},\cdots,\bm{v}_{N},y_{N})\), we have the following equivalence:_

\[\mathbb{E}_{\bm{\epsilon}}\left[\frac{1}{2N}\sum_{i=1}^{N}(y_{i}-\bm{\lambda}^ {\top}\left(f(\bm{v}_{i})+\bm{\epsilon}_{i}\right))^{2}\right]=\frac{1}{2N} \sum_{i=1}^{N}(y_{i}-\bm{\lambda}^{\top}f(\bm{v}_{i}))^{2}+\frac{\tau}{2} \left\|\bm{\lambda}\right\|_{2}^{2}.\] (32)

\begin{table}
\begin{tabular}{c c} \hline \hline notation & meaning \\ \hline \(K\in\mathbb{N}_{+}\) & total number of tokens \\ \(d\in\mathbb{N}_{+}\) & token dimension \\ \(m\in\mathbb{N}_{+}\) & number of basic tasks \\ \(H\in\mathbb{N}_{+}\) & number of attention heads \\ \(N\in\mathbb{N}_{+}\) & number of examples in each prompt \\ \(\bm{v}_{k}\in\mathbb{R}^{d}\), \(k\in[K]\) & the \(k\)-th token \\ \(f_{i}:\mathbb{R}^{d}\rightarrow\mathbb{R}\), \(i\in[m]\) & the \(i\)-th basic task \\ \(\bm{\lambda}\in\mathbb{R}^{m}\) & coefficient vector \\ \(y_{k}=\bm{\lambda}^{\top}\left(f(\bm{v}_{k})+\bm{\epsilon}_{k}\right),k\in[K]\) & the \(k\)-th label \\ \hline \hline \end{tabular}
\end{table}
Table 2: Notation for key parameters.

Figure 5: Training losses of a 4-layer transformer with different \(H\), fixing wall-clock time to be \(100\)s. This experiment shows that unlike 1-layer transformers, deeper transformers don’t require \(H\) to be large to guarantee convergence of the loss.

Proof.: See Appendix E.2. 

## Appendix C Proof of Theorem 1

We first outline the proof. To prove Theorem 1, we first remove the expectation in the expression of the loss function \(\mathcal{L}\) in (9) by reformulating it to a deterministic form (see Lemma 5). With this new form, we show by induction that the loss function \(\mathcal{L}\) is smooth (Lemma 10) and satisfies the Polyak-Lojasiewicz (PL) condition (c.f. (49)). Provided with both smoothness and PL conditions, we are able to give the desired linear convergence rate [Karimi et al., 2016].

We define

\[\bm{\delta}_{k}^{\bm{\theta}}\coloneqq\begin{cases}\sum_{h=1}^{H}w_{h,k}\bm{s }_{k}^{h}-\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I}\right)^{-1}\left(\bm{z}_{k}+m \tau\bm{e}_{k}\right),&\text{if }k\in[N],\\ \sum_{h=1}^{H}w_{h,k}\bm{s}_{k}^{h}-\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I} \right)^{-1}\bm{z}_{k},&\text{if }k\in[K]\setminus[N].\end{cases}\] (33)

We also define the following matrices:

\[\bm{A} \coloneqq\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I}_{N}\right)^{-1} \left(\bm{Z}^{\top}\widehat{\bm{Z}}+(m\tau\bm{I}_{N},\bm{0})\right)\in\mathbb{ R}^{N\times K},\] (34) \[\widehat{\bm{A}}(\bm{\theta}) \coloneqq\left(\sum_{h=1}^{H}w_{h,1}\bm{s}_{1}^{h},\cdots,\sum_{h =1}^{H}w_{h,K}\bm{s}_{K}^{h}\right)\in\mathbb{R}^{N\times K},\] (35)

where \(\widehat{\bm{Z}}\coloneqq(\bm{z}_{1},\cdots,\bm{z}_{K})\in\mathbb{R}^{m\times K}\).

We first reformulate the loss function to remove the expectation in the population loss.

**Lemma 5** (Reformulation of the loss function).: _Under Assumption 1, the loss function \(\mathcal{L}(\bm{\theta})\) could be rewritten into the following equivalent form:_

\[\mathcal{L}(\bm{\theta})=\frac{1}{2K}\sum_{k=1}^{K}\left\|\left(\bm{Z}^{\top} \bm{Z}+m\tau\bm{I}\right)^{1/2}\bm{\delta}_{k}^{\theta}\right\|_{2}^{2}+ \mathcal{L}^{\star}=\frac{1}{2K}\sum_{k=1}^{K}\left\|\bar{\bm{Z}}\bm{\delta}_ {k}^{\theta}\right\|_{2}^{2}+\mathcal{L}^{\star},\] (36)

_where_

\[\mathcal{L}^{\star} =\frac{1}{2K}\sum_{k=1}^{N}\left(-\left(\bm{Z}^{\top}\bm{z}_{k}+m \tau\bm{e}_{k}\right)^{\top}\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I}\right)^{-1} \left(\bm{Z}^{\top}\bm{z}_{k}+m\tau\bm{e}_{k}\right)+\left\|\bm{z}_{k}\right\| _{2}^{2}+m\tau\right)\] \[\quad+\frac{1}{2K}\sum_{k=N+1}^{K}\left(-\left(\bm{Z}^{\top}\bm{ z}_{k}\right)^{\top}\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I}\right)^{-1}\left(\bm{Z}^{ \top}\bm{z}_{k}\right)+\left\|\bm{z}_{k}\right\|_{2}^{2}\right)\]

_is a constant that does not depend on \(\bm{\theta}\), and \(\bar{\bm{Z}}\) is defined in (12)._

Proof.: See Appendix E.3. 

Lemma 5 indicates that \(\mathcal{L}^{\star}\) is a lower bound of \(\mathcal{L}\). We'll later show that \(\mathcal{L}^{\star}\) is actually the infimum of \(\mathcal{L}\), i.e., \(\mathcal{L}^{\star}=\inf_{\bm{\theta}}\mathcal{L}(\bm{\theta})\).

Lemma 5 also indicates that, the necessary and sufficient condition for \(\mathcal{L}(\bm{\theta}^{(t)})\) to converge to \(\mathcal{L}^{\star}\) during training is

\[\forall k\in[K]:\quad\bm{\delta}_{k}^{\theta^{t}}\to\bm{0},\quad t\to\infty,\] (37)

which folllows immediately that (37) is equivalent to

\[\widehat{\bm{A}}(\bm{\theta}^{(t)})-\bm{A}\to\bm{0},\quad t\to\infty.\] (38)

To simplify the analysis, we introduce the following reparameterization to unify the learning rates of all parameters, and we'll consider the losses after reparameterization in the subsequent proofs.

**Lemma 6** (Reparameterization).: _Define_

\[\gamma\coloneqq\sqrt{\eta_{w}/\eta_{Q}},\quad\bm{\alpha}_{h}\coloneqq\bm{w}_ {h}/\gamma,\quad\forall h\in[H],\] (39)_and let_

\[\bm{\xi}\coloneqq\{\bm{Q}_{h},\bm{\alpha}_{h}\}_{h=1}^{H},\quad\ell(\bm{\xi}) \coloneqq\mathcal{L}(\bm{\theta}).\] (40)

_Then (10) is equivalent to_

\[\bm{\xi}^{(t)}=\bm{\xi}^{(t-1)}-\eta_{Q}\nabla_{\bm{\xi}}\ell(\bm{\xi}^{(t-1)}),\quad\forall t\in[T].\] (41)

Proof.: See Appendix E.4. 

We denote \(\bm{\alpha}\) as \(\bm{\alpha}\coloneqq(\alpha_{h,k})_{h\in[H],k\in[K]}\in\mathbb{R}^{H\times K}\).

The following lemma bounds the gradient norms by the loss function, which is crucial to the proof of Theorem 1.

**Lemma 7** (Upper bound of the gradient norms).: _Suppose Assumption 1 holds and \(|\alpha_{h,k}^{(t)}|\leq\alpha\). Then for all \(h\in[H]\), we have_

\[\left\|\frac{\partial\ell(\bm{\xi}^{(t)})}{\partial\bm{Q}_{h}^{(t)}}\right\| _{F}\leq 2\sqrt{2}\gamma\alpha\bar{f}_{\max}\sqrt{\ell(\bm{\xi}^{(t)})- \mathcal{L}^{\star}}.\] (42)

Proof.: See Appendix E.5. 

Now we are ready to give the main proof.

Proof of Theorem 1.: To prove Theorem 1, it suffices to prove that under our assumptions, we have

\[\text{(Upper bound of the parameters:)}\quad\left\|\bm{\alpha}_{h}^{(t)} \right\|_{2} \leq\alpha,\] (43a) \[\text{(Lower bound of eigenvalues:)}\quad\lambda_{\min}\left(\bm{B} _{k}^{(t)}\bm{B}_{k}^{(t)\top}\right) \geq\frac{\zeta_{0}}{2},\] (43b) \[\text{(Linear decay of the loss:)}\quad\mathcal{L}(\bm{\theta}^{(t)})- \mathcal{L}^{\star} \leq\left(1-\frac{\eta_{Q}\sigma}{2}\right)^{t}\left(\mathcal{L}(\bm{ \theta}^{(0)})-\mathcal{L}^{\star}\right),\] (43c)

where

\[\sigma\coloneqq\frac{\zeta_{0}\gamma^{2}}{K},\quad\alpha\coloneqq\sqrt{2K} \frac{4\left\|\bar{\bm{Z}}\right\|_{2}}{\gamma\zeta_{0}}\sqrt{\mathcal{L}(\bm {\theta}^{(0)})-\mathcal{L}^{\star}},\] (44)

and \(\gamma,\bm{\alpha}_{h}\) is defined in (39), \(\zeta_{0}\) is defined in (14). We shall prove (43a),(43b) and (43c) by induction.

Base case.It is apparent that (43a),(43b) and (43c) all hold when \(t=0\).

Induction.We make the following inductive hypothesis, i.e., when \(s\in[t-1]\), (43a), (43b) and (43c) hold. Below we prove that (43a),(43b) and (43c) hold when \(s=t\) by the following steps.

Step 1: verify (43b) and the Polyak-Lojasiewicz condition.We first compute the gradient of the loss w.r.t. \(\bm{\alpha}\):

\[\forall k\in[K]:\quad\frac{\partial\ell(\bm{\xi})}{\partial\bm{ \alpha}_{k}}=\frac{1}{2K}\frac{\partial}{\partial\bm{\alpha}_{k}}\left\|\bar{ \bm{Z}}\bm{\delta}_{k}^{\theta}\right\|_{2}^{2} =\frac{1}{2K}\frac{\partial}{\partial\bm{\alpha}_{k}}\left\|\bar{ \bm{Z}}\left(\gamma\bm{C}_{k}\bm{\alpha}_{k}-\bm{A}_{:k}\right)\right\|_{2}^{2}\] \[=\frac{\gamma}{K}\left(\bar{\bm{Z}}\bm{C}_{k}\right)^{\top}\bar{ \bm{Z}}\bm{\delta}_{k}^{\theta}=\frac{\gamma}{K}\bm{B}_{k}^{\top}\bar{\bm{Z}} \bm{\delta}_{k}^{\theta},\] (45)

where the first equality follows from Lemma 5, \(\bm{C}_{k},\bm{B}_{k}\) is defined in (13).

Let \(\bm{b}_{k}^{h}\) denote the \(h\)-th column vector of \(\bm{B}_{k}\), \(h\in[H]\), i.e., \(\bm{B}_{k}\coloneqq(\bm{b}_{k}^{1},\cdots,\bm{b}_{k}^{H})\), then for any \(k\in[K]\) and \(t\in\mathbb{N}_{+}\), we have

\[\left\|(\bm{b}_{k}^{h})^{(t)}-(\bm{b}_{k}^{h})^{(0)}\right\|_{2} \leq\left\|\bar{\bm{Z}}\right\|_{2}\left\|(\bm{s}_{k}^{h})^{(t)}-( \bm{s}_{k}^{h})^{(0)}\right\|_{2}\] \[\leq\left\|\bar{\bm{Z}}\right\|_{2}\left\|(\bm{s}_{k}^{h})^{(t)}-( \bm{s}_{k}^{h})^{(0)}\right\|_{1}\] \[\leq 2\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{V}^{\top}(\bm{Q}_ {h}^{(t)}-\bm{Q}_{h}^{(0)})\bm{v}_{k}\right\|_{\infty}\] \[\leq 2\left\|\bar{\bm{Z}}\right\|_{2}\max_{j\in[N]}|\bm{v}_{j}^{ \top}(\bm{Q}_{h}^{(t)}-\bm{Q}_{h}^{(0)})\bm{v}_{k}|\] \[\leq 2\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{Q}_{h}^{(t)}-\bm{Q} _{h}^{(0)}\right\|_{F},\] (46)where the third line uses Lemma 2, and that

\[\forall h\in[H]:\quad\left\|\bm{Q}_{h}^{(t)}-\bm{Q}_{h}^{(0)}\right\|_ {F} \leq\sum_{s=0}^{t-1}\eta\left\|\frac{\partial\ell(\bm{\xi}^{(s)})}{ \partial\bm{Q}_{h}^{(s)}}\right\|_{F}\] \[\leq\sum_{s=0}^{t-1}2\sqrt{2}\eta\gamma\alpha\bar{f}_{\max}\sqrt{ \ell(\bm{\xi}^{(s)})-\mathcal{L}^{\star}}\] \[\leq 2\sqrt{2}\eta\gamma\alpha\bar{f}_{\max}\sqrt{\mathcal{L}( \bm{\theta}^{(0)})-\mathcal{L}^{\star}}\sum_{s=0}^{t-1}\left(\sqrt{1-\frac{ \eta\sigma}{2}}\right)^{s}\] \[\leq\frac{8\sqrt{2}\gamma\alpha\bar{f}_{\max}}{\sigma}\sqrt{ \mathcal{L}(\bm{\theta}^{(0)})-\mathcal{L}^{\star}},\] (47)

where the second inequality follows from Lemma 7 (cf. (42)) and the third inequality follows from the inductive hypothesis and the fact that \(\ell(\bm{\xi}^{(s)})=\mathcal{L}(\bm{\theta}^{(s)})\), \(\forall s\). Combining (47) with (46), we have

\[\left\|\bm{B}_{k}^{(t)}-\bm{B}_{k}^{(0)}\right\|_{F} \leq 2\left\|\bar{\bm{Z}}\right\|_{2}\sqrt{\sum_{h=1}^{H}\left\| \bm{Q}_{h}^{(t)}-\bm{Q}_{h}^{(0)}\right\|_{F}^{2}}\] \[\leq\left\|\bar{\bm{Z}}\right\|_{2}\sqrt{H}\frac{16\sqrt{2}\gamma \alpha\bar{f}_{\max}}{\sigma}\sqrt{\mathcal{L}(\bm{\theta}^{(0)})-\mathcal{L} ^{\star}}\] \[\leq\left(1-1/\sqrt{2}\right)\sqrt{\zeta_{0}},\] (48)

where the last inequality follows from (15). The above inequality (48) indicates that

\[\forall\bm{x}\in\mathbb{R}^{K}:\quad\left\|\bm{x}^{\top}\bm{B}_{k}^{(t)} \right\|_{2}\geq\left\|\bm{x}^{\top}\bm{B}_{k}^{(0)}\right\|_{2}-\left\|\bm{x }^{\top}(\bm{B}_{k}^{(t)}-\bm{B}_{k}^{(0)})\right\|_{2}\geq\sqrt{\zeta_{0}/2},\]

which gives (43b).

Therefore, we obtain the following PL condition:

\[\left\|\nabla_{\bm{\theta}}\ell(\bm{\xi}^{(t)})\right\|_{F}^{2} \geq\sum_{k=1}^{K}\sum_{h=1}^{H}\left(\frac{\partial\ell(\bm{\xi} )}{\partial\alpha_{h,k}}\right)^{2}=\frac{\gamma^{2}}{K^{2}}\sum_{k=1}^{K} \left(\bar{\bm{Z}}\bm{\delta}_{k}^{(t)}\right)^{\top}\bm{B}_{k}^{(t)}\bm{B}_{k }^{(t)\top}\bar{\bm{Z}}\bm{\delta}_{k}^{(t)}\] \[\geq\frac{\zeta_{0}\gamma^{2}}{2K^{2}}\sum_{k=1}^{K}\left\|\bar{ \bm{Z}}\bm{\delta}_{k}^{(t)}\right\|_{2}^{2}=\sigma\left(\ell(\bm{\xi}^{(t)})- \mathcal{L}^{\star}\right),\] (49)

where the equality comes from (45), and the last equality follows from (36).

Step 2: verify the smoothness of the loss function.We first give the following lemma that bounds the Lipschitzness of \(\bm{b}_{k}^{h}\) and \(\bm{\delta}_{k}^{\theta}\), which will be used later on. For notation simplicity, we let \(\bm{B},\bm{Q},\bm{\alpha}\) denote \(\bm{B}(\bm{\theta}),\bm{Q}(\bm{\theta}),\bm{\alpha}(\bm{\theta})\), respectively, and let \(\bm{B}^{\prime},\bm{Q}^{\prime},\bm{\alpha}^{\prime}\) denote \(\bm{B}(\bm{\theta}^{\prime}),\bm{Q}(\bm{\theta}^{\prime}),\bm{\alpha}(\bm{ \theta}^{\prime})\), respectively.

**Lemma 8** (Lipschitzness of \(\bm{b}_{k}^{h}\) and \(\bm{\delta}_{k}^{\theta}\)).: _For all \(k\in[K]\) and \(h\in[H]\), and all transformer parameters \(\bm{\theta},\bm{\theta}^{\prime}\), if \(\max\{|\alpha_{h,k}|,|\alpha^{\prime}_{h,k}|\}\leq\alpha\), then we have_

\[\left\|\bm{b}_{k}^{h}(\bm{\theta})-\bm{b}_{k}^{h}(\bm{\theta}^{ \prime})\right\|_{2} \leq 2\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{Q}_{h}-\bm{Q}_{h}^{ \prime}\right\|_{F},\] (50) \[\left\|\bm{\delta}_{k}^{\theta}-\bm{\delta}_{k}^{\theta^{\prime}} \right\|_{2} \leq 2\gamma\sqrt{H}\alpha\sqrt{\sum_{h=1}^{H}\left\|\bm{Q}_{h}- \bm{Q}_{h}^{\prime}\right\|_{F}^{2}+\gamma\sqrt{H}\left\|\bm{\alpha}_{k}-\bm{ \alpha}_{k}^{\prime}\right\|_{2}}\,.\] (51)

Proof.: (50) follows from a similar argument in (46). Regarding the Lipschitzness of \(\bm{\delta}_{k}^{\theta}\), we have

\[\left\|\bm{\delta}_{k}^{\theta}-\bm{\delta}_{k}^{\theta^{\prime}} \right\|_{2} =\gamma\left\|\sum_{h=1}^{H}\alpha_{h,k}(\bm{s}_{k}^{h}(\bm{ \theta})-\bm{s}_{k}^{h}(\bm{\theta}^{\prime}))+\sum_{h=1}^{H}(\alpha_{h,k}- \alpha_{h,k}^{\prime})\bm{s}_{k}^{h}(\bm{\theta}^{\prime})\right\|_{2}\] \[\leq\gamma\sum_{h=1}^{H}\left|\alpha_{h,k}\right|\left\|\bm{s}_{k}^ {h}(\bm{\theta})-\bm{s}_{k}^{h}(\bm{\theta}^{\prime})\right\|_{2}+\gamma\sum_{h=1 }^{H}\left|\alpha_{h,k}-\alpha_{h,k}^{\prime}\right|\left\|\bm{s}_{k}^{h}(\bm{ \theta}^{\prime})\right\|_{2}\] \[\leq 2\gamma\sqrt{H}\alpha\sqrt{\sum_{h=1}^{H}\left\|\bm{Q}_{h}- \bm{Q}_{h}^{\prime}\right\|_{F}^{2}+\gamma\sqrt{H}\left\|\bm{\alpha}_{k}-\bm{ \alpha}_{k}^{\prime}\right\|_{2}}\,,\]where we use (46) again to bound the first term in the second line, and use the fact that \(\left\|\bm{s}_{k}^{h}(\bm{\theta}^{\prime})\right\|_{2}\leq 1\) and Cauchy-Schwarz inequality to bound the second term in the second line. 

We also need the following lemma which bounds the norm of \(\bm{B}_{k}\) and \(\bm{\delta}_{k}^{\theta}\).

**Lemma 9** (Upper bounds of \(\bm{b}_{k}^{h}\) and \(\bm{\delta}_{k}^{\theta}\)).: _For all \(k\in[K]\) and \(h\in[H]\), if \(\max\{|\alpha_{h,k}|,|\alpha_{h,k}^{\prime}|\}\leq\alpha\), then we have_

\[\left\|\bm{b}_{k}^{h}\right\|_{2} \leq\left\|\bar{\bm{Z}}\right\|_{2},\] (52) \[\left\|\bm{\delta}_{k}^{\theta}\right\|_{2} \leq\gamma H\alpha+\left\|\bm{A}\right\|_{2},\] (53)

_where \(\bm{A}\) is defined in (34)._

Proof.: (52) follows from

(53) follows from

\[\left\|\bm{\delta}_{k}^{\theta}\right\|_{2}\leq\gamma\sum_{h=1}^{H}|\alpha_{h,k}|\left\|\bm{s}_{k}^{h}\right\|_{2}+\left\|\bm{A}\bm{e}_{k}\right\|_{2}\leq \gamma H\alpha+\left\|\bm{A}\right\|_{2}.\]

As a consequence of Lemma 8 and Lemma 9, For all \(k\in[K]\), and all transformer parameters \(\bm{\theta},\bm{\theta}^{\prime}\), if \(\max\{|\alpha_{h,k}|,|\alpha_{h,k}^{\prime}|\}\leq\alpha\), we have

\[\left\|\nabla_{\bm{\alpha}_{k}}\ell(\bm{\xi})-\nabla_{\bm{\alpha }_{k}}\ell(\bm{\xi}^{\prime})\right\|_{2}\] \[\overset{\eqref{eq:c_k_1}}{=}\frac{\gamma}{K}\left\|(\bm{B}_{k}- \bm{B}_{k}^{\prime})^{\top}\bar{\bm{Z}}\bm{\delta}_{k}^{\theta}+\bm{B}_{k}^{ \prime}{}^{\top}\bar{\bm{Z}}(\bm{\delta}_{k}^{\theta}-\bm{\delta}_{k}^{\theta ^{\prime}})\right\|_{2}\] \[\leq\frac{\gamma}{K}\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{B}_ {k}-\bm{B}_{k}^{\prime}\right\|_{F}\left\|\bm{\delta}_{k}^{\theta}\right\|_{2} +\frac{\gamma}{K}\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{B}_{k}^{\prime} \right\|_{F}\left\|\bm{\delta}_{k}^{\theta}-\bm{\delta}_{k}^{\theta^{\prime} }\right\|_{2}\] \[\leq\frac{\gamma}{K}\cdot 2\left\|\bar{\bm{Z}}\right\|_{2}^{2} \left(2\gamma H\alpha+\left\|\bm{A}\right\|_{2}\right)\sqrt{\sum_{h=1}^{H} \left\|\bm{Q}_{h}-\bm{Q}_{h}^{\prime}\right\|_{F}^{2}+\frac{\gamma^{2}}{K}H \left\|\bar{\bm{Z}}\right\|_{2}^{2}\left\|\bm{\alpha}_{k}-\bm{\alpha}_{k}^{ \prime}\right\|_{2}}\,,\] (54)

from which we obtain the smoothness of the \(\ell\) w.r.t. \(\bm{\alpha}\) as follows:

\[\left\|\nabla_{\bm{\alpha}}\ell(\bm{\xi})-\nabla_{\bm{\alpha}} \ell(\bm{\xi}^{\prime})\right\|_{F}^{2}\] \[=\sum_{k=1}^{K}\left\|\nabla_{\bm{\alpha}_{k}}\ell(\bm{\xi})- \nabla_{\bm{\alpha}_{k}}\ell(\bm{\xi}^{\prime})\right\|_{2}^{2}\] \[\leq 2\left(\frac{\gamma}{K}\cdot 2\left\|\bar{\bm{Z}}\right\|_{2}^ {2}\left(2\gamma H\alpha+\left\|\bm{A}\right\|_{2}\right)\right)^{2}\sum_{h=1} ^{H}\left\|\bm{Q}_{h}-\bm{Q}_{h}^{\prime}\right\|_{F}^{2}+2\frac{\gamma^{4}}{ K^{2}}H^{2}\left\|\bar{\bm{Z}}\right\|_{2}^{4}\left\|\bm{\alpha}-\bm{\alpha}^{ \prime}\right\|_{F}^{2}\] \[\leq 2\left(\frac{1}{K}\left(2\gamma\left\|\bar{\bm{Z}}\right\|_{2} ^{2}\left(2\gamma H\alpha+\left\|\bm{A}\right\|_{2}\right)\right)^{2}+\frac{ \gamma^{4}}{K^{2}}H^{2}\left\|\bar{\bm{Z}}\right\|_{2}^{4}\right)\left\|\bm{\xi}- \bm{\xi}^{\prime}\right\|_{2}^{2},\] (55)

where the first inequality uses Young's inequality (c.f. Lemma 3).

To obtain the smoothness of the loss function w.r.t. \(\bm{Q}_{h}\), we first note that by (82) we have

\[\frac{\partial\ell(\bm{\xi})}{\partial\bm{Q}_{h}}=\frac{\gamma}{K}\sum_{k=1}^{ K}\sum_{j=1}^{N}\left(\bar{\bm{Z}}\bm{\delta}_{k}^{\theta}\right)^{\top}\bm{z}_{j} \cdot\alpha_{h,k}s_{jk}^{h}\sum_{i=1}^{N}s_{ik}^{h}(\bm{v}_{j}-\bm{v}_{i})\bm{ v}_{k}^{\top}.\] (56)Therefore, if \(\max\{\left|\alpha_{h,k}\right|,\left|\alpha_{h,k}^{\prime}\right|\}\leq\alpha\), we have

\[\left\|\frac{\partial\ell(\bm{\xi})}{\partial\bm{Q}_{h}}-\frac{ \partial\ell(\bm{\xi}^{\prime})}{\partial\bm{Q}_{h}}\right\|_{F} \leq\frac{2\gamma\bar{f}_{\max}}{K}\sum_{k=1}^{K}\bigg{\{}\sum_{j=1} ^{N}\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{\theta}_{k}^{\theta}-\bm{\delta} _{k}^{\theta^{\prime}}\right\|_{2}\cdot\alpha s_{jk}^{h}(\bm{\theta})\sum_{i=1 }^{N}s_{ik}^{h}(\bm{\theta})\] \[\quad+\sum_{j=1}^{N}\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{ \delta}_{k}^{\theta^{\prime}}\right\|_{2}\left|\alpha_{h,k}-\alpha_{h,k}^{ \prime}|s_{jk}^{h}(\bm{\theta})\sum_{i=1}^{N}s_{ik}^{h}(\bm{\theta})\] \[\quad+\sum_{j=1}^{N}\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{ \delta}_{k}^{\theta^{\prime}}\right\|_{2}\alpha|s_{jk}^{h}(\bm{\theta})-s_{ jk}^{h}(\bm{\theta}^{\prime})|\sum_{i=1}^{N}s_{ik}^{h}(\bm{\theta})\] \[\quad+\sum_{j=1}^{N}\left\|\bar{\bm{Z}}\right\|_{2}\left\|\bm{ \delta}_{k}^{\theta^{\prime}}\right\|_{2}\alpha s_{jk}^{h}(\bm{\theta}^{ \prime})\sum_{i=1}^{N}|s_{ik}^{h}(\bm{\theta})-s_{ik}^{h}(\bm{\theta}^{\prime })|\bigg{\}}\] \[\leq\frac{2\gamma\bar{f}_{\max}\left\|\bar{\bm{Z}}\right\|_{2}}{K }\sum_{k=1}^{K}\bigg{\{}\left\|\bm{\delta}_{k}^{\theta}-\bm{\delta}_{k}^{ \theta^{\prime}}\right\|_{2}\alpha+\left\|\bm{\delta}_{k}^{\theta^{\prime}} \right\|_{2}\left|\alpha_{h,k}-\alpha_{h,k}^{\prime}\right|\] \[\quad+\left\|\bm{\delta}_{k}^{\theta^{\prime}}\right\|_{2}\alpha \sqrt{N}\left\|\bm{s}_{k}^{h}(\bm{\theta})-\bm{s}_{k}^{h}(\bm{\theta}^{\prime })\right\|_{2}\bigg{\}},\] (57)

where the third inequality uses Cauchy-Schwarz inequality. Combining the above inequality (57) with Lemma 8 and Lemma 9, we have

\[\left\|\frac{\partial\ell(\bm{\xi})}{\partial\bm{Q}_{h}}-\frac{ \partial\ell(\bm{\xi}^{\prime})}{\partial\bm{Q}_{h}}\right\|_{F} \leq\frac{2\gamma\bar{f}_{\max}\left\|\bar{\bm{Z}}\right\|_{2}}{K} \bigg{\{}\alpha\gamma\sqrt{H}\left(2K\alpha\sqrt{\sum_{h=1}^{H}\left\|\bm{Q}_{ h}-\bm{Q}_{h}^{\prime}\right\|_{F}^{2}}+\sqrt{K}\left\|\bm{\alpha}-\bm{\alpha}^{ \prime}\right\|_{F}\right)\] \[\quad+\left(\gamma H\alpha+\left\|\bm{A}\right\|_{2}\right)\sqrt{ K}\left\|\bm{\alpha}_{h,:}-\bm{\alpha}_{h,:}^{\prime}\right\|_{2}\] \[\quad+\left(\gamma H\alpha+\left\|\bm{A}\right\|_{2}\right)\cdot 2 \alpha\sqrt{N}\cdot 2K\left\|\bm{Q}_{h}^{\prime}-\bm{Q}_{h}\right\|_{F}\bigg{\}},\] (58)

where the last line uses (46) to bound \(\left\|\bm{s}_{k}^{h}(\bm{\theta})-\bm{s}_{k}^{h}(\bm{\theta}^{\prime})\right\| _{2}\). The above inequality (58) further gives

\[\sum_{h=1}^{H}\left\|\nabla_{\bm{Q}_{h}}\ell(\bm{\xi})-\nabla_{\bm {Q}_{h}}\ell(\bm{\xi}^{\prime})\right\|_{F}^{2}\] \[\leq 8\cdot\frac{\gamma\bar{f}_{\max}\left\|\bar{\bm{Z}}\right\|_{2}} {K}\bigg{\{}(2K\alpha)^{2}\left[(\alpha\gamma H)^{2}+4N\left(\alpha\gamma H+ \left\|\bm{A}\right\|_{2})^{2}\right]\sum_{h=1}^{H}\left\|\bm{Q}_{h}-\bm{Q}_{h }^{\prime}\right\|_{F}^{2}\] \[\quad+K\left[(\alpha\gamma H)^{2}+(\alpha\gamma H+\left\|\bm{A }\right\|_{2})^{2}\right]\left\|\bm{\alpha}-\bm{\alpha}^{\prime}\right\|_{F}^{2} \bigg{\}}\] \[\leq 8\gamma\bar{f}_{\max}\left\|\bar{\bm{Z}}\right\|_{2}\cdot\max \left\{1,(2\sqrt{K}\alpha)^{2}\right\}\left[(\alpha\gamma H)^{2}+4N\left( \alpha\gamma H+\left\|\bm{A}\right\|_{2})^{2}\right]\left\|\bm{\xi}^{\prime}- \bm{\xi}\right\|_{2}^{2},\] (59)

where the first inequality makes use of Young's inequality (c.f. Lemma 3).

Combining the above two relations (55) and (59), we obtain the smoothness of \(\ell\) w.r.t. \(\bm{\xi}\) as follows:

**Lemma 10** (Smoothness of the loss function).: _Let \(\gamma\coloneqq\sqrt{\eta_{w}/\eta_{Q}}\). For all transformer parameters \(\bm{\xi},\bm{\xi}^{\prime}\), if \(\max\{\left|\alpha_{h,k}\right|,\left|\alpha_{h,k}^{\prime}\right|\}\leq\alpha\), then we have_

\[\left\|\nabla_{\bm{\xi}}\ell(\bm{\xi})-\nabla_{\bm{\xi}}\ell(\bm{\xi}^{\prime}) \right\|_{2}\leq L\left\|\bm{\xi}-\bm{\xi}^{\prime}\right\|_{2},\] (60)

_where_

\[L^{2} =2\left(\frac{1}{K}\left(2\gamma\left\|\bar{\bm{Z}}\right\|_{2}^{2} \left(2\gamma H\alpha+\left\|\bm{A}\right\|_{2}\right)\right)^{2}+\frac{\gamma^ {4}}{K^{2}}H^{2}\left\|\bar{\bm{Z}}\right\|_{2}^{4}\right)\] (61) \[\quad+8\gamma\bar{f}_{\max}\left\|\bar{\bm{Z}}\right\|_{2}\cdot\max \left\{1,(2\sqrt{K}\alpha)^{2}\right\}\left[(\alpha\gamma H)^{2}+4N\left( \alpha\gamma H+\left\|\bm{A}\right\|_{2})^{2}\right].\]

[MISSING_PAGE_FAIL:21]

Proof of Theorem 2

By (43c) we know that \(\mathcal{L}(\bm{\theta}^{(t)})\to\mathcal{L}^{\star}\) as \(t\to\infty\). Thus from (36) we know that (37) and (38) hold.

By Sherman-Morrison-Woodbury formula, we have

\[\left(m\tau\bm{I}_{N}+\bm{Z}^{\top}\bm{Z}\right)^{-1}=\frac{1}{m\tau}\bm{I}_{N} -\frac{1}{m\tau}\bm{Z}^{\top}\left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^{\top}\right)^ {-1}\bm{Z}.\] (65)

Thus we have

\[\bm{A} \stackrel{{\eqref{eq:2010}}}{{=}}\left(\bm{Z}^{ \top}\bm{Z}+m\tau\bm{I}_{N}\right)^{-1}\left(\bm{Z}^{\top}\widehat{\bm{Z}}+(m \tau\bm{I}_{N},\bm{0})\right)\] \[\stackrel{{\eqref{eq:2010}}}{{=}}\frac{1}{m\tau} \left(\bm{I}_{N}-\bm{Z}^{\top}\left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^{\top}\right) ^{-1}\bm{Z}\right)\left(\bm{Z}^{\top}\widehat{\bm{Z}}+(m\tau\bm{I}_{N},\bm{0})\right)\] \[=\frac{1}{m\tau}\bigg{[}\bm{Z}^{\top}\widetilde{\bm{Z}}+(m\tau\bm{ I}_{N},\bm{0})-\bm{Z}^{\top}\left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^{\top}\right)^{-1} \left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^{\top}\right)\widetilde{\bm{Z}}\] \[\quad+m\tau\bm{Z}^{\top}\left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^{\top} \right)^{-1}\widetilde{\bm{Z}}-m\tau\bm{Z}^{\top}\left(m\tau\bm{I}_{m}+\bm{Z} \bm{Z}^{\top}\right)^{-1}\left(\bm{Z},\bm{0}\right)\bigg{]}\] \[=\left(\bm{I}_{N},\bm{0}\right)+\bm{Z}^{\top}\left(m\tau\bm{I}_{m }+\bm{Z}\bm{Z}^{\top}\right)^{-1}(\bm{0},\bm{Z}^{Q})\] \[=\left(\bm{I}_{N},\bm{Z}^{\top}\left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^ {\top}\right)^{-1}\bm{Z}^{Q}\right),\] (66)

where \(\bm{Z}^{Q}\) is defined in (19).

On the other hand, it's straightforward to verify that \(\widehat{\bm{\lambda}}\) defined in (20) admits the following closed form:

\[\widehat{\bm{\lambda}}=\left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^{\top}\right)^{-1} \bm{Z}\bm{y}.\] (67)

Combining the above two equations, we obtain

\[\bm{A}^{\top}\bm{y}=\left(\begin{pmatrix}\bm{y}&\\ \left(\bm{Z}^{Q}\right)^{\top}\left(m\tau\bm{I}_{m}+\bm{Z}\bm{Z}^{\top}\right) ^{-1}\bm{Z}\bm{y}\end{pmatrix}=\begin{pmatrix}\bm{y}&\\ \left(\bm{Z}^{Q}\right)^{\top}\widehat{\bm{\lambda}}\end{pmatrix}=\widehat{ \bm{y}}^{\star},\]

where the last equality follows from (22).

Now we give the iteration complexity for the mean-squared error between the prediction \(\widehat{\bm{y}}\) and the limit point \(\widehat{\bm{y}}^{\star}\) to be less than \(\varepsilon\). Given any prompt \(P=P_{\bm{\lambda}}\), where \(\bm{\lambda}\) satisfies Assumption 4, we have

\[y_{i}=\bm{\lambda}^{\top}(\bm{z}_{i}+\bm{\epsilon}_{i})\sim\mathcal{N}(\bm{ \lambda}^{\top}\bm{z}_{i},\left\|\bm{\lambda}\right\|_{2}^{2}\tau).\]

Letting \(x_{i}=\frac{y_{i}-\bm{\lambda}^{\top}\bm{z}_{i}}{\left\|\bm{\lambda}\right\|_ {2}\sqrt{\tau}}\), we have \(x_{i}\sim\mathcal{N}(0,1)\). Define

\[Z=\sum_{i=1}^{N}\left\|\bm{\lambda}\right\|_{2}^{2}\tau(x_{i}^{2}-1)=\left\| \bm{y}-\bm{Z}^{\top}\bm{\lambda}\right\|_{2}^{2}-N\tau\left\|\bm{\lambda} \right\|_{2}^{2}.\]

By Laurent and Massart (2000, Lemma 1), we have

\[\forall s>0:\quad\mathbb{P}\left(Z\geq 2\sqrt{N}\left\|\bm{\lambda}\right\|_{2}^ {2}\tau\sqrt{s}+2\left\|\bm{\lambda}\right\|_{2}^{2}\tau s\right)\leq\exp \left(-s\right).\]

By letting \(s=\log(1/\delta)\) and using the definition of \(Z\), we have

\[\mathbb{P}\left(\left\|\bm{y}-\bm{Z}^{\top}\bm{\lambda}\right\|_{2}^{2}\geq N \tau\left\|\bm{\lambda}\right\|_{2}^{2}+2\sqrt{N\log(1/\delta)}\left\|\bm{ \lambda}\right\|_{2}^{2}\tau+2\left\|\bm{\lambda}\right\|_{2}^{2}\tau\log(1/ \delta)\right)\leq\delta.\] (68)

Thus with probability at least \(1-\delta\), we have

\[\left\|\bm{y}\right\|_{2} \leq\left\|\bm{Z}^{\top}\bm{\lambda}\right\|_{2}+\left\|\bm{y}-\bm {Z}^{\top}\bm{\lambda}\right\|_{2}\] \[\leq\left\|\bm{Z}^{\top}\bm{\lambda}\right\|_{2}+\left\|\bm{\lambda} \right\|_{2}\sqrt{\tau}\left(N+2\sqrt{N\log(1/\delta)}+2\log(1/\delta)\right)^{1/2}\] \[\leq B\left(\left\|\bm{Z}\right\|_{2}+\sqrt{\tau}\left(N+2\sqrt{N \log(1/\delta)}+2\log(1/\delta)\right)^{1/2}\right).\] (69)where we use (68) in the second inequality, and the third inequality follows from Assumption 4.

On the other hand, by (36) we have

which gives

(70)

Thus we know that w.p. at least, we have

where the last relation follows from (69), (70) and (21).

## Appendix E Proof of Key Lemmas

### Proof of Proposition 1

For notation simplicity we drop the superscript in the subsequent proof.

Let. Note that

(71)

This suggests the column vectors of are i.i.d. and the density of each column vector is positive at any point, where is the row space of.

Since has full rank, to prove has full rank a.s., we only need to argue that rank w.p. 1. Below we prove this by contradiction (recall that by definition, and we assume ).

Suppose w.p. larger than, there exists one of, and we linearly represented by its other column vectors. Without loss of generality, we assume this column vector is. Let. Then could be linearly represented by,, and.

Let, where is the column vector space of. i.e., we have

which further indicates that there exists such that. Since the dimension of is at most, there exists such that. Therefore, we have

(72)

By Assumption 3, without loss of generality, we assume that has different entries. For any vector, we let denote the vector formed by deleting the first entry of. Let by, the function defined by

has finite zero points and thus is a zero-measure set. Therefore, we have

which contradicts (72). Therefore, has full rank with probability 1.

### Proof of Lemma 4

Lemma 4 can be verified by the following direct computation (recall that the noise in each label satisfies \(\bm{\epsilon}_{i}\overset{i.i.d.}{\sim}\mathcal{N}(0,\tau\bm{I}_{m}),\forall i\in[N]\)):

\[\mathbb{E}_{\bm{\epsilon}}\left[\frac{1}{2N}\sum_{i=1}^{N}(y_{i}- \bm{\lambda}^{\top}\left(f(\bm{v}_{i})+\bm{\epsilon}_{i}\right))^{2}\right]\] \[=\mathbb{E}_{\bm{\epsilon}}\left[\frac{1}{2N}\sum_{i=1}^{N}\left( (y_{i}-\bm{\lambda}^{\top}f(\bm{v}_{i}))^{2}-2\bm{\lambda}^{\top}\bm{\epsilon }_{i}(y_{i}-\bm{\lambda}^{\top}f(\bm{v}_{i}))+\bm{\lambda}^{\top}\bm{\epsilon}_ {i}\bm{\epsilon}_{i}^{\top}\bm{\lambda}\right)\right]\] \[=\frac{1}{2N}\sum_{i=1}^{N}\left((y_{i}-\bm{\lambda}^{\top}f(\bm {v}_{i}))^{2}+\tau\left\|\bm{\lambda}\right\|_{2}^{2}\right)\] \[=\frac{1}{2N}\sum_{i=1}^{N}(y_{i}-\bm{\lambda}^{\top}f(\bm{v}_{i }))^{2}+\frac{\tau}{2}\left\|\bm{\lambda}\right\|_{2}^{2}.\]

### Proof of Lemma 5

We let \(\bm{\epsilon}^{P}\coloneqq(\bm{\epsilon}_{1},\cdots,\bm{\epsilon}_{N})\in \mathbb{R}^{m\times N}\), \(\bm{\epsilon}\coloneqq(\bm{\epsilon}_{1},\cdots,\bm{\epsilon}_{K})\in\mathbb{ R}^{m\times K}\). Recall that \(\bm{y}=(y_{1},\cdots,y_{N})^{\top}\in\mathbb{R}^{N}\). Then we have

\[\bm{y}=(\bm{Z}+\bm{\epsilon}^{P})^{\top}\bm{\lambda},\] (73)

and

\[\mathcal{L}(\bm{\theta}) =\frac{1}{K}\sum_{k=1}^{K}\mathcal{L}_{k}(\bm{\theta})=\frac{1}{2 }\mathbb{E}_{\bm{\lambda},\bm{\epsilon}}\left[\frac{1}{K}\sum_{k=1}^{K}\left( \widehat{y}_{k}-y_{k}\right)^{2}\right]\] (74) \[=\frac{1}{2K}\sum_{k=1}^{K}\mathbb{E}_{\bm{\lambda},\bm{\epsilon }}\left\|\bm{y}^{\top}\widehat{\bm{a}}_{k}-\bm{\lambda}^{\top}(\bm{z}_{k}+\bm {\epsilon}_{k})\right\|_{2}^{2}\] \[=\frac{1}{2K}\sum_{k=1}^{K}\mathbb{E}_{\bm{\lambda},\bm{\epsilon }}\left[(\bm{Z}+\bm{\epsilon}^{P})\widehat{\bm{a}}_{k}-(\bm{z}_{k}+\bm{ \epsilon}_{k})\right]^{2}_{2}\] \[=\frac{1}{2K}\sum_{k=1}^{K}\mathbb{E}_{\bm{\lambda},\bm{\epsilon }}\left[(\bm{Z}+\bm{\epsilon}^{P})\widehat{\bm{a}}_{k}-(\bm{z}_{k}+\bm{ \epsilon}_{k})\right]^{\top}\bm{\lambda}\bm{\lambda}^{\top}\left[(\bm{Z}+\bm{ \epsilon}^{P})\widehat{\bm{a}}_{k}-(\bm{z}_{k}+\bm{\epsilon}_{k})\right]\] \[=\frac{1}{2K}\sum_{k=1}^{K}\mathbb{E}_{\bm{\epsilon}}\left[(\bm{Z }+\bm{\epsilon}^{P})\widehat{\bm{a}}_{k}-(\bm{z}_{k}+\bm{\epsilon}_{k}) \right]^{\top}\left[(\bm{Z}+\bm{\epsilon}^{P})\widehat{\bm{a}}_{k}-(\bm{z}_{ k}+\bm{\epsilon}_{k})\right]\] \[=\frac{1}{2K}\sum_{k=1}^{K}\mathbb{E}_{\bm{\epsilon}}\left[\left\| \bm{Z}\widehat{\bm{a}}_{k}-\bm{z}_{k}\right\|_{2}^{2}+2(\bm{Z}\widehat{\bm{a} }_{k}-\bm{z}_{k})^{\top}(\bm{\epsilon}^{P}\widehat{\bm{a}}_{k}-\bm{\epsilon}_ {k})+\left\|\bm{\epsilon}^{P}\widehat{\bm{a}}_{k}-\bm{\epsilon}_{k}\right\|_{2 }^{2}\right],\] (75)

where \(\widehat{\bm{a}}_{k}\) denote the \(k\)-th column vector of matrix \(\widehat{\bm{A}}(\bm{\theta})\) defined in (35), and the fifth line uses Assumption 1.

Note that for all \(k\in[K]\), we have

\[\mathbb{E}_{\bm{\epsilon}}(\bm{Z}\widehat{\bm{a}}_{k}-\bm{z}_{k})^{\top}(\bm{ \epsilon}^{P}\widehat{\bm{a}}_{k}-\bm{\epsilon}_{k})=0,\] (76)

and that

\[\mathbb{E}_{\bm{\epsilon}}\left\|\bm{\epsilon}^{P}\widehat{\bm{a}}_{k}-\bm{ \epsilon}_{k}\right\|_{2}^{2}=m\tau\left(\left\|\widehat{\bm{a}}_{k}\right\|_{2 }^{2}+1\right)-2m\tau\widehat{\bm{a}}_{kk}\mathds{1}\left\{k\in[N]\right\},\] (77)

where \(\mathds{1}\left\{k\in[N]\right\}\) is the indicator function that equals 1 if \(k\in[N]\) and 0 otherwise, and we have made use of the assumption that \(\bm{\epsilon}_{k}\overset{i.i.d.}{\sim}\mathcal{N}(0,\tau^{2}\bm{I}_{m})\).

Combining the above two equations with (75), we know that for \(k\in[N]\), it holds that

\[\mathcal{L}_{k}(\bm{\theta})=\frac{1}{2}\left(\left\|\bm{Z}\widehat{\bm{a}}_{k}- \bm{z}_{k}\right\|_{2}^{2}+m\tau\left\|\widehat{\bm{a}}_{k}-\bm{e}_{k}\right\|_{2 }^{2}\right).\]Reorganizing the terms in the RHS of the above equation, we obtain that

\[\mathcal{L}_{k}(\bm{\theta})=\frac{1}{2}\left\|\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{ I}\right)^{1/2}\left(\widehat{\bm{a}}_{k}-\left(\bm{Z}^{\top}\bm{Z}+m\tau\bm{I} \right)^{-1}\left(\bm{Z}^{\top}\bm{z}_{k}+m\tau\bm{e}_{k}\right)\right)\right\| _{2}^{2}+\frac{1}{2}c_{k},\] (78)

where \(c_{k}=-\left(\bm{Z}^{\top}\bm{z}_{k}+m\tau\bm{e}_{k}\right)^{\top}\left(\bm{Z} ^{\top}\bm{Z}+m\tau\bm{I}\right)^{-1}\left(\bm{Z}^{\top}\bm{z}_{k}+m\tau\bm{e }_{k}\right)+\left\|\bm{z}_{k}\right\|_{2}^{2}+m\tau\).

By a similar argument, we can show that for \(k\in[K]\backslash[N]\), it holds that

\[\mathcal{L}_{k}(\bm{\theta})=\frac{1}{2}\left\|\left(\bm{Z}^{\top}\bm{Z}+m \tau\bm{I}\right)^{1/2}\left(\widehat{\bm{a}}_{k}-\left(\bm{Z}^{\top}\bm{Z}+m \tau\bm{I}\right)^{-1}\bm{Z}^{\top}\bm{z}_{k}\right)\right\|_{2}^{2}+\frac{1} {2}c_{k}^{\prime},\] (79)

where \(c_{k}^{\prime}=-\left(\bm{Z}^{\top}\bm{z}_{k}\right)^{\top}\left(\bm{Z}^{\top }\bm{Z}+m\tau\bm{I}\right)^{-1}\left(\bm{Z}^{\top}\bm{z}_{k}\right)+\left\|\bm{ z}_{k}\right\|_{2}^{2}\).

(78), (79) together with (33) and the definition of \(\mathcal{L}^{*}\) give (36).

### Proof of Lemma 6

First, it holds that

\[\bm{Q}_{h}^{(t)}=\bm{Q}_{h}^{(t-1)}-\eta_{Q}\nabla_{\bm{Q}_{h}}\ell(\bm{\xi}^ {(t-1)})=\bm{Q}_{h}^{(t-1)}-\eta_{Q}\nabla_{\bm{Q}_{h}}\ell(\bm{\xi}^{(t-1)}).\] (80)

Second, note that

\[\bm{w}_{h}^{(t)} =\bm{w}_{h}^{(t-1)}-\eta_{w}\nabla_{\bm{w}_{h}}\mathcal{L}(\bm{ \theta}^{(t-1)})\] \[=\gamma\bm{\alpha}_{h}^{(t-1)}-\gamma^{2}\cdot\frac{1}{\gamma} \eta_{Q}\nabla_{\bm{\alpha}_{h}}\ell(\bm{\xi}^{(t-1)})\] \[=\gamma\left(\bm{\alpha}_{h}^{(t-1)}-\eta_{Q}\nabla_{\bm{\alpha}_ {h}}\ell(\bm{\xi}^{(t-1)})\right).\]

Dividing both sides of the above equality by \(\gamma\), we have

\[\bm{\alpha}_{h}^{(t)}=\bm{\alpha}_{h}^{(t-1)}-\eta_{Q}\nabla_{\bm{\alpha}_{h} }\ell(\bm{\xi}^{(t-1)}).\] (81)

Hence, (41) follows from combining (80) and (81).

### Proof of Lemma 7

Throughout this proof, we omit the superscript \((t)\) for simplicity. We first compute the gradient of \(\mathcal{L}\) w.r.t. \(\bm{Q}_{h}\). By (36) we know that

\[\ell(\bm{\xi})=\mathcal{L}(\bm{\theta})=\frac{1}{2K}\sum_{k=1}^{K}\left\|\bar {\bm{Z}}\delta_{k}\right\|_{2}^{2},\]

and thus we have

\[\frac{\partial\ell(\bm{\xi})}{\partial\bm{Q}_{h}} =\frac{1}{K}\sum_{k=1}^{K}\sum_{j=1}^{N}\frac{\partial}{\partial \delta_{jk}}\left[\frac{1}{2}\left\|\sum_{i=1}^{N}\delta_{ik}\bar{\bm{z}}_{i} \right\|_{2}^{2}\right]\frac{\partial\delta_{jk}}{\partial\bm{Q}_{h}}\] \[=\frac{\gamma}{K}\sum_{k=1}^{K}\sum_{j=1}^{N}\left(\bar{\bm{Z}} \delta_{k}\right)^{\top}\bar{\bm{z}}_{j}\cdot\underbrace{\alpha_{h,k}s_{jk}^{ h}\sum_{i=1}^{N}s_{ik}^{h}(\bm{v}_{j}-\bm{v}_{i})\bm{v}_{k}^{\top}}_{=:\bm{G}^{h,jk}}.\] (82)

Note that

\[\left\|\bm{G}^{h,jk}\right\|_{F}\leq 2\alpha s_{jk}^{h},\] (83)where we use the fact that \(\left\|\left(\bm{v}_{j}-\bm{v}_{i}\right)\bm{v}_{k}^{\top}\right\|_{2}\leq 2\) (recall that we assume each \(\bm{v}_{k}\) has unit norm, \(k\in[K]\).) Combining (82) and (83), we have the desired result

\[\left\|\frac{\partial\ell(\bm{\xi})}{\partial\bm{Q}_{h}}\right\|_{F}\] \[\leq\frac{2\gamma}{K}\sum_{k=1}^{K}\sum_{j=1}^{N}\left\|\bar{\bm{ Z}}\bm{\delta}_{k}\right\|_{2}\bar{f}_{\max}\alpha s_{jk}^{h}\] \[\leq\frac{2\gamma\bar{f}_{\max}\alpha}{K}\sqrt{K}\sqrt{\sum_{k=1} ^{K}\left\|\bar{\bm{Z}}\bm{\delta}_{k}\right\|_{2}^{2}}\] \[\leq 2\sqrt{2}\gamma\bar{f}_{\max}\alpha\sqrt{\ell(\bm{\xi})- \mathcal{L}^{*}},\] (84)

where \(\bar{f}_{\max}\) is defined in (12) and the third line follows from Cauchy-Schwarz inequality.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: we clearly state in the abstract and introduction the claims we made, including the contributions made in the paper and important assumptions and limitations. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: we clearly state our assumptions. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes]Justification: we provide the full set of assumptions and a complete (and correct) proof. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: see Appendix A. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?Answer: [No] Justification: The experiments are very simple and can be easily reproduced by following the instructions in the paper. Guidelines:

* The answer NA means that paper does not include experiments requiring code.
* Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).
* The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.
* The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.
* The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.
* At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).
* Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: Experiment details are included in Section A. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [No] Justification: stochasticity is not critical in our experiments. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) * The assumptions made should be given (e.g., Normally distributed errors).

* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [NA] Justification: the results are irrelevant to the compute resources. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: the research conducted in the paper conforms with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA] Justification: this is a theoretical paper and it has no societal impact. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: the paper aims to provide a better understanding on existing algorithms and thus poses no such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licensees for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [NA] Justification: the paper does not use existing assets. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset. * For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.

* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: the paper does not release new assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: the paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: the paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.