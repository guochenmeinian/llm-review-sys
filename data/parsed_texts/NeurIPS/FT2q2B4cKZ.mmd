# Markovian Sliced Wasserstein Distances: Beyond Independent Projections

Khai Nguyen

Department of Statistics and Data Sciences

The University of Texas at Austin

Austin, TX 78712

khainb@utexas.edu

&Tongzheng Ren

Department of Computer Science

The University of Texas at Austin

Austin, TX 78712

tongzheng@utexas.edu

&Nhat Ho

Department of Statistics and Data Sciences

The University of Texas at Austin

Austin, TX 78712

minhnhat@utexas.edu

###### Abstract

Sliced Wasserstein (SW) distance suffers from redundant projections due to independent uniform random projecting directions. To partially overcome the issue, max K sliced Wasserstein (Max-K-SW) distance (\(K\geq 1\)), seeks the best discriminative orthogonal projecting directions. Despite being able to reduce the number of projections, the metricity of the Max-K-SW cannot be guaranteed in practice due to the non-optimality of the optimization. Moreover, the orthogonality constraint is also computationally expensive and might not be effective. To address the problem, we introduce a new family of SW distances, named _Markovian sliced Wasserstein_ (MSW) distance, which imposes a first-order Markov structure on projecting directions. We discuss various members of the MSW by specifying the Markov structure including the prior distribution, the transition distribution, and the burning and thinning technique. Moreover, we investigate the theoretical properties of MSW including topological properties (metricity, weak convergence, and connection to other distances), statistical properties (sample complexity, and Monte Carlo estimation error), and computational properties (computational complexity and memory complexity). Finally, we compare MSW distances with previous SW variants in various applications such as gradient flows, color transfer, and deep generative modeling to demonstrate the favorable performance of the MSW1.

Footnote 1: Code for this paper is published at [https://github.com/UT-Austin-Data-Science-Group/MSW](https://github.com/UT-Austin-Data-Science-Group/MSW).

## 1 Introduction

Sliced Wasserstein (SW) [7] distance has been well-known as a great alternative statistical distance for Wasserstein distance [57, 49]. In short, SW takes the average of Wasserstein distances between corresponding pairs of one-dimensional projected measures as the distance between the two original measures. Hence, the SW has a low computational complexity compared to the conventional Wasserstein distance due to the closed-form solution of optimal transport in one dimension. When the probability measures have at most \(n\) supports, the computational complexity of the SW is only \(\mathcal{O}(n\log n)\). This complexity is much lower than the computational complexity \(\mathcal{O}(n^{3}\log n)\) of Wasserstein distance and the complexity \(\mathcal{O}(n^{2})\)[1, 34, 35, 33] of entropic Wasserstein [11] (Sinkhorndivergence). Moreover, the memory complexity of the SW is \(\mathcal{O}(n)\) which is lower than \(\mathcal{O}(n^{2})\) of the Wasserstein (Sinkhorn) distance. The reason is that SW does not need to store the cost matrix between supports which cost \(\mathcal{O}(n^{2})\). An additional appealing property of the SW is that it does not suffer from the curse of dimensionality, namely, its sample complexity is \(\mathcal{O}(n^{-1/2})\)[40, 46] compared to \(\mathcal{O}(n^{-1/d})\)[19] of the Wasserstein distance (\(d\) is the number of dimensions).

Due to the scalability, the SW has been applied to almost all applications where the Wasserstein distance is used. For example, we refer to some applications of the SW which are generative modeling [60, 15, 27, 42], domain adaptation [30], clustering [28], approximate Bayesian computation [39], gradient flows [37, 5], and variational inference [61]. Moreover, there are many attempts to improve the SW. The generalized sliced Wasserstein (GSW) distance that uses non-linear projection is proposed in [26]. Distributional sliced Wasserstein distance is proposed in [44, 45] by replacing the uniform distribution on the projecting directions in SW with an estimated distribution that puts high probabilities for discriminative directions. Spherical sliced Wasserstein which is defined between distributions that have their supports on the hyper-sphere is introduced in [4]. A sliced Wasserstein variant between probability measures over images with convolution is defined in [43].

Despite having a lot of improvements, one common property in previous variants of the SW is that they use independent projecting directions that are sampled from a distribution over a space of projecting direction e.g., the unit-hypersphere. Those projecting directions are further utilized to project two interested measures to corresponding pairs of one-dimensional measures. Due to the independence, practitioners have reported that many projections do not have the power to discriminative between two input probability measures [26, 15]. Moreover, having a lot of projections leads to redundancy and losing computation for uninformative pairs of projected measures. This problem is known as the projection complexity limitation of the SW.

To partially address the issue, the max sliced Wasserstein (Max-SW) distance is introduced in [14]. Max-SW seeks the best projecting direction that can maximize the projected Wasserstein distance. Since the Max-SW contains a constraint optimization problem, the projected subgradient ascent algorithm is performed. Since the algorithm only guarantees to obtain local maximum [46], the performance of empirical estimation Max-SW is not stable in practice [42] since the metricity of Max-SW can be only obtained at the global optimum. Another approach is to force the orthogonality between projecting directions. In particular, K-sliced Wasserstein [50] (K-SW) uses \(K>1\) orthogonal projecting directions. Moreover, to generalize the Max-SW and the K-SW, max-K sliced Wasserstein (Max-K-SW) distance (\(K>1\)) appears in [12] to find the best \(K\) projecting directions that are orthogonal to each other via the projected sub-gradient ascent algorithm. Nevertheless, the orthogonality constraint is computationally expensive and might not be good in terms of reflecting discrepancy between general measures. Moreover, Max-K-SW also suffers from the non-optimality problem which leads to losing the metricity property in practice.

To avoid the independency and to satisfy the requirement of creating informative projecting directions efficiently, we propose to impose a _sequential structure_ on projecting directions. Namely, we choose a new projecting direction based on the previously chosen directions. For having more efficiency in computation, we consider _first-order Markovian_ structure in the paper which means that a projecting direction can be sampled by using only the previous direction. For the first projecting direction, it can follow any types of distributions on the unit-hypersphere that were used in the literature e.g., uniform distribution [7] and von Mises-Fisher distribution [23, 45] to guarantee the metricity. For the transition distribution on the second projecting direction and later, we propose two types of family which are _orthogonal-based_ transition and _input-award_ transition. For the orthogonal-based transition, we choose the projecting direction uniformly on the unit hypersphere such that it is orthogonal to the previous direction. In contrast to the previous transition which does not use the information from the two input measures, the input-award transition uses the sub-gradient with respect to the previous projecting direction of the corresponding projected Wasserstein distance between the two measures to design the transition. In particular, the projected sub-gradient update is used to create the new projecting direction. Moreover, we further improve the computational time and computational memory by introducing the burning and thinning technique to reduce the number of random projecting directions.

**Contribution.** In summary, our contributions are two-fold:

1. We propose a novel family of distances on the space of probability measures, named _Markovian sliced Wasserstein_ (MSW) distances. MSW considers a first-order Markovianstructure on random projecting directions. Moreover, we derive three variants of MSW that use two different types of conditional transition distributions: _orthogonal-based_ and _input-award_. We investigate the theoretical properties of MSW including topological properties (metricity, weak convergence, and connection to other distances), statistical properties (sample complexity, and Monte Carlo estimation error), and computational properties (computational complexity and memory complexity). Moreover, we introduce a burning and thinning approach to further reduce computational and memory complexity, and we discuss the properties of the resulting distances.
2. We conduct experiments to compare MSW with SW, Max-SW, K-SW, and Max-K-SW in various applications, namely, gradient flows, color transfer, and deep generative models on standard image datasets: CIFAR10 and CelebA. We show that the input-award MSW can yield better qualitative and quantitative performance while consuming less computation than previous distances in gradient flows and color transfer, and comparable computation in deep generative modeling. Finally, we investigate the role of hyper-parameters of distances e.g., the number of projections, the number of time-steps, and so on, in applications.

**Organization.** We first provide background for Wasserstein distance, sliced Wasserstein distance, and max sliced Wasserstein distance in Section 2. In Section 3, we propose Markovian sliced Wasserstein distances and derive their theoretical properties. Section 4 contains the comparison of MSW to previous SW variants in gradient flows, color transfer, and deep generative modeling. We then conclude the paper in Section 5. Finally, we defer the proofs of key results in the paper and supplementary materials to Appendices.

**Notation.** For \(p\geq 1\), \(\mathcal{P}_{p}(\mathbb{R}^{d})\) is the set of all probability measures on \(\mathbb{R}^{d}\) that have finite \(p\)-moments. For any \(d\geq 2\), we denote \(\mathcal{U}(\mathbb{S}^{d-1})\) is the uniform measure over the unit hyper-sphere \(\mathbb{S}^{d-1}:=\{\theta\in\mathbb{R}^{d}\mid||\theta||_{2}^{2}=1\}\). For any two sequences \(a_{n}\) and \(b_{n}\), the notation \(a_{n}=\mathcal{O}(b_{n})\) means that \(a_{n}\leq Cb_{n}\) for all \(n\geq 1\), where \(C\) is some universal constant. We denote \(\theta\sharp\mu\) is the push-forward measures of \(\mu\) through the function \(f:\mathbb{R}^{d}\rightarrow\mathbb{R}\) that is \(f(x)=\theta^{\top}x\).

## 2 Background

We start with reviewing the background on Wasserstein distance, sliced Wasserstein distances, their computation techniques, and their limitations.

**Wasserstein distance.** Given two probability measures \(\mu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) and \(\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\), the Wasserstein distance [57, 48] between \(\mu\) and \(\nu\) is :

\[\text{W}_{p}^{p}(\mu,\nu)=\inf_{\pi\in\Pi(\mu,\nu)}\int_{\mathbb{R}^{d}\times \mathbb{R}^{d}}\|x-y\|_{p}^{p}d\pi(x,y), \tag{1}\]

where \(\Pi(\mu,\nu)\) is set of all couplings that have marginals are \(\mu\) and \(\nu\) respectively. The computational complexity and memory complexity of Wasserstein distance are \(\mathcal{O}(n^{3}\log n)\) and \(\mathcal{O}(n^{2})\) in turn when \(\mu\) and \(\nu\) have at most \(n\) supports. When \(d=1\), the Wasserstein distance can be computed with a closed form: \(\text{W}_{p}^{p}(\mu,\nu)=\int_{0}^{1}|F_{\mu}^{-1}(z)-F_{\nu}^{-1}(z)|^{p}dz\), where \(F_{\mu}\) and \(F_{\nu}\) are the cumulative distribution function (CDF) of \(\mu\) and \(\nu\) respectively.

**Sliced Wasserstein distance.** By randomly projecting two interested high-dimensional measures to corresponding pairs of one-dimensional measures, sliced Wasserstein (SW) distance can exploit the closed-form benefit of Wasserstein distance in one dimension. The definition of sliced Wasserstein distance [7] between two probability measures \(\mu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) and \(\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) is:

\[\text{SW}_{p}^{p}(\mu,\nu)=\mathbb{E}_{\theta\sim\mathcal{U}(\mathbb{S}^{d-1} )}\text{W}_{p}^{p}(\theta\sharp\mu,\theta\sharp\nu). \tag{2}\]

Monte Carlo samples are often used to approximate the intractable expectation unbiasedly:

\[\widehat{\text{SW}}_{p}^{p}(\mu,\nu)=\frac{1}{L}\sum_{l=1}^{L}\text{W}_{p}^{ p}(\theta_{l}\sharp\mu,\theta_{l}\sharp\nu), \tag{3}\]

where \(\theta_{1},\dots,\theta_{L}\) are drawn randomly from \(\mathcal{U}(\mathbb{S}^{d-1})\). When \(\mu\) and \(\nu\) are discrete measures that have at most \(n\) supports in \(d\) dimension, the computational complexity of SW is \(\mathcal{O}(Ln\log_{2}n+Ldn)\) and the memory complexity for storing the projecting directions and the projected supports is \(\mathcal{O}(L(d+n))\)Here, \(Ln\log_{2}n\) is for sorting \(L\) sets of projected supports and \(Ld\) is for projecting supports to \(L\) sets of scalars.

**Max sliced Wasserstein distance.** To select the best discriminative projecting direction, the max sliced Wasserstein (Max-SW) distance [14] between \(\mu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) and \(\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) is introduced as follows:

\[\text{Max-SW}_{p}(\mu,\nu)=\max_{\theta\in\mathbb{S}^{d-1}}W_{p}( \theta\sharp\mu,\theta\sharp\nu). \tag{4}\]

Computing Max-SW requires solving the constrained optimization problem. In practice, the projected sub-gradient ascent algorithm with \(T>1\) iterations is often used to obtain a surrogate projecting direction \(\hat{\theta}_{T}\) for the global optimum. Hence, the empirical Max-SW distance is \(\text{Max-SW}_{p}(\mu,\nu)=W_{p}(\hat{\theta}_{T}\sharp\mu,\hat{\theta}_{T} \sharp\nu)\). The detail of the projected sub-gradient ascent algorithm is given in Algorithm 1 in Appendix A.1. The computational complexity of Max-SW is \(\mathcal{O}(Tn\log_{2}n+Tdn)\) and the memory complexity of Max-SW is \(\mathcal{O}(d+n)\). It is worth noting that the projected sub-gradient ascent can only yield local maximum [46]. Therefore, the empirical Max-SW might not be distance even when \(T\rightarrow\infty\) since the metricity of Max-SW can be only obtained at the global maximum.

**K-sliced Wasserstein distance.** The authors in [50] propose to estimate the sliced Wasserstein distance based on orthogonal projecting directions. We refer to the distance as K-sliced Wasserstein distance (K-SW). The definition of K-SW between two probability measures \(\mu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) and \(\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) is:

\[\text{K-SW}_{p}^{p}(\mu,\nu)=\mathbb{E}\left[\frac{1}{K}\sum_{i= 1}^{K}\text{W}_{p}^{p}(\theta_{i}\sharp\mu,\theta_{i}\sharp\nu)\right], \tag{5}\]

where the expectation is with respect to \((\theta_{1},\dots,\theta_{K})\sim\mathcal{U}(\mathbb{V}_{k}(\mathbb{R}^{d}))\) with \(\mathbb{V}_{K}(\mathbb{R}^{d})=\{(\theta_{1},\dots,\theta_{K})\in\mathbb{S}^{d -1}|\langle\theta_{i},\theta_{j}\rangle=0\ \forall i,j\leq K\}\) is the Stiefel manifold. The expectation can be approximated with Monte Carlo samples \((\theta_{1},\dots,\theta_{Kl})_{l=1}^{L}\) from \(\mathcal{U}(\mathbb{V}_{K}(\mathbb{R}^{d}))\). In the original paper, \(L\) is set to 1. To sample from the uniform distribution over the Stiefel manifold \(\mathcal{U}(\mathbb{V}_{k}(\mathbb{R}^{d}))\), it requires using the Gram-Schmidt orthogonality process which has the computational complexity \(\mathcal{O}(K^{2}d)\) (quadratic in \(K\)). Therefore, the total computational complexity of K-SW is \(\mathcal{O}(LKn\log_{2}n+LKdn+LK^{2}d)\) and the memory complexity of K-SW is \(\mathcal{O}(LK(d+n))\). More detail related to K-SW including Gram-Smith process and sampling uniformly from the Stiefel manifold is given in Appendix A.1.

**Max K sliced Wasserstein distance.** To generalize both Max-SW and K-SW, Max K sliced Wasserstein is introduced in [12]. Its definition between \(\mu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) and \(\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) is:

\[\text{Max-K-SW}_{p}^{p}(\mu,\nu)=\max_{(\theta_{1},\dots,\theta _{K})\in\mathbb{V}_{K}(\mathbb{R}^{d})}\left[\frac{1}{K}\sum_{i=1}^{K}\text{W} _{p}^{p}(\theta_{i}\sharp\mu,\theta_{i}\sharp\nu)\right]. \tag{6}\]

Similar to Max-SW, a projected sub-gradient ascent algorithm with \(T>1\) iterations is used to approximate Max-K-SW. We refer the reader to Algorithm 4 in Appendix A.1 for greater detail. Since the projecting operator to the Stiefel manifold is the Gram-Smith process, the computational complexity of Max-K-SW is \(\mathcal{O}(TKn\log_{2}n+TKdn+TK^{2}d)\). The memory complexity of Max-K-SW is \(\mathcal{O}(K(d+n))\). Similar to Max-SW, the metricity of Max-K-SW is only obtained at the global optimum, hence, the empirical estimation might not be stable. Moreover, the orthogonality constraint is also computationally expensive i.e., quadratic in terms of the number of orthogonal projections \(K\).

## 3 Markovian Sliced Wasserstein distances

We first define _Markovian sliced Wasserstein_ (MSW) distance and discuss its theoretical properties including topological properties, statistical properties, and computational properties in Section 3.1. In Section 3.2, we discuss some choices in designing the Markov chain including the prior distribution and the transition distribution. Finally, we discuss the burning and thinning variant of MSW which can reduce the computational and memory complexity in Section 3.3.

### Definitions, Topological, Statistical, and Computational Properties

We first start with a general definition of Markovian sliced Wasserstein distance in Definition 1.

**Definition 1**.: _For any \(p\geq 1\), \(T\geq 1\), and dimension \(d\geq 1\), the Markovian sliced Wasserstein of order \(p\) between two probability measures \(\mu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) and \(\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) is:_

\[\text{MSW}^{p}_{p,T}(\mu,\nu)=\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T })}\left[\frac{1}{T}\sum_{t=1}^{T}W^{p}_{p}\left(\theta_{t}\sharp\mu,\theta_{t }\sharp\nu\right)\right], \tag{7}\]

_where \(T\) is the number of time steps, the expectation is under the projecting distribution \(\theta_{1:T}\sim\sigma(\theta_{1:T})\) with \(\sigma(\theta_{1:T})=\sigma(\theta_{1},\ldots,\theta_{T})=\sigma_{1}(\theta_{1 })\prod_{t=2}^{T}\sigma_{t}(\theta_{t}|\theta_{t-1})\), and \(\sigma_{1}(\theta_{1}),\sigma_{t}(\theta_{t}|\theta_{t-1})\in\mathcal{P}( \mathbb{S}^{d-1})\) for all \(t=1,\ldots,T\)._

The first projecting direction \(\theta_{1}\) follows the distribution \(\sigma_{1}(\theta_{1})\) with \(\sigma_{1}(\theta_{1})\) to be any distributions on the unit hyper-sphere, e.g., the uniform distribution, a von Mises-Fisher distribution, and so on. By designing the transition distribution \(\sigma_{t}(\theta_{t}|\theta_{t-1})\), we can obtain various variants of MSW. It is worth noting that the MSW can be rewritten as the average of \(T\) expectation of one-dimensional Wasserstein distance, \(\text{MSW}^{p}_{p,T}(\mu,\nu)=\frac{1}{T}\sum_{t=1}^{T}\mathbb{E}_{\theta_{t} \sim\sigma_{t}(\theta_{t})}[W^{p}_{p}\left(\theta_{t}\sharp\mu,\theta_{t}\sharp \nu\right)]\), however, \(\sigma_{t}(\theta_{t})=\int\prod_{i=1}^{t}\sigma_{1}(\theta_{1})\prod_{l=2}^{ t}\sigma_{t^{\prime}}(\theta_{t^{\prime}}|\theta_{t^{\prime}-1})d\theta_{1}\ldots d \theta_{t-1}\) are not the same for \(t=1,\ldots,T\). Moreover, sampling directly from \(\sigma_{t}(\theta_{t})\) is intractable, hence, using the definition of the MSW in Definition 1 is more reasonable in terms of approximating the expectation using Monte Carlo samples.

**Monte Carlo estimation.** Similar to SW, we also need to use Monte Carlo samples to approximate the expectation in Definition 1. We first samples \(\theta_{11},\ldots,\theta_{L1}\sim\sigma_{1}(\theta_{1})\) for \(L\geq 1\), then we samples \(\theta_{lt}\sim\sigma_{t}(\theta_{t}|\theta_{lt-1})\) for \(t=1,\ldots,T\) and \(l=1,\ldots,L\). After that, we can form an unbiased empirical estimation of MSW as follows: \(\widehat{\text{MSW}}^{p}_{p,T}(\mu,\nu)=\frac{1}{LT}\sum_{l=1}^{L}\sum_{t=1}^{ T}\mathbb{W}^{p}_{p}(\theta_{lt}\sharp\mu,\theta_{lt}\sharp\nu)\).

Before going to the specific design of those distributions, we first discuss the empirical estimation of MSW, and investigate its theoretical properties including topological properties, statistical properties, and computational properties.

**Topological Properties.** We first state the following assumption: **A1**. _In MSW, the prior distribution \(\sigma_{1}(\theta_{1})\) is supported on all the unit-hypersphere or there exists a transition distribution \(\sigma_{t}(\theta_{t}|\theta_{t-1})\) being supported on all the unit-hypersphere._ The assumption **A1** is easy to satisfy and it holds for all later choices of the prior distribution and transition distribution. We now consider the metricity properties of the Markovian sliced Wasserstein distance.

**Theorem 1** (Metricity).: _For any \(p\geq 1\), \(T\geq 1\), and dimension \(d\geq 1\), if **A1** holds, Markovian sliced Wasserstein \(\text{MSW}_{p,T}(\cdot,\cdot)\) is a valid metric on the space of probability measures \(\mathcal{P}_{p}(\mathbb{R}^{d})\), namely, it satisfies the (i) non-negativity, (ii) symmetry, (iii) triangle inequality, and (iv) identity._

The proof of Theorem 1 is in Appendix B.1. Next, we show that the convergence in MSW implies the weak convergence of probability measures and the reverse also holds.

**Theorem 2** (Weak Convergence).: _For any \(p\geq 1\), \(T\geq 1\), and dimension \(d\geq 1\), if **A1** holds, the convergence of probability measures in \(\mathcal{P}_{p}(\mathbb{R}^{d})\) under the Markovian sliced Wasserstein distance \(\text{MSW}_{p,T}(\cdot,\cdot)\) implies weak convergence of probability measures and vice versa._

Theorem 2 means that for any sequence of probability measures \((\mu_{k})_{k\in\mathbb{N}}\) and \(\mu\) in \(\mathcal{P}_{p}(\mathbb{R}^{d})\), \(\lim_{k\rightarrow+\infty}\text{MSW}_{p,T}(\mu_{k},\mu)=0\) if and only if for any continuous and bounded function \(f:\mathbb{R}^{d}\rightarrow\mathbb{R}\), \(\lim_{k\rightarrow+\infty}\int f\,\mathrm{d}\mu_{k}=\int f\,\mathrm{d}\mu\). The proof of Theorem 2 is in Appendix B.2. Next, we discuss the connection of MSW to previous sliced Wasserstein variants.

**Proposition 1**.: _For any \(p\geq 1\) and dimension \(d\geq 1\),_

_(i) For any \(T\geq 1\) and \(\mu,\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\), \(\text{MSW}_{p,T}(\mu,\nu)\leq\text{Max-SW}_{p}(\mu,\nu)\leq W_{p}(\mu,\nu)\)._

_(ii) If \(T=1\) and the prior \(\sigma_{1}(\theta_{1}):=\mathcal{U}(\mathbb{S}^{d-1})\), \(\text{MSW}_{p,T}(\mu,\nu)=\text{SW}_{p}(\mu,\nu)\)._

The proof of Proposition 1 is in Appendix B.3.

**Statistical Properties.** We investigate the sample complexity (empirical estimation rate) of the MSW.

**Proposition 2** (Sample Complexity).: _Let \(X_{1},X_{2},\ldots,X_{n}\) be i.i.d. samples from the probability measure \(\mu\) being supported on compact set of \(\mathbb{R}^{d}\). We denote the empirical measure \(\mu_{n}=\frac{1}{n}\sum_{i=1}^{n}\delta_{X_{i}}\). Then, for any \(p\geq 1\) and \(T\geq 1\), there exists a universal constant \(C>0\) such that \(\mathbb{E}[\text{MSW}_{p,T}(\mu_{n},\mu)]\leq C\sqrt{(d+1)\log n/n},\) where the outer expectation is taken with respect to the data \(X_{1},X_{2},\ldots,X_{n}\)._

The proof of Proposition 2 is in Appendix B.4. The proposition suggests that MSW does not suffer from the curse of dimensionality. Next, we investigate the MSW's Monte Carlo approximation error.

**Proposition 3** (Monte Carlo error).: _For any \(p\geq 1\), \(T\geq 1\), dimension \(d\geq 1\), and \(\mu,\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\), we have: \(\mathbb{E}[\widehat{\text{MSW}}_{p,T}^{p}(\mu,\nu)-\text{MSW}_{p,T}^{p}(\mu, \nu)]\,\leq\,\frac{1}{T\sqrt{L}}\text{Var}\left[\sum_{t=1}^{T}W_{p}^{p}\left( \theta_{t}\sharp\mu,\theta_{t}\sharp\nu\right)\right]^{\frac{1}{2}},\) where the variance is with respect to \(\sigma(\theta_{1},\ldots,\theta_{T})\)._

The proof of Proposition 3 is in Appendix B.5. From the above proposition, we know that increasing the number of projections \(L\) reduces the approximation error.

**Computational Properties.** When \(\mu\) and \(\nu\) are two discrete probability measures in \(\mathcal{P}_{p}(\mathbb{R}^{d})\) that have at most \(n\) supports, the computational complexity for the Monte Carlo approximation of MSW is \(\mathcal{O}(TLn\log_{2}n+TLdn)\) where \(\mathcal{O}(TLn\log n)\) is for computation of \(TL\) one-dimensional Wasserstein distances and \(\mathcal{O}(TLdn)\) is the projecting complexity for \(TL\) projections from \(d\) dimension to \(1\) dimension. The memory complexity of MSW is \(\mathcal{O}(TL(d+n))\) for storing the projecting directions and the projections.

### Specific Choices of Projecting Distributions

Designing the projecting distribution \(\sigma(\theta_{1},\ldots,\theta_{T})\) is the central task in using MSW since it controls the projecting behavior. For each choice of the \(\sigma(\theta_{1},\ldots,\theta_{T})\), we obtain a variant of MSW. Since we impose the first order Markov structure \(\sigma(\theta_{1},\ldots,\theta_{T})=\sigma_{1}(\theta_{1})\prod_{t=2}^{T} \sigma_{t}(\theta_{t}|\theta_{t-1})\), there are two types of distributions that we need to choose: the _prior distribution_\(\sigma_{1}(\theta_{1})\) and the _transition distribution_\(\sigma_{t}(\theta_{t}|\theta_{t-1})\) for all \(t=2,\ldots,T\).

**Prior distribution.** The most simple choice of \(\sigma_{1}(\theta_{1})\) when we know nothing about probability measures that we want to compare is the uniform distribution over the unit hypersphere \(\mathcal{U}(\mathbb{S}^{d-1})\). Moreover, the metricity of MSW is guaranteed regardless of the transition distribution with this choice. Therefore, the uniform distribution is the choice that we use in our experiments in the paper. It is worth noting that we could also use a distribution that is estimated from two interested probability measures [44]; however, this approach costs more computation.

**Transition distribution.** We discuss some specific choices of the transition distributions \(\sigma_{t}(\theta_{t}|\theta_{t-1})\). Detailed algorithms for computing MSW with specific transitions are given in Appendix A.3.

_Orthogonal-based transition._ Motivated by the orthogonality constraint in Max-K-SW and K-SW, we can design a transition distribution that gives us an orthogonal projecting direction to the previous one. In particular, given a previous projecting direction \(\theta_{t-1}\), we want to have \(\theta_{t}\) such that \(\langle\theta_{t},\theta_{t-1}\rangle=0\), namely, we want to sample from the subspace \(\mathcal{S}_{\theta_{t-1}}^{d-1}:=\{\theta_{t}\in\mathbb{S}^{d-1}|\langle\theta _{t},\theta_{t-1}\rangle=0\}\). To the best of our knowledge, there is no explicit form of distribution (known pdf) that is defined on that set. However, we can still sample from the uniform distribution over that set: \(\mathcal{U}(\mathcal{S}_{\theta_{t-1}}^{d-1})\) since that distribution can be constructed by pushing the uniform distribution over the whole unit hypersphere \(\mathcal{U}(\mathbb{S}^{d-1})\) through the projection operator: \(\text{Proj}_{\theta_{t-1}}(\theta_{t})=\text{Proj}_{\mathbb{S}^{d-1}}\left( \theta_{t}-\frac{(\theta_{t-1},\theta_{t})}{(\theta_{t-1},\theta_{t-1})}\theta _{t-1}\right)\) where \(\text{Proj}_{\mathbb{S}^{d-1}}(\theta)=\frac{\theta}{||\theta||_{2}}\) is the normalizing operator. In a greater detail, we first sample \(\theta_{t}^{\prime}\sim\mathcal{U}(\mathbb{S}^{d-1})\) and then set \(\theta_{t}=\text{Proj}_{\theta_{t-1}}(\theta_{t}^{\prime})\). Therefore, we have \(\sigma_{t}(\theta_{t}|\theta_{t-1})=\mathcal{U}(\mathcal{S}_{t-1}^{d-1})= \text{Proj}_{\theta_{t-1}}\sharp\mathcal{U}(\mathbb{S}^{d-1})\).

_Input-award transition._ The above two transition distributions do not take into account the information of the two probability measures \(\mu\) and \(\nu\) that we want to compare. Hence, it could be inefficient to explore good projecting directions by comparing \(\mu\) and \(\nu\). Motivated by the projected sub-gradient ascent [9] update in finding the "max" projecting direction, we could design the transition distribution as follows: \(\sigma_{t}(\theta_{t}|\theta_{t-1})=\delta_{f(\theta_{t-1}|\eta,\mu,\nu)}\) where \(\delta\) denotes the Dirac Delta function and the transition function \(f(\theta_{t-1}|\eta,\mu,\nu)=\text{Proj}_{\mathbb{S}^{d-1}}\left(\theta_{t-1}+ \eta\nabla_{\theta_{t-1}}W_{p}\left(\theta_{t-1}\sharp\mu,\theta_{t-1}\sharp \nu\right)\right),\) with \(\eta>0\) is the stepsize hyperparameter. As the current choice is a deterministic transition, it requires the priordistribution to have supports on all \(\mathbb{S}^{d-1}\) to obtain the metricity for MSW. A choice to guarantee the metricity regardless of the prior distribution is the von Mises-Fisher (vMF) distribution [23], namely, \(\sigma_{t}(\theta_{t}|\theta_{t-1})=\text{vMF}(\theta_{t}|\epsilon=f(\theta_{t-1 }|\eta,\mu,\mu),\kappa)\). The details about the vMF distribution including its probability density function, its sampling procedure, and its properties are given in Appendix A.2. In summary, the vMF distribution has two parameters: the location parameter \(\epsilon\in\mathbb{S}^{d-1}\) which is the mean, and the concentration parameter \(\kappa\in\mathbb{R}^{+}\) which plays the role as the precision. Thank the interpolation properties of the vMF distribution: \(\lim_{\kappa\to 0}\text{vMF}(\theta|\epsilon,\kappa)=\mathcal{U}(\mathbb{S}^{d-1})\) and \(\lim_{\kappa\to\infty}\text{vMF}(\theta|\epsilon,\kappa)=\delta_{\epsilon}\), the transition distribution can balance between heading to the "max" projecting direction and exploring the space of directions.

**Stationarity of \(\sigma_{T}(\theta_{T})\).** A natural important question arises: what is the distribution of \(\sigma_{T}(\theta_{T})=\int\ldots\int\sigma(\theta_{1},\ldots,\theta_{T})d \theta_{1}\ldots d\theta_{T-1}\) when \(T\to\infty\)? The answer to the above questions depends on the choice of the projection distribution which is discussed in Section 3.2. For the _Orthogonal-based_ transitions and the uniform distribution prior, it is unclear whether the stationary distribution exists. For the deterministic _Input-awarded_ transition and the uniform prior, we have \(\lim_{T\to\infty}\sigma_{T}(\theta_{T})=\sum_{a=1}^{A}\alpha_{a}\delta_{\theta_ {a}^{*}}\) with \(\sum_{a=1}^{A}\alpha_{a}=1\) where \(\theta_{a}^{*}\) (\(a=1,\ldots,A\)) are local maximas of the optimization problem \(\max_{\theta\in\mathbb{S}^{d-1}}\text{W}_{p}(\theta_{\sharp}\mu,\theta_{\sharp }\nu)\) and some unknown weights \(\alpha_{a}\) that depend on \(\mu\) and \(\nu\). This property is due to the fact that the projected sub-gradient ascent can guarantee local maxima convergence [46]. For the _Input-awarded_ vMF transition, it is also unclear if the stationary distribution exists when the parameter \(\kappa<\infty\).

### Burning and Thinning

In the definition of MSW in Definition 1, we take the expectation on the joint distribution over all timesteps \(\sigma(\theta_{1:T})\) which leads to the time and memory complexities to be linear with \(T\) in the Monte Carlo approximation. Therefore, we can adapt the practical technique from MCMC methods which is burning and thinning to reduce the number of random variables while still having the dependency.

**Definition 2**.: _For any \(p\geq 1\), \(T\geq 1\), dimension \(d\geq 1\), the number of burned steps \(M\geq 0\), and the number of thinned steps \(N\geq 1\), the burned thinned Markovian sliced Wasserstein of order \(p\) between two probability measures \(\mu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) and \(\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) is:_

\[\text{MSW}^{p}_{p,T,N,M}(\mu,\nu)=\mathbb{E}\left[\frac{N}{T-M}\sum_{t=1}^{(T- M)/N}W^{p}_{p}\left(\theta^{\prime}_{t}\sharp\mu,\theta^{\prime}_{t}\sharp\nu \right)\right], \tag{8}\]

_where the expectation is under the projection distribution \(\theta^{\prime}_{1:N(T-M)}\sim\sigma(\theta^{\prime}_{1:N(T-M)})\) with \(\sigma(\theta^{\prime}_{1:N/(T-M)})\) being the marginal distribution which is obtained by integrating out random projecting directions at the time step \(t\) such that \(t\leq M\) or \(t\%N\neq 0\) from \(\sigma(\theta_{1},\ldots,\theta_{T})=\sigma_{1}(\theta_{1})\prod_{l=2}^{T} \sigma_{t}(\theta_{t}|\theta_{t-1})\) for all \(t=1,\ldots,T\)._

Similar to MSW, the burned-thinned MSW is also a metric on \(\mathcal{P}_{p}(\mathbb{R}^{d})\) when there exists a time step \(t\) that is not burned, is not thinned, and \(\theta_{t}\) is a random variable that has the supports on all \(\mathbb{S}^{d-1}\). We discuss more details about the burned-thinned MSW including its topological and statistical properties in Appendix A.4. The Monte Carlo estimation of the burned-thinned MSW is given in Equation 10 in Appendix A.4. The approximation is the average of the projected Wasserstein distance from \(\theta_{tl}\) with \(t\geq M\) and \(t\%N=0\). By reducing the number of random projecting directions, the computational complexity of the burned-thinned MSW is improved to \(\mathcal{O}(((T-M)Ln\log_{2}n+(T-M)Ldn)/N)\) in the orthogonal-based transitions. In the case of the input-awarded transition, the computational complexity is still \(\mathcal{O}(TLn\log_{2}n+TLdn)\) since the transition requires computing the gradient of the projected Wasserstein distance. However, in all cases, the memory complexity is reduced to \(\mathcal{O}((T-M)L(d+n)/N)\).

**Burned thinned MSW is the generalization of Max-SW.** the empirical computation of Max-SW [14] with the projected sub-gradient ascent and uniform random initialization can be viewed as a special case of burned thinned MSW with the input-awarded transition and with the number of burned samples \(M=T-1\). The difference is that Max-SW uses only one local maximum to compute the distance while the burned thinned MSW uses \(L\geq 1\) maximums (might not be unique).

**More discussions.** We refer the reader to Appendix A.5 for other related discussions e.g., "K-SW is autoregressive decomposition of projecting distribution", "sequential generalization of Max-K-SW", and related literature.

## 4 Experiments

In this section, we refer MSW with orthogonal-based transition as oMSW, MSW with input-award transition as iMSW (using the Dirac distribution) and viMSW (using the vMF distribution). We compare MSW variants to SW, Max-SW, K-SW, and Max-K-SW in standard applications e.g., gradient flows, color transfer, and deep generative models. Moreover, we also investigate the role of hyperparameters, e.g., concentration parameter \(\kappa\), the number of projections \(L\), the number of time steps \(T\), the number of burning steps \(M\), and the number of thinning steps \(N\) in applications.

### Gradient Flows and Color Transfer

**Gradient flows.** We follow the same setting in [17]. The gradient flow models a distribution \(\mu(t)\) flowing with time \(t\) along the gradient flow of a loss functional \(\mu(t)\rightarrow\mathcal{D}(\mu(t),\nu)\) that drives it towards a target distribution \(\nu\)[53] where \(\mathcal{D}\) is a given distance between probability measures. In this setup, we consider \(\nu=\frac{1}{n}\sum_{i=1}^{n}\delta_{Y_{i}}\) as a fixed empirical target distribution and the model distribution \(\mu(t)=\frac{1}{n}\sum_{i=1}^{n}\delta_{X_{i}(t)}\). Here, the model distribution is parameterized by a time-varying point cloud \(X(t)=\left(X_{i}(t)\right)_{i=1}^{n}\in\left(\mathbb{R}^{d}\right)^{n}\). Starting from an initial condition at time \(t=0\), we integrate the ordinary differential equation \(\dot{X}(t)=-n\nabla_{X(t)}\left[\mathcal{D}\left(\frac{1}{n}\sum_{i=1}^{n} \delta_{X_{i}(t)},\nu\right)\right]\) for each iteration. In the experiments, we utilize the Euler scheme with \(300\) timesteps and the step size is \(10^{-3}\) to move the empirical distribution over colorful 1000 points \(\mu(0)\) to the distribution over S-shape 1000 points (\(\nu\)) (see Figure 1). For Max-SW, Max-K-SW, iMSW, and viMSW, we use the learning rate parameter for projecting directions \(\eta=0.1\). We report the Wasserstein-2 distances between the empirical distribution \(\mu(t)\) and the target empirical distribution \(\nu\), and the computational time in Table 1. We also give the visualization of some obtained flows in Figure 1. We refer the reader to Figure 4 in Appendix C.1 for the full visualization of all flows and detailed algorithms. We observe that iMSW

Figure 1: The figures show the gradient flows that are from the empirical distribution over the color points to the empirical distribution over S-shape points. The corresponding Wasserstein-2 distance between the empirical distribution at the current step and the S-shape distribution and the computational time (in seconds) to reach the step is reported at the top of the figure.

Figure 2: The figures show the source image, the target image, and the transferred images from different distances. The corresponding Wasserstein-2 distance between the empirical distribution over transferred color palates and the empirical distribution over the target color palette and the computational time (in second) are reported at the top of the figure.

gives better flows than SW, Max-SW, K-SW, and Max-K-SW. Namely, the empirical distribution \(\mu(t)\) (\(t=300\)) with iMSW is closer to \(\nu\) in terms of Wasserstein distance. More importantly, iMSW consumes less computation than its competitors since it can use a smaller number of projections due to more informative projecting directions. Furthermore, viMSW gives better final results than iMSW, however, the trade-off is doubling the time computation due to the sampling step of vMF distribution. In this case, K-SW is equivalent to our oMSW with T=K=2 since the dimension \(d=2\). We refer the reader to Appendix C.1 for more discussion.

**Studies on hyperparameters.** From Table 3 in Appendix C.1, increasing the number of projections \(L\) yields better performance for SW, K-SW, and iMSW. Similarly, increasing the number of timesteps \(T\) also helps Max-SW and iMSW better. Moreover, we find that for the same number of total projections e.g., \(L=5,T=2\) and \(T=2,L=5\), a larger timestep \(T\) might lead to a better result for iMSW. For burning and thinning, we see that they help to reduce the computation while the performance stays comparable or even better if choosing the right value of \(M\) and \(N\). Also, iMSW the burning steps \(M=T-1\) is still better than Max-SW with \(T\) time steps. For the concentration parameter \(\kappa\) in viMSW, the performance of viMSW is not monotonic in terms of \(\kappa\).

**Color transfer.** We aim to transfer the color palate (RGB) of a source image to the color palette (RGB) target image. Therefore, it is natural to build a gradient flow that starts from the empirical distribution over the color palette of the source image to the empirical distribution over the color palette of the target image. Since the value of color palette is in the set \(\{0,\dots,255\}^{3}\), we round the value of the supports of the empirical distribution at the final step of the Euler scheme with 2000 steps and \(10^{-3}\) step size. Greater detail can be found in Appendix C.2. For Max-SW, Max-K-SW, iMSW, and viMSW, we use the learning rate parameter for projecting directions \(\eta=0.1\). We show the transferred images, the corresponding Wasserstein-2 distances between the empirical distribution over the transferred color palette and the empirical distribution over the target color palette, and the corresponding computational time in Figure 2. From the figures, iMSW and viMSW give the best transferred images quantitatively and qualitatively. Moreover, oMSW is comparable to SW, Max-SW, K-SW, and are better than Max-K-SW while consuming much less computation. We refer the reader to Figure 5 in Appendix C.2 for the color palette visualization and to Figure 6 for another choice of the source and target images. We also conduct studies on hyperparameters in Appendix C.2 where we observe some similar phenomenons as in gradient flow.

\(\{10,100\},T\in\{10,100\}\)), iMSW and viMSW (\(\eta\in\{0.01,0.1\}\)), and viMSW and (\(\kappa\in\{10,50\}\)). We report the best FID score and the best IS score for each distance in Table 2. In addition, we show how scores change with respect to the training epochs in Figure 3. Overall, we observe that viMSW and iMSW give the best generative performance in terms of the final scores and fast convergence on CIFAR10 and CelebA. The oMSW gives comparable results to baselines. Since most computation in training deep generative models is for updating neural networks, the computational time for distances is almost the same. Furthermore, we show some generated images on CelebA in Figure 3 and all generated images on CIFAR10 and CelebA in Figure 7 and Figure 8 in Appendix C.3. We visually observe that the qualitative results are consistent with the quantitative results in Table 2.

**Studies on hyperparameters.** We conduct experiments to understand the behavior of the burning and thinning technique, and to compare the role of \(L\) and \(T\) in Table 5 in Appendix C.3. Overall, burning (thinning) sometimes helps to improve the performance of training generative models. There is no clear sign of superiority between burning and thinning. We compare two settings of the same number of total projections (same complexities): \(L=10,T=100\) and \(L=100,T=10\). On CIFAR10, the first setting is better while the reverse case happens on CelebA.

## 5 Conclusion

We have introduced the Markovian sliced Wasserstein (MSW), a novel family of sliced Wasserstein (SW) distances, which imposes a first-order Markov structure on projecting directions. We have investigated the theoretical properties of MSW including topological properties, statistical properties, and computational properties. Moreover, we have discussed three types of transition distribution for MSW, namely, orthogonal-based, and input-award transitions. In addition, we have proposed a burning and thinning technique to improve the computational time and memory of MSW. Finally, we have compared MSW to previous variants of SW in gradient flows, color transfer, and generative modeling to show that MSW distances are both effective and efficient.

## Acknowledgements

NH acknowledges support from the NSF IFML 2019844 and the NSF AI Institute for Foundations of Machine Learning.

Figure 3: The FID scores and the IS scores over epochs, and some generated images from CelebA.

## References

* [1] J. Altschuler, J. Niles-Weed, and P. Rigollet. Near-linear time approximation algorithms for optimal transport via Sinkhorn iteration. In _Advances in Neural Information Processing Systems_, pages 1964-1974, 2017.
* [2] Y. Bai, B. Schmitzer, M. Thorpe, and S. Kolouri. Sliced optimal partial transport. _arXiv preprint arXiv:2212.08049_, 2022.
* [3] V. I. Bogachev and M. A. S. Ruas. _Measure theory_, volume 1. Springer, 2007.
* [4] C. Bonet, P. Berg, N. Courty, F. Septier, L. Drumetz, and M.-T. Pham. Spherical sliced-wasserstein. _arXiv preprint arXiv:2206.08780_, 2022.
* [5] C. Bonet, N. Courty, F. Septier, and L. Drumetz. Efficient gradient flows in sliced-Wasserstein space. _Transactions on Machine Learning Research_, 2022.
* [6] N. Bonneel and D. Coeurjolly. Spot: sliced partial optimal transport. _ACM Transactions on Graphics (TOG)_, 38(4):1-13, 2019.
* [7] N. Bonneel, J. Rabin, G. Peyre, and H. Pfister. Sliced and Radon Wasserstein barycenters of measures. _Journal of Mathematical Imaging and Vision_, 1(51):22-45, 2015.
* [8] N. Bonnotte. _Unidimensional and evolution methods for optimal transportation_. PhD thesis, Paris 11, 2013.
* [9] S. Bubeck. Convex optimization: Algorithms and complexity. _Foundations and Trends(r) in Machine Learning_, 8(3-4):231-357, 2015.
* [10] X. Chen, Y. Yang, and Y. Li. Augmented sliced Wasserstein distances. _International Conference on Learning Representations_, 2022.
* [11] M. Cuturi. Sinkhorn distances: Lightspeed computation of optimal transport. In _Advances in Neural Information Processing Systems_, pages 2292-2300, 2013.
* [12] B. Dai and U. Seljak. Sliced iterative normalizing flows. In _International Conference on Machine Learning_, pages 2352-2364. PMLR, 2021.
* [13] T. R. Davidson, L. Falorsi, N. De Cao, T. Kipf, and J. M. Tomczak. Hyperspherical variational auto-encoders. In _34th Conference on Uncertainty in Artificial Intelligence 2018, UAI 2018_, pages 856-865. Association For Uncertainty in Artificial Intelligence (AUAI), 2018.
* [14] I. Deshpande, Y.-T. Hu, R. Sun, A. Pyrros, N. Siddiqui, S. Koyejo, Z. Zhao, D. Forsyth, and A. G. Schwing. Max-sliced Wasserstein distance and its use for GANs. In _Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition_, pages 10648-10656, 2019.
* [15] I. Deshpande, Z. Zhang, and A. G. Schwing. Generative modeling using the sliced Wasserstein distance. In _Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition_, pages 3483-3491, 2018.
* [16] L. Devroye, L. Gyorfi, and G. Lugosi. _A probabilistic theory of pattern recognition_, volume 31. Springer Science & Business Media, 2013.
* [17] J. Feydy, T. Sejourne, F.-X. Vialard, S.-i. Amari, A. Trouve, and G. Peyre. Interpolating between optimal transport and MMD using Sinkhorn divergences. In _The 22nd International Conference on Artificial Intelligence and Statistics_, pages 2681-2690, 2019.
* [18] R. Flamary, N. Courty, A. Gramfort, M. Z. Alaya, A. Boisbunon, S. Chambon, L. Chapel, A. Corenflos, K. Fatras, N. Fournier, L. Gautheron, N. T. Gayraud, H. Janati, A. Rakotomamonjy, I. Redko, A. Rolet, A. Schutz, V. Seguy, D. J. Sutherland, R. Tavenard, A. Tong, and T. Vayer. Pot: Python optimal transport. _Journal of Machine Learning Research_, 22(78):1-8, 2021.
* [19] N. Fournier and A. Guillin. On the rate of convergence in Wasserstein distance of the empirical measure. _Probability Theory and Related Fields_, 162:707-738, 2015.

* [20] A. Genevay, G. Peyre, and M. Cuturi. Learning generative models with Sinkhorn divergences. In _International Conference on Artificial Intelligence and Statistics_, pages 1608-1617. PMLR, 2018.
* [21] M. Heusel, H. Ramsauer, T. Unterthiner, B. Nessler, and S. Hochreiter. GANs trained by a two time-scale update rule converge to a local Nash equilibrium. In _Advances in Neural Information Processing Systems_, pages 6626-6637, 2017.
* [22] M. Huang, S. Ma, and L. Lai. A Riemannian block coordinate descent method for computing the projection robust Wasserstein distance. In _International Conference on Machine Learning_, pages 4446-4455. PMLR, 2021.
* [23] P. E. Jupp and K. V. Mardia. Maximum likelihood estimators for the matrix von Mises-Fisher and Bingham distributions. _The Annals of Statistics_, 7(3):599-606, 1979.
* [24] O. Kallenberg and O. Kallenberg. _Foundations of modern probability_, volume 2. Springer, 1997.
* [25] D. P. Kingma and J. Ba. Adam: A method for stochastic optimization. _arXiv preprint arXiv:1412.6980_, 2014.
* [26] S. Kolouri, K. Nadjahi, U. Simsekli, R. Badeau, and G. Rohde. Generalized sliced Wasserstein distances. In _Advances in Neural Information Processing Systems_, pages 261-272, 2019.
* [27] S. Kolouri, P. E. Pope, C. E. Martin, and G. K. Rohde. Sliced Wasserstein auto-encoders. In _International Conference on Learning Representations_, 2018.
* [28] S. Kolouri, G. K. Rohde, and H. Hoffmann. Sliced Wasserstein distance for learning Gaussian mixture models. In _Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition_, pages 3427-3436, 2018.
* [29] A. Krizhevsky, G. Hinton, et al. Learning multiple layers of features from tiny images. _Master's thesis, Department of Computer Science, University of Toronto_, 2009.
* [30] C.-Y. Lee, T. Batra, M. H. Baig, and D. Ulbricht. Sliced Wasserstein discrepancy for unsupervised domain adaptation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 10285-10295, 2019.
* [31] J. Lezama, W. Chen, and Q. Qiu. Run-sort-rerun: Escaping batch size limitations in sliced Wasserstein generative models. In _International Conference on Machine Learning_, pages 6275-6285. PMLR, 2021.
* [32] T. Lin, C. Fan, N. Ho, M. Cuturi, and M. Jordan. Projection robust Wasserstein distance and Riemannian optimization. _Advances in Neural Information Processing Systems_, 33:9383-9397, 2020.
* [33] T. Lin, N. Ho, X. Chen, M. Cuturi, and M. I. Jordan. Fixed-support Wasserstein barycenters: Computational hardness and fast algorithm. In _NeurIPS_, pages 5368-5380, 2020.
* [34] T. Lin, N. Ho, and M. Jordan. On efficient optimal transport: An analysis of greedy and accelerated mirror descent algorithms. In _International Conference on Machine Learning_, pages 3982-3991, 2019.
* [35] T. Lin, N. Ho, and M. I. Jordan. On the efficiency of entropic regularized algorithms for optimal transport. _Journal of Machine Learning Research (JMLR)_, 23:1-42, 2022.
* [36] Z. Liu, P. Luo, X. Wang, and X. Tang. Deep learning face attributes in the wild. In _Proceedings of International Conference on Computer Vision (ICCV)_, December 2015.
* [37] A. Liutkus, U. Simsekli, S. Majewski, A. Durmus, and F.-R. Stoter. Sliced-Wasserstein flows: Nonparametric generative modeling via optimal transport and diffusions. In _International Conference on Machine Learning_, pages 4104-4113. PMLR, 2019.
* [38] N. Naderializadeh, J. Comer, R. Andrews, H. Hoffmann, and S. Kolouri. Pooling by sliced-Wasserstein embedding. _Advances in Neural Information Processing Systems_, 34, 2021.

* [39] K. Nadjahi, V. De Bortoli, A. Durmus, R. Badeau, and U. Simsekli. Approximate Bayesian computation with the sliced-Wasserstein distance. In _ICASSP 2020-2020 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)_, pages 5470-5474. IEEE, 2020.
* [40] K. Nadjahi, A. Durmus, L. Chizat, S. Kolouri, S. Shahrampour, and U. Simsekli. Statistical and topological properties of sliced probability divergences. _Advances in Neural Information Processing Systems_, 33:20802-20812, 2020.
* [41] K. Nadjahi, A. Durmus, U. Simsekli, and R. Badeau. Asymptotic guarantees for learning generative models with the sliced-Wasserstein distance. In _Advances in Neural Information Processing Systems_, pages 250-260, 2019.
* [42] K. Nguyen and N. Ho. Amortized projection optimization for sliced Wasserstein generative models. _Advances in Neural Information Processing Systems_, 2022.
* [43] K. Nguyen and N. Ho. Revisiting sliced Wasserstein on images: From vectorization to convolution. _Advances in Neural Information Processing Systems_, 2022.
* [44] K. Nguyen, N. Ho, T. Pham, and H. Bui. Distributional sliced-Wasserstein and applications to generative modeling. In _International Conference on Learning Representations_, 2021.
* [45] K. Nguyen, S. Nguyen, N. Ho, T. Pham, and H. Bui. Improving relational regularized autoencoders with spherical sliced fused Gromov-Wasserstein. In _International Conference on Learning Representations_, 2021.
* [46] S. Nietert, R. Sadhu, Z. Goldfeld, and K. Kato. Statistical, robustness, and computational guarantees for sliced wasserstein distances. _Advances in Neural Information Processing Systems_, 2022.
* [47] F.-P. Paty and M. Cuturi. Subspace robust Wasserstein distances. In _International Conference on Machine Learning_, pages 5072-5081, 2019.
* [48] G. Peyre and M. Cuturi. Computational optimal transport: With applications to data science. _Foundations and Trends(r) in Machine Learning_, 11(5-6):355-607, 2019.
* [49] G. Peyre and M. Cuturi. Computational optimal transport, 2020.
* [50] M. Rowland, J. Hron, Y. Tang, K. Choromanski, T. Sarlos, and A. Weller. Orthogonal estimation of Wasserstein distances. In _The 22nd International Conference on Artificial Intelligence and Statistics_, pages 186-195. PMLR, 2019.
* [51] T. Salimans, I. Goodfellow, W. Zaremba, V. Cheung, A. Radford, and X. Chen. Improved techniques for training GANs. _Advances in Neural Information Processing Systems_, 29, 2016.
* [52] T. Salimans, H. Zhang, A. Radford, and D. Metaxas. Improving GANs using optimal transport. In _International Conference on Learning Representations_, 2018.
* [53] F. Santambrogio. Optimal transport for applied mathematicians. _Birkauser, NY_, 55(58-63):94, 2015.
* [54] M. Sommerfeld and A. Munk. Inference for empirical wasserstein distances on finite spaces. _Journal of the Royal Statistical Society: Series B (Statistical Methodology)_, 80(1):219-238, 2018.
* [55] S. Sra. Directional statistics in machine learning: a brief review. _arXiv preprint arXiv:1605.00316_, 2016.
* [56] N. M. Temme. _Special functions: An introduction to the classical functions of mathematical physics_. John Wiley & Sons, 2011.
* [57] C. Villani. _Optimal transport: Old and New_. Springer, 2008.
* [58] C. Villani. _Optimal transport: old and new_, volume 338. Springer Science & Business Media, 2008.

* [59] M. J. Wainwright. _High-dimensional statistics: A non-asymptotic viewpoint_. Cambridge University Press, 2019.
* [60] J. Wu, Z. Huang, D. Acharya, W. Li, J. Thoma, D. P. Paudel, and L. V. Gool. Sliced Wasserstein generative models. In _Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition_, pages 3713-3722, 2019.
* [61] M. Yi and S. Liu. Sliced Wasserstein variational inference. In _Fourth Symposium on Advances in Approximate Bayesian Inference_, 2021.

## Supplement to "Markovian Sliced Wasserstein Distances: Beyond Independent Projections"

In this supplementary material, we present additional materials in Appendix A. In particular, we provide additional background on sliced Wasserstein variants in Appendix A.1, background on von Mises-Fisher distribution in Appendix A.2, algorithms for computing Markovian sliced Wasserstein distances in Appendix A.3, additional information about burned thinned MSW in Appendix A.4, and discussion on related works in Appendix A.5. We then provide skipped proofs in the main paper in Appendix B. Additional experiments are presented in Appendix C.

## Appendix A Additional Materials

### Background on Sliced Wasserstein Variants

We review computational aspects of sliced Wasserstein variants.

**Computation of Max sliced Wasserstein distance.** We demonstrate the empirical estimation of Max-SW via projected sub-gradient ascent algorithm in Algorithm 1. The initialization step for \(\hat{\theta}_{0}\) is rarely discussed in previous works. Normally, \(\hat{\theta}_{0}\) is randomly initialized by drawing from the uniform distribution over the unit-hypersphere. Many previous works [26, 44, 45, 42] use Adam update instead of the standard gradient ascent update for Max-SW. In this work, we find out that using the standard gradient ascent update is more stable and effective.

```
Input. Probability measures \(\mu,\nu\), learning rate \(\eta\), the order \(p\), and the number of iterations \(T\).  Initialize \(\hat{\theta}_{0}\). for\(t=1\) to \(T-1\)do \(\hat{\theta}_{t}=\hat{\theta}_{t-1}+\eta\cdot\nabla_{\hat{\theta}_{t-1}}\text{ W}_{p}(\hat{\theta}_{t-1}\sharp\mu,\hat{\theta}_{t-1}\sharp\nu)\) \(\hat{\theta}_{t}=\frac{\hat{\theta}_{t}}{\|\hat{\theta}_{t}\|_{2}}\) endfor Return.\(\text{W}_{p}(\hat{\theta}_{T}\sharp\mu,\hat{\theta}_{T}\sharp\nu)\)
```

**Algorithm 1** Max sliced Wasserstein distance

**K sliced Wasserstein distance.** We first review the Gram-Schmidt process in Algorithm 2. With the Gram-Schmidt process, the sampling from \(\mathcal{U}(\nabla_{K}(\mathbb{R}^{d}))\) can be done by sampling \(\theta_{1},\dots,\theta_{k}\) i.i.d from \(\mathcal{N}(0,I_{d})\) then applying the Gram-Schmidt process on them. Therefore, we present the computation of K sliced Wasserstein distance in Algorithm 3. We would like to recall that the original work of K-SW [50] uses only one set of orthogonal projecting directions. Here, we generalize the original work by using \(L\) sets of orthogonal projecting directions.

```
Input.\(K\) vectors \(\theta_{1},\dots,\theta_{K}\) \(\theta_{1}=\frac{\theta_{1}}{\|\theta_{1}\|_{2}}\) for\(k=2\) to \(K\)do for\(i=1\) to \(k-1\)do \(\theta_{k}=\theta_{k}-\frac{(\theta_{i},\theta_{k})}{(\theta_{i},\theta_{i})} \theta_{i}\) endfor \(\theta_{k}=\frac{\theta_{k}}{\|\theta_{k}\|_{2}}\) endfor Return.\(\theta_{1},\dots,\theta_{K}\)
```

**Algorithm 2** Gram-Schmidt process

**Max K sliced Wasserstein distance.** We now present the empirical estimation of Max-K-SW via projected sub-gradient ascent algorithm in Algorithm 4. This algorithm is first discussed in the original paper of Max-K-SW [12]. The optimization of Max-K-SW can be solved by using Riemannian optimization since the Stiefel manifold is a Riemannian manifold. However, to the best of our knowledge, Riemannian optimization has not been applied to Max-K-SW.

```
Input. Probability measures \(\mu,\nu\), the dimension \(d\), the order \(p\), the number of projections \(L\), the number of orthogonal projections \(K\). for\(l=1\) to \(L\)do  Draw \(\theta_{l1},\ldots,\theta_{lK}\) i.i.d from \(\mathcal{N}(0,I_{d})\). \(\theta_{l1},\ldots,\theta_{lK}=\text{Gram-Schmidt}(\theta_{l1},\ldots,\theta_{lK})\) endfor Return.\(\left(\frac{1}{LK}\sum_{l=1}^{L}\sum_{k=1}^{K}\text{W}_{p}^{p}(\theta_{lk} \sharp\mu,\theta_{lk}\sharp\nu)\right)^{\frac{1}{p}}\)
```

**Algorithm 4** Max-K sliced Wasserstein distance

### Von Mises-Fisher Distribution

We first start with the definition of von Mises-Fisher (vMF) distribution.

```
Input. location \(\epsilon\), concentration \(\kappa\), dimension \(d\), unit vector \(e_{1}=(1,0,..,0)\)  Draw \(v\sim\mathcal{U}(\mathbb{S}^{d-2})\) \(b\leftarrow\frac{-2\kappa+\sqrt{4\kappa^{2}+(d-1)^{2}}}{d-1}\), \(a\leftarrow\frac{(d-1)+2\kappa+\sqrt{4\kappa^{2}+(d-1)^{2}}}{4}\), \(m\leftarrow\frac{4ab}{(1+b)}-(d-1)\log(d-1)\) repeat  Draw \(\psi\sim\text{Beta}\left(\frac{1}{2}(d-1),\frac{1}{2}(d-1)\right)\) \(\omega\gets h(\psi,\kappa)=\frac{1-(1+b)\psi}{1-(1-b)\psi}\) \(t\leftarrow\frac{2ab}{1-(1-b)\psi}\)  Draw \(u\sim\mathcal{U}([0,1])\) until\((d-1)\log(t)-t+m\geq\log(u)\) \(h_{1}\leftarrow(\omega,\sqrt{1-\omega^{2}}w^{\top})^{\top}\) \(\epsilon^{\prime}\gets e_{1}-\epsilon\) \(u=\frac{\epsilon^{\prime}}{||\epsilon||^{2}}\) \(U=I-2uu^{\top}\) Output.\(Uh_{1}\)
```

**Algorithm 5** Sampling from vMF distribution

**Definition 3**.: _The von Mises-Fisher distribution (vMF)/[23] is a probability distribution on the unit hypersphere \(\mathbb{S}^{d-1}\) with the density function be:_

\[f(x|\epsilon,\kappa):=C_{d}(\kappa)\exp(\kappa\epsilon^{\top}x), \tag{9}\]

_where \(\epsilon\in\mathbb{S}^{d-1}\) is the location vector, \(\kappa\geq 0\) is the concentration parameter, and \(C_{d}(\kappa):=\frac{\kappa^{d/2-1}}{(2\pi)^{d/2}I_{d/2-1}(\kappa)}\) is the normalization constant. Here, \(I_{v}\) is the modified Bessel function of the first kind at order \(v\)[56]._

The vMF distribution is a continuous distribution, its mass concentrates around the mean \(\epsilon\), and its density decrease when \(x\) goes away from \(\epsilon\). When \(\kappa\to 0\), vMF converges in distribution to \(\mathcal{U}(\mathbb{S}^{d-1})\), and when \(\kappa\rightarrow\infty\), vMF converges in distribution to the Dirac distribution centered at \(\epsilon\)[55].

Sampling:We review the sampling process in Algorithm 5[13; 45]. The sampling process of vMF distribution is based on the rejection sampling procedure. It is worth noting that the sampling algorithm is doing reparameterization implicitly. However, we only use the algorithm to obtain random samples without estimating stochastic gradients.

### Algorithms for Computing Markovian Sliced Wasserstein Distances

We first start with the general computation of MSW in Algorithm 6. For the orthogonal-based transition in oMSW, we use \(\theta_{lt}\sim\mathcal{U}(\mathcal{S}_{\theta_{lt-1}}^{d-1})\) by first sampling \(\theta_{lt}^{\prime}\sim\mathcal{U}(\mathbb{S}^{d-1})\) then set \(\theta_{lt}=\theta_{lt}-\frac{\langle\theta_{lt}^{\prime},\theta_{lt}\rangle} {\langle\theta_{lt}^{\prime},\theta_{lt}^{\prime}\rangle}\theta_{lt}^{\prime}\) then normalize \(\theta_{lt}=\frac{\theta_{lt}}{||\theta_{lt}||_{2}}\). For deterministic input-award transition, iMSW, we set \(\theta_{lt}=\theta_{lt-1}+\eta\nabla_{\theta_{lt-1}}W_{p}(\theta_{lt-1}\sharp \mu,\theta_{lt-1}\sharp\nu)\) then normalize \(\theta_{lt}=\frac{\theta_{lt}}{||\theta_{lt}||_{2}}\). For probabilistic input-award transition, viMSW, \(\theta_{lt}\sim\text{vMF}(\theta_{t}|\epsilon=\text{Proj}_{\mathbb{S}^{d-1}} \theta_{lt}^{\prime},\kappa)\) with \(\theta_{lt}^{\prime}=\theta_{lt-1}+\eta\nabla_{\theta_{lt-1}}W_{p}(\theta_{lt- 1}\sharp\mu,\theta_{lt-1}\sharp\nu)\).

```
Input. Probability measures \(\mu,\nu\), the dimension \(d\), the order \(p\), the number of projections \(L\), and the number of timesteps \(T\). for\(l=1\) to \(L\)do  Draw \(\theta_{l0}\sim\sigma(\theta_{0})\) for\(t=1\) to \(T-1\)do  Draw \(\theta_{lt}\sim\sigma_{t}(\theta_{t}|\theta_{lt-1})\) endfor endfor Return. \(\left(\frac{1}{LT}\sum_{l=1}^{L}\sum_{t=1}^{T}\text{W}_{p}^{p}(\theta_{lt} \sharp\mu,\theta_{lt}\sharp\nu)\right)^{\frac{1}{p}}\)
```

**Algorithm 6** Markovian Sliced Wasserstein distance

### Burned Thinned Markovian Sliced Wasserstein Distance

We continue the discussion on burned thinned MSW in Section 3.3. We first start with the Monte Carlo estimation of burned thinned MSW.

Monte Carlo Estimation:We samples \(\theta_{11},\ldots,\theta_{L1}\sim\sigma_{1}(\theta_{1})\) for \(L\geq 1\), then we samples \(\theta_{lt}\sim\sigma_{t}(\theta_{t}|\theta_{lt-1})\) for \(t=1,\ldots,T\) and \(l=1,\ldots,L\). We then obtain samples \(\theta_{lt}^{\prime}\) by filtering out \(t<M\) and \(t\%N\neq 0\) from the set \(\{\theta_{lt}\}\) for \(l=1,\ldots,L\) and \(t=1,\ldots,T\). The Monte Carlo approximation of the burned-thinned Markovian sliced Wasserstein distance is:

\[\widehat{\text{MSW}}_{p,T,N,M}(\mu,\nu)=\left(\frac{N}{L(T-M)}\sum_{l=1}^{L} \sum_{t=1}^{(T-M)/N}W_{p}^{p}\left(\theta_{lt}^{\prime}\sharp\mu,\theta_{lt}^ {\prime}\sharp\nu\right)\right)^{\frac{1}{p}}. \tag{10}\]

Theoretical properties.We first state the following assumption: **A2.** Given \(T>M\geq 0\), \(N\geq 1\), the prior distribution \(\sigma_{1}(\theta_{1})\) and the transition distribution \(\sigma_{t}(\theta_{t}|\theta_{t-1})\) are chosen such that there exists marginals \(\sigma_{t}(\theta_{t})=\int_{t-}\sigma(\theta_{1},\ldots,\theta_{t})dt^{-}\) with \(t\geq M\) and \(t\%N=0\), \(t^{-}=\{t^{\prime}=1,\ldots,T|t^{\prime}\neq t\}\).

The assumption **A2** can be easily obtained by using vMF transition, e.g., in probabilistic input-award transition. From this assumption, we can derive theoretical properties of burned-thinned MSW including topological properties and statistical complexity.

**Proposition 4**.: _For any \(p\geq 1\), \(T\geq 1\), \(M\geq 0\), \(N\geq 1\), and dimension \(d\geq 1\), if **A2** holds, the burned thinned Markovian sliced Wasserstein distance \(\text{MSW}_{p,T,N,M}(\cdot,\cdot)\) is a valid metric on the space of probability measures \(\mathcal{P}_{p}(\mathbb{R}^{d})\), namely, it satisfies the (i) non-negativity, (ii) symmetry, (iii) triangle inequality, and (iv) identity._

The proof of Proposition 4 follows directly the proof of Theorem 1 in Appendix B.1.

**Proposition 5** (Weak Convergence).: _For any \(p\geq 1\), \(T\geq 1\), \(M\geq 0\), \(N\geq 1\), and dimension \(d\geq 1\), if **A2** holds, the convergence of probability measures in \(\mathcal{P}_{p}(\mathbb{R}^{d})\) under the burned thinned Markovian sliced Wasserstein distance \(\text{MSW}_{p,T,N,M}(\cdot,\cdot)\) implies weak convergence of probability measures and vice versa._The proof of Proposition 5 follows directly the proof of Theorem 2 in Appendix B.2.

**Proposition 6**.: _For any \(p\geq 1\) and dimension \(d\geq 1\), for any \(T\geq 1\), \(M\geq 0\), \(N\geq 1\) and \(\mu,\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\), \(\text{MSW}_{p,T,N,M}(\mu,\nu)\leq\text{Max-SW}_{p}(\mu,\nu)\leq\text{W}_{p}( \mu,\nu)\)._

The proof of Proposition 6 follows directly the proof of Proposition 1 in Appendix B.3.

**Proposition 7** (Sample Complexity).: _Let \(X_{1},X_{2},\ldots,X_{n}\) be i.i.d. samples from the probability measure \(\mu\) being supported on compact set of \(\mathbb{R}^{d}\). We denote the empirical measure \(\mu_{n}=\frac{1}{n}\sum_{i=1}^{n}\delta_{X_{i}}\). Then, for any \(p\geq 1\) and \(T\geq 1\), \(M\geq 0\), \(N\geq 1\), there exists a universal constant \(C>0\) such that_

\[\mathbb{E}[\text{MSW}_{p,T,N,M}(\mu_{n},\mu)]\leq C\sqrt{(d+1)\log n/n},\]

_where the outer expectation is taken with respect to the data \(X_{1},X_{2},\ldots,X_{n}\)._

The proof of Proposition 7 follows directly the proof of Proposition 2 in Appendix B.4.

**Proposition 8** (Monte Carlo error).: _For any \(p\geq 1\), \(T\geq 1\), \(M\geq 0\), \(N\geq 1\), dimension \(d\geq 1\), and \(\mu,\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\), we have:_

\[\mathbb{E}[\widehat{\text{MSW}}_{p,T,N,M}^{p}(\mu,\nu)-\text{MSW} _{p,T,N,M}^{p}(\mu,\nu)|\] \[\qquad\qquad\leq\frac{N}{\sqrt{LT}(T-M)}Var\left[\sum_{t=1}^{(T-M )/N}W_{p}^{p}\left(\theta_{t}^{\prime}\sharp\mu,\theta_{t}^{\prime}\sharp\nu \right)\right]^{\frac{1}{2}},\]

_where the variance is with respect to \(\sigma(\theta_{1}^{\prime},\ldots,\theta_{(T-M)/N}^{\prime})\)._

The proof of Proposition 8 follows directly the proof of Proposition 3 in Appendix B.5.

### Discussions on Related Works

**K-SW is autoregressive decomposition.** In MSW, we assume that the joint distribution over projecting directions has the first-order Markov structure: \(\sigma(\theta_{1},\ldots,\theta_{T})=\sigma_{1}(\theta_{1})\prod_{t=2}^{T} \sigma_{t}(\theta_{t}|\theta_{t-1})\). However, we can consider the full autoregressive decomposition \(\sigma(\theta_{1},\ldots,\theta_{T})=\sigma_{1}(\theta_{1})\prod_{t=2}^{T} \sigma_{t}(\theta_{t}|\theta_{1},\ldots,\theta_{t-1})\). Let \(T=K\) in K-SW, hence the transition distribution that is used in K-SW is: \(\sigma_{t}(\theta_{t}|\theta_{1},\ldots,\theta_{t-1})=\text{Gram-Schmidt}_{ \theta_{1},\ldots,\theta_{t-1}}\sharp\mathcal{U}(\mathbb{S}^{d-1}),\) where \(\text{Gram-Schmidt}_{\theta_{1},\ldots,\theta_{t-1}}(\theta_{t})\) denotes the Gram-Schmidt process update that applies on \(\theta_{t}\).

**Generalization of Max-K-SW.** Similar to Max-SW, we can derive a Markovian-based K-sliced Wasserstein distance that generalizes the idea of the projected gradient ascent update in Max-K-SW. However, the distance considers the transition on the Stiefel manifold instead of the unit hypersphere, hence, it will be more computationally expensive. Moreover, orthogonality might not be a good constraint. Therefore, the generalization of Max-K-SW might not have many advantages.

**Beyond the projected sub-gradient ascent update.** In the input-award transition for MSW, we utilize the projected sub-gradient update as the transition function to create a new projecting direction. Therefore, we could other optimization techniques such as momentum, adaptive stepsize, and so on to create the transition function. We will leave the investigation about this direction to future work.

**Applications to other sliced Wasserstein variants.** The Markovian approach can be applied to other variants of sliced Wasserstein distances e.g., generalized sliced Wasserstein [26], augmented sliced Wasserstein distance [10], projected robust Wasserstein (PRW) [47, 32, 22] (\(k>1\) dimensional projection), convolution sliced Wasserstein [43], sliced partial optimal transport [6, 2], and so on.

**Markovian sliced Wasserstein distances in other applications.** We can apply MSW to the setting in [31] which is an implementation technique that utilizes both RAM and GPUs' memory for training sliced Wasserstein generative models. MSW can also replace sliced Wasserstein distance in pooling in [38]. Similarly, MSW can be used in applications that exist sliced Wasserstein distance e.g., clustering [28], Bayesian inference [39, 61], domain adaptation [60], and so on.

Proofs

### Proof of Theorem 1

**(i), (ii)**: the MSW is an expectation of the one-dimensional Wasserstein distance hence the non-negativity and symmetry properties of the MSW follow directly by the non-negativity and symmetry of the Wasserstein distance.

**(iii)** From the definition of MSW in Definition 1, given three probability measures \(\mu_{1},\mu_{2},\mu_{3}\in\mathcal{P}_{p}(\mathbb{R}^{d})\) we have:

\[\text{MSW}_{p,T}(\mu_{1},\mu_{3}) =\left(\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})}\left[ \frac{1}{T}\sum_{t=1}^{T}W_{p}^{p}\left(\theta_{t}\sharp\mu_{1},\theta_{t} \sharp\mu_{3}\right)\right]\right)^{\frac{1}{p}}\] \[\leq\left(\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})} \left[\frac{1}{T}\sum_{t=1}^{T}\left(W_{p}\left(\theta_{t}\sharp\mu_{1},\theta _{t}\sharp\mu_{2}\right)+W_{p}\left(\theta_{t}\sharp\mu_{2},\theta_{t}\sharp \mu_{3}\right)\right)^{p}\right]\right)^{\frac{1}{p}}\] \[\leq\left(\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})} \left[\frac{1}{T}\sum_{t=1}^{T}W_{p}^{p}\left(\theta_{t}\sharp\mu_{1},\theta_{ t}\sharp\mu_{2}\right)\right]\right)^{\frac{1}{p}}\] \[\quad+\left(\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})} \left[\frac{1}{T}\sum_{t=1}^{T}W_{p}^{p}\left(\theta_{t}\sharp\mu_{2},\theta_{ t}\sharp\mu_{3}\right)\right]\right)^{\frac{1}{p}}\] \[=\text{MSW}_{p,T}(\mu_{1},\mu_{2})+\text{MSW}_{p,T}(\mu_{2},\mu_{ 3}),\]

where the first inequality is due to the triangle inequality of Wasserstein distance and the second inequality is due to the Minkowski inequality. We complete the triangle inequality proof.

**(iv)** We need to show that \(\text{MSW}_{p,T}(\mu,\nu)=0\) if and only if \(\mu=\nu\). First, from the definition of MSW, we obtain directly \(\mu=\nu\) implies \(\text{MSW}_{p,T}(\mu,\nu)=0\). For the reverse direction, we use the same proof technique in [8]. If \(\text{MSW}_{p,T}(\mu,\nu)=0\), we have \(\int_{\mathbb{S}(d-1)^{\otimes T}}\frac{1}{T}\sum_{t=1}^{T}\text{W}_{p}\left( \theta_{t}\sharp\mu,\theta_{t}\sharp\nu\right)\text{d}\sigma(\theta_{1:T})=0\). If **A1** holds, namely, the prior distribution \(\sigma_{1}(\theta_{1})\) is supported on all the unit-hypersphere or exists a transition distribution \(\sigma_{t}(\theta_{t}|\theta_{t-1})\) is supported on all the unit-hypersphere, we have \(W_{p}(\theta_{t}^{*}\mu,\theta\sharp\nu)=0\) for all \(\theta\in\mathbb{S}^{d-1}\) where \(\sigma\) denotes the prior or the transition distribution that satisfies the assumption **A1**. From the identity property of the Wasserstein distance, we obtain \(\theta_{t}^{*}\mu=\theta_{t}^{*}\nu\) for \(\sigma\)-a.e \(\theta\in\mathbb{S}^{d-1}\). Therefore, for any \(t\in\mathbb{R}\) and \(\theta\in\mathbb{S}^{d-1}\), we have:

\[\mathcal{F}[\mu](t\theta) =\int_{\mathbb{R}^{d}}e^{-it\langle\theta,x\rangle}d\mu(x)=\int_ {\mathbb{R}}e^{-itz}d\theta_{t}\sharp\mu(z)=\mathcal{F}[\theta\sharp\mu](t)\] \[=\mathcal{F}[\theta\sharp\nu](t)=\int_{\mathbb{R}}e^{-itz}d\theta \sharp\nu(z)=\int_{\mathbb{R}^{d}}e^{-it\langle\theta,x\rangle}d\nu(x)= \mathcal{F}[\nu](t\theta),\]

where \(\mathcal{F}[\gamma](w)=\int_{\mathbb{R}^{d}}e^{-i\langle w,x\rangle}d\gamma(x)\) denotes the Fourier transform of \(\gamma\in\mathcal{P}(\mathbb{R}^{d^{\prime}})\). By the injectivity of the Fourier transform, we obtain \(\mu=\nu\) which concludes the proof.

### Proof of Theorem 2

Our goal is to show that for any sequence of probability measures \((\mu_{k})_{k\in\mathbb{N}}\) and \(\mu\) in \(\mathcal{P}_{p}(\mathbb{R}^{d})\), \(\lim_{k\rightarrow+\infty}\text{MSW}_{p,T}(\mu_{k},\mu)=0\) if and only if for any continuous and bounded function \(f:\mathbb{R}^{d}\rightarrow\mathbb{R}\), \(\lim_{k\rightarrow+\infty}\int f\text{d}\mu_{k}=\int f\text{d}\mu\). The proof follows the techniques in [41]. We first state the following lemma.

**Lemma 1**.: _For any \(T\geq 1\), and dimension \(d\geq 1\), if **A1** holds and a sequence of probability measures \((\mu_{k})_{k\in\mathbb{N}}\) satisfies \(\lim_{k\rightarrow+\infty}\text{MSW}_{1,T}(\mu_{k},\mu)=0\) with \(\mu\) in \(\mathcal{P}(\mathbb{R}^{d})\), there exists an increasing function \(\phi:\mathbb{N}\rightarrow\mathbb{N}\) such that the subsequence \(\left(\mu_{\phi(k)}\right)_{k\in\mathbb{N}}\) converges weakly to \(\mu\)._

Proof.: We are given that \(\lim_{k\rightarrow+\infty}\text{MSW}_{1,T}(\mu_{k},\mu)=0\), therefore \(\lim_{k\rightarrow\infty}\int_{\mathbb{S}^{(d-1)^{\otimes T}}}\frac{1}{T}\sum _{t=1}^{T}\text{W}_{1}\left(\theta_{t}\sharp\mu_{k},\theta_{t}\sharp\mu\right) \text{d}\sigma(\theta_{1:T})=0\). If **A1** holds, namely, the prior 

[MISSING_PAGE_EMPTY:20]

\(g_{1/\gamma}(x)\int_{\mathbb{R}^{d}}|f(w)|\mathrm{d}w\) and \(\left|\mathcal{F}[f](x)g_{1/\gamma}(x)\Phi_{\mu}(x)\right|\leq g_{1/\gamma}(x) \int_{\mathbb{R}^{d}}|f(w)|\mathrm{d}w\). Using the proved result of \(\lim_{k\to\infty}\Phi_{\mu_{\phi(k)}}(z)=\Phi_{\mu}(z)\) and Lebesgue's Dominated Convergence Therefore, we obtain

\[\lim_{k\to\infty}\int_{\mathbb{R}^{d}}f_{\gamma}(z)\mathrm{d}\mu_ {\phi(k)}(z) =\lim_{k\to\infty}\left(2\pi\gamma^{2}\right)^{-d/2}\int_{\mathbb{ R}^{d}}\mathcal{F}[f](x)g_{1/\gamma}(x)\Phi_{\mu_{\phi(k)}}(x)\mathrm{d}x\] \[=\left(2\pi\gamma^{2}\right)^{-d/2}\int_{\mathbb{R}^{d}}\mathcal{ F}[f](x)g_{1/\gamma}(x)\Phi_{\mu_{\phi(k)}}(x)\mathrm{d}x\] \[=\int_{\mathbb{R}^{d}}f_{\gamma}(z)\mathrm{d}\mu(z).\]

Moreover, we have:

\[\lim_{\gamma\to 0}\limsup_{k\to+\infty}\left|\int_{\mathbb{R}^{d}}f(z) \mathrm{d}\mu_{\phi(k)}(z)-\int_{\mathbb{R}^{d}}f(z)\mathrm{d}\mu(z)\right|\] \[\leq\lim_{\gamma\to 0}\limsup_{k\to+\infty}\left[2\sup_{z\in \mathbb{R}^{d}}|f(z)-f_{\gamma}(z)|+\left|\int_{\mathbb{R}^{d}}f_{\gamma}(z) \mathrm{d}\mu_{\phi(k)}(z)-\int_{\mathbb{R}^{d}}f_{\gamma}(z)\mathrm{d}\mu(z) \right|\right]\] \[=\lim_{\gamma\to 0}2\sup_{z\in\mathbb{R}^{d}}|f(z)-f_{\gamma}(z)|=0,\]

which implies \(\left(\mu_{\phi(k)}\right)_{k\in\mathbb{N}}\) converges weakly to \(\mu\). 

We now continue the proof of Theorem 2. We first show that if \(\lim_{k\to\infty}\text{MSW}_{p,T}(\mu_{k},\mu)=0,\ \left(\mu_{k}\right)_{k\in \mathbb{N}}\) converges weakly to \(\mu\). We consider a sequence \(\left(\mu_{\phi(k)}\right)_{k\in\mathbb{N}}\) such that \(\lim_{k\to\infty}\text{MSW}_{p,T}(\mu_{k},\mu)=0\) and we suppose \(\left(\mu_{\phi(k)}\right)_{k\in\mathbb{N}}\) does not converge weakly to \(\mu\). Therefore, let \(d_{\mathcal{P}}\) be the Levy-Prokhorov metric, \(\lim_{k\to\infty}d_{\mathcal{P}(\mu_{k},\mu)}\neq 0\) that implies there exists \(\varepsilon>0\) and a subsequence \(\left(\mu_{\psi(k)}\right)_{k\in\mathbb{N}}\) with an increasing function \(\psi:\mathbb{N}\to\mathbb{N}\) such that for any \(k\in\mathbb{N}\): \(d_{\mathcal{P}}(\mu_{\psi(k)},\mu)\geq\varepsilon\). However, we have

\[\text{MSW}_{p,T}(\mu,\nu) =\left(\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})}\left[ \frac{1}{T}\sum_{t=1}^{T}W_{p}^{p}\left(\theta_{t}\sharp\mu,\theta_{t}\sharp \nu\right)\right]\right)^{\frac{1}{p}}\] \[\geq\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})}\left[ \frac{1}{T}\sum_{t=1}^{T}W_{p}\left(\theta_{t}\sharp\mu,\theta_{t}\sharp\nu \right)\right]\] \[\geq\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})}\left[ \frac{1}{T}\sum_{t=1}^{T}W_{1}\left(\theta_{t}\sharp\mu,\theta_{t}\sharp\nu \right)\right]=\text{MSW}_{1,T}(\mu,\nu),\]

by the Holder inequality with \(\mu,\nu\in\mathbb{P}_{p}(\mathbb{R}^{d})\). Therefore, \(\lim_{k\to\infty}\text{MSW}_{1,T}(\mu_{\psi(k)},\mu)=0\) which implies that there exists s a subsequence \(\left(\mu_{\phi(\psi(k))}\right)_{k\in\mathbb{N}}\) with an increasing function \(\phi:\mathbb{N}\to\mathbb{N}\) such that \(\left(\mu_{\phi(\psi(k))}\right)_{k\in\mathbb{N}}\) converges weakly to \(\mu\) by Lemma 1. Hence, \(\lim_{k\to\infty}d_{\mathcal{P}}\left(\mu_{\phi(\psi(k))},\mu\right)=0\) which contradicts our assumption. We conclude that if \(\lim_{k\to\infty}\text{MSW}_{p,T}(\mu_{k},\mu)=0\), \(\left(\mu_{k}\right)_{k\in\mathbb{N}}\) converges weakly to \(\mu\).

Now, we show that if \(\left(\mu_{k}\right)_{k\in\mathbb{N}}\) converges weakly to \(\mu\), we have \(\lim_{k\to\infty}\text{MSW}_{p,T}(\mu_{k},\mu)=0\). By the continuous mapping theorem, we obtain \(\left(\theta\sharp\mu_{k}\right)_{k\in\mathbb{N}}\) converges weakly to \(\theta\sharp\mu\) for any \(\theta\in\mathbb{S}^{d-1}\). Since the weak convergence implies the convergence under the Wasserstein distance [58], we obtain \(\lim_{k\to\infty}W_{p}(\theta\sharp\mu_{k},\mu)=0\). Moreover, the Wasserstein distance is also bounded, hence the bounded convergence theorem:

\[\lim_{k\to\infty}\text{MSW}_{p,T}^{p}(\mu_{k},\mu) =\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})}\left[\frac{ 1}{T}\sum_{t=1}^{T}W_{p}^{p}\left(\theta_{t}\sharp\mu_{k},\theta_{t}\sharp\mu \right)\right]\] \[=\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})}\left[\frac{ 1}{T}\sum_{t=1}^{T}0\right]=0.\]

By the continuous mapping theorem with function \(x\to x^{1/p}\), we obtain \(\lim_{k\to\infty}\text{MSW}_{p,T}(\mu_{k},\mu)\to 0\) which completes the proof.

### Proof of Proposition 1

**(i)** We recall the definition of Max-SW:

\[\text{Max-SW}_{p}(\mu,\nu)=\max_{\theta\in\mathbb{S}^{d-1}}W_{p}(\theta_{\sharp} \mu,\theta_{\sharp}^{*}\nu).\]

Let \(\theta^{*}=\text{argmax}_{\theta\in\mathbb{S}^{d-1}}W_{p}(\theta_{\sharp}^{*}\mu,\theta_{\sharp}^{*}\nu)\), from Definition 1, for any \(p\geq 1\), \(T\geq 1\), dimension \(d\geq 1\), and \(\mu,\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\) we have:

\[\text{MSW}_{p,T}(\mu,\nu) =\left(\mathbb{E}_{(\theta_{1:T})\sim\sigma(\theta_{1:T})}\left[ \frac{1}{T}\sum_{t=1}^{T}W_{p}^{p}\left(\theta_{\sharp}\sharp\mu,\theta_{ \sharp}\nu\right)\right]\right)^{\frac{1}{p}}\] \[\leq\left(\frac{1}{T}\sum_{t=1}^{T}W_{p}^{p}\left(\theta^{*} \sharp\mu,\theta^{*}\sharp\nu\right)\right)^{\frac{1}{p}}=W_{p}\left(\theta^{ *}\sharp\mu,\theta^{*}\sharp\nu\right)=\text{Max-SW}_{p}(\mu,\nu).\]

Furthermore, by applying the Cauchy-Schwartz inequality, we have:

\[\text{Max-SW}_{p}^{p}(\mu,\nu) =\max_{\theta\in\mathbb{S}^{d-1}}\left(\inf_{\pi\in\Pi(\mu,\nu)} \int_{\mathbb{R}^{d}}\left|\theta^{\top}x-\theta^{\top}y\right|^{p}d\pi(x,y)\right)\] \[\leq\max_{\theta\in\mathbb{S}^{d-1}}\left(\inf_{\pi\in\Pi(\mu,\nu) }\int_{\mathbb{R}^{d}\times\mathbb{R}^{d}}\|\theta\|^{p}\|x-y\|^{p}d\pi(x,y)\right)\] \[=\inf_{\pi\in\Pi(\mu,\nu)}\int_{\mathbb{R}^{d}\times\mathbb{R}^{d} }\|\theta\|^{p}\|x-y\|^{p}d\pi(x,y)\] \[=\inf_{\pi\in\Pi(\mu,\nu)}\int_{\mathbb{R}^{d}\times\mathbb{R}^{d }}\|x-y\|^{p}d\pi(x,y)\] \[=W_{p}^{p}(\mu,\nu),\]

which completes the proof.

**(ii)** This result can be directly obtained from the definitions of MSW and SW.

### Proof of Proposition 2

In this proof, we denote \(\Theta\subset\mathbb{R}^{d}\) as the compact set of the probability measure \(\mu\). From Proposition 1, we find that

\[\mathbb{E}[\text{MSW}_{p,T}(\mu_{n},\mu)]\leq\mathbb{E}\left[\text{Max-SW}_{p} (\mu_{n},\mu)\right].\]

Therefore, the proposition follows as long as we can demonstrate that

\[\mathbb{E}[\text{Max-SW}_{p}(\mu_{n},\mu)]\leq C\sqrt{(d+1)\log_{2}n/n}\]

where \(C>0\) is some universal constant and the outer expectation is taken with respect to the data. The proof for this result follows from the proof of Proposition 3 in [43]. Here, we provide the proof for the completeness. By defining \(F_{n,\theta}\) and \(F_{\theta}\) as the cumulative distributions of \(\theta_{\sharp}^{*}\mu_{n}\) and \(\theta_{\sharp}^{*}\mu\), the closed-form expression of the Wasserstein distance in one dimension leads to the following equations and inequalities:

\[\text{Max-SW}_{p}^{p}(\mu_{n},\mu) =\max_{\theta\in\mathbb{S}^{d-1}}\int_{0}^{1}|F_{n,\theta}^{-1}( u)-F_{\theta}^{-1}(u)|^{p}du\] \[=\max_{\theta\in\mathbb{R}^{d}:\|\theta\|=1}\int_{0}^{1}|F_{n, \theta}^{-1}(u)-F_{\theta}^{-1}(u)|^{p}du\] \[\leq\text{diam}(\Theta)\max_{\theta\in\mathbb{R}^{d}:\|\theta\| \leq 1}|F_{n,\theta}(x)-F_{\theta}(x)|^{p}.\]

We can check that

\[\max_{\theta\in\mathbb{R}^{d}:\|\theta\|\leq 1}|F_{n,\theta}(x)-F_{\theta}(x)|= \sup_{B\in\mathcal{B}}|\mu_{n}(B)-\mu(B)|,\]where \(\mathcal{B}\) is the set of half-spaces \(\{z\in\mathbb{R}^{d}:\theta^{\top}z\leq x\}\) for all \(\theta\in\mathbb{R}^{d}\) such that \(\|\theta\|\leq 1\). From VC inequality (Theorem 12.5in [16]), we have

\[\mathbb{P}\left(\sup_{B\in\mathcal{B}}|\mu_{n}(B)-\mu(B)|>t\right)\leq 8S( \mathcal{B},n)e^{-nt^{2}/32}.\]

with \(S(\mathcal{B},n)\) is the growth function which is upper bounded by \((n+1)^{VC(\mathcal{B})}\) due to the Sauer Lemma (Proposition 4.18 in [59]). From Example 4.21 in [59], we get \(VC(\mathcal{B})=d+1\).

Let \(8S(\mathcal{B},n)e^{-nt^{2}/32}\leq\delta\), we have \(t^{2}\geq\frac{32}{n}\log\left(\frac{8S(\mathcal{B},n)}{\delta}\right)\). Therefore, we obtain

\[\mathbb{P}\left(\sup_{B\in\mathcal{B}}|\mu_{n}(B)-\mu(B)|\leq\sqrt{\frac{32}{n }\log\left(\frac{8S(\mathcal{B},n)}{\delta}\right)}\right)\geq 1-\delta,\]

Now we convert the probability statement to inequality with expectation. Using the Jensen inequality and the tail sum expectation for non-negative random variable, we have:

\[\mathbb{E}\left[\sup_{B\in\mathcal{B}}|\mu_{n}(B)-\mu(B)|\right]\] \[\leq\sqrt{\mathbb{E}\left[\sup_{B\in\mathcal{B}}|\mu_{n}(B)-\mu(B )|\right]^{2}}=\sqrt{\int_{0}^{\infty}\mathbb{P}\left(\left(\sup_{B\in \mathcal{B}}|\mu_{n}(B)-\mu(B)|\right)^{2}>t\right)dt}\] \[=\sqrt{\int_{0}^{u}\mathbb{P}\left(\left(\sup_{B\in\mathcal{B}}| \mu_{n}(B)-\mu(B)|\right)^{2}>t\right)dt+\int_{u}^{\infty}\mathbb{P}\left( \left(\sup_{B\in\mathcal{B}}|\mu_{n}(B)-\mu(B)|\right)^{2}>t\right)dt}\] \[\leq\sqrt{\int_{0}^{u}1dt+\int_{u}^{\infty}8S(\mathcal{B},n)e^{- nt/32}dt}=\sqrt{u+256S(\mathcal{B},n)\frac{e^{-nu/32}}{n}}.\]

Let \(f(u)=u+256S(\mathcal{B},n)\frac{e^{-nu/32}}{n}\), we have \(f^{\prime}(u)=1+8S(\mathcal{B},n)e^{-nu/32}\), hence the minima \(u^{\star}=\frac{32\log(8S(\mathcal{B},n))}{n}\). Since the inequality holds for any \(u\), we have:

\[\mathbb{E}\left[\sup_{B\in\mathcal{B}}|\mu_{n}(B)-\mu(B)|\right]\leq\sqrt{ \frac{32\log(8S(\mathcal{B},n))}{n}+32}\leq C\sqrt{\frac{(d+1)\log(n+1)}{n}},\]

by using Sauer Lemma. Putting the above results together leads to

\[\mathbb{E}[\text{Max-SW}_{p}(\mu_{n},\mu)]\leq C\sqrt{(d+1)\log_{2}n/n},\]

where \(C>0\) is some universal constant. As a consequence, we obtain the conclusion of the proposition.

### Proof of Proposition 3

For any \(p\geq 1\), \(T\geq 1\), dimension \(d\geq 1\), and \(\mu,\nu\in\mathcal{P}_{p}(\mathbb{R}^{d})\), using the Holder's inequality, we have:

\[\mathbb{E}|\widehat{\text{MSW}}_{p,T}^{p}(\mu,\nu)-\text{MSW}_{p,T}^{p}(\mu,\nu)|\] \[=\left(\mathbb{E}\left|\frac{1}{TL}\sum_{t=1}^{T}\sum_{l=1}^{L} \text{W}_{p}^{p}(\theta_{tt}\sharp\mu,\theta_{tt}\sharp\nu)-\mathbb{E}_{\theta _{1:T}\sim\sigma(\theta_{1:T})}\left[\frac{1}{T}\sum_{t=1}^{T}W_{p}^{p}\left( \theta_{t}\sharp\mu,\theta_{t}\sharp\nu\right)\right]\right|^{2}\right)^{\frac {1}{2}}\] \[=\left(Var\left[\frac{1}{TL}\sum_{t=1}^{T}\sum_{l=1}^{L}W_{p}^{p }\left(\theta_{tt}\sharp\mu,\theta_{tt}\sharp\nu\right)\right]\right)^{\frac {1}{2}}\] \[=\frac{1}{T\sqrt{L}}Var\left[\sum_{t=1}^{T}W_{p}^{p}\left(\theta _{t}\sharp\mu,\theta_{t}\sharp\nu\right)\right]^{\frac{1}{2}},\]

which completes the proof.

[MISSING_PAGE_FAIL:24]

see that SW with \(L=10\) is worse than oMSW, iMSW, and viMSW with \(L=2,T=5\) (10 total projections). Increasing the number of projections to 100, SW gets better, however, its Wasserstein-2 score is still higher than the scores of iMSW and viMSW while its computational time is bigger. Similarly, Max-(K)-SW with \(T=100\) is better than Max-(K)-SW with \(T=5\) and \(T=10\), however, it is still worse than iMSW and viMSW in terms of computation and performance. For burning and thinning, we see that the technique can help improve the computation considerably. More importantly, the burning and thinning techniques do not reduce the performance too much. For iMSW, increasing \(L\) and \(T\) leads to a better flow. For the same number of total projections e.g., \(10\), \(L=2,T=5\) is better than \(L=5,T=2\). For viMSW, it usually performs better than iMSW, however, its computation is worse due to the sampling complexity of the vMF distribution. We vary the concentration parameter \(\kappa\in\{10,50,100\}\) and find that \(\kappa=50\) is the best. Hence, it might suggest that a good balance between heading to the "max" projecting direction and exploring the space of projecting directions is the best strategy.

### Color Transfer

**Framework.** In our experiments, we first compress the color palette of the source image and the target image to 3000 colors by using K-Mean clustering. After that, the color transfer application is

\begin{table}
\begin{tabular}{l|c|c|c|c|c} \hline Distances & Wasserstein-2 (\(\downarrow\)) & Time (\(\downarrow\)) & Distances & Wasserstein-2 (\(\downarrow\)) & Time (\(\downarrow\)) \\ \hline SW (L=10) & \(0.0113\times 10^{-2}\) & 0.85 & SW (L=100) & \(0.0096\times 10^{-2}\) & 4.32 \\ \hline Max-SW (T=5) & \(0.0231\times 10^{-2}\) & 1.02 & Max-SW (T=100) & \(0.0083\times 10^{-2}\) & 10.46 \\ \hline K-SW (L=5,K=2) & \(0.0104\times 10^{-2}\) & 0.92 & K-SW (L=20,K=2) & \(0.0096\times 10^{-2}\) & 1.97 \\ \hline Max-K-SW (K=2,T=5) & \(0.0152\times 10^{-2}\) & 1.41 & Max-K-SW (K=2,T=100) & \(0.0083\times 10^{-2}\) & 10.46 \\ \hline iMSW (L=1,T=5) & \(0.0109\times 10^{-2}\) & 1.07 & iMSW (L=5,T=5) & \(0.0055\times 10^{-2}\) & 2.44 \\ iMSW (L=2,T=10) & \(0.0052\times 10^{-2}\) & 2.79 & iMSW (L=5,T=2) & \(0.0071\times 10^{-2}\) & 1.14 \\ iMSW (L=2,T=5,M=4) & \(0.0101\times 10^{-2}\) & 1.2 & iMSW (L=2,T=5,M=2) & \(0.0055\times 10^{-2}\) & 1.25 \\ iMSW (L=2,T=5,M=0,N=2) & \(0.0066\times 10^{-2}\) & 1.28 & iMSW (L=2,T=5,M=2,N=2) & \(0.0072\times 10^{-2}\) & 1.19 \\ \hline viMSW (L=2,T=5,\(\kappa\)=10) & \(0.0052\times 10^{-2}\) & 3.12 & viMSW (L=2,T=5,\(\kappa\)=100) & \(0.0053\times 10^{-2}\) & 2.76 \\ \hline \end{tabular}
\end{table}
Table 3: Summary of Wasserstein-2 scores, computational time in second (s) of different distances in gradient flow application.

Figure 5: The figures show the source image, the target image, and transferred images from different distances. The corresponding Wasserstein-2 distance between the empirical distribution over transferred color palates and the empirical distribution over the target color palette and the computational time (in second) is reported at the top of the figure. The color palates are given below the corresponding images.

conducted by using Algorithm 8 which is a modified version of the gradient flow algorithm since the color palette contains only positive integer in \(\{0,\ldots,255\}\). The flow can be seen as an incomplete transportation map that maps from the source color palette to a color palette that is close to the target color palette. This is quite similar to the iterative distribution transfer algorithm [8], however, the construction of the iterative map is different.

**Visualization of transferred images.** We show the source image, the target image, and the corresponding transferred images from distances in Figure 5 and Figure 6. The color palates are given below the corresponding images. The corresponding Wasserstein-2 distance between the empirical distribution over transferred color palates and the empirical distribution over the target color palette and the computational time (in second) is reported at the top of the figure. First, we observe that

Figure 6: The figures show the source image, the target images, and transferred images from different distances. The corresponding Wasserstein-2 distance between the empirical distribution over transferred color palates and the empirical distribution over the target color palette and the computational time (in second) is reported at the top of the figure. The color palates are given below the corresponding images.

the qualitative comparison (transferred images and color palette) is consistent with the Wasserstein scores. We observe that iMSW and viMSW have their transferred images closer to the target image in terms of color than other distances. More importantly, iMSW and viMSW are faster than other distances. Max-SW and Max-K-SW do not perform well in this application, namely, they are slow and give high Wasserstein distances. For oMSW, it is comparable to SW and K-SW while being faster.

**Studies on hyper-parameters.** In addition to result in Figure 5, we run color transfer with other settings of distances in Table 4. From the table, increasing the number of projections \(L\) lead to a better result for SW and K-SW. However, they are still worse than iMSW and viMSW with a smaller number of projections. Similarly, increasing \(T\) helps Max-SW, Max-K-SW, and iMSW better. As discussed in the main paper, the burning and thinning technique improves the computation and sometimes enhances the performance.

### Deep Generative Models

**Framework.** We follow the generative modeling framework from [20; 42]. Here, we state an adaptive formulation of the framework. We are given a data distribution \(\mu\in\mathcal{P}(\mathcal{X})\) through its random samples (data). Our goal is to estimate a parametric distribution \(\nu_{\phi}\) that belongs to a family of distributions indexed by parameters \(\phi\) in a parameter space \(\Phi\). Deep generative modeling is interested in constructing \(\nu_{\phi}\) via pushforward measure. In particular, \(\nu_{\phi}\) is implicitly represented by pushing forward a random noise \(\nu_{0}\in\mathcal{P}(\mathcal{Z})\) e.g., standard multivariable Gaussian, through a parametric function \(G_{\phi}:\mathcal{Z}\rightarrow\mathcal{X}\) (a neural network with weights \(\phi\)). To estimate \(\phi\) (\(\nu_{\phi}\)), the expected distance estimator [54; 41] is used:

\[\text{argmin}_{\phi\in\Phi}\mathbb{E}_{(X,Z)\sim\mu^{\otimes m}\otimes\nu_{ \phi}^{\otimes m}}[\mathcal{D}(P_{X},P_{G_{\phi}(Z)})],\]

where \(m\geq 1\), \(\mathcal{D}\) can be any distance on space of probability measures, \(\mu^{\otimes}\) is the product measures, namely, \(\bar{X}=(x_{1},\ldots,x_{m})\sim\mu^{\otimes}\) is equivalent to \(x_{i}\sim\mu\) for \(i=1,\ldots,m\), and \(P_{X}=\frac{1}{m}\sum_{i=1}^{m}\delta_{x_{i}}\). Similarly, \(Z=(z_{1},\ldots,z_{m})\) with \(z_{i}\sim\nu_{0}\) for \(i=1,\ldots,m\), and \(G_{\phi}(Z)\) is the output of the neural work given the input mini-batch \(Z\).

By using Wasserstein distance, sliced Wasserstein distance, and their variants as the distance \(\mathcal{D}\), we obtain the corresponding estimators. However, applying directly those estimators to natural image data cannot give perceptually good results [20; 15]. The reason is that Wasserstein distance, sliced Wasserstein distances, and their variants require a ground metric as input e.g., \(\mathcal{L}_{2}\), however, those ground metrics are not meaningful on images. Therefore, previous works propose using a function that maps the original data space \(\mathcal{X}\) to a feature space \(\mathcal{F}\) where the \(\mathcal{L}_{2}\) norm is meaningful [52]. We denote the feature function \(F_{\gamma}:\mathcal{X}\rightarrow\mathcal{F}\). Now the estimator becomes:

\[\text{argmin}_{\phi\in\Phi}\mathbb{E}_{(X,Z)\sim\mu^{\otimes m}\otimes\nu_{ \phi}^{\otimes m}}[\mathcal{D}(P_{F_{\gamma}(X)},P_{F_{\gamma}(G_{\phi}(Z))} )].\]

\begin{table}
\begin{tabular}{l|c|c|c|c|c} \hline \hline Distances & Wasserstein-2 (\(\downarrow\)) & Time (\(\downarrow\)) & Distances & Wasserstein-2 (\(\downarrow\)) & Time (\(\downarrow\)) \\ \hline SW (L=45) & 414.51 & 41.77 & SW (L=15) & 421.5 & 12.96 \\ \hline Max-SW (T=45) & 449.42 & 59.13 & Max-SW (T=15) & 450.37 & 19.03 \\ \hline K-SW (L=15,K=3) & 411.74 & 38.86 & K-SW (L=5,K=3) & 413.16 & 14.2 \\ \hline Max-K-SW (K=3,T=15) & 479.43 & 53.95 & Max-K-SW (K=3,T=5) & 510.43 & 17.46 \\ \hline oMSW (L=3,T=5) & 415.06 & 13.69 & oMSW (L=3,T=15) & 414.29 & 38.51 \\ \hline iMSW (L=3,T=5) & 16.97 & 25.91 & iMSW (L=3,T=15) & 15.23 & 79.47 \\ iMSW (L=5,T=5), & 21.63 & 39.82 & iMSW (L=5,T=3) & 24.02 & 22.27 \\ iMSW (L=3,T=15,M=14) & 26.23 & 48.08 & iMSW (L=3,T=15,M=10) & 18.67 & 55.55 \\ iMSW (L=3,T=15,M=0,N=2) & 16.6 & 62.66 & iMSW (L=3,T=15,M=10,N=2) & 19.2 & 50.1 \\ \hline viMSW (L=3,T=5,\(\kappa\)=50) & 16.48 & 29.14 & viMSW (L=3,T=5,\(\kappa\)=100) & 16.49 & 29.06 \\ \hline \hline \end{tabular}
\end{table}
Table 4: Summary of Wasserstein-2 scores, computational time in second (s) of different distances in the color transfer application.

The above optimization can be solved by stochastic gradient descent algorithm with the following stochastic gradient estimator:

\[\nabla_{\phi}\mathbb{E}_{(X,Z)\sim\mu^{\otimes m}\otimes\nu_{0}^{ \otimes m}}[\mathcal{D}(P_{F_{\gamma}(X)},P_{F_{\gamma}(G_{\phi}(Z)}))] =\mathbb{E}_{(X,Z)\sim\mu^{\otimes m}\otimes\nu_{0}^{\otimes m}}[ \nabla_{\phi}\mathcal{D}(P_{F_{\gamma}(X)},P_{F_{\gamma}(G_{\phi}(Z)}))]\] \[\approx\frac{1}{K}\sum_{k=1}^{K}\nabla_{\phi}\mathcal{D}(P_{F_{ \gamma}(X_{k})},P_{F_{\gamma}(G_{\phi}(Z_{k})})),\]

where \(X_{1},\ldots,X_{K}\) are drawn i.i.d from \(\mu^{\otimes m}\) and \(Z_{1},\ldots,Z_{K}\) are drawn i.i.d from \(\nu_{0}^{\otimes m}\). There are several ways to estimate the feature function \(F_{\gamma}\) in practice. In our experiments, we use the following objective [15]:

\[\min_{\gamma}\left(\mathbb{E}_{X\sim\mu^{\otimes m}}[\min(0,-1+H(F_{\gamma}(X )))]+\mathbb{E}_{Z\sim\nu_{0}^{\otimes m}}[\min(0,-1-H(F_{\gamma}(G_{\phi}(Z) ))))]\right),\]

where \(H:\mathcal{F}\rightarrow\mathbb{R}\). The above optimization problem is also solved by the stochastic gradient descent algorithm with the following gradient estimator:

\[\nabla_{\gamma}\left(\mathbb{E}_{X\sim\mu^{\otimes m}}[\min(0,-1+ H(F_{\gamma}(X)))]+\mathbb{E}_{Z\sim\nu_{0}^{\otimes m}}[\min(0,-1-H(F_{ \gamma}(G_{\phi}(Z)))))]\right)\] \[=\mathbb{E}_{X\sim\mu^{\otimes m}}[\nabla_{\gamma}\min(0,-1+H(F_{ \gamma}(X)))]+\mathbb{E}_{Z\sim\nu_{0}^{\otimes m}}[\nabla_{\gamma}\min(0,-1-H( F_{\gamma}(G_{\phi}(Z)))))]\] \[\approx\frac{1}{K}\sum_{k=1}^{K}[\nabla_{\gamma}\min(0,-1+H(F_{ \gamma}(X_{k})))]+\frac{1}{K}\sum_{k=1}^{K}[\nabla_{\gamma}\min(0,-1-H(F_{ \gamma}(G_{\phi}(Z_{k})))))],\]

where \(X_{1},\ldots,X_{K}\) are drawn i.i.d from \(\mu^{\otimes m}\) and \(Z_{1},\ldots,Z_{K}\) are drawn i.i.d from \(\nu_{0}^{\otimes m}\).

**Settings.** We use the following neural networks for \(G_{\phi}\) and \(F_{\gamma}\):

* \(G_{\phi}\): \(z\in\mathbb{R}^{128}(\sim\nu_{0}:\mathcal{N}(0,1))\rightarrow\)\(4\times 4\times 256(\text{Dense},\text{Linear})\rightarrow\)\(\text{ResBlock up }256\rightarrow\)\(\text{ResBlock up }256\rightarrow\)\(\text{ResBlock up }256\rightarrow\)\(\text{BN},\text{ReLU}\), \(\rightarrow\)\(3\times 3\)\(\text{conv},\)\(3\)\(\text{Tanh}\).
* \(F_{\gamma_{1}}\): \(x\in[-1,1]^{32\times 32\times 3}\rightarrow\)\(\text{ResBlock down }128\rightarrow\)\(\text{ResBlock down }128\rightarrow\)\(\text{ResBlock down }128\rightarrow\)\(\text{ResBlock }128\rightarrow\)\(\text{ResBlock }128\rightarrow\)\(\text{ResBlock }128\rightarrow\)\(\text{ResBlock }128\).

Figure 7: Random generated images of distances on CIFAR10.

[MISSING_PAGE_FAIL:29]

Figure 8: Random generated images of distances on CelebA.