# Voxel Proposal Network via Multi-Frame Knowledge Distillation for Semantic Scene Completion

Lubo Wang\({}^{1}\)  Di Lin\({}^{1}\)  Kairui Yang\({}^{1}\)  Ruonan Liu\({}^{2}\)  Qing Guo\({}^{3}\)  Wuyuan Xie\({}^{4}\)

Miaohui Wang\({}^{4}\)  Lingyu Liang\({}^{5}\)  Yi Wang\({}^{4}\)  Ping Li\({}^{7}\)

\({}^{1}\)College of Intelligence and Computing, Tianjin University \({}^{2}\)Shanghai Jiao Tong University

\({}^{3}\)IHPC and CFAR, Agency for Science, Technology and Research, Singapore

\({}^{4}\)Shenzhen University \({}^{5}\)Pazhou Lab \({}^{6}\)South China University of Technology

\({}^{7}\)The Hong Kong Polytechnic University

wanglubo@tju.edu.cn di.lin@tju.edu.cn

###### Abstract

Semantic scene completion is a difficult task that involves completing the geometry and semantics of a scene from point clouds in a large-scale environment. Many current methods use 3D/2D convolutions or attention mechanisms, but these have limitations in directly constructing geometry and accurately propagating features from related voxels, the completion likely fails while propagating features in a single pass without considering multiple potential pathways. And they are generally only suitable for static scenes and struggle to handle dynamic aspects. This paper introduces Voxel Proposal Network (VPNet) that completes scenes from 3D and Bird's-Eye-View (BEV) perspectives. It includes Confident Voxel Proposal based on voxel-wise coordinates to propose confident voxels with high reliability for completion. This method reconstructs the scene geometry and implicitly models the uncertainty of voxel-wise semantic labels by presenting multiple possibilities for voxels. VPNet employs Multi-Frame Knowledge Distillation based on the point clouds of multiple adjacent frames to accurately predict the voxel-wise labels by condensing various possibilities of voxel relationships. VPNet has shown superior performance and achieved state-of-the-art results on the SemanticKITTI and SemanticPOSS datasets.

## 1 Introduction

Understanding 3D scenes based on LiDAR point clouds is essential for tasks like autonomous driving. However, due to the limitations of LiDAR sensors and the occlusion of instances by themselves or other instances in the real world, including large-scale information in the point clouds poses a significant challenge to understanding 3D scenes.

Semantic Scene Completion (SSC) aims to simultaneously infer a scene's occupancy and semantic information based on point clouds using deep learning. Several methods [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18] use convolutions to complete the partial scene. Some completion methods [19; 20; 21; 22] heavily rely on diverse attention mechanisms as the attention mechanism can capture spatial relationships and update the features. The diffusion model [23] also applies to thecompletion task. These methods have significantly improved the performance of static single-frame-based semantic scene completion. However, they still suffer from extreme geometric incompletion due to the large-scale information loss of point clouds. Moreover, these methods ignore the regional distraction and voxel semantic uncertainty that arises from the information loss and the complex relative motion of instances in dynamic point cloud sequences.

Our paper introduces a new method for completing from both Bird's Eye View (BEV) and 3D perspectives. We propose confident voxels that show possibilities for voxels and implicitly capture the uncertainty of voxel-wise labels. Our method, Voxel Proposal Network (VPNet), includes the Confident Voxel Proposal (CVP) and Multi-Frame Knowledge Distillation (MFKD). We present the overview architecture of VPNet in Figure 1. The BEV branch completes from the BEV perspective using 2D convolutions to ensure global reasonableness and comprehensiveness of completion. The 3D branch consists of segmentation and completion subnetworks, which perform completion under the guidance of rich semantic contexts and optimize local details and accuracy of completion.

In the 3D branch, CVP learns multiple arrays of offsets for occupied voxel coordinates and features to compute confident voxel coordinates and perform long-range feature propagation like [24] within its branches. Then, CVP uses the confident voxel coordinates to propose confident voxels and constructs confident feature maps, which suggest various possibilities of voxel semantic labels. Finally, we integrate the confident feature maps as augmented feature maps for completion using multi-branch fusion, which condenses the proposed possibilities from the inner-frame branches.

VPNet has a multi-frame network that generates enhanced feature maps for multiple frames using CVPs. It condenses these feature maps into the branches of the CVP in the single-frame network, enabling each branch to create a similar semantic to the corresponding point cloud frame. VPNet condenses the combined enhanced feature map of multiple frames into the single-frame network, further improving the semantics. This process condenses the various possibilities in multi-frame to single-frame networks and affords the opportunity to learn to infer the lost details of each frame in contrast to other KD methods [25; 26; 27; 16].

We evaluate the effectiveness of VPNet on the SemanticKITTI [28] and SemanticPOSS [29] datasets, where we achieve state-of-the-art performances on the semantic scene completion task.

## 2 Related Work

### Semantic Scene Completion

The current approaches for SSC rely on convolution, attention, or diffusion models. For example, SSCNet [1] utilizes dilated convolution to enhance the feature map, while LMSCNet [2] applies 2D U-Net and 3D segmentation heads for multi-resolution completion. ESSCNet [3] employs spatial group convolution and sparse convolution to group voxels, and UDNet [4] incorporates UD block in 3D U-Net to efficiently fuse encoder and decoder features. Furthermore, SSA-SC [5] uses a semantic segmentation network to assist completion from BEV, JS3CNet [6] employs dense 3D and graph convolution to link point cloud and voxel features, and Symphonies [19] adopts deformable cross-attention to generate voxel features from the multi-scale depth and RGB images. Lastly, VPDD [23] utilizes the diffusion model to remove noise and complete the scene.

These methods have geometry construction and feature propagation limitations as they assume a static perspective and disregard the semantic uncertainty in dynamic sequences. To address this, we propose a method that leverages confident voxels to model the semantic uncertainty and employs multi-frame distillation to enhance the uncertainty modeling.

### Knowledge Distillation

Knowledge distillation transfers knowledge from the teacher to the student network. Smaller3D [25] distills at different levels. PointDistiller [30] proposes local distillation. PVD [26] adopts super voxel partition to utilize geometric information better. S2M2-SSD [31] distills multi-modal knowledge to network with point cloud as input. CMKD [32] distills from the network with the point cloud as input to the network with the monocular image as input. 2DPASS [33] proposes multi- to single-modal distillation that fuses point cloud and image features and distills fused features to the student network. SMF-SSD [34] distills multi-frame knowledge to a single-frame network at three levels. M2SKD [35]performs distillation for difficult categories from multi- to single-frame. 3D-to-BEV [27] achieves distillation from 3D to BEV view. SDSeg3D [36] distills from data-augmented teacher to student without augmentation to improve robustness. In contrast, we adopt multi-to-single frame distillation to extract accurate semantic information.

### Point Cloud Sequence Learning

The information within adjacent point cloud frames is complementary. This understanding forms the basis of our research. M2SKD [35] and SMF-SSD [34] fuse aligned multi-frame point cloud for distillation, specially M2SKD [35] only fuses complex samples. TemporalLatticeNet [37] adopts LSTM and GRU to capture temporal relationships better. MarS3D [38] builds Motion-Aware Feature Learning to extract motion instance features. TemporalLidarSeg [39] and MemorySeg [40] employ a Memory mechanism to fuse the features with other frames. Meta-RangeSeg [41] uses Meta-Kernel [42] to aggregate spatial-temporal features. SpSequenceNet [43] proposes Cross-frame Global Attention and Local Interpolation to fuse features. P4Transformer [44] designs Point 4D Convolution to capture the spatial-temporal relationship. PST-Transformer [45] extract spatial-temporal features in a decoupled-joint manner. Moreover, SVQNet [46] splits historical points into voxel-adjacent neighborhoods and historical contexts to complete local and global information. While commendable, existing methods often struggle to fuse point cloud information efficiently. They cannot assign different weights to point clouds, highlighting the need for a more comprehensive solution. We construct a multi-frame network by fusing the feature maps with weighted fusion to guide the single-frame network by distillation.

## 3 Method Overview

We present VPNet and pipeline of CVP and MFKD in Figure 1 and 2. In single-frame network, given point cloud \(\mathbf{P}_{i}\in\mathbb{R}^{N_{i}\times 4}\), we process it with shared MLP and get 3D voxel feature map \(\mathbf{V}_{i}\in\mathbb{R}^{L\times W\times H\times C}\) and BEV feature map \(\mathbf{B}_{i}\in\mathbb{R}^{L\times W\times C}\) (see Figure 1(b)), \(N_{i}\) is the number of points, \(C\) is the channel number of \(\mathbf{V}_{i}\) and \(\mathbf{B}_{i}\). We pass \(\mathbf{B}_{i}\) through BEV completion branch and get completed BEV feature map \(\mathbf{F}_{i}^{\mathrm{lev}}\in\mathbb{R}^{L\times W\times H\times C^{\prime}}\), \(C^{\prime}\) is the channel number of \(\mathbf{F}_{i}^{\mathrm{lev}}\). Then, we pass \(\mathbf{V}_{i}\) through segmentation and completion subnetwork in the 3D completion branch. Given semantic embedded feature map \(\mathbf{S}_{i}\in\mathbb{R}^{L\times W\times H\times C^{\prime}}\) produced by segmentation subnetwork, **Confident Voxel Proposal** (CVP) learns \(Q\) groups of offsets \(\{\mathbf{D}_{i}^{q}\in\mathbb{R}^{J_{i}\times 3}\mid q=0,1,\ldots,Q-1\}\) for occupied voxel coordinates \(\mathbf{M}_{i}\in\mathbb{R}^{J_{i}\times 3}\) and features \(\mathbf{U}_{i}\in\mathbb{R}^{J_{i}\times C^{\prime}}\) in \(\mathbf{S}_{i}\) to compute confident voxel coordinates and features, it builds confident feature maps \(\{\mathbf{E}_{i}^{q}\mid q=0,1,\ldots,Q-1\}\) with confident voxels and \(\mathbf{S}_{i}\) with \(Q\) branches in CVP. And CVP produces an augmented feature map \(\mathbf{A}_{i}\in\mathbb{R}^{L\times W\times H\times C^{\prime}}\) by

Figure 1: The architecture of VPNet. It consists of BEV and 3D completion branches. CVP in the 3D branch proposes confident voxels to present possibilities for voxels and model the semantic uncertainty of voxels implicitly. Moreover, we construct a multi-frame network and employ MFKD to enhance the accuracy of uncertainty modeling. We represent free voxels as transparent.

fusion of \(\{\mathbf{E}_{i}^{q}\mid q=0,1,\ldots,Q-1\}\), \(J_{i}\) is the number of occupied voxels. After that, we pass \(\mathbf{A}_{i}\) through other parts of completion subnetwork as completed 3D feature map \(\mathbf{F}_{i}^{3d}\in\mathbb{R}^{L\times W\times H\times C^{\prime}}\) (see Figure 1(b)). Finally we fuse \(\mathbf{F}_{i}^{bev}\) and \(\mathbf{F}_{i}^{3d}\) with BEV-3D Fusion to maintain final completion result \(\mathbf{R}_{i}\in\mathbb{R}^{L\times W\times H\times C^{\prime\prime}}\) where \(C^{\prime\prime}\) indicates the number of semantic categories.

In multi-frame network, given point clouds \(\{\mathbf{P}_{i},\ldots,\mathbf{P}_{k}\}\), We pass them through segmentation subnetwork and separate CVP of 3D branch and obtain augmented feature maps \(\{\mathbf{A}_{i}^{\prime},\ldots,\mathbf{A}_{k}^{\prime}\}\) (see Figure 2(a)). Then we fuse them and get multi-frame fused augmented feature map \(\mathbf{A}^{\prime}\in\mathbb{R}^{L\times W\times H\times C^{\prime}}\). We regard \(\mathbf{A}^{\prime}\) as augmented feature map \(\mathbf{A}_{i}\) in a single-frame network, and the other modules of the multi-frame network are consistent with a single-frame network (see Figure 1(a)).

We set the branch number in the CVP of the single-frame network to be the same as the frame number in the multi-frame network. Moreover, we divide **Multi-Frame Knowledge Distillation** (MFKD) into two stages in Figure 2, we caculate the difference between \(\{\mathbf{A}_{i},\ldots,\mathbf{A}_{k}\}\) and \(\{\mathbf{E}_{i}^{0},\ldots,\mathbf{E}_{i}^{Q-1}\}\) correspondingly in stage-1 distillation to drive the branches in CVP of the single-frame network to learn the semantic feature distribution of corresponding frame and condense the various possibilities contained in the corresponding frame. We compute the difference between \(\mathbf{A}^{\prime}\) and \(\mathbf{A}_{i}\) in stage-2 distillation to drive CVP in the single-frame network to learn multi-frame fused semantics further.

## 4 Architecture of VPNet

This section details the dual-branch VPNet with the confident voxel proposal (CVP) and the multi-frame knowledge distillation (MFKD).

### Dual-branch Completion Network

As Figure 1(b) illustrates, VPNet has a 3D completion branch and a BEV completion branch, and we utilize multiple feature fusion schemes to combine them to achieve improved completion results.

Feature InitializationGiven a point cloud \(\mathbf{P}_{i}=\{(x_{p},y_{p},z_{p},r_{p})\mid p=0,1,\ldots,N_{i}-1\}\). \(x_{p}\), \(y_{p}\), \(z_{p}\) are the coordinates. \(r_{p}\) is the reflectivity of point \(p\), we update \(\mathbf{P}_{i}\) as \(\mathbf{P}_{i}^{\prime}\) during voxelization. This update is represented as \(\mathbf{P}_{i}^{\prime}=\{(x_{p},y_{p},z_{p},\delta x_{p},\delta y_{p},\delta z _{p},r_{p})\mid p=0,1,\ldots,N_{i}-1\}\), where \(\delta x_{p}\), \(\delta y_{p}\), \(\delta z_{p}\) are the differences in each dimension between the coordinates and the voxel center that point \(p\) belongs to. Then, we initialize \(\mathbf{V}_{i}\) and \(\mathbf{B}_{i}\) as follows:

\[\{\mathbf{V}_{i},\mathbf{B}_{i}\}=\{\mathcal{M},\tilde{\mathcal{M}}\}(\mathcal{ F}(\mathbf{P}_{i}^{\prime})), \tag{1}\]

where \(\mathcal{F}\) is a shared MLP that extracts the point-wise features, \(\mathcal{M}\) and \(\tilde{\mathcal{M}}\) indicate selecting the maximum from points that are in the same voxel or column.

Dual-branch CompletionThe 3D completion branch comprises a segmentation subnetwork and a completion subnetwork. The segmentation subnetwork, adapted from Cylinder3D [47], captures

Figure 2: The pipeline of CVP and MFKD. The semantics feature maps are produced with a segmentation subnetwork in the 3D branch.

semantic embedded feature map \(\mathbf{S}_{i}\) from \(\mathbf{V}_{i}\). These feature maps are fed into the completion subnetwork, which synthesizes the completed 3D feature map \(\mathbf{F}_{i}^{3d}\). The completion subnetwork includes the proposed CVP module and several 3D dense convolution kernels of varying sizes.

In parallel, the BEV completion branch utilizes a 2D U-Net architecture. It reconstructs the scene from BEV. The BEV feature map \(\mathbf{B}_{i}\) is processed through this branch to produce the completed BEV feature map \(\mathbf{F}_{i}^{bev}\). With sum operation, we compress features extracted by the 3D segmentation subnetwork's encoder blocks along the height axis. We integrate the compressed feature maps to corresponding levels of BEV encoder blocks. This establishes an early fusion of 3D and BEV features that enhances the global perception capabilities of the 3D branch and the spatial analysis capabilities of the BEV branch. We utilize BEV-3D Fusion to generate the final completion result \(\mathbf{R}_{i}\) as:

\[\mathbf{R}_{i}=\mathcal{C}(\mathcal{R}(\mathcal{I}(\mathbf{F}_{i}^{bev})), \mathbf{F}_{i}^{3d}), \tag{2}\]

where \(\mathcal{I}\) is a convolution layer that increases the feature channels of \(\mathbf{F}_{i}^{lev}\), \(\mathcal{R}\) is a reshape operation that expands the height dimension from channels and \(\mathcal{C}\) is concatenation along the channel dimension. This establishes the later fusion of 3D and BEV completion branches.

### Confident Voxel Proposal

We propose confident voxels by offset learning and feature propagating from occupied voxels. We take \(q^{th}\) branch as an example to describe the details of CVP.

**Offset Learning** As illustrated in Figure 3, the segmentation subnetwork extracts a sparse semantics embedded feature map \(\mathbf{S}_{i}\), from which we initialize the occupied voxel coordinates \(\mathbf{M}_{i}=\{(x_{j},y_{j},z_{j})\mid j=0,1,\dots,J_{i}-1\}\) and occupied voxel features as \(\mathbf{U}_{i}\in\mathbb{R}^{J_{i}\times C^{\prime}}\). In Figure 3(a), we initialize random noise \(\mathbf{Z}_{i}^{q}\in\mathbb{R}^{J_{i}\times C_{s}}\), \(C_{z}\) is the channel number of noise \(\mathbf{Z}_{i}^{q}\) and \(\mathbf{Z}_{i}^{q}\sim\mathcal{N}(0,1)\). We computes a groups of offsets \(\mathbf{D}_{i}^{q}\in\mathbb{R}^{J_{i}\times 3}\) for each coordinate in \(\mathbf{M}_{i}\) as:

\[\mathbf{D}_{i}^{q}=\tilde{\mathcal{F}}_{i}(\mathcal{C}(\mathbf{M}_{i},\mathbf{ U}_{i},\mathbf{Z}_{i}^{q})). \tag{3}\]

\(\tilde{\mathcal{F}}_{i}\) is the shared MLP in CVP. \(\mathbf{M}_{i}\) allows the model to consider the geometric information of the partial scene, \(\mathbf{U}_{i}\) introduces rich semantic context. The random noise \(\mathbf{Z}_{i}^{q}\) drives the voxel coordinates \(\mathbf{M}_{i}\) away from the initial position and ensures the robustness of offset learning. By sampling random noise across multiple branches of the CVP module, we generate various offset sets, enabling the inference of multiple semantic possibilities for the voxels. During offset learning, we employ occupied voxel coordinates \(\mathbf{M}_{g}\) of completion ground truth as supervision.

**Voxel Proposal** As shown in Figure 3(b), we propose coordinates that contain decimals by adding offsets \(\mathbf{D}_{i}^{q}\) to initial coordinates \(\mathbf{M}_{i}\) and compute confident voxel coordinates \(\mathbf{G}_{i}^{q}\) with rounding operation on proposed coordinates. We formulate the feature propagation process as:

\[\mathbf{Y}_{i}^{q}=\mathcal{I}(\mathcal{W}(\mathbf{U}_{i},\mathbf{D}_{i}^{q})), \tag{4}\]

where \(\mathcal{W}\) is the operation of updating feature \(\mathbf{U}_{i}\) according to the offsets \(\mathbf{D}_{i}^{q}\) that makes the features that propagate farther be pruned more. It ensures the reliability of feature propagation, \(\mathcal{I}\) is feature

Figure 3: Branch \(i\) of confident voxel proposal (CVP), we divide it into two steps: (a) offset learning and (b) voxel proposal.

interpolation that computes the feature of the voxel center from proposed points in the same voxel, and \(\mathbf{Y}_{i}^{q}\) is the confident voxel features after propagation. We construct confident feature map \(\mathbf{E}_{i}^{q}\) as:

\[\mathbf{E}_{i}^{q}=\mathbf{DDCM}(\mathcal{D}(\mathbf{G}_{i}^{q},\mathbf{Y}_{i}^{ q})+\mathbf{S}_{i}), \tag{5}\]

where \(\mathcal{D}\) is confident voxels with coordinates \(\mathbf{G}_{i}^{q}\) and confident voxel features \(\mathbf{Y}_{i}^{q}\). \(\mathbf{DDCM}\) is a modified Dimension-Decomposition based Context Modeling [47] module that refines the features after propagation and reconstructs the semantic context.

As Figure 4 indicates, we adopt the weighted fusion strategy [48] and modify it to fuse the branches in CVP and compress the possibilities in branches. We compute the weights \(\mathbf{W}_{i}^{q}\in\mathbb{R}^{1\times C^{\prime}}\) as:

\[\mathbf{W}_{i}^{q}=\mathcal{J}_{i}^{q}(\tilde{\mathcal{A}}(\sum_{q=0}^{Q-1} \mathbf{E}_{i}^{q})). \tag{6}\]

\(\tilde{\mathcal{A}}\) is local average pooling that compresses the local representation for each branch. We flatten the pooled feature then, and \(\mathcal{J}_{i}^{q}\) is the fully connected layer for \(q^{th}\) branch. We fuse the branches in CVP according to the weights and get an augmented feature map \(\mathbf{A}_{i}\).

### Multi-Frame Knowledge Distillation

We construct a multi-frame network that proposes confident voxels and generates an augmented feature map for each frame with CVPs. We utilize MFKD to distill the semantic knowledge of augmented feature maps into a single-frame model in two stages to condense the voxel possibilities.

Multi-Frame NetworkAs illustrated in Figure 1(a), we align the point cloud frames \(\{\mathbf{P}_{i},\dots,\mathbf{P}_{k}\}\) to the coordinate of the current frame \(\mathbf{P}_{i}\). We input the aligned point clouds into the 3D completion branch separately. We get multi-frame augmented feature maps \(\{\mathbf{A}_{i},\dots,\mathbf{A}_{k}\}\). We fuse them as \(\mathbf{A}^{\prime}\) with the above-mentioned weighted fusion strategy. We regard \(\mathbf{A}^{\prime}\) as \(\mathbf{A}\) in the single-frame network to build the multi-frame network. We input \(\{\mathbf{V}_{i},\dots,\mathbf{V}_{k}\}\) into 3D completion branch and only input \(\mathbf{B}_{i}\) into BEV completion branch. We construct a multi-frame network that leverages multi-frame point clouds to model voxel semantic uncertainty with multiple CVPs from a 3D perspective.

Multi-frame DistillationWe obtain augmented feature maps \(\{\mathbf{A}_{i},\dots,\mathbf{A}_{k}\}\) in multi-frame network and confident feature maps \(\{\mathbf{E}_{i}^{0},\dots,\mathbf{E}_{i}^{Q-1}\}\) in single-frame network, we calculate the difference \(\mathcal{L}_{s1}\) between the corresponding feature maps with

\[\mathcal{L}_{s1}=\sum_{0}^{Q-1}\mathcal{E}(\tilde{\mathcal{A}}(\mathbf{E}_{i}^ {q}),\tilde{\mathcal{A}}(\mathbf{A}_{i+q})) \tag{7}\]

where \(\tilde{\mathcal{A}}\) is a local average pooling function with kernel size \(s\times s\times s\) to construct super voxels to meet the sparsity of features, and \(\mathcal{E}\) is the Kullback-Leibler divergence function. We build stage-1 distillation to drive the branches in CVP to simulate the knowledge learned by multi-frame CVPs and condense possibilities of the corresponding frame to branch in CVP.

Training LossTo improve the accuracy of semantic uncertainty modeling and reconstruct the scene details, given fused augmented feature map \(\mathbf{A}^{\prime}\) in the multi-frame network and augmented

Figure 4: Architecture of the multi-branch fusion.

Figure 5: The overall architecture of MFKD. MFKD constructs two stages of distillation between CVPs of multi-frame networks and CVPs of the single-frame network.

feature map \(\mathbf{A}_{i}\) in the single-frame network, we calculate the difference \(\mathcal{L}_{s2}\) between them as:

\[\mathcal{L}_{s2}=\mathcal{E}(\mathbf{A}_{i},\mathbf{A}^{\prime}). \tag{8}\]

We avoid utilizing a super voxel partition here to prevent the blurring of features. Thus, we build stage-2 distillation to drive CVP in the single-frame network to simulate the knowledge after multi-frame CVPs. Finally, we achieve multi-frame distillation by joint stage-1 and -2 distillation as:

\[\mathcal{L}_{kd}=\mathcal{L}_{s1}+\mathcal{L}_{s2}. \tag{9}\]

We formulate total loss in the single-frame and multi-frame networks as:

\[\mathcal{L}=\alpha\mathcal{L}_{com}+\beta\mathcal{L}_{seg}+\gamma\mathcal{L}_{ geo}+\delta\mathcal{L}_{kd}, \tag{10}\]

where \(k=i\). \(\mathcal{L}_{com}\) is completion loss. \(\mathcal{L}_{seg}\) is segmentation loss. \(\mathcal{L}_{geo}\) is geometry loss between proposed coordinates and coordinates ground truth. Here, we utilize Chamfer Distance [49]. \(\alpha\), \(\beta\), \(\gamma\) and \(\delta\) are weights of losses. We set \(\alpha=1.00\), \(\beta=0.10\), \(\gamma=0.01\) and \(\delta=0.50\) during distillation.

## 5 Experiments

### Implementation Details

We implement VPNet with PyTorch3 and train it on A6000 GPUs with a mini-batch of 8 for 80 epochs; we use Adam [50] optimizer with an initial learning rate of 0.001. We set feature map channel number \(C^{\prime}=32\), random noise channel number \(C_{z}=4\), CVP branch number \(Q=3\), and super voxel partition kernel size \(s=4\).

Footnote 3: [https://pytorch.org/](https://pytorch.org/)

### Datasets and Metrics

We evaluate VPNet on SemanticKITTI [28] and SemanticPOSS [29] datasets, composed of real outdoor point cloud sequences. SemanticKITTI contains 22 sequences with 19 categories, 11/1/10 sequences for training/validation/online testing. SemanticPOSS contains six sequences divided into 11 categories; it contains 5/1 sequences for training/validation (testing).

According to SSCNet [1], we evaluate VPNet on Scene Completion (SC) with intersection-over-union (IoU), on Semantic Scene Completion (SSC) with IoU of each semantic category and mean of all semantic categories' IoU (mIoU).

### Ablation Study of VPNet

In the ablation study, we conduct experiments on SemanticKITTI [28] validation set.

Analysis of Network FrameworkWe evaluate the impact of the BEV completion branch, segmentation subnetwork, completion subnetwork without CVP, and completion subnetwork with CVP. As Table 1 illustrated, in the first and second rows, we use the BEV branch and 3D branch without CVP separately and get (56.4% IoU, 22.2% mIoU) and (50.3% IoU, 23.6% mIoU).

In the third row, we use the BEV branch and segmentation subnetwork. Under the augmentation of 3D semantics, we get (58.3% IoU and 24.5% mIoU) which are much higher than the performances of the BEV branch and 3D branch separately. In the fourth row, we add a completion subnetwork without CVP to the network; this method produces (59.1% IoU, 24.9% mIoU) that improves the IoU with 0.8%. This proves the effectiveness of joint completion from different perspectives. The 3D branch riches the details (in the semantic

\begin{table}
\begin{tabular}{c|c|c|c|c|c} \hline \multirow{2}{*}{BEV} & \multirow{2}{*}{seg.} & \multicolumn{1}{c|}{com.} & \multicolumn{1}{c|}{com.} & \multirow{2}{*}{IoU} & \multirow{2}{*}{mIoU} \\  & & w/o CVP & w/ CVP & & \\ \hline ✓ & ✗ & ✗ & ✗ & 56.4 & 22.2 \\ ✗ & ✓ & ✓ & ✗ & 50.3 & 23.6 \\ ✓ & ✓ & ✗ & ✗ & 58.3 & 24.5 \\ ✓ & ✓ & ✓ & ✗ & 59.1 & 24.9 \\ ✓ & ✓ & ✗ & ✓ & **59.3** & **25.6** \\ \hline \end{tabular}
\end{table}
Table 1: Impact of dual-branch network components. "seg." means 3D segmentation subnetwork and "com." means 3D completion subnetwork.

aspect), while the BEV branch completes the scene coarsely and with higher completeness (from the geometric aspect).

We integrate CVP into the dual-branch network and achieve (59.3% IoU, 25.6% mIoU), a significant improvement of 0.7% mIoU compared to the network without CVP. This incremental improvement underscores the value of modeling the uncertainty of voxel semantics under the guidance of geometry for completion, marking a step forward in our understanding and application of these techniques.

Internal Study of CVPWe analyze the components of CVP in Table 2. In Table 2(a), we assemble CVP with random noise \(\mathbf{Z}_{i}^{q}\) with different channel numbers. We get the best performance with \(C_{z}=4\). When less than 4, the learning of offsets is insufficient, and the semantic possibility learned from the voxel proposal is lacking. When more significant than 4, the random noise introduces too much meaningless information that adversely impacts the network's performance.

We propose confident voxels with multiple branches, so we analyze the impact of branch number \(Q\) in Table 2(b). The network performance improves when the branch number is increased, and we get the best completion performance when we set the branch number to \(Q=3\). However, when we set \(Q=4\), we get similar performance (59.2% IoU, 25.6% mIoU) with \(Q=3\) as too many branches bring distractions to the network so we set \(Q=3\) during training.

The fusion strategy of multiple branches influences the performance of voxel semantic uncertainty modeling; we construct CVP with different fusion strategies and show the results in Table 2(c). Here, we set branch number \(Q\) to 3. We compare the weighted fusion scheme with addition, concatenation, and average. These standard methods of feature fusion are weak in uncertainty modeling. Among the compared strategies, addition gets the best performance (59.3% IoU, 25.4% mIoU), but the weighted fusion we utilize still outperforms it with 0.2% mIoU. This demonstrates that weighted fusion models the voxel semantic uncertainty more accurately.

Internal Study of MFKDAs we build CVP with \(Q=3\), we implement a multi-frame network with three frames to build the distillation relationships between frame and branch in CVP correspondingly, and we present the results in Table 3. We get the best performance (61.1% IoU, 26.8% mIoU) with frames _t_/_t_+2/_t_+4, where \(\mathit{t}\) is the frame we use to train the single-frame. We get (60.2% IoU, 26.3% mIoU) with frames _t_/_t_+1/_t_+2 as the adjacent frames contain insufficient supplementary information, and frames with larger intervals like t/t+3/t+6 have less guidance for modeling the uncertainty of semantics.

\begin{table}

\end{table}
Table 2: Internal studies on random noise (a), branch number (b) and fusion strategy (c) of CVP.

\begin{table}

\end{table}
Table 3: Frames in multi-frame network.

\begin{table}

\end{table}
Table 4: Internal studies on stages of MFKD (a) and comparison with other distillation methods (b). (a) Stages of MFKD. ”voxel” means common voxel partition, ”super-” (b) Comparison with other distillation methods.

We conduct experiments using different distillation stages in Table 4(a). With stage 1 without super voxel partition, we get similar results (59.5% IoU, 25.5% mIoU) with the single-frame network, as ordinary distillation distracts the offset learning due to the neglect of sparsity. We add the super voxel partition to stage-1 distillation, and this method produces (59.3% IoU, 25.9% mIoU). We also build MFKD with stage-2 distillation only and get (59.6% IoU, 25.8% mIoU) that proves voxel-wise guidance like stage-2 is helpful to the semantic uncertainty modeling. We get better performance (59.6% IoU, 26.1% mIoU) with stage-1 with super voxel partition and stage-2 distillations that provide more accurate guidance. And we compare MFKD with other distillation methods in Table 4(b) where MFKD performs better than others and this proves the effectiveness of MFKD.

### State-of-the-art Comparison

We compare our method with state-of-the-art methods on SemanticKITTI online testing set in Table 5. We present the visualization comparison in Figure 6. Our method outperforms other methods and demonstrates competitive performance. VPNet produces (60.4% IoU, 25.0% mIoU) that with 1.6% IoU and 1.5% mIoU improvement than SSA-SC [5] when training with single-frame without MFKD. It achieves (60.7% IoU, 25.6% mIoU) with 0.3% IoU and 0.6% mIoU improvement with MFKD.

Figure 6: Completion results of different methods on SemanticKITTI validation set.

[MISSING_PAGE_FAIL:10]

## References

* [1] Shuran Song, Fisher Yu, Andy Zeng, Angel X Chang, Manolis Savva, and Thomas Funkhouser. Semantic scene completion from a single depth image. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 1746-1754, 2017.
* [2] Luis Roldao, Raoul de Charette, and Anne Verroust-Blondet. Lmscnet: Lightweight multiscale 3d semantic completion. In _2020 International Conference on 3D Vision (3DV)_, pages 111-119. IEEE, 2020.
* [3] Jiahui Zhang, Hao Zhao, Anbang Yao, Yurong Chen, Li Zhang, and Hongen Liao. Efficient semantic scene completion network with spatial group convolution. In _Proceedings of the European Conference on Computer Vision (ECCV)_, pages 733-749, 2018.
* [4] Hao Zou, Xuemeng Yang, Tianxin Huang, Chujuan Zhang, Yong Liu, Wanlong Li, Feng Wen, and Hongbo Zhang. Up-to-down network: Fusing multi-scale context for 3d semantic scene completion. In _2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)_, pages 16-23. IEEE, 2021.
* [5] Xuemeng Yang, Hao Zou, Xin Kong, Tianxin Huang, Yong Liu, Wanlong Li, Feng Wen, and Hongbo Zhang. Semantic segmentation-assisted scene completion for lidar point clouds. In _2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)_, pages 3555-3562. IEEE, 2021.
* [6] Xu Yan, Jiantao Gao, Jie Li, Ruimao Zhang, Zhen Li, Rui Huang, and Shuguang Cui. Sparse single sweep lidar point cloud segmentation via learning contextual shape priors from scene completion. In _Proceedings of the AAAI Conference on Artificial Intelligence_, volume 35, pages 3101-3109, 2021.
* [7] Ruihang Miao, Weizhou Liu, Mingrui Chen, Zheng Gong, Weixin Xu, Chen Hu, and Shuchang Zhou. Occdepth: A depth-aware method for 3d semantic scene completion. _arXiv preprint arXiv:2302.13540_, 2023.
* [8] Anh-Quan Cao and Raoul de Charette. Monoscene: Monocular 3d semantic scene completion. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 3991-4001, 2022.
* [9] Pengfei Li, Ruowen Zhao, Yongliang Shi, Hao Zhao, Jirui Yuan, Guyue Zhou, and Ya-Qin Zhang. Lode: Locally conditioned eikonal implicit scene completion from sparse lidar. _arXiv preprint arXiv:2302.14052_, 2023.
* [10] Xiaofeng Wang, Zheng Zhu, Wenbo Xu, Yunpeng Zhang, Yi Wei, Xu Chi, Yun Ye, Dalong Du, Jiwen Lu, and Xingang Wang. Openoccupancy: A large scale benchmark for surrounding semantic occupancy perception. _arXiv preprint arXiv:2303.03991_, 2023.
* [11] Jianbiao Mei, Yu Yang, Mengmeng Wang, Tianxin Huang, Xuemeng Yang, and Yong Liu. Ssc-rs: Elevate lidar semantic scene completion with representation separation and bev fusion. In _2023 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)_, pages 1-8. IEEE, 2023.
* [12] Peng-Shuai Wang, Yang Liu, and Xin Tong. Deep octree-based cnns with output-guided skip connections for 3d shape and scene completion. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops_, pages 266-267, 2020.
* [13] Fengyun Wang, Dong Zhang, Hanwang Zhang, Jinhui Tang, and Qianru Sun. Semantic scene completion with cleaner self. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 867-877, 2023.
* [14] Bohan Li, Yasheng Sun, Xin Jin, Wenjun Zeng, Zheng Zhu, Xiaoefeng Wang, Yunpeng Zhang, James Okae, Hang Xiao, and Dalong Du. Stereoscene: Bev-assisted stereo matching empowers 3d semantic scene completion. _arXiv preprint arXiv:2303.13959_, 2023.
* [15] Ran Cheng, Christopher Agia, Yuan Ren, Xinhai Li, and Liu Bingbing. S3cnet: A sparse semantic scene completion network for lidar point clouds. In _Conference on Robot Learning_, pages 2148-2161. PMLR, 2021.
* [16] Zhaoyang Xia, Youquan Liu, Xin Li, Xinge Zhu, Yuexin Ma, Yikang Li, Yuenan Hou, and Yu Qiao. Scpnet: Semantic scene completion on point cloud. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 17642-17651, 2023.
* [17] Xuzhi Wang, Di Lin, and Liang Wan. Ffnet: Frequency fusion network for semantic scene completion. In _Proceedings of the AAAI conference on artificial intelligence_, volume 36, pages 2550-2557, 2022.

* [18] Haotian Dong, Enhui Ma, Lubo Wang, Miaohui Wang, Wuyuan Xie, Qing Guo, Ping Li, Lingyu Liang, Kairui Yang, and Di Lin. Cvsfomer: Cross-view synthesis transformer for semantic scene completion. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 8874-8883, 2023.
* [19] Haoyi Jiang, Tianheng Cheng, Naiyu Gao, Haoyang Zhang, Wenyu Liu, and Xinggang Wang. Symphonize 3d semantic scene completion with contextual instance queries. _arXiv preprint arXiv:2306.15670_, 2023.
* [20] Yuwen Xiong, Wei-Chiu Ma, Jingkang Wang, and Raquel Urtasun. Learning compact representations for lidar completion and generation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 1074-1083, 2023.
* [21] Yunpeng Zhang, Zheng Zhu, and Dalong Du. Occformer: Dual-path transformer for vision-based 3d semantic occupancy prediction. _arXiv preprint arXiv:2304.05316_, 2023.
* [22] Yiming Li, Zhiding Yu, Christopher Choy, Chaowei Xiao, Jose M Alvarez, Sanja Fidler, Chen Feng, and Anima Anandkumar. Voxformer: Sparse voxel transformer for camera-based 3d semantic scene completion. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 9087-9098, 2023.
* [23] Bohan Li, Jingxin Dong, Yunnan Wang, Jinming Liu, Lianying Yin, Wei Zhao, Zheng Zhu, Xin Jin, and Wenjun Zeng. One at a time: Multi-step volumetric probability distribution diffusion for depth estimation. _arXiv preprint arXiv:2306.12681_, 2023.
* [24] Di Lin, Dingguo Shen, Yuanfeng Ji, Siting Shen, Mingrui Xie, Wei Feng, and Hui Huang. Tagnet: Learning configurable context pathways for semantic segmentation. _IEEE Transactions on Pattern Analysis and Machine Intelligence_, 45(2):2475-2491, 2022.
* [25] Alen Adamyan and Erik Harutyunyan. Smaller3d: Smaller models for 3d semantic segmentation using minkowski engine and knowledge distillation methods. _arXiv preprint arXiv:2305.03188_, 2023.
* [26] Yuenan Hou, Xinge Zhu, Yuexin Ma, Chen Change Loy, and Yikang Li. Point-to-voxel knowledge distillation for lidar semantic segmentation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 8479-8488, 2022.
* [27] Feng Jiang, Heng Gao, Shoumeng Qiu, Haiqiang Zhang, Ru Wan, and Jian Pu. Knowledge distillation from 3d to bird's-eye-view for lidar semantic segmentation. _arXiv preprint arXiv:2304.11393_, 2023.
* [28] Jens Behley, Martin Garbade, Andres Milioto, Jan Quenzel, Sven Behnke, Cyrill Stachniss, and Jurgen Gall. Semantickitti: A dataset for semantic scene understanding of lidar sequences. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 9297-9307, 2019.
* [29] Yancheng Pan, Biao Gao, Jilin Mei, Sibo Geng, Chengkun Li, and Huijing Zhao. Semanticposs: A point cloud dataset with large quantity of dynamic instances. In _2020 IEEE Intelligent Vehicles Symposium (IV)_, pages 687-693. IEEE, 2020.
* [30] Linfeng Zhang, Runpei Dong, Hung-Shuo Tai, and Kaisheng Ma. Pointdistiller: Structured knowledge distillation towards efficient and compact 3d detection. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 21791-21801, 2023.
* [31] Wu Zheng, Mingxuan Hong, Li Jiang, and Chi-Wing Fu. Boosting 3d object detection by simulating multimodality on point clouds. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 13638-13647, 2022.
* [32] Yu Hong, Hang Dai, and Yong Ding. Cross-modality knowledge distillation network for monocular 3d object detection. In _European Conference on Computer Vision_, pages 87-104. Springer, 2022.
* [33] Xu Yan, Jiantao Gao, Chaoda Zheng, Chao Zheng, Ruimao Zhang, Shuguang Cui, and Zhen Li. 2dpass: 2d priors assisted semantic segmentation on lidar point clouds. In _European Conference on Computer Vision_, pages 677-695. Springer, 2022.
* [34] Wu Zheng, Li Jiang, Fanbin Lu, Yangyang Ye, and Chi-Wing Fu. Boosting single-frame 3d object detection by simulating multi-frame point clouds. In _Proceedings of the 30th ACM International Conference on Multimedia_, pages 4848-4856, 2022.
* [35] Shoumeng Qiu, Feng Jiang, Haiqiang Zhang, Xiangyang Xue, and Jian Pu. Multi-to-single knowledge distillation for point cloud semantic segmentation. _arXiv preprint arXiv:2304.14800_, 2023.
* [36] Jiale Li, Hang Dai, and Yong Ding. Self-distillation for robust lidar semantic segmentation in autonomous driving. In _European Conference on Computer Vision_, pages 659-676. Springer, 2022.

* [37] Peer Schutt, Radu Alexandru Rosu, and Sven Behnke. Abstract flow for temporal semantic segmentation on the permutohedral lattice. In _2022 International Conference on Robotics and Automation (ICRA)_, pages 5139-5145. IEEE, 2022.
* [38] Jiahui Liu, Chirui Chang, Jianhui Liu, Xiaoyang Wu, Lan Ma, and Xiaojuan Qi. Mars3d: A plug-and-play motion-aware model for semantic segmentation on multi-scan 3d point clouds. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 9372-9381, 2023.
* [39] Fabian Duerr, Mario Pfaller, Hendrik Weigel, and Jurgen Beyerer. Lidar-based recurrent 3d semantic segmentation with temporal memory alignment. In _2020 International Conference on 3D Vision (3DV)_, pages 781-790. IEEE, 2020.
* [40] Enxu Li, Sergio Casas, and Raquel Urtasun. Memoryseg: Online lidar semantic segmentation with a latent memory. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 745-754, 2023.
* [41] Song Wang, Jianke Zhu, and Ruixiang Zhang. Meta-rangeseg: Lidar sequence semantic segmentation using multiple feature aggregation. _IEEE Robotics and Automation Letters_, 7(4):9739-9746, 2022.
* [42] Lue Fan, Xuan Xiong, Feng Wang, Naiyan Wang, and Zhaoxiang Zhang. Rangedet: In defense of range view for lidar-based 3d object detection. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 2918-2927, 2021.
* [43] Hanyu Shi, Guosheng Lin, Hao Wang, Tzu-Yi Hung, and Zhenhua Wang. Spsequencenet: Semantic segmentation network on 4d point clouds. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 4574-4583, 2020.
* [44] Hehe Fan, Yi Yang, and Mohan Kankanhalli. Point 4d transformer networks for spatio-temporal modeling in point cloud videos. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 14204-14213, 2021.
* [45] Hehe Fan, Yi Yang, and Mohan Kankanhalli. Point spatio-temporal transformer networks for point cloud video modeling. _IEEE Transactions on Pattern Analysis and Machine Intelligence_, 45(2):2181-2192, 2022.
* [46] Xuechao Chen, Shuangjie Xu, Xiaoyi Zou, Tongyi Cao, Dit-Yan Yeung, and Lu Fang. Svapnet: Sparse voxel-adjacent query network for 4d spatio-temporal lidar semantic segmentation. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 8569-8578, 2023.
* [47] Hui Zhou, Xinge Zhu, Xiao Song, Yuexin Ma, Zhe Wang, Hongsheng Li, and Dahua Lin. Cylinder3d: An effective 3d framework for driving-scene lidar semantic segmentation. _arXiv preprint arXiv:2008.01550_, 2020.
* [48] Xiang Li, Wenhai Wang, Xiaolin Hu, and Jian Yang. Selective kernel networks. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 510-519, 2019.
* [49] Haoqiang Fan, Hao Su, and Leonidas J Guibas. A point set generation network for 3d object reconstruction from a single image. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 605-613, 2017.
* [50] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. _arXiv preprint arXiv:1412.6980_, 2014.
* [51] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling the knowledge in a neural network. _arXiv preprint arXiv:1503.02531_, 2015.
* [52] Martin Garbade, Yueh-Tung Chen, Johann Sawatzky, and Juergen Gall. Two stream 3d semantic scene completion. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops_, pages 0-0, 2019.
* [53] Christoph B Rist, David Emmerichs, Markus Enzweiler, and Dariu M Gavrila. Semantic scene completion using local deep implicit functions on lidar data. _IEEE Transactions on Pattern Analysis and Machine Intelligence_, 44(10):7205-7218, 2021.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: The contributions of this paper are 1) proposing confident voxels along with their semantic label possibilities by learning offsets from occupied voxel coordinates/features, and 2) distilling knowledge across multiple point cloud frames to enhance voxel labeling. We describe them in "Abstract" and "Introduction". Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: We discuss the limitations of the work in "Limitations". Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof?Answer: [NA]

Justification: There is no theoretical result in this paper.

Guidelines:

* The answer NA means that the paper does not include theoretical results.
* All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced.
* All assumptions should be clearly stated or referenced in the statement of any theorems.
* The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.
* Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.
* Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: We describe the pipeline of VPNet in "Method Overview" and discuss the design of the major modules within the network in "Architecture of VPNet". We conduct ablation studies on detailed modules of the network with public datasets in "Ablation Study of VPNet" of "Experiments", and we provide the details of training process in "Implementation Details" of "Experiments". These can facilitate the reproducibility of experimental results. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: We present the code of CVP module in "Core code" of "Appendix / supplemental material". Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines ([https://nips.cc/public/guides/CodeSubmissionPolicy](https://nips.cc/public/guides/CodeSubmissionPolicy)) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines ([https://nips.cc/public/guides/CodeSubmissionPolicy](https://nips.cc/public/guides/CodeSubmissionPolicy)) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: We provide the details (learning rate, optimizer, batch size, number of epoch, and so on) of training process in "Implementation Details" of "Experiments", and describe the datasets and metrics in "Datasets and Metrics" of "Experiments". Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [No] Justification: We run all experiments three times, and report the mean value of the results. Guidelines: * The answer NA means that the paper does not include experiments.

* The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.
* The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).
* The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)
* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: We describe the type of GPU and number of epoch during training process in "Implementation Details" of "Experiments". Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics [https://neurips.cc/public/EthicsGuidelines?](https://neurips.cc/public/EthicsGuidelines?) Answer: [Yes] Justification: We conform the research conducted in this paper with the NeurIPS Code of Ethics. The research process doesn't cause any potential harms, societal impact or potential harmful consequences. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes]Justification: As illustrated in "Broader Impacts", it has potential positive societal impacts of this work.

Guidelines:

* The answer NA means that there is no societal impact of the work performed.
* If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.
* Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.
* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).

11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: The semantic scene completion tasks in our work do not involve large pretrained models and such, and do not carry the risk of being misused to the extent of causing adverse effects. Guidelines:

* The answer NA means that the paper poses no such risks.
* Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.
* Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.
* We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.

12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: In our paper, we primarily engage with public datasets, we have cited them properly and set the license in the website of the OpenReview. Guidelines:

* The answer NA means that the paper does not use existing assets.

* The authors should cite the original paper that produced the code package or dataset.
* The authors should state which version of the asset is used and, if possible, include a URL.
* The name of the license (e.g., CC-BY 4.0) should be included for each asset.
* For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.
* If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.
* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
13. **New Assets** Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: This paper does not release new assets. Guidelines: * The answer NA means that the paper does not release new assets. * Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc. * The paper should discuss whether and how consent was obtained from people whose asset is used. * At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
14. **Crowdsourcing and Research with Human Subjects** Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: * The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. * Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper. * According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
15. **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects** Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects.

Guidelines:

* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.