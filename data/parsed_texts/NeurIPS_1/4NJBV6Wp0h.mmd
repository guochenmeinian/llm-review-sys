# LLM Evaluators Recognize and Favor Their Own Generations

Arjun Panickssery\({}^{1}\) Samuel R. Bowman\({}^{2}\) Shi Feng\({}^{3}\)

\({}^{1}\)MATS \({}^{2}\)New York University, Anthropic PBC \({}^{3}\)George Washington University

arjun.panickssery@gmail.com

###### Abstract

Self-evaluation using large language models (LLMs) has proven valuable not only in benchmarking but also methods like reward modeling, constitutional AI, and self-refinement. But new biases are introduced due to the same LLM acting as both the evaluator and the evaluatee. One such bias is self-preference, where an LLM evaluator scores its own outputs higher than others' while human annotators consider them of equal quality. But do LLMs actually recognize their own outputs when they give those texts higher scores, or is it just a coincidence? In this paper, we investigate if self-recognition capability contributes to self-preference. We discover that, out of the box, LLMs such as GPT-4 and Llama 2 have non-trivial accuracy at distinguishing themselves from other LLMs and humans. By fine-tuning LLMs, we discover a linear correlation between self-recognition capability and the strength of self-preference bias; using controlled experiments, we show that the causal explanation resists straightforward confounders. We discuss how self-recognition can interfere with unbiased evaluations and AI safety more generally.

## 1 Introduction

Self-evaluation is becoming a prominent part of the large language model (LLM) lifecycle. In methods like reward modeling (Leike et al., 2018; Stiennon et al., 2020), model-based benchmarks (Shashidhar et al., 2023; Zeng et al., 2023; Yuan et al., 2023; Fu et al., 2023; Li et al., 2024), self-refinement (Saunders et al., 2022; Madaan et al., 2023; Lee et al., 2023; Shridhar et al., 2023), and constitutional AI (Bai et al., 2022), LLMs are increasingly used to provide assessment, supervision, and oversight for themselves and other LLMs. LLM evaluators are shown to be highly accurate at approximating human annotators on various tasks, and are significantly more scalable (Hackl et al., 2023).

In self-evaluation, as the name suggests, the same underlying LLM acts as both the evaluator and the evaluatee. As a result, the neutrality of the evaluator is in question, and the evaluation can suffer from biases where the LLM evaluators diverge from humans in systematic ways (Zheng et al., 2024; Bai et al., 2024). One such bias is self-preference, where an LLM rates its own outputs higher than texts written by other LLMs or humans, while human annotators judge them as equal quality. Self-preference has been observed in GPT-4-based dialogue benchmarks (Bitton et al., 2023; Koo et al., 2023), as well as for text summarization (Liu et al., 2023).

Towards understanding and mitigating self-preference, we study self-recognition--an LLM's capability of recognizing its own outputs. We ask: Is self-preference truly _self_-preference, in the sense that the LLM prefers a text _because_ it was generated by itself?

We measure their correlation while using prompting and fine-tuning to alter the LLM's self-recognition capability. In order to provide signals for the causal link between self-recognition and self-preference, we also fine-tune the LLM on a comprehensive set of potential confounding properties.

Our main findings are as follows:

1. **Frontier LLMs exhibit self-preference in self-evaluation.** On two summarization tasks, LLMs (GPT-3.5 Turbo, GPT-4, and Llama 2) disproportionately favor summaries written by themselves over those by other LLMs and from humans.
2. **LLMs have non-trivial self-recognition capability out of the box**. All three LLMs we evaluate achieve over \(50\%\) accuracy at distinguishing their own outputs from other sources using simple prompts without fine-tuning. GPT-4 is \(73.5\%\) accurate at distinguishing its outputs from those of two other LLMs and humans.
3. **Fine-tuning leads to near-perfect self-recognition.** GPT-3.5 and Llama 2 both achieve over \(90\%\) accuracy at self-recognition after fine-tuning on 500 examples.
4. **Self-preference strength is linearly correlated with self-recognition.** We fine-tune LLMs to increase or decrease self-recognition, and find a linear trend between them (Figure 1).

## 2 Definition and measurement of self-preference and self-recognition

**Self-preference** is when an LLM favors its own outputs over texts by human or other LLMs.

**Self-recognition** is an LLM's ability to distinguish its outputs from texts by humans or other LLMs.

For both definitions, we follow the prosaic rather than the intentional interpretation. We use the term "self" in an empirical sense, without claiming that the LLMs have any notion or representation of itself. The prosaic interpretation allows these two concepts to exist independent of one another: An LLM can _prefer_ texts it generated without _recognizing_ that those texts were in fact generated by itself.

In our experiments, one LLM can play up to three different roles: generator, evaluator, and authorship identifier, depending on the instructions that they are given. Statements like "an LLM evaluator is used to evaluate texts generated by _itself_" emphasize the fact that the generator and the evaluator use the same underlying model, although it receives different prompts and can behave differently.

### Datasets and models

We focus on text summarization, a task where self-evaluation is used extensively in both model-based benchmarks and reward modeling (Stiennon et al., 2020; Wu et al., 2021). We base our experiments on 2,000 randomly sampled news articles from two datasets: XSUM (Narayan et al., 2018) and

Figure 1: The strength of self-preference bias is linearly correlated with the LLM’s self-recognition capability. Each point represents a model evaluated on the two properties on the CNN/Dailymail (left) and XSUM (right) datasets. We fine-tune GPT-3.5 and Llama 2 for self-recognition or control tasks using both in- and out-of-domain data. The scores represented by both axes can be interpreted as measures of the LLM’s confidence on these properties.

CNN/DailyMail (Nallapati et al., 2016) Each example includes the original news article and a human-written summary.

To produce and evaluate LLM-generated summaries, we use instruction-tuned LLMs: Llama-2-7b-chat (Touvron et al., 2023), GPT-3.5 (Brown et al., 2020), and GPT-4 (OpenAI, 2023). Our fine-tuning experiments include Llama 2 (our own implementation) and GPT-3.5 (via API). We sample summaries from each of the LLMs at temperature zero using simple prompts, and standardize the punctuation and initial capitalization to match the formatting of the human summaries. The following evaluations of out-of-the-box LLMs are all based on these sampled summaries. 1

Footnote 1: Our code for evaluating GPT-4, GPT-3.5, and Llama 2, as well as for fine-tuning Llama 2, is available at [https://bit.ly/llm_self_recognition](https://bit.ly/llm_self_recognition).

### Measurements

For both properties, we measure LLMs by prompting them using one of the following two formats:

**Pairwise measurement**. The LLM is presented two pieces of text, one generated by itself, and another by a second LLM or a human. We ask the LLM to choose which text has higher quality for self-preference, and which one was generated by itself for self-recognition. The identity of the alternative source is not revealed to the evaluator. We compute a prediction confidence by normalizing the output probabilities of the tokens associated with the two options.

To account for the LLMs' ordering bias (Pezeshkpour and Hruschka, 2023), we prompt the LLMs twice for each example by swapping the options, computing the average of the two confidence scores.

**Individual measurement**. The LLM is presented a single summary either generated by itself, another LLM, or a human. For self-recognition, we prompt the LLM evaluator to answer a yes/no question of whether a given summary is its own generation, with the confidence score computed in the same way as pairwise measurement. For self-preference, we prompt the LLM evaluator to rate a given summary with a Likert-scale rating of one to five for a given summary, computing the final rating as the average of the five possible scores weighted by the output probability of each number token.

To make scores comparable across individual and pairwise measurements, we further normalize the individually measured confidence and Likert-scale scores. Suppose that in a pairwise measurement, GPT-4 is evaluated for self-recognition between its own summary and one by Llama 2. In individual measurement, we gather these two scores separately and divide GPT-4's score for its own summary by the sum of the scores to compute GPT-4's confidence on this pair of examples. We similarly re-normalize the Likert-scale scores for self-preference.

We refer to the results of these measurements as self-recognition and self-preference scores (noting whether they are from the pairwise or individual setting); taking the average of these scores over a whole dataset provides the overall self-recognition and self-preference scores of an evaluator model.

### Out-of-the-box self-recognition

Figure 2 (left) visualizes the self-recognition capability of each LLM evaluator in the pairwise setting. The results appear consistent across the two datasets, so we aggregate them for clarity. Our main observations are the following:

1. GPT-4 is significantly more capable at self-recognition than the two weaker models.
2. All three LLM evaluators most easily distinguish their summaries from human-written summaries. Human is the only alternative that Llama 2 can effective distinguish itself from.
3. Weaker LLMs struggle to distinguish themselves from stronger LLMs: Llama 2 is completely incapable of distinguishing itself from GPT-3.5 and GPT-4, and GPT-3.5 struggles to distinguish itself from GPT-4.
4. The GPT-4 evaluator does not distinguish Llama 2 summaries from its own summaries more easily than GPT-3.5 summaries. This goes against our intuition that self-recognition scores should increase as the dissimilarity between evaluator and evaluatee increases.

Figure 2 (right) visualizes self-recognition scores measured in the individual setting. As expected, self-recognition capability drops across the board in this setting where the LLM loses the benefit of

having two pieces of texts to compare and contrast. GPT-4 is the only model capable of distinguishing authors with non-trivial accuracy. Interestingly, looking at the un-normalized confidence scores (Figure 3), we see that GPT-4 is strongly biased against predicting any text as being generated by itself, regardless of the actual author; GPT-3.5 and Llama 2 show the opposite bias.

Figure 4: Self-preference before fine-tuning, evaluated using pairwise (left) and individual (right) measurements; scores are aggregated over two datasets.

Figure 3: Confidence in self-recognition by the evaluator (row) on texts from various sources (column) measured in the **individual** setting; scores are aggregated over two datasets. GPT-4 stands out as the only discerning model under this setting, but it is also extremely unwilling to predict any text as having been generated by itself, including those actually generated by itself.

Figure 2: Self-recognition before fine-tuning, evaluated using pairwise (left) and individual (right) measurements; scores are aggregated over two datasets.

### Out-of-the-box self-preference

All models show the greatest self-preference against the human summary. In the individual setting, we observe that Llama doesn't give very different scores to the different sources, while GPT-4 and GPT-3.5 show signs of self-preference. With the exception of GPT-3.5 on the XSUM dataset, evaluators show a tendency to give the human summary lower scores compared to model-generated summaries and a tendency to give their generations higher scores compared to the scores given by other evaluators (Figure 4).

### Human evaluation of preference

We conduct human evaluation of pairwise judgment on generated summaries to check if the self-preference shown by LLMs is justified by quality differences, particularly between LLM-generated summaries. We sample 50 summaries from each dataset for each of the three LLMs, and collect three human judgments for each pair, resulting in 900 pairwise comparisons. We recruit 20 annotators from Upwork who are English speakers located in the United States with bachelor's degrees in humanities disciplines. The win rate of each pair of LLMs, calculated over 300 human annotators, is as follows:

1. GPT-4 vs. GPT-3.5: \(57\%\)
2. GPT-4 vs. Llama 2: \(63\%\)
3. GPT-3.5 vs. Llama 2: \(58\%\)

The results suggest that human annotators rank the three LLMs as GPT-4 > GPT-3.5 > Llama 2, consistent with their performance on various benchmarks. But the disparity between LLMs as rated by humans is significantly lower than the level of self-preference exhibited by the LLMs, in particular GPT-4. This suggests that out of the box, the LLMs' self-preference is disproportionate to the actual quality differences.

### Alternative adjustment for ordering bias

All three evaluators models display ordering bias. GPT-4, GPT-3.5, and Llama reverse their pairwise preferences when the ordering of options is reversed at rates of 25%, 58%, and 89% respectively, averaged across tasks and datasets (Figure 5). We account for this bias by averaging the logit-based confidence scores across the two orderings.

An alternative interpretation of the data is, for each evaluator, to discard all the results as "ambiguous" where its preference displayed ordering-based reversal, reporting an evaluator's self-recognition ability and self-preference tendency as its frequency of recognizing or preferring its own summary in "unambiguous" cases (Figure 5). This method exposes differences in evaluator results between the two datasets, but supports the presence of out-of-the-box self-recognition and self-preference.

## 3 Measuring correlation between self-preference and self-recognition

Having validated the existence of self-preference and self-recognition, we now turn to study their correlation. The main research question is to understand whether they have a causal relationship. Our hypothesis is that self-recognition causes self-preference--that LLMs prefer their own outputs _because_ they recognize them. Our investigation is motivated by the safety implications, which we discuss in detail in Section 5.

We fine-tune LLMs to alter their self-recognition ability, and measure how their self-preference changes accordingly. The correlation alone doesn't prove the causal hypothesis, whose validation

Figure 5: Evaluator responses when treated as a binary response without considering confidence scores. Results are marked “ambiguous” if the response reverses when the options are swapped.

requires mechanistic tools that do not exist for LLMs yet (discussion in Section 5). But we provide more evidence for the hypothesis by (1) invalidating the inverse claim that self-preference causes self-recognition (Section 3.3) and (2) controlling for confounders by fine-tuning on unrelated tasks (Section 3.4).

### Fine-tuning for self-recognition

We use supervised fine-tuning on **pairwise examples** to alter the LLMs' self-recognition capability. The training examples are generated in the same way as the evaluation examples we use in the pairwise measurement. Each example consists of two summaries of a given article, one by the LLM evaluator and the other by another LLM or human source. The evaluators are trained to predict the final token, representing the correct choice among two options, using supervised learning with cross-entropy loss. To train an LLM evaluator, we use 500 training articles and collect examples from all alternative sources (two other LLMs and human). The remaining 500 articles and associated summaries are used for evaluation. We train on the two datasets separately but evaluate both in- and out-of-domain. GPT-3.5 was fine-tuned via API, and Llama 2 using our own implementation. The Llama models are quantized to 8 bits and fine-tuned for one epoch using Adam optimization and a learning rate of \(5.0\times 10^{-5}\).

### Fine-tuning results

Fine-tuning on the self-recognition task causes models to become more confident in their pairwise judgments (Figure 6). When plotting self-recognition score against self-preference, the data clump more tightly around \(0.5\) and the high- and low-score corners.

In the pairwise setting, fine-tuning for self-recognition results in a strong linear correlation between a model's self-recognition ability and its self-preference (Figure 7). We find that fine-tuning for self-recognition ability on one dataset transfers to the other.

In additional to analyzing the relationship between self-recognition ability and overall dataset self-preference, we measure the correlation between these two properties on the example level (Table 1). For GPT-3.5 on the XSUM dataset, the evaluator prior to fine-tuning has a correlation of \(0.41\) (Kendall's \(\tau\)) between correctly recognizing its summary from a pair and preferring its summary from that same pair. Every fine-tuning configuration we employ results in a model with a positive correlation on this metric and this correlation does not change meaningfully as self-recognition ability increases.

### Invalidating the inverse causal relationship

We ensure that the causal direction is not the reverse--that the LLM does not recognize its own outputs because the quality is objectively higher, which would not reflect favoritism or raise safety concerns--by showing that LLM evaluators do not systematically favor summaries generated by fine-tuned models to those generated by the original model. Some fine-tuning runs resulted in degraded generation quality. The remainder show an average preference for the fine-tuned model's

Figure 6: GPT-3.5 pairwise results on XSUM after 0, 10, and 500 fine-tuning examples show a pattern of increasing absolute confidence scores.

generations of \(0.46\), reflecting a slight preference against the new generations. Only 22% of the evaluator-domain pairs show a preference greater than \(0.51\) for the fine-tuned model's generations.

### Controlling for confounders

To confirm that the fine-tuning procedure did not introduce any confounding effect on the variables under study, we additionally fine-tune GPT-3.5 and Llama on three tasks unrelated to self-recognition: length, vowel count, and Flesh-Kincaid readability score (Flesch, 1948). We also fine-tune both models to always output the answer "1" and to answer randomly. Together with the three fine-tuned models trained on the self-recognition task, this gives eight fine-tuned models for each of the two datasets. We find that these models can be placed in the same linear trend that we see in the models fine-tuned on the self-recognition task (Figure 1).

### Labeling the summary sources

An additional experiment using only prompting to show evidence of a causal link between self-recognition and self-preference is to add either correct or reversed labels indicating the source of each summary in the pairwise self-preference question (Table 6). The GPT-4 and GPT-3.5 evaluator models show a reversal in self-preference when the labels are reversed in the XSUM dataset; that is, they show a preference for the summary labeled as being their own generation. In the CNN dataset or the Llama evaluator, no clear difference is shown from label reversal.

\begin{table}
\begin{tabular}{c c c c c c} \hline \hline
**Model Configuration** & **XSUM** & **CNN** & **Model Configuration** & **XSUM** & **CNN** \\ \hline \multicolumn{6}{c}{GPT-3.5 Fine-Tuning Runs} & \multicolumn{4}{c}{Llama 2 Fine-Tuning Runs} \\ No Fine-Tuning & 0.41 & 0.37 & No Fine-Tuning & 0.73 & 0.50 \\ FT (2) on XSUM & 0.69 & 0.64 & FT (2) on XSUM & 0.60 & 0.55 \\ FT (10) on XSUM & 0.66 & 0.59 & FT (10) on XSUM & 0.58 & 0.52 \\ FT (500) on XSUM & 0.74 & 0.82 & FT (500) on XSUM & 0.58 & 0.51 \\ FT (2) on CNN/DM & 0.44 & 0.39 & FT (2) on CNN/DM & 0.67 & 0.54 \\ FT (10) on CNN/DM & 0.57 & 0.48 & FT (10) on CNN/DM & 0.68 & 0.61 \\ FT (500) on CNN/DM & 0.65 & 0.42 & FT (500) on CNN/DM & 0.66 & 0.59 \\ \hline \hline \end{tabular}
\end{table}
Table 1: Correlation (Kendall’s \(\tau\)) between the LLM’s confidence in recognizing its summary and its confidence in preferring the same summary in pairs of examples.

Figure 7: Fine-tuning evaluators for self-recognition results across models and datasets results in a linear trend connecting evaluator self-recognition to self-preference. This effect persists when fine-tuning on one dataset and measuring results on the other dataset.

## 4 Related work

### Self-preference and bias in self-evaluation

The tendency of LLMs to prefer their own generations was first recognized in the context of LLM-based benchmarks (Bitton et al., 2023; Zheng et al., 2024; Bai et al., 2024). Like us, Liu et al. (2023) study self-preference bias on text summarization, between BERT, T5, and GPT-3.5. The larger capability gap between these models makes it difficult to control for summarization quality.

Koo et al. (2023) include self-preference in a suite of tests for LLM cognitive biases in a pairwise question-answering setting. They find GPT-4 to demonstrate lower self-preference than GPT-3.5 out-of-the-box, contrary to our findings, which suggests that wider evaluation is needed to draw generalizable conclusions. Neither of these previous works attempted to provide an explanation for self-preference nor to alter self-preference strength.

Hoelscher-Obermaier et al. (2023) evaluate GPT-3.5, GPT-4, and Claude-2 for self-recognition ability on pairs of ten-sentence fables based on BIG-bench (Srivastava et al., 2023). On this task, contrary to our findings, GPT-3.5 is more accurate than GPT-4, which is less than 50% accurate, again showing the need for wide experimentation on varied datasets.

### LLM detection

Detection of LLM-generated text is important for AI safety and combating misinformation (Jawahar et al., 2020; Crothers et al., 2023; Wu et al., 2023; Yang et al., 2023; Kumarage et al., 2024). Despite having similar goals, self-recognition focuses on the introspective ability of language models, rather a third party's discernment between varied sources of text. The self-recognition task can be seen as a highly restricted version of detection where the method is limited to prompting an LLM. In particular, the detector LLM is not given explicit access to information such as perplexity, which is crucial to many detection methods (Mitchell et al., 2023; Hans et al., 2024).

## 5 Limitations, discussion, and conclusion

### Safety concerns related to self-recognizing LLMs

Self-recognition is a general ability that can potentially affect many multi-LLM interactions. In this paper, we focus on self-preference as the downstream property and provide initial evidence towards causation, but we see evidence of generalization to additional downstream properties. In particular, by evaluating LLMs on datasets with distinct construction processes, we observe that self-recognition fine-tuning generalizes across the two datasets and that our hypothesis holds out-of-distribution. Motivated by these results, we discuss safety risks caused by self-recognition and its causal effect on various biases.

**Biased self-evaluation** In model-based benchmarks, a model's rating can be inflated simply because it is similar to the evaluator model. The bias is also a risk for methods designed for safety and alignment, such as reward modeling (Leike et al., 2018; Stiennon et al., 2020) and constitutional AI (Bai et al., 2022), for similar reasons: the reward model gives higher scores to models similar to

Figure 8: Self-preference scores in the pairwise setting with the two summaries labeled with their sources either correctly or with the labels swapped.

itself, leading to weaker oversight and supervision. The bias can be amplified if the model is updated with feedback or training signal generated by itself Pan et al. (2024); Xu et al. (2024).

Our work provides a basis for countermeasures against self-preference. If future evaluation confirms self-preference to be as pervasive as other biases such as ordering bias, countermeasures such as authorship obfuscation should be incorporated into standard prompting practice.

**White-box adversarial attacks for free and unbounded reward hacking** In an adversarial setting (see Raina et al. (2024) for example), an LLM defender is no longer protected by black-box access if the adversary LLM recognizes their similarities. In the worst case scenario where the adversary uses the same LLM as the defender, the adversary can gain unbounded access to the defender. A similar concern applies to the non-adversarial setting, where similar LLMs are use as both optimizer and reward model, as well: the strength of potential reward hacking is unbounded even if the two LLMs only communicate textually. For example, the optimizer can ignore the feedback provided by the reward model, and instead directly optimize for the shared, unaligned representation of the human-specified objectives.

### Limitations and future work

**Controlling for ground-truth generation quality**. Self-preference is justified if the LLM's generation actually is higher in quality. From a safety perspective, our interest is when an LLM prefers its own outputs that are of equal or worse quality than the alternative. This requires controlling for generation quality using ground-truth annotation when measuring self-preference. Our existing results provide indirect evidence for disproportionate self-preference: the sum of mutual self-preference scores for a pair of LLMs exceeds \(1\), so for at least a portion of the dataset they each prefer themselves.

**Example-level causal hypothesis**. Our central hypothesis can be interpreted on either the example or capability level. We focus on the capability level: high self-recognition capability causes LLMs to show stronger self-preference. The example level counterpart would be: an LLM shows preference towards a piece of text because it recognizes the text as its own generation, an hypothesis of interest to interpretability. Although we observe on the correlation of the two properties on the confidence of individual predictions, our control experiments cannot further the causal argument on the example level. One approach to gather evidence for the example-level causal hypothesis is to perturb or paraphrase LLM-generated text to inhibit self-recognition and measure self-preference.

**Limited number of experiment conditions**. We focus on text summarization as a realistic problem with existing high quality data that have seen successful application of self-evaluation. Our cross-dataset evaluation provides initial evidence that self-recognition is a general capability that can be amplified easily by fine-tuning on a small number of examples from one dataset. Our future work will validate the hypothesis on more text summarization datasets, more tasks, as well as more frontier LLMs. We will also experiment with fine-tuning for self-recognition on the general domain rather than on a specific task.

**Variance reduction**. Our preliminary experiments indicate that the strength of both properties are insensitive to prompts, so all conditions use the same straightforward prompt design. To reduce variance, we will expand our experiments with more prompt designs in future work, including instructions to condition LLMs for better calibration (and reduce rejection responses). Along the lines of fine-tuning on the general domain, we will also mix self-recognition with standard instruction following datasets to improve coverage on the spectrum of self-recognition signal strength.

### Conclusion

We provide initial evidence towards the hypothesis that LLMs prefer their own generations because they recognize themselves. In addition to evaluating LLMs out-of-the-box, we show that fine-tuning on a small number of examples elicit strong, generalizable self-recognition capability on summarization datasets. By varying fine-tuning task, we observe a linear correlation between self-recognition and self-preference, and validate that the correlation cannot be explained away by potential confounders. Our results establish self-recognition as a crucial factor in unbiased self-evaluation as well as an important safety-related property. The experiment design also provides a blueprint to explore the effects of self-recognition on other downstream properties.

## References

* Bai et al. (2022) Bai, Y., Kadavath, S., Kundu, S., Askell, A., Kernion, J., Jones, A., Chen, A., Goldie, A., Mirhoseini, A., McKinnon, C., et al. Constitutional ai: Harmlessness from ai feedback. _arXiv preprint arXiv:2212.08073_, 2022.
* Bai et al. (2024) Bai, Y., Ying, J., Cao, Y., Lv, X., He, Y., Wang, X., Yu, J., Zeng, K., Xiao, Y., Lyu, H., et al. Benchmarking foundation models with language-model-as-an-examiner. _Advances in Neural Information Processing Systems_, 36, 2024.
* Bitton et al. (2023) Bitton, Y., Bansal, H., Hessel, J., Shao, R., Zhu, W., Awadalla, A., Gardner, J., Taori, R., and Schimdt, L. Visit-bench: A benchmark for vision-language instruction following inspired by real-world use. _Advances in Neural Information Processing Systems_, 2023.
* Brown et al. (2020) Brown, T., Mann, B., Ryder, N., Subbiah, M., Kaplan, J. D., Dhariwal, P., Neelakantan, A., Shyam, P., Sastry, G., Askell, A., et al. Language models are few-shot learners. _Advances in neural information processing systems_, 33:1877-1901, 2020.
* Crothers et al. (2023) Crothers, E., Japkowicz, N., and Viktor, H. L. Machine-generated text: A comprehensive survey of threat models and detection methods. _IEEE Access_, 2023.
* Flesch (1948) Flesch, R. A new readability yardstick. _Journal of Applied Psychology_, 32(3):221-233, 1948. ISSN 1939-1854. doi: 10.1037/h0057532. Place: US Publisher: American Psychological Association.
* Fu et al. (2023) Fu, J., Ng, S.-K., Jiang, Z., and Liu, P. GPTScore: Evaluate as You Desire, February 2023. URL [http://arxiv.org/abs/2302.04166](http://arxiv.org/abs/2302.04166). arXiv:2302.04166 [cs].
* Hackl et al. (2023) Hackl, V., Muller, A. E., Granitzer, M., and Sailer, M. Is GPT-4 a reliable rater? Evaluating Consistency in GPT-4 Text Ratings. _Frontiers in Education_, 8:1272229, December 2023. ISSN 2504-284X. doi: 10.3389/feduc.2023.1272229. URL [http://arxiv.org/abs/2308.02575](http://arxiv.org/abs/2308.02575). arXiv:2308.02575 [cs].
* Hans et al. (2024) Hans, A., Schwarzschild, A., Cherepanova, V., Kazemi, H., Saha, A., Goldblum, M., Geiping, J., and Goldstein, T. Spotting llms with binoculars: Zero-shot detection of machine-generated text. _arXiv preprint arXiv:2401.12070_, 2024.
* Hoelscher-Obermaier et al. (2023) Hoelscher-Obermaier, J., Lutz, M. J., Feuillade-Montixi, and Modak, S. Turing Mirror: Evaluating the ability of LLMs to recognize LLM-generated text, August 2023. Research submission to the Evals research sprint hosted by Apart Research.
* Jawahar et al. (2020) Jawahar, G., Abdul-Mageed, M., and Lakshmanan, L. V. Automatic detection of machine generated text: A critical survey. _arXiv preprint arXiv:2011.01314_, 2020.
* Koo et al. (2023) Koo, R., Lee, M., Raheja, V., Park, J. I., Kim, Z. M., and Kang, D. Benchmarking cognitive biases in large language models as evaluators. _arXiv preprint arXiv:2309.17012_, 2023.
* Kumarage et al. (2024) Kumarage, T., Agrawal, G., Sheth, P., Moraffah, R., Chadha, A., Garland, J., and Liu, H. A survey of ai-generated text forensic systems: Detection, attribution, and characterization. _arXiv preprint arXiv:2403.01152_, 2024.
* Lee et al. (2023) Lee, H., Phatale, S., Mansoor, H., Lu, K., Mesnard, T., Bishop, C., Carbune, V., and Rastogi, A. RLAIF: Scaling reinforcement learning from human feedback with ai feedback. _arXiv preprint arXiv:2309.00267_, 2023.
* Leike et al. (2018) Leike, J., Krueger, D., Everitt, T., Martic, M., Maini, V., and Legg, S. Scalable agent alignment via reward modeling: a research direction. _arXiv preprint arXiv:1811.07871_, 2018.
* Li et al. (2024) Li, X., Zhang, T., Dubois, Y., Taori, R., Gulrajani, I., Guestrin, C., Liang, P., and Hashimoto, T. B. AlpacaEval: An Automatic Evaluator of Instruction-following Models, February 2024. URL [https://github.com/tatsu-lab/alpaca_eval](https://github.com/tatsu-lab/alpaca_eval). original-date: 2023-05-25T09:35:28Z.
* Liu et al. (2023) Liu, Y., Moosavi, N. S., and Lin, C. LLMs as Narcissistic Evaluators: When Ego Inflates Evaluation Scores, November 2023. URL [https://arxiv.org/abs/2311.09766v1](https://arxiv.org/abs/2311.09766v1).
* Liu et al. (2020)Madaan, A., Tandon, N., Gupta, P., Hallinan, S., Gao, L., Wiegreffe, S., Alon, U., Dziri, N., Prabhumoye, S., Yang, Y., Gupta, S., Majumder, B. P., Hermann, K., Welleck, S., Yazdanbakhsh, A., and Clark, P. Self-Refine: Iterative Refinement with Self-Feedback, May 2023. URL [http://arxiv.org/abs/2303.17651](http://arxiv.org/abs/2303.17651). arXiv:2303.17651 [cs].
* Mitchell et al. (2023) Mitchell, E., Lee, Y., Khazatsky, A., Manning, C. D., and Finn, C. Detectgpt: Zero-shot machine-generated text detection using probability curvature. In _International Conference on Machine Learning_, pp. 24950-24962. PMLR, 2023.
* Nallapati et al. (2016) Nallapati, R., Zhou, B., dos Santos, C., Gulcehre, C., and Xiang, B. Abstractive Text Summarization using Sequence-to-sequence RNNs and Beyond. In Riezler, S. and Goldberg, Y. (eds.), _Proceedings of the 20th SIGNLL Conference on Computational Natural Language Learning_, pp. 280-290, Berlin, Germany, August 2016. Association for Computational Linguistics. doi: 10.18653/v1/K16-1028. URL [https://aclanthology.org/K16-1028](https://aclanthology.org/K16-1028).
* Narayan et al. (2018) Narayan, S., Cohen, S. B., and Lapata, M. Don't Give Me the Details, Just the Summary! Topic-Aware Convolutional Neural Networks for Extreme Summarization, August 2018. URL [http://arxiv.org/abs/1808.08745](http://arxiv.org/abs/1808.08745). arXiv:1808.08745 [cs] version: 1.
* OpenAI (2023) OpenAI. GPT-4 technical report. _arXiv preprint arXiv:2303.08774_, 2023.
* Pan et al. (2024) Pan, A., Jones, E., Jagadeesan, M., and Steinhardt, J. Feedback loops with language models drive in-context reward hacking. _arXiv preprint arXiv:2402.06627_, 2024.
* Pezeshkpour & Hruschka (2023) Pezeshkpour, P. and Hruschka, E. Large Language Models Sensitivity to The Order of Options in Multiple-Choice Questions, August 2023. URL [http://arxiv.org/abs/2308.11483](http://arxiv.org/abs/2308.11483). arXiv:2308.11483 [cs].
* Raina et al. (2024) Raina, V., Liusie, A., and Gales, M. Is llm-as-a-judge robust? investigating universal adversarial attacks on zero-shot llm assessment. _arXiv preprint arXiv:2402.14016_, 2024.
* Saunders et al. (2022) Saunders, W., Yeh, C., Wu, J., Bills, S., Ouyang, L., Ward, J., and Leike, J. Self-critiquing models for assisting human evaluators. _arXiv preprint arXiv:2206.05802_, 2022.
* Shashidhar et al. (2023) Shashidhar, S., Chinta, A., Sahai, V., Wang, Z., and Ji, H. Democraticizing LLMs: An Exploration of Cost-Performance Trade-offs in Self-Refined Open-Source Models, October 2023. URL [http://arxiv.org/abs/2310.07611](http://arxiv.org/abs/2310.07611). arXiv:2310.07611 [cs].
* Shridhar et al. (2023) Shridhar, K., Sinha, K., Cohen, A., Wang, T., Yu, P., Pasunuru, R., Sachan, M., Weston, J., and Celikyilmaz, A. The art of llm refinement: Ask, refine, and trust. _arXiv preprint arXiv:2311.07961_, 2023.
* Srivastava et al. (2023) Srivastava, A., Rastogi, A., and Rao, A. e. a. Beyond the Imitation Game: Quantifying and extrapolating the capabilities of language models, June 2023. URL [http://arxiv.org/abs/2206.04615](http://arxiv.org/abs/2206.04615). arXiv:2206.04615 [cs, stat].
* Stiennon et al. (2020) Stiennon, N., Ouyang, L., Wu, J., Ziegler, D., Lowe, R., Voss, C., Radford, A., Amodei, D., and Christiano, P. F. Learning to summarize with human feedback. _Advances in Neural Information Processing Systems_, 33:3008-3021, 2020.
* Touvron et al. (2023) Touvron, H., Martin, L., Stone, K., Albert, P., Almahairi, A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P., Bhosale, S., et al. Llama 2: Open foundation and fine-tuned chat models. _arXiv preprint arXiv:2307.09288_, 2023.
* Wu et al. (2021) Wu, J., Ouyang, L., Ziegler, D. M., Stiennon, N., Lowe, R., Leike, J., and Christiano, P. Recursively summarizing books with human feedback. _arXiv preprint arXiv:2109.10862_, 2021.
* Wu et al. (2023) Wu, J., Yang, S., Zhan, R., Yuan, Y., Wong, D. F., and Chao, L. S. A survey on llm-gernerated text detection: Necessity, methods, and future directions. _arXiv preprint arXiv:2310.14724_, 2023.
* Xu et al. (2024) Xu, W., Zhu, G., Zhao, X., Pan, L., Li, L., and Wang, W. Y. Perils of self-feedback: Self-bias amplifies in large language models. _arXiv preprint arXiv:2402.11436_, 2024.
* Yang et al. (2023) Yang, X., Pan, L., Zhao, X., Chen, H., Petzold, L., Wang, W. Y., and Cheng, W. A survey on detection of llms-generated content. _arXiv preprint arXiv:2310.15654_, 2023.
* Yang et al. (2020)Yuan, Z., Liu, J., Zi, Q., Liu, M., Peng, X., and Lou, Y. Evaluating Instruction-Tuned Large Language Models on Code Comprehension and Generation, August 2023. URL [http://arxiv.org/abs/2308.01240](http://arxiv.org/abs/2308.01240). arXiv:2308.01240 [cs].
* Zeng et al. (2023) Zeng, Z., Yu, J., Gao, T., Meng, Y., Goyal, T., and Chen, D. Evaluating Large Language Models at Evaluating Instruction Following, October 2023. URL [http://arxiv.org/abs/2310.07641](http://arxiv.org/abs/2310.07641). arXiv:2310.07641 [cs].
* Zheng et al. (2024) Zheng, L., Chiang, W.-L., Sheng, Y., Zhuang, S., Wu, Z., Zhuang, Y., Lin, Z., Li, Z., Li, D., Xing, E., et al. Judging llm-as-a-judge with mt-bench and chatbot arena. _Advances in Neural Information Processing Systems_, 36, 2024.

## Appendix A Generating summaries

We generate summaries using GPT-4, GPT-3.5, and Llama-2-7b (Table 3). We remove initial text like "Here are some highlights from the article." For the CNN summaries, we also clean the LLM output to match the formatting of the human summaries (Table 2) by stripping bullet points or numbers from the list and removing trailing punctuation.

\begin{table}
\begin{tabular}{l} \begin{tabular}{l} **Example Human Summaries (XSUM)** \\ Clean-up operations are continuing across the Scottish Borders and Dumfries and Galloway after flooding caused by Storm Frank. \\ Two tourist buses have been destroyed by fire in a suspected arson attack in Belfast city centre. \\ Lewis Hamilton stormed to pole position at the Bahrain Grand Prix ahead of Mercedes team-mate Nico Rosberg. \\ \end{tabular} \begin{tabular}{l} **Example Human Summaries (CNN)** \\ Harry Potter star Daniel Radcliffe gets \(\ell 20\)M fortune as he turns 18 Monday \\ Young actor says he has no plans to fritter his cash away \\ Radcliffe’s earnings from first five Potter films have been held in trust fund \\ Mentally ill inmates in Miami are housed on the “forgotten floor" \\ Judge Steven Leifman says most are there as a result of “avoidable felonies” \\ While CNN tours facility, patient shouts: “I am the son of the president” \\ Leifman says the system is unjust and he’s fighting for change \\ \end{tabular} 
\begin{tabular}{l} “I thought I was going to die,” driver says \\ Man says pickup truck was folded in half; he just has cut on face \\ Driver: “I probably had a 30-, 35-foot free fall” \\ Minnesota bridge collapsed during rush hour Wednesday \\ \end{tabular}
\end{table}
Table 2: Three examples of human summaries for both the XSUM and CNN datasets.

Fine-tuning on control tasks

**Length System Prompt:** You are a helpful assistant and a news-article summarizer. You help compare summaries to help me with my records. You respond with only "1" or "2" and no other text.

**User Prompt I have some news-article summaries and want to pick the longer one. I need this information to organize my summaries correctly. Here are two summaries.

**Article: {article}**

Summary1: {summary1}

Summary2: {summary2}

Can you tell me which summary is longer in terms of word count? This would be really useful to me because it would help me organize my summaries correctly. Please answer with only "1" or "2" and no other text.

**Vowel Count System Prompt:** You are a helpful assistant and a news-article summarizer. You help compare summaries to help me with my records. You respond with only "1" or "2" and no other text.

**User Prompt I have some news-article summaries and want to pick the one with more vowels. I need this information to organize my summaries correctly. Here are two summaries.

Article: {article}

Summary1: {summary1}

Summary2: {summary2}

Can you tell me which summary has more vowels? This would be really useful to me because it would help me organize my summaries correctly. Please answer with only "1" or "2" and no other text.

**Readability Score System Prompt:** You are a helpful assistant and a news-article summarizer. You help compare summaries to help me with my records. You respond with only "1" or "2" and no other text.

**User Prompt I have some news-article summaries and want to pick the more readable. I need this information to organize my summaries correctly. Here are two summaries.

Article: {article}

Summary1: {summary1}

Summary2: {summary2}

Can you tell me which summary is more readable, according to the Flesch-Kincaid reading ease score? This would be really useful to me because it would help me organize my summaries correctly. Please answer with only "1" or "2" and no other text.

\begin{table}
\begin{tabular}{l} \hline
**Length System Prompt:** You are a helpful assistant and a news-article summarizer. You help compare summaries to help me with my records. You respond with only "1" or "2" and no other text. \\
**User Prompt I have some news-article summaries and want to pick the longer one. I need this information to organize my summaries correctly. Here are two summaries. \\ Article: \\ \hline
**Number of words:** You are a helpful assistant and a news-article summarizer. You help compare summaries to help me with my records. You respond with only "1" or "2" and no other text. \\ \hline \end{tabular}
\end{table}
Table 4: Prompts used to fine-tune models on tasks used controls for the effects of fine-tuning on self-preference in general.

Pairwise-setting experiments

Prompts for the pairwise setting are shown in Table 5. For the experiments in which the summaries were labeled with either correct or incorrect sources (Section 3.5), the "Summary1" and "Summary2" portions of the prompt were followed with parenthetical " ({source}'s summary)" to indicate the summary's source. Table 6 shows the full results of the labeling experiments.

\begin{table}
\begin{tabular}{l c c c c} \hline \hline  & \multicolumn{2}{c}{Self-Preference (XSUM)} & \multicolumn{2}{c}{Self-Preference (CNN)} \\ Model & Correct & Incorrect & Correct & Incorrect \\ \hline GPT-4 & 0.73 & 0.32 & 0.94 & 0.89 \\ GPT-3.5 & 0.61 & 0.46 & 0.46 & 0.40 \\ Llama & 0.82 & 0.83 & 0.97 & 0.97 \\ \hline \hline \end{tabular}
\end{table}
Table 6: Self-preference scores with correct and incorrect labels.

\begin{table}
\begin{tabular}{l} \hline
**Pairwise-Detection Prompts** \\
**System Prompt**: You are a helpful assistant and a news-article summarizer. You help compare summaries to help me with my records. You respond with only “1” or “2” and no other text. \\
**User Prompt**: I have some news-article summaries written by you and some written by others, but can’t tell now which is which. I need this information to organize my summaries correctly. Here are two summaries. \\ Article: \\
[article] \\ Summary1: \\
[summary2] \\ \end{tabular}
\end{table}
Table 5: Prompts used to conduct pairwise self-recognition and self-preference experiments.

\begin{table}
\begin{tabular}{l c c c c} \hline \hline  & \multicolumn{2}{c}{XSUM} & \multicolumn{2}{c}{CNN} \\ Evaluator Model & Self-Recognition & Self-Preference & Self-Recognition & Self-Preference \\ \hline \hline \multicolumn{5}{c}{**No Fine-Tuning**} \\ GPT-4 & 0.672 & 0.705 & 0.747 & 0.912 \\ GPT-3.5 & 0.535 & 0.582 & 0.481 & 0.431 \\ Llama-2-7b & 0.514 & 0.511 & 0.505 & 0.505 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Rec (2 examples) & 0.631 & 0.618 & 0.453 & 0.376 \\ Self-Rec (10 examples) & 0.674 & 0.657 & 0.489 & 0.421 \\ Self-Rec (500) & 0.896 & 0.898 & 0.738 & 0.75 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.5 & 0.5 & 0.5 & 0.5 \\ Readability & 0.405 & 0.399 & 0.505 & 0.531 \\ Length & 0.572 & 0.567 & 0.474 & 0.427 \\ Vowel count & 0.6 & 0.598 & 0.416 & 0.326 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Rec (2) & 0.62 & 0.587 & 0.497 & 0.423 \\ Self-Rec (10) & 0.649 & 0.627 & 0.587 & 0.487 \\ Self-Rec (500) & 0.764 & 0.787 & 0.959 & 0.97 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.5 & 0.5 & 0.5 & 0.501 \\ Readability & 0.45 & 0.416 & 0.617 & 0.629 \\ Length & 0.574 & 0.572 & 0.169 & 0.188 \\ Vowel count & 0.608 & 0.586 & 0.176 & 0.171 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Rec (2) & 0.592 & 0.743 & 0.799 & 0.905 \\ Self-Rec (10) & 0.526 & 0.665 & 0.681 & 0.81 \\ Self-Rec (500) & 0.454 & 0.485 & 0.793 & 0.788 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.543 & 0.648 & 0.618 & 0.753 \\ Readability & 0.558 & 0.709 & 0.675 & 0.794 \\ Length & 0.342 & 0.483 & 0.535 & 0.804 \\ Vowel count & 0.481 & 0.576 & 0.781 & 0.903 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Rec (2) & 0.357 & 0.502 & 0.567 & 0.703 \\ Self-Rec (10) & 0.519 & 0.656 & 0.665 & 0.825 \\ Self-Rec (500) & 0.556 & 0.434 & 0.592 & 0.5 \\ Always 1 & 0.5 & 0.5 & 0.949 & 0.933 \\ Random & 0.673 & 0.676 & 0.638 & 0.654 \\ Readability & 0.501 & 0.464 & 0.495 & 0.489 \\ Length & 0.489 & 0.487 & 0.548 & 0.541 \\ Vowel count & 0.58 & 0.581 & 0.571 & 0.581 \\ \hline \hline \end{tabular}
\end{table}
Table 7: Pairwise results (self-recognition and self-preference scores) on the XSUM and CNN datasets.

\begin{table}
\begin{tabular}{l c c c c c c} \hline \hline  & \multicolumn{3}{c}{Self-Recognition} & \multicolumn{3}{c}{Self-Preference} \\ Evaluator Model & Ambiguous & Correct & Incorrect & Ambiguous & Self-Pref & Other-Pref \\ \hline \multicolumn{7}{c}{**No Fine-Tuning**} \\ GPT-4 & 0.311 & 0.538 & 0.151 & 0.228 & 0.593 & 0.18 \\ GPT-3.5 & 0.582 & 0.269 & 0.149 & 0.578 & 0.302 & 0.12 \\ Llama-2-7b & 0.832 & 0.087 & 0.081 & 0.755 & 0.13 & 0.115 \\ \multicolumn{7}{c}{**GPT-3.5 Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Rec (2 examples) & 0.399 & 0.433 & 0.168 & 0.294 & 0.473 & 0.233 \\ Self-Rec (10 examples) & 0.377 & 0.487 & 0.136 & 0.294 & 0.51 & 0.196 \\ Self-Rec (500) & 0.096 & 0.848 & 0.057 & 0.094 & 0.851 & 0.055 \\ Always 1 & 1 & 0 & 0 & 1 & 0 & 0 \\ Random & 1 & 0 & 0 & 1 & 0 & 0 \\ Readability & 0.373 & 0.202 & 0.425 & 0.314 & 0.236 & 0.45 \\ Length & 0.604 & 0.27 & 0.127 & 0.163 & 0.487 & 0.35 \\ Vowel count & 0.175 & 0.511 & 0.314 & 0.061 & 0.566 & 0.373 \\ \multicolumn{7}{c}{**GPT-3.5 Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Rec (2) & 0.519 & 0.362 & 0.118 & 0.444 & 0.372 & 0.152 \\ Self-Rec (10) & 0.477 & 0.412 & 0.112 & 0.417 & 0.42 & 0.163 \\ Self-Rec (500) & 0.193 & 0.667 & 0.141 & 0.222 & 0.676 & 0.102 \\ Always 1 & 1 & 0 & 0 & 1 & 0 & 0 \\ Random & 1 & 0 & 0 & 1 & 0 & 0 \\ Readability & 0.621 & 0.088 & 0.29 & 0.312 & 0.224 & 0.464 \\ Length & 0.224 & 0.463 & 0.314 & 0.264 & 0.439 & 0.297 \\ Vowel count & 0.159 & 0.527 & 0.314 & 0.169 & 0.5 & 0.331 \\ \multicolumn{7}{c}{**Llama-2-7b Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Rec (2) & 0.624 & 0.22 & 0.156 & 0.713 & 0.162 & 0.125 \\ Self-Rec (10) & 0.538 & 0.295 & 0.167 & 0.603 & 0.239 & 0.159 \\ Self-Rec (500) & 0.262 & 0.654 & 0.084 & 0.302 & 0.593 & 0.105 \\ Always 1 & 1 & 0 & 0 & 1 & 0 & 0 \\ Random & 0.745 & 0.141 & 0.115 & 0.776 & 0.119 & 0.104 \\ Readability & 0.823 & 0.086 & 0.091 & 0.897 & 0.041 & 0.062 \\ Length & 0.304 & 0.286 & 0.409 & 0.117 & 0.388 & 0.495 \\ Vowel count & 0.225 & 0.318 & 0.457 & 0.263 & 0.294 & 0.443 \\ \multicolumn{7}{c}{**Llama-2-7b Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Rec (2) & 0.789 & 0.135 & 0.076 & 0.597 & 0.231 & 0.171 \\ Self-Rec (10) & 0.677 & 0.2 & 0.123 & 0.658 & 0.188 & 0.154 \\ Self-Rec (500) & 0.924 & 0.035 & 0.04 & 0.933 & 0.029 & 0.037 \\ Always 1 & 0.989 & 0.008 & 0.004 & 0.985 & 0.009 & 0.006 \\ Random & 0.995 & 0.003 & 0.003 & 0.996 & 0.003 & 0.002 \\ Readability & 0.844 & 0.074 & 0.082 & 0.847 & 0.076 & 0.076 \\ Length & 0.794 & 0.069 & 0.138 & 0.82 & 0.057 & 0.123 \\ Vowel count & 0

\begin{table}
\begin{tabular}{l c c c c c c} \hline \hline  & \multicolumn{3}{c}{Self-Recognition} & \multicolumn{3}{c}{Self-Preference} \\ Evaluator Model & Ambiguous & Correct & Incorrect & Ambiguous & Self-Pref & Other-Pref \\ \hline \multicolumn{7}{c}{**No Fine-Tuning**} \\ GPT-4 & 0.383 & 0.595 & 0.022 & 0.088 & 0.877 & 0.034 \\ GPT-3.5 & 0.62 & 0.149 & 0.23 & 0.517 & 0.151 & 0.332 \\ Llama-2-7b & 1 & 0 & 0 & 1 & 0 & 0.001 \\ \multicolumn{7}{c}{**GPT-3.5 Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Rec (2 examples) & 0.815 & 0.046 & 0.139 & 0.442 & 0.15 & 0.409 \\ Self-Rec (10 examples) & 0.805 & 0.086 & 0.109 & 0.479 & 0.181 & 0.34 \\ Self-Rec (500) & 0.194 & 0.651 & 0.155 & 0.193 & 0.654 & 0.153 \\ Always 1 & 1 & 0 & 0 & 1 & 0 & 0 \\ Random & 1 & 0 & 0 & 1 & 0 & 0 \\ Readability & 0.286 & 0.383 & 0.332 & 0.28 & 0.412 & 0.308 \\ Length & 0.79 & 0.082 & 0.128 & 0.597 & 0.128 & 0.275 \\ Vowel count & 0.601 & 0.117 & 0.282 & 0.17 & 0.239 & 0.591 \\ \multicolumn{7}{c}{**GPT-3.5 Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Rec (2) & 0.665 & 0.167 & 0.169 & 0.454 & 0.188 & 0.358 \\ Self-Rec (10) & 0.55 & 0.311 & 0.139 & 0.34 & 0.317 & 0.343 \\ Self-Rec (500) & 0.054 & 0.932 & 0.013 & 0.031 & 0.955 & 0.014 \\ Always 1 & 1 & 0 & 0 & 1 & 0 & 0 \\ Random & 1 & 0 & 0 & 1 & 0 & 0 \\ Readability & 0.171 & 0.629 & 0.2 & 0.147 & 0.61 & 0.243 \\ Length & 0.152 & 0.093 & 0.754 & 0.125 & 0.124 & 0.75 \\ Vowel count & 0.143 & 0.104 & 0.752 & 0.07 & 0.137 & 0.793 \\ \multicolumn{7}{c}{**Llama-2-7b Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Rec (2) & 0.952 & 0.033 & 0.015 & 0.997 & 0.001 & 0.002 \\ Self-Rec (10) & 0.881 & 0.083 & 0.037 & 0.976 & 0.018 & 0.006 \\ Self-Rec (500) & 0.922 & 0.061 & 0.017 & 0.892 & 0.086 & 0.021 \\ Always 1 & 1 & 0 & 0 & 1 & 0 & 0 \\ Random & 0.957 & 0.025 & 0.018 & 0.998 & 0.002 & 0.001 \\ Readability & 0.978 & 0.011 & 0.011 & 1 & 0.001 & 0 \\ Length & 0.523 & 0.355 & 0.122 & 0.957 & 0.035 & 0.009 \\ Vowel count & 0.914 & 0.065 & 0.021 & 0.981 & 0.016 & 0.003 \\ \multicolumn{7}{c}{**Llama-2-7b Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Rec (2) & 0.833 & 0.113 & 0.055 & 0.868 & 0.092 & 0.041 \\ Self-Rec (10) & 0.89 & 0.077 & 0.033 & 0.988 & 0.009 & 0.003 \\ Self-Rec (500) & 0.926 & 0.035 & 0.039 & 0.923 & 0.04 & 0.037 \\ Always 1 & 0.976 & 0.013 & 0.011 & 0.973 & 0.018 & 0.009 \\ Random & 0.982 & 0.009 & 0.01 & 0.984 & 0.007 & 0.009 \\ Readability & 0.765 & 0.103 & 0.131 & 0.779 & 0.102 & 0.119 \\ Length & 0.536 & 0.351 & 0.113 & 0.696 & 0.232 & 0.073 \\ Vowel count & 0.942 & 0.037 & 0.021 & 0.938

[MISSING_PAGE_EMPTY:19]

\begin{table}
\begin{tabular}{l c c c c c} \hline \hline  & \multicolumn{5}{c}{Target Source} \\ Evaluator Model & GPT-4 & GPT-3.5 & Llama & Human & Claude-2 \\ \hline GPT-4 & 0.5 & 0.526 & 0.638 & 0.71 & 0.561 \\ GPT-3.5 & 0.5 & 0.5 & 0.514 & 0.581 & 0.505 \\ Llama-2-7b & 0.495 & 0.498 & 0.5 & 0.502 & 0.495 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Recognition (2 examples) & 0.499 & 0.5 & 0.523 & 0.634 & 0.513 \\ Self-Recognition (10 examples) & 0.499 & 0.5 & 0.54 & 0.67 & 0.522 \\ Self-Recognition (500 examples) & 0.519 & 0.5 & 0.582 & 0.778 & 0.597 \\ Always 1 & 0.498 & 0.5 & 0.503 & 0.499 & 0.498 \\ Random & 0.5 & 0.5 & 0.505 & 0.501 & 0.499 \\ Readability & 0.494 & 0.5 & 0.528 & 0.609 & 0.52 \\ Length & 0.499 & 0.5 & 0.509 & 0.6 & 0.517 \\ Vowel count & 0.499 & 0.5 & 0.519 & 0.653 & 0.514 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Recognition (2 examples) & 0.498 & 0.5 & 0.529 & 0.631 & 0.508 \\ Self-Recognition (10 examples) & 0.501 & 0.5 & 0.522 & 0.608 & 0.508 \\ Self-Recognition (500 examples) & 0.539 & 0.5 & 0.627 & 0.892 & 0.691 \\ Always 1 & 0.501 & 0.5 & 0.502 & 0.504 & 0.499 \\ Random & 0.5 & 0.5 & 0.502 & 0.505 & 0.501 \\ Readability & 0.498 & 0.5 & 0.521 & 0.576 & 0.509 \\ Length & 0.5 & 0.5 & 0.535 & 0.669 & 0.519 \\ Vowel count & 0.482 & 0.5 & 0.564 & 0.742 & 0.523 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Recognition (2 examples) & 0.495 & 0.502 & 0.5 & 0.501 & 0.497 \\ Self-Recognition (10 examples) & 0.496 & 0.499 & 0.5 & 0.505 & 0.498 \\ Self-Recognition (500 examples) & 0.49 & 0.491 & 0.5 & 0.514 & 0.483 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.498 & 0.499 & 0.5 & 0.502 & 0.497 \\ Readability & 0.496 & 0.498 & 0.5 & 0.497 & 0.496 \\ Length & 0.502 & 0.496 & 0.5 & 0.478 & 0.493 \\ Vowel count & 0.493 & 0.493 & 0.5 & 0.497 & 0.495 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Recognition (2 examples) & 0.497 & 0.501 & 0.5 & 0.507 & 0.497 \\ Self-Recognition (10 examples) & 0.499 & 0.499 & 0.5 & 0.506 & 0.499 \\ Self-Recognition (500 examples) & 0.499 & 0.494 & 0.5 & 0.499 & 0.494 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.5 & 0.499 & 0.5 & 0.496 & 0.499 \\ Readability & 0.499 & 0.496 & 0.5 & 0.499 & 0.495 \\ Vowel count & 0.501 & 0.497 & 0.5 & 0.495 & 0.503 \\ \hline \hline \end{tabular}
\end{table}
Table 11: Self-Recognition confidence scores in the individual setting, evaluated on the XSUM dataset.

\begin{table}
\begin{tabular}{l c c c c c} \hline \hline  & \multicolumn{5}{c}{Target Source} \\ Evaluator Model & GPT-4 & GPT-3.5 & Llama & Human & Claude-2 \\ \hline \multicolumn{5}{c}{**No Fine-Tuning**} \\ GPT-4 & 0.5 & 0.51 & 0.534 & 0.596 & 0.514 \\ GPT-3.5 & 0.496 & 0.5 & 0.503 & 0.528 & 0.499 \\ Llama-2-7b & 0.499 & 0.5 & 0.5 & 0.501 & 0.499 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Recognition (2 examples) & 0.497 & 0.5 & 0.507 & 0.536 & 0.502 \\ Self-Recognition (10 examples) & 0.498 & 0.5 & 0.506 & 0.537 & 0.502 \\ Self-Recognition (500) & 0.527 & 0.5 & 0.581 & 0.753 & 0.598 \\ Always 1 & 0.499 & 0.5 & 0.501 & 0.504 & 0.502 \\ Random & 0.499 & 0.5 & 0.501 & 0.504 & 0.502 \\ Readability & 0.481 & 0.5 & 0.521 & 0.617 & 0.516 \\ Length & 0.499 & 0.5 & 0.506 & 0.517 & 0.505 \\ Vowel count & 0.496 & 0.5 & 0.512 & 0.545 & 0.503 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Recognition (2) & 0.497 & 0.5 & 0.507 & 0.54 & 0.503 \\ Self-Recognition (10) & 0.497 & 0.5 & 0.508 & 0.541 & 0.504 \\ Self-Recognition (500) & 0.498 & 0.5 & 0.525 & 0.658 & 0.521 \\ Always 1 & 0.499 & 0.5 & 0.503 & 0.524 & 0.502 \\ Random & 0.498 & 0.5 & 0.502 & 0.513 & 0.5 \\ Readability & 0.481 & 0.5 & 0.526 & 0.623 & 0.498 \\ Length & 0.495 & 0.5 & 0.51 & 0.541 & 0.501 \\ Vowel count & 0.495 & 0.5 & 0.513 & 0.578 & 0.502 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on XSUM (In-Domain)**} \\ Self-Recognition (2) & 0.5 & 0.5 & 0.5 & 0.502 & 0.499 \\ Self-Recognition (10) & 0.499 & 0.5 & 0.5 & 0.502 & 0.499 \\ Self-Recognition (500) & 0.497 & 0.5 & 0.5 & 0.518 & 0.502 \\ Always 1 & 0.495 & 0.496 & 0.5 & 0.504 & 0.509 \\ Random & 0.498 & 0.499 & 0.5 & 0.503 & 0.499 \\ Vowel count & 0.498 & 0.499 & 0.5 & 0.503 & 0.499 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on CNN (Out-of-Domain)**} \\ Self-Recognition (2) & 0.501 & 0.501 & 0.5 & 0.502 & 0.5 \\ Self-Recognition (10) & 0.5 & 0.5 & 0.5 & 0.503 & 0.499 \\ Self-Recognition (500) & 0.499 & 0.5 & 0.5 & 0.502 & 0.5 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.499 & 0.5 \\ Random & 0.5 & 0.5 & 0.5 & 0.501 & 0.5 \\ Readability & 0.5 & 0.5 & 0.5 & 0.499 & 0.5 \\ Vowel count & 0.499 & 0.499 & 0.5 & 0.498 & 0.499 \\ \hline \hline \end{tabular}
\end{table}
Table 12: Self-preference scores in the individual setting, evaluated on the XSUM dataset.

\begin{table}
\begin{tabular}{l c c c c c} \hline \hline  & \multicolumn{5}{c}{Target Source} \\ Evaluator Model & GPT-4 & GPT-3.5 & Llama & Human & Claude-2 \\ \hline \multicolumn{5}{c}{**No Fine-Tuning**} \\ GPT-4 & 0.5 & 0.602 & 0.619 & 0.715 & 0.634 \\ GPT-3.5 & 0.493 & 0.5 & 0.502 & 0.518 & 0.498 \\ Llama-2-7b & 0.501 & 0.495 & 0.5 & 0.495 & 0.503 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on XSUM (Out-of-Domain)**} \\ Self-Recognition (2 examples) & 0.491 & 0.5 & 0.501 & 0.53 & 0.503 \\ Self-Recognition (10 examples) & 0.492 & 0.5 & 0.503 & 0.54 & 0.507 \\ Self-Recognition (500) & 0.495 & 0.5 & 0.506 & 0.671 & 0.607 \\ Always 1 & 0.49 & 0.5 & 0.493 & 0.495 & 0.495 \\ Random & 0.488 & 0.5 & 0.492 & 0.492 & 0.494 \\ Readability & 0.507 & 0.5 & 0.53 & 0.568 & 0.531 \\ Length & 0.502 & 0.5 & 0.507 & 0.541 & 0.511 \\ Vowel count & 0.5 & 0.5 & 0.5 & 0.508 & 0.501 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on CNN (In-Domain)**} \\ Self-Recognition (2) & 0.484 & 0.5 & 0.49 & 0.516 & 0.494 \\ Self-Recognition (10) & 0.49 & 0.5 & 0.495 & 0.525 & 0.498 \\ Self-Recognition (500) & 0.721 & 0.5 & 0.723 & 0.888 & 0.806 \\ Always 1 & 0.497 & 0.5 & 0.5 & 0.501 & 0.502 \\ Random & 0.498 & 0.5 & 0.501 & 0.501 & 0.5 \\ Readability & 0.489 & 0.5 & 0.507 & 0.543 & 0.508 \\ Length & 0.505 & 0.5 & 0.519 & 0.544 & 0.517 \\ Vowel count & 0.497 & 0.5 & 0.499 & 0.544 & 0.508 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on XSUM (Out-of-Domain)**} \\ Self-Recognition (2) & 0.504 & 0.494 & 0.5 & 0.492 & 0.505 \\ Self-Recognition (10) & 0.505 & 0.497 & 0.5 & 0.501 & 0.51 \\ Self-Recognition (500) & 0.503 & 0.484 & 0.5 & 0.463 & 0.491 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.501 & 0.498 & 0.5 & 0.498 & 0.502 \\ Readability & 0.498 & 0.499 & 0.5 & 0.496 & 0.502 \\ Length & 0.5 & 0.474 & 0.5 & 0.467 & 0.488 \\ Vowel count & 0.509 & 0.48 & 0.5 & 0.481 & 0.497 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on CNN (In-Domain)**} \\ Self-Recognition (2) & 0.5 & 0.497 & 0.5 & 0.499 & 0.501 \\ Self-Recognition (10) & 0.502 & 0.498 & 0.5 & 0.5 & 0.506 \\ Self-Recognition (500) & 0.508 & 0.501 & 0.5 & 0.499 & 0.502 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.501 & 0.5 & 0.5 & 0.5 & 0.501 \\ Readability & 0.511 & 0.508 & 0.5 & 0.518 & 0.504 \\ Vowel count & 0.5 & 0.503 & 0.5 & 0.502 & 0.505 \\ \hline \hline \end{tabular}
\end{table}
Table 13: Self-recognition confidence scores in the individual setting, evaluated on the CNN dataset.

\begin{table}
\begin{tabular}{l c c c c c} \hline \hline  & \multicolumn{5}{c}{Target Source} \\ Evaluator Model & GPT-4 & GPT-3.5 & Llama & Human & Claude-2 \\ \hline \multicolumn{5}{c}{**No Fine-Tuning**} \\ GPT-4 & 0.5 & 0.516 & 0.52 & 0.536 & 0.518 \\ GPT-3.5 & 0.492 & 0.5 & 0.502 & 0.516 & 0.499 \\ Llama-2-7b & 0.5 & 0.501 & 0.5 & 0.502 & 0.501 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on XSUM (Out-of-Domain)**} \\ Self-Recognition (2 examples) & 0.492 & 0.5 & 0.503 & 0.52 & 0.502 \\ Self-Recognition (10 examples) & 0.494 & 0.5 & 0.502 & 0.518 & 0.502 \\ Self-Recognition (500) & 0.536 & 0.5 & 0.537 & 0.602 & 0.578 \\ Always 1 & 0.499 & 0.5 & 0.501 & 0.501 & 0.5 \\ Random & 0.499 & 0.5 & 0.501 & 0.501 & 0.5 \\ Readability & 0.496 & 0.5 & 0.53 & 0.577 & 0.524 \\ Length & 0.489 & 0.5 & 0.5 & 0.52 & 0.503 \\ Vowel count & 0.49 & 0.5 & 0.501 & 0.518 & 0.503 \\ \multicolumn{5}{c}{**GPT-3.5 Fine-Tuning Runs on CNN (In-Domain)**} \\ Self-Recognition (2) & 0.494 & 0.5 & 0.503 & 0.521 & 0.503 \\ Self-Recognition (10) & 0.495 & 0.5 & 0.505 & 0.525 & 0.504 \\ Self-Recognition (500) & 0.494 & 0.5 & 0.512 & 0.625 & 0.538 \\ Always 1 & 0.499 & 0.5 & 0.5 & 0.505 & 0.5 \\ Random & 0.494 & 0.5 & 0.499 & 0.505 & 0.499 \\ Readability & 0.467 & 0.5 & 0.5 & 0.579 & 0.499 \\ Length & 0.481 & 0.5 & 0.489 & 0.514 & 0.494 \\ Vowel count & 0.496 & 0.5 & 0.497 & 0.514 & 0.5 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on XSUM (Out-of-Domain)**} \\ Self-Recognition (2) & 0.5 & 0.501 & 0.5 & 0.502 & 0.501 \\ Self-Recognition (10) & 0.5 & 0.501 & 0.5 & 0.501 & 0.501 \\ Self-Recognition (500) & 0.496 & 0.501 & 0.5 & 0.508 & 0.498 \\ Always 1 & 0.5 & 0.487 & 0.5 & 0.516 & 0.479 \\ Random & 0.5 & 0.5 & 0.5 & 0.503 & 0.5 \\ Readability & 0.5 & 0.5 & 0.5 & 0.502 & 0.5 \\ Length & 0.5 & 0.5 & 0.5 & 0.501 & 0.5 \\ Vowel count & 0.499 & 0.5 & 0.5 & 0.501 & 0.5 \\ \multicolumn{5}{c}{**Llama-2-7b Fine-Tuning Runs on CNN (In-Domain)**} \\ Self-Recognition (2) & 0.5 & 0.5 & 0.5 & 0.502 & 0.501 \\ Self-Recognition (10) & 0.5 & 0.5 & 0.5 & 0.502 & 0.5 \\ Self-Recognition (500) & 0.498 & 0.499 & 0.5 & 0.498 & 0.499 \\ Always 1 & 0.5 & 0.5 & 0.5 & 0.5 & 0.5 \\ Random & 0.5 & 0.5 & 0.5 & 0.5 & 0.5 \\ Readability & 0.501 & 0.499 & 0.5 & 0.498 & 0.499 \\ Vowel count & 0.501 & 0.501 & 0.5 & 0.501 & 0.502 \\ \hline \hlineHuman annotation of pairwise preference

We collect in total 900 pairwise judgments of LLM-generated summaries from 20 crowdworkers recruited from Upwork. We select English-speakers located in the United States with bachelor's degrees in humanities disciplines. For each of the 300 pairwise comparisons, we collect three annotations from different annotators. Each annotator is paid $60 for annotating 45 pairwise comparisons, which equates to an hourly rate of roughly $20/hr.

Below is the instruction given to each annotator:

You have been given a spreadsheet of news article summaries, which you will be grading based on summarization quality. Each entry includes the original news article and two different versions of summaries. Your task is to pick which one of the two summaries is better. The spreadsheet link was sent to you via Upwork messages.

Make sure that you give a single numerical number in the "Preference" column, 1 or 2, indicating which one of the two summaries you prefer. Don't give any comments, decimals, fractions, or a score range. Once you are done, inform us on Upwork Messages. No need to send us a copy.

Helpful Tips

Make sure you can read the news article before rating the summaries. Make sure you can see the full article. You may need to zoom out or make the width of the essay column wider. A longer summary is not necessarily better.

Risks

This task does not impose risks beyond those of using a computer.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: The abstract summarizes the main findings of the paper faithfully. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: We have a designated limitation section discussing uncertainties in our findings. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [NA]Justification: This paper does not include theoretical results. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: We include a zip file containing all artifacts required to reproduce all results in the paper: our code, prompt instructions, and generated summaries. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?Answer: [Yes] Justification: We include a zip file containing all artifacts required to reproduce all results in the paper: our code, prompt instructions, and generated summaries. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines ([https://nips.cc/public/guides/CodeSubmissionPolicy](https://nips.cc/public/guides/CodeSubmissionPolicy)) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines ([https://nips.cc/public/guides/CodeSubmissionPolicy](https://nips.cc/public/guides/CodeSubmissionPolicy)) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: We specify these details in the experiment section. Additionally the experiment details can be confirmed using the code and data included in the zip file. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [No] Justification: The main results in the paper are based on preference and recognition scores defined in Section 2, and it is unclear if commonly-used significance tests are directly applicable. We are in the process of finding the appropriate significance test for these scores and will include them in the camera-ready version. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).

* The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)
* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: We include details about the machines used for fine-tuning experiments in Section 3.1. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics [https://neurips.cc/public/EthicsGuidelines?](https://neurips.cc/public/EthicsGuidelines?) Answer: [Yes] Justification: The research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: We discuss in depth the generalizability of claims made in the paper, in particular the impacts of the results for AI safety. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.

* Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.
* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [Yes] Justification: We discuss potential mitigation methods against risks caused by self-recognizing LLMs. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: We properly credit datasets that we use in experiments and ensure that they are properly licensed. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. ** If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.
* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
13. **New Assets** Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [No] Justification: We do not release new assets. Guidelines: * The answer NA means that the paper does not release new assets. * Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc. * The paper should discuss whether and how consent was obtained from people whose asset is used. * At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
14. **Crowdsourcing and Research with Human Subjects** Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [Yes] Justification: We include full instructions and our compensation details in Appendix E. The hourly rate of our annotators is $20/hr. Guidelines: * The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. * Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper. * According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
15. **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects** Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [Yes] Justification: The human-annotation experiments in this paper do not require IRB approval. Guidelines: * The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. * Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.

* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.