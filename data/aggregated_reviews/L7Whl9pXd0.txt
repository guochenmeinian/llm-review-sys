ID: L7Whl9pXd0
Title: Efficient Batched Algorithm for Contextual Linear Bandits with Large Action Space via Soft Elimination
Conference: NeurIPS
Year: 2023
Number of Reviews: 11
Original Ratings: 6, 7, 6, 6, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 3, 3, 3, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents the first efficient batch algorithm for (contextual) linear bandits, utilizing a linear optimization oracle over a large action set rather than classical elimination-based designs. The proposed algorithm achieves $\tilde{O}(\sqrt{T})$ regret with the number of batches matching the lower bound. It employs a reduction technique that simplifies contextual linear bandits to bandits, although this incurs high computational costs, which are mitigated by an approximated linear optimization oracle. 

### Strengths and Weaknesses
Strengths:
- The paper makes a meaningful theoretical contribution by proposing and analyzing the first efficient batch algorithm for contextual linear bandits, achieving a number of batches that aligns with the lower bound.
- It introduces a novel algorithmic design using 'soft' elimination, which reduces candidate unknown model parameters in each batch, resulting in low regret.

Weaknesses:
- The regret upper bound is not optimal concerning the dimension $d$ of the feature vectors.
- The paper would benefit from simple numerical simulations to evaluate the algorithm's performance, particularly demonstrating that the number of batches is of the order $\log \log (T)$ and comparing it with benchmark algorithms not constrained by batches.
- There is a lack of clarity regarding the major technical contributions in the reduction discussed in section 4, and the approaches to bound the algorithm's regret in section 3.2 are overwhelming.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the technical contributions in section 4 and summarize the approaches used to bound the regret in section 3.2. Additionally, including numerical simulations would enhance the evaluation of the algorithm's performance, specifically demonstrating the batch count and comparing it with other algorithms. It would also be beneficial to provide a clearer explanation of how Algorithm 2 operates for self-containedness and to refer to specific lemmas when results from the appendix are used in the main context.