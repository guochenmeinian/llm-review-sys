ID: xALBXUXnet
Title: WasmGuard: Enhancing Web Security through Robust Raw-Binary Detection of WebAssembly Malware
Conference: ACM
Year: 2024
Number of Reviews: 4
Original Ratings: -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents WasmGuard, a framework for detecting WebAssembly (Wasm) malware through adversarial training and contrastive learning. The authors introduce WasmMal-15K, a large-scale dataset for Wasm malware research, and WebChecker, a browser plugin for real-time detection. WasmGuard demonstrates significant performance improvements, achieving up to 99.2% Robust Accuracy (RA) and outperforming six baseline models under adversarial conditions.

### Strengths and Weaknesses
Strengths:
1. The innovative use of FGSM-based adversarial training enhances detection robustness.
2. The creation of a publicly available dataset, WasmMal-15K, addresses a critical gap in Wasm malware research.
3. The practical application of WasmGuard is demonstrated through the WebChecker plugin.

Weaknesses:
1. The performance of WasmGuard against advanced obfuscation techniques and novel attacks is underexplored.
2. The reliance on garbage code and perturbation byte injection may not adequately represent real-world malicious software scenarios.
3. The evaluation is questioned due to the imbalance in the dataset, with only 62 out of 8631 samples being malicious, raising concerns about the validity of the results.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the input space definition in Section 3.1, specifically addressing why it ranges from 0 to 255. Additionally, we suggest providing results on the impact of injection locations mentioned in Section 3.3. The authors should justify the selection of FGSM over other adversarial attack methods, such as C&W. Furthermore, enhancing the discussion on the implications of the dataset imbalance and exploring more sophisticated obfuscation techniques would strengthen the evaluation. Lastly, a usability evaluation of the WebChecker plugin, particularly regarding its false-positive rate, would be beneficial.