ID: 9fb975Au9G
Title: Django: Detecting Trojans in Object Detection Models via Gaussian Focus Calibration
Conference: NeurIPS
Year: 2023
Number of Reviews: 11
Original Ratings: 5, 5, 7, 6, 6, -1, -1, -1, -1, -1, -1
Original Confidences: 3, 3, 4, 4, 4, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents Django, the first object detection backdoor detection framework that utilizes a Gaussian weighting scheme to prioritize vulnerable victim boxes during trigger inversion. The authors identify that the poison effect varies across bounding boxes, leading to misalignment in optimization objectives for existing methods. Django employs a Gaussian Focus Loss to dynamically assign weights, improving the detection of backdoored models. Experimental results demonstrate Django's superiority over several state-of-the-art baselines across multiple metrics.

### Strengths and Weaknesses
Strengths:
- The paper addresses a significant issue in backdoor detection for object detection models, revealing the misalignment of loss functions.
- The proposed Gaussian Focus Loss effectively calibrates the misaligned loss during trigger inversion.
- Comprehensive empirical evaluations across various datasets and model architectures support the effectiveness of Django.

Weaknesses:
- The claim that Django is the first trigger inversion-based framework for object detection lacks clarity, as existing methods have been noted.
- The mechanism of Gaussian Focus Loss in capturing vulnerable boxes and its interaction dynamics is not well-explained.
- The training process settings for both Django and the baselines are inadequately detailed, and limitations of the proposed method are not discussed.

### Suggestions for Improvement
We recommend that the authors clarify the uniqueness of Django in comparison to existing trigger inversion methods and explicitly state if it is the first for object detection. Additionally, the authors should provide a detailed explanation of how Gaussian Focus Loss operates and its interaction dynamics. It would be beneficial to include a visualization of the framework's pipeline and clarify the training process settings, including model configurations and hyper-parameter values. Finally, discussing the limitations of the proposed method, particularly regarding its performance against various trigger types, would enhance the paper's depth.