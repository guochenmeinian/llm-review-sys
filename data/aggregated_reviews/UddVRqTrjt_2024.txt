ID: UddVRqTrjt
Title: Hierarchical Uncertainty Exploration via Feedforward Posterior Trees
Conference: NeurIPS
Year: 2024
Number of Reviews: 7
Original Ratings: 7, 7, 7, -1, -1, -1, -1
Original Confidences: 3, 3, 3, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a method for obtaining a hierarchical representation of samples from the posterior distribution of inverse problems, integrating seamlessly into existing approaches. The authors propose a tree structure where each node represents a prototype reconstruction, with child nodes refining their parent node, facilitating exploration of various modes and detail levels in the solution space. The technique is an amortized hierarchical version of the oracle loss in multiple choice learning, demonstrating effectiveness in qualitatively and quantitatively representing the posterior distribution.

### Strengths and Weaknesses
Strengths:
1. The method is simple, efficient, and sound, addressing a fundamental problem of hierarchically visualizing complex distributions.
2. The originality of the approach allows for faster visualization of posterior distribution samples at test time.
3. The paper is well-structured, clear, and sufficiently motivates the problem, with satisfying results and visualizations.

Weaknesses:
1. The proposed method requires several heuristics for training, raising questions about the computational complexity gains compared to post-hoc hierarchical clustering.
2. The architecture's dependence on tree depth and width appears limiting, necessitating clarification on the cost of learning the tree structure as $K$ and $d$ scale.
3. The qualitative evaluations in figures are not very informative, and the use of $L_2$ distance for clustering may not be suitable for all applications, particularly images.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the presentation of the proposed loss function and provide more elaborate background on CVT and the results of [45]. Additionally, addressing the trade-off between breadth and depth of the constructed tree would enhance understanding of the method's advantages and limitations. Empirical demonstrations of how the method can handle high-dimensional spaces and the potential to use generic reconstruction losses instead of $L_2$ would be beneficial. Finally, we suggest clarifying the runtime comparisons in Table 1, particularly how function evaluations translate to runtime and the implications of using different batch sizes.