ID: e1l4ZYprQH
Title: MathNAS: If Blocks Have a Role in Mathematical Architecture Design
Conference: NeurIPS
Year: 2023
Number of Reviews: 10
Original Ratings: 5, 7, 7, 6, 6, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 3, 4, 4, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents MathNAS, a novel approach to Neural Architecture Search (NAS) that employs mathematical programming techniques to enhance the efficiency and accuracy of architecture search. MathNAS divides the search space into smaller building blocks and predicts network performance based on these blocks. The authors validate MathNAS's effectiveness on computer vision (CV) and natural language processing (NLP) tasks, demonstrating superior performance compared to state-of-the-art models.

### Strengths and Weaknesses
Strengths:
1. Efficient Performance Evaluation: MathNAS proposes a framework for evaluating candidate networks by estimating block performance first, significantly improving evaluation efficiency.
2. Reduced Search Complexity: By mapping block performance to network performance, MathNAS transforms NAS into an Integer Linear Programming (ILP) problem, reducing search complexity to polynomial time.
3. Superior Results: The authors showcase MathNAS's capabilities through key performance indices such as accuracy, latency, and energy, outperforming state-of-the-art models.

Weaknesses:
1. Lack of Detailed Implementation: The paper lacks specific implementation details regarding the mathematical programming techniques and algorithms used.
2. Ambiguities in Section 2.2: Key terms like "inherent capability" and "interactive capability" are not clearly defined, complicating understanding. The evaluation methodology for changes in these capabilities is vague, and Equation 3 lacks clarity due to these uncertainties. Additionally, the processes of module swapping and internal adjustment are not well-defined.
3. Limited Discussion on Generalization: The paper mentions MathNAS's generalization capabilities for NLP tasks but provides limited discussion on the contributing factors and comparisons to other NAS methods.

### Suggestions for Improvement
We recommend that the authors improve the clarity of Section 2.2 by providing explicit definitions for "inherent capability" and "interactive capability," as well as detailing the evaluation methodology for these capabilities. Additionally, we suggest including more comprehensive implementation details regarding the mathematical programming techniques and algorithms used in MathNAS. Furthermore, we encourage the authors to enhance the discussion on generalization by elaborating on the factors contributing to MathNAS's performance in NLP tasks and comparing it to other NAS methods. Lastly, we advise proofreading the paper for language and grammar issues, and ensuring that the supplementary document contains relevant information that complements the main paper.