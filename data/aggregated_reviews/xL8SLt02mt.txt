ID: xL8SLt02mt
Title: An Expression Tree Decoding Strategy for Mathematical Equation Generation
Conference: EMNLP/2023/Conference
Year: 2023
Number of Reviews: 4
Original Ratings: -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a method for generating mathematical expressions from natural language problem descriptions, focusing on constructing an expression tree rather than generating expression tokens sequentially. The authors propose a seq2expression framework that builds the expression tree iteratively in a bottom-up manner, issuing K queries at each step to generate valid expressions, which are then incorporated into the problem embedding. The method employs a bipartite matching loss for alignment between the reference solution and the learner's state. Experimental results demonstrate state-of-the-art performance on the Math Word Problem task across three datasets, particularly excelling with long equations and complex tree structures.

### Strengths and Weaknesses
Strengths:  
- The authors provide an original method for generating arithmetic expressions from natural language problems.  
- The results are promising, with a comprehensive analysis highlighting improvements over state-of-the-art methods.  
- The integration of query-based detection and layer-wise decoding is novel and appropriate for the task.  

Weaknesses:  
- The method relies on an ad-hoc constant K, which lacks justification.  
- The relationship to classical parsing methods is underexplored, limiting the paper's novelty.  
- Some claims, such as the uniqueness of the parallel decoding approach, are not well substantiated.  

### Suggestions for Improvement
We recommend that the authors improve the justification for the ad-hoc constant K and explore its impact on results. Establishing a clearer connection to classical parsing methods, such as top-down and shift-reduce techniques, would enhance the paper's value. Additionally, conducting further ablation studies on components beyond the bipartite matching method, such as parallel decoding, would provide deeper insights. An analysis of the expected number of steps for expression generation across different methods would also be beneficial. Lastly, clarifying the learning process of the queries in the 'Learnable Query' section and addressing the use of numerical constants in the training code would strengthen the paper.