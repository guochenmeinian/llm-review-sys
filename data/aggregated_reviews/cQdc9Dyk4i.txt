ID: cQdc9Dyk4i
Title: GraphMP: Graph Neural Network-based Motion Planning with Efficient Graph Search
Conference: NeurIPS
Year: 2023
Number of Reviews: 17
Original Ratings: 7, 7, 7, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 3, 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents GraphMP, a neural motion planner that integrates Graph Neural Networks (GNNs) and graph search techniques for motion planning across various scenarios. The algorithm comprises two main components: a neural collision checker (NCC) that assesses edge collision statuses in a randomly sampled graph, and a neural heuristic estimator that assigns heuristic values to nodes, facilitating a differentiable graph-based A* search. The authors evaluate GraphMP on six planning tasks ranging from 2D to 14D, demonstrating superior performance compared to classical and learning-based planners in terms of path quality, planning speed, and success rate. The authors also acknowledge limitations related to probabilistic completeness and asymptotic optimality, proposing enhancements such as incorporating a figure that shows the ratio of edges concerning different intervals of prediction confidence and exploring the use of predicted random geometric graphs (RGGs) for training and inference.

### Strengths and Weaknesses
Strengths:
- The algorithm is presented in detail, with illustrative toy-case studies in Figures 1 and 2.
- Extensive experiments and comparisons with baselines across various environments show strong results.
- The clear explanation of the proposed concept, including multiple components like learning modules, NCCs, and differentiable A*, is well-supported by solid experimental results.
- The authors demonstrate a willingness to improve the manuscript based on constructive feedback and recognize significant limitations regarding completeness and optimality.

Weaknesses:
- The novelty of the approach is incremental, as key components are derived from prior works, and the paper lacks a rigorous discussion on completeness and optimality.
- Section 3.1 requires further polishing to include necessary context on prior works and improvements.
- The performance impact of design choices, such as the number of neighbors in K-NN and the in-search collision check threshold, is not adequately addressed.
- GraphMP does not guarantee probabilistic completeness when the collision status of edges is uncertain, which may affect its reliability.
- The method lacks asymptotic optimality due to the nature of its graph search process and the quality of sampled RGGs.
- The efficiency of the approach is hampered by the current RGG construction methods, which do not account for environmental topology and lead to unnecessary explorations.

### Suggestions for Improvement
We recommend that the authors improve Section 3.1 by incorporating necessary background on how prior works addressed the problem and which aspects of existing frameworks are enhanced. Additionally, please provide a set time limit for the experiments in Table 1 to better assess the proposed algorithm's completeness. We suggest including a formal discussion on the completeness and optimality of GraphMP, particularly regarding its probabilistic completeness and the implications of using the NCC. Furthermore, we encourage the authors to summarize the limitations of the algorithm, particularly its incompleteness due to the reliance on the NCC, in a dedicated limitations section. We also recommend that the authors improve the Limitation Section by thoroughly discussing the issues of incompleteness and non-optimality. Moreover, we suggest exploring the implementation of predicted RGG for both training and inference to potentially enhance performance. Lastly, we encourage the authors to refine the RGG construction process to better consider environmental topology, thereby increasing efficiency.