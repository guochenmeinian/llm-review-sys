ID: W433RI0VU4
Title: MILP-StuDio: MILP Instance Generation via Block Structure Decomposition
Conference: NeurIPS
Year: 2024
Number of Reviews: 20
Original Ratings: 5, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 3, 3, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a novel framework for generating high-quality MILP instances, termed MILP-StuDio, which leverages block structures in constraint coefficient matrices (CCMs) to maintain computational hardness while enabling efficient instance generation. The method involves block decomposition, structure library construction, and manipulation of blocks through reduction, mix-up, and expansion. Additionally, the authors provide a detailed examination of similarity metrics for CCMs and constraint distribution between original and generated instances. They propose a method for measuring CCM similarity using a 0-1 matrix representation and a specific formula, indicating that even minor differences in CCM similarity can significantly impact structural outcomes. The authors also construct a 17-dimensional feature vector to analyze the distribution of constraint types, calculating cosine similarity to assess the relationship between generated and original instances. Experimental results indicate that MILP-StuDio generates instances that enhance the performance of learning-based solvers and retain high similarity to original instances in terms of structural distribution and solving properties.

### Strengths and Weaknesses
Strengths:  
1. The logical coherence and structural integrity of the manuscript are commendable, with a clear organization that facilitates understanding.  
2. The provided code repository and appendices are rich in content, enhancing the replicability of the research.  
3. The exploration of block structures in CCMs offers a novel approach to generating high-quality MILP instances, with compelling visualizations that clarify the framework's central ideas.  
4. MILP-StuDio demonstrates robustness by generating usable instances even in the absence of clear block structures.  
5. The experimental design effectively showcases the advantages of MILP-StuDio, achieving higher similarity scores while preserving computational hardness.  
6. The authors provide a comprehensive approach to measuring CCM similarity and constraint distribution, supported by clear mathematical formulations and tables.  
7. The use of cosine similarity and detailed feature vectors enhances the understanding of constraint type distributions.

Weaknesses:  
1. The similarity scores for the red and exp operators are significantly lower, raising concerns about the suitability of the similarity metric for evaluating MILP instance generation.  
2. The evaluation of learning-based solvers lacks detail on training methodologies, which are not adequately explained.  
3. The generation of hard benchmarks is briefly addressed, lacking clarity on the rationale behind the testing approach.  
4. The method's applicability is limited to problems with explicit block structures, which may not generalize well to real-world applications.  
5. The paper does not sufficiently discuss the criteria for selecting subgraphs during block decomposition, which could impact the quality of generated instances.  
6. The authors' requests for score increases may detract from the objective evaluation of their work.  
7. The reliance on similarity metrics without addressing potential limitations or alternative evaluation methods could be seen as a gap.

### Suggestions for Improvement
We recommend that the authors improve the discussion surrounding the role of similarity in MILP instance generation and consider alternative metrics that may be more suitable. Additionally, we suggest providing more detailed explanations regarding the training of learning-based solvers and the rationale behind the hard benchmark generation. To enhance the framework's applicability, the authors should explore extending the proposed method to accommodate more general MIP problems without clear block structures. Furthermore, a detailed discussion on the criteria for selecting subgraphs during block decomposition would strengthen the paper's contributions. Lastly, we recommend that the authors improve the discussion surrounding the limitations of their similarity metrics and refrain from requesting score increases directly, focusing instead on addressing reviewer concerns more thoroughly.