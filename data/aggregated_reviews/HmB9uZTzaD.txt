ID: HmB9uZTzaD
Title: VerMCTS: Synthesizing Multi-Step Programs using a Verifier, a Large Language Model, and Tree Search
Conference: NeurIPS
Year: 2024
Number of Reviews: 4
Original Ratings: 8, 4, 5, 7
Original Confidences: 4, 4, 3, 4

Aggregated Review:
### Key Points
This paper presents VerMCTS, which enhances a Monte Carlo Tree Search (MCTS) process by integrating expansions driven by a language model (LLM) and evaluations conducted by logical verifiers (Dafny and Coq). The approach effectively balances exploration and exploitation through progressive widening, demonstrating superior performance compared to alternatives on a test set of 15 problems (9 in Dafny, 6 in Coq). The authors address the dual tasks of program and proof synthesis, highlighting the soundness of the generated programs.

### Strengths and Weaknesses
Strengths:  
- The motivation, idea, execution, and evaluation of VerMCTS are well-articulated.  
- The design of the MCTS variant, particularly the introduction of the "widen" node, enhances search efficiency.  
- VerMCTS shows significant performance improvements on the proposed test set, outperforming reflexion and sampling methods.  
- The paper contributes to the important area of ensuring the soundness of LLM-generated programs.

Weaknesses:  
- The originality of VerMCTS is questioned as it combines two established tasks—program synthesis and proof synthesis—without substantial novelty in proof synthesis.  
- The evaluation is limited to only 15 problems, raising concerns about the diversity and robustness of the results.  
- The contribution to program synthesis remains unclear, particularly regarding the challenges of evaluating partial programs.  
- The experiments lack ablation studies on model size and capability, limiting insights into performance variations with different models.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the paper by including an example trace that illustrates how VerMCTS solves a specific problem. Additionally, the authors should address the limitations of their evaluation by expanding the test set to include more diverse and complex problems, such as those in DafnyBench. We also suggest conducting ablation studies to explore the impact of different model sizes and capabilities on VerMCTS's performance. Finally, the authors should elaborate on their choice to target Dafny and Coq, providing justification for this selection and discussing potential optimizations for each tool.