ID: 4AcHxGE6M4
Title: CP-BCS: Binary Code Summarization Guided by Control Flow Graph and Pseudo Code
Conference: EMNLP/2023/Conference
Year: 2023
Number of Reviews: 4
Original Ratings: -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a novel framework, CP-BCS (Control Flow Graph and Pseudo Code Guided Binary Code Summarization), aimed at generating complete summaries for binary functions, particularly in assembly code. The authors construct a dataset containing assembly code-summary pairs across three computer systems with varying optimization levels. CP-BCS employs a multi-source encoder strategy, utilizing a bidirectional instruction-level control flow graph and pseudo code to capture the execution behavior and logic semantics of binary functions. The method demonstrates considerable improvements in reverse engineering efficiency.

### Strengths and Weaknesses
Strengths:
- The introduction of the binary code summarization task addresses a significant gap in current research.
- The construction and release of a comprehensive assembly code summarization dataset will advance this area of study.
- CP-BCS shows superior performance compared to baseline models, enhancing reverse engineering efficiency.
- The methodology is well-structured, detailing components such as the assembly instruction encoder, BI-CFG Encoder, Pseudo Code Encoder, and Summary Decoder.
- Thorough evaluations across different binary optimization levels and computer architectures are provided.

Weaknesses:
- The paper lacks motivation regarding the importance of the problem being addressed, particularly in terms of efficiency and accuracy benefits.
- The dataset size is relatively small, raising concerns about scalability; a larger dataset using semi-supervised methods would be beneficial.
- The methodology could benefit from a Problem Formulation section to formally describe the problem and relevant assumptions.
- Comparisons with other state-of-the-art code summarization methods, such as those using pre-trained models, are absent.
- The title may mislead, as it refers to binary code summarization while focusing on assembly code.

### Suggestions for Improvement
We recommend that the authors improve the motivation section by addressing the benefits of generating complete summaries for binary functions from efficiency and accuracy perspectives, as well as potential applications. Additionally, we suggest introducing a Problem Formulation section in the Methodology to clarify the problem and assumptions. To enhance the dataset's robustness, consider employing semi-supervised methods to increase its size. Furthermore, we encourage the authors to include comparisons with other state-of-the-art summarization methods. Lastly, we advise clarifying the title to accurately reflect the focus on assembly code summarization.