ID: ktYaxX12RN
Title: TSGM: A Flexible Framework for Generative Modeling of Synthetic Time Series
Conference: NeurIPS
Year: 2024
Number of Reviews: 7
Original Ratings: 7, 7, 7, 7, -1, -1, -1
Original Confidences: 3, 3, 4, 4, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents the Time Series Generative Modeling (TSGM) framework, an open-source tool for generating synthetic time series data. TSGM incorporates a variety of machine learning methods, including generative models, probabilistic approaches, and simulation-based techniques, while providing over 140 datasets for evaluation. The framework allows users to assess generated data quality through multiple metrics, including similarity, predictive consistency, and fairness. The authors propose that TSGM addresses the critical need for synthetic data in machine learning applications, particularly where data scarcity and privacy are concerns.

### Strengths and Weaknesses
Strengths:
- The TSGM framework is well-implemented, offering a robust architecture and a comprehensive set of evaluation metrics tailored for time series data.
- The paper is clearly written and logically structured, facilitating user comprehension and adoption.
- TSGM addresses a significant gap in the availability of synthetic time series data, making it highly relevant to researchers and practitioners.
- The framework is publicly accessible and well-documented, with tutorials available to guide users.

Weaknesses:
- The framework lacks direct user feedback or case studies, raising questions about its user-friendliness for non-technical practitioners.
- There is limited discussion on the framework's scalability and performance with large datasets.
- The paper does not adequately compare TSGM with existing tools, which would help potential users understand its advantages.
- Some areas of the paper, such as the discussion of simulation-based methods and certain metrics, require further elaboration.

### Suggestions for Improvement
We recommend that the authors improve the discussion on the practical application of the proposed indicators and include more detailed examples or case studies demonstrating TSGM's real-world applications. Additionally, providing insights into the framework's scalability and efficiency with large datasets would enhance its usability. The authors should also conduct a comprehensive benchmarking against existing tools to clearly delineate TSGM's advantages. Furthermore, integrating more recent generative models, such as diffusion models and normalizing flows, and justifying the choice of Keras over other libraries like PyTorch would strengthen the framework's relevance. Finally, we suggest introducing the predictive score metric to evaluate the utility of synthetic data for downstream tasks.