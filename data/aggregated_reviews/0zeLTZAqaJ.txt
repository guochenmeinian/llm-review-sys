ID: 0zeLTZAqaJ
Title: Accelerating Monte Carlo Tree Search with Probability Tree State Abstraction
Conference: NeurIPS
Year: 2023
Number of Reviews: 13
Original Ratings: 7, 7, 7, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 2, 5, 3, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a novel approach called Probability Tree State Abstraction (PTSA) aimed at enhancing the efficiency of Monte Carlo Tree Search (MCTS) algorithms. The PTSA algorithm introduces a general tree state abstraction with path transitivity, addressing the computational complexity associated with MCTS by reducing the search space. Theoretical guarantees regarding transitivity and aggregation error bounds are provided. Integrating PTSA with state-of-the-art MCTS algorithms, such as Sampled MuZero and Gumbel MuZero, demonstrates a search space reduction of 10% to 45% across various tasks, including Atari games and continuous action spaces. Additionally, the paper compares MuZero and PTSAZero, highlighting that while MuZero shows good learning efficiency in simpler environments like Pong and Freeway, PTSAZero may initially struggle with training efficiency due to less accurate estimations from its value and reward networks. However, as PTSAZero's network converges, its training efficiency improves, enabling faster convergence compared to MuZero, particularly in more complex environments such as Seaquest and MacPacman.

### Strengths and Weaknesses
Strengths:
1. The novel aggregation approach considers entire paths rather than individual states, which is unique and innovative.
2. PTSA can be applied with various state abstraction functions, enhancing its general applicability.
3. Extensive experimental data across diverse environments showcases the method's effectiveness.
4. Integration with advanced algorithms yields comparable performance with reduced computational costs.
5. The paper provides a clear comparison of training efficiencies between MuZero and PTSAZero across varying complexity of environments, with experimental results supporting PTSAZero's efficiency in complex scenarios.

Weaknesses:
1. The definition of probability in PTSA (Definition 4.3) lacks clarity and requires further elaboration.
2. Errors exist in the proofs presented, necessitating correction.
3. The empirical results are primarily based on five Atari games, raising questions about their representativeness for the broader Atari-57 set.
4. The time complexity of PTSA is higher than that of the original MCTS, and its performance under larger simulation numbers remains unclear.
5. Initial training inefficiencies of PTSAZero due to inaccurate estimations may raise concerns about its applicability in simpler environments.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the probability definition in PTSA and rectify the identified errors in the proofs. Additionally, conducting experiments across a wider range of Atari games would strengthen the claims regarding the aggregation percentage. It would also be beneficial to explore the performance of PTSA under larger simulation numbers, such as N=30 or higher, to assess its scalability. Furthermore, we suggest providing a more detailed description of the implementation in Algorithm 1, particularly regarding the branching condition and the pruning function, to enhance reproducibility and understanding. Finally, including the source code would significantly aid in the reproducibility of the results. We also recommend improving the clarity of the initial training phase comparison between MuZero and PTSAZero, particularly in simpler environments, and providing more detailed explanations of the undoing aggregation operation and its implications on performance to enhance the understanding of the method's dynamics.