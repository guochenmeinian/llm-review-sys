ID: JolrEmMim6
Title: ALGO: Synthesizing Algorithmic Programs with Generated Oracle Verifiers
Conference: NeurIPS
Year: 2023
Number of Reviews: 15
Original Ratings: 5, 7, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents ALGO, a novel method for code generation using LLMs that first generates a brute-force implementation and numerous test cases for a given problem description. ALGO then creates efficient implementations and ranks them based on their agreement with the brute-force solution on the generated test cases. The evaluation demonstrates significant improvements over existing baselines across various LLMs and datasets, including challenging tasks from CodeContests and LeetCode. Additionally, the authors describe an automated process for creating input generators and validators for coding problems using ChatGPT, detailing the steps involved in generating and validating code snippets. They report high accuracy rates for both generators and validators, asserting that the few identified errors do not undermine the overall reliability of their approach.

### Strengths and Weaknesses
Strengths:  
- The paper is well-organized, easy to follow, and presents compelling experimental results, including an interesting ablation analysis in Section 3.4.  
- It leverages the capability of LLMs to generate brute-force solutions, which can serve as reliable oracles for ranking candidate programs.  
- The evaluation includes diverse datasets, providing a robust assessment of the proposed method.  
- The automated process for generating input validators is well-defined and replicable, with high accuracy rates (100% for generators and 94.2% for validators) demonstrating reliability.  
- The authors provide thorough analysis and clarification regarding the few identified errors in validators.

Weaknesses:  
- The terminology used is problematic; the term “verifier” is misleading as it does not guarantee correctness. A more appropriate term, such as "cross-check," should be used.  
- The paper lacks a thorough discussion of existing works that also address code verification and ranking, such as LEVER and Coder Reviewer.  
- There is no cost analysis of ALGO, raising concerns about its potential expense compared to baselines.  
- The paper does not provide sufficient details for reproducibility, including the number of oracles sampled and the specific experimental setups used.  
- The limitations of ALGO, particularly regarding the accuracy of the oracle solution and the challenges of generating valid inputs, are not clearly articulated.  
- There is a potential over-reliance on the ChatGPT Code Interpreter, which may limit the generalizability of the results, and the authors did not conduct timely experiments comparing the performance of plain ChatGPT/GPT-4 with the Code Interpreter.

### Suggestions for Improvement
We recommend that the authors improve the terminology by replacing “verifier” with a more accurate term like "cross-check." Additionally, the authors should include a discussion comparing ALGO with existing works such as LEVER and Coder Reviewer. A cost analysis of ALGO should be included to address concerns about its expense relative to baselines. 

To enhance reproducibility, please provide detailed information on the number of oracles sampled, the specific values of n used in experiments, and the setup for ChatGPT and GPT-4. We also suggest including a Pass@k table for various k values to clarify the experimental results. 

Furthermore, the authors should explicitly discuss the limitations of ALGO, particularly the accuracy of the oracle solution and the complexities involved in generating valid inputs. Addressing these points will strengthen the paper's contribution and clarity. Lastly, we suggest including a comparison of the performance of plain ChatGPT/GPT-4 in oracle generation experiments to address concerns about the reliance on the Code Interpreter. This would provide important context regarding the robustness of the ALGO approach independent of specific tools.