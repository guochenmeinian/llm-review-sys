ID: 56Q0qggDlp
Title: Molecule Generation with Fragment Retrieval Augmentation
Conference: NeurIPS
Year: 2024
Number of Reviews: 9
Original Ratings: 7, 3, 6, 7, 4, -1, -1, -1, -1
Original Confidences: 4, 5, 3, 4, 3, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a novel fragment-based molecule generation framework called Fragment Retrieval-Augmented Generation (f-RAG). f-RAG addresses limitations in existing methods by utilizing a pre-trained molecular generative model to propose new fragments from input fragments, retrieving hard fragments for direct incorporation and soft fragments for guidance. The framework updates the fragment vocabulary through iterative refinement and genetic fragment modification, enhancing the exploration-exploitation trade-off in molecule generation.

### Strengths and Weaknesses
Strengths:
1. f-RAG effectively utilizes a pre-trained molecular generative model to propose new fragments, enhancing the diversity of generated molecules.
2. The dual retrieval of hard and soft fragments improves the generation process, allowing for a more effective exploration of chemical space.
3. The iterative updating of the fragment vocabulary contributes to the continuous improvement of fragment quality and novelty.

Weaknesses:
1. The improvement of f-RAG over Genetic GFN is not substantial, with concerns regarding its generalization capabilities.
2. The novelty of the work is limited, as similar methodologies have been previously published, raising questions about its unique contributions.
3. Some notations and implementation details, particularly regarding genetic algorithms and the use of SAFE-GPT, are unclear or lacking.

### Suggestions for Improvement
We recommend that the authors improve the clarity of notations, particularly in Table 2, by using arrows to indicate better performance directions. Additionally, the authors should provide a more detailed comparison with recent works and clarify the differences between f-RAG and existing methodologies. It would be beneficial to discuss the computational efficiency of integrating language models and genetic algorithms, as well as to include more recent baselines in their comparisons. Finally, we suggest that the authors elaborate on the implementation details of genetic algorithms, including mutation and crossover techniques, to enhance the understanding of their approach.