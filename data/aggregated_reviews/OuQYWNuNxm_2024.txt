ID: OuQYWNuNxm
Title: Accelerating Relative Entropy Coding with Space Partitioning
Conference: NeurIPS
Year: 2024
Number of Reviews: 9
Original Ratings: 7, 8, 7, -1, -1, -1, -1, -1, -1
Original Confidences: 3, 2, 2, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a formalization for introducing search heuristics in channel simulation, often referred to as "relative entropy coding" in machine learning. The authors propose a space partitioning technique to enhance the efficiency of relative entropy coding (REC) algorithms by dividing the search space into bins, which aids in sampling from the target distribution. Theoretical proofs and numerical results support the proposed method, demonstrating its advantages over traditional algorithms like PFR.

### Strengths and Weaknesses
Strengths:  
- The paper is well-written and didactic, making a complex topic accessible.  
- The theoretical foundations are sound, with correct proofs and clear presentation of results.  
- The numerical benchmarks effectively illustrate the improvements of the proposed method.  
- The appendix, particularly Appendix B, provides valuable insights into the partitioning strategy.  

Weaknesses:  
- The approach, while effective, is somewhat elementary, primarily involving a straightforward division of space into bins.  
- There is insufficient discussion on how the binning technique affects results beyond codelength.  
- The computational intensity of the results raises concerns about practicality, especially for larger datasets.  

### Suggestions for Improvement
We recommend that the authors improve the discussion surrounding the implications of the binning technique on final results beyond codelength. Clarifying how the choice of prior for the binning distribution influences the algorithm would also enhance the paper. Additionally, addressing the computational limitations and providing examples of practical applications could strengthen the overall contribution. Finally, including an ablation study on the number of intervals per axis and elaborating on the runtime implications in the benchmarks would be beneficial.