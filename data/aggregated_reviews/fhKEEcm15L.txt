ID: fhKEEcm15L
Title: Cooperative Classification and Rationalization for Graph Generalization
Conference: ACM
Year: 2023
Number of Reviews: 4
Original Ratings: -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a Cooperative Classification and Rationalization (C2R) method that integrates classification and rationalization modules for graph generalization, addressing the out-of-distribution (OOD) data problem. The architecture is clearly articulated, and the ablation study along with hyperparameter sensitivity analysis highlights key components contributing to the method's robustness. The C2R model shows significant performance improvements over baseline models, particularly in real-world datasets like Molecular and MNIST, and effectively captures invariant rationales for graph generalization.

### Strengths and Weaknesses
Strengths:
- The integration of classification and rationalization modules enhances both performance and interpretability.
- The use of counterfactual sampling and knowledge distillation techniques contributes to robustness and generalization.
- Comprehensive experimental evaluations demonstrate the effectiveness of the proposed approach.

Weaknesses:
- The paper lacks a detailed comparison with existing graph rationalization methods such as DIR, GIL, RGCL, and GREA.
- The code link provided is empty, raising concerns about reproducibility.
- Limited discussion on the scalability and computational efficiency of the C2R method.

### Suggestions for Improvement
We recommend that the authors improve the discussion on the unique aspects and strengths of the C2R method compared to other graph rationalization techniques. Additionally, clarifying how the rationalization module learns from the classification module during inference and whether it can override it in case of conflicts would enhance understanding. The authors should also address the representativeness of synthetic datasets in relation to real-world graph data characteristics. Furthermore, providing insights into the sensitivity of the approach to the pooling operator and sharing the code would significantly benefit reproducibility. Lastly, a more extensive exploration of the method's limitations and scalability in practical applications is warranted.