ID: ZD9811KEYd
Title: TESA: A Trajectory and Semantic-aware Dynamic Heterogeneous Graph Neural Network
Conference: ACM
Year: 2024
Number of Reviews: 5
Original Ratings: -1, -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents TeSa (Trajectory and Semantic-Aware Dynamic Heterogeneous Graph Neural Network), a framework designed to model dynamic heterogeneous graphs (DHGs) by integrating trajectory-based evolution and semantic-aware aggregation. The authors propose that TeSa enhances predictive capabilities in real-world applications by effectively capturing evolving dynamics and semantic shifts. The framework employs a continuous-time perspective, which is argued to be more accurate than discrete-time models.

### Strengths and Weaknesses
Strengths:
- The overall logic and articulation of the proposed solution are clear, allowing for a coherent understanding of the problem and method.
- TeSa demonstrates significant accuracy improvements in both transductive and inductive tasks compared to state-of-the-art models.
- The experimental setup is reasonable, with strong ablation studies supporting the conclusions.

Weaknesses:
- The paper introduces excessive and confusing notations, undermining readability.
- There is a lack of comparison against relevant work in the field, particularly the method by Zhang et al. (2023).
- The evaluation is limited to only three datasets, two of which are from the same setting, raising concerns about generalizability.
- The paper does not adequately analyze model parameter size, computational complexity, or the impact of simplifications on performance.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the third main contribution by elaborating on the core innovations and their significance in dynamic heterogeneous graph representation learning. Additionally, please clarify the definitions and relationships of terms such as node trajectory $e_i$, $c_i$, and $x_i$, as well as the distinction between relation type $r$ and edge type $\mathcal{R}$. We suggest including a detailed time complexity analysis of each module and providing comparisons of parameter sizes and runtime speeds with baseline models to validate the performance improvements. Lastly, we encourage the authors to standardize the terminology for $\lambda$ throughout the paper and to enhance the interpretability of the model through additional visualizations of dynamic changes over time.