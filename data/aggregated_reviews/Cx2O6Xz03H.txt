ID: Cx2O6Xz03H
Title: TAPTRv2: Attention-based Position Update Improves Tracking Any Point
Conference: NeurIPS
Year: 2024
Number of Reviews: 17
Original Ratings: 5, 6, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents TAPTRv2, an enhanced version of TAPTR, aimed at addressing the Tracking Any Point (TAP) task. TAPTRv2 introduces a novel attention-based position update (APU) operation that utilizes key-aware deformable attention to refine point query positions, eliminating the need for cost-volume computation. This simplification improves computational complexity and tracking performance across multiple datasets.

### Strengths and Weaknesses
Strengths:
1. The introduction of the APU operation is a significant advancement over TAPTR, leading to more accurate tracking results by avoiding contamination of content features.
2. The paper simplifies the overall pipeline, making it conceptually clearer and facilitating the scaling of training processes for TAP algorithms.
3. Extensive experiments and ablation studies are conducted, demonstrating the effectiveness of the proposed method.

Weaknesses:
1. The authors overlook the importance of speed comparison, which is crucial given the main contribution of simplifying the algorithm structure.
2. The experimental evaluation lacks common datasets (e.g., PointOdyssey) for better generalization assessment and visual comparisons for long video sequences to showcase stability and accuracy.
3. Figure 4 does not include results from Cotracker, which contradicts line 295, and it would benefit from additional key points to highlight the advantages of the proposed method.

### Suggestions for Improvement
We recommend that the authors improve the paper by including a detailed speed comparison for TAPTRv2, particularly focusing on the Effective Utilization of Cost-Volume and the APU operation. Additionally, enhance the experiments by incorporating more common datasets and visual comparisons for long video sequences. Clarifying the initialization and updating process in Eqn (1) is essential, especially regarding how it handles single-point tracking. Furthermore, a comprehensive computational complexity analysis comparing TAPTRv2 with TAPTR and other methods is necessary to elucidate the performance and complexity trade-offs. Lastly, we suggest providing visual examples of the offsets considered by the APU unit and clarifying the number of neighboring points utilized.