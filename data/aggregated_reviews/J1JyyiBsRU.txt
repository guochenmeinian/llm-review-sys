ID: J1JyyiBsRU
Title: Common Foundations for SHACL, ShEx, and PG-Schema
Conference: ACM
Year: 2024
Number of Reviews: 5
Original Ratings: -1, -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents an abstraction called Common Graphs, serving as an intermediate model between RDF graphs and a restricted version of Property Graphs. The authors describe SHACL, a fragment of ShEx, and PG-schema over these common graphs, culminating in a proposal for a schema language that integrates expressions from the three studied languages. The paper provides a comprehensive comparison of these graph schema languages, facilitating a better understanding of their capabilities and interoperability.

### Strengths and Weaknesses
Strengths:  
- The paper offers a clear presentation of the problem and definitions of each constraint language, which aids in understanding and comparison.  
- It provides exhaustive exemplification, making complex theories more concrete.  
- The contribution is valuable for communities seeking guidelines for adopting schema languages for graph databases.

Weaknesses:  
- The appendices are excessively lengthy, containing fundamental details that should be included in the main text for better comprehension.  
- There is a lack of empirical validation for CoGSL, raising questions about its practical implementation and advantages over existing languages.  
- The paper does not adequately address the existence of edge-less, property-less nodes in property graphs, which are significant for understanding the limitations of common graphs.  
- Variable naming inconsistencies and a lack of detailed explanations for certain claims diminish clarity.

### Suggestions for Improvement
We recommend that the authors improve the paper by integrating critical details from the appendices into the main text to enhance self-containment. Additionally, empirical validation of CoGSL should be included, addressing its implementation and practical advantages over SHACL, ShEx, and PG-Schema. Clarifying the implications of edge-less, property-less nodes and ensuring consistent variable naming throughout the paper will also improve clarity. Finally, we suggest providing a more detailed comparison of the available implementations of the three languages across different programming languages to guide practical adoption.