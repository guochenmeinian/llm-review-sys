ID: 8CFcC8nU0D
Title: Online Billion-Scale Recommender Systems with Macro Graph Neural Networks
Conference: ACM
Year: 2023
Number of Reviews: 5
Original Ratings: -1, -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a Macro Recommendation Graph (MAG) and a corresponding Macro Graph Neural Network (MacGNN) aimed at improving Click-Through Rate (CTR) prediction in billion-scale recommender systems. The authors propose a novel approach that constructs macro nodes, edges, and subgraphs to reduce the number of neighbors from billions to hundreds, thus eliminating the need for sampling strategies and enhancing the efficiency of Graph Neural Network (GNN) operations. Extensive experiments, both offline and online, demonstrate the performance of MacGNN against state-of-the-art CTR baselines.

### Strengths and Weaknesses
Strengths:
1. The macro node concept is innovative and significantly reduces computational costs.
2. The paper effectively addresses the neighborhood distribution of users/items, a gap in previous research.
3. The inclusion of online testing distinguishes this work from other studies.

Weaknesses:
1. The equations presented are chaotic and difficult to interpret, raising questions about specific calculations and dimensions.
2. Insufficient details regarding code and implementation may hinder reproducibility of results.
3. The design choices for constructing nodes and edges lack clarity, particularly in the clustering strategy.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the equations, particularly by defining $r_{ab}$ and the dimension of $\textbf{b}_v$, and by ensuring that the L2-norm output is correctly represented. Additionally, please clarify whether the workflow from equations 2 to 4 is indeed k-means clustering and address potential popularity bias in this stage. We suggest that the authors provide a detailed discussion on the methods for constructing relationships between macro nodes and explore the highest order of neighbors that could enhance performance. Furthermore, we encourage the authors to include more implementation details and a comprehensive codebase to facilitate result reproduction. Lastly, a comparison with transformer approaches, such as pinformer or autoint, would strengthen the analysis of the modeling modules.