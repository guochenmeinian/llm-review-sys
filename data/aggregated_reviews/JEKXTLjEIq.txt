ID: JEKXTLjEIq
Title: Binary Search with Distributional Predictions
Conference: NeurIPS
Year: 2024
Number of Reviews: 11
Original Ratings: 7, 6, 7, 5, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 4, 5, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a learning-augmented algorithm for binary searching in a sorted array, utilizing distributional predictions rather than traditional point predictions. The authors propose an algorithm with expected query complexity of $O(H(p) + \log \eta)$, where $H(p)$ is the entropy of the true distribution and $\eta$ is the Earthmover distance between the predicted and true distributions. This work extends previous results by demonstrating that distributional predictions can yield better performance than point predictions, particularly in the context of binary search. The algorithm iteratively conducts median searches based on the predicted distribution and checks the endpoints of the search range, concluding with a classical binary search if necessary. The authors also provide a matching lower bound on the dependence on $\eta$ and validate their theoretical results through experiments. Additionally, the paper emphasizes the differences between their work and that of Lin et al., and addresses the need for stronger examples to illustrate the limitations of existing methods and the novelty of their approach.

### Strengths and Weaknesses
Strengths:
- The paper effectively extends learning-augmented algorithms to the more realistic scenario of distributional predictions, filling a gap in existing literature.
- It provides tight bounds for a fundamental problem and presents a theoretically sound analysis.
- The writing is clear, and the experimental results support the theoretical claims.
- The authors provide helpful explanations for models 1 and 2, enhancing the understanding of the algorithm.
- The clarification of the differences between their work and Lin et al. is valuable and necessary for contextualizing their contribution.
- The proposed algorithm is deemed interesting and has potential for significant follow-up work.

Weaknesses:
- There is ambiguity regarding whether the claimed bounds pertain to running time or merely the number of comparisons, particularly concerning the identification of median elements and sorting indices in the portfolio algorithm.
- The experimental evaluation is limited to scenarios where distributions are highly concentrated around a single value, potentially restricting the generalizability of the findings.
- The discussion of basic baselines is insufficient, lacking a stronger example to demonstrate the limitations of existing algorithms.
- The use of "binary search tree" is confusing, as it does not clarify the algorithm effectively.
- There is a lack of justification for the novelty of "algorithms with distributional prediction," as prior work has explored similar concepts.
- The presentation of the paper may undergo substantial changes, potentially leading to misunderstandings among reviewers.

### Suggestions for Improvement
We recommend that the authors clarify whether the claimed running time bounds apply to the overall running time or just the number of comparisons. Additionally, we suggest expanding the discussion of related work to include significant contributions, such as "Learning-Augmented Binary Search Trees" by Lin et al. We also recommend improving the discussion of basic baselines by including a stronger example to illustrate the suboptimality of existing methods. Furthermore, we suggest changing the terminology from "binary search tree" to a more accurate description, such as "Searching with Distributional Predictions." The authors should provide a more detailed justification for the novelty of their approach, particularly in relation to prior work by Diakonikolas et al., and clarify the rationale behind setting the exponential coefficient of $d$ to 8. Lastly, we advise ensuring that any significant changes made during the revision process do not compromise the clarity and coherence of the paper.