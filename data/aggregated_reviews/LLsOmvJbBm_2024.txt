ID: LLsOmvJbBm
Title: NeuralFluid: Nueral Fluidic System Design and Control with Differentiable Simulation
Conference: NeurIPS
Year: 2024
Number of Reviews: 19
Original Ratings: 5, 5, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 3, 4, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a framework for the design and control of complex fluidic systems with soft and hard boundaries, utilizing a fully differentiable pipeline for optimizing mesh design to achieve specified fluid control goals. The authors demonstrate the framework's proficiency across various tasks, including amplifying fluid flow, optimizing neural gate positions, and designing an artificial heart. Despite the promising results and task diversity, the paper lacks essential details that hinder a full appreciation of its contributions.

### Strengths and Weaknesses
Strengths:
- The paper addresses an important problem in developing a fully differentiable framework for optimal fluid flow design and control.
- Results are shown on challenging tasks, demonstrating effectiveness beyond typical toy problems.

Weaknesses:
- The paper lacks articulation of crucial details, making it difficult to assess the extent of its contributions.
- Key questions remain unanswered, such as the generation of the "initial parametric geometry," experimental setup specifics, and the rationale for framework comparisons.
- Section 2.2 requires further detailing for a machine learning audience unfamiliar with Constructive Solid Geometry.
- The absence of a code pipeline for review limits reproducibility.

### Suggestions for Improvement
We recommend that the authors improve the articulation of crucial details, particularly regarding the generation of the initial parametric geometry and the feasibility constraints associated with it. Clarifying where new users can obtain such geometries would enhance usability. Additionally, we suggest providing further details on the experimental setup, including the design of the PPO and CMA-ES models, as well as the reward function for PPO. It would also be beneficial to validate the solver against established benchmarks and improve the presentation of figures. Finally, making the code available for review is imperative to ensure reproducibility of results.