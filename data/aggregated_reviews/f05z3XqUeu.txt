ID: f05z3XqUeu
Title: RainProof: An Umbrella to Shield Text Generator from Out-Of-Distribution Data
Conference: EMNLP/2023/Conference
Year: 2023
Number of Reviews: 4
Original Ratings: -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a framework called RAINPROOF for detecting out-of-distribution (OOD) samples in sequence generation tasks, specifically focusing on translation and response generation. The authors introduce a new evaluation benchmark, LOFTER, which includes machine translation and dialogue datasets, addressing language and domain shifts. RAINPROOF computes an anomaly score based on the divergence of generated instances from a reference distribution, utilizing Renyi divergence and Fisher-Rao distance. The method is fully unsupervised and demonstrates strong performance, outperforming existing baselines.

### Strengths and Weaknesses
Strengths:
1. The proposed OOD detection approach shows strong performance and can enhance downstream task performance by filtering noisy in-distribution instances.
2. The method is fully unsupervised, requiring no OOD examples, and is model and task-independent.
3. The paper is well-written, with a clear description of the method and comprehensive experimental results.

Weaknesses:
1. The paper lacks testing on other benchmarks for OOD detection, particularly in NMT or classification tasks, as highlighted in previous works.
2. Some methodological choices and statements lack sufficient support and clarity, such as the rationale for filtering 80% of in-distribution samples and the choice of uniform distribution as a reference.

### Suggestions for Improvement
We recommend that the authors improve the justification for creating a new benchmark and include comparisons with established OOD detection methods on other datasets. Additionally, clarify the rationale behind filtering 80% of in-distribution samples and the selection of hyper-parameters without OOD examples. It would be beneficial to explore the use of a normalized likelihood score to mitigate biases towards shorter sentences and to provide detailed equations for baseline implementations. Lastly, ensure that the computation time comparisons in Table 4 are fair by including the time required to generate sequences.