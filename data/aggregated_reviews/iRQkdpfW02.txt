ID: iRQkdpfW02
Title: MatriXSSed: A New Taxonomy for XSS in the Modern Web
Conference: ACM
Year: 2024
Number of Reviews: 5
Original Ratings: -1, -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a revised taxonomy for cross-site scripting (XSS) attacks, addressing the inadequacies of the traditional OWASP matrix in light of modern web technologies such as WebAssembly, service workers, and various client-side storage mechanisms. The authors propose a framework that emphasizes a continuum of persistence and introduces concepts like "code infection" and "affection" to better capture the complexities of contemporary attack vectors. The paper illustrates its utility with examples, including service-worker-allowed header abuse.

### Strengths and Weaknesses
Strengths:
1. The paper effectively identifies limitations in the existing OWASP XSS taxonomy, particularly regarding new web components.
2. The proposed taxonomy introduces significant dimensions of XSS attacks, enhancing understanding of persistence and recurrence.
3. The insights into service worker vulnerabilities are impactful, and the examples provided highlight concrete security risks.
4. The organization of the paper is logical, with a clear progression from theoretical discussions to practical demonstrations.

Weaknesses:
1. Some discussions are conceptually dense and could benefit from simplification or visual aids.
2. The treatment of WebAssembly remains theoretical, lacking practical examples and guidance for developers.
3. The proposed taxonomy does not address how existing defense tools can adapt, limiting its practical impact.
4. The writing assumes a high level of familiarity with web security, which may restrict accessibility for a broader audience. Additionally, the paper lacks clearly stated contributions and has uneven section organization.

### Suggestions for Improvement
We recommend that the authors improve the clarity and cohesion of the paper by consolidating related sections, particularly those discussing background information and the threat model. To enhance the novelty of the work, we suggest including empirical validation or specific metrics to support claims about the proposed taxonomy's effectiveness compared to traditional approaches. A deeper exploration of real-world examples, particularly regarding WebAssembly-related XSS risks, would also strengthen the paper. Furthermore, we encourage the authors to clarify the distinctions between "infection" and "affection" with additional examples and to provide a roadmap for integrating their taxonomy into existing security practices. Lastly, moving critical figures, such as Figure 5, into the main body of the text would improve visibility and comprehension.