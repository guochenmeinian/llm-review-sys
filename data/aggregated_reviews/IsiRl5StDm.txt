ID: IsiRl5StDm
Title: MAML: Towards a Faster Web in Developing Regions
Conference: ACM
Year: 2024
Number of Reviews: 4
Original Ratings: -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents MAML (Mobile Application Markup Language), an alternative to the HTML+CSS+JS stack, aimed at reducing the size of web applications and enhancing runtime performance by creating a strict subset of HTML, CSS, and JavaScript. The authors highlight the increasing bloat in web applications, particularly affecting users in regions with limited network resources and underpowered devices. MAML's core designs include a flat DOM based on absolute positioning, a minimal subset of JavaScript called MAMLScript, and an automated translator for converting MAML to HTML+CSS+JS. The experimental results indicate that MAML applications outperform their HTML+CSS+JS and AMP counterparts in size and load speed.

### Strengths and Weaknesses
Strengths:
- The paper identifies the issue of bloated web applications and proposes a relevant solution, particularly for users in developing regions and resource-constrained environments.
- The innovative approach of MAML represents a significant rethinking of web application design.
- The rigorous design and comprehensive evaluation of MAML demonstrate its practical utility and performance advantages over existing technologies.

Weaknesses:
- MAML's aggressive design may hinder its adoption, as it is more restrictive than Google AMP, which has faced criticism.
- The paper lacks clarity on how MAMLScript can support complex client-side applications that rely on extensive JavaScript.
- The evaluation methodology is questionable, with unrealistic assumptions about network conditions and device capabilities, potentially skewing results.

### Suggestions for Improvement
We recommend that the authors improve the justification for MAML's use cases, particularly in developing countries, and address the implications of its simplifications on online advertising, which is crucial for funding many websites. The evaluation should be enhanced by using more realistic network conditions and a broader selection of websites, particularly those popular in developing regions. Additionally, we suggest that the authors clarify how MAML supports applications using Web APIs and discuss the practical implications of their proposed solution on current web business models. The authors should also provide more recent references to support their claims and consider including a link to the MAML editor to benefit the community. Finally, we encourage the authors to explore the feasibility of adding support for currently unsupported JavaScript functions in MAMLScript.