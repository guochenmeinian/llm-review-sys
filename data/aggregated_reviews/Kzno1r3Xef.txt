ID: Kzno1r3Xef
Title: A Structure-Aware Framework for Learning Device Placements on Computation Graphs
Conference: NeurIPS
Year: 2024
Number of Reviews: 12
Original Ratings: 6, 7, 4, 6, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 3, 3, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a novel framework for device placement in deep learning models, utilizing smaller computation graphs extracted from the OpenVINO toolkit through reinforcement learning. The framework integrates graph coarsening, node representation learning, and policy optimization, supporting end-to-end training and addressing the directed and acyclic nature of computation graphs. The authors evaluate their method on benchmark models like Inception-V3, ResNet, and BERT, demonstrating significant improvements in inference speed.

### Strengths and Weaknesses
Strengths:
- The framework effectively combines multiple techniques, capturing both local and global structural features for device placement.
- The end-to-end training capability enhances the model's efficiency in learning optimal device placements.
- Experimental results indicate substantial improvements in inference speed, achieving up to 58.2% over CPU execution and 60.24% compared to other baselines.

Weaknesses:
- The reliance on execution time as the sole reward for training may limit generalization to other scenarios; alternative rewards should be considered.
- The paper lacks clarity on the motivation behind the framework's design and the rationale for each component.
- There is insufficient detail on the retrieval of computation graphs and the impact of the chosen GNN architecture.
- The complexity of the proposed method and its running time compared to baselines require further elaboration.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the methods used by adding an appendix with a flowchart or pseudocode detailing the framework. Additionally, the authors should address the potential limitations of using execution time as the only reward and consider including results on different models to demonstrate the framework's broader applicability. It would also be beneficial to clarify the problem of device placement in the abstract and reduce redundancy in definitions. Finally, the authors should ensure consistent notation throughout the paper and correct any typographical errors.