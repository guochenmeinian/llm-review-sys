ID: j7sw0nXLjZ
Title: Instructor-inspired Machine Learning for Robust Molecular Property Prediction
Conference: NeurIPS
Year: 2024
Number of Reviews: 12
Original Ratings: 7, 6, 6, 5, 6, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 4, 4, 3, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents InstructMol, a framework designed to leverage unlabeled data for molecular property prediction in out-of-distribution (OOD) domains. It combines a molecular model *f* for predicting pseudo-labels with a binary classifier *g* that evaluates the reliability of these labels, thereby reweighting *f*â€™s loss. The authors demonstrate the framework's effectiveness through extensive experiments, comparing it to self-supervised learning (SSL) baselines and exploring the impact of unlabeled data size and the instructor model's uncertainty estimation.

### Strengths and Weaknesses
Strengths:
- The framework effectively utilizes large, unlabeled data, addressing a significant challenge in chemical and materials sciences.
- The paper is well-written, with informative figures and comprehensive experiments demonstrating the method's efficacy.

Weaknesses:
- The organization of Section 2 on related works could be improved, particularly regarding the separation of pretraining and SSL.
- The paper lacks sufficient interpretation of empirical results, particularly in comparing InstructMol's additional information extraction capabilities relative to SSL.
- There is insufficient analysis of computational complexity and potential overfitting issues associated with iterative pseudo-label usage.

### Suggestions for Improvement
We recommend that the authors improve the organization of Section 2 to clarify the distinctions between pretraining and SSL techniques. Additionally, the authors should provide more detailed interpretations of their empirical results, particularly addressing how InstructMol extracts information more effectively than SSL. It would also be beneficial to include a thorough analysis of computational complexity and resource requirements for InstructMol. Furthermore, we suggest conducting experiments to assess the impact of using a poor model for *f* on performance and clarifying the meaning of "confidence score" in the context of their findings. Lastly, addressing the potential overfitting issues and providing a clearer explanation of the results in Figures 3 and 4 would enhance the paper's clarity and robustness.