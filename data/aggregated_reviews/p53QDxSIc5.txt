ID: p53QDxSIc5
Title: DIN-SQL: Decomposed In-Context Learning of Text-to-SQL with Self-Correction
Conference: NeurIPS
Year: 2023
Number of Reviews: 20
Original Ratings: 6, 6, 5, 4, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 5, 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a method called DIN-SQL for the text-to-SQL task, utilizing large language models (LLMs) through a chain-of-thought (CoT) prompting approach. The authors decompose the SQL prediction process into four sub-steps: schema linking, complexity classification, SQL prediction, and self-correction. The approach demonstrates significant improvements on the Spider dataset, achieving state-of-the-art performance on the holdout test set. However, the analysis and experiments are limited to a single dataset, raising questions about the generalizability of the findings.

### Strengths and Weaknesses
Strengths:
- Achieves state-of-the-art performance on the Spider holdout test set.
- The method effectively leverages LLMs and demonstrates promising results through a well-structured pipeline.

Weaknesses:
- The study focuses solely on the Spider dataset, lacking evidence for the generalizability of the proposed approach to other Text2SQL tasks.
- The complexity categorization and prompt designs appear tailored to the Spider dataset, which may limit applicability in real-world scenarios.
- The proposed method lacks substantial technical innovation, as it builds on existing CoT techniques and prior work like NatSQL.

### Suggestions for Improvement
We recommend that the authors improve the generalizability of their findings by conducting experiments on additional Text2SQL datasets, such as BIRD-bench, Spider-SYN, Dr.Spider, and Spider-DK. This would strengthen the robustness of their results. Additionally, we suggest providing more clarity on how the intermediate representation of NatSQL bridges the gap between queries and SQL statements, including examples for both non-nested and nested complex classes. Finally, addressing the potential latency of the proposed method in comparison to other approaches would enhance the practical implications of the work.