ID: 6e86TccKyQ
Title: Balancing Risk and Reward: A Batched-Bandit Strategy for Automated Phased Release
Conference: NeurIPS
Year: 2023
Number of Reviews: 10
Original Ratings: 6, 6, 6, 6, -1, -1, -1, -1, -1, -1
Original Confidences: 1, 2, 3, 4, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a method for phased releases modeled as a risk-of-ruin constrained experiment, where resources are allocated to control and treatment groups while adhering to a budget constraint. The authors propose an adaptive Bayesian algorithm that guarantees compliance with the budget constraint with a specified confidence level. The model has practical applications in software product releases and is framed as a constrained batched bandit problem.

### Strengths and Weaknesses
Strengths:
1) The problem is well-motivated and relevant to real-world applications.
2) The paper provides sound theoretical results alongside validating experimental evaluations, including semi-real LinkedIn experiments.
3) The approach combines established techniques in a novel manner, contributing valuable insights to the field.

Weaknesses:
1) The presentation is at times unclear, particularly regarding the definitions of arriving subpopulations and the optimization objectives.
2) The algorithm's simplicity may limit its complexity, which could be seen as a drawback for an application paper.
3) The connection between the algorithm's design and its ability to maximize ramp-up speed is not explicitly discussed.

### Suggestions for Improvement
We recommend that the authors improve the clarity of Section 3 by providing a more explicit problem definition and detailing the objectives of the proposed algorithm. Additionally, the authors should elaborate on how the design aspects of the algorithm contribute to maximizing ramp-up speed while controlling risk. Including more experimental results that compare the proposed algorithm with baseline methods in terms of ramp-up speed under similar violation rates would strengthen the paper's claims. Finally, we suggest correcting the typographical error in line 5 of Algorithm 1 regarding the values for w.