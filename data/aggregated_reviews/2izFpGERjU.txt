ID: 2izFpGERjU
Title: A Combinatorial Algorithm for Approximating the Optimal Transport in the Parallel and MPC Settings
Conference: NeurIPS
Year: 2023
Number of Reviews: 8
Original Ratings: 6, 6, 6, 6, -1, -1, -1, -1
Original Confidences: 4, 3, 2, 3, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents the first parallel, combinatorial algorithm to approximate the optimal transport distance, achieving an expected parallel runtime of O(log(n)/eps^2) for an additive error of eps*n. The motivation stems from the impracticality of the previous best theoretical guarantee, which led practitioners to use the Sinkhorn algorithm with a parallel complexity of \tilde{O}(log n/eps^O(1)). The authors also demonstrate that their algorithm can be executed in the MPC setting with O(log log(n/eps)/eps^2) rounds and O(n/eps) memory per machine. Additionally, they implement the algorithm to leverage GPU parallelism, outperforming the Sinkhorn algorithm in most reported settings.

### Strengths and Weaknesses
Strengths:
- The motivation for the paper is compelling, emphasizing the need for implementable algorithms with good results.
- The algorithm is combinatorial and resembles a push-relabel type, which is appreciated by those with a combinatorial focus.
- Empirical results show that the proposed algorithm performs well compared to the Sinkhorn algorithm, suggesting the analysis may be conservative.
- The paper is well-written.

Weaknesses:
- There is no significant theoretical improvement in raw numbers, which is not the main focus of the paper.
- Presentation could be enhanced; while the writing is strong, clearer points could be made regarding the algorithm's simplicity.
- The empirical evaluation is limited, primarily consisting of dataset descriptions and a brief comparison to a single baseline.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the presentation by elaborating on key points regarding the algorithm's simplicity and its relation to push-relabel methods. Additionally, we suggest including a more comprehensive empirical evaluation that compares CPU implementations, analyzes the number of rounds used, evaluates on non-dense graphs, and assesses the absolute/relative error as a function of epsilon. Furthermore, we encourage the authors to provide the code for reproducibility and to include comparisons with the algorithm of Jambulapati et al. in future experiments.