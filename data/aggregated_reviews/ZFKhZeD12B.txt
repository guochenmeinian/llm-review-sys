ID: ZFKhZeD12B
Title: From Shapes to Shapes: Inferring SHACL Shapes for Results of SPARQL CONSTRUCT Queries
Conference: ACM
Year: 2023
Number of Reviews: 5
Original Ratings: -1, -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents an algorithm for deriving SHACL constraints from SPARQL CONSTRUCT queries over RDF graphs. The authors propose a method that produces target shapes based on source shapes, focusing on a restricted class of conjunctive queries and a limited fragment of SHACL. The algorithm is sound but not complete, operating by enumerating relevant SHACL shapes and checking their implications through description logic reasoning.

### Strengths and Weaknesses
Strengths:
- The paper is well written and provides a detailed description of the proposal, including valuable material in the appendices.
- The problem is carefully formalized, and the proposed algorithm is implemented and evaluated practically.
- The work is theoretically solid, with proofs and running examples supporting the claims.

Weaknesses:
- The algorithm's incompleteness is a significant limitation, and the authors do not sufficiently justify why this is acceptable.
- There is minimal justification for the specific restrictions on the SHACL and SPARQL fragments used.
- The notation may be confusing for readers from a Semantic Web background, deviating from established formalizations.
- The implementation section lacks clarity regarding its scope and relevance, making it difficult to assess its significance.

### Suggestions for Improvement
We recommend that the authors improve the justification for the incompleteness of the algorithm and clarify why this limitation is not a major concern. Additionally, the authors should provide a more thorough explanation of their choices regarding the restrictions on SHACL and SPARQL. To enhance readability, we suggest aligning the notation more closely with established conventions in the Semantic Web community. Finally, we advise either expanding the implementation section to clarify its purpose or removing it if it is merely a proof of concept.