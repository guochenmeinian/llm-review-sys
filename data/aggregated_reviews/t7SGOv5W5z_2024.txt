ID: t7SGOv5W5z
Title: UQE: A Query Engine for Unstructured Databases
Conference: NeurIPS
Year: 2024
Number of Reviews: 11
Original Ratings: 5, 5, 7, 6, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 3, 2, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a Universal Query Engine (UQE) designed to extract insights from unstructured data collections. It introduces a Universal Query Language (UQL) as a SQL dialect that allows natural language flexibility in specifying conditions and operators. The authors propose an unbiased sampling algorithm for aggregation queries and a workflow inspired by C++ compiler processes to optimize query execution.

### Strengths and Weaknesses
Strengths:
1. The paper addresses an important problem by enabling complex, semantics-related SQL queries using LLMs.
2. It proposes efficient algorithms and workflows to enhance query speed.
3. The unbiased sampling algorithm is theoretically validated.
4. The integration of compiler workflows into LLM inference is a novel approach.

Weaknesses:
1. UQE lacks scalability for Semantic Retrieval tasks, with reported latencies as high as 38.08 seconds, and the paper does not clarify whether these are total or average latencies per query.
2. The costs associated with embedding operations in Algorithms 1 and 2 are not discussed, and no quantitative analysis is provided regarding latency issues.
3. There is a lack of comparison with significant baselines, particularly references [9] and [33], which could provide insights into the trade-offs between accuracy and latency.
4. The evaluation of UQE's time cost is relegated to the appendix, whereas such metrics should be prominently featured in the main text.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the latency metrics reported, specifying whether they are total or average latencies per query. Additionally, a detailed discussion of the costs associated with embedding operations in Algorithms 1 and 2 should be included. We also suggest incorporating important baselines, such as those mentioned in references [9] and [33], to better evaluate the performance trade-offs. Furthermore, we encourage the authors to present UQE's time cost in the main text and to provide a more comprehensive evaluation of scalability and cost implications. Lastly, elaborating on the differences between UQE and existing systems like BINDER would enhance the paper's clarity and depth.