ID: 8OIqXq455O
Title: SigScope: Detecting and Understanding Off-Chain Message Signing-related Vulnerabilities in Decentralized Applications
Conference: ACM
Year: 2024
Number of Reviews: 5
Original Ratings: -1, -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents SigScope, a novel static analysis framework aimed at detecting vulnerabilities related to off-chain message signing in decentralized applications (DApps). The authors analyze various signing methods, categorizing vulnerabilities into signing-related and verification-related types, and report that 1,154 out of 4,937 DApps exhibit such vulnerabilities. While the framework offers a comprehensive view by assessing both front-end and back-end components, it primarily focuses on a narrow aspect of DApp security, lacking a thorough comparison with existing tools.

### Strengths and Weaknesses
Strengths:
- SigScope introduces innovative hybrid analysis techniques and provides a holistic assessment of DApp security.
- The framework is publicly available, enhancing its practical implications for the security of decentralized applications.
- The identification of 1,154 vulnerabilities underscores the significance of the study.

Weaknesses:
- The paper lacks a detailed performance analysis, including metrics such as recall, accuracy, and precision, making it difficult to validate SigScope's overall effectiveness.
- There is insufficient discussion on false negatives, which obscures the tool's detection capabilities.
- The evaluation does not compare SigScope's performance against existing tools like CodeQL or Slither.
- SigScope currently supports only Solidity and JavaScript, limiting its applicability to other programming languages.
- The organization of the paper is flawed, with critical information relegated to the appendix, and several grammatical errors detract from its quality.

### Suggestions for Improvement
We recommend that the authors improve the performance analysis by including metrics such as recall, accuracy, and precision to validate SigScope's effectiveness. Additionally, it is crucial to address the potential for false negatives and include a discussion on this aspect in the paper. We suggest that the authors expand SigScope's language support to include Vyper and obfuscated JavaScript, thereby broadening its applicability. Furthermore, we encourage the authors to provide concrete mitigation strategies for the identified vulnerabilities and to refine the paper's organization by incorporating essential content from the appendix into the main body. Lastly, we advise correcting grammatical errors to enhance the overall quality of the paper.