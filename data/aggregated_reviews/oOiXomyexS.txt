ID: oOiXomyexS
Title: A Benchmark on Directed Graph Representation Learning in Hardware Designs
Conference: NeurIPS
Year: 2024
Number of Reviews: 7
Original Ratings: 5, 7, 8, 7, -1, -1, -1
Original Confidences: 5, 4, 3, 4, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a benchmark for Directed Graph Representation Learning (DGRL) in hardware design, encompassing five datasets and 13 prediction tasks. The authors evaluate 21 DGRL models using various graph neural networks (GNNs) and graph transformers (GTs), enhanced with positional encodings (PEs) tailored for directed graphs. The study identifies that bidirected message passing neural networks (BI-MPNNs) and stable PEs significantly improve model performance. It also highlights the necessity for enhanced out-of-distribution (OOD) generalization in DGRL models and provides a modular codebase for further research.

### Strengths and Weaknesses
Strengths:
- The paper introduces a comprehensive benchmark that covers multiple datasets and tasks relevant to hardware design, providing a valuable resource for evaluating DGRL models.
- The evaluation of 21 DGRL models is thorough, employing diverse GNN and GT backbones, and incorporates both in-distribution and out-of-distribution testing, enhancing result reliability.
- A well-documented framework or toolbox is developed for solving various hardware chip design applications with graph models.

Weaknesses:
- The benchmark appears to be heavily based on datasets released in prior works, raising concerns about the novelty of the claimed "novel benchmark."
- The paper lacks exploration of model interpretability and does not delve into the internal mechanisms of the models, which may limit their applicability.
- Some sections could benefit from additional detail or clarification, particularly regarding dataset descriptions and model configurations.

### Suggestions for Improvement
We recommend that the authors improve the clarity of their contributions by emphasizing the sources of all collected datasets and giving appropriate credit to prior works. Additionally, the authors should consider exploring the scalability of the proposed methods to larger and more complex hardware design problems. To enhance the paper's impact, we suggest demonstrating more experiments combining stable positional encodings with various backbones. Finally, making the GitHub link to the codebase more prominent in the manuscript would improve accessibility for researchers.