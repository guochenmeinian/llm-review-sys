ID: vDdWAA4iVQ
Title: Learning to Rank for Non Independent and Identically Distributed Datasets
Conference: ACM
Year: 2024
Number of Reviews: 5
Original Ratings: -1, 1, 0, -1, -1
Original Confidences: 4, 4, 4, 5, 3

Aggregated Review:
### Key Points
This paper presents a method for training a ranker in a federated setting while maintaining data privacy by keeping data local to each node. The authors propose a novel non-IID LTR data generation method and a linear model combination method for federated LTR. The motivation is clear, addressing the challenges of non-IID data distributions, and the paper provides insights into the generated datasets and various strategies for dataset generation. However, it lacks clarity regarding the categories assigned to queries in the Istella-S dataset and how the proposed strategies differ from previous work.

### Strengths and Weaknesses
Strengths:
- The paper is well-written and clearly defines the problem of federated LTR, which is timely given privacy concerns.
- The proposed method is original and relevant, particularly in the context of recent privacy laws.
- Empirical results on public LTR datasets indicate practical applicability.

Weaknesses:
- The evaluation is limited to a two-node setup, which may not reflect real-world scenarios effectively.
- There is insufficient discussion on the assignment of document/query categories and its impact on the results.
- The paper does not adequately differentiate its approach from previous work, particularly regarding the treatment of non-IID data.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the categories assigned to queries in the Istella-S dataset and provide a detailed explanation of how these categories influence the dataset generation. Additionally, the authors should discuss how their strategies for generating non-IID data differ from those in previous work, particularly [26]. To enhance the evaluation, we suggest expanding the experiments to include more than two nodes and considering a leave-one-out cross-validation (LOOCV) setup. Finally, we encourage the authors to clarify the model used for the merging function in the model stacking method and address the practicality of forming the D_merge set in real-world applications.