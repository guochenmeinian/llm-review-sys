ID: vlUK2h1Nvw
Title: CALE: Continuous Arcade Learning Environment
Conference: NeurIPS
Year: 2024
Number of Reviews: 7
Original Ratings: 6, 6, 7, -1, -1, -1, -1
Original Confidences: 4, 5, 4, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents CALE, a continuous action extension of the Arcade Learning Environment (ALE), which enhances the existing suite by allowing continuous action spaces. The authors articulate the necessity of this extension and its potential applications, including comparisons between agents trained on ALE and CALE. The work includes experiments that analyze the impact of discretization thresholds, algorithm choices, and exploration strategies, ultimately demonstrating that CALE enables new research directions in reinforcement learning.

### Strengths and Weaknesses
Strengths:  
- The paper is well-written and organized, making it easy to follow.  
- CALE significantly extends the ALE suite, likely impacting the RL community positively.  
- The authors provide valuable analyses and experiments that contribute to understanding the action space dynamics.  

Weaknesses:  
- The reliance on SAC as the sole algorithm for experiments limits the scope of the findings.  
- The paper may overstate the novelty of CALE, as many popular algorithms have been evaluated on ALE.  
- Comparisons with other continuous control benchmarks may not fully capture the dynamics of CALE, as the action discretization introduces limitations.

### Suggestions for Improvement
We recommend that the authors improve the paper by including additional experiments with other algorithms, particularly PPO and TD3, to provide a broader comparison of CALE's capabilities. Clarifying how to swap ALE environments with CALE versions, including requirements for the Python environment and runtime considerations, would enhance usability. Additionally, discussing the implications of continuous actions with step-wise effects on behavior, particularly in relation to algorithms like Dreamer and the impact of Gaussian noise, would deepen the theoretical insights of the work. Lastly, updating the documentation to reflect unique features of the CALE implementation would be beneficial.