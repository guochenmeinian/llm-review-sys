ID: X3ydKRcQr6
Title: MUVERA: Multi-Vector Retrieval via Fixed Dimensional Encoding
Conference: NeurIPS
Year: 2024
Number of Reviews: 17
Original Ratings: 4, 4, 3, 6, 3, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 3, 4, 4, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a method for optimizing multi-vector retrieval under the MaxSim similarity function by mapping queries and item embeddings asymmetrically to Fixed Dimensional Embeddings (FDEs). This mapping allows classical MIPS techniques to be applied for MaxSim similarity search, with the authors comparing FDEs against PLAID and SV heuristics, demonstrating superior performance. The approach aims to enhance usability for ColBERT-style methods and addresses the limitations of inner product similarity in NLP, particularly for Recall@K in smaller K values. Additionally, the authors introduce a novel retrieval algorithm designed for multi-vector databases, focusing on improving the standalone retrieval process without requiring a training set for distillation. They clarify the significance of the Chamfer reranking process and the use of specific heuristics in their methodology, addressing various technical aspects such as the dimensionality of FDEs and the implications of their index structure on performance. The authors emphasize that their theoretical results hold even under skewed data distributions.

### Strengths and Weaknesses
Strengths:  
- The MIPS approximation construction for MaxSim is likely of significant interest to the NLP and vector search community.  
- Reducing MaxSim to MIPS facilitates the application of classical optimizations, potentially improving the usability of ColBERT-style approaches.  
- The paper provides a clear explanation of the retrieval setup and the importance of reranking.  
- The authors demonstrate a strong understanding of the theoretical implications of their algorithm, particularly regarding skewed data distributions.  
- The average running time for FDE generation is notably fast, enhancing the practicality of the proposed method.

Weaknesses:  
- The effectiveness of the MaxSim approach with FDE is significantly degraded, underperforming dense retrieval baselines, particularly at smaller K values.  
- The theoretical analysis of the presented approach is limited, particularly regarding the connection between SimHash theory and the Chamfer similarity maximization.  
- The writing quality could be improved, with suggestions for clearer explanations and the inclusion of a table of notations.  
- The term "multi-vector SV baselines" is not well-defined, leading to confusion.  
- The paper's focus on adapting existing multi-vector solutions may limit its appeal to a broader audience.  
- Some reviewers expressed concerns about the lack of clarity regarding the computational costs associated with over-retrieval and comparisons with other models.

### Suggestions for Improvement
We recommend that the authors improve the theoretical analysis by detailing the connection between the EMD approximation theory of SimHash and the Chamfer distance approximation. Additionally, it would be beneficial to report the effectiveness of FDE + MaxSim against corresponding baselines, particularly for common K values (10, 50, 100). We suggest evaluating the application of random projection and product quantization techniques directly to baselines like ColBERTv2 and PLAID to assess throughput gains. Furthermore, the authors should clarify the inference setup for FDE + MaxSim, possibly including a discussion on the retrieve-then-rerank approach. We also recommend improving the clarity of the term "multi-vector SV baselines" to avoid confusion and providing more detailed information about the computational costs associated with over-retrieval and how these compare with ColBERTv2. Including specific values for index size and memory usage would better illustrate the efficiency of the proposed method. Lastly, we encourage the authors to explore and clarify the potential for their framework to address queries involving combinations of vector columns, as well as to report the effects of the W parameter on retrieval performance more explicitly.