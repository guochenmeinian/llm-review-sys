ID: FwhM1Zpyft
Title: Scalable Neural Network Verification with Branch-and-bound Inferred Cutting Planes
Conference: NeurIPS
Year: 2024
Number of Reviews: 16
Original Ratings: 6, 6, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 5, 5, 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a new branch-and-bound-based verification algorithm for neural networks with ReLU activation, introducing a method called BICCOS to derive cutting planes. The authors propose generating additional constraints by identifying combinations of neuronal states that do not lead to adversarial inputs, thus avoiding redundant explorations in the branch-and-bound tree. The algorithm also reduces the number of neurons involved in these combinations and explores multiple branch-and-bound trees in parallel. Additionally, the authors present a novel approach for generating cutting planes within branch-and-bound-based solvers by creating cuts from conflicting assignments encountered during infeasible subproblems, enhancing these cuts by heuristically dropping some assignments and rechecking for infeasibility using lower bounds. This approach is implemented on the $\alpha,\beta$-CROWN framework and demonstrates significant computational improvements over various baselines on benchmark datasets. The authors also discuss branching strategies related to $z$ and the use of triangle relaxation, planning to enhance clarity through detailed explanations in the appendix and an expanded related work section.

### Strengths and Weaknesses
Strengths:  
- The ideas are intuitively reasonable and effective, drawing on established concepts like nogood learning and solver restarts.  
- The method scales well and generates problem-specific cuts, outperforming many competing tools in experimental evaluations.  
- The paper makes a solid contribution to neural network verification by introducing a method for quickly inferring cuts, which is both novel and computationally advantageous.  
- The authors effectively leverage fast bounding methods in neural network verification, resulting in straightforward integration with existing cut-based branch-and-bound solvers.  
- The benchmarks and baselines are extensive, showing meaningful improvements in verifiability, particularly in CIFAR instances, with clear and helpful presentation.  
- The authors acknowledge the importance of discussing branching directly in the main paper and plan to clarify this in the appendix, demonstrating a commitment to thoroughness and accuracy in referencing key literature.

Weaknesses:  
- The paper lacks clarity regarding the use of branch-and-bound in MIP solvers, leading to misconceptions about their functionality.  
- There are broad generalizations and unclear definitions, particularly concerning the branching decisions and the complexity of Proposition 3.1.  
- Presentation issues, including small figures and typographical errors, detract from the overall quality.  
- The experimental results show only marginal improvements, and comparisons with existing cutting planes are insufficient.  
- Some computational results appear incremental, and there is potential for improvement in the methods, particularly regarding variations in the constraint strengthening approach.  
- The heuristic for variable selection may introduce bias based on assignment order, and the fixed drop percentage for cut strengthening could be optimized further.  
- The description of reference [5] is noted to be incorrect, which may affect the credibility of the discussion, although it is considered a lesser issue.  

### Suggestions for Improvement
We recommend that the authors improve the clarity of their discussion regarding MIP solvers, specifying what they can and cannot do. Additionally, please reframe the contribution in relation to existing work on nogood learning and restarts. Simplifying Proposition 3.1 would enhance readability. We also suggest providing details on the thresholds used in Algorithm 1 and clarifying the relationship between BICCOS cuts and existing cuts from prior work. Addressing the presentation issues, including figure readability and typographical errors, is crucial. Lastly, please ensure that the experimental results include more granularity and consistent time budgets across algorithms for better assessment.

Furthermore, we recommend that the authors improve the variable-to-drop selection heuristic by exploring alternative approaches to mitigate bias from previous assignments. Consider implementing a binary search method for cut strengthening instead of a fixed drop percentage, potentially incorporating a tolerance for stopping the search. In Algorithm 1, we suggest adding only the best cut rather than all cuts during the strengthening process. 

We encourage the authors to provide more detailed data on the cuts generated, including the fraction of infeasible nodes producing non-redundant cuts and the average number of assignments dropped. Additionally, clarify the relationship between the proposed method and existing techniques, particularly regarding the potential for using learned clauses from CDCL as cuts. 

Finally, we recommend improving the accuracy of the description of reference [5] to ensure clarity and correctness, and ensuring that the discussion on branching and triangle relaxation is clearly articulated in both the main text and the appendix to enhance reader understanding.