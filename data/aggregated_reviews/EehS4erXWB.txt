ID: EehS4erXWB
Title: SE(3)-bi-equivariant Transformers for Point Cloud Assembly
Conference: NeurIPS
Year: 2024
Number of Reviews: 13
Original Ratings: 5, 5, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 3, 4, 3, 5, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents an end-to-end framework for point cloud correspondence and relative pose estimation that is bi-equivariant to per-part poses, scaling, and swapping part orders. The authors propose a transformer architecture with $\mathrm{SE}(3) \times \mathrm{SE}(3)$-equivariance, demonstrating its effectiveness through experiments on the ShapeNet benchmark and other applications. However, the authors have not adequately resolved the permutation equivariance issue, as concatenating keypoints extracted from point clouds leads to different output vectors for the same input due to permutations, which breaks the claimed invariance. The proposed network, BTIR, enforces symmetries through weight constraints and significantly outperforms existing methods in certain settings, but it fails to address the uniqueness of solutions in non-overlap settings and does not sufficiently discuss the implications of differing keypoint counts between point cloud parts. Additionally, the experimental results are limited, relying on toy datasets rather than more challenging scenarios.

### Strengths and Weaknesses
Strengths:
- The problem formulation is well-suited for equivariance, with clear explanations provided.
- The bi-equivariant transformer architecture is well-designed, integrating classic pose matching algorithms.
- The paper proposes an interesting approach to the problem of point cloud processing.
- Extensive experiments validate the framework's effectiveness across various setups and applications, despite some limitations.

Weaknesses:
- The term "shape assembly" is inaccurately used; "shape registration" is more appropriate for the task.
- There are significant methodological errors regarding permutation equivariance and uniqueness in non-overlap settings.
- The method lacks comparisons with prior works on shape registration, including classic optimization-based methods like ICP and recent learning-based methods.
- The definition of point cloud assembly is imprecise, particularly regarding alignment of non-overlapping point clouds.
- The experimental results are weak, relying on toy datasets rather than more challenging scenarios, and do not outperform existing state-of-the-art techniques in the provided datasets.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the task definition by using "shape registration" instead of "shape assembly." Additionally, the authors should clarify how the concatenation of keypoints maintains invariance under permutations and reformulate the discussion on uniqueness in non-overlap settings, considering the potential for multiple solutions due to functional relationships. Including comparisons with classic and recent shape registration methods would highlight the advantages of their approach, particularly in terms of data efficiency. Expanding the experimental section to include more robust results using standard datasets with low overlap, such as 3DLoMatch, would strengthen the validation of the proposed method. Finally, we encourage the authors to compare their approach against other state-of-the-art methods more comprehensively to demonstrate its effectiveness.