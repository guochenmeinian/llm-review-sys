ID: kEQFjKqiqM
Title: Distributed-Order Fractional Graph Operating Network
Conference: NeurIPS
Year: 2024
Number of Reviews: 11
Original Ratings: 5, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 3, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a novel continuous Graph Neural Network (GNN) framework called DRAGON, which utilizes distributed-order fractional calculus. Unlike traditional continuous GNNs that rely on integer-order or single fractional-order differential equations, DRAGON employs a learnable probability distribution over real numbers for derivative orders. This flexibility allows for a superposition of multiple derivative orders, enhancing the model's ability to capture complex graph feature updating dynamics. The authors provide a non-Markovian graph random walk interpretation and demonstrate the framework's effectiveness through extensive experiments across various graph learning tasks, achieving competitive results.

### Strengths and Weaknesses
Strengths:  
- The introduction of distributed-order fractional calculus in GNNs is a novel approach that expands the capabilities of continuous GNN models.
- The framework generalizes previous dynamical systems and allows for a flexible mixture of fractional derivatives.
- The paper is well-structured, with clear explanations and organized experimental results demonstrating notable performance improvements across multiple datasets.

Weaknesses:  
- The paper lacks sufficient visualizations and explanations for the non-Markovian graph random walk interpretation.
- There is no provided code for review and reproducibility, which limits the ability to validate results.
- Scalability and computational efficiency of the proposed framework for large graphs are not thoroughly addressed.
- The hyperparameter selection strategy is not clearly stated, and the complexity analysis lacks detail.

### Suggestions for Improvement
We recommend that the authors improve the visualizations and explanations related to the non-Markovian graph random walk interpretation. Additionally, providing the code would enhance the review process and facilitate reproducibility. The authors should also address scalability and computational efficiency in real-world applications with large graphs. Furthermore, clarifying the hyperparameter selection strategy and providing a more detailed complexity analysis would strengthen the paper. Lastly, it would be beneficial to elaborate on the intrinsic property of capturing flexible memory effects mentioned in the paper.