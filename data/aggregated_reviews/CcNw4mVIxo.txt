ID: CcNw4mVIxo
Title: Spiking Neural Network as Adaptive Event Stream Slicer
Conference: NeurIPS
Year: 2024
Number of Reviews: 13
Original Ratings: 6, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 5, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a novel method, SpikeSlicer, which utilizes spiking neural networks (SNNs) to adaptively slice event streams before processing them with a downstream inference model. The method involves dividing the input event stream into voxelized event cells at consistent temporal intervals, with the SNN generating spikes that indicate slicing positions. The authors propose a feedback-update strategy for end-to-end training of both the SNN and the downstream model, employing membrane potential-driven loss and linear-assuming loss to control spiking times. Extensive experiments validate the method's integration into existing models, demonstrating significant performance improvements in various applications.

### Strengths and Weaknesses
Strengths:
- The paper addresses an interesting and underexplored problem of data-driven adaptive event voxel construction, with a convincing and intuitive approach.
- The feedback-update strategy allows for effective supervision from the downstream ANN to the SNN, complemented by the proposed losses that regulate spiking behavior.
- Extensive experiments showcase the method's applicability across multiple event-based tasks, highlighting its efficiency and prediction quality.

Weaknesses:
- The design appears somewhat simplistic for a NeurIPS submission, lacking technical sophistication and theoretical insights, although this is mitigated by thorough empirical evaluation.
- While SNNs are efficient, their limitations compared to ANNs raise questions about the potential benefits of using an ANN for event slicing.
- The proposed feedback-update strategy's effectiveness in determining the desired trigger time $n^*$ is uncertain, particularly regarding the argmin operator's utility during initial training stages.

### Suggestions for Improvement
We recommend that the authors improve the technical sophistication of the design to align with NeurIPS standards. Additionally, consider investigating the use of an ANN as an event slicer to potentially enhance prediction quality. We also encourage the authors to address the concerns regarding the feedback-update strategy's effectiveness in identifying trigger times and clarify the implications of using a fixed number of event cells on the adaptive nature of the slicing process. Lastly, we suggest including comparisons with more recent algorithms that focus on enhancing event representation to strengthen the paper's contributions.