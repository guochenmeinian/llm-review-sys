ID: faMbH0wkye
Title: UICopilot: Automating UI Synthesis via Hierarchical Code Generation from Webpage Designs
Conference: ACM
Year: 2024
Number of Reviews: 4
Original Ratings: -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents UICopilot, a framework for automated user interface (UI) synthesis that generates hierarchical HTML structures and CSS from webpage design images. The authors propose a two-stage approach that decouples coarse layout generation from detailed code synthesis, leveraging the Vision2UI dataset to validate performance. The originality of UICopilot lies in its hierarchical method, which significantly enhances performance and structure compared to one-step models. The framework demonstrates notable advancements in automating UI synthesis, with empirical results showing improved performance over state-of-the-art models like GPT-4V and Design2Code.

### Strengths and Weaknesses
Strengths:
- The novel hierarchical approach effectively manages complex webpage structures and lengthy code requirements.
- Comprehensive experiments demonstrate UICopilot’s superior performance in both quantitative and qualitative evaluations on the Vision2UI dataset.

Weaknesses:
- The term “agent” is used ambiguously, lacking clarity on its autonomy or relation to AI agents, which may confuse readers.
- The overall concept of UI code generation using MLLMs has been explored in prior works, and the novelty could be further emphasized.
- The explanation of the hierarchical code generation process is somewhat complex and could benefit from simplification.
- There is insufficient analysis regarding the necessity of the Coarse DOM Layout Generation stage and its impact on layout accuracy and visual consistency.

### Suggestions for Improvement
We recommend that the authors improve clarity regarding the term “agent” in UICopilot, specifically addressing its autonomy and decision-making capabilities. Additionally, we suggest providing an analysis of UICopilot’s performance with and without the Coarse DOM Layout Generation to clarify its significance. The authors should include example demonstrations of the JSON text generated in the first stage and specify the model or Python library used for webpage image cropping, addressing potential error propagation. An in-depth analysis of the generally low SSIM scores would be beneficial, and the ablation study should present a more comprehensive evaluation by showcasing additional performance indicators and results across various dimensions. Lastly, a more detailed explanation of the human evaluation process and a discussion of the limitations and future work would enhance the paper's depth.