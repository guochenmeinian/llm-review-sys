ID: sRILMnkkQd
Title: UniGAD: Unifying Multi-level Graph Anomaly Detection
Conference: NeurIPS
Year: 2024
Number of Reviews: 11
Original Ratings: 7, 7, 6, 5, -1, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents UniGAD, a unified framework for detecting anomalies at the node, edge, and graph levels. The authors propose two core modules: the Maximum Rayleigh Quotient Subgraph Sampler (MRQSampler), which maximizes spectral energy to preserve significant anomaly information, and the GraphStitch Network, which facilitates multi-level task integration. Theoretical proofs support the effectiveness of MRQSampler, and extensive experiments demonstrate that UniGAD outperforms existing methods while exhibiting strong zero-shot transferability.

### Strengths and Weaknesses
Strengths:
1. UniGAD addresses a significant gap in graph anomaly detection by jointly detecting anomalies across multiple levels, enhancing versatility.
2. The MRQSampler and GraphStitch Network are innovative methodologies that optimize performance and facilitate information sharing.
3. The framework shows robust performance across 13 datasets, demonstrating strong zero-shot transferability.
4. The approach is underpinned by solid theoretical foundations and efficient algorithms, promoting transparency and reproducibility.

Weaknesses:
1. The paper modifies existing methods like All-in-One and GraphPrompt for comparison, yet these methods already support relevant tasks without modifications, raising questions about the necessity of these changes.
2. Clarification is needed regarding the time limitations (OOT) mentioned for All-in-One and GraphPrompt, particularly whether this pertains to prompt tuning or pre-training stages.
3. The paper lacks an analysis of temporal and spatial performance metrics, which would enhance the evaluation of UniGAD's practicality for large-scale applications.
4. The treatment of graph signals as vectors in proofs does not align with typical practices where node features are often multi-dimensional vectors.
5. The MRQSampler is described as a dynamic programming algorithm, yet it appears to function recursively, which may affect efficiency.

### Suggestions for Improvement
We recommend that the authors clarify the differences in performance and efficiency between UniGAD and existing methods like All-in-One and GraphPrompt, particularly regarding the OOT issue. Additionally, we suggest including temporal and spatial performance metrics in the evaluation to provide a comprehensive assessment of UniGAD's practicality. Furthermore, addressing the discrepancy in the treatment of graph signals in proofs and ensuring that the MRQSampler's algorithmic classification is accurate would strengthen the paper. Lastly, we encourage the authors to explore the potential for unsupervised applications of UniGAD, as this could broaden its applicability.