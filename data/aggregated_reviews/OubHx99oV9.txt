ID: OubHx99oV9
Title: FedUP: Querying Large-Scale Federations of SPARQL Endpoints
Conference: ACM
Year: 2023
Number of Reviews: 5
Original Ratings: -1, -1, -1, -1, -1
Original Confidences: -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents an approach for federated query processing in SPARQL, focusing on the JOIN, UNION, OPT, and FILTER fragments. The authors propose using union-over-join planning and filtering out non-contributing parts of unions based on non-empty patterns from query sources. The method employs quotient summaries for efficient execution and is evaluated against benchmarks, yielding reasonable results despite data distribution challenges.

### Strengths and Weaknesses
Strengths:
- The idea is simple, sound, and demonstrates decent effectiveness.
- An implementation is provided, with code available on GitHub.
- The experimental setup is fair, acknowledging scenarios where the approach may not be optimal.

Weaknesses:
- The novelty of the contribution is unclear, as it resembles existing query planning methods. The limitations of the approach, particularly regarding data distribution, need better discussion.
- The writing lacks clarity in several areas, with insufficient explanations of key concepts and terms like RSA and CostFed.
- The interaction of workload parallelization with the proposed method is not adequately addressed.
- The scope is somewhat narrow, covering only a small fragment of SPARQL.

### Suggestions for Improvement
We recommend that the authors improve the clarity of the writing by providing more detailed explanations of key concepts, particularly around query summaries and specific terms. A discussion on the limitations of the approach regarding data distribution should replace the related work section. Additionally, the authors should clarify how workload parallelization interacts with their proposal. It would also be beneficial to include a "real-world" example using well-known endpoints like Wikidata or DBPedia to illustrate the practical application of their approach. Finally, addressing the potential for exponential growth in query components when unraveling joins would enhance the paper's depth.