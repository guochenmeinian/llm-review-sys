ID: 5R9bZlpZKj
Title: Smoothed Analysis of Sequential Probability Assignment
Conference: NeurIPS
Year: 2023
Number of Reviews: 11
Original Ratings: 6, 6, 6, 7, 7, -1, -1, -1, -1, -1, -1
Original Confidences: 4, 2, 4, 3, 3, -1, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents a study on contextual sequential probability assignments, particularly focusing on cases where contexts \(x_{1:T}\) are generated by \(\sigma\)-smooth adversaries and labels \(y_{1:T}\) are adversarially generated. The authors propose an oracle-efficient algorithm that achieves sublinear regret under logarithmic loss, with key findings including:

1. For a class \(\mathcal{F}\) with a scale-sensitive VC-dimension of order \(\epsilon^{-p}\), the information-theoretical minimax regret grows as \(T^{p/(p+1)}\cdot \text{poly}\log(T/\sigma)\).
2. An efficient algorithm exists that attains regret of order \(T^{2/(2+w)}\sqrt{1/\sigma}\) given an MLE oracle, yielding a regret bound of order \(T^{4/5}\) for the VC-class.
3. The information-theoretical regret for the VC-class is of the order \(d\log(T/\sigma)\), aligning with concurrent findings.

### Strengths and Weaknesses
Strengths:
- The introduction of an oracle-efficient algorithm represents the first known instance of computationally efficient sublinear regrets under log-loss for general non-parametric classes, likely inspiring further research.
- The paper is well-written, clear, and presents interesting results that motivate further exploration in smoothed analysis.

Weaknesses:
- The novelty of the techniques is questionable, as Algorithm 1 and its analysis appear to closely mimic those in [Haghtalab et al. 2022], with several proofs seemingly copied verbatim.
- There are various presentation and technical issues, including inconsistent notation, unclear proofs, and potential misalignment with existing lemmas.

### Suggestions for Improvement
We recommend that the authors improve the clarity and originality of their work by addressing the following:

1. Conduct thorough proofreading to correct inconsistencies, such as the index of summation in Lemma 4.2.
2. Include a proof for Corollary 4.1.1 to clarify how Theorem 4.1 implies the bound for specific values of \(n\), \(\alpha\), and \(m\).
3. Clearly cite and explain any references to alternative oracles, particularly regarding the claim of achieving a \(T^{3/4}\) bound.
4. Ensure that the assumptions regarding the OPT oracle's permutation invariance are explicitly stated, as this may not hold for all optimization methods.
5. Address the implementation feasibility of Algorithm 1 without knowledge of \(\sigma\) and discuss the implications if the adversary is realizable concerning the class \(F\).
6. Provide a proof sketch for Theorem 3.1 and clarify any technical challenges in applying prior work to this setting.