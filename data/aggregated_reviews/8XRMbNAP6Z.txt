ID: 8XRMbNAP6Z
Title: Near-Optimal $k$-Clustering in the Sliding Window Model
Conference: NeurIPS
Year: 2023
Number of Reviews: 9
Original Ratings: 7, 7, 7, 7, -1, -1, -1, -1, -1
Original Confidences: 4, 2, 4, 4, -1, -1, -1, -1, -1

Aggregated Review:
### Key Points
This paper presents the first near-optimal $(1+\varepsilon)$-approximation algorithm for the $(k, z)$-clustering problem in the sliding window model, utilizing a $(1+\varepsilon)$-coreset based on an online coreset algorithm for $k$-clustering. The authors provide a strict proof of the algorithm's validity and demonstrate its efficiency through experimental results. The proposed algorithm achieves a space complexity of $\frac{k}{\min(\varepsilon^4, \varepsilon^{2+z})} \text{poly} \log \frac{n \Delta}{\varepsilon}$, which nearly matches the lower bound of $\Omega \left(\frac{k}{\varepsilon^2} \log{n}\right)$.

### Strengths and Weaknesses
Strengths:
- The paper introduces the first $(1+\varepsilon)$-approximation algorithm for $(k, z)$-clustering in the sliding window, improving both accuracy and space efficiency.
- The space complexity nearly matches the lower bound for offline coreset construction, which is significant in practical applications.
- The theoretical foundation is solid, supported by strict proofs and sufficient experimental results.
- The writing is generally clear and the organization is effective.

Weaknesses:
- Some symbols, such as $[ \Delta ]^d$, are not adequately explained.
- The merge-and-reduce framework lacks sufficient citations and comprehensive discussion of challenges.
- The experimental section may be seen as redundant, particularly since the core algorithm is not fully implemented.

### Suggestions for Improvement
We recommend that the authors improve the clarity of notation by defining all symbols when they first appear, particularly in the abstract. Additionally, we suggest including more citations in the merge-and-reduce framework discussion to enhance its comprehensiveness. To strengthen the experimental section, we advise implementing the proposed algorithm more meaningfully or considering its removal to focus on the theoretical contributions. Lastly, addressing the concerns regarding the window size in experiments by testing with various sizes could further validate the robustness of the proposed method.