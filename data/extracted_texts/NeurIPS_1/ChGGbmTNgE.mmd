# When Visual Prompt Tuning Meets Source-Free

Domain Adaptive Semantic Segmentation

Xinhong Ma, Yiming Wang, Hao Liu, Tianyu Guo, Yunhe Wang

Huawei Noah's Ark Lab

{maxinhong, wangyiming22, liuhao296, tianyu.guo, yunhe.wang}@huawei.com

Corresponding author

###### Abstract

Source-free domain adaptive semantic segmentation aims to adapt a pre-trained source model to the unlabeled target domain without accessing the private source data. Previous methods usually fine-tune the entire network, which suffers from expensive parameter tuning. To avoid this problem, we propose to utilize visual prompt tuning for parameter-efficient adaptation. However, the existing visual prompt tuning methods are unsuitable for source-free domain adaptive semantic segmentation due to the following two reasons: (1) Commonly used visual prompts like input tokens or pixel-level perturbations cannot reliably learn informative knowledge beneficial for semantic segmentation. (2) Visual prompts require sufficient labeled data to fill the gap between the pre-trained model and downstream tasks. To alleviate these problems, we propose a universal unsupervised visual prompt tuning (Uni-UVPT) framework, which is applicable to various transformer-based backbones. Specifically, we first divide the source pre-trained backbone with frozen parameters into multiple stages, and propose a lightweight prompt adapter for progressively encoding informative knowledge into prompts and enhancing the generalization of target features between adjacent backbone stages. Cooperatively, a novel adaptive pseudo-label correction strategy with a multiscale consistency loss is designed to alleviate the negative effect of target samples with noisy pseudo labels and raise the capacity of visual prompts to spatial perturbations. Extensive experiments demonstrate that Uni-UVPT achieves state-of-the-art performance on GTA5 \(\) Cityscapes and SYNTHIA \(\) Cityscapes tasks and can serve as a universal and parameter-efficient framework for large-model unsupervised knowledge transfer. Code will be available at [https://gitee.com/mindspore/models/tree/master/research/cv/uni-uvpt](https://gitee.com/mindspore/models/tree/master/research/cv/uni-uvpt) and [https://github.com/huawei-noah/noah-research/tree/master/uni-uvpt](https://github.com/huawei-noah/noah-research/tree/master/uni-uvpt).

## 1 Introduction

Semantic segmentation is a critical computer vision task, which aims to segment and parse a scene image into different image regions associated with semantic categories. The success of these semantic segmentation techniques relies on large-scale densely-labeled datasets. However, it is prohibitively expensive to collect high-quality annotations. Besides, most semantic segmentation methods ignore the distribution shift between training and testing data, making them fail to generalize when deployed in conditions different from training such as cross-city  or cross-weather  scenarios. _Unsupervised Domain Adaptation (UDA)_ is an intuitive direction to address the above two issues by transferring knowledge from existing models trained on source datasets to the unlabeled target domain. Typical UDA approaches require joint access to both labeled source and unlabeled target data during training, making them unsuitable for _Source-Free Unsupervised Domain

#### Adaptation (SFUDA)

where source and target data are not concurrently accessible. This SFUDA setting with restricted data-sharing is privacy-oriented and thus holds immense practical value in autonomous driving and other commercial visual applications.

With the above considerations, this paper proposes to solve source-free domain adaptive semantic segmentation task, where only source pre-trained models and unlabeled target data are available for model adaptation. Recently, a few source-free UDA methods have been developed to tackle semantic segmentation [30; 19; 20; 46] and image classification [21; 23; 26]. Most of them either perform self-training [30; 1; 27; 44] or synthesize target-style training data  to fine-tune all model parameters. However, fine-tuning requires many computation resources, which is an expensive and often infeasible proposition for previous SFUDA methods, especially for modern transformer-based architectures. Recently, prompt tuning has been proposed to explore the knowledge of frozen language models [22; 25; 28; 29], which could be an alternative strategy to efficiently adapt the pre-trained source model to the target domain.

_Prompt Tuning_ aims to design a trainable lightweight block as a supplementary input (_prompt_) for a frozen model, which could guide or direct the generalization of powerful representations to achieve desirable performances. Inspired by its great success in natural language processing (NLP) , a few methods in computer vision propose to add small amounts of learnable parameters as tokens  or pixel-level perturbations  to adapt large pre-trained models to downstream tasks. However, the existing visual prompt tuning methods have two limitations when applied to source-free domain adaptive semantic segmentation: (1) The learned visual prompts are unreasonable. Specifically, prompts like input tokens or pixel-level perturbations are black boxes, which cannot reliably explore convincing knowledge beneficial for pixel-wise predictions. Besides, most methods utilize task-oriented loss for optimization, _e.g._, cross-entropy loss, which limits the learning capacities of visual prompts. (2) Previous methods cannot be directly applied to the unlabeled target domain because most of them rely on sufficient labeled data to deal with the gap between pre-trained models and downstream tasks. There is a lack of methods addressing unsupervised visual prompt tuning where only massive unlabeled data is available for training.

To address the above problems, we propose a _Universal Unsupervised Visual Prompt Tuning (Uni-UVPT)_ framework for source-free domain adaptive semantic segmentation. Specifically, given a source pre-trained model, we partition its backbone with frozen parameters into multiple stages and design a lightweight prompt adapter for stage-wise prompt tuning. The prompt adapter contains a prompt generator and several prompt interactors. The former aims to generate reasonable prompts that capture multiscale spatial information and task-shared knowledge. The latter progressively refines prompts between adjacent stages and transforms target features to match the source pre-trained knowledge in the backbone. To learn prompts with massive unlabeled target samples, we utilize target instances with pseudo labels for self-training, and propose an adaptive pseudo-label correction strategy to alleviate pseudo-label noises. The proposed adaptive pseudo-label correction strategy could determine suitable moments to rectify pseudo labels and guide the model to train on instances with corrected pseudo labels, not noisy ones. Meanwhile, a multiscale consistency loss is proposed to impose multiscale consistency of the features and predictions so that the learned visual prompts are robust to arbitrary semantic-preserving spatial perturbations. It is noticed that our method is applicable to various transformer architectures without modifying their basic units.

The contributions of this work are summarized as follows: (1) We first highlight the low-efficiency problem of fine-tuning large-scale backbones in source-free domain adaptive semantic segmentation, and propose a universal unsupervised visual prompt tuning framework for parameter-efficient model adaptation. (2) A lightweight prompt adapter is introduced to learn reasonable visual prompts and enhance feature generalization in a progressive manner. Cooperatively, a novel adaptive pseudo-label correction strategy is proposed to rectify target pseudo labels at suitable moments and improve the learning capacity of visual prompts. Extensive experimental results demonstrate that our method with a few trainable parameters could achieve state-of-the-art performances on GTA5 \(\) Cityscapes and SYNTHIA \(\) Cityscapes tasks.

## 2 Universal Unsupervised Visual Prompt Tuning

In unsupervised domain adaptation, a labeled source dataset \(_{s}=\{(x_{s},y_{s}):x_{s}_{s},y_{s}\}\) and an unlabeled target dataset \(_{t}=\{x_{t}:x_{t}\}\) are available for training, where \(\) is the input spaceand \(\) denotes the label set. \(x_{s}\) is drawn from the marginal distribution \(p_{s}\) while \(x_{t}\) is drawn from another marginal distribution \(p_{t}\). The goal is to learn a mapping \(f:\) that can generalize well for \(x_{t}\). We focus on the source-free constraint , where we do not have access to the original source domain data \(_{s}\). Instead, merely a source pre-trained model \(f_{s}\) and unlabeled target data \(_{t}\) are provided for adaptation. The source pre-trained semantic segmentation model usually contains a backbone \(f_{b}\) (containing some embedding layers, _e.g._, the patch embedding layer in Swin ) and a customized head \(f_{h}\). To efficiently adapt the source pre-trained model \(f_{s}\) to the unlabeled target domain \(_{t}\), we propose to perform unsupervised visual prompt tuning. When designing our algorithm, we consider the following two questions: (1) how to design informative visual prompts for source-free domain adaptive semantic segmentation and (2) how to learn visual prompts with unlabeled samples for model adaptation. To this end, we propose a universal unsupervised visual prompt tuning (Uni-UVPT) framework as shown in Figure 1. Specifically, we design a novel prompt adapter for generating informative visual prompts and improving the generalization of target features. Besides, an effective adaptive pseudo-label correction strategy with a multiscale consistency loss is proposed for learning visual prompts with massive unlabeled target data and enhancing visual prompts' capacity for spatial perturbations. As the backbone \(f_{b}\) is frozen and only the parameters of the proposed prompt adapter and segmentation head are optimized during training, Uni-UVPT is parameter-efficient for model adaptation. Besides, Uni-UVPT could be directly deployed to various transformer-based architectures without modifying the basic units.

### Prompt Adapter

As shown in Figure 1, the proposed lightweight prompt adapter contains a prompt generator and several prompt interactors. The former aims to generate informative prompts that capture multiscale spatial information and task-shared knowledge. The latter is designed to refine prompts with pre-trained knowledge and transform target features to match the pre-trained knowledge in the backbone. To interact with target features via visual prompts, we manually partition the backbone \(f_{b}\) into \(N\) (usually \(N=4\)) stages, each of which is composed of multiple basic units. Given a target image \(x_{t}\), it is first fed into the embedding layer to obtain patch sequences \(F_{0}^{out}\). \(F_{0}^{out}\) is then regarded as an input of the frozen backbone. Meanwhile, the target image \(x_{t}\) is also fed into the prompt generator to output an initial prompt \(C_{0}\) that contains \(L\) dimensional spatial features of multiple resolutions. Then, the initial prompt is flattened and concatenated as an input of the prompt interactor. For stage \(i\) of the backbone, its input feature and output feature are respectively denoted as \(F_{i}^{in}\) and \(F_{i}^{out}\). Before stage \(i\), the prompt interactor incorporates the output feature \(F_{i-1}^{out}\) and the interim prompt \(C_{i-1}\) of previous stage to obtain the refined prompts \(C_{i}\) and a suitable input \(F_{i}^{in}\) for the stage \(i\). Finally, the output feature \(F_{N}^{out}\) of the last stage is fed into head \(f_{h}\) for segmentation prediction. In the following sections, we introduce the details of the proposed prompt generator and prompt interactor.

**Prompt Generator.** Previous methods [4; 18] have proved that learning prompts brings flexibility to the pre-trained model. However, their prompts like input tokens or pixel-level perturbations are black boxes with limited learning capacity, which cannot reliably explore convincing knowledge beneficial for semantic segmentation. Therefore, we propose to design informative prompts for each image to capture multiscale spatial prior and the task-shared knowledge. To achieve this goal, we utilize a standard convolutional stem \(f_{stem}\) borrowed from ResNet  to extract multiscale spatial information, because convolution could help transformers better capture the local spatial information [41; 42; 13; 34]. \(f_{stem}\) consists of three convolutions, a max-pooling layer, and a stack of stride-2 \(3 3\) convolutions to double the channels and reduce the size of feature maps. Several \(1 1\) convolutions are applied at the end to project the feature maps to \(L\) dimensions. Finally, we obtain a feature pyramid \(S=\{s_{1},s_{2},s_{3}\}\), which contains \(L\)-dimensional feature maps with 1/2, 1/4, and 1/8 resolutions of the original image. Besides, following the spirits of previous methods [4; 18], we leverage a group of trainable vectors \(Q=\{q_{1},q_{2},q_{3}\}\) named level embedding, to learn task-shared knowledge, which contains three \(L\)-dimensional vectors initialed by the Gaussian function. In this way, the prompt pyramid \(_{0}=\{c_{1},c_{2},c_{3}\}\) of the input image \(x_{t}^{3 H W}\) could be obtained by

\[c_{i}=(s_{i},q_{i}), \]

where \((,)\) could be any feature fusion operations. Here, we first repeat \(s_{i}\) several times so that the vectors can be resized as the same shape of \(q_{i}\), and then perform element-wise addition. Finally, we flatten and concatenate the prompt pyramid \(_{0}\) into prompt tokens \(C_{0}^{(}+}+} ) L}\) as the input of prompt interactor for prompt refinement and feature adaptation.

Prompt Interactor.To progressively refine prompts and improve feature generalization via the refined prompts, we design a novel prompt interactor based on cross-attention. As shown in Figure 1, for the \(i\)-th stage of the backbone, we use the interim prompt \(C_{i-1}\) of the previous stage as the query, and the output feature \(F^{out}_{i-1}\) as the key and value for cross-attention so that the pre-trained knowledge contained in \(F^{out}_{i-1}\) are injected into prompts. This process can be formulated as:

\[C_{i}=C_{i-1}+C_{i-1}),F^{out}_{i-1})), \]

where the \(\) is LayerNorm , and the attention layer \(\) suggests using sparse attention. After that, we utilize the refined prompt \(C_{i}\) to generate adapted input \(F^{in}_{i}\) for the next stage of the backbone. This process can be formulated as:

\[F^{in}_{i}=F^{out}_{i-1}+_{i}F^{out}_{i-1} ),C_{i} \]

where sparse attention is adopted to reduce computational costs. Besides, we apply a learnable vector \(_{i}^{L}\) to balance the attention layer's output and the feature \(F^{out}_{i-1}\), which is initialized with 0. This initialization strategy ensures that the feature distribution of \(F^{out}_{i-1}\) will not be modified drastically due to the injection of the prompt \(C_{i}\), thus making better use of the pre-trained knowledge of backbone.

### Adaptive Pseudo-Label Correction

To learn visual prompts with massive unlabeled target data, we propose to utilize high-quality pseudo labels of target samples for self-training. The pipline of the adaptive pseudo-label correction is shown in Figure 1 (**e**). Previous SFUDA methods generate pseudo labels by learning meaningful cluster structures in the feature space and the quality of the learned cluster structures hinges on the reliability of pseudo labels generated by the source model. Therefore, the pseudo labels are noisy due to the domain shift. Recently, Li et al.  have formulated SFUDA as

Figure 1: The architecture of Uni-UVPT. (a) The source pre-trained segmentation model, whose encoder layers are divided into \(N\) stages. (b) The proposed prompt adapter, which contains two designs, including (c) a prompt generator for encoding rich knowledge into prompts, and (d) a prompt interactor for prompt refinement and feature interaction. (e) The proposed adaptive pseudo-label correction strategy, which rectifies pseudo-labels at suitable moments.

learning with label noise problem, and observed early-learning phenomenon that deep neural networks tend to first fit the training data with correct pseudo labels during an early-learning phase, before eventually memorizing the instance with incorrect/noisy pseudo labels. Not only in image classification, we also observe a similar phenomenon in semantic segmentation, where the pseudo-label noise is ubiquitous across samples and distributed in a pixel-wise manner. As shown in Figure 2, we analyze the learning curves on the pseudo labels predicted by the source model during the training process. As the model learning is supervised by noisy pseudo labels, the IoU\({}_{m}\) curves for all categories increase substantially as training proceeds. The IoU\({}_{el}\) follows a completely different trajectory: it first increases during an early-learning stage where the model learns to correctly segment the incorrectly-labeled pixels, but eventually decreases as memorization occurs.

To alleviate the memorization of noisy pseudo labels in SFUDA, Li et al.  roughly encourage model predictions to stick to labels generated by the frozen source model without any label correction. Differently, we design an adaptive pseudo-label correction strategy based on the early-time training phenomenon, which rectifies target pseudo labels for each category before the model memorizes the noisy pseudo labels. Naturally, it raises a question that how to determine when to correct the noisy pseudo labels. Fortunately, as shown in Figure 2, we observe that the segmentation performance on the training set (IoU\({}_{m}\)) improves rapidly during early learning, and then much more slowly during memorization. In other words, the performance deceleration indicates whether the model overfits noisy pseudo labels. To estimate the deceleration, we first fit the following exponential parametric model to the training IoU using the least squares:

\[g(t)=at^{3}+bt^{2}+ct+d, \]

where \(t\) represents training time, and \(a\), \(b\), \(c\) and \(d\) are fitting parameters. However, it is time-consuming to calculate the training IoU on all training samples. We propose to utilize a memory queue with \(r\) samples as an alternative, which is updating with batch data. Then, we compute the derivative \(g^{}(t)\), and the pseudo labels for each category are corrected when the relative change of \(g^{}(t)\) is above a certain threshold \(\):

\[(t_{0})-g^{}(t)|}{ |g^{}(t_{0})|}>. \]

where \(t_{0}\) is the start time of the early-learning stage in a correction loop. The image pixels with predictive confidence over \(\)% per class on the entire target training set are chosen for pseudo-label correction. For all experiments, we set \(=0.9\) and \(=0.65\). After the pseudo-label correction, the model learning steps into a new early-learning stage. It is noticed that the pseudo-label correction loop will perform several times until achieving the max training iterations.

Figure 3: Multiscale consistency loss for rescaled images. The rescaled features of \(^{in}_{i,k}\) of backbone are utilized for feature consistency and the rescaled model predictions \(_{k}\) for prediction consistency.

Figure 2: Effect of early learning (IoU\({}_{el}\), blue curves) and memorization (IoU\({}_{m}\), red curves) for different categories in Cityscapes dataset. The IoU\({}_{el}\) is the IoU between the model output and ground-truth labels. The IoU\({}_{m}\) represents the IoU between the model output and pseudo labels.

To form the final pseudo labels, we average the model outputs corresponding to multiple rescaled copies of inputs. Specifically, let \(m\) be the number of scaling operations. We set \(m=3\) (downscaling \( 0.5\), no scaling, and upscaling \( 2\)) in our experiments. For an input \(x_{t}\) rescaled according to these scaling operations in Figure 3, \(y_{k},1 k m\) denotes the corresponding model predictions and \(_{k}\) is obtained by rescaling \(y_{k}\) as the same size of \(x_{t}\). The corrected pseudo label \(_{t}\) can be obtained by averaging predictions of multiple rescaled \(x_{t}\):

\[_{t}=_{k=1}^{m}_{k}, \]

where only categories satisfying Eq (5) require correction while others remain unchanged.

Once the pseudo labels of all training samples are corrected, the model steps into a new early-learning stage via minimizing a self-training loss \(_{st}\) shown in Eq (7) and waits for the next correction process.

\[_{st}=_{x_{t}_{t}}[-_{t }, f(x_{t})]+_{x_{t}_{t}} [- f(x_{t})], \]

where \(,\) is dot product, and \(f(x_{t})\) denotes the model output. The first term is cross-entropy loss based on image and pseudo-label pair \((x_{t},_{t})\). The second term is predictive entropy that could reduce model uncertainty on target samples during self-training .

Besides, we incorporate a multiscale consistency loss \(_{mc}\) to promote feature consistency and prediction consistency, as shown in Eq (8),

\[_{mc}=_{x_{t}_{t}}[ _{i=1}^{N}_{k=1}^{m}\|_{i,k}^{in}-_{i}^{ in}\|_{2}^{2}]}_{_{fc}}+_{x_{t}_{t}} [-_{k=1}^{m}(_{k} _{t})]}_{_{pc}}, \]

where \(\) and \(\) are balance parameters, and KL denotes the Kullback-Leibler divergence. As shown in Figure 3, \(_{i,k}^{in},1 k m,1 i N\) represents the rescaled features of backbone stages and their average is denoted as \(_{i}^{in}=_{k=1}^{m}_{i,k}^{in}\). The first term is the feature consistency regularization \(_{fc}\), which constrains the visual prompts to preserve the semantics of features and meanwhile eliminate the spatial perturbations so that the prompt adapter could generate scale-robust prompts. Similarly, the rest prediction consistency term \(_{pc}\) could encourage the model to produce predictions that are robust to arbitrary semantic-preserving spatial perturbations. The final objective is defined as the sum of the self-training loss and multiscale consistency loss:

\[=_{st}+_{mc}. \]

More details about the training process are introduced in the appendices.

## 3 Experiment

### Evaluation Setup

**Datasets and Metrics.** We extensively evaluate the proposed approach on two popular synthetic-to-real benchmarks, _i.e._, GTA5 \(\) Cityscapes and SYNTHIA \(\) Cityscapes. GTA5  is a large-scale driving-game dataset containing 24,966 images with 19 classes for pre-training. Synthia dataset  is rendered from a virtual city and contains 9,400 synthetic images with 16 classes for pre-training. The realistic dataset Cityscapes  collects street view scenes from 50 different cities with 19 classes, including 2,975 training images and 500 validation images. Following previous methods [30; 19], the semantic segmentation performance is evaluated by calculating the Mean Intersection-over-Union (mIoU) over 19 categories in GTA5 \(\) Cityscapes, as well as 13 and 16 (with 3 small-scale categories) categories in SYNTHIA \(\) Cityscapes.

**Implementation Details.** Our approach is implemented based on the MMSegmentation framework  and one training task requires one NVIDIA Tesla V100 GPU. We deploy Swin-B  and MiT-B5  as backbones and DAFormer  as decode head. During pre-training in the source domain, the backbone is initialized with weights pre-trained with the ImageNet dataset . We utilize AdamW for optimization. Specifically, the learning rate of Swin-B encoder is set as \(6 10^{-6}\) and \(4 10^{-6}\) for the MiT-B5 encoder, while the learning rates of the segmentation head and prompt adapter are respectively set as ten and five times of backbone. Our Uni-UVPT framework typically needs 40k-80k iterations with a batch size of 1 until convergence. More details could be found in the appendices.

### Comparative Results

**Baselines.** We compare the proposed method with state-of-the-art source-free domain adaptive semantic segmentation methods, namely, SRDA , SFUDA , SFDA , URMA , BDT , and GtA . We directly cite their results from their original papers. All the above methods deploy CNN backbones, not transformer ones. For a fair comparison, we implement GtA with transformer backbones based on official code 2. Besides, we utilize representative self-training with pseudo-label methods for unsupervised DA or source-free UDA, _i.e._, CPSL  and ELR , and visual prompt tuning method, _i.e._, VPT , to construct several competitors. Our baseline methods, CPSL , VPT +ELR , GtA  are implemented transferring the authors' official releases 3 4 to MMSegmentation framework . We employ two different methods for source pre-training, _i.e._, standard single-source and Source-GtA . The former directly utilizes source images and annotations for pre-training. The latter augments source data with five augmentations, and leverages auxiliary heads to learn powerful representations .

**Results Analysis.** We compare the proposed approach and the state-of-the-art SFUDA methods on GTA5 \(\) Cityscapes and SYNTHIA \(\) Cityscapes tasks. As shown in Table 1, the proposed method with small amounts of learnable parameters performs better than comparative methods in two transfer tasks. For example, our method with 28.6M (31.5% of the source pre-trained model) trainable parameters increases mIoU by 8.0% (16 classes) and 9.6 % (13 classes) in SYNTHIA \(\) Cityscapes task. The impressive performance demonstrates that the proposed unsupervised visual prompt tuning method could efficiently and effectively adapt large-scale source pre-trained model to the unlabeled target domain. Besides, we could conclude several interesting conclusions. (1)

    &  &  &  &  &  \\   & & & & mIoU\({}_{19}\)(\%) & mIoU\({}_{16}\)(\%) & mIoU\({}_{13}\)(\%) \\  SFDA  & F & ✗ & - & 35.8 & - & - \\ GtA  & F & ✗ & 134.5 & 45.9 & 41.3 & 48.9 \\  URMA  & D & ✗ & 47.4 & 45.1 & 39.6 & 45.0 \\ SRDA  & D & ✗ & - & 45.8 & - & - \\ SFUDA  & D & ✗ & - & 49.4 & - & 51.9 \\ BDT  & D & ✗ & 43.8 & 52.6 & - & 56.7 \\ GtA  & D & ✗ & 43.8 & 53.4 & 52.0 & 60.1 \\  Standard Single Source & S & ✗ & 90.7 & 50.5 & 44.6 & 49.8 \\ CPSL  & S & ✓ & 3.9 & 51.1 (+0.6) & 46.4 (+1.8) & 52.3 (+2.5) \\ VPT  + ELR  & S & ✓ & 7.0 & 53.5 (+2.0) & 47.7 (+3.1) & 53.2 (+3.4) \\  _Ours_ & S & ✓ & 28.6 & 56.2 (+5.7) & **52.6** (+8.0) & **59.4** (+9.6) \\  Standard Single Source & M & ✗ & 85.2 & 52.5 & 48.6 & 55.0 \\ CPSL  & M & ✓ & 3.7 & 52.5 (+0.0) & 50.5 (+1.9) & 57.2 (+2.1) \\ VPT  + ELR  & M & ✓ & 7.6 & 54.1 (+1.6) & 51.6 (+3.0) & 58.0 (+3.0) \\  _Ours_ & M & ✓ & 12.3 & **54.2** (+1.7) & **52.6** (+4.0) & **59.3** (+4.3) \\   Source-GtA  & S & ✗ & 110.4 & 52.8 & 48.8 & 55.0 \\ CPSL  & S & ✓ & 3.9 & 53.5 (+0.7) & 49.6 (+0.8) & 56.2 (+1.2) \\ VPT  + ELR & S & ✓ & 7.0 & 55.1 (+2.3) & 51.6 (+2.8) & 58.2 (+3.2) \\ GtA  & S & ✓ & 23.6 & 56.1 (+3.3) & 52.5 (+3.7) & 58.7 (+3.7) \\ _Ours_ & S & ✓ & 28.6 & **56.9** (+4.1) & **53.8** (+5.0) & **60.4** (+5.4) \\  Source-GtA  & M & ✗ & 103.7 & 53.0 & 50.0 & 56.2 \\ CPSL  & M & ✓ & 3.7 & 53.2 (+0.2) & 52.2 (+2.2) & 58.7 (+2.5) \\ VPT  + ELR  & M & ✓ & 7.6 & 54.4 (+1.4) & 53.0 (+3.0) & 59.5 (+3.3) \\ GtA  & M & ✓ & 22.3 & 55.2 (+2.2) & 53.6 (+3.6) & 59.7 (+3.5) \\ _Ours_ & M & ✓ & 12.3 & **56.1** (+3.1) & **53.8** (+3.8) & **60.1** (+3.9) \\   

Table 1: Quantitative evaluations on GTA5 \(\) Cityscapes and SYNTHIA \(\) Cityscapes tasks. Different segmentation architectures: F (FCN8s VGG-16), D (DeepLabv2 ResNet-101), S (Swin-B), M (MiT-B5). FB: whether the backbone is frozen. Params (M): number of trainable parameters. **Bold**: the best results based on different source pre-trained models. (+x.x): mIoU gains over the corresponding source pre-trained models where the best are in red. Underline: the state-of-the-art results. The full table with per-class IoUs is available in the appendices.

[MISSING_PAGE_FAIL:8]

and only preserve PI 1 for transforming the image token sequences. The 0.9% performance drop illustrates that it is necessary to perform prompt refinement and feature interaction between adjacent stages of the backbone. (4) Without the proposed prompt adapter, the performance decreases by 1.17%. The performance drop is smaller than other variants because head tuning also benefits feature adaptation. Despite that, it proves that the prompt adapter could capture informative knowledge for reasonable prompt learning and enhancing the generalization of target features.

**Whether is it necessary to perform pseudo-label correction in source-free UDA?** Li et al.  claim that pseudo-label correction strategies perform poorly due to the early-learning phenomenon and even no better than directly supervising the target model with pseudo labels predicted by the frozen source model. We argue that the pseudo-label correction should be conducted at suitable moments before the model memorizes noisy pseudo-labels. As shown in Table 3, compared with ELR , the proposed adaptive pseudo label correction strategy improves mIoU by 0.64%, demonstrating that correcting pseudo-label at suitable moments helps to learn more trustable pre-trained knowledge. As for _Ours + offline_, we first train the model to get the training IoU curve for each category and then correct pseudo labels with our strategy only once. The mIoU of _Ours + offline_ decreases 0.77%, illustrating that pseudo-label correction should be performed adaptively otherwise the noisy pseudo labels are memorized again after several training epochs.

**Effectiveness of multiscale consistency loss.** The multiscale consistency loss performs feature and prediction consistency of rescaled inputs. As shown in Table 4, without feature consistency, the mIoU drops dramatically as visual prompts can not guarantee that features of different scales of one image are similar. In other words, the feature consistency enhances the robustness of visual prompts to spatial perturbations. Similarly, prediction consistency benefits generating scale-robust predictions. The overall consistency loss increases mIoU by 2.43%.

### Further Remark

**Comparative Results of Different Augmentations.** To analyze the influences of other augmented samples, we replace scale augmentation with weather augmentation, e.g., snow and frost. That is, we replace downscale/original/upscale images with snow/original/frost images for unsupervised visual prompt tuning. We summarize the performance of Ours and Ours-weather in Table 5. Ours refers to our approach trained with scale-augmented samples. Ours-weather is our approach trained with weather-augmented samples. Compared with Ours, Ours-weather improves mIoU approximately -1.5% to -0.1% in GTA \(\) Cityscapes task and -0.1 % to +1.6% in SYNTHIA \(\) Cityscapes task. The experimental results illustrate that other augmented samples also work well for unsupervised visual prompt tuning and the SOTA results in SYNTHIA \(\)Cityscapes tasks are updated by weather augmentation.

**Visualization Results of Adaptive Pseudo-Label Correction Strategy.** To emphasize the effectiveness of the proposed adaptive pseudo-label correction strategy, we draw the IoU\({}_{el}\) and IoU\({}_{m}\) curves for each category as shown in Figure 5. We observe that the IoU\({}_{el}\) curves of all categories increase until the model converges and the phenomenon of IoU\({}_{el}\) decreasing due to the noise memorization are disappeared. The above interesting observations demonstrate that the proposed adaptive pseudo-label

    &  &  &  &  &  \\   & & & & mIoU\({}_{19}\)(\%) & & mIoU\({}_{16}\)(\%) \\  Ours & S & & 28.6 & 56.2 (+5.7) & 52.6 (+8.0) \\ Ours-weather & S & & 28.6 & 54.7 (+4.2) & 52.9 (+8.3) \\  Ours & M & & 12.3 & 54.2 (+1.7) & 52.6 (+4.0) \\ Ours-weather & M & & 12.3 & 54.1 (+1.6) & 53.0 (+4.4) \\  Ours & S & & 28.6 & 56.9 (+4.1) & 53.8 (+5.0) \\ Ours-weather & S & & 28.6 & 54.1 (+1.6) & 53.0 (+4.4) \\  Ours & M & & 12.3 & 56.1 (+3.1) & 53.8 (+3.8) \\ Ours-weather & M & & 12.3 & 55.2 (+2.2) & 54.5 (+4.5) \\   

Table 5: Comparative results of different augmentations on GTA5 \(\) Cityscapes and SYNTHIA \(\) Cityscapes tasks. Different segmentation architectures: S (Swin-B), M (MiT-B5). FB: whether the backbone is frozen. Params (M): number of trainable parameters. (+x.x): mIoU gains over the corresponding source pre-trained models.

correction strategy could effectively alleviate the negative effect caused by pseudo-label noises. It also proves that pseudo-label correction works in source-free unsupervised domain adaptation when it is performed at suitable moments.

## 4 Related work

**Source-Free Unsupervised Domain Adaptation for Semantic Segmentation.** Source-free unsupervised domain adaptation has attracted much attention when source data is not available during model adaptation. Most SFUDA methods [21; 23; 26] are proposed for classification task, which is suboptimal for cross-domain semantic segmentation. Only a few methods [30; 19; 20; 46] focus on source-free domain adaptive semantic segmentation. For example, SFDA  not only recovers and preserves the source domain knowledge via knowledge transfer, but also distills valuable information from the target domain for self-supervised learning. Kundu et al.  design a multi-head framework to extract reliable target pseudo labels for self-training. Kundu et al.  further introduce an intermediate mixup domain between the original and the realizable generic domain, which could enhance the trade-off between discriminability and transferability. Ye et al.  improve the target domain performance by reconstructing the source domain data and performing distribution-aware adversarial learning and self-training. However, current source-free methods adopt fine-tuning for model adaptation, which is inefficient for large-scale transformer-based architectures.

**Visual Prompt Tuning.** Recently, visual prompt tuning has been introduced into the vision area [3; 32; 40] to generalize the large-scale pre-trained model to downstream tasks. Previous methods design visual prompts from the view of token-level, pixel-level and module-level. Token-level prompt tuning methods [18; 15; 33; 40] govern learnable visual tokens to the embedding layer or several encoder layers. Pixel-level prompt tuning methods [4; 6; 36] introduce learnable pixel perturbations on the original images. However, token-level or pixel-level prompts are black boxes, which cannot capture convincing knowledge beneficial for downstream tasks. Module-level prompt tuning methods [49; 48; 7] design auxiliary layers or blocks for the pre-trained model. Despite learning rich knowledge, they are specifically designed for the pre-trained model by modifying its basic units, which can not be applied to various architectures. As far as we know, only  has applied visual prompts for online unlabeled adaption in image classification, and none of the work has explored unsupervised visual prompt tuning for source-free domain adaptive semantic segmentation.

## 5 Conclusion and Discussion

In this paper, we propose a universal unsupervised visual prompt tuning (Uni-UVPT) framework, which adapts a large-scale pre-trained source model for source-free domain adaptive semantic segmentation. A novel prompt adapter is proposed to progressively encode informative knowledge into prompts and enable target features to match the pre-trained model. Cooperatively, an adaptive pseudo-label correction strategy with a multiscale consistency loss is proposed to correct pseudo-label at suitable moments and enhance visual prompts' spatial robustness. Extensive experiments prove that our approach could effectively and efficiently perform large-model unsupervised knowledge transfer. Our approach also has its limitations, for example, further reducing the trainable parameters by delicately designing prompt modules and exploring more powerful learning constraints for visual prompts, _e.g_., pixel-wise contrastive loss. We hope this paper could inspire researchers to further investigate unsupervised visual prompt tuning for other vision applications.

Figure 5: Analysis on early learning (IoU\({}_{el}\), blue curves) and memorization (IoU\({}_{m}\), red curves) with our proposed adaptive pseudo-label correction strategy for different categories in Cityscapes dataset. The LCM (Label Correction Moment) denotes the moment when the algorithm performs pseudo-label correction.