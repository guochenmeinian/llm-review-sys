# Towards Understanding Evolving Patterns in Sequential Data

Qiuhao Zeng

Western University

qzeng53@uwo.ca

&Long-Kai Huang

Tencent AI Lab

hlongkai@gmail.com

&Qi Chen

Laval University

qi.chen.1@ulaval.ca

&Charles Ling

Western University

charles.ling@uwo.ca

&Boyu Wang

Western University

bwang@csd.uwo.ca

Corresponding authors: Boyu Wang, Charles X. Ling.

###### Abstract

In many machine learning tasks, data is inherently sequential. Most existing algorithms learn from sequential data in an auto-regressive manner, which predicts the next unseen data point based on the observed sequence, implicitly assuming the presence of an _evolving pattern_ embedded in the data that can be leveraged. However, identifying and assessing evolving patterns in learning tasks heavily relies on human expertise, and lacks a standardized quantitative measure. In this paper, we show that such a measure enables us to determine the suitability of employing sequential models, measure the temporal order of time series data, and conduct feature/data selections, which can be beneficial to a variety of learning tasks: time-series forecastings, classification tasks with temporal distribution shift, video predictions, etc. Specifically, we introduce the Evolving Rate (EvoRate), which quantifies the evolving patterns in the data by approximating mutual information between the next data point and the observed sequence. To address cases where the correspondence between data points at different timestamps is absent, we develop EvoRate\({}_{}\), a simple and efficient implementation that leverages optimal transport to construct the correspondence and estimate the first-order EvoRate. Experiments on synthetic and real-world datasets including images and tabular data validate the efficacy of our EvoRate method.

## 1 Introduction

Sequential data is ubiquitous across various machine learning tasks, including multivariate time series , video streams in computer vision , textual data in natural language processing , and state-action trajectories in reinforcement learning . Learning with sequential data usually involves predicting future data points, fostering the development of auto-regressive techniques that learn to forecast the subsequent unseen entries in a sequence. Despite the progress in this field, one fundamental challenge persists: the identification of underlying evolving patterns often depends heavily on the subjective interpretations and prior knowledge of human experts. This reliance on subjective judgment lacks a robust quantitative method to assess the evolving patterns over the high-dimensional data in deep learning. For example, when designing a recommendation system, certain products such as clothing are highly dependent on temporal factors (e.g., seasons, fashion trends), while others, like computers, are more influenced by individual customer preferences. Therefore, it is critical to identify and quantify the underlying evolving patterns for different products and integrate this information into the algorithmic design.

Specifically, the following questions are essential but unresolved yet in literature: i) **How can the existence of evolving patterns in data sequences be determined?** Determining the existence of evolving patterns in data is a critical task. It is possible that the data points of a sequence are entirely independent and no evolving patterns exist. For instance, consider the scenario of a person repeatedly tossing a coin. In this case, historical information does not influence the outcome of the next toss. ii) **Can one determine the historical span that significantly influences the current time point?** For example, how do we determine the order (the optimal number of past observations) of an autoregressive model in a principled way? iii) **How can we determine if the collected features are sufficient to reveal evolving patterns?** For instance, to achieve better weather forecasting, how can one determine the essential features, such as altitude, humidity, and geographic location, for gathering a comprehensive set of information for forecasting?

In this work, we address these questions through a unified framework by introducing EvoRate (Evolving Rate), a novel approach designed to quantify the evolving patterns of data sequences. EvoRate leverages mutual information as a measure of the existence of the evolving patterns in the data. Notably, while there is a rich history of mutual information estimation in the existing literature [8; 1; 27; 10; 29], existing works ignore the underlying temporal dependency between the data points, and therefore are not well-designed for sequential data. EvoRate tackles this issue by estimating mutual information in an autoregressive manner when learning the compressed embedding from the observed sequence, thereby addressing the aforementioned questions: i) it can serve as an indicator to show that learning a sequential model is not feasible to learn the provided sequential dataset. ii) EvoRate can provide a quantitative measure of the temporal dependency of a sequence, allowing us to control the trade-off between computational complexity and learning performance. iii) EvoRate can also guide us in selecting the most informative features for model training for sequential data.

However, EvoRate is difficult to estimate when dealing with temporal data characterized by snapshots captured at disparate timestamps without clear correspondence between them [30; 48; 42], as we do not track the same data point over different timestamps and thus lack access to its corresponding sample. This scenario hinders the estimation of EvoRate, due to the absence of the correspondence. To mitigate this issue, we propose an enhanced version of our methodology, EvoRate\({}_{}\), which is specifically designed to establish correspondence among data points across different timestamps utilizing optimal transport within the Wasserstein distance metric, thereby facilitating the estimation of the first-order EvoRate. In all, the benefits of EvoRate to be highlighted include:

* EvoRate enables quantitatively measuring the evolving patterns existing in high-dimensional sequential data by utilizing the neural mutual information estimator. Furthermore, it can be applied to assess temporal order and conduct feature selections in sequential data.
* We further proposed EvoRate\({}_{}\) to leverage optimal transport to build the correspondence between snapshots at the different timestamps, and hence allow the MI approximations.
* We motivate through analysis the use of mutual information as indicators of evolving patterns and show optimal transport can mitigate the without correspondence issue.
* Synthetic and real-world datasets verify that EvoRate can be a good indicator for evolving patterns, supporting our claim of its benefits. We also design an EDG algorithm based on the insight of EvoRate\({}_{}\) and verify its performance. The codes are available on GitHub: [https://github.com/HardworkingPearl/EvoRate](https://github.com/HardworkingPearl/EvoRate).

## 2 Related Works

**Sequential Data** The analysis and processing of sequential data is driven by diverse applications ranging from video predictions to time series forecasting [25; 50; 9; 16; 33]. Pioneering works such as Long Short-Term Memory (LSTM)  networks have established foundational principles for handling long-range dependencies in sequence data. Building on this, the Transformer  introduced a revolutionary approach through self-attention mechanisms, enhancing flexibility in handling sequence dependencies. The versatility of Transformers has been further demonstrated in models such as GPT-3  and BERT . Beyond text, sequential data analysis in machine learning also extends to time-series forecasting . Moreover, the application of Graph Neural Networks in capturing dependencies in irregular sequences underscores the breadth of methodologies exploring the complexities of sequential data . However, a qualitative method for measuring the intensity of evolving patterns remains lacking in the literature.

**Mutual Information (MI) Estimation** has become a pivotal tool in machine learning [39; 8; 1; 27; 10; 29], enabling insights into dependencies that extend beyond traditional correlation measures. In feature selection, MI offers a data-driven approach to identify relevant features without strong assumptions about data distributions . Mutual Information Neural Estimation (MINE)  applies deep learning to estimate MI in high-dimensional settings, providing a new methodology for analyzing neural network training dynamics. MI's application in variational inference, especially in the training of variational autoencoders (VAEs) . In reinforcement learning, MI has been used to enhance exploration strategies by quantifying information gain . MI also improves the performance of generative adversarial networks (GANs) . Furthermore, in unsupervised and semi-supervised learning, MI maximization has been shown to effectively leverage unlabeled data . However, none of them employ MI as an indicator for evolving patterns of sequential data.

**Optimal Transport (OT)** has emerged as a powerful framework in machine learning [51; 3; 31; 13; 41], offering a principled approach to compare probability distributions. Optimal transport theory has been leveraged for applications ranging from domain adaptation to generative modeling . Recent advances include the integration of OT with deep learning architectures; Wasserstein GAN (WGAN) utilizes the Wasserstein distance to improve the stability of training GANs . Furthermore, optimal transport has been applied effectively in NLP . The computational aspect of OT has also seen significant developments, Sinkhorn  as a scalable method approximates transport plans efficiently. More recently, researchers have explored the differential properties of transport plans in dynamic environments . EvoRate employs OT to recover the correspondence between two consecutive timestamps, facilitating approximations of mutual information.

**Patterns estimation for sequential data** has only one related work in the literature ForeCA , which proposes a similar concept, "forecastibility", which measures the uncertainty of the entropy of the spectral density. However, ForeCA has two drawbacks. Firstly, ForeCA can not be used in deep learning as an unacceptable huge computational consumption for real-world high-dimensional data (audio, videos, etc.). In contrast, EvoRate shows the prediction power by relying on mutual information, which tells the ability to predict another variable based on known observed variables. Secondly, while temporal patterns can include trends, cycles, irregular fluctuations, and more complex behaviors, ForeCA can only detect cycled patterns. Instead, EvoRate relies on the neural mutual information estimator, which is known as a good measurement for various patterns as a result of the strong fitting power of neural nets [8; 11; 37; 46].

## 3 Preliminary

### Variational mutual information estimation

The mutual information between two random variables \(X\) and \(Y\) is defined as the KL divergence \(D_{}\) between their joint distribution and the product of their marginal distributions:

\[I(X;Y)=D_{}(P(X,Y)||P(X)P(Y)), \]

where we aim to estimate this using samples from \(P(X,Y)\); in some cases, the density of the marginals such as \(P(X)\) may be known. A wide range of variational methods are designed to estimate variational mutual information [8; 11; 46; 36; 37]. We then use the below estimator to estimate mutual information:

\[(X;Y):=_{(X,Y)}[m(x,y)]-_{(X) {P}(Y)}[e^{m(x,y)}], \]

where \(X\) is the random variable, \(x\) is a realization of \(X\) (as is the case with \(Y\) and \(y\)), \(\) is the empirical distribution associated with a dataset of i.i.d. samples, and \(m(x,y)\) is a critic function to quantify the similarity between \(X\) and \(Y\), usually realized by a neural network [8; 11; 46; 36; 37]. We show that MI is highly related to the evolving patterns of the sequential data in Section 4.2.

### Optimal transport

A rich class of divergences between probability distributions is induced by the optimal transport (OT) problem . Kantorovich's formulation of the problem is given by

\[W_{c}(P(X),P(Y))=_{(P(X),P(Y))}_{(X,Y)}[c(X,Y)], \]

where \(c(x,y):_{+}\) is any measurable cost function and \((P(X),P(Y))\) is the set of all the joint distributions \((X,Y)\) whose marginals are \(P(X)\) and \(P(Y)\) respectively. The Wasserstein distance \(W_{c}\) is then the "cost" of the optimal transport plan.

## 4 Measure evolving patterns via MI

### EvoRate

Consider a sequence \(_{1}^{T}:\{z_{t}\}_{t=1}^{T}\), a collection of sequential data points from time \(1\) to \(T\), where each \(z_{t}^{D}\) denotes a state or observation at the discrete time step \(t\) with total \(T\) steps. In practice, the sequence \(_{1}^{T}\) can represent time series data, video, textual, audio, or any other ordered data stream.

We propose the use of the mutual information (MI) between the next observation and historical data over the past \(k\) steps \(I(_{t-k+1}^{t};Z_{t+1})\) to measure the evolving pattern within a time window of length \(k\). In the literature, the mutual information is empirically estimated through equation 2, which involves learning the critic function \(m\)[8; 11; 46; 36; 37]. However, one critical issue with existing works is that they ignore the temporal dependency of the data, and therefore the critic function \(m\) can have a high bias for sequential data (shown in Figure 0(a), 0(b)).

To take the temporal dependency into account when estimating \(I(_{t-k+1}^{t};Z_{t+1})\), instead of learning the critic function \(m\), we propose learning the autoregressive function \(f\), which summarizes the historical information embedded in \(Z_{t-k+1}^{t}\), and measuring its distance to \(Z_{t+1}\) via the squared error metric. Specifically, we introduce **EvoRate** to estimate the empirical sequential MI \((_{t-k+1}^{t};Z_{t+1})\) by defining \(m:^{k D}^{D}\), \(m(x_{1}^{k},y)=-\|f(g(x_{1}),..,g(x_{k}))-g(y)\|_{2}^{2}\) in equation 2:

\[:=(_{t-k+1}^{t};Z_{t+1})=sup_{f,g} _{t-k+1}^{t+1}(_{t-k+1},...,Z_{t+1})-||f(g(z_{t -k+1}),,g(z_{t}))-g(z_{t+1})||_{2}^{2}\] \[-_{t_{t-k+1}^{t}(Z_{t-k+1},...,Z_{t}),z_ {t+1}(Z_{t+1})}e^{-||f(g(z_{t-k+1}),...,g(z_{t}))-g(z_{t+1})||_{2}^ {2}}, \]

where \(g:^{D}^{d}\) is an encoder. By selecting a different \(d\), we can make a trade-off between computational cost and MI estimation accuracy. With \(d D\), EvoRate is a more computationally efficient method for approximating sequential MI than learning an autoregressive model in the original data space. However, due to the Data-processing inequality , this results in lower MI estimates. As \(g\) is employed as an identity function, MI is estimated in the original space, thereby enhancing estimation correctness at the expense of increased computational consumption.

### Discussion

In this section, we justify the validity of EvoRate as a metric of evolving patterns through the lens of a \(k\)-th order autoregression. Specifically, we define the Maximum likelihood estimation (MLE) loss as \(_{mle}=-_{P(Z_{t+1},_{t-k+1}^{t})} Q(Z_{t+1 }|_{t-k+1}^{t})\), where \(Q\) is the probability distribution learned by the autoregressive model \(F\) trained with a supervised loss (MLE, MSE) on sequential data. Note that the MLE loss can also be viewed as the expected risk of autoregressive prediction tasks .

The following proposition establishes the connection between the expected risk of a \(k\)-th order autoregression task and the mutual information \(I(_{t-k+1}^{t};Z_{t+1})\):

**Proposition 1**.: _Let \(H\) denote the entropy. For autoregression tasks, the expected MLE loss satisfy:_

\[_{mle}=}(P(Z_{t+1}|_{t-k+1}^{t }),Q(Z_{t+1}|_{t-k+1}^{t}))}_{}+)-I(Z_{t+1}; _{t-k+1}^{t})}_{} \]

A proof of the proposition is provided in Appendix A. Proposition 1 provides novel insights into learning a predictive model for an autoregression task from an information-theoretic perspective:1. The expected risk can be decomposed into two orthogonal factors, where (i) measures the distance between the learned distribution \(Q\) and true distribution \(P\), and therefore is determined by the predictive model \(F\). (ii) quantifies the inherent temporal dependency of the sequence. Notably, it is independent of \(F\).
2. More importantly, when \(Z\) is a discrete variable, due to the nature of mutual information, \(I(Z_{t+1};_{t-k+1}^{t}) H(Z_{t+1})\) and (i) attains a minimum of zero when the observed sequence \(_{t-k+1}^{t}\) encapsulates all the information of \(Z_{t+1}\). Conversely, Proposition 1 reveals that even if \(F\) can properly learn the true probability \(P\) (i.e., (i) is small), its expected risk remains high when there is no temporal dependency that can be leveraged (i.e., \(I\) is small).

Consequently, EvoRate, as an empirical estimate of \(I(Z_{t+1};_{t-k+1}^{t})\), can play an important role in indicating the success of learning from sequential data and therefore is adopted to quantify the evolving pattern in this work.

Subsequently, we demonstrate that MSE loss defined as \(_{mse}=_{P(Z_{t+1},_{t-k+1}^{t})}||F( _{t-k+1}^{t})-z_{t+1}||_{2}^{2}\) can be interpreted as a variant of MLE loss, hence MI can be applied to a wide range of sequential data tasks that utilize MSE loss.

**Proposition 2**.: _Assume that the predicted conditional probability density \(Q\) learned by the prediction model follows \(Q(Z_{t+1}|_{t-k+1}^{t})=(Z_{t+1}|F(_{t-k+1}^{t} ),I_{D})\), where \(()\) denotes a Gaussian distribution with mean \(F(_{t-k+1}^{t})\) and identity covariance matrix \(I_{D}\). Then, the following holds_

\[_{mle}=_{mse}+const, \]

_where \(_{mse}\) is the MSE loss and \(const\) is a constant term._

## 5 Measure evolving patterns without correspondences

### Estimate joint distribution

In many real-world applications, instead of processing many data point observations at different timestamps as data sequences, one needs to handle a data set at each timestamp: \(\{z_{t,i}\}_{i=1}^{n_{t}}\) collected from multiple timestamps \(t=\{1,,T\}\)[48; 42], where \(i\) is the sample index and \(n_{t}\) is the number of samples collected at timestamp \(t\). The distribution \(P(Z_{t})\) associated with these data sets evolves over time \(t\). For example, consider a supervised learning problem involving medical data \(z_{t,i}=(x_{t,i},y_{t,i})\) collected from multiple patients at different ages [42; 6]. In this scenario, we do not track the same patient across different ages, resulting in a lack of correspondence between timestamps and our objective extends to characterizing the evolving patterns of \(\{Z_{t}\}_{t=1}^{T}\) across these discrete timestamps. However, EvoRate proposed in subsection 4.1 cannot be applied to this context due to the absence of the correspondences.

Estimating the mutual information from two data sets requires the pairwise correspondences between the sample of two data sets, which are assumed as given in existing works [8; 1; 27; 10; 29]. The correspondence between \(Z_{t}\) and \(Z_{t+1}\) reflects their joint distribution as it encapsulates how the values of \(Z_{t}\) and \(Z_{t+1}\) co-occur. This structured relationship indicates the interdependence of \(Z_{t}\) and \(Z_{t+1}\), which the joint distribution quantifies. Since the absence of the correspondence (i.e., an object observed at time \(t\) is not at time \(t+1\)), we can not access the joint probability distribution of the past states and the next state. To tackle this issue, we estimate the joint distribution through the optimal transport plan of the Wasserstein Distance. Specifically, we define the distance loss according to a joint distribution measurement \(\)

\[_{}^{t}(,f)=_{(z_{t},z_{t+1})}||f(g( z_{t}))-g(z_{t+1})||_{2}^{2} \]

where \(g\) is fixed from updated gradients computed from \(_{}^{t}\). Empirically, allowing \(g\) to update during model training leads to the undesirable outcome of all representations collapsing into a single point as a result of minimizing the Wasserstein distance loss. To avoid this and preserve maximal information within the representations, \(g\) is trained separately using an auto-encoder architecture with a reconstruction MSE loss.

Then, we compute the optimal transport plan \(^{*}\) to approximate the real joint distribution

\[^{*}(Z_{t},Z_{t+1})=*{arg\,min}_{(P(Z_{t}),\,P(Z_{t+ 1}))}_{}^{t}(,f), t\{1,,T-1\}, \]

and \(f\) is updated in an alternating optimization manner with fixed \(^{*}\) to minimize \(_{}^{t}(^{*},f)\). In practice, the following implementation is used: \(^{*}:=*{arg\,min}_{(P(Z_{t}),(Z_{t+1})) },_{F}\), where \(\) is 

[MISSING_PAGE_FAIL:6]

\(\{1,,T-1\}\). Given the correlation coefficient \(\) and dimensionality \(D=128\), we can compute the ground truth MI as \(EvoRate(_{1}^{T-1};Z_{T})=-(D/2)(1-^{2})\). The optimal MI estimation can be achieved when sequential model \(f\) equals the ground truth model \(f^{*}=Avg\), where \(Avg()\) is an average operation. In Figure 0(a) and 0(b), we increase \(\) over training steps to show the estimator behavior depends on the true mutual information. Additionally, we experiment with two forms of architecture: separable and joint. Separable architectures independently map the representations of history states \(f(_{1}^{T-1})\) and the future state \(Z_{T}\) to an embedding space with neural nets \(_{1}\) and \(_{2}\) separably, and then take the inner product, i.e. \(_{1}(f(_{1}^{T-1}))^{T}_{2}(Z_{T})\) as in . Joint critics concatenate each \(f(_{1}^{T-1})\), \(Z_{T}\) pair before feeding it into the network, i.e. \(([f(_{1}^{T-1});Z_{T}])\) as in . In this experiment, \(g\) is set to an identity function, and the sequential model \(f\) is set to an LSTM . All networks are fully-connected networks with ReLU activations. Figure 0(a) shows the estimated mutual information by EvoRate over the number of iterations, and square error metric can let \(f\) converge to \(f^{*}\) such that the EvoRate\({}_{}\) converges to ground truth mutual information. Figure 0(b) verifies that the square error metric has a lower bias compared to trainable concat critic and separable critic.

**Sequential data without known correspondence** We sample data sequence \(\{z_{t}\}_{t=1}^{T},t\{1,,T-1\}\), \(z_{t+1}=(A^{*}z_{t}+b^{*})+}\), where \(A^{*}^{D D}\) is a rotation matrix, \(b^{*}^{D}\) is a translation vector, correlation of \([-1,1]\), \((0,I)\), and \(Z_{1}(0,I)\). Given the correlation coefficient \(\) and dimensionality \(D=128\), we can compute the ground truth MI value \(EvoRate(Z_{t};Z_{t+1})=-(D/2)(1-^{2})\). The optimal MI estimation can be achieved when sequential model \(f\) equals the ground truth model \(f^{*}=A^{*}z_{t}+b^{*}\). In this experiment, it is actually very difficult to estimate mutual information without correspondence. As a result, the estimations by joint and separable critic do not converge and fail in the case without correspondence, which further shows the square error metric shows better performance than the trainable neural nets critic. In Figure 0(c),0(d), \(g\) being an identity function estimates a higher value than \(g\) being a neural-nets encoder. It is noted that EvoRate\({}_{}\) is the only method able to estimate the mutual information without the correspondence between timestamps, achieving a reasonable performance to estimate MI.

### Sequential data's order approximation and feature selection

**Order Approximation** We sample data with \(5\)-order (\(k=5\)), and dimensionality \(D=5\), which means \(Z_{t+1}\) is determined by \(_{t-4}^{t}\). More specifically, the data is generated by the dynamic function \(Z_{t+1}=A^{*}(Z_{t-4}^{t})+b^{*}\), where in this experiment, \(()\) is a vectorized operation, \(A^{*}^{5 25}\) and \(b^{*}^{5}\). We vary \(k\{1,3,5,12,24\}\) to measure the EvoRate between \(_{t-k+1}^{t}\) and \(Z_{t+1}\). Figure 1(a) shows that \(k=5\) has the maximal EvoRate value. In another experiment, the time series forecasting task is used to verify the effectiveness of EvoRate. Time series forecasting performance is evaluated with the sMAPE metric , measured as the mean absolute error scaled by the magnitude of the predictions and target. The performance shown in Table 1 is the SOTA method  and they set the model with order \(k=45\). The order is set as \(k\{10,25,45,90,180,270\}\). Although \(k=270\) achieves the highest EvoRate, the difference between \(k=270\) and \(k=90\) is only \(0.03\), and the performances over average (AVG) sMAPE have the same prediction error. For M4-Weekly,

Figure 1: (a-b) Performance of (a) EvoRate / (b) concat and separate critic on mutual information estimation on sequential data with correspondence. (c-d) Performance of EvoRate\({}_{}\) on mutual information estimation on two consecutive time steps without correspondence, where \(g\) is (c) an identity function / (d) neural nets.

EvoRate shows order set as \(k=90\) can achieve a good performance. Although EvoRate is slightly higher for \(k=270\) than \(k=90\), it sacrifices three times more computation consumptions compared to only a \(+0.03\) EvoRate gain if the model time complexity is \((k)\). Forecastability (ForeCA) fails in this experiment, as shown in Table 1, since the longer time series shows smaller forecastability but it achieves smaller sMAPE and a better performance. Longer sequence can have more evolving patterns in different frequencies combined and result in a smaller forecastability, but it may be more easily predictable once the patterns are learned by the model. Therefore, we conclude that the entropy used by ForeCA is not a good indicator of the capability of predictions while MI used by EvoRate is. In addition, randomness is a critical factor for the capability of the predictions of the sequential data. Since one of the evolving patterns is learned by sequential models, the performance only relies on the randomness of the data, which can be regarded as unwanted noises or unobserved factors.

**Feature Selections** For autoregressive tasks, poor predictions may due to the lack of the features. Some features may be redundant and some may be unrelated to predictions. Others may be related to the task but are not put as input fed into the prediction model. The synthetic data has 5 dimensions, where the first 3 are useful, the fourth is redundant and the fifth is unrelated (Details in Appendix B.4). Figure 1(b) shows the EvoRate of the data sequence with the first \(n\) features. The results show that i) EvoRate achieves the highest value with the first three features, ii) the first four features containing one redundant feature sees a minor performance drop, and iii) using all five features sees a larger drop.

### EvoRate as a criterion for existence of evolving patterns

In some problems, data is sampled independently from the history observations [49; 2]. In this case, we suggest directly learning a model using ERM  for i.i.d (independent and identically distributed) or IRM  for data sampled independently but with distribution shifts. In many machine learning applications, data is predicted in an autoregressive manner by training sequential models [50; 9; 16; 33]. Whether to use ERM/IRM or sequential models directly depends on the existence of the evolving patterns. Therefore, we take EvoRate as the criterion for the existence of evolving patterns.

**Multivariate time series** In Table 2, EvoRate can achieve better estimates of the evolving patterns compared to ForeCA, where stronger evolving patterns indicate smaller regression errors using

   Order:K & Short & Medium & Long & Avg & EvoRate & ForeCA \\ 
10 & 8.28 & 10.13 & 11.44 & 10.06 & 1.98 & 0.50 \\
25 & 5.78 & 9.82 & 10.85 & 8.97 & 2.07 & 0.39 \\
45 & 5.69 & 8.80 & 8.52 & 7.74 & 2.11 & 0.33 \\
90 & 5.48 & 5.92 & 7.22 & 6.28 & 2.55 & 0.27 \\
180 & 5.40 & 6.41 & 7.39 & 6.47 & 2.56 & 0.22 \\
270 & 5.47 & 6.39 & 6.84 & 6.28 & 2.58 & 0.19 \\   

Table 1: **Time series forecasting (TSF) tasks: M4-Weekly** The values of EvoRate and time series forecasting performance below are experiments on dataset M4-Weekly. Here, short, medium, long, Avg stands for short-horizon sMAPE, medium-horizon sMAPE, long-horizon sMAPE, and the whole average sMAPE.

Figure 2: (a) \(k\)-order EvoRate estimation. (b) EvoRate estimation on a different number of features. (c) EvoRate estimation of the video prediction tasks with a different corruption rate.

sequential models. Specifically, for M4-Monthly and M4-daily, ForeCA shows equal values but EvoRate shows higher values for M4-Daily, consistent with experimental results in which M4-Daily achieves lower sMAPE.

**Evolving Domain Generalization (EDG)** follows our setting in Section 5.1, where the correspondence is intractable and we aim to learn the evolving patterns to predict \(y_{t,i}\) conditioned on input \(x_{t,i}\) for every sample \(z_{t,i}=\{x_{t,i},y_{t,i}\}\). In Table 3, we show the performance of EvoRate\({}_{}\) and SOTA performance for invariant learning  and evolving learning . Although, performance of the evolving representation learning not only depends on the existence of the evolving patterns (shown by values of EvoRate\({}_{}\)), EvoRate\({}_{}\) is still a critical factor in deciding whether to use sequential models. For example, Portraits hahs the lowest EvoRate\({}_{}\)\(0.25\) and show the smallest improvement \(3.7\%\) of the performance of evolving learning than invariant learning, and RGaussian has the highest EvoRate\({}_{}\)\(1.58\) and show the largest improvement of the performance as \(50.2\%\).

### Control randomness to corrupt evolving patterns

**Video prediction** aims to predict future video frames from the current ones. In this experiment, we evaluate EvoRate on the KITTI dataset , which contains 28 driving videos with a resolution of 375\(\)1242. 24 videos in KITTI dataset are used for training. We verify the performance of EvoRate by shuffling the index of the sequential data with a certain corrupt probability, and this randomness will decrease the evolving patterns (Figure 3).

Figure 1(c) shows that by increasing the corruption rate to the video sequence, EvoRate exhibits a lower value. This is consistent with our intuition, which is that the continuous video stream shows higher patterns compared to the disordered video clips.

### Algorithms to improve performance on EDG tasks

From the intuition that \(}\) can estimate the joint distribution, we apply this loss to learn a transition model based on the estimated joint distribution between two consecutive domains. Table 5 shows this is an efficient method and achieves improved performance on EDG tasks. Our method shows an 11.7% higher average accuracy than the second-best baselines.

    & CRypto & Player Traj. & M4- monthly & M4- weekly & M4- daily \\  RMSE/sMAPE & 6.91 \(\) 0.01 & 1.16 \(\) 0.01 & 11.93 & 7.25 & 2.99 \\ ForeCA & 0.35 & 0.49 & 0.44 & 0.43 & 0.44 \\ EvoRate & 2.80 & 4.67 & 1.58 & 2.25 & 2.26 \\   

Table 2: **Time series forecasting (TSF) tasks:** The estimated mutual information for the sequential data for different datasets. RMSE (Crypto, Player Traj.)/sMAPE (M4-Monthly, M4-Weekly, M4-Daily) is the performance of one SOTA TSF method .

Figure 3: Illustration of corrupting the video’s evolving patterns by randomly swapping the frame.

    & RGaussian & Circle & Sine & RMNIST & Portraits & Caltran & PowerSupply \\  Invariant (Acc:\%) & 47.5 & 51.3 & 63.2 & 39.0 & 85.4 & 64.1 & 70.8 \\ Evolving (Acc:\%) & 97.7 & 73.8 & 71.4 & 46.4 & 89.1 & 70.6 & 75.7 \\ Acc\({}_{}\) - ACC\({}_{}\) (\%) & 50.2 & 22.5 & 8.2 & 7.4 & 3.7 & 6.5 & 4.9 \\ EvoRate\({}_{}\) & 1.58 & 0.58 & 0.54 & 0.95 & 0.25 & 0.28 & 0.46 \\   

Table 3: The estimated mutual information for the evolving domains for different datasets. The reported results are the average accuracy of the multiple target domains.

## 7 Conclusion

In this work, we propose EvoRate to qualitatively estimate the evolving patterns for the data sequences and the data snapshots from multiple consecutive timestamps without correspondences. We show the square error metric can be both a better critic for mutual information estimation, and a well-designed loss to help the optimal transport plan converge to the real joint distribution and the sequential model converge to the latent dynamic governing function. EvoRate reflects the complex patterns for high-dimensional data and is more computationally efficient than directly evaluating the performance of sequential data predictions. Experiments show EvoRate is an effective measure for evolving patterns and has the potential for many applications in the machine learning area.

  
**Algorithm** & Mixup & IRM & CORAL & DIVA & LSSEA & DRAIN & Our method \\  RMNIST & 44.9 & 39.0 & 44.5 & 42.7 & 46.4 & 43.8 & **48.5** \\ RGaussian & 55.4 & 47.5 & 53.0 & 56.6 & 48.7 & 61.0 & **91.2** \\ PowerSupply & 70.8 & 70.8 & 71.0 & 70.8 & 71.1 & 71.0 & **71.3** \\ Avg & 57.0 & 52.4 & 56.2 & 56.7 & 55.4 & 58.6 & **70.3** \\   

Table 4: The comparison of the classification accuracy (%) between our and baseline methods across the synthetic and real-world datasets. The reported results are the average accuracy of the multiple target domains.