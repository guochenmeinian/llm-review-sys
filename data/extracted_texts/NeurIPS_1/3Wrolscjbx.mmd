# Learning via Wasserstein-Based High Probability Generalisation Bounds

Paul Viallard

Inria, CNRS, Ecole Normale Superieure, PSL Research University, Paris, France

paul.viallard@inria.fr

&Maxime Haddouche

Inria, University College London and

Universite de Lille, France

maxime.haddouche@inria.fr

&Umut Simsekli

Inria, CNRS, Ecole Normale Superieure

PSL Research University, Paris, France

umut.simsekli@inria.fr

The authors contributed equally to this work

Benjamin Guedj

Inria and University College London, France and UK

benjamin.guedj@inria.fr

###### Abstract

Minimising upper bounds on the population risk or the generalisation gap has been widely used in structural risk minimisation (SRM) - this is in particular at the core of PAC-Bayesian learning. Despite its successes and unfailing surge of interest in recent years, a limitation of the PAC-Bayesian framework is that most bounds involve a Kullback-Leibler (KL) divergence term (or its variations), which might exhibit erratic behavior and fail to capture the underlying geometric structure of the learning problem - hence restricting its use in practical applications. As a remedy, recent studies have attempted to replace the KL divergence in the PAC-Bayesian bounds with the Wasserstein distance. Even though these bounds alleviated the aforementioned issues to a certain extent, they either hold in expectation, are for bounded losses, or are nontrivial to minimize in an SRM framework. In this work, we contribute to this line of research and prove novel Wasserstein distance-based PAC-Bayesian generalisation bounds for both batch learning with independent and identically distributed (_i.i.d._) data, and online learning with potentially non-_i.i.d._ data. Contrary to previous art, our bounds are stronger in the sense that _(i)_ they hold with high probability, _(ii)_ they apply to unbounded (potentially heavy-tailed) losses, and _(iii)_ they lead to optimizable training objectives that can be used in SRM. As a result we derive novel Wasserstein-based PAC-Bayesian learning algorithms and we illustrate their empirical advantage on a variety of experiments.

## 1 Introduction

Understanding generalisation is one of the main challenges in statistical learning theory, and even more so in modern machine learning applications. Typically, a _learning problem_ is described by a tuple \((,,)\) consisting of a hypothesis (or predictor) space \(\), a data space \(\), and a loss function \(:\). The goal is to estimate the _population risk_ of a given hypothesis \(h\), defined as \(_{}(h)=_{}[(h,)]\), where \(\) denotes the unknown _data distribution_ over \(\).

As \(\) is not known, in practice, a hypothesis \(h\) is usually built by (approximately) minimising the _empirical risk_, given by \(}_{}(h)=_{i=1}^{m}(h,_ {i})\), where \(=\{_{i}\}_{i=1}^{m}\) is a dataset of \(m\) data points, independent and identically distributed (_i.i.d._) from \(\). We define the generalisation gap of a hypothesis \(h\) as \(}_{}(h)-_{}(h)\).

[MISSING_PAGE_FAIL:2]

1. Using the supermartingale toolbox introduced in , we prove in Section 3.1, novel PAC-Bayesian bounds based on the Wasserstein distance for _i.i.d._ data. While  proposed a McAllester-like bound for bounded losses, we propose a Catoni-like bound (see _e.g._, [14, Theorem 4.1] valid for heavy-tailed losses with bounded order \(2\) moments. This assumption is less restrictive than assuming subgaussian or bounded losses, which are at the core of many PAC-Bayes results. This assumption also covers distributions beyond subgaussian or subexponential ones (_e.g._, gamma distributions with a scale smaller than \(1\), which have an infinite exponential moment).
2. We provide in Section 3.2 the first generalisation bounds based on Wasserstein distances for the online PAC-Bayes framework of . Our results are, again, Catoni-like bounds and hold for heavy-tailed losses with bounded order \(2\) moments. Previous work  already provided online strategies mixing PAC-Bayes and Wasserstein distances. However, their contributions focus on the best deterministic strategy, regularised by a Wasserstein distance, with respect to the deterministic notion of regret. Our results differ significantly as we provide the best-regularised strategy (still in the sense of a Wasserstein term) with respect to the notion of generalisation, which is new.
3. As our bounds are linear with respect to Wasserstein terms (contrary to those of ), they are well suited for optimisation procedures. Thus, we propose the first PAC-Bayesian learning algorithms based on Wasserstein distances instead of KL divergences. For the first time, we design PAC-Bayes algorithms able to output deterministic predictors (instead of distributions over all \(\)) designed from deterministic priors. This is due to the ability of the Wasserstein distance to measure the discrepancy between Dirac distributions. We then instantiate those algorithms in Section 4 on various datasets, paving the way to promising practical developments of PAC-Bayes learning.

To sum up, we highlight two benefits of PAC-Bayes learning with Wasserstein distance. First, it ships with sound theoretical results exploiting the geometry of the predictor space, holding for heavy-tailed losses. Such a weak assumption on the loss extends the usefulness of PAC-Bayes with Wasserstein distances to a wide range of learning problems, encompassing bounded losses. Second, it allows us to consider deterministic algorithms (_i.e._, sampling from Dirac measures) designed with respect to the notion of generalisation: we showcase their performance in our experiments.

**Outline.** Section 2 describes our framework and background, Section 3 contains our new theoretical results and Section 4 gathers our experiments. Appendix A gathers supplementary discussion, Appendix B contains all proofs of our claims, and Appendix C provides insights into our practical results as well as additional experiments.

## 2 Our framework

**Framework.** We consider a Polish predictor space \(\) equipped with a distance \(d\) and a \(\)-algebra \(_{}\), a data space \(\), and a loss function \(:\). In this work, we consider Lipschitz functions with respect to \(d\). We also associate a filtration \((_{i})_{i 1}\) adapted to our data \((_{i})_{i=1,,m}\), and we assume that the dataset \(\) follows the distribution \(\). In PAC-Bayes learning, we construct a data-driven posterior distribution \(()\) with respect to a prior distribution \(\).

**Definitions.** For all \(i\), we denote by \(_{i}[]\) the conditional expectation \([\,_{i}]\). In this work, we consider data-dependent priors. A stochastic kernel is a mapping \(:_{m=1}^{}^{m}_{}\) where _(i)_ for any \(B_{}\), the function \((,B)\) is measurable, _(ii)_ for any dataset \(\), the function \(B(,B)\) is a probability measure over \(\).

In what follows, we consider two different learning paradigms: _batch learning_, where the dataset is directly available, and _online learning_, where data streams arrive sequentially.

**Batch setting.** We assume the dataset \(\) to be _i.i.d._, so there exists a distribution \(\) over \(\) such that \(=^{m}\). We then define, for a given \(h\), the _risk_ to be \(_{}:=_{}[(h,)]\) and its empirical counterpart \(}_{}:=_{i=1}^{m}(h,_{i})\). Our results aim to bound the _expected generalisation gap_ defined by \(_{h}[_{}(h)-}_{}(h)]\). We assume that the dataset \(\) is split into \(K\) disjoint sets \(_{1},,_{K}\). We consider \(K\) stochastic kernels \(_{1},,_{K}\) such that for any \(\), the distribution \(_{i}(,)\)_does not_ depend on \(_{i}\).

**Online setting.** We adapt the online PAC-Bayes framework of . We assume that we have access to a stream of data \(=(_{i})_{i=1,,m}\), arriving sequentially, with no assumption on \(\). In online PAC-Bayes, the goal is to define a posterior sequence \((_{i})_{i 1}\) from a prior sequence \((_{i})_{i 1}\), which can be data-dependent. We define an _online predictive sequence_\((_{i})_{i=1 m}\) satisfying: _(i)_ for all \(i\) and dataset \(\), the distribution \(_{i}(S,.)\) is \(_{i-1}\) measurable and _(ii)_ there exists \(_{0}\) such that for all \(i 1\), we have \(_{i}(S,.)_{0}\). This last condition covers, in particular, the case where \(\) is an Euclidean space and for any \(i\), the distribution \(_{i,}\) is a Dirac mass. All of those measures are uniformly continuous with respect to any Gaussian distribution.

**Wasserstein distance.** In this paper, we focus on the Wasserstein distance of order 1 (_a.k.a._, Earth Mover's distance) introduced by  in the optimal transport literature. Given a distance \(d:\) and a Polish space \((,d)\), for any probability measures \(\) and \(\) on \(\), the Wasserstein distance is defined by

\[(,):=_{(,)}\{}d(a,b)\}, \]

where \((,)\) is the set of joint probability measures \((^{2})\) such that the marginals are \(\) and \(\). The Wasserstein distance aims to find the probability measure \((^{2})\) minimising the expected cost \(_{(a,b)}d(a,b)\). We refer the reader to  for an introduction to optimal transport.

## 3 Wasserstein-based PAC-Bayesian generalisation bounds

We present novel high-probability PAC-Bayesian bounds involving Wasserstein distances instead of the classical Kullback-Leibler divergence. Our bounds hold for heavy-tailed losses (instead of classical subgaussian and subexponential assumptions), extending the remits of [1, Theorem 11]. We exploit the supermartingale toolbox, recently introduced in PAC-Bayes framework by , to derive bounds for both batch learning (Theorems 1 and 2) and online learning (Theorems 3 and 4).

### PAC-Bayes for batch learning with _i.i.d._ data

In this section, we use the batch setting described in Section 2. We state our first result, holding for heavy-tailed losses admitting order 2 moments. Such an assumption is in line, for instance, with reinforcement learning with heavy-tailed reward (see, _e.g._, ).

**Theorem 1**.: _We assume the loss \(\) to be \(L\)-Lipschitz. Then, for any \((0,1]\), for any sequence of positive scalar \((_{i})_{i\{1,,K\}}\), with probability at least \(1-\) over the sample \(\), the following holds for the distributions \(_{i,}:=_{i}(,.)\) and for any \(()\):_

\[}R_{}(h)-_{ }(h)\\ _{i=1}^{K}_{i}|L}{m}(, _{i,})+_{i=1}^{K} )}{_{i}}+}{2}(}}{}_{|_{i}|}(h)+V_{|_{i}|}(h)),\]

_where \(_{i,}\) does not depend on \(_{i}\). Also, for any \(i,|S_{i}|\), we have \(_{|_{i}|}(h)=_{_{i}}((h,)-R_{}(h))^{2}\) and \(V_{|_{i}|}(h)=_{_{i}}[_{|_{i}|}(h)]\)._

The proof is deferred to Appendix B.1. While Theorem 1 holds for losses taking values in \(\), many learning problems rely in practice on more constrained losses. This loss can be bounded as in the case of, _e.g._, supervised learning or the multi-armed bandit problem , or simply non-negative as in regression problems involving the quadratic loss (studied, for instance, in ). Using again the supermartingale toolbox, we prove in Theorem 2 a tighter bound holding for heavy-tailed non-negative losses.

**Theorem 2**.: _We assume our loss \(\) to be non-negative and \(L\)-Lipschitz. We also assume that, for any \(1 i K\), for any dataset\(\), we have \(_{h_{i}(.,),z}[(h,z)^{2}] 1\) (bounded order 2 moments forpriors). Then, for any \((0,1]\), with probability at least \(1-\) over the sample \(\), the following holds for the distributions \(_{i,}:=_{i}(,.)\) and for any \(()\):_

\[*{}_{h}_{}(h)-}_{}(h)_{i=1}^{K}_{i} |L}{m}(,_{i,})+_{i=1}^{K}_{i}|}{m^{2}}},\]

_where \(_{i,}\) does not depend on \(_{i}\)._

Note that when the loss function takes values in \(\), an alternative strategy allows tightening the last term of the bound by a factor \(}{{2}}\). This result is rigorously stated in Theorem 6 of Appendix B.3.

**High-level ideas of the proofs.** Theorems 1 and 2 are structured around two tools. First, we exploit the Kantorovich-Rubinstein duality [22, Remark 6.5] to replace the change of measure inequality ; this allows us to consider a Wasserstein distance instead of a KL term. Then, we exploit the supermartingales used in  alongside Ville's inequality (instead of Markov's one) to obtain a high probability bound holding for heavy-tailed losses. Combining those techniques provides our PAC-Bayesian bounds.

**Analysis of our bounds.** Our results hold for Lipschitz losses and allow us to consider heavy-tailed losses with bounded order 2 moments. While such an assumption on the loss is more restrictive than in classical PAC-Bayes, allowing heavy-tailed losses is strictly less restrictive. While Theorem 1 is our most general statement, Theorem 2 allows recovering a tighter result (without empirical variance terms) for non-negative heavy-tailed losses. An important point is that the variance terms are considered with respect to the prior distributions \(_{i,}\) and not \(\) as in . This is crucial as these papers rely on the implicit assumption of order 2 moments, holding uniformly for all \(()\), while we only require this assumption for the prior distributions \((_{i,})_{i=1,,K}\). Such an assumption is in line with the PAC-Bayesian literature, which often relies on bounding an averaged quantity with respect to the prior. This strength is a consequence of the Kantorovich-Rubinstein duality. To illustrate this, consider _i.i.d._ data with distribution \(\) admitting a finite variance bounded by \(V\) and the loss \((h,z)=|h-z|\) where both \(h\) and \(z\) lie in the real axis. Notice that in this particular case, we can imagine that \(z\) is a data point and \(h\) is a hypothesis outputting the same scalar for all data. To satisfy the assumption of Theorem 2, it is enough, by Cauchy Schwarz, to satisfy \(*{}_{h_{i,},z}[(h, z)^{2}]*{}[h^{2}]+2V*{}[|h|]+V^ {2} 1\) for all \(_{i,}\). On the contrary,  would require this condition to hold for all \(\), which is more restrictive. Finally, an important point is that our bound allows us to consider Dirac distributions with disjoint support as priors and posteriors. On the contrary, KL divergence forces us to consider a non-Dirac prior for our bound to be non-vacuous. This allows us to retrieve a uniform-convergence bound described in Corollary 7.

**Role of data-dependent priors.** Theorems 1 and 2 allow the use of prior distributions depending possibly on a fraction of data. Such a dependency is crucial to control our sum of Wasserstein terms as we do not have an explicit convergence rate. For instance, for a fixed \(K\), consider a compact predictor space \(\), a bounded loss and the _Gibbs posterior_ defined as \(d(h)(-}_{}(h))dh\) where \(>0\). Also define for any \(i\) and \(\), the distribution \(d_{i,}(h)(-_{/ _{i}}(h))dh\). Then, by the law of large numbers, when \(m\) goes to infinity, for any \(h\), both \(_{}(h)\) and \((_{/_{i}}(h))_{i=1,,m}\) converge to \(*{}_{}(h)\). This ensures, alongside with the dominated convergence theorem, that for any \(i\), the Wasserstein distance \((,_{i,})\) goes to zero as \(m\) goes to infinity.

**Comparison with the literature.**[1, Theorem 11] establishes a PAC-Bayes bound with Wasserstein distance valid for bounded losses being Lipschitz with high probability. While we circumvent the first assumption, the second one is less restrictive than actual Lipschitzness and can also be used in our setting. Also [1, Theorem 12] proposes an explicit convergence for finite predictor classes. We show in Appendix A that we are also able to recover such a convergence.

**Towards new PAC-Bayesian algorithms.** From Theorem 2, we derive a new PAC-Bayesian algorithm for Lipschitz non-negative losses:

\[*{argmin}_{()}*{ }_{h}}_{}(h)+_ {i=1}^{K}_{i}|L}{m}(,_{i,}). \]

Equation (2) uses Wasserstein distances as regularisers and allows the use of multiple priors. We compare ourselves to the classical PAC-Bayes algorithm derived from [1, Theorem 1.2.6] (whichleads to Gibbs posteriors):

\[*{argmin}_{()}*{}_ {h}}_{S}(h)+(, )}{}. \]

Considering a Wasserstein distance in Equation (2) makes our algorithm more flexible than in Equation (3), the KL divergence implies absolute continuity _w.r.t._ the prior \(\). Such an assumption is not required to use Equation (2) and covers the case of prior Dirac distributions. Finally, Equation (2) relies on a fixed value \(K\) whose value is discussed below.

**Role of \(K\).** We study the cases \(K=1\), \(\), and \(m\) in Theorem 2. We refer to Appendix A for a detailed treatment. First of all, when \(K=1\), we recover a classical batch learning setting where all data are collected at once. In this case, we have a single Wasserstein with no convergence rate coupled with a statistical srsatz of \(}{{m}}}\). However, similarly to [1, Theorem 12], in the case of a finite predictor class, we are able to recover an explicit convergence rate. The case \(K=\) provides a tradeoff between the number of points required to have good data-dependent priors (which may lead to a small \(_{i=1}^{}(,_{i})\)) and the number of sets required to have an explicit convergence rate. Finally, the case \(K=m\) leads to a vacuous bound as we have the incompressible term \(}{{}}}\), which makes the bound vacuous for large values of \(m\). This means that the batch setting is not fitted to deal with a data stream arriving sequentially. To mitigate that weakness, we propose in Section 3.2 the first online PAC-Bayes bounds with Wasserstein distances.

### Wasserstein-based generalisation bounds for online learning

Here, we use the online setting described in Section 2 and derive the first online PAC-Bayes bounds involving Wasserstein distances in Theorems 3 and 4. Online PAC-Bayes bounds are meant to derive online counterparts of classical PAC-Bayesian algorithms , where the KL-divergence acts as a regulariser. We show in Theorems 3 and 4 that it is possible to consider online PAC-Bayesian algorithms where the regulariser is a Wasserstein distance, which allows us to optimise on measure spaces without a restriction of absolute continuity.

**Theorem 3**.: _We assume our loss \(\) to be \(L\)-Lipschitz. Then, for any \((0,1]\), with probability at least \(1-\) over the sample \(\), the following holds for the distributions \(_{i,}:=_{i}(,.)\) and for any sequence \((_{i})_{i=1 m}()^{m}\):_

\[_{i=1}^{m}*{}_{h_{i}_{i}} *{}[(h_{i},_{i})_{i-1}]- (h_{i},_{i})  2L_{i=1}^{m}(_{i},_{i,})\] \[+_{i=1}^{m}*{}_{h_{i} _{i,}}_{i}(h_{i},_{i})+V_{i}(h_{i}) +,\]

_where for all \(i\), \(_{i}(h_{i},_{i})=((h_{i},_{i})-*{ }_{i-1}[(h_{i},_{i})])^{2}\) is the conditional empirical variance at time \(i\) and \(V_{i}(h_{i})=*{}_{i-1}[(h_{i},_{i})]\) is the true conditional variance._

The proof is deferred to Appendix B.4. We also provide the following bound, being an online analogous of Theorem 2, valid for non-negative heavy-tailed losses.

**Theorem 4**.: _We assume our loss \(\) to be non-negative and \(L\)-Lipschitz. We also assume that, for any \(i\), \(\), \(*{}_{h_{i},}*{ }_{i-1}[(h,_{i})^{2}] 1\) (bounded conditional order \(2\) moments for priors). Then, for any \((0,1]\), with probability at least \(1-\) over the sample \(\), any online predictive sequence (used as priors) \((_{i})_{i 1}\), we have with probability at least \(1-\) over the sample \(S\), the following, holding for the data-dependent measures \(_{i,}:=_{i}(S,.)\) and any posterior sequence \((_{i})_{i 1}\):_

\[_{i=1}^{m}*{}_{h_{i}_{i}} *{}[(h_{i},_{i})_{i-1}]- (h_{i},_{i})_{i=1}^{m}(_{i},_{i,})+} {m}}.\]

The proof is deferred to Appendix B.5.

**Analysis of our bounds.** Theorems 3 and 4 are, to our knowledge, the first results involving Wasserstein distances for online PAC-Bayes learning. They are the online counterpart of Theorems 1 and 2, and the discussion of Section 3.1 about the involved assumptions also apply here. The sum of Wasserstein distances involved here is a consequence of the online setting and must grow sublinearly for the bound to be tight. For instance, when \((_{i}=_{h_{i}})_{i 1}\) is the output of an online algorithm outputting Dirac measures and \(_{i,}=_{i-1}\), the sum of Wasserstein is exactly \(_{i=1}^{m}d(h_{i},h_{i-1})\). This sum has to be sublinear for the bound to be non-vacuous, and the tightness depends on the considered learning problem. An analogous of this sum can be found in dynamic online learning (Zin2013) where similar sums appear as _path lengths_ to evaluate the complexity of the problem.

**Comparison with literature.** We compare our results to existing PAC-Bayes bounds for martingales of [SLCB\({}^{+}\)12]. [SLCB\({}^{+}\)12, Theorem 4] is a PAC-Bayes bound for martingales, which controls an average of martingales, similar to our Theorem 1. Under a boundedness assumption, they recover a McAllester-typed bound, while Theorem 1 is more of a Catoni-typed result. Also, [SLCB\({}^{+}\)12, Theorem 7] is a Catoni-typed bound involving a conditional variance, similar to our Theorem 4. They require to bound uniformly the variance on all the predictor sets, while we only assume averaged variance with respect to priors, which is what we required to perform Theorem 4.

**A new online algorithm.**[HG22] derived from their main theorem, an online counterpart of Equation (3), proving it comes with guarantees. Similarly, we exploit Theorem 4 to derive the online counterpart of Equation (2), from the data-free initialisation \(_{1}\)

\[ i 1,\ \ _{i}*{argmin}_{( )}*{}_{h}[(h_{i},_{i} )]+2L(,_{i,}). \]

We highlight the merits of the algorithm defined by Equation (4), alongside with the one from Equation (2), in Section 4.

## 4 Learning via Wasserstein regularisation

Theorems 2 and 4 are designed to be informative on the generalisation ability of a single hypothesis even when Dirac distributions are considered. In particular, our results involve Wasserstein distances acting as regularisers on \(\). In this section, we show that a Wasserstein regularisation of the learning objective, which comes from our theoretical bounds, helps to better generalise in practice. Inspired by Equations (2) and (4), we derive new PAC-Bayesian algorithms for both batch and online learning involving a Wasserstein distance (see Section 4.1), we describe our experimental framework in Section 4.2 and we present some of the results in Section 4.3. Additional details, experiments, and discussions are gathered in Appendix C due to space constraints. All the experiments are reproducible with the source code provided on GitHub at [https://github.com/paulviallard/NeurIPS23-PB-Wasserstein](https://github.com/paulviallard/NeurIPS23-PB-Wasserstein).

### Learning algorithms

**Classification.** In the classification setting, we assume that the data space \(=\) is composed of a \(d\)-dimensional _input space_\(=\{^{d}\|\|_{2} 1\}\) and a finite _label space_\(=\{1,,||\}\) with \(||\) labels. We aim to learn models \(h_{}:^{d}^{||}\) parameterised by a weight vector \(\) that outputs, given an input \(\), a score \(h_{}()[y^{}]\) for each label \(y^{}\). This score allows us to assign a label to \(\); to check if \(h_{}\) classifies correctly the example \((,y)\), we use the _classification loss_ defined by \(^{c}(h_{},(,y)):=[h_{}( )[y]-_{y^{} y}h_{}()[y^{}]  0]\), where \(\) denotes the indicator function.

**Batch algorithm.** In the batch setting, we aim to learn a parametrised hypothesis \(h_{}\) that minimises the population classification risk \(_{}(h_{})=*{}_{(,y) }^{c}(h_{},(,y))\) that we can only estimate through the empirical classification risk \(_{}(h_{})=_{i=1}^{m}^{c}( h_{},(_{i},y_{i}))\). To learn the hypothesis, we start from Equation (2), when the distributions \(\) and \(_{1},,_{K}\) are Dirac masses, localised at \(h_{},h_{_{1}}, h_{_{K}}\) respectively. Indeed, in this case, \((,_{i,})=d(h_{},h_{_{i}})\) for any \(i\). However, the loss \(^{c}(.,)\) is not Lipschitz and the derivatives are zero for all examples \(\), which prevents its use in practice to obtain such a hypothesis \(h_{}\). Instead, for the population risk \(_{}(h)\) and the empirical risk \(_{}(h)\) (in Theorem 2 and Equation (2)), we consider the loss \((h,(,y))=|}_{y^{} y}(0,1- (h[y]-h[y^{}]))\), which is \(\)-Lipschitz _w.r.t._ the outputs \(h,,h[||]\). This loss has subgradients everywhere, which is convenient in practice. We go a step further by _(a)_ setting \(L=\) and _(b)_ adding a parameter \(>0\) to obtain the objective

\[*{argmin}_{h_{}}\{}_{ }(h_{})+[_{i=1}^{K} _{i}|}{m}d(h_{},h_{_{i}})]\}. \]

To (approximately) solve Equation (5), we propose a two-step algorithm. First, Priors Learning learns \(K\) hypotheses \(h_{_{1}},,h_{_{K}}\) by minimising the empirical risk via stochastic gradient descent. Second, Posterior Learning learns the hypothesis \(h_{}\) by minimising the objective associated with Equation (5). More precisely, Priors Learning outputs the hypotheses \(h_{_{1}},,h_{_{K}}\), obtained by minimising the empirical risk through mini-batches. Those batches are designed such that for any \(i\), the hypothesis \(h_{_{i}}\) does not depend on \(_{i}\). Then, given \(h_{_{1}},,h_{_{K}}\), Posterior Learning minimises the objective in Equation (5) with mini-batches. Those algorithms are presented in Algorithm 1 of Appendix C. While \(\) is not suggested by Equation (2), it helps to control the impact of the regularisation in practice. Equation (5) then optimises a tradeoff between the empirical risk and the regularisation term \(_{i=1}^{K}_{i}|}{m}d(h_{},h_{ _{i}})\).

**Online algorithm.** Online algorithms output, at each time step \(i\{1,,m\}\), a new hypothesis \(h_{_{i}}\). From Equation (4), particularised to a sequence of Dirac distributions (localised in \(h_{_{1}},,h_{_{K}}\)), we design a novel online PAC-Bayesian algorithm with a Wasserstein regularizer:

\[ i 1,\;\;h_{i}*{argmin}_{h_{}} (h_{},_{i})+d(h_{},h_{_{i-1}} )\;\;s.t.\;\;d(h_{},h_{_{i-1}}) 1. \]

According to Theorem 4, such an algorithm aims to bound the _population cumulative classification loss_\(_{}=_{i=1}^{m}[^{c}(h_{_{i}}, _{i})_{i-1}]\). Note that we added the constraint \(d(h_{},h_{_{i-1}}) 1\) compared to Equation (4). This constraint ensures that the new hypothesis \(h_{_{i}}\) is not too far from \(h_{_{i-1}}\) (in the sense of the distance \(\|\|_{2}\)). Note that the constrained optimisation problem in Equation (6) can be rewritten in an unconstrained form (see ) thanks to a barrier \(B()\) defined by \(B(a)=0\) if \(a 0\) and \(B(a)=+\) otherwise; we have

\[ i 1,\;\;h_{i}*{argmin}_{h_{}} (h_{},_{i})+d(h_{},h_{_{i-1} })+B(d(h_{},h_{_{i-1}})-1). \]

When solving the problem in Equation (7) is not feasible, we approximate it with a log barrier of  (suitable in a stochastic gradient setting); given a parameter \(t>0\), the log barrier extension is defined by \((a)=-(-a)\) if \(a-}\) and \((a)=ta-(})+\) otherwise. We present in Appendix C Algorithm 2 that aims to (approximately) solve Equation (7). To do so, for each new example \((_{i},y_{i})\), the algorithm runs several gradient descent steps to optimise Equation (7).

### Experimental framework

In this part, we assimilate the predictor space \(\) to the parameter space \(^{d}\). Thus, the distance \(d\) is the Euclidean distance between two parameters: \(d(h_{},h_{^{}})=\|-^ {}\|_{2}\). This implies that the Lipschitzness of \(\) has to be taken _w.r.t._\(\) instead of \(h_{}\).

**Models.** We consider that the models are either linear or neural networks (NN). Linear models are defined by \(h_{}()=W+b\), where \(W^{|| d}\) is the weight matrix, \(b^{||}\) is the bias, and \(=(\{W,b\})\) its vectorisation; the vector \(\) with the zero vector. Thanks to the definition of \(\), we know from Lemma 8 (and the composition of Lipschitz functions) that the loss is \(\)-Lipschitz _w.r.t._\(\). For neural networks, we consider fully connected ReLU neural networks with \(L\) hidden layers and \(D\) nodes, where the leaky ReLU activation function \(:^{D}^{D}\) applies elementwise \(x(x,0.01x)\). More precisely, the network is defined by \(h_{}()=Wh^{L}( h^{1}())+b\) where \(W^{|| D}\), \(b^{||}\). Each layer \(h^{i}()=(W_{i}+b_{i})\) has a weight matrix \(W_{i}^{D D}\) and bias \(b_{i}^{D}\) except for \(i=1\) where we have \(W_{1}^{D d}\). The weights \(\) are also the vectorisation \(=(\{W,W_{L},,W_{1},b,b_{L},,b_{1}\})\). We have precised in Lemma 9 that our loss is Lipschitz _w.r.t._ the weights \(\). We initialise the network similarly to  by sampling the weights from a Gaussian distribution with zero mean and a standard deviation of \(=0.04\); the weights are further clipped between \(-2\) and \(+2\). Moreover, the values in the biases \(b_{1},,b_{L}\) are set to 0.1, while the values for \(b\) are set to 0. In the following, we consider \(D=600\) and \(L=2\); more experiments are considered in the appendix.

**Optimisation.** To perform the gradient steps, we use the COCOB-Backprop optimiser  (with parameter \(=10000\)).2 This optimiser is flexible as the learning rate is adaptative and, thus, does not require hyperparameter tuning. For Algorithm 1, which solves Equation (5), we fix a batch size of \(100\), _i.e._, \(||=100\), and the number of epochs \(T\) and \(T^{}\) are fixed to perform at least \(20000\) iterations. Regarding Algorithm 2, which solves Equation (7), we set \(t=100\) for the log barrier, which is enough to constrain the weights and the number of iterations to \(T=10\).

**Datasets.** We study the performance of Algorithms 1 and 2 on UCI datasets  along with MNIST  and FashionMNIST . We also split all the data (from the original training/test set) in two halves; the first part of the data serves in the algorithm (and is considered as a training set), while the second part is used to approximate the population risks \(_{}(h)\) and \(_{}\) (and considered as a testing set).

### Results

We present in Table 1 the performance of Algorithms 1 and 2 compared to the Empirical Risk Minimisation (ERM) and the Online Gradient Descent (OGD) with the COCOB-Backprop optimiser. Tables (a)a and (c)c present the results of Algorithm 1 for the _i.i.d._ setting on linear and neural networks respectively, while Tables (b)b and (d)d present the results of Algorithm 2 for the online case.

**Analysis of the results.** In batch learning, we note that the regularisation term brings generalisation improvements compared to the empirical risk minimisation. Indeed, our batch algorithm (Algorithm 1) has a lower population risk \(_{}(h)\) on 11 datasets for the linear models and 9 datasets for the neural networks. In particular, notice that NNs obtained from Algorithm 1 are more efficient than the ones obtained from ERM on MNIST and FashionMNIST, which are the more challenging datasets. This suggests that the regularisation term helps to generalise well. For the online case, the performance of the linear models obtained from our algorithm (Algorithm 2) and by OGD are comparable: we have a tighter population classification risk \(_{}(h)\) on \(5\) datasets over \(13\). However, notice that the risk difference is less than \(0.05\) on \(6\) datasets. The advantage of Algorithm 2 is more pronounced for neural networks: we improve the performance in all datasets except adult and sensorless. Hence, this confirms that optimising the regularised loss \((h_{},_{i})+\|-_{i-1}\|\) brings a good advantage compared to the loss \((h_{},_{i})\) only. A possible explanation would be that OGD suffers from underfitting (with a high empirical risk \(_{}\)) while we are able to control overfitting through a regularisation term. Indeed, only one gradient descent step is done for each new datum \((_{i},y_{i})\), which might not be sufficient to decrease the loss. Instead, our method solves the problem associated with Equation (7) and constrains the descent with the norm \(\|-_{i-1}\|\).

## 5 Conclusion and Perspectives

We derived novel generalisation bounds based on the Wasserstein distance, both for batch and online learning, allowing for the use of deterministic hypotheses through PAC-Bayes. We derived new learning algorithms which are inspired by the bounds, with remarkable empirical performance on a number of datasets: we hope our work can pave the way to promising future developments (both theoretical and practical) of generalisation bounds based on the Wasserstein distance. Given the mostly theoretical nature of our work, we do not foresee an immediate negative societal impact, although we hope a better theoretical understanding of generalisation will ultimately benefit practitioners of machine learning algorithms and encourage virtuous initiatives.

## 6 Acknowledgements

We warmly thank the reviewers who provided insightful comments and suggestions which greatly helped us improve our manuscript. P.V. and U.S. are partially supported by the French government under the management of Agence Nationale de la Recherche as part of the "Investissements d'avenir" program, reference ANR-19-P3IA-0001 (PRAIRIE 3IA Institute). U.S. is also partially supported by the European Research Council Starting Grant DYNASTY - 101039676. B.G. acknowledges partial support by the U.S. Army Research Laboratory and the U.S. Army Research Office, and by the U.K. Ministry of Defence and the U.K. Engineering and Physical Sciences Research Council (EPSRC) under grant number EP/R013616/1. B.G. acknowledges partial support from the French National Agency for Research, grants ANR-18-CE40-0016-01 and ANR-18-CE23-0015-02.