# Why Not Looking backward?" A Robust Two-Step Method to Automatically Terminate Bayesian Optimization

Why Not Looking backward?" A Robust Two-Step Method to Automatically Terminate Bayesian Optimization

 Shuang Li

Control and Simulation Center, Harbin Institute of Technology, China.

National Key Laboratory of Modeling and Simulation for Complex Systems, China.

ShuangLi.hit@outlook.com

Ke Li

Department of Computer Science

University of Exeter, EX4 4RN, Exeter, UK.

k.li@exeter.ac.uk

Wei Li

Control and Simulation Center, Harbin Institute of Technology, China.

National Key Laboratory of Modeling and Simulation for Complex Systems, China.

frank@hit.edu.cn

Wei Li is the corresponding author of this paper.

###### Abstract

Bayesian Optimization (BO) is a powerful method for tackling expensive black-box optimization problems. As a sequential model-based optimization strategy, BO iteratively explores promising solutions until a predetermined budget, either iterations or time, is exhausted. The decision on when to terminate BO significantly influences both the quality of solutions and its computational efficiency. In this paper, we propose a simple, yet theoretically grounded, two-step method for automatically terminating BO. Our core concept is to proactively identify if the search is within a convex region by examining previously observed samples. BO is halted once the local regret within this convex region falls below a predetermined threshold. To enhance numerical stability, we propose an approximation method for calculating the termination indicator by solving a bilevel optimization problem. We conduct extensive empirical studies on diverse benchmark problems, including synthetic functions, reinforcement learning, and hyperparameter optimization. Experimental results demonstrate that our proposed method saves up to \( 80\%\) computational budget yet is with an order of magnitude smaller performance degradation, comparing against the other peer methods. In addition, our proposed termination method is robust in terms of the setting of its termination criterion.

## 1 Introduction

"_Nature does not hurry, yet everything is accomplished._" -- Lao Tzu

In this paper, we consider the black-box optimization problem (BBOP) defined as follows:

\[}{}\ \ f(), \]where \(=(x_{1},,x_{n})^{}\) is a decision vector (variable), \(=[x_{i}^{},x_{i}^{}]_{i=1}^{n}^{n}\) represents the search space, and \(f:\) corresponds to the attainable set in the objective space. In real-world scenarios, function evaluations (FEs) of \(f()\) can be costly, giving rise to expensive BBOPs. Bayesian optimization (BO) has emerged as one of the most effective methods for addressing expensive BBOPs. BO is a sequential model-based optimization technique consisting of two iterative steps: \(i\)) employing limited expensive FEs to construct a surrogate model of the physical objective function, such as a Gaussian process (GP) model ; and \(ii\)) selecting the next point of interest for costly FE by optimizing an acquisition function, e.g., probability of improvement (PI) , expected improvement (EI) , and upper confidence bound (UCB) . Numerous theoretical and methodological advancements have been made in BO. Interested readers can refer to comprehensive survey papers [29; 11] and a recent textbook  for further information.

Nevertheless, the question of when to terminate the search process of BO remains a largely underexplored area in the literature. At present, the most prevalent termination criterion is a pre-specified budget, such as the number of FEs or wall-clock time. Though intuitive, this approach neglects the search dynamics inherent to different BBOPs. As a result, this strategy is rigid while it does not offer a general rule for determining an appropriate budget across various problem settings. If the budget is too small, BO may terminate prematurely, yielding a suboptimal solution. On the contrary, an excessive budget may lead to wasted computational resources. Another simple termination method involves stopping BO if the current best solution remains unchanged for a predetermined number of consecutive FEs. However, as highlighted by , this strategy also fails to consider the observed data during the sequential model-based optimization process and relies on a pre-defined threshold.

Beyond the aforementioned 'naive' approaches, a limited number of dedicated efforts have been made to address the termination of BO. One notable method involves monitoring the progress of BO by termination indicators, such as the maximum of EI [28; 16] or PI . In this approach, BO is terminated when the corresponding termination indicator falls below a pre-specified threshold. Very recently, Makarova _et al_. proposed using the difference between the minimal of the lower confidence bound (LCB) and UCB as the termination indicator. As illustrated in Figure 1, we observe that all criteria used in these termination approaches exhibit significant oscillation during the optimization process. This can be attributed to: \(i\)) the stochastic nature of BO itself, and \(ii\)) numerical errors arising from the non-convex optimization of acquisition functions. Furthermore, as shown in Figures 1(a) and (b), the variation range of the same criterion can differ substantially when addressing problems with distinct fitness landscapes. These factors make determining a universally applicable threshold in practice challenging, resulting in fragile and less intuitive termination criteria compared to simply establishing a budget. Additionally, we find that these termination criteria are'myopic', as decision-making is based solely on the observations at the current step, leading to a lagged termination. For instance, consider the selected samples shown in Figure 2; it is difficult, if not impossible, to determine when to terminate BO until \(t=20\). However, if we look backward to \(t=5\), it becomes evident that BO is likely to converge by \(t=10\).

Our contributions.In light of the aforementioned challenges, this paper proposes a novel termination method for BO that proactively detects whether the search is located in a convex region of \(-f()\) by examining previously observed samples. BO is terminated if the local regret within this convex region falls below a predetermined threshold. To improve numerical stability, we introduce an approx

Figure 1: Trajectories of termination criteria used in ,  and  on Ackley and Levy function where \(n=1\). Results are collected from \(21\) independent runs of vanilla BO while the mean value of termination indicator of each termination criterion is plotted as the solid line associated with the confidence interval. Please refer to Section 3.2 for a description of these termination criteria, as well as the meaning of \(_{}\), \(_{}\) and \(_{}\).

imation method for calculating the termination indicator by solving a bilevel optimization problem. Our proposed termination method is simple, yet it offers theoretical guarantees. To demonstrate its effectiveness, we compare the performance of our proposed method against four peer methods on a variety of benchmark problems, encompassing synthetic functions, reinforcement learning, and hyperparameter optimization.

## 2 Proposed Method

This section starts with a gentle tutorial of vanilla BO. Then, we delineate the implementation of our proposed termination method, followed by a theoretical analysis at the end.

### Vanilla Bayesian Optimization

As a gradient-free optimization method, BO comprises two major steps. The first step involves constructing a surrogate model based on GP to approximate the expensive objective function. Given a set of training data \(=\{^{i},f(^{i})\}_{i=1}^{N}\), GP learns a latent function \(g()\), such that \(\), we have \(f()=g()+\), where \((0,_{}^{2})\) is an i.i.d. Gaussian noise. For each testing input vector \(^{*}\), the mean and variance of the target \(f(^{*})\) are predicted as follows:

\[(^{*}) =^{*}(K+_{}^{2}I)^{-1}, \] \[^{2}(^{*}) =(^{*},^{*})-^{*}(K +_{}^{2}I)^{-1}^{*},\]

where \(X=(^{1},,^{N})^{}\) and \(=(f(^{1}),,f(^{N}))^{}\). \(^{*}\) is the covariance vector between \(X\) and \(^{*}\), and \(K\) is the covariance matrix of \(X\). In this paper, we use the Matern \(5/2\) kernel as the covariance function to measure the similarity between a pair of data points. The second step consists of an infill criterion based on the optimization of an acquisition function, which determines the next point of merit \(}^{*}\) to be evaluated by the actual expensive objective function:

\[}^{*}=*{argmax}_{}f^{}(). \]

where \(f^{}()=()+()\) is the widely used UCB  to facilitate our theoretical analysis. Specifically, the parameter \(>0\), determined according to the confidence level set as \(0.95\) in this paper, controls the trade-off between exploration and exploitation. Subsequently, the next point of merit \(}^{*}\) is used to update the training dataset as \(=\{}^{*}\}\), and BO iterates between the two aforementioned steps sequentially until a termination criterion is met. The convergence of BO can be evaluated by regret:

\[r=f(^{})-f(}^{}), \]

where \(^{}\) represents the ground truth global optimum and \(}^{}=*{argmax}_{}f ()\) denotes the current best-found solution.

### Proposed Termination Criterion

Inspired by the observations illustrated in Figure 2, we propose a termination method that involves 'looking back' at the last \(>1\) observed points in the dataset \(\), and storing these in a temporary archive, denoted as \(}\). The termination criterion we propose is predicated on two primary conditions.

**Condition 1**.: _The BO search process is deemed to have converged within a convex hull \(\) if the following condition is satisfied:_

\[_{j=1}^{(_{+}^{+1})}((+^{}}{2}))+f( ^{})}{2})=, \]

Figure 2: Search dynamics of vanilla BO on the Ackley function (\(n=1\)) at different time steps after the initialization. In particular, \(t=5\) indicates five new samples are collected after the initialization.

_where \(()\) denotes the indicator function, returning \(1\) if the argument holds true and \(0\) otherwise. \(\) and \(^{}\) are points selected randomly and distinctively from \(}\). The convex hull, \(=[}_{i}^{},}_{i}^{ }]_{i=1}\), is a subset of \(\), where \(}_{i}^{}=*{argmin}_{ }}x_{i}\) and \(}_{i}^{}=*{argmax}_{ }}x_{i}\)._

**Condition 2**.: _Assuming Condition 1 is satisfied, and \(}\) denotes the most recently observed point in \(\), we calculate the local regret \(\) as follows:_

\[=(})-(})+(( })+(})), \]

_where \(}=*{argmax}_{} ()\) and \(}=*{argmax}_{} ^{2}()\). The BO process terminates if the following inequality is satisfied:_

\[}{_{}}_{}, \]

_where \(}{_{}}\) is used as the termination indicator, denoted as \(_{}\), and \(_{}\) is a predetermined threshold._

**Remark 1**.: _The inequality within the indicator function \(()\) in equation (5) is derived from Jensen's inequality , which yields a convex function:_

\[-f(+(1-)^{})- f()-( 1-)f(^{}), \]

_where \(\) and \(,^{}\). In order to avoid the necessity of additional function evaluations when computing \(f(+^{}}{2})\), we substitute \((+^{}}{2})\) into equation (5)._

**Remark 2**.: _In equation (6), we employ the widely-used L-BFGS algorithm  to compute \(}\) and \(}\). To ensure numerical stability, we suggest the following strategies for initializing the algorithm and defining its termination criterion:_

1. _For_ \(}\)_, L-BFGS is initialized at a point randomly selected from_ \(\)_. The algorithm terminates when_ \(\|()\|_{2}\)_. In our work, we set_ \(=10^{-6}\)_, following Proposition_ 1_._
2. _For_ \(}\)_, L-BFGS is initialized at the point_ \(*{argmax}_{} ^{2}()\)_, where_ \(^{2}()\) _denotes the lower bound of_ \(^{2}()\) _over_ \(\)_. The termination criterion is_ \(\|^{2}()\|_{2}\)_, as per Proposition_ 2_._

**Remark 3**.: _Considering equation (7), given that \(})-(})}{_{}} 0\) and \(})+(})}{_{}} 2\), we deduce that \(_{} 2\). The upper bound of \(_{}\) is empirically determined, as detailed in Section 4.1._

**Remark 4**.: _When the GP model is overfitting, BO tends to converge within the local region of the current best solution. In this case, both Condition 1 and Condition 2 are easily met while BO will be terminated prematurely. On the other hand, when the model is underfitting, BO will explore \(\) in a random manner. In this case, satisfying Condition 1 becomes challenging, and BO will face the risk of failing to be terminated. Therefore, we designed three mitigation strategies: 1) restrict the lengthscale to \([0.05,200]\) during GP training to prevent lengthscales from becoming excessively large or small; 2) normalize the input of training data to \(\); and 3) standardize the output of the training data by centering it on the mean and scaling it by the variance._

**Proposition 1**.: _Consider \(\), where \(-()\) represents a convex function. If \(\|()\|_{2}\), we can establish:_

\[(})-(), \]

_where \(=(2m_{1})^{1/2}\), \(\) is a positive constant, and \(m_{1}\) denotes the strong convexity parameter of \(-()\)._

**Lemma 1**.: _Assume the GP employs a stationary kernel \(k(,)\). For \(\), the lower bound of \(^{2}()\) is given by:_

\[^{2}()=k(,)+c_{i=1}^{| |}k^{2}(,^{i}), \]

_where \(c<0\) is a constant and \(^{i}\) for \(i\{1,,||\}\)._

**Lemma 2**.: _Given Lemma 1, determining \(}{}\ ^{2}( )\) is equivalent to solving the following bilevel optimization problem:_

\[}{}&d(,^{1},^{2})&=\|-^{1} \|_{2}^{2}+\|-^{2}\|_{2}^{2}\\ &\{^{1},^{2}\}&=^{1},^{2}}{}\ \|^{1}-^{2}\|_{2}^{2},\\ &^{1}^{2},\,= \]

_where \(=[_{i}^{},_{i}^{}]_{i=1}^{n} \), \(_{i}^{}=(x_{i}^{1},x_{i}^{2})\) and \(_{i}^{}=(x_{i}^{1},x_{i}^{2})\). Given that the lower-level optimization can be addressed via exhaustive search, the analytical solution of (11) is given by \(}=(_{1}^{}+_{1}^{}-_{1}^{}}{2},,_{n}^{}+_{n}^{}-_{n}^{}}{2})^{}\)._

**Proposition 2**.: _Leveraging Lemma 2, suppose \(}{}-^{2}( )\) exhibits convexity in its local optimal regions, the following inequality is satisfied when \(\|^{2}()\|_{2}\):_

\[^{2}(})-^{2}()+, \]

_where \(=(2m_{2})^{1/2}\), \(>0\), \(m_{2}>0\) represents the strong convexity parameter of \(-^{2}()\) in its local optimal regions , and \(\) is constrained by \(0^{2}(})-^{2}(})\)._

### Theoretical Analysis of the Proposed Termination Criterion

In this subsection, we delve into the theoretical underpinnings of the proposed termination method, focusing on the convergence of BO when the UCB is utilized as the acquisition function.

**Lemma 3**.: _As per Srinivas et al., the optimization process in BO can be conceptualized as a sampling process from a GP. Hence, for any \(\), we have:_

\[|f()-()|()>, \]

_where \(>0\) signifies the confidence level adhered to by the UCB._

**Corollary 1**.: _Based on Lemma 3 and Condition 2, we deduce that:_

\[f^{}(}^{})+ f( ^{})>, \]

_where \(\) is a numerical error when optimizing the acquisition function, \(}^{}=}{}\ f^{}()\), and \(^{}\) represents the true global optimum. Furthermore,_

\[0(})+(})-f^{ }(}^{}), \]

_where \(}\), \(}\), and \(}^{}\) are elements of \(\), while \(>0\) denotes the confidence level of the UCB._

**Theorem 1**.: _Leveraging Corollary 1, when employing the termination method proposed in this paper, we deduce that the global regret bound of BO as:_

\[r 2(}^{})+>, \]

_where \(>0\) signifies the confidence level associated with the UCB._

**Theorem 2**.: _Building upon Condition 1 and Condition 2, and employing the termination method proposed in this paper, we establish the local regret bound of BO as:_

\[f(^{})-f()>, \]

_where \(\), \(^{}\) denotes the true global optimum in \(\), and \(>0\) is the confidence level of the UCB._

**Remark 5**.: _Drawing from Theorem 1 and Theorem 2, we observe that if \(\) can be considered negligible when \(}^{}\) is accurately determined by optimizing the UCB, \(\) subsequently represents the upper bound of BO regret within the domain \(\). Conversely, if \(\) cannot be disregarded, \(\) is posited as the upper bound of BO regret within the restricted domain \(\)._

## 3 Experimental Settings

In this section, we present the experimental setup for our empirical study, which encompasses the benchmark test problems, the peer algorithms, and the performance metrics used for evaluation.

### Benchmark Problems

We evaluate the performance of our proposed method on three types of benchmark problems.

* Synthetic functions: We consider Ackley, Levy, and Schwefel functions  with \(n\{2,5,10\}\). The objective function \(f()\) is contaminated by Gaussian noise \((0.0,0.2)\). The maximal number of FEs is set to \(N_{}=50n\), with \(5n\) allocated to initialization.
* Reinforcement learning (RL): We examine two RL tasks chosen from OpenAI Gym : Lunar Lander with \(n=12\) and Swimmer with \(n=16\). We set \(N_{}=50n\), with \(5n\) FEs allocated to initialization.
* Hyperparameter optimization (HPO): We consider \(5\) HPO tasks picked up from the HPOBench  for tuning support vector machine (SVM) with \(n=2\), multi-layer perceptron (MLP) with \(n=5\), random forest with \(n=4\) and XGBoost with \(n=8\). The computational budget is set the same as in the RL tasks.

Note that, due to the use of termination criteria, it may not be necessary to exhaust the entire allocated computational budget to terminate BO. To ensure statistical significance, each experiment is independently conducted \(21\) times with different random seeds.

### Peer Algorithms

As discussed in Section 1, the termination criterion for BO is an understudied topic in the literature. In our experiments, we compare our proposed method with the following four termination methods.

* Naive method: This method ceases BO when \(}^{}\) stays unchanged for \(_{}\) consecutive iterations. Here, \(_{}\) is also the termination indicator. In our experiments, we test three settings of the thresholds \(_{}\) as \(150\), \(337\) and \(524\), respectively.
* Nguyen's method : In each iteration of BO, the optimization of acquisition function produces the current optimal EI. By using this as the termination indicator, denoted as \(_{}\), the Nguyen's method terminates BO when it falls below a predetermined threshold \(_{}\). In our experiments, we consider three settings of \(_{}\) as \(0.01\), \(0.04\) and \(0.06\), respectively.
* Lorenz's method : Analogous to the Nguyen's method, the Lorenz's method replaces the EI with PI as the termination indicator, denoted as \(_{}\). In our experiments, the termination threshold \(_{}\) is set as \(0.07\), \(0.2\) and \(0.33\), respectively.
* Makarova's method : Similar to the previous two methods, the Makarova's method uses the difference between the lower and upper confidence bounds as the termination indicator, denoted as \(_{}\). It terminates BO when \(_{}_{}\), a predetermined threshold and is set as \(0.26\), \(0.62\) and \(0.97\), respectively, in our experiments.
* Our proposed method: According to Condition 1 and Condition 2, our proposed method terminates BO when \(_{}\) falls below a predetermined threshold \(_{}\), which is set as \(2.02\), \(2.05\) and \(2.08\), respectively. Furthermore, we introduce a hyperparameter \(\) to control the number of observed samples being looked backward, which is set to \(=10\) in our experiments. The code is available at [https://github.com/COLA-Laboratory/OptimalStoping_NeurIPS2023](https://github.com/COLA-Laboratory/OptimalStoping_NeurIPS2023).

According to the aforementioned settings, it is evident that the naive method tends to delay termination when a large \(_{}\) is used. On the other hand, other methods may incur a delayed termination if a small threshold is used. Note that the choices of the corresponding termination thresholds and the sensitivity of \(\) are empirically examined in Sections 4.1 and 4.2.

### Performance Metrics

In our experiments, we consider the following three performance metrics to measure the effectiveness of a termination method.

* Empirical cumulative probability of a termination indicator: \[_{}=} 21}_{i=0}^{N_{ } 21}(_{i}),\] (18) where \(_{i}=+- ) i}{N_{} 21}\), and \(i\{0,,N_{} 21\}\). For a given termination method, \(\) represents its termination indicator as outlined in Section 3.2. The minimum and maximumvalues of \(\), represented by \(\) and \(\) respectively, are determined across all 21 repeated experiments on each benchmark problem. If \(_{}\) exhibits consistency across a range of benchmark problems, it implies that the threshold choice for the corresponding termination method is consistent and not dependent on the specific problem.
* The relative computational cost: \[_{}=_{}}{N_{}},\] (19) where \(_{}\) is the number of FEs used by a termination criterion when early stopping occurs. A lower value of \(_{}\) indicates a higher degree of computational budget saving.
* The relative performance degradation incurred by early stopping: \[_{}=})-f(}^{ })}{f(})-f(})},\] (20) where \(}\) and \(}\) are the best and the worst solutions found by BO when consuming all \(N_{}\) FEs. \(}^{}\) signifies the best solution found when early stopping is prompted by a termination criterion. A smaller \(_{}\) value indicates less performance degradation resulting from the application of the corresponding termination criterion.

## 4 Empirical Studies

In this section, our experiments2 aim to investigate three aspects: \(i)\) the robustness of the termination threshold for different termination methods; \(ii)\) the trade-off between the computational budget saving versus the performance degradation; and \(iii)\) the sensitivity of \(\) in our proposed termination method.

### Robustness of the Selection of Termination Threshold

In this subsection, we use the \(_{}\) metric to scrutinize the threshold choice of various termination methods across different problems. As per equation (18), it is evident that \(_{}_{i}\). As discussed earlier in Section 3.2, a large \(_{i}\) can lead to premature early stopping. Consequently, we confine our analysis to instances where \(_{} 0.5\). As shown in Figure 3, the trajectories of \(_{}\) for our proposed method appear to converge, whereas those for the other methods diverge with different magnitudes. More specifically, as shown in Figure 3(a), \(_{i}=2\) can be regarded as a transition point where \(_{} 0.95\) if \(_{i} 2\). This empirical observation corroborates the theoretical result derived

Figure 4: Bar charts with error bars of normalized \(_{i}\) for different termination methods when \(_{}\) is set as \(0.05\), \(0.1\), \(0.2\), \(0.3\), \(0.4\), and \(0.5\) respectively.

Figure 3: Trajectories of \(_{}\) collected on different benchmark problems. Here we only show some results without loss of generality, while full results can be found in the supplementary document. Different subplots are (a) our proposed method, (b) Naive method, (c) Nguyen’s method, (d) Lorenz’s method, and (e) Makarova’s method, respectively.

in Condition 2. In contrast, there do not exist a consistent lower bound for the other termination methods. To further elucidate these observations, we plot the distributions of \(_{i}\) when \(}\) ranges from \(0.05\) to \(0.5\) in Figure 4. It is clear that the bar charts exhibit the least variation for our proposed method. For the naive method, \(_{i}\) increases as \(}\) grows. However, the bars for the other three methods show significant fluctuations, particularly for the Nguyen's and the Lorenz's methods. These observations are further substantiated by the trajectories of the termination indicators throughout the BO process, as shown in Figure 5. We present results for the Ackley and HPO for SVM problems here, while complete results are available in the supplementary document. These plots reveal that the trajectories for our proposed method converge to a certain threshold, while those for the other methods not only diverge but also differ significantly on different problems. Based on this discussion, we use \(}=0.05\) as the capping point to guide the selection of the termination threshold for different termination methods: \(_{}[2,2.1]\), \(_{n}\), \(_{}[3.8 10^{-24},0.08]\), \(_{}[2 10^{-21},0.39]\), \(_{}[0.09,1.15]\). In our experiments, we apply the Latin hypercube design method  to choose three settings as listed in Section 3.2.

### Computational budget saving versus performance degradation

There is a trade-off when early terminating BO, i.e., the performance of BO can be compromised when using less FEs. In this subsection, we employ \(}\) and \(}\) to characterize such trade-off. From the comparison results shown in Figure 6 and Table 1, we can see that although the naive method achieves the best \(}\), it consumes almost all FEs. In contrast, our proposed method saves up to \( 80\%\) computation budget while the performance degradation is up to a order of magnitude smaller than the other three termination methods. As the trajectories of the regret of BO versus the number of FEs shown in Figure 7, we can see that the other three termination methods suffer from a premature early stopping.

Figure 5: Trajectories of different termination indicators versus the number of FEs during the BO process on Ackley (\(n=2\)) and HPO for SVM.

Figure 6: Bar charts with error bars of \(}\) and \(}\) obtained by using different settings of termination threshold suggested in Section 3.2, denoted as \(_{1}\), \(_{2}\) and \(_{3}\) respectively. Subplots (a) to (e) correspond to our proposed, Naïve, Nguyen’s, Lorenz’s, and Makarova’s methods respectively.

Figure 7: Trajectories of the regret of BO versus the number of FEs during the BO process on five selected problems. Full results can be found in the supplementary document.

[MISSING_PAGE_FAIL:9]

cost of BO remains challenging. Furthermore, these criteria do not leverage the information provided by the surrogate model, which is crucial in BO.

The third category primarily aims to balance exploration and exploitation in the optimization process. Among them, heuristic methods, exemplified by simulated annealing, are widely employed to halt the local search step of optimization algorithms [17; 1; 21]. However, such methods' hyperparameters lack interpretability and must be fine-tuned according to different problem characteristics. Additionally, McLeod _et al._ propose a regret-based strategy for switching between local and global optimization. Although promising for complex functions, this approach has certain limitations, including reliance on the authors' proposed regret reduction acquisition function and the potential need for additional computational resources to approximate intractable integrals. Furthermore, Eriksson _et al._ developed a trust-region-based BO that balances exploitation and exploration. This algorithm terminates local search when the trust region size is reduced to zero. However, the termination criteria lack theoretical guarantees and are bound to the proposed trust region maintenance mechanism.

## 6 Conclusion

In this paper, we developed a simple yet theoretically grounded two-step method for automatically terminating BO. The key insight is to proactively detect the local convex region and it terminates BO whenever the termination indicator built upon the local regret therein falls below a predetermined threshold. Our proposed termination method naturally strikes a balance between the quality of solution found by BO versus its computational efficiency. The proposed termination method is supported by robust theoretical underpinnings, and we have additionally introduced an approximation method to enhance the numerical stability by solving a bilevel optimization problem. Our extensive empirical studies, conducted across a variety of benchmark problems, including synthetic functions, reinforcement learning, and hyperparameter optimization, consistently demonstrated the better performance of our proposed method compared to other state-of-the-art techniques.

Besides, experimental results also show that the termination criterion of our proposed method is robust across different problems. This property paves an additional opportunity for our proposed termination method to go beyond automatically terminate BO, but to a broader range of applications, such as early stopping to avoid overfitting in neural network traing, change point or anomaly detection in data stream, and even a new perspective to strike the balance between exploitation and exploration under a bandit setting. The primary limitation of the proposed termination criterion is that it requires a predefined termination threshold, which needs to be determined based on prior knowledge or empirical observations. Although a recommended threshold selection range is given here, finding an optimal threshold that suits a wide range of optimization problems remains a challenge.

## Author Contributions

SL implemented the theoretical derivations and experiments, as well as drafted the manuscript; KL piloted the idea and re-wrote the manuscript; WL proofread the manuscript.