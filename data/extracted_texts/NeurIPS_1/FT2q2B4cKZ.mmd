# Markovian Sliced Wasserstein Distances: Beyond Independent Projections

Khai Nguyen

Department of Statistics and Data Sciences

The University of Texas at Austin

Austin, TX 78712

khainb@utexas.edu

&Tongzheng Ren

Department of Computer Science

The University of Texas at Austin

Austin, TX 78712

tongzheng@utexas.edu

&Nhat Ho

Department of Statistics and Data Sciences

The University of Texas at Austin

Austin, TX 78712

minhnhat@utexas.edu

###### Abstract

Sliced Wasserstein (SW) distance suffers from redundant projections due to independent uniform random projecting directions. To partially overcome the issue, max K sliced Wasserstein (Max-K-SW) distance (\(K 1\)), seeks the best discriminative orthogonal projecting directions. Despite being able to reduce the number of projections, the metricity of the Max-K-SW cannot be guaranteed in practice due to the non-optimality of the optimization. Moreover, the orthogonality constraint is also computationally expensive and might not be effective. To address the problem, we introduce a new family of SW distances, named _Markovian sliced Wasserstein_ (MSW) distance, which imposes a first-order Markov structure on projecting directions. We discuss various members of the MSW by specifying the Markov structure including the prior distribution, the transition distribution, and the burning and thinning technique. Moreover, we investigate the theoretical properties of MSW including topological properties (metricity, weak convergence, and connection to other distances), statistical properties (sample complexity, and Monte Carlo estimation error), and computational properties (computational complexity and memory complexity). Finally, we compare MSW distances with previous SW variants in various applications such as gradient flows, color transfer, and deep generative modeling to demonstrate the favorable performance of the MSW1.

## 1 Introduction

Sliced Wasserstein (SW)  distance has been well-known as a great alternative statistical distance for Wasserstein distance . In short, SW takes the average of Wasserstein distances between corresponding pairs of one-dimensional projected measures as the distance between the two original measures. Hence, the SW has a low computational complexity compared to the conventional Wasserstein distance due to the closed-form solution of optimal transport in one dimension. When the probability measures have at most \(n\) supports, the computational complexity of the SW is only \((n n)\). This complexity is much lower than the computational complexity \((n^{3} n)\) of Wasserstein distance and the complexity \((n^{2})\) of entropic Wasserstein  (Sinkhorndivergence). Moreover, the memory complexity of the SW is \((n)\) which is lower than \((n^{2})\) of the Wasserstein (Sinkhorn) distance. The reason is that SW does not need to store the cost matrix between supports which cost \((n^{2})\). An additional appealing property of the SW is that it does not suffer from the curse of dimensionality, namely, its sample complexity is \((n^{-1/2})\) compared to \((n^{-1/d})\) of the Wasserstein distance (\(d\) is the number of dimensions).

Due to the scalability, the SW has been applied to almost all applications where the Wasserstein distance is used. For example, we refer to some applications of the SW which are generative modeling , domain adaptation , clustering , approximate Bayesian computation , gradient flows , and variational inference . Moreover, there are many attempts to improve the SW. The generalized sliced Wasserstein (GSW) distance that uses non-linear projection is proposed in . Distributional sliced Wasserstein distance is proposed in  by replacing the uniform distribution on the projecting directions in SW with an estimated distribution that puts high probabilities for discriminative directions. Spherical sliced Wasserstein which is defined between distributions that have their supports on the hyper-sphere is introduced in . A sliced Wasserstein variant between probability measures over images with convolution is defined in .

Despite having a lot of improvements, one common property in previous variants of the SW is that they use independent projecting directions that are sampled from a distribution over a space of projecting direction e.g., the unit-hypersphere. Those projecting directions are further utilized to project two interested measures to corresponding pairs of one-dimensional measures. Due to the independence, practitioners have reported that many projections do not have the power to discriminative between two input probability measures . Moreover, having a lot of projections leads to redundancy and losing computation for uninformative pairs of projected measures. This problem is known as the projection complexity limitation of the SW.

To partially address the issue, the max sliced Wasserstein (Max-SW) distance is introduced in . Max-SW seeks the best projecting direction that can maximize the projected Wasserstein distance. Since the Max-SW contains a constraint optimization problem, the projected subgradient ascent algorithm is performed. Since the algorithm only guarantees to obtain local maximum , the performance of empirical estimation Max-SW is not stable in practice  since the metricity of Max-SW can be only obtained at the global optimum. Another approach is to force the orthogonality between projecting directions. In particular, K-sliced Wasserstein  (K-SW) uses \(K>1\) orthogonal projecting directions. Moreover, to generalize the Max-SW and the K-SW, max-K sliced Wasserstein (Max-K-SW) distance (\(K>1\)) appears in  to find the best \(K\) projecting directions that are orthogonal to each other via the projected sub-gradient ascent algorithm. Nevertheless, the orthogonality constraint is computationally expensive and might not be good in terms of reflecting discrepancy between general measures. Moreover, Max-K-SW also suffers from the non-optimality problem which leads to losing the metricity property in practice.

To avoid the independency and to satisfy the requirement of creating informative projecting directions efficiently, we propose to impose a _sequential structure_ on projecting directions. Namely, we choose a new projecting direction based on the previously chosen directions. For having more efficiency in computation, we consider _first-order Markovian_ structure in the paper which means that a projecting direction can be sampled by using only the previous direction. For the first projecting direction, it can follow any types of distributions on the unit-hypersphere that were used in the literature e.g., uniform distribution  and von Mises-Fisher distribution  to guarantee the metricity. For the transition distribution on the second projecting direction and later, we propose two types of family which are _orthogonal-based_ transition and _input-award_ transition. For the orthogonal-based transition, we choose the projecting direction uniformly on the unit hypersphere such that it is orthogonal to the previous direction. In contrast to the previous transition which does not use the information from the two input measures, the input-award transition uses the sub-gradient with respect to the previous projecting direction of the corresponding projected Wasserstein distance between the two measures to design the transition. In particular, the projected sub-gradient update is used to create the new projecting direction. Moreover, we further improve the computational time and computational memory by introducing the burning and thinning technique to reduce the number of random projecting directions.

**Contribution.** In summary, our contributions are two-fold:

1. We propose a novel family of distances on the space of probability measures, named _Markovian sliced Wasserstein_ (MSW) distances. MSW considers a first-order Markovianstructure on random projecting directions. Moreover, we derive three variants of MSW that use two different types of conditional transition distributions: _orthogonal-based_ and _input-award_. We investigate the theoretical properties of MSW including topological properties (metricity, weak convergence, and connection to other distances), statistical properties (sample complexity, and Monte Carlo estimation error), and computational properties (computational complexity and memory complexity). Moreover, we introduce a burning and thinning approach to further reduce computational and memory complexity, and we discuss the properties of the resulting distances.
2. We conduct experiments to compare MSW with SW, Max-SW, K-SW, and Max-K-SW in various applications, namely, gradient flows, color transfer, and deep generative models on standard image datasets: CIFAR10 and CelebA. We show that the input-award MSW can yield better qualitative and quantitative performance while consuming less computation than previous distances in gradient flows and color transfer, and comparable computation in deep generative modeling. Finally, we investigate the role of hyper-parameters of distances e.g., the number of projections, the number of time-steps, and so on, in applications.

**Organization.** We first provide background for Wasserstein distance, sliced Wasserstein distance, and max sliced Wasserstein distance in Section 2. In Section 3, we propose Markovian sliced Wasserstein distances and derive their theoretical properties. Section 4 contains the comparison of MSW to previous SW variants in gradient flows, color transfer, and deep generative modeling. We then conclude the paper in Section 5. Finally, we defer the proofs of key results in the paper and supplementary materials to Appendices.

**Notation.** For \(p 1\), \(_{p}(^{d})\) is the set of all probability measures on \(^{d}\) that have finite \(p\)-moments. For any \(d 2\), we denote \((^{d-1})\) is the uniform measure over the unit hyper-sphere \(^{d-1}:=\{^{d}||||_{2}^{2}=1\}\). For any two sequences \(a_{n}\) and \(b_{n}\), the notation \(a_{n}=(b_{n})\) means that \(a_{n} Cb_{n}\) for all \(n 1\), where \(C\) is some universal constant. We denote \(\) is the push-forward measures of \(\) through the function \(f:^{d}\) that is \(f(x)=^{}x\).

## 2 Background

We start with reviewing the background on Wasserstein distance, sliced Wasserstein distances, their computation techniques, and their limitations.

**Wasserstein distance.** Given two probability measures \(_{p}(^{d})\) and \(_{p}(^{d})\), the Wasserstein distance  between \(\) and \(\) is :

\[_{p}^{p}(,)=_{(,)}_{^{d} ^{d}}\|x-y\|_{p}^{p}d(x,y), \]

where \((,)\) is set of all couplings that have marginals are \(\) and \(\) respectively. The computational complexity and memory complexity of Wasserstein distance are \((n^{3} n)\) and \((n^{2})\) in turn when \(\) and \(\) have at most \(n\) supports. When \(d=1\), the Wasserstein distance can be computed with a closed form: \(_{p}^{p}(,)=_{0}^{1}|F_{}^{-1}(z)-F_{}^{-1}(z)|^{p}dz\), where \(F_{}\) and \(F_{}\) are the cumulative distribution function (CDF) of \(\) and \(\) respectively.

**Sliced Wasserstein distance.** By randomly projecting two interested high-dimensional measures to corresponding pairs of one-dimensional measures, sliced Wasserstein (SW) distance can exploit the closed-form benefit of Wasserstein distance in one dimension. The definition of sliced Wasserstein distance  between two probability measures \(_{p}(^{d})\) and \(_{p}(^{d})\) is:

\[_{p}^{p}(,)=_{(^{d-1} )}_{p}^{p}(,). \]

Monte Carlo samples are often used to approximate the intractable expectation unbiasedly:

\[}_{p}^{p}(,)=_{l=1}^{L}_{p}^{ p}(_{l},_{l}), \]

where \(_{1},,_{L}\) are drawn randomly from \((^{d-1})\). When \(\) and \(\) are discrete measures that have at most \(n\) supports in \(d\) dimension, the computational complexity of SW is \((Ln_{2}n+Ldn)\) and the memory complexity for storing the projecting directions and the projected supports is \((L(d+n))\)Here, \(Ln_{2}n\) is for sorting \(L\) sets of projected supports and \(Ld\) is for projecting supports to \(L\) sets of scalars.

**Max sliced Wasserstein distance.** To select the best discriminative projecting direction, the max sliced Wasserstein (Max-SW) distance  between \(_{p}(^{d})\) and \(_{p}(^{d})\) is introduced as follows:

\[_{p}(,)=_{^{d-1}}W_{p}( ,). \]

Computing Max-SW requires solving the constrained optimization problem. In practice, the projected sub-gradient ascent algorithm with \(T>1\) iterations is often used to obtain a surrogate projecting direction \(_{T}\) for the global optimum. Hence, the empirical Max-SW distance is \(_{p}(,)=W_{p}(_{T},_{T} )\). The detail of the projected sub-gradient ascent algorithm is given in Algorithm 1 in Appendix A.1. The computational complexity of Max-SW is \((Tn_{2}n+Tdn)\) and the memory complexity of Max-SW is \((d+n)\). It is worth noting that the projected sub-gradient ascent can only yield local maximum . Therefore, the empirical Max-SW might not be distance even when \(T\) since the metricity of Max-SW can be only obtained at the global maximum.

**K-sliced Wasserstein distance.** The authors in  propose to estimate the sliced Wasserstein distance based on orthogonal projecting directions. We refer to the distance as K-sliced Wasserstein distance (K-SW). The definition of K-SW between two probability measures \(_{p}(^{d})\) and \(_{p}(^{d})\) is:

\[_{p}^{p}(,)=[_{i= 1}^{K}_{p}^{p}(_{i},_{i})], \]

where the expectation is with respect to \((_{1},,_{K})(_{k}(^{d}))\) with \(_{K}(^{d})=\{(_{1},,_{K})^{d -1}|_{i},_{j}=0\  i,j K\}\) is the Stiefel manifold. The expectation can be approximated with Monte Carlo samples \((_{1},,_{Kl})_{l=1}^{L}\) from \((_{K}(^{d}))\). In the original paper, \(L\) is set to 1. To sample from the uniform distribution over the Stiefel manifold \((_{k}(^{d}))\), it requires using the Gram-Schmidt orthogonality process which has the computational complexity \((K^{2}d)\) (quadratic in \(K\)). Therefore, the total computational complexity of K-SW is \((LKn_{2}n+LKdn+LK^{2}d)\) and the memory complexity of K-SW is \((LK(d+n))\). More detail related to K-SW including Gram-Smith process and sampling uniformly from the Stiefel manifold is given in Appendix A.1.

**Max K sliced Wasserstein distance.** To generalize both Max-SW and K-SW, Max K sliced Wasserstein is introduced in . Its definition between \(_{p}(^{d})\) and \(_{p}(^{d})\) is:

\[_{p}^{p}(,)=_{(_{1},, _{K})_{K}(^{d})}[_{i=1}^{K} _{p}^{p}(_{i},_{i})]. \]

Similar to Max-SW, a projected sub-gradient ascent algorithm with \(T>1\) iterations is used to approximate Max-K-SW. We refer the reader to Algorithm 4 in Appendix A.1 for greater detail. Since the projecting operator to the Stiefel manifold is the Gram-Smith process, the computational complexity of Max-K-SW is \((TKn_{2}n+TKdn+TK^{2}d)\). The memory complexity of Max-K-SW is \((K(d+n))\). Similar to Max-SW, the metricity of Max-K-SW is only obtained at the global optimum, hence, the empirical estimation might not be stable. Moreover, the orthogonality constraint is also computationally expensive i.e., quadratic in terms of the number of orthogonal projections \(K\).

## 3 Markovian Sliced Wasserstein distances

We first define _Markovian sliced Wasserstein_ (MSW) distance and discuss its theoretical properties including topological properties, statistical properties, and computational properties in Section 3.1. In Section 3.2, we discuss some choices in designing the Markov chain including the prior distribution and the transition distribution. Finally, we discuss the burning and thinning variant of MSW which can reduce the computational and memory complexity in Section 3.3.

### Definitions, Topological, Statistical, and Computational Properties

We first start with a general definition of Markovian sliced Wasserstein distance in Definition 1.

**Definition 1**.: _For any \(p 1\), \(T 1\), and dimension \(d 1\), the Markovian sliced Wasserstein of order \(p\) between two probability measures \(_{p}(^{d})\) and \(_{p}(^{d})\) is:_

\[^{p}_{p,T}(,)=_{(_{1:T})(_{1:T })}[_{t=1}^{T}W^{p}_{p}(_{t},_{t })], \]

_where \(T\) is the number of time steps, the expectation is under the projecting distribution \(_{1:T}(_{1:T})\) with \((_{1:T})=(_{1},,_{T})=_{1}(_{1 })_{t=2}^{T}_{t}(_{t}|_{t-1})\), and \(_{1}(_{1}),_{t}(_{t}|_{t-1})( ^{d-1})\) for all \(t=1,,T\)._

The first projecting direction \(_{1}\) follows the distribution \(_{1}(_{1})\) with \(_{1}(_{1})\) to be any distributions on the unit hyper-sphere, e.g., the uniform distribution, a von Mises-Fisher distribution, and so on. By designing the transition distribution \(_{t}(_{t}|_{t-1})\), we can obtain various variants of MSW. It is worth noting that the MSW can be rewritten as the average of \(T\) expectation of one-dimensional Wasserstein distance, \(^{p}_{p,T}(,)=_{t=1}^{T}_{_{t} _{t}(_{t})}[W^{p}_{p}(_{t},_{t} )]\), however, \(_{t}(_{t})=_{i=1}^{t}_{1}(_{1})_{l=2}^{ t}_{t^{}}(_{t^{}}|_{t^{}-1})d_{1} d _{t-1}\) are not the same for \(t=1,,T\). Moreover, sampling directly from \(_{t}(_{t})\) is intractable, hence, using the definition of the MSW in Definition 1 is more reasonable in terms of approximating the expectation using Monte Carlo samples.

**Monte Carlo estimation.** Similar to SW, we also need to use Monte Carlo samples to approximate the expectation in Definition 1. We first samples \(_{11},,_{L1}_{1}(_{1})\) for \(L 1\), then we samples \(_{lt}_{t}(_{t}|_{lt-1})\) for \(t=1,,T\) and \(l=1,,L\). After that, we can form an unbiased empirical estimation of MSW as follows: \(}^{p}_{p,T}(,)=_{l=1}^{L}_{t=1}^{ T}^{p}_{p}(_{lt},_{lt})\).

Before going to the specific design of those distributions, we first discuss the empirical estimation of MSW, and investigate its theoretical properties including topological properties, statistical properties, and computational properties.

**Topological Properties.** We first state the following assumption: **A1**. _In MSW, the prior distribution \(_{1}(_{1})\) is supported on all the unit-hypersphere or there exists a transition distribution \(_{t}(_{t}|_{t-1})\) being supported on all the unit-hypersphere._ The assumption **A1** is easy to satisfy and it holds for all later choices of the prior distribution and transition distribution. We now consider the metricity properties of the Markovian sliced Wasserstein distance.

**Theorem 1** (Metricity).: _For any \(p 1\), \(T 1\), and dimension \(d 1\), if **A1** holds, Markovian sliced Wasserstein \(_{p,T}(,)\) is a valid metric on the space of probability measures \(_{p}(^{d})\), namely, it satisfies the (i) non-negativity, (ii) symmetry, (iii) triangle inequality, and (iv) identity._

The proof of Theorem 1 is in Appendix B.1. Next, we show that the convergence in MSW implies the weak convergence of probability measures and the reverse also holds.

**Theorem 2** (Weak Convergence).: _For any \(p 1\), \(T 1\), and dimension \(d 1\), if **A1** holds, the convergence of probability measures in \(_{p}(^{d})\) under the Markovian sliced Wasserstein distance \(_{p,T}(,)\) implies weak convergence of probability measures and vice versa._

Theorem 2 means that for any sequence of probability measures \((_{k})_{k}\) and \(\) in \(_{p}(^{d})\), \(_{k+}_{p,T}(_{k},)=0\) if and only if for any continuous and bounded function \(f:^{d}\), \(_{k+} f\,_{k}= f\,\). The proof of Theorem 2 is in Appendix B.2. Next, we discuss the connection of MSW to previous sliced Wasserstein variants.

**Proposition 1**.: _For any \(p 1\) and dimension \(d 1\),_

_(i) For any \(T 1\) and \(,_{p}(^{d})\), \(_{p,T}(,)_{p}(,) W_{p}(,)\)._

_(ii) If \(T=1\) and the prior \(_{1}(_{1}):=(^{d-1})\), \(_{p,T}(,)=_{p}(,)\)._

The proof of Proposition 1 is in Appendix B.3.

**Statistical Properties.** We investigate the sample complexity (empirical estimation rate) of the MSW.

**Proposition 2** (Sample Complexity).: _Let \(X_{1},X_{2},,X_{n}\) be i.i.d. samples from the probability measure \(\) being supported on compact set of \(^{d}\). We denote the empirical measure \(_{n}=_{i=1}^{n}_{X_{i}}\). Then, for any \(p 1\) and \(T 1\), there exists a universal constant \(C>0\) such that \([_{p,T}(_{n},)] C,\) where the outer expectation is taken with respect to the data \(X_{1},X_{2},,X_{n}\)._

The proof of Proposition 2 is in Appendix B.4. The proposition suggests that MSW does not suffer from the curse of dimensionality. Next, we investigate the MSW's Monte Carlo approximation error.

**Proposition 3** (Monte Carlo error).: _For any \(p 1\), \(T 1\), dimension \(d 1\), and \(,_{p}(^{d})\), we have: \([}_{p,T}^{p}(,)-_{p,T}^{p}(, )]\,\,}[_{t=1}^{T}W_{p}^{p}( _{t},_{t})]^{},\) where the variance is with respect to \((_{1},,_{T})\)._

The proof of Proposition 3 is in Appendix B.5. From the above proposition, we know that increasing the number of projections \(L\) reduces the approximation error.

**Computational Properties.** When \(\) and \(\) are two discrete probability measures in \(_{p}(^{d})\) that have at most \(n\) supports, the computational complexity for the Monte Carlo approximation of MSW is \((TLn_{2}n+TLdn)\) where \((TLn n)\) is for computation of \(TL\) one-dimensional Wasserstein distances and \((TLdn)\) is the projecting complexity for \(TL\) projections from \(d\) dimension to \(1\) dimension. The memory complexity of MSW is \((TL(d+n))\) for storing the projecting directions and the projections.

### Specific Choices of Projecting Distributions

Designing the projecting distribution \((_{1},,_{T})\) is the central task in using MSW since it controls the projecting behavior. For each choice of the \((_{1},,_{T})\), we obtain a variant of MSW. Since we impose the first order Markov structure \((_{1},,_{T})=_{1}(_{1})_{t=2}^{T} _{t}(_{t}|_{t-1})\), there are two types of distributions that we need to choose: the _prior distribution_\(_{1}(_{1})\) and the _transition distribution_\(_{t}(_{t}|_{t-1})\) for all \(t=2,,T\).

**Prior distribution.** The most simple choice of \(_{1}(_{1})\) when we know nothing about probability measures that we want to compare is the uniform distribution over the unit hypersphere \((^{d-1})\). Moreover, the metricity of MSW is guaranteed regardless of the transition distribution with this choice. Therefore, the uniform distribution is the choice that we use in our experiments in the paper. It is worth noting that we could also use a distribution that is estimated from two interested probability measures ; however, this approach costs more computation.

**Transition distribution.** We discuss some specific choices of the transition distributions \(_{t}(_{t}|_{t-1})\). Detailed algorithms for computing MSW with specific transitions are given in Appendix A.3.

_Orthogonal-based transition._ Motivated by the orthogonality constraint in Max-K-SW and K-SW, we can design a transition distribution that gives us an orthogonal projecting direction to the previous one. In particular, given a previous projecting direction \(_{t-1}\), we want to have \(_{t}\) such that \(_{t},_{t-1}=0\), namely, we want to sample from the subspace \(_{_{t-1}}^{d-1}:=\{_{t}^{d-1}| _{t},_{t-1}=0\}\). To the best of our knowledge, there is no explicit form of distribution (known pdf) that is defined on that set. However, we can still sample from the uniform distribution over that set: \((_{_{t-1}}^{d-1})\) since that distribution can be constructed by pushing the uniform distribution over the whole unit hypersphere \((^{d-1})\) through the projection operator: \(_{_{t-1}}(_{t})=_{^{d-1}}( _{t}-,_{t})}{(_{t-1},_{t-1})} _{t-1})\) where \(_{^{d-1}}()=}\) is the normalizing operator. In a greater detail, we first sample \(_{t}^{}(^{d-1})\) and then set \(_{t}=_{_{t-1}}(_{t}^{})\). Therefore, we have \(_{t}(_{t}|_{t-1})=(_{t-1}^{d-1})= _{_{t-1}}(^{d-1})\).

_Input-award transition._ The above two transition distributions do not take into account the information of the two probability measures \(\) and \(\) that we want to compare. Hence, it could be inefficient to explore good projecting directions by comparing \(\) and \(\). Motivated by the projected sub-gradient ascent  update in finding the "max" projecting direction, we could design the transition distribution as follows: \(_{t}(_{t}|_{t-1})=_{f(_{t-1}|,,)}\) where \(\) denotes the Dirac Delta function and the transition function \(f(_{t-1}|,,)=_{^{d-1}}(_{t-1}+ _{_{t-1}}W_{p}(_{t-1},_{t-1} )),\) with \(>0\) is the stepsize hyperparameter. As the current choice is a deterministic transition, it requires the priordistribution to have supports on all \(^{d-1}\) to obtain the metricity for MSW. A choice to guarantee the metricity regardless of the prior distribution is the von Mises-Fisher (vMF) distribution , namely, \(_{t}(_{t}|_{t-1})=(_{t}|=f(_{t-1 }|,,),)\). The details about the vMF distribution including its probability density function, its sampling procedure, and its properties are given in Appendix A.2. In summary, the vMF distribution has two parameters: the location parameter \(^{d-1}\) which is the mean, and the concentration parameter \(^{+}\) which plays the role as the precision. Thank the interpolation properties of the vMF distribution: \(_{ 0}(|,)=(^{d-1})\) and \(_{}(|,)=_{}\), the transition distribution can balance between heading to the "max" projecting direction and exploring the space of directions.

**Stationarity of \(_{T}(_{T})\).** A natural important question arises: what is the distribution of \(_{T}(_{T})=(_{1},,_{T})d _{1} d_{T-1}\) when \(T\)? The answer to the above questions depends on the choice of the projection distribution which is discussed in Section 3.2. For the _Orthogonal-based_ transitions and the uniform distribution prior, it is unclear whether the stationary distribution exists. For the deterministic _Input-awarded_ transition and the uniform prior, we have \(_{T}_{T}(_{T})=_{a=1}^{A}_{a}_{_ {a}^{*}}\) with \(_{a=1}^{A}_{a}=1\) where \(_{a}^{*}\) (\(a=1,,A\)) are local maximas of the optimization problem \(_{^{d-1}}_{p}(_{},_{ })\) and some unknown weights \(_{a}\) that depend on \(\) and \(\). This property is due to the fact that the projected sub-gradient ascent can guarantee local maxima convergence . For the _Input-awarded_ vMF transition, it is also unclear if the stationary distribution exists when the parameter \(<\).

### Burning and Thinning

In the definition of MSW in Definition 1, we take the expectation on the joint distribution over all timesteps \((_{1:T})\) which leads to the time and memory complexities to be linear with \(T\) in the Monte Carlo approximation. Therefore, we can adapt the practical technique from MCMC methods which is burning and thinning to reduce the number of random variables while still having the dependency.

**Definition 2**.: _For any \(p 1\), \(T 1\), dimension \(d 1\), the number of burned steps \(M 0\), and the number of thinned steps \(N 1\), the burned thinned Markovian sliced Wasserstein of order \(p\) between two probability measures \(_{p}(^{d})\) and \(_{p}(^{d})\) is:_

\[^{p}_{p,T,N,M}(,)=[_{t=1}^{(T- M)/N}W^{p}_{p}(^{}_{t},^{}_{t} )], \]

_where the expectation is under the projection distribution \(^{}_{1:N(T-M)}(^{}_{1:N(T-M)})\) with \((^{}_{1:N/(T-M)})\) being the marginal distribution which is obtained by integrating out random projecting directions at the time step \(t\) such that \(t M\) or \(t\%N 0\) from \((_{1},,_{T})=_{1}(_{1})_{l=2}^{T} _{t}(_{t}|_{t-1})\) for all \(t=1,,T\)._

Similar to MSW, the burned-thinned MSW is also a metric on \(_{p}(^{d})\) when there exists a time step \(t\) that is not burned, is not thinned, and \(_{t}\) is a random variable that has the supports on all \(^{d-1}\). We discuss more details about the burned-thinned MSW including its topological and statistical properties in Appendix A.4. The Monte Carlo estimation of the burned-thinned MSW is given in Equation 10 in Appendix A.4. The approximation is the average of the projected Wasserstein distance from \(_{tl}\) with \(t M\) and \(t\%N=0\). By reducing the number of random projecting directions, the computational complexity of the burned-thinned MSW is improved to \((((T-M)Ln_{2}n+(T-M)Ldn)/N)\) in the orthogonal-based transitions. In the case of the input-awarded transition, the computational complexity is still \((TLn_{2}n+TLdn)\) since the transition requires computing the gradient of the projected Wasserstein distance. However, in all cases, the memory complexity is reduced to \(((T-M)L(d+n)/N)\).

**Burned thinned MSW is the generalization of Max-SW.** the empirical computation of Max-SW  with the projected sub-gradient ascent and uniform random initialization can be viewed as a special case of burned thinned MSW with the input-awarded transition and with the number of burned samples \(M=T-1\). The difference is that Max-SW uses only one local maximum to compute the distance while the burned thinned MSW uses \(L 1\) maximums (might not be unique).

**More discussions.** We refer the reader to Appendix A.5 for other related discussions e.g., "K-SW is autoregressive decomposition of projecting distribution", "sequential generalization of Max-K-SW", and related literature.

## 4 Experiments

In this section, we refer MSW with orthogonal-based transition as oMSW, MSW with input-award transition as iMSW (using the Dirac distribution) and viMSW (using the vMF distribution). We compare MSW variants to SW, Max-SW, K-SW, and Max-K-SW in standard applications e.g., gradient flows, color transfer, and deep generative models. Moreover, we also investigate the role of hyperparameters, e.g., concentration parameter \(\), the number of projections \(L\), the number of time steps \(T\), the number of burning steps \(M\), and the number of thinning steps \(N\) in applications.

### Gradient Flows and Color Transfer

**Gradient flows.** We follow the same setting in . The gradient flow models a distribution \((t)\) flowing with time \(t\) along the gradient flow of a loss functional \((t)((t),)\) that drives it towards a target distribution \(\) where \(\) is a given distance between probability measures. In this setup, we consider \(=_{i=1}^{n}_{Y_{i}}\) as a fixed empirical target distribution and the model distribution \((t)=_{i=1}^{n}_{X_{i}(t)}\). Here, the model distribution is parameterized by a time-varying point cloud \(X(t)=(X_{i}(t))_{i=1}^{n}(^{d})^{n}\). Starting from an initial condition at time \(t=0\), we integrate the ordinary differential equation \((t)=-n_{X(t)}[(_{i=1}^{n} _{X_{i}(t)},)]\) for each iteration. In the experiments, we utilize the Euler scheme with \(300\) timesteps and the step size is \(10^{-3}\) to move the empirical distribution over colorful 1000 points \((0)\) to the distribution over S-shape 1000 points (\(\)) (see Figure 1). For Max-SW, Max-K-SW, iMSW, and viMSW, we use the learning rate parameter for projecting directions \(=0.1\). We report the Wasserstein-2 distances between the empirical distribution \((t)\) and the target empirical distribution \(\), and the computational time in Table 1. We also give the visualization of some obtained flows in Figure 1. We refer the reader to Figure 4 in Appendix C.1 for the full visualization of all flows and detailed algorithms. We observe that iMSW

Figure 1: The figures show the gradient flows that are from the empirical distribution over the color points to the empirical distribution over S-shape points. The corresponding Wasserstein-2 distance between the empirical distribution at the current step and the S-shape distribution and the computational time (in seconds) to reach the step is reported at the top of the figure.

Figure 2: The figures show the source image, the target image, and the transferred images from different distances. The corresponding Wasserstein-2 distance between the empirical distribution over transferred color palates and the empirical distribution over the target color palette and the computational time (in second) are reported at the top of the figure.

gives better flows than SW, Max-SW, K-SW, and Max-K-SW. Namely, the empirical distribution \((t)\) (\(t=300\)) with iMSW is closer to \(\) in terms of Wasserstein distance. More importantly, iMSW consumes less computation than its competitors since it can use a smaller number of projections due to more informative projecting directions. Furthermore, viMSW gives better final results than iMSW, however, the trade-off is doubling the time computation due to the sampling step of vMF distribution. In this case, K-SW is equivalent to our oMSW with T=K=2 since the dimension \(d=2\). We refer the reader to Appendix C.1 for more discussion.

**Studies on hyperparameters.** From Table 3 in Appendix C.1, increasing the number of projections \(L\) yields better performance for SW, K-SW, and iMSW. Similarly, increasing the number of timesteps \(T\) also helps Max-SW and iMSW better. Moreover, we find that for the same number of total projections e.g., \(L=5,T=2\) and \(T=2,L=5\), a larger timestep \(T\) might lead to a better result for iMSW. For burning and thinning, we see that they help to reduce the computation while the performance stays comparable or even better if choosing the right value of \(M\) and \(N\). Also, iMSW the burning steps \(M=T-1\) is still better than Max-SW with \(T\) time steps. For the concentration parameter \(\) in viMSW, the performance of viMSW is not monotonic in terms of \(\).

**Color transfer.** We aim to transfer the color palate (RGB) of a source image to the color palette (RGB) target image. Therefore, it is natural to build a gradient flow that starts from the empirical distribution over the color palette of the source image to the empirical distribution over the color palette of the target image. Since the value of color palette is in the set \(\{0,,255\}^{3}\), we round the value of the supports of the empirical distribution at the final step of the Euler scheme with 2000 steps and \(10^{-3}\) step size. Greater detail can be found in Appendix C.2. For Max-SW, Max-K-SW, iMSW, and viMSW, we use the learning rate parameter for projecting directions \(=0.1\). We show the transferred images, the corresponding Wasserstein-2 distances between the empirical distribution over the transferred color palette and the empirical distribution over the target color palette, and the corresponding computational time in Figure 2. From the figures, iMSW and viMSW give the best transferred images quantitatively and qualitatively. Moreover, oMSW is comparable to SW, Max-SW, K-SW, and are better than Max-K-SW while consuming much less computation. We refer the reader to Figure 5 in Appendix C.2 for the color palette visualization and to Figure 6 for another choice of the source and target images. We also conduct studies on hyperparameters in Appendix C.2 where we observe some similar phenomenons as in gradient flow.

\(\{10,100\},T\{10,100\}\)), iMSW and viMSW (\(\{0.01,0.1\}\)), and viMSW and (\(\{10,50\}\)). We report the best FID score and the best IS score for each distance in Table 2. In addition, we show how scores change with respect to the training epochs in Figure 3. Overall, we observe that viMSW and iMSW give the best generative performance in terms of the final scores and fast convergence on CIFAR10 and CelebA. The oMSW gives comparable results to baselines. Since most computation in training deep generative models is for updating neural networks, the computational time for distances is almost the same. Furthermore, we show some generated images on CelebA in Figure 3 and all generated images on CIFAR10 and CelebA in Figure 7 and Figure 8 in Appendix C.3. We visually observe that the qualitative results are consistent with the quantitative results in Table 2.

**Studies on hyperparameters.** We conduct experiments to understand the behavior of the burning and thinning technique, and to compare the role of \(L\) and \(T\) in Table 5 in Appendix C.3. Overall, burning (thinning) sometimes helps to improve the performance of training generative models. There is no clear sign of superiority between burning and thinning. We compare two settings of the same number of total projections (same complexities): \(L=10,T=100\) and \(L=100,T=10\). On CIFAR10, the first setting is better while the reverse case happens on CelebA.

## 5 Conclusion

We have introduced the Markovian sliced Wasserstein (MSW), a novel family of sliced Wasserstein (SW) distances, which imposes a first-order Markov structure on projecting directions. We have investigated the theoretical properties of MSW including topological properties, statistical properties, and computational properties. Moreover, we have discussed three types of transition distribution for MSW, namely, orthogonal-based, and input-award transitions. In addition, we have proposed a burning and thinning technique to improve the computational time and memory of MSW. Finally, we have compared MSW to previous variants of SW in gradient flows, color transfer, and generative modeling to show that MSW distances are both effective and efficient.