# Scaling Law for Time Series Forecasting

Jingzhe Shi\({}^{1}\)1, Qinwei Ma\({}^{1}\)1, Huan Ma\({}^{2}\), Lei Li\({}^{3,4}\)1

\({}^{1}\) Institute for Interdisciplinary Information Sciences, Tsinghua University

\({}^{2}\) Zhili College, Tsinghua University

\({}^{3}\) University of Copenhagen \({}^{4}\) University of Washington

\({}^{1,2}\) {shi-jz21,mqw21,mah21}@mails.tsinghua.edu.cn, \({}^{3,4}\) lilei@di.ku.dk

Equal Contribution.

###### Abstract

Scaling law that rewards large datasets, complex models and enhanced data granularity has been observed in various fields of deep learning. Yet, studies on time series forecasting have cast doubt on scaling behaviors of deep learning methods for time series forecasting: while more training data improves performance, more capable models do not always outperform less capable models, and longer input horizons may hurt performance for some models. We propose a theory for scaling law for time series forecasting that can explain these seemingly abnormal behaviors. We take into account the impact of dataset size and model complexity, as well as time series data granularity, particularly focusing on the look-back horizon, an aspect that has been unexplored in previous theories. Furthermore, we empirically evaluate various models using a diverse set of time series forecasting datasets, which (1) verifies the validity of scaling law on dataset size and model complexity within the realm of time series forecasting, and (2) validates our theoretical framework, particularly regarding the influence of look back horizon. We hope our findings may inspire new models targeting time series forecasting datasets of limited size, as well as large foundational datasets and models for time series forecasting in future work.2

## 1 Introduction

Because of the practical value of time series forecasting, past years have seen rapid development for time series forecasting methods using the paradigm of neural network training. Neural Nets utilize different model architectures, including FFN-based , Transformer-based  and Convolution-based  neural nets have been proposed. Starting from around 2022, some previous work  proposed that powerful models could be enhanced by extending the look-back horizon because more historical information can be utilized. However, our experiments (Figure 3) show that **this claim may not hold for datasets in practice with a certain amount of training data**: optimal horizon does exist, and it will increase if the amount of available training data increases. This calls for a more thorough understanding of the impact of horizon and dataset size on forecasting loss.

In Natural Language Processing (NLP) , Computer Vision (CV)  and other fields in deep learning, the impact of dataset size, model size and data granularity on performance is sometimes summarized as the Scaling Law: larger dataset, larger models and more detailed data granularity improves performance in these cases, and theories  have been proposed to explain these behaviors. **However, these theories do not lay emphasis on the horizon of time series**, hence cannot be used directly to explain the impact of the horizon.

In this work, we introduce a comprehensive scaling law theory for time series forecasting, with a particular emphasis on the impact of the horizon. This theory integrates dataset size and model size to optimize predictive performance based on the look-back horizon. We further conduct experiments to (1) verify that scaling behaviors for dataset size and model size do exist in time series forecasting and (2) validate our theory, especially about the influence of different horizons.

Our main contribution regarding time series forecasting includes:

1. We introduce a novel theoretical framework that elucidates scaling behaviors from an intrinsic space perspective, highlighting the critical influence of the look-back horizon on model performance. Our theory identifies an optimal horizon, demonstrating that beyond this point, performance degrades due to the inherent limitations of dataset size.
2. We conduct a comprehensive empirical investigation into the scaling behaviors of dataset size, model size, and look-back horizon across various models and datasets. Our research establishes a robust scaling law for time series forecasting, providing a foundational framework that adapts to diverse modeling contexts.

As a corollary to our conclusions, we point out that different models might have different optimal look-back horizon for the same dataset (Figure 1); therefore, **we call for future work to compare different models using the optimal look-back horizon for each model correspondingly rather than using a fixed look-back horizon**.

As a further result of our findings, though widely used in previous work, **to show a model benefits from longer horizon compared to baseline models is unnecessary for proving its superiority over these baseline models**.

We hope our work may inspire future work when designing forecasting models for specific datasets of limited size, as well as future work proposing large foundational datasets and models in the field of time series.

## 2 Related Work

### Time Series Forecasting

The task of time series forecasting is to predict a time series with \(N\) variables in its next \(S\) frames (denoted as \(Y=\{y_{1},y_{2},,y_{N}\}^{N S}\)) given its previous observations with \(H\) frames (denoted as \(X=\{x_{1},x_{2},,x_{N}\}^{N H}\)). \(H\) is called look back horizon in some scenarios.

Channel-Independent model means to predict \(y_{i}\) by \(}=f(x_{i})\). Linear models and MLPs have been proven to be effective learners for time series forecasting. A series of work [1; 3; 17] utilizes linear layers and methods like low-pass-filter and Ordinary Least Squares regression to learn linear relationships in the time series. Reversible MLP  proposes to use linear layers and MLPs with reversible Instance Norm  and obtains satisfying results. PatchTST  proposes to use patch embedding for time series.

Channel-Dependent model means to predict \(y\) by \(}=[f(x_{1},x_{2},,x_{N})]_{i}\). A series of works based on Transformers and its variants have been proposed[4; 5; 6], as well as a series of convolution-based methods based on TCN[20; 21]. More recently, iTransformer  proposes to use attention to capture the relationship between different variables. ModernTCN  proposes new convolutional architectures enabling a wide Effective Receptive Field.

There have been many works analyzing on mathematical properties of time series before machine learning exists. [22; 23] give good summaries of the early works from different perspectives.

Recently, there have been works proposing large foundational datasets and models for time series. Some propose foundational models that can do zero-shot forecasting. Some propose open-source foundational datasets and verify the ability for transfer learning of foundation models trained on the datasets[25; 26].3 There are also works utilizing LLMs to do zero-shot prediction, or use LLM backbones pretrained on text contexts to perform time series forecasting[29; 30; 31].

### Scaling Law and related Theory

A plethora of research has been conducted to investigate the scaling law in various domains of deep learning, encompassing Natural Language Processing, Computer Vision tasks, and Graph-based Neural Networks [12; 13; 14; 32]. These studies have not only observed the existence of scaling law but also proposed theories to elucidate them. For instance, certain work has interpreted the scaling behavior from the standpoint of intrinsic space or data manifold, providing a deeper understanding of the underlying mechanisms [15; 16]. In parallel, the properties of time series have been the subject of extensive theoretical and empirical studies. Notably, some research has established bounds for the quantization error of time series, contributing to the body of knowledge on time series analysis .

## 3 Theory for Scaling Law in Time Series Forecasting

### Forecasting in Intrinsic Space

To represent the amount of information carried by a time series slice of length \(L\), we consult the concept of intrinsic dimension and intrinsic space. Consider all time series slices of length \(L\) in a particular scenario, these slices are hypothesized to reside within an intrinsic space that encapsulates the fundamental characteristics of the data, effectively representing its inherent features. Denote this intrinsic space as \((L)\) and its intrinsic dimension as \(d_{I}(L)\).

It immediately follows that **time series forecasting is equivalent to predicting a vector in \((S)\) given its previous \(H\) frames, which can be represented by a vector in the space \((H)\)**.

### Formulation

Before studying the impact of horizon, dataset size and model on loss, we first formulate the intrinsic space, the data distribution and the form of the loss.

#### 3.2.1 Intrinsic Space

For a time series \(s_{0,1,,L}\) of length \(L\) (each \(s_{i}\) is a unit element in the sequence that may contain single or multiple variables, dependent or independent), we represent it using a vector \(x\) in \((L)\).

We make these assumptions on the spaces \(\{(1),(2),\}\) and the distribution of data in the spaces:

1. **Information-preserving**: Intuitively speaking, we should be able to recover the real sequence (which might be a multivariable sequence or a singlevariable sequence) from its corresponding intrinsic vector with the error bounded by a small constant value. Formally we can state this as follows: _Exists a mapping \(\) from the original length-\(L\) sequence space \((L)\) to \((L)\), an inverse mapping \(^{-1}:(L)(L)\) and a constant \(e 1\) related to \(L\) so that for any \(_{x(L)}\), \(\|x-^{-1}((x))\|_{2}^{2} e(L)\)._
2. **Inverse Lipschitz**: \(^{-1}\) should be \(K_{I}\)-Lipschitz under L2 norm. That is: \[ x,y(L),\|^{-1}(x)-^{-1}(y)\|_{2} K_{I}\|x-y \|_{2}\]
3. **Bounded**: For simplicity, we assume the values in all dimensions of the intrinsic space are bounded, and thus we can scale the intrinsic space to fit it into \((H)=^{d_{I}(H)}\).
4. **Isomorphism**: \((L_{1})\) is isomorphic to a subspace of \((L_{2})\) for \(L_{1} L_{2}\). Moreover, the isometry should also preserve the data distribution in the space. Formally, we can state it as: _Let \(P[H_{1},H_{2}]\) denote the linear projection from \((H_{1})\) to the subspace of it isomorphic to \((H_{2})\), and let \(Cov_{L}\) denote the covariance matrix of data distribution in \((L)\), then \(Cov_{L_{1}}\) should be congruent to \(P[L_{2},L_{1}](Cov_{L_{2}})\) for any \(L_{1}<L_{2}\).
5. **Linear Truncation**: Truncation in time series space is close to linear projection mapping in \((L)\). Formally, we can state it as:_Define a truncating function_ \(t_{p}[H_{1},H_{2}](x_{0:H_{1}})\)_, so that for any sequence_ \(s\)_, let_ \(s_{h_{1}:h_{2}}\) _denote the intrinsic vector for the subsequence from_ \(s[h_{1}]\) _to_ \(s[h_{2}-1]\)_, then_ \(t_{p}[H_{1},H_{2}](s_{0:H_{1}})=s_{0:H_{2}}\)_, then_ \(t_{p}[H_{1},H_{2}] P[H_{1},H_{2}]\)_._
6. **Causality**: There should be an optimal model to predict the next \(S\) frames given the previous \(h\) frames, so that the error only originates from the intrinsic noise. That is: \[ F[S]:(S),s.t._{h}(y x _{-h:0})=(1-)(F[S](x_{-h:0}))+(F[S](x_{-h:0}),_{ S}),\] where \(\) stands for the noise ratio in the system, \(()\) stands for the Dirichlet function and \((,)\) stands for a normal distribution with mean \(\) and covariance \(\). (Notice that the noise distribution is not necessarily a normal distribution and our result holds for any noise distribution with mean \(\) and covariance \(\). However we only consider the normal distribution case here for simplicity.) Moreover, we assume \(F[S]\) is first-order \(K_{1}\)-Lipschitz and second-order \(K_{2}\)-Lipschitz in \(L_{2}\) metric (as we assume \(S\) is fixed we don't discuss how the Lipschitz coefficients vary with \(S\) and simply take them as constant).
7. **Uniform Sampling Noise**: When drawing a length-\(L\) sample, we assume the sampling noise is uniform in each direction in \((L)\).
8. **Zip-f Distribution**: We assume the data distribution in the intrinsic space follows a Zip-f law on different dimensions of the intrinsic space. That is, the eigenvalue spectrum of \(Cov_{L}\) satisfies \(_{i}_{0}i^{-_{Z}}\) where \(_{i}\) represents the \(i\)-th largest eigenvalue. This is shown by other work  and also verified in our experiments.

This result is asymptotic and does not suggest uniform intrinsic dimensions across sequence elements. Specifically, for a sequence element with \(v\) variables, \(d_{I}(H) v\) approximately in channel-independent scenarios. In contrast, for channel-dependent cases, which are more common, the total intrinsic dimension is typically less than the sum of dimensions for individual variables.

In the deduction part we do not assume the specific relationship between \(d_{I}(H)\) and \(H\). Some previous work shows that in some cases \(d_{I}(H)(H)\). In Appendix A.1 we discuss more about their relationship.

We formulate the intrinsic space and these assumptions more strictly and provide a brief construction of \(\{(1),(2),\}\) in Appendix A.2. Also, we discuss cases where these conditions are not strictly satisfied in Appendix A.3.

Moreover, under these assumptions made, the loss in the original space \(L_{ori}\) can be linearly bounded by the loss in the intrinsic space \(L_{ins}\), details of which can be found at Appendix A.4.

In the following deduction, we use \(L\) to denote \(L_{ins}\).

#### 3.2.2 Loss: Overall

In the following sections, we consider the task to predict a vector in \((S)\) given the vector corresponding to its previous \(H\) frames in \((H)\) with a model \(m\). For simplicity, we represent the operation of obtaining a vector in \((t_{2}-t_{1})\) by truncating the sequence \(s\) from time \(t_{1}\) to \(t_{2}\) as \(x[t_{1}:t_{2}]\), where \(x\) is a representation in \((|s|)\).

\[L=E_{x(H+S)}[(x[H:H+S]-m(x[0:H]))^{2}]\]

Let \(m^{*}\) denote the optimal Bayesian model, then it should satisfy:

\[m^{*}(x[0:H])=E_{x(H+S)}[x[H:H+S]|x[0:H]]\]

Thus:

\[L= E_{x(H+S)}[(x[H:H+S]-m^{*}(x[0:H])+m^{*}(x[0:H]- model(x[0:H]))^{2}]\] \[= E_{x(H+S)}[(x[H:H+S]-m^{*}(x[0:H])^{2}]+E_{x (H)}[(m^{*}(x)-m(x))^{2}]\] \[+2*E_{x(H+S)}[(x[H:H+S]-m^{*}(x[0:H])*(m^{*}(x)-m( x))]\]Since \(x[H:H+S]-m^{*}(x[0:H])\) and \(m^{*}(x)-m(x)\) are independent with respect to \(s[H:H+S]\) and \(E_{x(H+S)}[x[H:H+S]-m^{*}(x[0:H])]=0\), the loss is a sum of the previous two terms: one is decided by the capability of the optimal Bayesian model (or the Bayesian Error), and the other is the model's ability to approximate the Bayes Estimation: \(L=L_{Bayesian}+L_{approx}\).

We then calculate each of the two terms corresponding to the horizon, dataset size and model size.

#### 3.2.3 Bayesian Loss

We consider the Bayesian error for \(()\), when the loss for predicting \(S\) frames originates from the inherent uncertainty of the system. That is, we evaluate the amount of information carried by \((H)\) compared to \(()\). By assumption 5 and 6 in section 3.2.1, It can be verified that:

\[L_{Bayesian}(1-)K_{1}^{2}[var(P^{-1}[,H](x))]+  tr(_{S})\]

According to assumption 7, the noise in the \(i\)-th predicted frame would be proportional to \(\), and the total noise in the predicted \(S\) frames would be proportional to \(S\). Let \(_{M}^{2}\) denote the variance of the noise for a single frame in a single dimension, then \(tr(_{S})\) should be equal to \(_{M}^{2}S^{2}d_{I}(S)\).

According to assumptions 4 and 8, we can express the inverse projection term into:

\[[var(P^{-1}[H](x))]=_{d_{I}(H) i<d_{I}}_{i} }{(_{Z}-1)d_{I}(H)^{_{Z}-1}}\]

which indicates that:

\[L_{Bayesian} K_{1}^{2}(1-)}{(_{Z}-1)d_{I}(H) ^{_{Z}-1}}+_{M}^{2}S^{2}d_{I}(S)\]

#### 3.2.4 Approximation Loss: Two Cases

The training data is sampled from the distribution of \(E_{x(H+S)}[x[H:H+S]|x[0:H]]\). Following previous works , we utilize the piece-wise linear assumption for deep learning models. That is, we assume the model partitions the intrinsic space into \(N\) subregions, and does a linear prediction for each subregion independently. Here we discuss two cases: the large-dataset limit and the small-dataset limit.

**If the dataset is large** and contains many samples in the piece of the model, the model tends to learn the averaged behavior of the region. Intuitively, a larger dataset size brings smaller noise averages, and a larger model brings smaller piece-wise linear pieces, reducing the error caused by deviation of the data distribution to the linear model in the small blocks. Roughly speaking, the loss consists of two terms: one caused by the uncertainly within the subregions partitioned by the model \(L_{r}\), and one caused by the noise in the data that makes the model fail to learn the optimal model \(L_{n}\). If we assume that the model partitions the space uniformly, then the loss should satisfy:

\[L_{approx} K_{2}^{2}(H)^{2}N^{-(H)}}}{4^{2} }+(H)}{D}(_{M}^{2}S^{2}d_{I}(S)+^{2}_{0}}{( _{Z}-1)d_{I}(H)^{_{Z}-1}}).\]

The uniform partitioning should be the most naive case for the model to learn, and we also analyze on the cases where more advanced partitionings are learned in Appendix D. Also, it is worth noticing that the noise consists of two term, one is the systematic uncertainly as shown in section 3.2.3, and the other is caused by the horizon limitation so that the effect of unseen dimension seems exactly like noise for the model. Please refer to Appendix B.2 for a more detailed derivation.

**Otherwise if there are few data samples, or the model is sufficiently large** and the model cannot learn to average the noises of closed samples, but rather learns to remember each sample in certain pieces. This would give a data-scaling loss determined by nearest-neighbor distance. In this case:

\[L_{approx}^{2}}{4}d_{I}(H)D^{-(H)}}.\]

Please refer to Appendix B.3 for a more detailed derivation of this scenario.

**Boundary of the two phases** is decided by Dataset size and Model size, as well as horizon. It is worth noticing that in time series forecasting tasks, the sliding window method for constructingdata samples is usually used. 4 Therefore, the closest data points are always dependent on each other and are strongly correlated. The effective number of mutually independent data fragments is approximately proportional to \(D/H\) rather than \(D\), and \(=D/NH\) would be a very approximate order parameter separating the previous two scenarios. Again, please refer to Appendix B for a more detailed derivation.

### Optimal Horizon under Each Circumstance

As stated in section 3.2.2, the total loss would be simply the sum of the two components deduced above. Analyzing the total loss form, we may achieve an optimal horizon \(H^{*}\) (or a corresponding optimal intrinsic dimension \(d_{I}^{*}\) that minimizes the loss for different cases.

#### 3.3.1 Optimal Horizon for large amount of data

For the case with sufficient data, the total loss is:

\[L= L_{Bayesian}+L_{Approx}\] \[ K_{2}^{2}(H)^{2}N^{-(H)}}}{4^{2}}+K _{1}^{2}(1-)}{_{Z}-1}(H)^{_{Z} -1}}\] \[+(H)}{D}(_{M}^{2}S^{2}d_{I}(S)+^{2} _{0}}{(_{Z}-1)d_{I}^{_{Z}-1}(H)})\] \[ K_{2}^{2}(H)^{2}N^{-(H)}}}{4^{2}}+K _{1}^{2}(1-)}{_{Z}-1}(H)^{_{Z} -1}}+(H)}{D}_{M}^{2}S^{2}d_{I}(S)\] (since we always assume \[N D\])

We consider two cases. The detailed derivation can be found in Appendix C.1.

**If model size is too small compared to dataset size** such that \(N=o(D^{(H)}{d_{I}(H)+4}})\), then the effect of dataset size on picking optimal horizon could be neglected, thus:

\[d_{I}^{*}=(C_{0}^{}}}^{1+ }}N)C_{0}^{}} }^{1+}}N.\]

where \(()\) is the Lambert W function (\((x) x\)) and \(C_{0}=^{2}^{2}(1-)_{0}}{K_{2}^{2}}\).

**If N is not that small**: \(N=(D^{(H)}{d_{I}(H)+4}})\). Then the noise effect would be dominant in picking optimal \(H\), and the optimal \(d_{I}(H)\) would be:

\[d_{I}^{*}=(^{2}(1-)_{0}D}{N_{M}^{2}S^{2}d_{I}(S)}) ^{}}.\]

In this case, \(d_{I}^{*}\) grows noticeably with the increment of \(D\) and the decrement of \(N\).

#### 3.3.2 Optimal Horizon for a relatively small amount of data

If data is scarce, the loss could be written as:

\[ K_{1}^{2}(1-)}{_{Z}-1} {d_{I}(H)^{_{Z}-1}}+^{2}}{4}d_{I}(H)D^{-(H)}}\]

It is worth noticing that in this case, we assume the model is always large enough to find the nearest neighbor for a test sample, hence the loss is irrelevant with \(N\). We can estimate the optimal \(d_{I}^{*}\) as:

\[d_{I}^{*}=C_{s}\]

Where \(C_{s}\) is a constant irrelevant with \(D\), \(N\) or \(H\). The exact form is provided in Appendix C.2. Compared to the first scenario, the optimal \(d_{I}\) changes much less in this scenario.

Experiment Results

### Scaling Law for dataset size and model width do exist for Time Series Forecasting

As depicted in Figure 1 and Figure 2, we corroborate the scaling behaviors pertaining to data scaling and model-size scaling across a diverse range of datasets and models. This validation underscores the robustness and versatility of our proposed theoretical framework in the context of time series forecasting.

Here we mainly include NLinear/MLP, ModernTCN and iTransformer as our models, covering a scenario of Channel-Independent and Channel-Dependent, FFN-based, Transformer-based and Convolution-based methods. For datasets, we mainly use ETTh1, ETTh2, ETTm1, ETTm2, Traffic and Weather as our datasets. Detailed experiment settings can be found at Appendix E.

It can be seen that for all these models on all these datasets, for the **dataset-scaling** case where \(loss=C_{D}+1/D^{ D}\) and the **model width-scaling** with large amount of data: \(loss=C_{W}+1/W^{ w}\). The results fit well, thus verifying the existence of the original understanding of the scaling law.

However, in some special cases when the model is large enough to approximate the data, increasing model size would not gain performance, and may hurt performance (if regularization that is not strong enough is added) in some cases, like ModernTCN for ETTm1.

### The Impact of Horizon to Final Loss

#### 4.2.1 Optimal Horizon and Training Data Amount

**Optimal Horizon grows with more available training data**. We conduct experiments, fixing the available training data amount and model size while adjusting the horizon. As shown in Figure 3, an

Figure 1: Data Scaling. The proposed formula \(loss(D)=A+B/D^{}\) fits well. More comparison with other formulas can be found at Appendix I.

Figure 2: Width Scaling. When the model is not powerful enough, \(loss(W)=A+B/W^{}\) fits well for these situations. When data is scarce, a large model may lead to overfitting, as observed with ModernTCN on ETTm1.

optimal horizon is observed at each data amount, and this optimal value grows with more available training data.

**A dataset with a larger feature degradation has a smaller optimal horizon.** As our theory predicts, larger \(_{z}\) leads to a smaller optimal horizon. In the experiment in Figure 4, we use the same Linear model on two different datasets with comparable amount of training data: the Exchange Dataset has \(70\%\) available training data compared to the ETTh1 Dataset. We use eigenvalues obtained by doing Principal component analysis on sampled series as an approximation to the feature variance in the intrinsic space. Detailed procedure and more PCA results can be found at Appendix G.

**Channel-Dependent and Channel-Independent Models** sometimes are in different states of the two cases. For CD models, \(d_{I}(H)\) is larger and less training data is available, hence it tends to be in the few-data limit. For CI models, \(d_{I}(H)\) is smaller and \(D\) is larger, hence it may reach the data-dense limit (where the scaling exponent for \(D\) is \(-1\)).

In the following Figure 5, iTransformer on Traffic dataset is in the data-dense limit. For MLP on Transformer, when the horizon is small it is in the few-data limit. For the Linear model, since it is simply linear (rather than piece-wise linear), we expect it to be within the data-dense limit even for long horizons and when the dataset is relatively small (like ETTh1).

The advantage of channel-independent and channel-dependent models can be explained from the perspective of our theory. For channel-dependent models, the horizon limitation is smaller hence it performs better with plenty of training data. For channel-independent models, more training data is available; moreover, \(d\) is smaller, making the scaling exponent larger.

Figure 4: PCA results under Channel-Independent and Instance Normalization setting(left), Loss v.s. Horizon for certain amount of training data on Exchange(middle) and ETTh1(right). Exchange dataset has \(70\%\) data points compared to ETTh1 for training. However, since its feature degradation is stronger, the optimal horizon (\(<30\)) using \(100\%\) of Exchange dataset is much smaller than the optimal horizon of the ETTh1 dataset (\(>300\)) with only \(11\%\) of available training data.

Figure 3: Loss v.s. Horizon for a certain amount of training data, for different datasets and different models.

#### 4.2.2 Optimal Horizon v.s. Model Size

As predicted by our theory there are **two cases**. (1) When \(N\) is small, the optimal horizon does not change much with \(N\). **(2) When \(N\) is large**, the model size scaling term no longer dominates, the coefficient of the noise term \(\) dominants thus larger \(N\) leads to smaller optimal \(H\).

From the observations in Figure 6, it can be discerned that in the initial scenario, where an enhancement in N results in a performance augmentation, the optimal horizon remains relatively invariant with respect to \(N\). This is exemplified in the case of the SingleLayerMLP model. However, in the second scenario, where N attains its optimal value (i.e., for a certain horizon, a smaller N surpasses a larger \(N\) in performance), a larger \(N\) will correspond to a reduced optimal horizon. This phenomenon is evident in the instances involving the ModernTCN model.

As predicted by our theory, we see that dataset size has an impact on optimal horizon, while model size has a less significant influence on it.

## 5 Discussion and Conclusion

### Limitation and Discussion

Our theory mainly covers the part of time series forecasting, and our experiments verify our proposed theory on some of the well-used datasets of various sizes. However, these datasets are still small compared to some of the recently proposed large datasets. The scaling behavior predicted in our work of the horizon on these large datasets remains to be experimentally verified and studied. Moreover, we mainly use popular time series forecasting models in recent work and these models might be over-designed for a few datasets for time series.

Moreover, our work mainly focus on the in-domain setting, rather for pretrained-then-finetuned models or foundation models trained on mixed datasets. We discuss more about whether the assumptions made and our theory deduction work for mixed datasets at Appendix H.

Since we focus on the impact of the horizon which is an adjustable hyper-parameter for forecasting tasks but a fixed hyper-parameter for other time series tasks, this work does not involve scaling behaviors for other tasks related to time series analysis.The theory for scaling law in other areas of time series forecasting as well as for foundation time series forecasting models remains to be studied.

Figure 5: Data scaling behavior for iTransformer (Channel-Dependent model, left) and Norm-MLP(Channel-Independent model, middle) and NLinear (CI, right).

Figure 6: Loss v.s. Horizon for models of different widths. For MLP on ETTh1 (left), ModernTCN on ETTh1(middle) and ModernTCN on Weather (right).

Also, although our theory is compatible with analyzing the effect of the predict length \(S\) and current experiment for fixed \(S\) verifies the impact of \(H\), it is still worth studying the impact of \(S\) on optimal \(H\). Also, our theory only holds with assumptions made in Section 3. We leave these to future work. 5

**We call for future work to compare different models by 'performance at optimal look back horizon' rather than 'performance at a certain look back horizon'** to improve robustness. This work further elucidates that, though used in a lot of previous work, **to show a model benefits from longer horizon compared to baseline models does not necessarily prove its superiority over these baseline models**.

### Conclusion

In this work, we propose a theoretical framework that contemplates the influence of the horizon on scaling behaviors and the performance of time series forecasting models. We take into account the size of the dataset, the complexity of the model, and the impact of the horizon on the ultimate performance. An expanded horizon results in a diminished Bayesian Error, but it simultaneously complicates the task for a limited dataset to fully encompass the entire space and for a model of restricted size to learn effectively. Furthermore, our empirical investigations corroborate the existence of scaling behaviors in relation to dataset size and model size, and validate our proposed theory concerning the impact of the horizon.

Our theory provides some insight into the area of time series forecasting. For a certain dataset, it would be beneficial to design the models and hyperparameters according to the dataset size and feature degradation property of the particular dataset. Moreover, we think further experiments on larger foundational time series dataset about the optimal horizon with respect to pretraining loss and the loss for transferring to certain datasets may provide further insight as well.

In conclusion, we aim to provide insights to future work on time series forecasting, emphasizing the importance of the horizon and its potential impact on scaling behaviors in time series forecasting tasks.