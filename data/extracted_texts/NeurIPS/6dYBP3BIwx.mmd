# CogVLM: Visual Expert for Pretrained Language Models

Weihan Wang\({}^{*1,2}\), Qingsong Lv\({}^{*1}\), Wenmeng Yu\({}^{1}\), Wenyi Hong\({}^{1,2}\), Ji Qi\({}^{1,2}\), Yan Wang\({}^{1}\), Junhui Ji\({}^{1}\), Zhuoyi Yang\({}^{1,2}\), Lei Zhao\({}^{1}\), Xixuan Song\({}^{1,2}\), Jiazheng Xu\({}^{1,2}\), Keqin Chen\({}^{1}\), Bin Xu\({}^{2}\), Juanzi Li\({}^{2}\), Yuxiao Dong\({}^{ 2}\), Ming Ding\({}^{ 1}\), Jie Tang\({}^{ 2}\)

\({}^{1}\)Zhipu AI \({}^{2}\)Tsinghua University

ming.ding@zhipuai.cn {yuxiaod, jietang}@tsinghua.edu.cn

WW & QL contributed equally.Corresponding authorsWork done when WW, WH, JQ, ZY, XS, JX and KC interned at Zhipu AI.

###### Abstract

We introduce CogVLM, a powerful open-source visual language foundation model. Different from the popular _shallow alignment_ method which maps image features into the input space of language model, CogVLM bridges the gap between the frozen pretrained language model and image encoder by a trainable visual expert module in the attention and FFN layers. As a result, CogVLM enables a deep fusion of vision language features without sacrificing any performance on NLP tasks. CogVLM-17B achieves state-of-the-art performance on 15 classic cross-modal benchmarks, including 1) image captioning datasets: NoCaps, Flicker30k, 2) VQA datasets: OKVQA, ScienceQA, 3) LVLM benchmarks: MM-Vet, MMBench, SEED-Bench, LLaVBench, POPE, MMMU, MathVista, 4) visual grounding datasets: RefCOCO, RefCOCO+, RefCOCOg, Visual7W. Codes and checkpoints are available at Github.

## 1 Introduction

Vision language models are versatile and powerful. Many vision and cross-modality tasks can be formulated as next token prediction, e.g., image captioning , visual question answering , visual grounding  and even segmentation . Useful abilities like in-context learning  also emerge along with the improvement of downstream tasks when scaling up VLMs. However, to train a large language model is already non-trivial, and it is more challenging to train a VLM from scratch with the same NLP performance as well-trained pure language models like LLaMA2 . Therefore, it is natural to investigate how to train a VLM from an off-the-shelf pretrained language model.

The popular _shallow alignment_ methods represented by InstructBLIP  and MiniGPT-4  connect a frozen pretrained vision encoder and language model via a trainable Q-Former or a linear layer, mapping the image features into the input embedding space of the language model. This method converges rapidly, but its performance is noticeably inferior to that of LLaVA-1.5 with trainable language parameters, despite their model sizes and training datasets being almost identical.

The primary challenge in the performance of shallow alignment methods within VLMs can be attributed to the lack of deep fusion between visual and linguistic data. Shallow alignment methods struggle because they rely on 'frozen' language model weights, which are intrinsically trained toprocess text tokens. This presents a significant mismatch issue, as visual features lack a direct equivalent in the textual input space. Consequently, when these visual features undergo multi-layer transformations, they tend to deviate from the expected input distribution of the deeper language model layers. This misalignment is particularly evident in tasks like image captioning, where the specificity of a task - such as writing style and caption length - can only be superficially encoded into visual features through shallow methods.

A common strategy, as seen in PaLI (Chen et al., 2022) and Qwen-VL (Bai et al., 2023), involves direct training of LLM during the pre-training or supervised fine-tuning (SFT) phase. However, this approach can compromise the models' generalizability, particularly for tasks focused on textual outputs. Conventionally, LLMs are pretrained on extensive text-only datasets (Raffel et al., 2020), leading to a significant divergence in data distribution when compared to image-text pair datasets like LAION (Schuhmann et al., 2022) and COYO (Byeon et al., 2022). This shift often results in catastrophic forgetting, a phenomenon where the model's proficiency in its original domain deteriorates. This issue is evident in Figure 2, which shows a marked decline in MMLU (Hendrycks et al., 2020) score as the model becomes more attuned to the LAION dataset, thus validating our

Figure 1: Samples generated by CogVLM.

hypothesis. This trend is not isolated; similar effects have been observed in models like PaLM-E (Driess et al., 2023) and Flamingo (Alayrac et al., 2022). For instance, adapting an 8B parameter language model for VLM pretraining can lead to an 87.3% reduction in natural language generation (NLG) performance (Driess et al., 2023).

The discussion above raises an important question: is it possible to retain the NLP capabilities of the large language model while adding top-notch visual understanding abilities to it?

CogVLM gives a "_yes_" answer. CogVLM instead adds a trainable _visual expert_ to the language model. In each layer, the image features in the sequence use a new QKV matrix and MLP layer with the text features. Visual expert doubles the number of parameters while keeping the FLOPs the same. Since all the parameters in the original language model are fixed, the behaviors are the same as in the original language model if the input sequence contains no image. This inspiration arises from the comparison between P-Tuning (Liu et al., 2023) and LoRA (Hu et al., 2021) in efficient finetuning, where p-tuning learns a task prefix embedding in the input while LoRA adapts the model weights in each layer via a low-rank matrix. As a result, LoRA performs better and more stable. A similar phenomenon might also exist in VLM, because in the shallow alignment methods, the image features act like the prefix embedding in P-Tuning.

Our contributions in this work are as follows:

* We introduce the CogVLM model, which deeply integrates visual and linguistic features while retaining the full capabilities of a pretrained large language model. CogVLM-17B, trained from Vicuna-7B, achieves state-of-the-art across 17 classic cross-modal benchmarks.
* Through extensive ablation studies, we validated the effectiveness of our proposed visual expert module and the importance of deep fusion. We further delved into multiple critical factors in multimodal pertaining, including the scale of visual encoder, variants of attention mask, the most impactful parameters in VLMs, and the necessity of incorporating self-supervised image loss, etc.
* We have made the weights of CogVLM and the dataset used in the SFT phase available to the public. We anticipate that the open sourcing of CogVLM will significantly contribute to the research and industrial application of visual understanding.

Figure 2: **MMLU score and training loss over multimodal pretraining phase. When directly training the language part of the VLM using the LAION dataset, the modelâ€™s score on the pure text dataset MMLU rapidly decreases, dropping to 24.9 at 2500 steps.**

## 2 Method

### Architecture

CogVLM model comprises four fundamental components: a vision transformer (ViT) encoder, an MLP adapter, a pretrained large language model (GPT), and a visual expert module. Figure 3 shows an overview of the CogVLM architecture. The components' design and implementation details are provided below:

**ViT encoder**. We utilize pretrained EVA2-CLIP-E [Sun et al., 2023a] in CogVLM-17B. Note that the final layer of ViT encoder is removed because it specializes in aggregating the [CLS] features for contrastive learning.

**MLP adapter**. To map the output of ViT into the same space as the text features from word embedding, we use an MLP adapter, a two-layer MLP (SwiGLU [Shazeer, 2020]). For implementation convenience, all image features share the same position id in the language model.

**Pretrained large language model**. CogVLM's model design is compatible with any off-the-shelf GPT-style pretrained large language model. Specifically, CogVLM-17B adopts Vicuna1.5-7B [Chiang et al., 2023] for further training. A causal mask is applied to all the attention operations, including the attention between image features.

**Visual expert module**. We add a visual expert module to each layer to enable deep visual-language feature alignment. Specifically, the visual expert module in each layer consists of a QKV matrix and an MLP in each layer. The shapes of the QKV matrix and MLP are identical to those in the pretrained language model and initialized from them. The motivation is that each attention head in the language model captures a certain aspect of semantic information, while a _trainable_ visual expert can transform the image features to align with the different heads, therefore enabling deep fusion.

Formally, suppose that the input hidden states of an attention layer are \(X^{B H(L_{I}+L_{T}) D}\), where \(B\) is the batch size, \(L_{I}\) and \(L_{T}\) are the lengths of image and text sequences, \(H\) is the number of attention heads, and \(D\) is the hidden size. In the attention with visual expert, \(X\) is first split as image hidden states \(X_{I}\) and text hidden states \(X_{T}\), and the attention is computed as:

\[(X,W_{I},W_{T})=((QK^{T})}{ })V,\] (1)

Figure 3: **The architecture of CogVLM.** (a) The illustration about the input, where an image is processed by a pretrained ViT and mapped into the same space as the text features. (b) The Transformer block in the language model. The image features have a different QKV matrix and FFN. Only the purple parts are trainable.

\[Q =(X_{I}W_{I}^{Q},X_{T}W_{T}^{Q}),\] (2) \[K =(X_{I}W_{I}^{K},X_{T}W_{T}^{K}),\] (3) \[V =(X_{I}W_{I}^{V},X_{T}W_{T}^{V}),\] (4)

where \(W_{I},W_{T}\) are the QKV matrices of the visual expert and original language model, and \(()\) means lower-triangular mask. The visual expert in FFN layers performs similarly,

\[(X) =(_{I}(X_{I}),_{T}(X_{T})),\] (5)

where \(_{I}\) and \(_{T}\) are the FFN of the visual expert and original language model.

**Position embedding.** In the RoPE within LLM, we allow all visual tokens to share a single position id, as they already encapsulate positional information when inputted into the ViT. This approach mitigates the impact of remote attenuation between tokens in the LLM. Given that an image can occupy hundreds to thousands of tokens, and a typical input sequence is structured as '_<image embed> query_', using conventional positional encoding would result in excessively lengthy encoding sequences. Moreover, it would lead the query to focus more on the image sequences closer to it, namely the lower part of an image.

### Pretraining

**Data.** The image-text pairs for pretraining are all publicly available, including LAION-2B and COYO-700M. After removing the broken URLs, NSFW images, images with noisy captions, images with political bias and images with an aspect ratio \(>6\) or \(<1/6\), about 1.5B images are left for pretraining.

We also crafted a visual grounding dataset of 40M images. Each noun in the image caption is associated with bounding boxes to indicate the positions in the image. The construction process basically follows [Peng et al.], which extracts nouns via spaCy [Honnibal and Johnson, 2015] and predicts the bounding boxes using GLIPv2 [Zhang et al., 2022]. The image-text pairs are sampled from LAION-115M, a subset of LAION-400M filtered by [Li et al., 2023b]. We filter and retain a subset of 40 million images to ensure that over 75% of images contain at least two bounding boxes.

**Training.** The first stage of pretraining is for _image captioning loss_, i.e. next token prediction in the text part. We train the CogVLM-17B model on the 1.5B image-text pairs introduced above for 120,000 iterations with a batch size of 8,192. The second stage of pretraining is a mixture of image captioning and Referring Expression Comprehension (REC). REC is a task to predict the bounding box in the image given the text description of an object, which is trained in the form of VQA, i.e., _Question: Where is the object?_ and _Answer:_\([[x_{0},y_{0},x_{1},y_{1}]]\). Both \(x\) and \(y\) coordinates range from \(000\) to \(999\), meaning the normalized position in the image. We only consider the loss of the next token prediction in the "Answer" part. We pretrain the second stage for 60,000 iterations with a batch size of 1,024 on the text-image pairs and visual grounding datasets introduced above. During the final 30,000 iterations, we change the input resolution from \(224 224\) to \(490 490\). The total number of trainable parameters is 6.5B.

### Alignment

In the instruction alignment phase, we trained two generalist models: CogVLM-Chat and CogVLM-Grounding. CogVLM-Chat accepts natural language inputs and outputs, while CogVLM-Grounding accepts inputs and outputs with bounding boxes.

**CogVLM-Chat.** In our study, we integrated data from a variety of open-source visual question-answering datasets, including VQAv2 [Antol et al., 2015], OKVQA [Marino et al., 2019], TextVQA [Singh et al., 2019], OCRVQA [Mishra et al., 2019], ScienceQA [Lu et al., 2022], as well as datasets formatted as multi-turn dialogues such as LLaVA-Instruct [Liu et al., 2023c], LRV-Instruction [Liu et al., 2023a], LLaVAR [Zhang et al., 2023b]. We then conducted unified instruction-supervised fine-tuning (SFT) across these diverse datasets. The integrity and quality of SFT data are crucial; notably, the LLaVA-Instruct dataset, initially generated through a language-only GPT-4 pipeline, contained certain inaccuracies. We meticulously corrected these errors through manual inspection and annotation to ensure data quality.

VQA datasets typically feature concise, often one-word answers, contrasting with the dialogue datasets that provide detailed responses with extensive reasoning. To accommodate this variability,we employed prompts formatted as _Question: Short answer:_ for concise responses and _Question: Answer_: for extended discourse in the SFT phase.

During training, the model underwent 6000 iterations with a learning rate of 1e-5 and a batch size of 1024. To enhance and ensure the stability of the training, we activated the visual encoder's parameters and adjusted its learning rate to be one-tenth of that used for the remaining training parameters.

**CogVLM-Grounding.** In order to endow our model with consistent, interactive visual grounding capabilities, we collect a high-quality dataset covering 4 types of grounding data: (1) **Grounded Captioning (GC)** - image captioning datasets where each noun phrase within the caption is followed by the corresponding referential bounding boxes; (2) **Referring Expression Generation (REG)** - image-oriented datasets that each bounding box in the image is annotated with a descriptive textual expression that accurately characterizes and refers to the content within the specific region; (3) **Referring Expression Comprehension (REC)** - text-oriented datasets that each textual description is annotated with multiple referential links associating the phrases with corresponding boxes; (4) **Grounded Visual Question Answering (GroundedVQA)** - VQA-style datasets where the questions may contain region references in a given image. The sources of grounding data are all publicly available, including Flickr30K Entities , RefCOCO , Visual7W , VisualGenome  and Grounded CoT-VQA . \([box]\) in this section is in the format of \([[x_{0},y_{0},x_{1},y_{1}]]\).

It is noteworthy that the curated datasets exhibit a versatility of visual grounding capabilities, and many datasets can be adapted and repurposed across different tasks. For instance, grounded captioning datasets can be reformulated to suit REG and REC tasks. Taking the example of _"A man \([box_{1}]\) and a woman \([box_{2}]\) are walking together."_, this can be reframed into question answering pairs like _("Describe this region \([box_{2}]\).", "A woman.")_ and _("Where is the man?", "\([box_{1}]\)")_. Similarly, REC datasets can be translated into REG tasks by switching the input and output, and vice versa. However, certain conversions might lead to ambiguities. For example, when presented with the isolated query "Where is another man?" from the caption "A man \([box_{1}]\) is running, while another man \([box_{2}]\) is looking.", the distinction between \([box_{1}]\) and \([box_{2}]\) becomes unclear, potentially leading to errors.

## 3 Experiments

To rigorously validate the superior performance and robust generalization of our base model, we conduct quantitative evaluations on an array of multi-modal benchmarks. These benchmarks can be categorized into three broad areas covering a comprehensive range of measurement1:

* **Image Captioning**. The main purpose of these tasks is to generate textual captions summarizing the major content of a given image. We utilize prominent datasets including

    & **Train** &  &  &  & **COCO** & **TestCaps** \\   & **Data** & OOD & overall & OOD & overall & Karp. & Karp. & test \\  Human & - & 95.7 & 87.1 & 91.6 & 85.3 & - & - & 125.1 \\ VinVL  & 8.9M & 83.8 & 94.3 & 78.0 & 92.5 & - & 130.8 & - \\ SimVLM  & 1.8B & 115.2 & 112.2 & 109.5 & 110.3 & - & 143.3 & - \\ CoCa  & 4.8B & - & 122.4 & - & 120.6 & - & 143.6 & - \\ LEMON  & 2B & 120.2 & 117.3 & 110.1 & 114.3 & - & 139.1 & - \\ Flamingo  & 2.3B & - & - & - & - & 67.2 & 138.1 & - \\ Primer  & 12.7M & 113.5 & 112.9 & - & 110.8 & - & 136.5 & - \\ BLP-2  & 129M & 124.8 & 121.6 & - & - & - & 144.5 & - \\ InstructionLIP  & 129M & - & 123.1 & - & - & 82.4 & - & - \\ UniversaCap  & 35M & 123.4 & 122.1 & 114.3 & 119.3 & - & 143.4 & - \\ GIT  & 0.8B & 127.1 & 125.5 & 122.0 & 123.4 & 49.6 & 144.8 & 138.2 \\ GIT2  & 12.9B & 130.6 & 126.9 & 122.3 & 124.8 & 50.7 & 145.0 & 145.0 \\ Qwen-VL  & 1.4B & - & 121.4 & - & - & 85.8 & - & - \\ PaL-17B  & 1.6B & - & 127.0 & - & 124.4 & - & 149.1 & 135.4 \\ PaL-X-55B  & - & - & 126.3 & - & 124.3 & - & **149.2** & **147.0** \\  CogVLM (ours) & 1.5B & **132.6** & **128.3** & **128.0** & **126.4** & **94.9** & 148.7 & 144.9 \\   

Table 1: **Performance on Image Captioning benchmarks.** All tasks use CIDEr as the evaluation metric. OOD refers to out-of-domain test set. Karp. refers to the Karpathy test split.

NoCaps (Agrawal et al., 2019), COCO (Lin et al., 2014), Flickr30K (Plummer et al., 2015), and TextCaps (Sidorov et al., 2020) for evaluation.
* **Visual Question Answering**. The VQA tasks require models to answer questions that may focus on distinct visual contents based on the given image. Our assessment covers diverse datasets, including VQAv2 (Antol et al., 2015), OKVQA (Marino et al., 2019) and ScienceQA (Lu et al., 2022).
* **LVLM Benchmarks**. LVLM benchmarks are primarily employed to assess the advanced capabilities of large multimodal models, such as object recognition and localization, OCR, visual description, and visual knowledge reasoning. We conduct multidimensional evaluations of the models on datasets including MM-Vet (Yu et al., 2023), MMBench (Liu et al., 2023g), SEED-Bench (Li et al., 2023a), LLaVA-Bench (Liu et al., 2023c), POPE (Li et al., 2023c), MMMU (Yue et al., 2023) and MathVista (Lu et al., 2023).
* **Visual Grounding**. Visual grounding involves a set of tasks that establish referential links between textual mentions in a sentence and specific regions in an image. We evaluate our model on the typical datasets, including Visual7w (Zhu et al., 2016), RefCOCO (Liu et al., 2017), RefCOCO+, and RefCOCOg to ensure completeness.

### Image Captioning

We evaluate the image captioning capability of our pretrained base model on the aforementioned four benchmarks. In a zero-shot evaluation on the Nocaps and Flickr datasets, we assess the precision of our model in describing long-tail visual concepts. Additionally, we present results from finetuning on the COCO and TextCaps datasets.

The detailed performance is shown in Table 1. Overall, our model achieves the SOTA or compatible performance across the board. Specifically, on the NoCaps benchmark, our base model outperforms the previous best method, GIT2, across four splits with a maximum of \(5.7\) points in the out-domain set while only consuming 10% of the pretraining data (1.5B vs 12.9B). On the Flickr benchmark, our model achieves a SOTA score of \(94.9\) surpassing the concurrently released Qwen-VL model by \(9.1\) points. These results demonstrate the remarkable capability and robustness of our pretrained model on the image captioning task. We also evaluate our model on the COCO (Lin et al., 2014) and TextCaps, where the latter is specifically designed to integrate the textual information of the given image into captions. Though training without the dedicated OCR data, encouragingly, our base model

    &  &  &  \\  & & & VQAv2 & OKVQA & ScienceQA & MM-Vet & SEED & MMBench & LLaVA & POPE & MMMMU & MathVista \\  MiniGPT-4 & Vicuna-7B & - & - & 39.6 & 22.1 & 47.4 & 23.0 & 45.1 & - & - & 23.1 \\ IDEFICS-Instruct & LLaMA-65B & 37.4 & 36.9 & 61.8 & 39.7 & 53.2 & 54.5 & 56.9 & - & - & 26.2 \\ OpenFlammigo & MPT-7B & 53.0 & 38.3 & 44.8 & 24.8 & 42.7 & 5.7 & 34.2 & - & 26.3 & 18.6 \\ DreamLM & Vicuna-7B & 56.6 & 44.3 & - & 35.9 & - & 49.9 & - & - & - & - \\ InstructoBLIP & Vicuna-7B & - & - & 60.5 & 26.2 & 58.8 & 33.9 & 59.8 & 53.8 & - & 25.3 \\ Fuyu & Fuyu-8B & 74.2* & 60.6* & - & - & - & - & - & - & 27.4 & - \\ Qwen-VL-Chat & Qwen-7B & 78.2* & 56.6* & 68.8 & - & 65.4 & 61.8 & 67.7 & - & 32.9 & 33.8 \\ LLaVA-1.5 & Vicuna-7B & 78.5* & - & 66.8 & 30.5 & 58.6 & 64.3 & 60.7 & 85.9 & - & 23.6 \\ InterLM-XComposer & Internal_M-7B & - & - & - & 35.2 & 66.9 & 74.4 & - & - & - & 29.8 \\ mPLUG-Owl2 & LLaMA-7B & 79.4* & 57.7* & 68.7 & 36.2 & 64.1 & 64.5 & 25.0 & 86.2 & 32.1 & 25.3 \\ Unified-IO2 & UIO-2XXL & 79.4* & 55.5* & 86.2* & - & 65.6 & 71.5 & - & 87.7 & - & - \\ LLaVA-1.5 & Vicuna-13B & 80.0* & - & 71.6 & 35.4 & 61.6 & 67.7 & 64.6 & 85.9 & 33.6 & 26.1 \\ SPHINX-2k & LLaMA-13B & 80.7* & 62.6* & 70.6 & 40.2 & 71.6 & 65.9 & - & 87.2 & 32.9 & 27.8 \\ Emu2-Chat & LLaMA-33B & **84.9*** & 64.8* & - & 48.5 & 62.8 & 63.6 & 56.4 & - & 34.1 & - \\  CogVLM-Chat & Vicuna-7B & 82.3* & **64.8*** & 91.2* & 51.1 & 72.5 & 77.6 & 77.8 & 87.9 & 41.1 & 34.5 \\ CogVLM-Chat & LLaMA-3B & 83.4* & 64.1* & **92.5*** & **60.4** & **75.9** & **80.5** & **86.4** & **88.2** & **44.3** & **38.1** \\   

Table 2: **Generalist performance on VQA and LVLM benchmarks.***** donates the dataset has been trained during SFT stage. We compared with the latest state-of-the-art generalist models, including MiniGPT-4 (Zhu et al., 2023), IDEFICS-Instruct (Laurenco et al., 2023), OpenFlammigo (Awadalla et al., 2023), DreamLLM (Dong et al., 2023), InstructoBLIP (Dai et al., 2023), Fuyu (Bavishi et al., 2023), Qwen-VL (Bai et al., 2023), LLaVA-1.5 (Liu et al., 2023b), InternLM-XComposer (Zhang et al., 2023)mPLUG-Owl2 (Ye et al., 2023), SPHINX (Lin et al., 2023b), Emu2 (Sun et al., 2023b).**

[MISSING_PAGE_FAIL:8]

### Visual Grounding

Table 3 shows the result on the standard visual grounding benchmarks. We find that our generalist model achieves state-of-the-art performance across the board, with a significant advantage over the previous or concurrent models. As shown in the bottom part of Table 3, our model even surpasses models that are specifically trained for individual tasks, achieving SOTA performance on 5 of 9 splits. For instance, in the RefCOCO val subset, our model attains a score of 92.76, surpassing UNINEXT-H's 92.64; in the RefCOCO+ test-A subset, it scores 92.91, exceeding ONE-PEACE's 92.21; and in the RefCOCOg test subset, it achieves 90.79, outperforming UNINEXT-H's 89.27. These results suggest a remarkable visual grounding capability of our model incorporating our training paradigm.

### Ablation Study

To understand the impact of various components and settings on our model's performance, we conduct an extensive ablation study for 6,000 iterations and a batch size of 8,192. Table 4 summarizes the results about the following aspects:

**Model structure and tuned parameters**. To investigate the effectiveness of CogVLM's model, we conduct ablation studies on several structure variants and tuning strategies, including: 1) tuning only the MLP Adapter layer; 2) tuning all LLM parameters and the Adapter without adding visual expert; 3) only adding visual expert at every 4th LLM layer; and 4) only add visual expert to FFNs at all layers.

From the results, we can see that shallow vision-language alignment, i.e. only tuning the adapter layer (similar to the method used in BLIP-2), results in a significantly inferior performance. Also, the performance of training the visual expert is higher than that of training the LLM, especially on the datasets that require external knowledge, even though the training parameters are roughly the same. We also compare with other variants of adding visual expert, including a. inserting an expert module every 4 layers and b. removing the attention part from the expert. Both of them result in a certain degree of performance decline, but within an acceptable range, which provides some guidance for balancing computational overhead and model performance.

**Initialization Method**. As for visual expert's initialization method, we compare initialization with weights from LLM to random initialization. Our results across various datasets demonstrate that initialization with LLM's weights consistently achieves superior performance. This indicates that the transformer architecture pre-trained on language data possesses a certain capability to process visual tokens. Moreover, it can serve as a more effective starting point for multimodal pre-training initialization.

**Visual Attention Mask**. We empirically find that using a causal mask on visual tokens yields a better result in comparison with a full mask. This is slightly counterintuitive, as using a bidirectional attention mask allows access to more information than a causal mask. We hypothesize the possible explanation for this phenomenon is that the causal mask better fits the inherent structure of LLMs.

**Image SSL Loss**. We also investigated the self-supervised learning loss on image features, where each visual feature predicts the CLIP feature of the next position for visual self-supervision. Align with the observation from PaLI-X [Chen et al., 2023b], we find it brings no improvement on downstream tasks, although we indeed observed improvements in small models in our early experiments.

**Visual Encoder**. we substituted the 300M-parameter EVA2-L model for the 4.4B-parameter EVA2-E to investigate the impact of visual encoder parameters on various tasks. The results indicated that there was only a slight decrease in performance across most benchmarks. However, a notable exception was observed in the text-oriented dataset TextVQA, where we recorded a decline of 2.5.

**EMA**. We utilize EMA (Exponential Moving Average) during pretraining. The ablation results show that EMA often brings improvements across various tasks compared to not using it.

## 4 Conclusion

In this paper, we introduce CogVLM, an open visual language foundation model. CogVLM shifts the paradigm for VLM training from shallow alignment to deep fusion, achieving state-of-the-art performance on 15 classic multi-modal benchmarks.

[MISSING_PAGE_FAIL:10]

#### a.2.1 Image Captioning

* **COCO**[Lin et al., 2014] The Captions in COCO dataset are collected using Amazon's Mechanical Turk (AMT) workers who are given instructions to control the quality. The dataset contains 330K images, where the train, validation and test sets contain 413,915 captions for 82,783 images, 202,520 captions for 40,504 images, and 379,249 captions for 40,775 images respectively.
* **NoCaps**[Agrawal et al., 2019]. NoCaps is a large-scale benchmark for novel object captioning, containing nearly 400 novel object classes compared to COCO. The validation and test set comprised of 4,500 and 10,600 images, respectively, sourced from the Open Images [Krasin et al., 2017] and annotated with 11 human-generated captions per image, and each set is subdivided into three domains: "in", "near", and "out", with objects in the "out-domain" never appearing in the COCO dataset.
* **Flickr30K**[Plummer et al., 2015]. Flickr30K is a high-quality dataset consists of 31,783 images of everyday life activities, envets and scenes (all harvested from the online website Flickr) and 158,915 captions (obtained via crodsourcing). Each image in this dataset is described independently by five annotators who are not familiar with the specific entities and circumstances depicted in them.
* **TextCaps**[Sidorov et al., 2020] Textcaps is a dataset with 145k captions for 28k images. The design purpose of the TextCaps dataset is to effectively integrate textual information with visual context into captions, requiring the model to have both excellent OCR capabilities and strong captioning abilities.

#### a.2.2 General VQA

* **VQAv2**[Antol et al., 2015] VQAv2 encompasses over 200,000 images, paired with more than 1.1 million questions that have collectively garnered over 11 million answers. Questions span various types, including yes/no, counting, and open-ended queries.
* **OKVQA**[Marino et al., 2019] The OK-VQA (Outside Knowledge Visual Question Answering) dataset is specifically designed to probe visual question answering capabilities that necessitate external knowledge or common sense beyond image content. It has 14,055 open-ended questions and 5 ground truth answers per question.
* **ScienceQA**[Lu et al., 2022] The ScienceQA dataset comprises 21,208 multimodal multiple-choice questions spanning three diverse subjects: natural science, language science, and social science. Each question is annotated with explanations linked to relevant lectures.
* **TDIUC**[Shrestha et al., 2019] The TDIUC dataset features 1.6M questions across 170K images from MS COCO and Visual Genome. Categorized into 12 distinct question types, it ranges from basic tasks like identifying objects or colors to more advanced reasoning like counting or positional discernmen

  
**Task** & **Dataset** & **Description** & **Split** & **Metrics** \\   & NoCaps & Captioning of natural images. & val & CIDEr (\(\)) \\  & Flickr & Captioning of natural images. & karpathy-test & CIDEr (\(\)) \\  & COCO & Captioning of natural images. & karpathy-test & CIDEr (\(\)) \\  & TextCaps & Captioning of natural images containing text. & test & CIDEr (\(\)) \\   & VQAv2 & VQA on natural images. & test-dev & VQA Score(\(\)) \\  & OK-VQA & VQA on natural images requiring outside knowledge. & val & VQA Score (\(\)) \\  & ScineqcQA & Multi-choice VQA on a diverse set of science topics & test & Accuracy (\(\)) \\  & TDIUC & VQA on natural images with detailed question types. & val & VQA Score (\(\)) \\   & MM-Vet & Open-ended VQA on a diverse set of topics & test & GPT4 Score(\(\)) \\  & SEED-Bench & Multi-choice VQA on a diverse set of topics & IMG & Accuracy (\(\)) \\  & MMBBench & Multi-choice VQA on a diverse set of topics & test & Accuracy (\(\)) \\  & LLAV-Bench & Open-ended VQA for testing instruction following abilities & In-the-Wild & GPT4 Score(\(\)) \\  & POPE & Multi-choice VQA for testing hallucinations & overall & Accuracy (\(\)) \\  & MMMU & VQA on a diverse set of topics & test & Accuracy (\(\)) \\  & MathVista & VQA for Measuring Mathematical Abilities & test-mini & Accuracy (\(\)) \\   & RefCOCO & Refer grounding on natural images. & overall & Accuracy (\(\)) \\  & RefCOCO+ & Refer grounding on natural images. & overall & Accuracy (\(\)) \\  & RefCOCOg & Refer grounding on natural images. & overall & Accuracy (\(\)) \\  & Visual7W\({}^{}\) & VQA with referential regions selection. & val & Accuracy (\(\)) \\  

Table 7: Summary of the evaluation benchmarks.

### LVLM Benchmarks

* **MM-Vet** [Yu et al., 2023] MM-Vet defines six core VL capabilities and examines 16 integrations of interest derived from the combinations of these capabilities. It employs an evaluator based on LLMs for open-ended outputs, capable of assessing across different question types and answer styles, thus deriving a unified scoring metric.
* **SEED-Bench** [Li et al., 2023a] SEED-Bench is a dataset comprising 19K multiple-choice questions with precise human annotations, covering 12 evaluation dimensions, including understanding of image and video modalities. It obtains accurate answer options through manual annotations, enabling objective and efficient assessment of model performance.
* **MMBench** [Liu et al., 2023g] MMBench comprises approximately 3000 multiple-choice questions, covering 20 different capability dimensions, aimed at evaluating various abilities of visual-language models. MMBench adopts a hierarchical capability dimension structure, including two high-level capability dimensions: perception and reasoning, as well as fine-grained capability dimensions such as object localization and attribute inference.
* **LLaVA-Bench** [Liu et al., 2023c] LLaVA-Bench (In-the-Wild) is a benchmark dataset comprising 60 questions, designed to evaluate the multimodal instruction following capabilities of LMMs. It includes indoor and outdoor scenes, memes, paintings, sketches, etc., and is equipped with highly detailed, manually curated descriptions and appropriate question selections.
* **POPE** [Li et al., 2023c] The POPE dataset is a binary classification query dataset specifically designed to evaluate object hallucination issues in LMMs. The random, popular, and adversarial subsets within the POPE dataset are constructed through different sampling strategies, totaling 8,910 entries.
* **MMMU** [Yue et al., 2023] The MMMU dataset is a large-scale, multidisciplinary multi-modal understanding and reasoning benchmark set, containing 11.5K questions. It covers 6 major disciplines, 30 topics, and 183 subfields, with question types including multiple-choice and open-ended questions. The dataset includes 30 types of images, such as charts, tables, chemical structures, photographs, paintings, musical scores, etc., testing the multimodal perception capabilities of models and their performance in expert-level tasks.
* **MathVista** [Lu et al., 2023] MathVista is a new benchmark dataset that combines mathematical and visual understanding, comprising 31 existing multimodal datasets and 3 newly created datasets, totaling 6141 examples. These datasets encompass a diverse range of mathematical reasoning abilities, including seven types: algebra, arithmetic, geometry, logic, numerical common sense, science, and statistics. The goal is to comprehensively evaluate the capabilities of existing foundational models in mathematical reasoning and visual understanding.

#### a.3.1 Grounding

* **RefCOCO/RefCOCO+** [Liu et al., 2017] RefCOCO and RefCOCO+ evolved from the ReferItGame. Both subsets focus on images with two or more similar objects. RefCOCO, with 142,209 expressions across 19,994 images, places no linguistic constraints. Conversely, RefCOCO+ emphasizes appearance-centric descriptions, omitting locational terms, and comprises 141,564 expressions over 19,992 images.
* **RefCOCOg** [Mao et al., 2016] The RefCOCOg subset was amassed through Amazon Mechanical Turk, where workers penned natural referring expressions for objects in MSCOCO images; it boasts 85,474 referring expressions spanning 26,711 images, each containing 2 to 4 objects of the same category.
* **Visual7W** [Zhu et al., 2016]. The Visual7W dataset is predominantly designed for VQA tasks, with a dedicated subset crafted for grounded VQA. In this subset, models are presented with an image accompanied by a "which"-type question, such as "Which is the small computer in the corner?". Participants are then given four bounding boxes within the image, from which they must select the correct one as the answer. The grounded Visual7W part consists of 25,733 images and 188,068 questions.
* **Flickr30K-Entities** [Plummer et al., 2015]. The Flickr30K Entities dataset, a precursor in the realm of grounded captioning, encompasses a collection of 31,783 images accompanied

[MISSING_PAGE_FAIL:13]

As shown in the Table 8, our visual expert module is integrated into the LLM, and it can significantly benefit from the scaling of the LLM. These results demonstrate that our approach can effectively leverage the benefits of LLM scaling to improve performance on multimodal tasks.

## Appendix D Computational Efficiency

In this section, we compare the computational efficiency of our model with other state-of-the-art models, considering both pretraining and finetuning data from datasets such as VQAv2 and TextVQA. Owing to an optimized architecture and the utilization of high-quality pretraining data, our model demonstrates a marked reduction in resource consumption during training relative to models with comparable parameter magnitudes.

  
**Model** & **Pretraining Data** & **Pretraining compute** & **VQAv2 finetuning** & **TextVQA finetuning** \\  PaLI-3B & 1.6B & 56 & 1.1 & 0.2 \\ PaLI-17B & 1.6B & 453 & 4.5 & 0.9 \\ Flamingo-80B & 2.3B & 1381* & N/A & N/A \\ GIT2-5.1B & 12.9B & 5513* & N/A & N/A \\  CogVLM & 1.5B & 230.1 & 1.2 & 0.13 \\   

Table 9: Comparison of different models based on their computational efficiency. We use PFLOPS*days as metrics.

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: The abstract and introduction of this paper accurately reflect the contributions and scope of the research. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [NA] Justification: The paper has no limitation. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [NA]Justification: The paper does not include theoretical results. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: The paper fully discloses all the information needed to reproduce the main experimental results, including training details, training parameters, and model weights, which have been made open-source. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code**Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: The paper provides open access to the dataset used in the instruction fine-tuning phase and the training code, along with sufficient instructions to faithfully reproduce the main experimental results. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: The paper specifies all the training and test details, including data splits, hyperparameters, their selection process, the type of optimizer, etc., either in the main text or in the appendix, providing a comprehensive understanding of the results. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [No] Justification: The paper does not report error bars or other statistical significance information because the experimental results are distinct enough to be interpreted without them. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.

* The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).
* The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)
* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: The paper provides sufficient information on the computer resources required to reproduce each experiment, including the type of compute workers, memory, and time of execution, in both the main text and the appendix. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: Justification: The research conducted in the paper fully conforms with the NeurIPS Code of Ethics. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA] Justification: There is no societal impact of the work performed. Guidelines:* The answer NA means that there is no societal impact of the work performed.
* If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.
* Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.
* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [NA] Justification: The paper poses no such risks. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: The creators or original owners of assets such as code, data, and models used in the paper are properly credited, and the license and terms of use are explicitly mentioned and properly respected. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset.

* For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.
* If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.
* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [Yes] Justification: New assets introduced in the paper are well documented, and the documentation is provided alongside the assets. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.