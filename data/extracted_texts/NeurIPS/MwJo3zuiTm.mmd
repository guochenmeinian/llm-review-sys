# Free-Rider and Conflict Aware Collaboration Formation for Cross-Silo Federated Learning

Mengmeng Chen\({}^{1}\), Xiaohu Wu\({}^{1}\), Xiaoli Tang\({}^{2}\), Tiantian He\({}^{3,4}\), Yew-Soon Ong\({}^{2,3,4}\),

Qiqi Liu\({}^{5}\), Qicheng Lao\({}^{1}\), Han Yu\({}^{2}\)

\({}^{1}\)Beijing University of Posts and Telecommunications, China

\({}^{2}\)College of Computing and Data Science, Nanyang Technological University, Singapore

\({}^{3}\)Institute of High Performance Computing, Agency for Science, Technology and Research, Singapore

\({}^{4}\)Centre for Frontier AI Research, Agency for Science, Technology and Research, Singapore

\({}^{5}\)School of Engineering, Westlake University, China

{chenmengmeng0306,xiaohu.wu,qicheng.lao}@bupt.edu.cn, {xiaoli001,asysong,

han.yu}@ntu.edu.sg, he_tiantian@cfar.a-star.edu.sg, liuqiqi@westlake.edu.cn

Corresponding author

###### Abstract

Federated learning (FL) is a machine learning paradigm that allows multiple FL participants (FL-PTs) to collaborate on training models without sharing private data. Due to data heterogeneity, negative transfer may occur in the FL training process. This necessitates FL-PT selection based on their data complementarity. In cross-silo FL, organizations that engage in business activities are key sources of FL-PTs. The resulting FL ecosystem has two features: (i) self-interest, and (ii) competition among FL-PTs. This requires the desirable FL-PT selection strategy to simultaneously mitigate the problems of free riders and conflicts of interest among competitors. To this end, we propose an optimal FL collaboration formation strategy -FedEgoists- which ensures that: (1) a FL-PT can benefit from FL if and only if it benefits the FL ecosystem, and (2) a FL-PT will not contribute to its competitors or their supporters. It provides an efficient clustering solution to group FL-PTs into coalitions, ensuring that within each coalition, FL-PTs share the same interest. We theoretically prove that the FL-PT coalitions formed are optimal since no coalitions can collaborate together to improve the utility of any of their members. Extensive experiments on widely adopted benchmark datasets demonstrate the effectiveness of FedEgoists compared to nine state-of-the-art baseline methods, and its ability to establish efficient collaborative networks in cross-silos FL with FL-PTs that engage in business activities.

## 1 Introduction

Federated learning (FL) is a promising paradigm of distributed machine learning (ML) as it does not require sharing raw data between FL participants (FL-PTs), thereby upholding the privacy considerations . In the popular Federated Averaging (FedAvg) framework, multiple FL-PTs train a shared model locally with their own datasets, and upload their local model updates to a central server (CS), which then aggregates these model updates and distributes the resulting global model to each FL-PT . There are two types of FL . In _cross-device FL_, FL-PTs are end-user devices such as smartphones or IoT devices, and CS is the final owner of the trained model. In _cross-silo FL_, FL-PTs are companies or organizations in private or public sectors and are the final owners/users of the trained model, while the CS has the authority to coordinate the FL training process.

We consider in this paper the scenario of cross-silo FL where organizations in the business sector that engage in business activities are key sources of FL-PTs . The business sector is part of the private sector made up by companies and includes business that operate for profit; it is a key driver of technological innovation. The application of FL in the business sector has been studied in diverse domains, including digital banking, ridesharing, recommender systems, and Electric Vehicle charging services [28; 29; 39; 47; 53]. Regional banks have different user groups from their respective regions and are independent , while the banks in the same region can compete for users . Recently, a FL platform, MELLODDY, has been developed for drug discovery, including multiple companies from business sectors . Generally, competition exists when there are multiple organizations that are in the same market area and hope to unlock the power of FL [16; 45].

From a FL-PT's perspective, the scenario under study has two features: (i) self-interest and (ii) competition among FL-PTs. In business sectors, individuals are self-interested. This magnifies the free-riding problem where some FL-PTs benefit from the contributions of others without making any contribution to the FL ecosystem [20; 22]. Competition signifies that there is a potential conflict of interest between some two FL-PTs. Thus, two principles can simultaneously be used to meet the individual's needs: (1) a FL-PT can benefit from the FL ecosystem if and only if it can benefit the FL ecosystem, and (2) a FL-PT will not contribute to its competitors as well as the allies of its competitors . The first principle is proposed and formulated in this paper for the first time, while the second principle has previously been considered for other scenarios . From a FL manager's perspective, its priority is to regulate the FL ecosystem to meet the requirements of its customers (i.e., FL-PTs).

This paper studies cross-silo FL in business sectors where there are typically a limited number of FL-PTs (e.g., 2 to 100) [16; 27]. We consider both self-interest and competition for the first time in literature, although it has been well recognized that the free riding problem can be especially serious when self-interested FL-PTs engage in business competition [17; 41]. Since competition and self-interest are considered, all FL-PTs are partitioned into disjoint groups/coalitions, each with the common interest. The competition and benefit relationships among FL-PTs can be described as graphs. We use theoretical tools from graph theory and propose an efficient solution FedEgoists that can well satisfy the two principles above. Meanwhile, FedEgoists can help FL-PTs achieve the best possible ML model performances, i.e., subject to the two principles, the coalitions that FedEgoists finds are optimal in the sense that one coalition cannot increase the utility of any of its members by collaborating with any other coalitions. Extensive experiments over real-world datasets have demonstrated the effectiveness of the proposed solution compared to nine baseline methods, and its ability to establish efficient collaborative networks in cross-silo FL with FL-PTs that engage in business activities. The main motivation and results of this paper are illustrated in Figure 1.

## 2 Related Work

The existing FL works consider the following three lines of works separately and don't address the self-interest and competition features simultaneously.

Figure 1: An overview of the main motivation and results of this paper.

**Competition.** Collaboration between competing companies is an important research area in business studies [3; 11]. Recently, there has been a growing interest in the study of competition in cross-silo FL where a key application area is the business sector. There are two cases. _In the first case_, all FL-PTs are assumed to offer the same service in the same market area and compete against each other. Several works attempt to reduce the potential side effect after FL-PTs join a fully competitive FL ecosystem. Wu and Yu  aim to maintain a negligible change in market share [51; 52] and analyze the achievability of this objective. Tsoy and Konstantinov  and Huang et al.  study the profitability of FL-PTs, but are taken under different assumptions on the source of extra profit brought by FL. Specifically, Tsoy and Konstantinov  assume that: (i) each consumer allocates a fixed budget to multiple services from different markets, and (ii) if a FL-PT owns a better model, the consumer will thus allocate more of its budget to consume its service due to the improved service quality. Huang et al.  consider duopoly business competition and assume that, if the model-related service can be improved by FL, customers will have a willingness to pay more and FL-PTs thus have opportunities to increase their profits. _In the second case_, not all FL-PTs compete against each other, like one assumption in this paper, where some FL-PTs come from different market areas. Tan et al.  study how to avoid the conflicts of interest among FL-PTs for the first time and give a heuristic to realize Principle 2. However, Tan et al.  don't consider the self-interest feature of cross-silo FL in the business sector and cannot guarantee the optimal collaboration among independent coalitions without competition. The collaboration relationships among FL-PTs result in a collaboration graph \(_{u}\). In their heuristic, FL-PTs are considered one by one and \(_{u}\) is thus constructed gradually to guarantee that for each FL-PT, there is no path that can be reachable to or from its competitors. In this paper, we apply the concepts of cliques and strongly connected components in graph theory to satisfy the self-interest and competition features and further optimize the proposed algorithm.

**Free-riding.** Karimireddy et al.  show that a naive scheme can lead to catastrophic levels of free-riding where the benefits of data sharing are completely eroded. By contract theory, they introduce accuracy shaping based mechanisms to prevent free-riding.

**Coalitions.** A coalition is a cooperative relationship formed among different individuals due to certain interests. Each agent is only concerned with the contributions of other agents within the same coalition . Prior studies mainly focus on alleviating the side effect of data heterogeneity by allocating proper collaborators with data complementarity to each FL-PT. Donahue and Kleinberg  provide an analytical understanding of what partition of FL-PTs leads to a core-stable coalition structure for mean estimation and linear regression. Cui et al.  propose a heuristic algorithm to compute the core-stable coalition structure for general learning tasks. To some extent, the CS can dictate the collaboration relationships among FL-PTs only if doing so can better address the concerns of FL-PTs such as fairness and performance [6; 13; 59; 60]. Chaudhury et al.  treat all FL-PTs as a grand coalition and optimize a common model such that there is no other coalition \(\) of FL-PTs that could significantly benefit more by training a model only using the data of \(\). Sattler et al.  propose a novel federated multi-task learning framework where the geometric properties of the FL loss surface is leveraged to group FL-PTs into clusters with jointly trainable data distributions. Ding and Wang  partition a total of \(n\) FL-PTs into \(K\) groups, where \(K n\) and the FL-PTs with similar contributors are assigned to the same group. Then, a common model is returned to each group of FL-PTs such that the performance of using \(K\) models for \(n\) FL-PTs is a good approximation to the the performance of learning \(n\) personalized models for \(n\) FL-PTs respectively. However, the above works don't consider the adversarial relationships among FL-PTs.

## 3 Model and Assumptions

### Relationship Graphs

There is a set of FL-PTs denoted by \(=\{v_{1},v_{2},,v_{n}\}\). Each FL-PT \(v_{i}\) is uniquely equipped with its own local dataset \(_{i}\). A benefit graph \(_{b}\) is deployed to describe the potential collaboration advantages between any two FL-PTs. Together with the competing relationships represented by \(_{c}\) among different FL-PTs, we pave the way for the formation of the contribution graph \(_{u}\). The benefit graph \(_{b}\) is a weighted directed graph with an edge set \(E_{b}\) (i.e., \(_{b}=(,E_{b})\)) and is used to evaluate the data complementarity between FL-PTs. It is defined as follows. For any two FL-PTs \(v_{j}\) and \(v_{i}\), if \(v_{i}\) can benefit from \(v_{j}\)'s data, then there is a directed edge from \(v_{j}\) to \(v_{i}\) (i.e., \((v_{j},v_{i}) E_{b}\)) and the weight of this edge is \(w_{j,i}>0\) where a larger value of \(w_{j,i}\) signifies a larger benefit to \(v_{i}\) brought by\(v_{j}\). In contrast, if \(v_{i}\) cannot benefit from the data of \(v_{j}\), then \((v_{j},v_{i}) E_{b}\) and \(w_{j,i}=0\). The benefit graph can be computed by the hypernetwork technique like [5; 33; 42]. The competing graph \(_{c}\) is an undirected graph with an edge set \(E_{c}\), i.e., \(_{c}=(,E_{c})\). For any two FL-PTs \(v_{i}\) and \(v_{j}\), if they compete against each other, then there is an undirected edge between \(v_{i}\) to \(v_{j}\) (i.e., \((v_{i},v_{j}) E_{c}\)). If they are independent of each other, then \((v_{i},v_{j}) E_{c}\). The CS is assumed to be trustable. In the real world, the CS may represent an impartial and authoritative third-party (e.g., the industry association) . Then, FL-PTs can report their competitive relationships to the third-party in person and confidentiality agreements can be signed between the third-party and FL-PTs. Each FL-PT \(v_{i}\) will report its competitors to CS, as it hopes that CS will correctly utilize this information to prevent its competitors from benefiting from its data. Thus, CS has the knowledge of \(_{c}\). Although \(v_{i}\) may benefit from \(v_{j}\)'s data(\(w_{j,i}>0\)), CS has the authority to determine whether \(v_{i}\) can actually utilize \(v_{j}\)'s local model update information (i.e., indirectly use \(v_{j}\)'s data) in the FL training process or not. Let \(=(x_{j,i})\) be a \(n n\) matrix where \(x_{j,i}\{0,1\}\): for two different FL-PTs \(v_{i}\) and \(v_{j}\), \(x_{j,i}\) is set to one if \(v_{j}\) will contribute to \(v_{i}\) (i.e., \(v_{i}\) will utilize \(v_{j}\)'s local model update information) in the FL training process and \(x_{j,i}\) is set to zero otherwise. \(\) defines a directed graph \(_{u}=(,E_{u})\), called the data usage graph: \((v_{j},v_{i}) E_{u}\) if and only if \(j i,x_{j,i}=1\); then, \(v_{j}\) is said to be a collaborator or contributor of \(v_{i}\).

Finally, we introduce some concepts in graph theory. Let \(=(,E)\) denote an arbitrary graph whose node set is \(\) and whose edge set is \(E\). For any subset \(\), _an (induced) subgraph_\(()\) of the graph \(\) is such that (i) the node set of \(()\) is \(}\) and (ii) the edge set of \(()\) consists of all of the edges in \(E\) that have both endpoints in \(\). A subgraph \(()\) is said to be a _strongly connected component_ of \(\) if we have (i) \(()\) is strongly connected, i.e., there is a path in each direction between any two nodes and (ii) \(()\) is maximal in the sense that no additional edges or nodes from \(\) can be included in the subgraph without breaking the property of being strongly connected. The collection of strongly connected components forms a partition of the nodes of \(\). A simple path is a path in a graph which does not have repeating nodes.

### Collaboration Principles

The FL-PTs in the scenario under study have two features: (i) self-interest and (ii) competition among FL-PTs. Accordingly, there are two collaboration principles introduced below.

#### 3.2.1 Absence of free riders

While establishing collaboration relationships among FL-PTs, the following principle is used to guarantee the non-existence of free rider.

**Principle 1**.: _For any FL-PT \(v_{i}\), there exists a FL-PT \(v_{j}\) that benefits \(v_{i}\) if and only if there exists at least one FL-PT \(v_{k}\) that can benefit from \(v_{i}\)._

In this paper, all Fl-PTs are assumed to be self-interested and there exists competition among some FL-PTs. Let \(\) denote a partition of FL-PTs \(\) into \(K\) mutually disjoint groups where \(=\{_{1},_{2},,_{K}\}\) satisfies: (i) \(_{i}\), (ii) \(_{k=1}^{K}_{k}=\) and (iii) \(_{i}_{j}=\), \( i,j\{1,2,...,K\}\). For any \(_{k}\), the collaboration relationships among the FL-PTs of \(_{k}\) are established according to the subgraph \(_{b}(_{k})\), i.e., for any \(v_{i},v_{j}_{k}\), \(v_{j}\) is a contributor of \(v_{i}\) if and only if there exists an edge \((v_{j},v_{i})\) in the graph \(_{b}(_{k})\). Each FL-PT \(v_{i}_{k}\) is only concerned with the contributions of other FL-PTs within the same \(_{k}\).

**Definition 1** (Coalitions).: _A partition \(=\{_{1},_{2},,_{K}\}\) is said to be a set of coalitions if we have for any \(_{k}\) with \(|_{k}| 2\) and \(v_{i}_{k}\) that_

\[_{v_{j}_{k}-\{v_{i}\}}w_{i,j}>0 _{v_{j}_{k}-\{v_{i}\}}w_{j,i}>0\] (1)

In a coalition \(_{k}\) with \(|_{k}| 2\), each FL-PT \(v_{i}_{k}\) can both benefit and benefit from other members in \(_{k}-\{v_{i}\}\). Thus, in a set \(\) of coalitions, Principle 1 will be realized since Eq. (1) is satisfied. If \(|_{k}|=1\), the single FL-PT of \(_{k}\) neither benefit nor benefit from any other FL-PT.

#### 3.2.2 Avoiding conflict of interest

To avoid conflict of interest, a FL-PT will not contribute to its competitors (i.e., its enemies) and any FL-PTs that help its competitors (i.e., the friends of its enemies). Also, it doesn't hope to see others help the supporters/friends of its competitors (in)directly. For any FL-PT \(v_{i}\), let \(_{s}\) denote the supporter alliance of \(v_{i}\) defined as: \(_{i}=\{v_{k}\,|\,v_{k}v_{i}_{u}\}\). Let us consider any two competing FL-PTs \(v_{j}\) and \(v_{i}\) where \((v_{j},v_{i}) E_{c}\). To avoid conflict of interest, \(v_{j}\) will not contribute to any member of \(_{i}\). Like , this is defined as the following principle by which it is strictly guaranteed that no FL-PTs will contribute to its competitors (in)directly.

**Principle 2**.: _For any two competing FL-PTs \(v_{i}\) and \(v_{j}\), \(v_{j}\) is unreachable to \(v_{i}\) in the data usage graph \(_{u}\)._

### Problem Description

Now, we propose a proper problem formulation such that the resulting solution can well satisfy the FL-PTs' needs and help them achieve the best possible ML model performances. All FL-PTs are divided into a set \(\) of coalitions. For the FL-PTs of of a coalition \(_{k}\), their collaboration relationships are established according to the subgraph \(_{b}(_{k})\). The utility \(u(_{k})\) of a coalition \(_{k}\) is defined as the sum of the edge weights of \(_{b}(_{k})\). Formally, let \(E_{b}(_{k})\) denotes the edge set of \(_{b}(_{k})\); then, \(u(_{k})=_{(v_{j},v_{i}) E_{b}(_{k})}w_{j,i}\); given a FL-PT \(v_{i}_{k}\), its utility is defined as \(u_{i}(_{k})=_{(v_{j},v_{i}) E_{b}(_{k})}w_{j,i}\) where \(v_{i}\) is fixed; here, the utility of a coalition is the sum of the utilities of all its members, i.e., \(u(_{k})=_{v_{i}_{k}}u_{i}(_{k})\). For two coalitions \(_{k}\) and \(^{}_{k}\) with \(_{k}^{}_{k}\), \(_{b}(_{k})\) is a subgraph of \(_{b}(^{}_{k})\); then the utility of \(v_{i}\) in a larger coalition \(^{}_{k}\) is no smaller than its utility in a smaller coalition \(_{k}\), i.e., \(u_{i}(_{k}) u_{i}\)\((^{}_{k})\).

In this paper, our final problem is to find a partition \(\) of FL-PTs such that

* Principles 1 and 2 are satisfied.
* Subject to Principles 1 and 2, no coalitions of \(\) (i.e., no subset \(^{}\) of \(\)) can collaborate together and be merged into a larger coalition with a higher utility; in other words, after merging these coalitions into a larger one, no FL-PTs in these coalitions \(^{}\) increase their utilities under the larger coalition. Formally, let \[=\{^{}\,|\,_{_{k}^{} }u(_{k})<u(_{_{k}^{}}_{k}),_{_{k}^{}}_{k}\}.\] Then, \(\) satisfies: \[=.\] (2)

## 4 Solution

Now, we give an algorithm that satisfies Principles 1 and 2 and Eq. (2). It is presented as Algorithm 1 and its main idea is as follows. Firstly, we find a partition \(=\{}_{1},}_{2},,}_{H}\}\) of all FL-PTs \(\) such that the FL-PTs of each subset \(}_{h}\) are independent of each other. Secondly, \(}_{h}\) is further partitioned into several subsets/coalitions, denoted as \(SCC_{h}=\{}_{h,1},}_{h,2},,}_{h,y_{h}}\}\) such that for all \(l[1,y_{h}]\), \(_{b}(}_{h,l})\) is a strongly connected component of \(_{b}(}_{h})\). Thirdly, for any coalitions of \(_{h=1}^{H}SCC_{h}\), we merge these coalitions into a larger one if doing so achieves a higher coalition utility without violating Principles 1 and 2.

Below, we detail Algorithm 1. Firstly, we define \(^{-}_{c}=(,E^{-}_{c})\) as the inverse of the competing graph \(_{c}\), i.e., any two nodes of \(^{-}_{c}\) are adjacent if and only if they are not adjacent in \(_{c}\); if there is an edge between two nodes in \(^{-}_{c}\), then these two nodes are said to be independent of each other (line 2). In graph theory, a clique of an arbitrary undirected graph \(=(,E)\) is a subset of nodes \(\) in which any two nodes of \(\) are connected by an edge in the subgraph \(()\); a maximal clique is a clique such that if it is extended by adding any other node, the resulting larger subgraph is not complete. We search for all maximal cliques within \(^{-}_{c}\), which form a partition \(\) of all FL-PTs \(\). Any two FL-PTs in a subset \(}_{k}\) are independent of each other. In line 3, the cliques of \(^{-}_{c}\) can be found by the classic Bron-Kerbosch algorithm .

Secondly, for each \(}_{h}\), we process the subgraph \(_{b}(}_{h})\) of the benefit graph. All strongly connected components of \(_{b}(}_{h})\) are founded by the classic Tarjan algorithm . The node sets of all these components constitute a partition of \(}_{h}\), denoted as \(SCC_{h}\) (lines 4-5). Thirdly, we also use \(_{y}\) to denote a set \(}_{h,y_{h}}\) and let \(=_{h=1}^{H}SCC_{h}=\{_{1},_{2},,_{Y}\}\) where \(Y=_{h=1}^{H}y_{h} n\) and \(_{y=1}^{Y}_{y}=\) (line 6); then we construct by Definition 2 two new graphs \(_{b}\) and \(_{c}\) whose node sets are \(\) (line 7).

**Definition 2**.: _In the graph \(_{b}\), there is a directed edge from \(_{l}\) to \(_{l^{}}\) if and only if there exist two nodes \(v_{i}_{l}\) and \(v_{j}_{l^{}}\) such that \((v_{i},v_{j})\) is a directed edge in the benefit graph \(_{b}\). In the graph \(_{c}\), there is an undirected edge between \(_{l}\) and \(_{l^{}}\) if and only if there exist two nodes \(v_{i}_{l}\) and \(v_{j}_{l^{}}\) such that \((v_{i},v_{j})\) is an undirected edge in the competing graph \(_{c}\). For any two coalitions \(_{l}\) and \(_{l^{}}\) of \(\), \(_{l}\) is said to benefit (resp. benefit from) \(_{l^{}}\) if there is a directed edge \((_{l},_{l^{}})\) (resp. \((_{l^{}},_{l})\)) in the graph \(_{b}\); \(_{l}\) and \(_{l^{}}\) are said to be competitive if there is an undirected edge \((_{l},_{l^{}})\) in the graph \(_{c}\) and independent of each other otherwise._

In line 9, Algorithm 2 is called where there is a while-loop. In Algorithm 2, we check whether the loop condition in line 1 is satisfied or not; this loop condition will be called _the cycle condition_ subsequently. As illustrated by \(_{2}\) and \(_{5}\) in Figure 2(a), if "yes", let \(=\{_{y_{i}}\}_{i=1}^{}\) denote the nodes of this cycle. The following operations are taken to update the graph \(_{b}\) and \(_{c}\): (i) the nodes of \(\) are merged into a new node \(_{y}\) where all the edges in the graph \(_{b}\) that point to (resp. point from) the nodes of \(\) change to point to (resp. point from) \(_{y}\), and (ii) the nodes of \(\) in \(_{b}\) also exist in the graph \(_{c}\); such nodes in \(_{c}\) are still merged into a new node \(_{y}\), and all the edges in the graph \(_{c}\) whose endpoints are the nodes of \(\) change to become the edges whose endpoints are \(_{y}\). The above operations will be used as a routine and are given in Algorithm 3.

``` Input: The benefit graph \(_{b}\), the competing graph \(_{c}\) Output: The set \(\) of coalitions
1\(\);// Record the set of coalitions found by this algorithm. Construct the inverse of \(_{c}\), denoted as \(_{c}^{-}\);
2 Find all maximal cliques of \(_{c}^{-}\), denoted as \(=\{}_{1},,}_{H}\}\), by the Bron-Kerbosch algorithm;
3for\(h 1\)to\(H\)do
4 Find all strongly connected components of \(_{b}(}_{h})\) by the Tarjan algorithm; // The node sets of the components of \(_{b}(}_{h})\) are denoted as \(SCC_{h}=\{}_{h,1},,}_{h,y_{h}}\}\).
5 Let \(=\{_{1},_{2},,_{Y}\}=_{h=1}^{H}SCC_{h}\) where \(Y=_{h=1}^{H}y_{h}\);
6 Construct by Definition 2 a directed graph \(_{b}\) and an undirected graph \(_{c}\) whose node sets are \(\); // \(_{y}\) is a node in \(_{b}\) and \(_{c}\) but also represents a subset of \(\). /* Below, the node \(_{l}\) of \(_{b}\) with \(|_{l}|=1\) is processed.
7 Let \(y Y+1\); // \(y\) is the index of the new node \(_{y}\) to be constructed.
8\((,_{b},_{c},y)(,_{b}, _{c},y)\), presented as Algorithm 2;
9\((,_{b},_{c},y)(,_{b}, _{c},y)\), presented as Algorithm 4;
10\(/*\)Below, the edge \((_{l},_{l^{}})\) of \(_{b}\) with \(|_{l}| 2\) and \(|_{l^{}}| 2\) is processed. */
11\((,_{b},_{c},y)(, _{b},_{c},y)\), presented as Algorithm 5; ```

**Algorithm 1**Conflict-free Coalitions without Free Riders

In line 10, Algorithm 4 is called where there are two while-loops. In Algorithm 4, we check whether the loop condition in the outer while loop is satisfied (line 1); this loop condition will be called _the

Figure 2: Illustration of Algorithm 1.

path condition_. If "yes", let \(=\{_{y_{i}}\}_{i=1}^{}\) denote the nodes of the simple path. Then, Algorithm 3 is called with the current \(\) as its input. Afterwards, Algorithm 2 is called here to remove that type of cycles defined in line 1 of Algorithm 2. In line 11, Algorithm 5 is called where there are three while-loops. We check whether the loop condition in the outer while loop is satisfied (line 1); this loop condition is called _the node condition_. As illustrated by \(_{1}\) and \(_{4}\) in Figure 2(a), if "yes", let \(=\{_{l}\}\{_{l^{}}\}\); then, Algorithm 3 is called with \(\) as its input. Afterwards, Algorithms 2 and 4 are called here to guarantee that those types of cycles and simple paths in the cycle and path conditions don't exist in the graph \(_{b}\).

```
1whilethere is a node \(_{y_{i}}\) of \(_{b}\) with \(|_{l_{i}}|=1\) such that (i) there is a cycle \((_{y_{1}},_{y_{2}},,_{y_{}},\)\(_{y_{1}})\) in the graph \(_{b}\) that contains \(_{y_{i}}\) and (ii) the nodes \(_{y_{1}},,_{y_{}}\) of this cycle are independent of each otherdo// the cycle condition.
2\((_{y},,_{b},_{c},y)\)Merge(\(,,_{b},_{c},y)\), presented as Algorithm 3, where \(=\{_{y_{i}}\}_{i=1}^{}\);
3Return\((,_{b},_{c},y)\); ```

**Algorithm 3**Merge(\(,,\,_{b},\,_{c},\,y\))

The time complexity of algorithm 1 depends on the Bron-Kerbosch algorithm in line 3 and is \((3^{n/3})\); please see Appendix A.1 for a detailed analysis. In line 1 of Algorithm 2 or 4, any two coalitions \(_{y_{i}}\) and \(_{y_{j}}\) are independent (of each other); in line 1 of Algorithm 5, the two coalitions \(_{l}\) and \(_{l^{}}\) are independent. Any two members from such two coalitions respectively will be independent by Definition 2. In each coalition, all its members are independent. Thus, all members of the merged \(_{y}\) are independent of each other. For any coalition \(_{y}\), the collaboration relationships among its members are established according to the subgraph \(_{b}(_{y})\); thus, we have two conclusions. Firstly, Principle 2 is realized since for the data usage graph \(_{u}\), paths may exist only between two nodesin a coalition. Secondly, after the merge operation in line 2 of Algorithm 2 or 4, for any \(_{y_{i}}\) with \(|_{y_{l}}|=1\), it can benefit from its direct predecessor and benefit its direct successor in the cycle or the simple path, satisfying Eq. (1). As a result, we have the following proposition whose detailed proof can be found in Appendix A.2.

**Proposition 1**.: _Upon completion of Algorithm 1, Principles 1 and 2 are realized._

Upon completion of Algorithm 1, the cycle condition, the path condition, and the node condition are not satisfied. Then, we have the following two conclusions: (i) when the cycle condition isn't satisfied, we have for any coalition \(_{y_{i}}\) with \(|_{y_{i}}|=1\) that it can be merged with other coalitions without violating Principles 1 and 2 if and only if the path condition is satisfied in the graphs \(_{b}\) and \(_{c}\); and (ii) When both the cycle condition and the path condition aren't satisfied, we have for any coalition \(_{l}\) with \(|_{l}| 2\) that it can be merged with other coalitions without violating Principles 1 and 2 if and only if the node condition is satisfied in the graphs \(_{b}\) and \(_{c}\). The proofs of the above two conclusions are given in Appendix A.3. With these two conclusions, we further have the following proposition.

**Proposition 2**.: _Upon completion of Algorithm 1, Eq. (2) holds._

## 5 Evaluation

### Experimental Setup

**Datasets & data heterogeneity.** We conduct experiments on the CIFAR-10 and CIFAR-100 datasets with different data heterogeneity settings . Also, we use a real-world dataset eICU  to illustrate the practicality of FedEgoists. Both the **CIFAR-10** and **CIFAR-100** datasets contain 60,000 color images for image classification tasks but have different levels of complexity. CIFAR-10 images have 10 classes with 6,000 images per class, while CIFAR-100 is more complex and has 100 classes with only 600 images per class. We simulate the data heterogeneity by two typical approaches: (i) pathological distribution [5; 32; 42; 61], where each FL-PT is randomly allocated 2 classes of images for CIFAR-10 and 20 classes of images for CIFAR-100, and (ii) Dirichlet distribution [41; 57; 62], where a distribution vector \(q_{c}^{n}\) is drawn from the distribution \(Dir_{n}()\) for each class \(c\) and FL-PT \(v_{i}\) is allocated a \(q_{c,i}\) proportion of data samples of class \(c\); smaller \(\) value results in higher data heterogeneity, and we set \(=0.5\). Above, we use standard datasets and randomly divide each dataset into different parts that are used as the local data of different FL-PTs. We also use a real-world dataset that contains data directly from multiple different FL-PTs. Specifically, **eICU** is a dataset collecting EHRs from many hospitals across the United States admitted to the intensive care unit (ICU). The task is to predict mortality during hospitalization. More details on the way of processing these datasets are given in Appendix B.1.

**Comparison baselines. FedAvg** is widely recognized as a vanilla FL algorithm. Multiple representative personalized FL (PFL) methods are used as baselines for comparison . **FedProx** and **SCAFFOLD** represent two typical approaches that make the aggregated model at the CS close to the global optima and are two benchmarks in . In other baseline methods, different personalized models are trained for individual FL-PTs. **pFedHN** and **pFedMe** represent two approaches based on hypernetworks and meta-learning respectively. **FedDisco** and **pFedGraph** are two approaches based on data complementarity, which are proposed recently. **FedOra is a method that assesses whether a FL-PT's generalization performance can benefit from knowledge transferred from others and maximizes it. The last baseline is **Local** where each FL-PT simply takes local ML training without collaboration. These traditional FL approaches cannot address the issues of both self-interest and competition. Thus, we use the operations in lines 1-4 of Algorithm 1 to generate a set of coalitions, denoted as \(_{h=1}^{H}SCC_{h}\) where \(SCC_{h}=\{}_{h,1},,}_{h,y_{h}}\}\). If \(|}_{h,1}| 2\), \(}_{h,1}\) represents a group of independent FL-PTs that can collaborate together following Principles 1 and 2. the above nine FL approaches are applied to each group of such FL-PTs to generate the baseline results.

Finally, like [5; 26; 42], the hypernetwork technique in  is used to compute the benefit graph \(_{b}\) and a hypernetwork is constructed by a multilayer perceptron (MLP). The specific way of generating \(_{b}\) is introduced in Appendix B.2. The used network structures are introduced in Appendix B.3. There are \(n=10\) FL-PTs in the CIFAR-10, CIFAR-100 and eICU experiments.

[MISSING_PAGE_FAIL:9]

are systematically presented in Table 3, which shows that in the worst case, the proposed FedEgoists has a performance very close to the best performance of all the baseline approaches.

Finally, we also conduct experiments to show the effect of data heterogeneity and the related results can be found in Appendix B.4.2.

### Real-world Collaboration Example: eICU

Following the setting in [5; 42], there are ten hospitals in total, with \(\{v_{i}\}_{i=0}^{4}\) as large hospitals and \(\{v_{i}\}_{i=5}^{9}\) as small hospitals. Due to the extreme imbalance of data labels, where over 90% are negative labels, we use the AUC scores to evaluate the performance of the trained model. Suppose there are more than one large hospital located in the same city while small hospitals are dispersed in different rural areas with lower population densities; competition mainly occurs among large hospitals. We posit that competitive relationships exist between the following pairs of FL-PTs: \((v_{1},v_{4})\), \((v_{2},v_{3})\), and \((v_{2},v_{4})\). Table 4 presents our experimental results. In Appendix B.5, we also illustrate the collaboration relationships among the 10 FL-PTs. In the naive baseline methods, the formed coalitions are \(\{v_{0},v_{3},v_{4}\}\), \(\{v_{1},v_{2}\}\) and \(\{v_{5},v_{6},,v_{9}\}\). In the proposed method, larger coalitions are formed so that their members can benefit from more FL-PTs in the same coalition; the formed coalitions are \(\{v_{0},v_{3},v_{4},,v_{9}\}\) and \(\{v_{1},v_{2}\}\). Thus, FedEgoists can facilitate the collaboration among FL-PTs. In Table 4, it is observed that FedEgoists achieves a better performance on the whole.

In addition to CIFAR-10, CIFAR-100 and eICU, we also conduct experiments on the synthetic data like  and the related settings and results are presented in Appendix B.6.

## 6 Conclusions

In this paper, we consider cross-silos FL where organizations in the business sector that engage in business activities are key sources of FL-PTs. The resulting FL ecosystem has two features: (i) self-interest and (ii) competition among FL-PTs. Correspondingly, two principles are proposed to build a sustainable FL ecosystem: (1) a FL-PT can benefit from the FL ecosystem if and only if it can benefit the FL ecosystem, and (2) a FL-PT will not contribute to its competitors as well as the supporters of its competitors. The FL ecosystem needs to be tailored to realize these principles. In this paper, we propose an efficient solution that can well realize the two principles above. In the meantime, for any two coalitions without competition that can collaborate together, one coalition cannot increase its utility by collaborating with the other coalition. Extensive experiments over real-world datasets have demonstrated the effectiveness of the proposed solution compared to nine baseline methods, and its ability to establish efficient collaborative networks in cross-silos FL with FL-PTs that engage in business activities.

   AUC & local & FedEgo & FedEgo & scaffold & pEFORE & pEFORE & pEFORE & pEFORE & pEFORE & pEFORE \\  \(v_{0}\) & 53.64422.12 & 63.52422.240 & 80.4249.85 & 80.2449.92 & 52.30216.79 & 41.94419.14 & 60.84413.07 & 80.4249.85 & **90.362.26** & 66.36419.28 \\ \(v_{1}\) & 67.9446.88 & 62.55416.49 & 57.03316.62 & 57.21416.68 & 46.00843.96 & 76.61414.47 & 67.367414.97 & 59.6224.79 & 41.52216.91 & **81.5846.65** \\ \(v_{2}\) & 37.3317.74 & 76.48412.70 & 70.60134.76 & 60.3846.56 & 36.48428.79 & 79.62416.79 & **69.740.60** & 73.28517.87 & 17.4569.62 & 66.0443.21 \\ \(v_{3}\) & 79.88281.16 & 67.04264.76 & 78.74814.56 & 46.78741.54 & 44.79234.50 & 53.5246.25 & 53.0834.824 & 78.6924.74 & 78.15 & 127.84 & **4405.76** \\ \(v_{4}\) & 52.4811.61 & 73.46415.58 & 73.6349.74 & 75.75411.07 & 57.07423.21 & 48.75422.68 & 70.1549.96 & 49.6145.31 & 48.9546.80 & **75.84411.26** \\ \(v_{5}\) & 39.4549.06 & 57.974.66 & 51.9491.316 & 70.162 & 55.1542.92 & 55.5245.21 & 53.039.79 & **89.374.71** & 77.7254.28 & 48.1415.60 \\ \(v_{6}\) & 68.0362.27 & 76.1416.87 & 79.6247.62 & 78.7481.57 & 51.232.51 & 42.1116.65 & 62.2864.41 & **69.880** & **76.95** & 85.111.86 & 86.8647.52 \\ \(v_{7}\) & 73.3647.08 & 71.8049.52 & 73.5510.48 & 73.59410.17 & 56.6064.56 & 51.2145.01 & 68.45410.98 & 76.8211.10 & 75.5345.94 & **77.9741.494** \\ \(v_{8}\) & 36.2482.226 & 75.3552.70 & 77.4738.07 & 77.4738.36 & 61.22810.49 & 46.7116.08 & 65.0533.41 & 69.1632.12 & 72.76261.201 & **90.6010.57** \\ \(v_{9}\) & 71.701.064 & 64.1492.42 & 63.8294.32 & 63.7939.46 & 42.7126.63 & 42.41247.42 & 63.4241.06 & 63.7610.12 & 55.5547.62 & **79.888.29** \\  Avg & 58.01 & 68.62 & 70.66 & 70.77 & 51.08 & 54.02 & 69.95 & 72.06 & 72.61 & **74.79** \\   

Table 4: eICU

    &  &  &  &  &  \\   & PAT & Dir & PAT & Dir & PAT & Dir & PAT & Dir & PAT & Dir & PAT & Dir \\  CIFAR10 & 0.011000 & -0.002903 & 0.022900 & -0.000624 & 0.025800 & -0.000630 & 0.028800 & -0.005725 & -0.002399 & -0.000100 \\  CIFAR100 & -0.000999 & 0.076002 & 0.011400 & -0.000008 & -0.000636 & -0.0009356 & -0.000020 & -0.0032153 & -0.000699 & -0.027078 \\   

Table 3: The worst-case performance of the proposed approach compared with the baseline approaches.