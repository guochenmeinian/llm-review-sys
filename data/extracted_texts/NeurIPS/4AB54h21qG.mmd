# FlexSBDD: Structure-Based Drug Design with Flexible Protein Modeling

Zaixi Zhang\({}^{1,2,3}\), Mengdi Wang\({}^{3}\), Qi Liu\({}^{1,2}\),

Qi Liu is the corresponding authors.

1: School of Computer Science and Technology, University of Science and Technology of China

2:State Key Laboratory of Cognitive Intelligence, Hefei, Anhui, China

3:Princeton University

zaixi@mail.ustc.edu.cn, mengdiw@princeton.edu, qiliuql@ustc.edu.cn

###### Abstract

Structure-based drug design (SBDD), which aims to generate 3D ligand molecules binding to target proteins, is a fundamental task in drug discovery. Existing SBDD methods typically treat protein as rigid and neglect protein structural change when binding with ligand molecules, leading to a big gap with real-world scenarios and inferior generation qualities (e.g., many steric clashes). To bridge the gap, we propose FlexSBDD, a deep generative model capable of accurately modeling the flexible protein-ligand complex structure for ligand molecule generation. FlexSBDD adopts an efficient flow matching framework and leverages E(3)-equivariant network with scalar-vector dual representation to model dynamic structural changes. Moreover, novel data augmentation schemes based on structure relaxation/sidechain repacking are adopted to boost performance. Extensive experiments demonstrate that FlexSBDD achieves state-of-the-art performance in generating high-affinity molecules and effectively modeling the protein's conformation change to increase favorable protein-ligand interactions (e.g., Hydrogen bonds) and decrease steric clashes.

## 1 Introduction

Deep generative models are profoundly impacting drug discovery, particularly within the challenging subfield of structure-based drug design (SBDD) . SBDD focuses on generating drug-like ligand molecules conditioned on target-binding proteins, necessitating precise modeling of complex geometric structures and detailed protein-ligand interactions. Some early attempts adopt autoregressive models to generate 3D ligand molecules atom-by-atom  or fragment-by-fragment . To overcome the limitations of autoregressive methods (e.g., error accumulation), recent works  leverage non-autoregressive diffusion-based models  to predict the distribution of ligand atom types and positions via denoising and have achieved the state-of-the-art performance.

Despite the remarkable success, most existing SBDD models treat target proteins as rigid and neglect the conformation change. However, according to the "induced fit" theory in biochemistry , proteins are flexible structures that undergo structural changes upon ligand binding, leading to enhanced interactions and binding affinity. In structural biology, the protein structure that has a bound small molecule is referred to as ligand-bound or **holo** conformation, and the protein structure without a bound small molecule is called ligand-free or **apo** conformation . For example, Figure. 1 (a)&(b) shows the aligned apo and holo-structures of two proteins, and the extent of structural change is influenced by the specific properties and structures of the proteins and ligands. The neglect of protein flexibility in SBDD leads to several significant drawbacks: (1) The generated protein-ligand complexes are prone to have sub-optimal protein structures and steric clashes as the protein cannot adaptively adjust structures according to different generated molecules . (2) The chemical searchspace is overly restricted by existing holo data, limiting the exploration of diverse high-quality drugs. As a result, SBDD models tend to produce molecules that are similar to those fitting the predefined pocket space [53; 62]. (3) A large gap between real-world physical binding process and computational simulations, which may lead to high false positive rates in real-world drug discovery applications i.e., most computationally designed drugs do not have real therapeutic effects .

However, several challenges exist for flexible protein modeling in existing SBDD models. Firstly, proteins are macromolecules with thousands of atoms, which brings formidable high degrees of freedom for flexible structural modeling . Secondly, there lack apo-holo structure pair datasets for learning structural changes . Finally, the widely used diffusion-based models are time-consuming for exploring the huge space of flexible protein-ligand complexes .

To address the aforementioned challenges, we propose a new method FlexSBDD capable of modeling the flexibility of target protein while generating _de novo_ 3D ligand molecules. To reduce the computational complexity, we focus on the key degrees of freedom in protein structure (i.e., \(C_{}\) coordinate, the orientation of the backbone frame, and the sidechain dihedral angels to determine the full atom structure) inspired by previous works [67; 77; 9]. As for the dataset, we employ the Apobind dataset  with additional Apo data generated by OpenMM relaxation  and Rosetta repacking  as data augmentation. For efficient and stable generation, we adopt a flow-matching framework [49; 5] that defines multimodal conditional flows for different components in protein-ligand complex and use E(3)-equivariant network with scalar-vector dual representation for learning the chemical and geometric information. The input to FlexSBDD is the initialized protein structure (e.g., apo structure). FlexSBDD learns to iteratively update protein-ligand structures and ligand atom types from \(time=0\) to \(1\) and finally outputs both the generated 3D ligand molecule and the updated protein structure (holo). Extensive evaluations on benchmarks and case studies show the advantage of FlexSBDD in generating structurally valid protein-ligand complexes with high affinity, more favorable non-covalent interactions, and fewer steric clashes. The code of the paper is provided at https://github.com/zaixizhang/FlexSBDD. We highlight our main contributions as follows:

* We propose a flow-matching-based generative model FlexSBDD, capable of modeling protein flexibility while generating _de novo_ 3D ligand molecules.
* FlexSBDD not only achieves state-of-the-art performance on benchmark datasets (e.g., -9.12 Avg. Vina Dock score), but also learns to adjust the protein structure to increase favorable interactions (e.g., 1.96 Avg. Hydrogen bond acceptors) and decrease steric clashes.
* With a concrete case study on KRASG12C, a promising target of solid tumor, we demonstrate FlexSBDD's potential to discover cryptic pockets for drug discovery.

## 2 Related Works

### Structure-Based Drug Design

Structure-based drug design (SBDD)  aims to directly generate 3D ligand molecules inside target protein pockets. LiGAN  first uses 3D CNN to encode the protein-ligand structures and generate ligands by atom fitting and bond inference from the predicted atom densities. Several follow-up works have adopted autoregressive models for atom-wise [53; 50; 57; 79; 78] or fragment-wise [27; 60; 85; 78] generation of 3D molecules. For example, Pocket2Mol  adopts the geometric vector perceptrons  as the context encoder and autoregressively predicts the atom types, atom coordinates, and bond types until the generated molecule is completed. FLAG  and DrugGPS  predict the next molecular fragment and add it to the partially generated molecule in each round. Recently, powerful diffusion models have started to make a significant impact in SBDD, demonstrating promising results with non-autoregressive sampling [65; 28; 29; 46]. They usually represent the protein-ligand complex as 3D atom point sets, and define diffusion and denoising processes for both continuous atom coordinates and discrete atom types. For instance, TargetDiff  proposes a target-aware molecular diffusion process with a SE(3)-equivariant GNN denoiser. While there has been significant progress, existing approaches often neglect the critical aspect of protein flexibility. To address this gap, we explicitly model the conformational change of protein in FlexSBDD.

[MISSING_PAGE_FAIL:3]

field \(u_{t}(x|x_{1})\) and use Conditional Flow Matching (CFM) objective as:

\[_{CFM}()=_{t,p_{1}(x_{1}),p_{t}(x|x_{1})}\|v_{} (x,t)-u_{t}(x|x_{1})\|_{g}^{2},\] (1)

because \(_{FM}\) and \(_{CFM}\) have the same gradients according to previous works [14; 49]. \(t\) is sampled from the uniform distribution between 0 and 1. Once the gradient field \(v_{}\) is learned, we can integrate ordinary differential equations (ODE): \(_{t}(x)=v_{}(_{t}(x),t)\) with \(_{0}(x)=x,_{t}(x)=x_{t}\) and ODE solvers  to push data from prior distribution \(p_{0}\) to the data distribution \(p_{1}\). Specifically, a data point from the prior distribution \(p_{0}\) is \(_{0}=\{_{0},_{0}\}\), where \(_{0}\) is the initialized protein structure (e.g., the apo conformation) and \(_{0}\) is the initialized ligand molecule. The number of ligand atoms is sampled from the reference dataset distribution; the atom types are initialized with uniform distributions; the atom coordinates are initialized with Gaussian distributions inside the protein pocket following . The target data distribution \(p_{1}\) is the holo protein-ligand complex \(_{1}\) from datasets.

## 4 FlexSBDD

Figure. 2 shows the overview of FlexSBDD. Given the initialized target protein structure, the goal of FlexSBDD is to generate the binding ligand molecule as well as the adjusted protein structure. In other words, the output is the generated protein-ligand complex. Given the complexity of the protein-ligand system, we first introduce flow matching on the protein backbone (Sec. 4.1), side chain (Sec. 4.2), and ligand atom type (Sec. 4.3) respectively. Then we show E(3)-equivariant network in Sec. 4.4. Finally, we discuss the training and generation procedure of FlexSBDD (Sec. 4.5).

### FlexSBDD on Protein Backbone and Ligand Coordinates

Following previous works [9; 41; 77], The backbone atom positions of each residue in a protein can be modeled as a rigid frame \(T=(,) SE(3)\), consisting of \(C_{}\) coordinate \(^{3}\) (we use \(\) to denote coordinates in the rest of this paper) and the frame orientation matrix \( SO(3)\). For simplicity, the following deduction focuses on a single residue/frame and can be generalized to all the residues in the protein. The conditional flow of frame \(T_{t}\) is defined to be along the geodesic path connecting \(T_{0}\) (apo frame) and \(T_{1}\) (holo frame): \(T_{t}=_{T_{0}}(t_{T_{0}}(T_{1}))\), where \(_{T}\) represents the exponential map and \(_{T}\) denotes the logarithmic map at \(T\)[77; 9]. Specifically, the conditional flow for the Euclidean coordinate vector \(_{t}\) and the orientation matrix \(_{t}\) are defined as:

\[(^{3})_{t}=(1-t)_{0 }+t_{1}\] (2) \[((3))_{t}=_{_{0}} (t_{_{0}}(_{1})).\] (3)

Both \(^{3}\) and \((3)\) are simple manifolds and their closed-form geodesics can be derived. The exponential map \(_{_{0}}\) can be computed using Rodrigues' formula and the logarithmic map \(_{_{0}}\) is similarly easy to compute with its Lie algebra \((3)\). In protein-ligand complex, the ligand atom coordinates have the same data modality and probability path as \(C_{}\). The loss function of FlexSBDD

Figure 2: **Overview of FlexSBDD. The flow matching-based generative process starts from an apo protein structure and the initialized ligand molecule. At each time step, FlexSBDD updates \(_{t}\) to \(_{t+ t}\) and finally obtains the holo protein-ligand structure at \(t=1\). In the illustration, the gray dots indicate protein residues and the other dots indicate ligand atoms with different element types.**

for protein backbone and ligand coordinates is the summation of the following two terms:

\[_{coord}()=_{t,p_{1}(_{1}),p_{0}(_{0}),p_{ t}(_{t}|_{0},_{1})}+N_{l}}_{i=1}^{N_{p}+N_{l}} \|v_{}^{(i)}(_{t}^{(i)},t)-_{1}^{(i)}+_{0}^{(i)} \|_{2}^{2},\] (4) \[_{ori}()=_{t,p_{1}(_{1}),p_{0}( _{0}),p_{t}(_{1}|_{0},_{1})}}_{i=1}^ {N_{p}}\|v_{}^{(i)}(_{t}^{(i)},t)-_{t}^{(i) }}(_{1}^{(i)})}{1-t}\|_{(3)}^{2}\,\] (5)

where the superscript \((i)\) in \(^{(i)}\) and \(^{(i)}\) is the index of the residues/ligand atoms. For conciseness, we use Equ. 4 to represent the coordinate loss with respect to \(N_{p}\)\(\)-Carbon and \(N_{l}\) ligand atoms.

### FlexSBDD on Sidechain Torsion Angles

In FlexSBDD, we define sidechain torsion angles on the torus space to model the protein sidechain structures. There are maximally four sidechain dihedral angels for each residue i.e., \(^{(i)}=\{^{i1},^{i2},^{i3},^{i4}\}[0,2)^{4}\) and there are totally \(4N_{p}\) torsion angles . Since each torsion angle lies in \([0,2)\), the \(4N_{p}\) torsion angles of sidechains define a hypertorus \(^{4N_{p}}\). The manifold of the hypertorus is parameterized as the quotient space \(^{4N_{p}}/2^{4N_{p}}\), leading to the equivalence relations \(=(^{(1)},,^{(4N_{p})})(^{(1)}+2,, ^{(4N_{p})})(^{(1)},,^{(4N_{p})}+2)\)[39; 81]. We use the linear interpolation paths and the conditional flow for \(\) is defined as:

\[_{t}=(1-t)_{0}+t(_{1}-_{0}),\] (6)

where \(()\) means regularizing the torsion angles by \(()=(+)(2)-\). This leads to the closed-from expression of the loss to train the conditional Torus Flow Matching:

\[_{sc}()=_{t,p_{1}(_{1}),p_{0}(_{ 0}),p_{t}(_{t}|_{0},_{1})}}_{i=1} ^{N_{p}}\|v_{}^{(i)}(_{t}^{(i)},t)-(_{ 1}^{(i)}-_{0}^{(i)})\|_{2}^{2}.\] (7)

### FlexSBDD on Ligand Atom Types

The ligand atom types are denoted as \(=\{^{(i)}\}_{i=1}^{N_{p}}\) where \(^{(i)}\) is the \(i\)-th atom probability vector with \(n_{a}\) dimensions: \(^{(i)}^{n_{a}}\). To build a path, we define \(_{0}\) as a uniform distribution over all atom types and \(_{1}\) as the one-hot vector indicating the ground truth atom type. The probability path is define as \(_{t}=t_{1}+(1-t)_{0}\), and \(u_{t}(|_{0},_{1})=_{1}-_{0}\). \(_{t}\) is a probability vector because its summation over all types equals 1. Following [47; 70; 12], we use Cross-Entropy loss \((,)\) to directly measure the difference between the ground truth type and the predicted one:

\[_{atom}()=_{t(0,1),p_{1}(_{1}),p_{0}(_{0}),p_{t}(|_{0},_{1})}}_{ n=1}^{N_{l}}(_{t}^{(i)}+(1-t)v_{}^{(i)}(_{t}^{(i)},t), _{1}^{(i)}),\] (8)

We also note the recent progress of sequential flow matching methods [71; 12], which can be seamlessly integrated into FlexSBDD and are left for future works.

### Model Architecture

FlexSBDD is parameterized with an E(3)-Equivariant Neural Network with scalar-vector dual feature representation to effectively capture the 3D geometric attributes [40; 57]. The scalar features contain basic biochemical knowledge (e.g., residue/atom types), and the vector features contain geometric knowledge of the structure (e.g., direction to the geometric center). The basic building blocks include geometric vector linear (GVL) and geometric vector perceptron (GVP). We also incorporate the geometric vector normalization (GVNorm) and the geometric vector gate (GVGate) for the model's stability and better performance. There are mainly two modules: an encoder that is responsible for encoding the protein-ligand complex 3D graph (see details in Sec. D.2) and a decoder that updates both the coordinates, frame orientation, atom types, and side-chain torsion angles (see details in Sec. D.3). Similar to previous works , the update process satisfies the E(3)-equivariance. More model details are in the Appendix. D.5.

### Training and Generation

Training with Data Augmentation:For protein-ligand complexes from the training set, we associate them with apo conformations from Apobind  to create apo-holo pairs. Additionally, we create synthetic apo conformations as data augmentation. This is done by first removing the ligands from the holo proteins, followed by applying OpenMM  relaxation and Rosetta repacking  to these proteins. For each holo-structure, we generate a total of 9 additional structures: 3 only with sidechain repacking, 3 with both structure relaxation and repacking, and 3 with additional random perturbations with up to 30 degrees to the sidechain angles. In each training iteration, we randomly sample from the corresponding pool of apo structure \(_{0}\) of the holo-structure \(_{1}\) and interpolate to obtain \(_{t}\). The overall loss function is the weighted summation of the above four loss functions:

\[=w_{}_{}+w_{}_{}+w_{}_{}+w_{} _{},\] (9)

where \(w_{},w_{},w_{}\), and \(w_{}\) are the loss weights and are set to 2.0, 1.0, 1.0, and 1.0 in the default setting. We adopt Adam  optimizer for the optimization and finish training on a Tesla A100 GPU.

Generation:Starting with the apo structure and an initialized ligand molecule, denoted as \(_{0}\), the generation process of FlexSBDD is the integration of the ODE \(_{t}}{dt}=v_{}(_{t},t)\) from \(t=0\) to \(t=1\) with an Euler solver . Specifically, for each component in \(_{t}\), we have:

\[^{(i)}_{t+ t} =^{(i)}_{t}+v_{}(^{(i)}_{t},t) t; {O}^{(i)}_{t+ t}=^{(i)}_{t}(v_{}(^{(i)}_{t},t ) t);\] (10) \[^{(i)}_{t+ t} =(^{(i)}_{t}+v_{}(^{(i)}_{ t},t) t);^{(i)}_{t+ t}=(^{(i)}_{ t}+v_{}(^{(i)}_{t},t) t);\] (11)

where \( t\) is the time step. \(()\) means normalizing the vector to a probability vector such that its summation is 1, and \(()\) means regularizing the angles by \(()=(+)(2)-\).

## 5 Experiments

### Experimental Setup

Datasets:Following previous works [65; 57], we use two popular benchmark datasets for experimental evaluations: CrossDocked and Binding MOAD. **Binding MOAD** dataset  contains around 41k experimentally determined protein-ligand complexes. We further filter and split the Binding MOAD dataset based on the proteins' enzyme commission number , resulting in 40k protein-ligand pairs for training, 100 pairs for validation, and 100 pairs for testing following previous work . **CrossDocked** dataset  contains 22.5 million protein-molecule pairs generated through cross-docking. We use the same data preprocessing and splitting as , only high-quality docking poses (RMSD between the docked pose and the ground truth \(<1\)A) are kept and \(30\%\) sequence identity dataset split is adopted. This produces \(100,000\) protein-ligand pairs for training and \(100\) proteins for testing. We regard the protein-ligand structures in the datasets as holo-structures. The corresponding apo structures are obtained from Apobind and the generated apo structures as described in Sec. 4.5. We note that it is fair to compare FlexSBDD with other baseline methods as the additional apo structures contain no ligand molecules and cannot be used by baselines for training.

Baseline Methods:We compare FlexSBDD with five representative methods for SBDD. **LiGAN** is a conditional VAE model that represents protein-ligand complex as an atomic density grid. **AR** and **Pocket2Mol** are autoregressive schemes that generate 3D ligand molecules atom-by-atom. **TargetDiff** and **DecompDiff** are state-of-the-art diffusion-based models.

Evaluation:We comprehensively evaluate the generated molecules from three perspectives: **binding affinity and molecular properties**, **molecular structures**, and **protein-ligand interactions**: (1) Following previous work [28; 29], we use AutoDock Vina  to calculate and report the mean and median of binding affinity-related metrics, including **Vina Score**, **Vina Min**, **Vina Dock**, and **High Affinity**. Vina Score directly measures the binding affinity based on the generated 3D molecules; Vina Min performs a local structure relaxation before calculation; Vina Dock includes an extra step of re-docking, which serves to reveal the optimal binding affinity achievable; High affinity measures the percentage of generated molecules with higher binding affinity than the reference molecule in thetest set. As for the other molecular properties, we consider **QED**, **SA**, and **Diversity**. QED measures how likely a molecule is a potential drug candidate; SA (synthesize accessibility) represents the difficulty of drug synthesis; Diversity is computed as the average pairwise dissimilarity between all generated molecules for a binding pocket. (2) In terms of molecular structures, we calculate the Jensen-Shannon divergences (JSD) in bond length/angle distributions between the reference molecules and the generated molecules following . (3) We adopt PoseCheck  to evaluate whether methods can establish favorable interaction between protein and ligand. The interactions include **Hydrogen bonds** and **Hydrophobic interactions**. We also conduct **Steric clashes** analysis to examine unphysical structures/interactions.

### Main Results

In Table. 1 and 4, we show the binding affinity and the drug-related properties of the generated molecules on two benchmarks. We can observe that our FlexSBDD outperforms baselines by a large margin in affinity-related metrics. For example, FlexSBDD surpasses the strongest baseline DecompDiff by 0.73 and 0.82 in Avg. and Med. Vina Dock on CrossDokced and 0.92 and 1.03 respectively on Binding MOAD. These gains indicate the strong capability of FlexSBDD to explore high-affinity drug molecules and adjust protein structures for tight binding. As for molecular properties QED and SA, FlexSBDD also achieves competitive performance with baselines. As discussed in , these properties are usually employed as preliminary screening criteria in real drug discovery scenarios as long as they fall into a reasonable range. Finally, the high diversity indicates that FlexSBDD can explore larger chemical space with flexible protein modeling, which is important for early drug discovery. Generation efficiency is also a key factor to consider when sampling a large batch of molecules for screening. A major drawback of widely-used diffusion models is their inference speed, which may require 1000 time steps to produce high-quality samples. In contrast, flow matching methods remove stochasticity from the sampling path and can achieve stable and high-quality generation with much fewer steps (e.g., 20 steps in FlexSBDD). In Figure. 3, we observe that FlexSBDD can generate molecules much more efficiently than autoregressive-based methods such as AR  and diffusion-based methods such as TargetDiff  and DecompDiff .

We further consider steric clashes, hydrogen bonds, and hydrophobic interactions. **Steric Clashes** happens when two neutral atoms come into closer proximity than the combined extent of their van der Waals radii , indicating energetically unfavorable and physically unrealistic structures. **Hydrogen bonds (HBs)** and **Hydrophobic interactions** are polar interactions that significantly contribute to the binding affinity between proteins and ligands (More details in Appendix A.1). In Figure. 3, we show the average number of steric clashes, hydrogen bond donors, acceptors, and hydrophobic

  Methods &  &  &  &  &  &  &  \\  & Avg. & Med. & Avg. & Med. & Avg. & Med. & Avg. & Med. & Avg. & Med. & Avg. & Med. & Avg. & Med. \\  Reference & -6.36 & -6.46 & -6.71 & -6.49 & -7.45 & -7.26 & - & - & 0.48 & 0.47 & 0.73 & 0.74 & - \\  LiGAN & - & - & - & - & -6.33 & -6.20 & 21.1\% & 11.1\% & 0.39 & 0.39 & 0.59 & 0.57 & 0.66 & 0.67 \\ AR & -5.75 & -5.64 & -6.18 & -5.88 & -6.75 & -6.62 & 37.9\% & 31.0\% & 0.51 & 0.50 & 0.63 & 0.63 & 0.70 & 0.70 \\ Pocket2MM & -5.14 & -4.70 & -6.42 & -5.82 & -7.15 & -6.79 & 48.4\% & 51.0\% & 0.56 & 0.52 & **0.74** & **0.75** & 0.69 & 0.71 \\ TargetDiff & -5.47 & -6.30 & -6.64 & -6.86 & -7.80 & -7.91 & 58.1\% & 59.1\% & 0.48 & 0.48 & 0.58 & 0.58 & 0.72 & 0.71 \\ DecompDiff & -5.67 & -6.04 & -7.04 & -6.91 & -8.39 & -8.43 & 64.4\% & 71.0\% & 0.45 & 0.43 & 0.61 & 0.60 & 0.68 & 0.68 \\ FlexSBDD & **-6.64** & **-7.25** & **-8.27** & **-8.46** & **-9.12** & **-9.25** & **78.5**\% & **84.2**\% & **0.58** & **0.59** & 0.69 & 0.73 & **0.76** & **0.75** \\  

Table 1: Overview of properties of the reference dataset and the molecules generated by different methods on the **CrossDocked** dataset. (\(\)) / (\(\)) denotes the larger/smaller, the better. The best results are marked with **bold** and the runner-up with underline.

Figure 3: Computational Efficiency and Interaction Analysis on CrossDocked. (a) The average time required by different methods to generate 100 ligand molecules for a protein target. (b) The number of steric clashes. (c) The number of hydrogen bond donors in the ligand molecules. (d) The number of hydrogen bond acceptors in the ligand molecules. (e) The number of hydrophobic interactions.

interactions in the generated ligands (without redocking). We observe that FlexSBDD can generate ligands introducing fewer clashes and more favorable interactions. For example, the average steric clashes for DecompDiff and FlexSBDD are 6.43 and 1.39 respectively. The average number of HB Acceptors for DecompDiff and FlexSBDD are 1.18 and 1.96 respectively. This could be attributed to the flexible protein adjustment capability of FlexSBDD, which could adaptively adjust protein and ligand conformations to reduce clashes and increase favorable protein-ligand interactions.

In Figure. 4, we show examples of the generated ligand molecules for target proteins. Especially, We colored the original holo protein structure green and the updated structure with FlexSBDD cyan for comparison. Firstly, we observe FlexSBDD can generate ligand molecules with higher affinity and comparable QED and SA compared with reference complexes from datasets and molecules generated by DecompDiff. Moreover, the protein structures of FlexSBDD are adjusted to accommodate the generated ligand molecules. Consistent with the prior knowledge in biology , we generally observe that the loop regions in protein structures exhibit greater flexibility, whereas the alpha-helix and beta-sheet regions display more rigidity. To further evaluate the validity of the updated protein structure, we employ self-consistency Template Modeling (scTM) following  (more details in Appendix A.2). scTM score ranges from 0 to 1 and a larger scTM score indicates better structural validity. On average, the updated protein structures by FlexSBDD have a scTM score of 0.964, comparable to the score of the original structures from the datasets (0.975). Moreover, to evaluate the validity of sidechain structure, we compute the Mean Absolute Error (MAE) of sidechain angles following previous works . In Table. 6, we observe FlexSBDD achieves better performance in sidechain structure prediction. These results indicate FlexSBDD has learned the protein flexible changes and maintains the structural validity. More results are included in the Appendix B.

### Sub-structure analysis

We further conduct sub-structure analysis to evaluate whether FlexSBDD can generate valid molecular conformations. In Table. 2 and Table. 5 in Appendix B, we compute different bond distance and bond angle distributions of the generated molecules and compare them against the corresponding reference empirical distributions following [28; 29]. We can observe that our model has a comparable or better performance on all the bond distances and angles, demonstrating the strong capability of FlexSBDD to generate realistic 3D molecules directly.

### Rediscover Cryptic Pockets with FlexSBDD

The dynamic nature of proteins frequently results in the formation of _cryptic pockets_, which can reveal novel druggable sites not found in static structures and make previously "undrugable" proteins into potential drug targets . To study the capability of FlexSBDD to explore cryptic pockets, we take KRAS\({}^{}\) for a case study, which is a promising target in the treatment of solid tumors, and over 3 decades of efforts have been devoted to discovering its inhibitors (drug molecules) [17; 32]. The binding mode of ARS-1620 (green, PDB id 5V9U) represents the typical binding pocket exploited by previous research, which limits the exploration of high-affinity inhibitors. Here, we take the protein structure of ARS-1620 as the apo structure and generate ligand molecules. By comparing and filtering the generated molecules according to recent literature , we managed to rediscover the cryptic pockets with FlexSBDD. In Figure. 5, the updated structure is colored cyan and the generated ligand molecule is colored orange. We observe that the side chain rotation of residue Histidine-95 (marked with the red rectangle) is consistent with the report in  (PDB id 6P8Z), which forms a new subpocket and contributes a lot to binding affinity. This case

   &  &  &  &  &  & Flex \\  & & & & & & \\  & & & & & & \\  C\(-\)C & 0.601 & 0.609 & 0.496 & 0.369 & **0.359** & 0.367 \\ C\(-\)C & 0.665 & 0.620 & 0.561 & 0.505 & 0.537 & **0.280** \\ C\(-\)N & 0.634 & 0.474 & 0.416 & 0.363 & 0.344 & **0.277** \\ C\(-\)N & 0.749 & 0.635 & 0.629 & 0.550 & 0.584 & **0.384** \\ C\(-\)O & 0.656 & 0.492 & 0.454 & 0.421 & 0.376 & **0.253** \\ C\(-\)O & 0.661 & 0.558 & 0.516 & 0.461 & 0.374 & **0.245** \\ C\(-\)C & 0.497 & 0.451 & 0.416 & 0.263 & 0.251 & **0.193** \\ C\(-\)N & 0.638 & 0.552 & 0.487 & 0.235 & 0.269 & **0.189** \\  

Table 2: Jensen-Shannon divergence between bond distance distributions of reference and generated ligands (the lower, the better). “-”, “=”, and “:” denote single, double, and aromatic bonds.

Figure 5: The predicted side chain rotation of residue H95 (marked with the red rectangle) is consistent with experimental observation 

study demonstrates FlexSBDD's capability to accurately model flexible protein structure, update sidechains to reduce steric clashes, and explore cryptic pockets for drug discovery.

### Ablation Studies

We conduct a series of ablation experiments to study the effect of different modules on the generation capability of FlexSBDD: (1) **Exp0**: In model training, we remove the data augmentation mentioned in Sec. 5.1, (2) **Exp1**: we replace the geometric vector modules with EGNN  adopted in , which only has scalar features without vector features, (3) **Exp2**: we do not update the backbone structure of the protein (i.e., \(,\)) (4) **Exp3**: we do not update the sidechain dihedral angles of the protein (i.e., \(\)), (5) **Exp4**: we fix the whole protein structure in ligand molecule generation. We retrain all the FlexSBDD variant models for comparison. The results are present in Table. 3.

By comparing results from Exp0 and FlexSBDD, we can find that data augmentation indeed helps boost performance by introducing more diverse apo structures. In comparing Exp1 with FlexSBDD, it is obvious that scalar-vector dual feature representation can benefit ligand molecule generation by well capturing geometrical features. When comparing EXP2, 3, and 4 with FlexSBDD, we observe that the modeling of flexible protein structures including backbone and sidechains is important for FlexSBDD. Specifically, we find modeling the flexibility of sidechain angles is more important than backbone structure as the backbone is more rigid. For example, the average Vina Dock drops to -8.86 for Exp3 (FlexSBDD w/o flexible sidechain) while only drops to -9.05 for Exp2 (FlexSBDD w/o flexible backbone). According to , the sidechains are critical to "induced fit", where they adjust positions to accommodate the ligand and enhance binding affinity. Overall, the FlexSBDD variants still demonstrate competitive performance, showing the advantage of flow-matching architecture.

### Hyperparameter Analysis

We investigate the influence of two important hyperparameters on the performance of FlexSBDD, the hidden dimension size and the total number of iteration steps \(T\) in flow matching. In Figure. 6, we

Figure 4: Examples of the generated ligand molecules for target proteins (PDB ID: 4yhj, 2v3r, 1fmc, 1a2g). We colored the original holo-structure from the dataset green and the updated protein structure with FlexSBDD cyan (structures are aligned). The Carbon atoms in Reference, DecompDiff, and FlexSBDD ligands are colored green, yellow, and orange. Vina Score, QED, and SA are reported.

   &  &  &  &  \\  & Arg. & Med. & Arg. & Med. & Arg. & Med. & Arg. & Med. \\  Exp0 & -6.12 & -6.50 & -7.69 & -7.83 & -8.76 & -8.98 & 0.54 & 0.66 \\ Exp1 & -6.50 & -6.85 & -7.91 & -8.10 & -8.95 & -9.03 & 0.55 & 0.58 \\ Exp2 & -6.57 & -7.19 & -8.14 & -8.31 & -9.95 & -9.20 & 0.56 & 0.57 \\ Exp3 & -6.45 & -7.03 & -7.94 & -8.07 & -8.86 & -8.92 & 0.56 & 0.55 \\ Exp4 & -6.32 & -6.88 & -7.80 & -7.91 & -8.82 & -8.85 & 0.57 & 0.55 \\ FlexSBDD & **-6.64** & **-7.25** & **-8.27** & **-8.46** & **-9.12** & **-9.25** & **0.58** & **0.59** \\  

Table 3: Effect of different modules on the generation performance of FlexSBDD. The best results are marked with **bold** and the runner-up with underline. The original FlexSBDD is incorporated for comparison.

observe the trend of generating higher-quality molecules with larger hidden dimension sizes and more iteration steps. In the default setting, we set the node scaler feature size to 256 and total iteration steps to 20 to achieve a balance between the computational complexity and the generation quality.

## 6 Conclusion

In this paper, we propose FlexSBDD, a deep generative model capable of modeling the flexible protein structure for ligand molecule generation. FlexSBDD adopts a flow matching framework for efficient ligand generation and leverages E(3)-equivariant network with scalar-vector dual feature representation to effectively model dynamic structural changes. Extensive experiments show its state-of-the-art performance in generating high-affinity molecules with less steric clashes and more favorable interactions. Potential future works include leveraging FlexSBDD to discover more cryptic pockets and modeling other functional proteins such as antibodies, peptides, and enzymes.

## 7 Acknowledgements

This research was supported by grants from the National Natural Science Foundation of China (Grant No. 623B2095) and the Fundamental Research Funds for the Central Universities.