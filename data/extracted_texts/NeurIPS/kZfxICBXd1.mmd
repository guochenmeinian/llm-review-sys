# Multi-Winner Reconfiguration

Jiehua Chen

Institute of Logic and Computation

TU Wien

Austria

jchen@ac.tuwien.ac.at &Christian Hatschka

Institute of Logic and Computation

TU Wien

Austria

chatschka@ac.tuwien.ac.at &Sofia Simola

Institute of Logic and Computation

TU Wien

Austria

ssimola@ac.tuwien.ac.at

###### Abstract

We introduce a multi-winner reconfiguration model to examine how to transition between two subsets of alternatives (aka. _committees_) through a sequence of minor yet impactful modifications, called _reconfiguration path_. We analyze this model under four approval-based voting rules: Chamberlin-Courant (CC), Proportional Approval Voting (PAV), Approval Voting (AV), and Satisfaction Approval Voting (SAV). The problem exhibits computational intractability for CC and PAV, and polynomial solvability for AV and SAV. We provide a detailed multivariate complexity analysis for CC and PAV, demonstrating that although the problem remains challenging in many scenarios, there are specific cases that allow for efficient parameterized algorithms.

## 1 Introduction

In the rapidly evolving landscape of technology, policy, and market dynamics, we need to be able to adapt and reconfigure existing solutions. This necessity spans various domains, such as disaster management (Ito _et al._, 2011; Ju _et al._, 2017) - where one needs to switch, step by step, from an existing power supply distribution to another one, while ensuring no blackouts occur in-between - and game and puzzle-solving (Nishimura, 2018) - where one needs to transfer from one feasible state to another via a sequence of feasible moves. The crucial idea is to employ a systematic approach to transition from one solution to another with minimal disruption. Such a concept, known as _reconfiguration_(Ito _et al._, 2011), is omnipresent in areas ranging from everyday life to complex decision-making processes in computational social choice (COMSOC) such as switching catalogs in streaming services (Prime-Video, 2024; Netflix, 2024) or product displays in department stores.

This paper delves into reconfiguration within COMSOC, using multi-winner elections as a primary example to illustrate its importance and applicability. Our focus is on how to find such a reconfiguration through incremental yet meaningful changes, adhering to a set criterion that quantifies the "closeness" between successive solutions. In multi-winner elections, we are given a preference profile consisting of a finite set of alternatives and a finite set of voters, each with preferences over the alternatives. The objective is to select a _committee_ (i.e., a subset of alternatives) of fixed size k, representing voters' preferences optimally. Briefly put, in _multi-winner reconfiguration_ we need to decide whether there exists a transformation between two size-k (not necessarily optimal) committees via a sequence of intermediate size-k committees that are "almost" as good as the input committeesand close to one another (see Section 2 for the formal definition). Multi-winner reconfiguration can model many real-world applications:

* Streaming service providers, such as Prime Video and Netflix, change their catalog frequently (Prime-Video, 2024; Netflix, 2024) to keep it engaging, while ensuring that popular or critically acclaimed content remains available. Here, customer _satisfaction_ hinges on a balanced mix of fresh and familiar content. The multi-winner reconfiguration model can be used to optimize this balance, ensuring the catalog evolves in a way that minimizes disruption to viewer experience.
* Likewise, for physical or online stores, product displays are crucial in attracting and retaining customers. However, generally shelf or display space is limited. The challenge is to introduce new products or promotions without overshadowing popular or staple items. The reconfiguration model can guide the arrangement of products using fixed capacity in a way that maximizes visibility for new items while ensuring customer satisfaction.
* An online gaming platform may need to shut down some old games to free up server space to support new games. However, abruptly removing a lot of games could alienate players, and thus the changes should be implemented incrementally in order to ensure player satisfaction throughout the whole exchange process.

In each of the above scenarios, the goal revolves around transitioning from one committee (i.e., a subset of products, movies, games, or routes) to another through minimal, incremental changes, ensuring a balance between introducing new elements and maintaining overall user satisfaction. In other words, we need to ensure that the consecutive committees in the transition are close to each other, both in their content and optimality wrt. the initial committee.

**Our contributions.** We propose a model of multi-winner reconfiguration and study its computational complexity. We focus on four multi-winner voting rules for approval preferences: _Chamberlin-Courant_ (CC), _Proportional Approval Voting_ (PAV), _Approval Voting_ (AV), and _Satisfaction Approval Voting_ (SAV). We find that while for the first two rules determining whether a reconfiguration path exists is PSPACE-complete, for the latter two a reconfiguration path always exists. We further investigate the parameterized complexity for CC and PAV by looking at several canonical parameters: the number \(m\) of alternatives, the number \(n\) of voters, the committee size k, the maximum number b of approved alternatives per voter, and the length \(\) of a shortest reconfiguration path (if it exists). The parameters \(n\), \(m\) and k are natural input parameters that are already studied in the original multi-winner determination problem. The parameter b can be considered as a structural and distance to tractability parameter: For b \(=1\), all studied voting rules are equivalent to AV, so by Theorem 1, the reconfiguration problem can be solved in polynomial time. Thus, it is natural to ask whether the problem is polynomial-time solvable for each constant b. Finally, by our reduction, the PSPACE-hardness arises because a shortest reconfiguration path could be of unbounded length. Note that for bounded length \(\) the problem is in NP, see Proposition 2. In real-world applications, one may need to reconfigure committees timely, so it is natural to assume that \(\) is small. We summarize our findings as follows (also see Table 1); For a brief definition of the relevant parameterized complexity classes see Section 2:

1. The problem is fixed-parameter tractable (FPT) wrt. \(m\). Under CC it is also FPT wrt. \(n\).
2. While the problem is in XP wrt. \(n\) (resp. k). it remains NP-hard even for constant value b \(+\). The XP result for k is essentially tight since it remains W-hard under CC (resp. W-hard under PAV).
3. Combining \(n\) with any other single parameter always yields an FPT algorithm.

Due to space constraints, proofs of the results and additional materials marked with (\(\)) are deferred to the appendix.

**Related Work.** Reconfiguration of puzzles and games has been of interest to mathematicians already since the 19th century (Johnson and Story, 1879). Since the early 2000s, reconfiguration has attracted increasing attention in the fields of computational geometry (Connelly _et al._, 2003; Aichholzer _et al._, 2015; Alamdari _et al._, 2017), graph theory (Ito _et al._, 2011; Bonsma, 2013), constraint satisfaction (Gopalan _et al._, 2006), and quantum complexity theory (Gharibian and Sikora, 2018). For graph problems, there are in general three types of reconfigurations between feasible solutions: token addition and removal (TAR; in each step one can either remove or add a vertex), token jumping (TJ; in each step one can replace a vertex with another vertex), and token sliding (TS; in each step one can replace a vertex with another adjacent vertex). Our multi-winner reconfiguration problem generalizes the TJ model in the sense that we allow replacement of more than one alternative in each step. For a general introduction to reconfiguration and how it differs from various similar problems such as local search (Ahuja _et al._, 2002), reoptimization (Schieber _et al._, 2018), and incremental problems (Bredereck _et al._, 2020), we refer to the surveys by van den Heuvel (2013) and Nishimura (2018). Ito _et al._ (2014), Mouawad _et al._ (2016), and Bodlaender _et al._ (2021) studied the parameterized complexity of various reconfiguration problems such as independent set and dominating set reconfiguration. They considered the length of the path as well as a bound on the size of the solutions as parameters. Notably, Bodlaender et al. claimed that dominating set reconfiguration via TJ is W-hard wrt. the solution size and the reconfiguration path by wrongly referring to the TAR model. This is in general not correct as the two models are not equivalent. We correct this by providing a direct parameterized reduction from the dominating set problem (see Proposition 6).

Reconfiguration in computational social choice as a topic has recently gained traction, with Igarashi _et al._ (2024) introducing the concept of reconfiguration to fair division. Ito _et al._ (2022) introduced a similar framework to reconfiguration to fair matchings.

Multi-winner elections are a topic of great interest in computational decision theory. For a general introduction to multi-winner elections, see for example the work of Faliszewski _et al._ (2017). For further methods and topics on multi-winner elections with approval preferences we refer to a recent book by Lackner and Skowron (2023). In this work, we will only consider approval preferences.

Reconfiguration is related to the model of "one problem, successive solutions" by Boehmer and Niedermeier (2021) where the goal is to select a sequence of desirable solutions. Bredereck _et al._ (2020) introduced and studied this model for multi-winner election where each alternative in the committee must remain in office a consecutive amount of times. Our reconfiguration problem is different from theirs in two ways: First, we aim at a sequence of committees starting from an initial committee and ending at a target committee such that the intermediate committees are "close" to each other. Second, we do not require that an alternative appears for a limited number of times.

## 2 Preliminaries

Given a non-negative integer \(t\), let \([t]\) denote the set \(\{1,,t\}\). Given two subsets \(X\) and \(Y\), we use \(X Y\) to denote the symmetric difference between \(X\) and \(Y\), i.e., \(X Y=(X Y)(Y X)\).

**Parameterized Complexity.** Let \(\) denote a decision problem and \(k\) a parameter. We say that \(\) is _fixed-parameter tractable (FPT)_ wrt. \(k\) if there exists an algorithm that decides every instance \(I\) of \(\) in \(f(k)|I|^{O(1)}\) time (we say the algorithm runs in _FPT time_), where \(f\) is a computable function that solely depends on \(k\). We say that \(\) is in _XP_ wrt. \(k\) if there exists an algorithm that decides every instance \(I\) of \(\) in \(|I|^{f(k)}\) time, where \(f\) is a computable function that solely depends on \(k\). In the same way NP-hard problems are unlikely to be in P, problems which are _W_- or _W-hard_ wrt. \(k\) are unlikely to be FPT wrt. \(k\). Similarly to showing NP-hardness, we show W- and W-hardness through FPT time reductions, where the new parameter must be a function of the original one.

   Parameter &  &  \\  In general & PSPACE-c & [T2] & PSPACE-c & [T2] \\ \(m\) & FPT & [P3] & FPT & [P3] \\ \(n\) & FPT & [T4] &?, XP & \(-\),[P4] \\ k & W-h, XP & [T5], [P3] & W-h, XP & [T2], [P3] \\ b \(+\) & NP-h & [P2] & NP-h & [P2] \\ k \(+\) & W-h, XP & [T5], [P3] & W-h, XP & [T2], [P3] \\ b \(+\) k \(+\) & W-h & [T2] & W-h & [T2] \\ \(n+\) b & FPT & [T4] & FPT & [P5] \\ \(n+\) k & FPT & [T4] & FPT & [P4] \\ \(n+\) & FPT & [T4] & FPT & [T3] \\   

Table 1: (Parameterized) complexity results obtained in our paper. We omit the results for AV and SAV as reconfiguration under both rules is polynomial-time solvable (see Theorem 1). Both PSPACE-hardness and W-hardness hold even if each voter approves of at most two alternatives, i.e., \(=2\). Except for the NP-hardness for constant b \(+\), all hardness results hold even if \((_{},_{})=(1,0)\).

As examples, Independent Set wrt. solution size and Dominating Set wrt. solution size are W-hard and W-hard, respectively. For more details we refer to Cygan _et al._ (2015).

**Approval profiles and types.** An _approval preference profile_ (_profile_ for short) is a triple \(=(C,V,R)\), where \(C\) denotes a set of \(m\) alternatives, \(V\) a set of \(n\) voters with \(V=\{v_{1},,v_{n}\}\), and \(R\) a collection \(R=(_{1},,_{n})\) of _non-empty_ subsets of \(C\) such that \(_{i}\) consists of all alternatives that voter \(v_{i}\) approves of, \(i[n]\). Unless stated otherwise, we use \(\) to denote a profile of the form \((C,V,R)\). We say that two alternatives \(a\) and \(b\) are of the same _type_ if they are approved by the same voters. We call any subset of alternatives a _committee_.

**Score-based multi-winner voting rules.** A score-based (multi-winner) _voting rule_\(\) (_voting rule_ for short) takes as input a profile \(\) and a number \(\), and assigns to each size-\(\) committee \(W\) a score \(_{}(,W)\). The committees with maximum score are _winning committees_. The score \(_{}(,W)\) measures the satisfaction of the voters towards committee \(W\). Note that we will omit the profile \(\) and the subscript \(\) if it is clear from the context. We say that a voting rule is _neutral_ if the outcome does not depend on the names of the alternatives. This implies that if two alternatives are of the same type, then replacing one alternative with the other does not change the outcome. We consider four _score-based voting rules_, all of which are neutral:

**The _Chamberlin-Courant_ (CC) rule selects a size-\(\) committee that maximizes the number of voters who approve of at least one alternative in the committee. Formally, \(W\) is winning under CC if it maximizes \(_{}(W)=|\{v_{i} V_{i} W \}|\).

**The _Proportional Approval Voting_ (PAV) rule uses \(h(x)=_{j=1}^{x}\) to denote the partial sum of the first \(x\) elements of the harmonic sequence. A size-\(\) committee \(W\) is winning under PAV if it maximizes \(_{}(W)=_{v_{i} V}h(|_{i} W|)\).

**The _Approval Voting_ (AV) (resp. _Satisfaction Approval Voting_ (SAV)) rule selects a size-\(\) committee that maximizes the sum of approving voters (resp. the weighted sum of approving voters). Formally, the score of an alternative \(a\) is defined as \(_{}(a)=|\{v_{i} V a A_{i}\}|\) (resp. \(_{}(a)=_{v_{i} Va A_{i}}_{i}|}\)). Committee \(W\) is winning under AV (resp. SAV) if it maximizes \(_{}(W)=_{a W}_{}(a)\) (resp. \(_{}(W)=_{a W}_{}(a)\)).

**Reconfiguration of committees.** Let \(\) be a profile and \(\) a voting rule. Given a number \(d\), we say that two committees \(W\) and \(W^{}\) are \(d\)-_adjacent_ if \(|W W^{}| d\) and \(|W^{} W| d\). For two numbers \(_{} 1\) and \(_{} 0\), we call a sequence of committees \(W_{0},,W_{t}\) a _\((_{},_{})\)-reconfiguration path_ (_reconfiguration path_ for short) for \((,)\) if for all \(i[t]\) the following holds:

1. \(|W_{i-1}|=|W_{i}|\);
2. \(W_{i-1}\) and \(W_{i}\) are \(_{}\)-adjacent;
3. The score difference of \(W_{0}\) and \(W_{i}\) is bounded by \(_{}\), i.e., \(_{}(W_{0})-_{}(W_{i})_{}\).

**Remark 1**.: Note that the reconfiguration path requires closeness (C2-C3) between committees of the same size (C1). This is essential, as closeness captures the incremental yet necessary changes necessary in various applications, like evolving content in streaming services or adjusting product line-ups in retail stores, while fixing the committee size (C1) mirrors practical limitations like pre-set numbers of movie slots in streaming catalogs or specific shelf capacities in retail stores.

By convention, the _length_ of a reconfiguration path is defined as the number of committees on the path minus one.

**Example 1**.: _Let \(C=\) and \(V=\{v_{1},v_{2},v_{3},v_{4}\}\) with approval preferences \(_{1}=\{1,2\},_{2}=\{2,3\},_{3}=\{3,4\}\) and \(_{4}=\{1,4\}\). Let \(=2\). Under both CC and PAV we have two size-\(2\) committees with maximum score of \(4\): \(W=\{1,3\}\) and \(W^{}=\{2,4\}\). For \(_{}=_{}=1\) and under CC, there is a \((_{},_{})\)-reconfiguration path between \(W\) and \(W^{}\) of length two, e.g., \((W,\{1,2\},W^{})\). The same path is also a \((1,)\)-reconfiguration path under PAV since \(_{}(\{1,2\})=3\)._

**Problem definition.** Now, we define our reconfiguration problem.

\(\)-Multi-Winner Reconfiguration (\(\)-MR)

**Input:** A profile \(\), a committee size \(\), two numbers \(_{} 1\) and \(_{} 0\), and two size-\(\) committees \(W W^{}\) with \(_{}(W)-_{}(W^{})_{}\).

**Question:** Does there exist a sequence \((W_{0},,W_{t})\) of committees which is a \((_{},_{})\)-reconfiguration path for \((,)\) such that \(W_{0}=W\) and \(W_{t}=W^{}\)?

**Remark 2**.: Note that we require that the input satisfies \(_{} 1\), \(W W^{}\), and \(_{}(W)-_{}(W^{})_{}\), as otherwise either there is always a reconfiguration path (when \(W=W^{}\)) or none (when \(_{}<1\) and \(W W^{}\), or \(_{}(W)-_{}(W^{})>_{}\)). Moreover, we intentionally do not restrict the committees to be optimal (i.e., winning). This choice allows for a more realistic representation of scenarios where optimal solutions are not immediate or feasible, thereby enhancing the practical relevance of our study.

For the restricted variant where the committees on the reconfiguration path must be optimal (i.e., \(W\) and \(W^{}\) are winning and \(_{}=0\)) and \(_{}=1\), we write \(\)-MR\({}^{0}\). We will see that all intractability results except Proposition 2 already hold for the restricted case while all algorithmic results hold for the general case.

**Reconfiguration graphs.** Let \(I=(,,_{},_{},W,W^{})\) be an instance of \(\)-MR with \(=(C=[m],V,R)\) being a profile and \(\) a score-based voting rule. We construct a _reconfiguration graph_\(G^{}=(V^{},E^{})\) for \(I\) as follows. Let \(V^{}=\{u_{C^{}} C^{} C|C^{}|=_{}(,W)- _{}(,C^{})_{}\}\) be the vertex set of \(G^{}\) such that each vertex corresponds to a size-k committee whose score is at most \(_{}\) lower than the score of \(W\). For each pair \(u_{W_{1}},u_{W_{2}}\) of vertices, we create an edge \(\{u_{W_{1}},u_{W_{2}}\}\) if the corresponding two committees \(W_{1}\) and \(W_{2}\) are \(_{}\)-adjacent.

**Remark 3**.: Note that \(|V^{}|}\) since only committees of size k are relevant. We can compute \(V^{}\) in time \(}(,)\), where \((,)\) denotes the time to compute the score of a committee under rule \(\). The number of edges of \(G^{}\) is bounded above by \(}^{2}\), so the reconfiguration graph can be constructed in time \(O(}^{2}+}(, ))\). By construction, if \(_{}=0\), and both \(W\) and \(W^{}\) are winning committees, then for each pair of connected vertices \(u_{W_{1}}\) and \(u_{W_{2}}\), there exists a one-to-one correspondence between all \((u_{W_{1}},u_{W_{2}})\)-paths in \(G^{}\) and all \((_{},_{})\)-reconfiguration paths for \(W_{1}\) and \(W_{2}\).

**Example 2**.: _Let us consider the instance given in Example 1. If \(_{}=0\), then the vertex set of the reconfiguration graph \(G^{}\) is \(V^{}=\{u_{\{1,3\}},u_{\{2,4\}}\}\) since \(\{1,3\}\) and \(\{2,4\}\) are the only two winning committees. Because \(|\{1,3\}\{2,4\}|=4\), if \(_{}=1\), there is no path between \(u_{W}\) and \(u_{W^{}}\) and hence no reconfiguration path from \(W\) to \(W^{}\) exists. See the LHS of Figure 1 for an illustration._

_If \(_{}=1\) (under CC) or \(_{}=\) (under PAV), then \(V^{}\) contains vertices for all size-\(2\) committees of \(C\). There are four possible length-\(2\) paths between \(u_{\{1,3\}}\) and \(u_{\{2,4\}}\), for example \((u_{\{1,3\}},u_{\{1,2\}},u_{\{2,4\}})\). See the RHS of Figure 1 for an illustration. Note that the length of a shortest path between any two committees \(W,W^{}\) is at least \(|}{2\,_{}}\); any edge on the reconfiguration will remove (resp. add) at most \(_{}\) alternatives from \(W W^{}\) (resp. \(W^{} W\))._

## 3 Complexity Results

In this section, we consider the computational and parameterized complexity of \(\)-MR.

**Computational Complexity.** It is straightforward that \(\)-MR is in PSPACE due to an observation by Ito _et al._ (2011).

**Proposition 1**.: _For each \(\) of the four considered voting rule, \(\)-MR is in PSPACE._

Proof.: It suffices to show that \(\)-MR is contained in NPSPACE since \(=\)(Savitch, 1970). Moreover, as observed by Ito _et al._ (2011), to show that the reconfiguration version of a problem is in NPSPACE, one only needs to show that the underlying problem is in NP. In our case, we need to show that the following two problems can be verified in polynomial time: (1) Does a

[MISSING_PAGE_FAIL:6]

In contrast to AV and SAV, the next theorem shows that CC- and PAV-MR are computationally difficult. The idea is to reduce from the PSPACE-complete and W-hard problem Independent Set Reconfiguration via Token Jumping (ISR-TJ) (Ito _et al._, 2014), by adapting from the reduction of Aziz _et al._ (2015) for CC and PAV.

**Theorem 2** (\(\)).: _For all \(\{,\}\), \(^{0}\) (and hence \(\)) are PSPACE-complete. Moreover, they are PSPACE-hard and W-hard wrt. \(+\), even if \((_{},_{},)=(1,0,2)\)._

We observe that the reduction of Ito _et al._ (2011) can be used to show that a generalized variant of ISR-TJ where in each step more than one vertex can be exchanged is NP-hard for constant path length. Hence, we obtain the following hardness for our problem as well.

**Proposition 2** (\(\)).: _For all \(\{,\}\), \(\) remains NP-hard even if \(==2\), and for constant \(\), it is in NP._

**Parameterized Complexity.** Next, we focus on the parameterized complexity for CC and PAV wrt. a few selected parameters. The most intuitive ones are the number \(m\) of alternatives, the number \(n\) of voters, and the committee size \(\).

**Proposition 3**.: _For all score-based multi-winner voting rules \(\) such that the score of a committee can be computed in polynomial time, \(\) is solvable in \(m^{2}(n+m)^{O(1)}\) time, and hence FPT wrt. \(m\) and in XP wrt. \(\). Furthermore a shortest path can be computed in the same time._

Proof.: Let \(I=(,,_{},_{},W,W^{})\) be an instance of \(\)-MR. We operate on the reconfiguration graph \(G^{}\) of \(I\). As noted in Remark 3, the number of edges in \(G^{}\) is bounded above by \(}^{2} m^{2k} m^{2m}\), and hence \(G^{}\) can be constructed in \(}^{2}(n+m)^{O(1)}\) time. Since determining a shortest path between two vertices can be done in time linear in the number of edges of the graph, we can determine a shortest-length \((u_{W},u_{W^{}})\)-path in \(G^{}\) in \(m^{2}(n+m)^{O(1)}\) time, which is FPT wrt. \(m\) and in XP wrt. \(\), as desired. 

Yang and Wang (2023) show that PAV-Multi-Winner Score can be solved in FPT time wrt. \(n\) via a specific integer linear programming (ILP) formulation called Integer Programming With Simple Piecewise Linear Transformation (IPWSPLT) that can encode convex constraints.1 It is not clear how to extend their approach to the reconfiguration variant because the length \(\) of a shortest reconfiguration path may be unbounded. However, we can extend their approach to obtain an FPT result wrt. \(n+\).

**Theorem 3** (\(\)).: PAV-MR _is FPT wrt. \(n+\)._

Proof sketch.: As said, we extend the IPWSPLT by Yang and Wang (2023). Briefly put, IPWSPLT is an ILP extension that allows for piecewise concave or convex functions to be used (Brederck _et al._, 2020). We construct \(\) many copies of the IPWSPLT formulation and combine them with additional constraints to model the exchanges. Similarly to their approach, we utilize the fact that alternatives of the same type are interchangeable when considering the score of a committee. We then split the alternatives of each type into \(4\)_groups_: Alternatives that are in \(W W^{}\), \(W W^{}\), \(W^{} W\), and \(C(W W^{})\). We add variables that keep track of the number of alternatives of each group from each type. By keeping track of these numbers along the steps of the reconfiguration path we ensure that the symmetric difference between two intermediate committees is at most \(2\,_{}\) and that the final committee in the reconfiguration path is the target committee. We ensure that the total number of variables and constraints are in \(O(2^{n})\). This yields an FPT algorithm wrt. \(n+\) since an IPWSPLT instance can be solved in time \(O(^{2.5+o()}(|I|+p_{}))\)(Brederck _et al._, 2020), where \(\) is the number of integer variables, \(|I|\) is the size of the encoding of the instance, and \(p_{}\) is the maximum number of pieces of a piecewise-linear convex/concave function. Since in our IPWSPLT formulation the number \(\) of variables and the size of the encoding \(|I|\) are in \(O(2^{n})\), the FPT result follows. The precise formulation and the proof are deferred to Appendix B.3. 

The next results are based on either brute-force searching all possible reconfiguration paths or bounding the size of the reconfiguration graph.

**Proposition 4** (\(\)).: _For all score-based voting rules \(\) such that the score of a committee can be computed in polynomial time, the following holds:_

1. \(\)_-_MR _is solvable in_ \(m^{2\,_{}}(n+m)^{O(1)}\) _time, and hence in XP wrt._ \(\) _for constant_ \(_{}\)_._
2. _If_ \(\) _is additionally neutral, then_ \(\)_-_MR _is solvable in_ \(^{}(2^{n}+2)^{}(n+m)^{O(1)}\) _time and_ \((+1)^{4 2^{n}}(n+m)^{O(1)}\) _time and a shortest reconfiguration path can be found in the same time. Thus, it is FPT wrt._ \(n+\) _and in XP wrt._ \(n\)_._

For CC, the following lemma shows that for a large enough committee size \(\) there is always a reconfiguration path: The score of each committee is determined by at most \(n\) relevant alternatives since each voter contributes a score of at most one. Due to this, we can find a shortest path if the symmetric difference between \(W\) and \(W^{}\) is very large (Case (i)), by only exchanging the alternatives in the symmetric difference. Otherwise (Case (ii)), we can still find a path in polynomial time by also exchanging alternatives that are shared by both \(W\) and \(W^{}\).

**Lemma 1**.: _For every instance of CC-MR with \( 2n\) there exists a reconfiguration path between \(W\) and \(W^{}\). Moreover,_

1. _If_ \(|W W^{}| 2n\)_, then we can find a shortest one in polynomial time._
2. _If_ \(|W W^{}|<2n\)_, then we can find one with length at most_ \(}}\) _in polynomial time._

Proof.: Let \(I=(,,_{},_{},W,W^{})\) denote an instance of CC-MR. We first consider the case when \(_{}=1\) and show how to adapt the proof for \(_{} 2\) at the end. First, observe that we can always find a size-\(n\) committee of \(W\) (resp. \(W^{}\)) with score at least \((W)\) (resp. \((W^{})\)). Hence, the idea is to find a size-\(n\) committee \(A W\) (resp. \(B W^{}\)) such that \((A)=(W)\) (resp. \((B)=(W^{})\)) and perform exchanges to obtain a committee that contains \(A B\), and then switch out alternatives that are not contained in \(W^{}\). Note that \(A\) and \(B\) can be found in polynomial time by iteratively deleting "redundant" alternatives from \(W\) and \(W^{}\), respectively. To show the statement, we distinguish between two cases. Figure 2 illustrates the constructions used in the proofs.

**Case 1:**\(|W W^{}| 2n\) or \(|W(W^{} A)||B W|\). Note that the first condition implies the second condition since \(|A|=n=|B|\). To implement the exchange idea, let \(X W(W^{} A)\) be an arbitrary committee of \(|B W|\) alternatives. We divide the exchanges into two parts. In the first part, we step-by-step exchange all alternatives from \(X\) with all alternatives from \(B W\). It is straightforward to verify that every committee obtained until now has score at least \((W)\) because it always contains \(A\), and the last committee obtained has score at least \((W^{})\) since it contains \(B\). In the second part, we step-by-step exchange the remaining alternatives from \(W(W^{} X)\) with the remaining alternatives from \(W^{}(W B)\). It is straightforward to verify that every committee obtained in the second part has score at least \((W^{})(W)-_{}\) since it contains \(B\).The exchange sequence yields a reconfiguration path of shortest length \(|[W W^{}]/2|\). If \(_{} 2\), then we take every \(_{}\)-th element on the path, including \(W\) and \(W^{}\). All these committees have score at least \((W)-_{}\) by construction and the path is of the shortest possible length \(|[W W^{}]/(2\,_{})|\).

**Case 2:**\(|W W^{}|<2n\) and \(|W(W^{} A)|<|B W|\). We proceed in three parts. For the sake of brevity, let \(W_{1}=W(W^{} A)\) and let \(B_{1} B W\) denote a committee of \(|W_{1}|\) alternatives arbitrarily chosen from \(B W\). First, we step-by-step exchange the alternatives in \(W_{1}\) with the alternatives in \(B_{1}\). Afterwards, we select a committee \(X(W W^{})(A B)\) of \(|B W|-|W_{1}|\) arbitrary alternatives, and step-by-step exchange the alternatives in \(X\) with the remaining alternatives in \((B W) B_{1}\). Note that this is possible since \(|(W W^{})(A B)||W W^{} |-|A|+|A W^{}|-|B|+ |B W|=|W|-|W W^{}|- |A|+|A W^{}|-|B|+|B  W|-|W_{1}|+|B W|\); the last inequality holds since

Figure 2: Illustration for the proof of Lemma 1. Left: Case 1; Right: Case 2.

\(|W_{1}|=|W(W^{} A)|=|W W^{}|-|A W^{ }|\) and \(|W| 2n|A|+|B|\). So far, we perform \(|B W| n\) exchanges, where all intermediate committees contain \(A\) and the final committee additionally contains \(B\). Thus, they all have score at least \((W)\). The only alternatives from \(W W^{}\) that remain in the most recently obtained committee are those alternatives in \(A W^{}\). Thus, in the third part, we step-by-step exchange all alternatives in \(A W^{}\) with the alternatives in \(W^{}\) that are not yet in the most recent committee; they are precisely in \(X(W^{}(W B))\). Since all committees obtained in the third part contain \(B\), each of them has score \((W^{})(W)-_{}\). The number of exchanges in the last part is \(|A W^{}| n\), and overall we have performed at most \(2n\) exchanges. Similarly to the first case, if \(_{} 2\), then the number of exchanges reduces to \( 2n/_{}\). 

Combining Lemma 1 with Proposition 4(ii) yields an FPT result (wrt. \(n\)) for CC.

**Theorem 4** (\(\)).: CC-MR _is FPT wrt. \(n\) and a shortest reconfiguration path can be found in FPT time wrt. \(n\)._

Proof.: We distinguish between two cases. If \(<2n\), then we use Proposition 4(ii) to solve CC-MR and find a shortest path in FPT-time wrt. \(n\). Otherwise, by Lemma 1, we can in polynomial time find a reconfiguration path that either has minimum length (when \(|W W^{}| 2n\)) or has length at most \(}}\) (when \(|W W^{}|<2n\)). This proves the first part of the statement.

To show the second part of the statement we only need to consider the case when \( 2n\) and \(|W W^{}|<2n\) as the other cases are already covered by the above reasoning and by Lemma 1(i). In the case of \( 2n\) and \(|W W^{}|<2n\), by Lemma 1(ii), there is always a reconfiguration path of length at most \(}}\). This implies that a shortest path can exchange at most \(4n\) many alternatives. Since CC is neutral, any two alternatives of the same type are "interchangeable" on the path. Hence, we only need to keep track of at most \(4n\) alternatives for each type of alternative. Note that all alternatives in the symmetric difference \(W W^{}\) must be among these tracked alternatives. There are in total at most \(4n 2^{n}\) many alternatives that are relevant for the exchanges. Thus, we can use a simple branching algorithm to search for a shortest reconfiguration path by branching over all possibilities of selecting \(2\,_{}\) alternatives from at most \(4n2^{n}\) relevant ones to exchange in each step.

It remains to analyze the running time. In the case where \(<2n\), the time needed to compute a shortest path is still \(2n^{4n}(2^{n}+2)^{4n}(n+m)^{O(1)}\) per Proposition 4(ii). For \( 2n\) and \(|W W^{}| 2n\) a shortest path can be found in polynomial time per Lemma 1(i).

We now consider the case of \( 2n\) and \(|W W^{}|<2n\). Before looking at the running time, we describe the branching algorithm more precisely. We note that we can assume \(_{}<2n\), as otherwise there is a path of length one that is obviously a shortest path. Recall that due to CC being neutral, it suffices to keep track of \(4n\) alternatives of each type since by Lemma 1(ii) the maximum number of alternatives that are exchanged on a shortest path is \(4n\). Let \(X\) denote a set consisting of \((4n,|_{t}|)\) alternatives of each type \(t\), including all alternatives from \(W W^{}\). This implies that \(|X| 4n2^{n}\). As we know that the reconfiguration path has length at most \( 2n/_{}\), we can solve this problem by branching over all possible exchanges using alternatives in \(X\) with depth \(\). For each step \(i[]\), we branch over all pairs of two sets \(X_{i}^{1},X_{i}^{2} X\) with \(|X_{i}^{1}|_{}\) and \(|X_{i}^{2}|_{}\) that shall correspond to the set of alternatives in \(W_{i-1} W_{i}\) and \(W_{i} W_{i-1}\), respectively. Then, using these exchanges, we can compute all committees on each branch and check whether they yield a desired reconfiguration path. By checking all branches we can then find a shortest path.

Finally, we compute the running time of the branching algorithm. A single step has \(|X|^{_{}}|X|^{_{}}=|X|^{2\,_{ }}\) many branches and there are at most \(}}\) steps. That means the branching algorithm has a running time of \(|X|^{2\,_{}\,}|X|^{2\,_{} }}}|X|^{4n+2\,_{}} (4n 2^{n})^{8n}\). 

By observing that there are not too many different alternatives (wrt. \(n+\)), we obtain the following FPT result.

**Proposition 5** (\(\)).: _For all neutral and score-based multi-winner voting rules \(\) such that the score of a committee can be computed in polynomial time, \(\)-MR is solvable in \(2^{2}(n+m)^{O(1)}\) time, and hence FPT wrt. \(n+\)._

Finally, we prove that the committee size \(\) combined with the path length \(\) is unlikely to yield FPT-algorithms by showing W-hardness. We reduce from the problem of Dominating SetReconfiguration via Token Jumping (DSR-TJ). In DSR-TJ, we are given a graph \(G=(V,E)\), two non-negative integers \(h\) and \(\), and two size-\(h\) dominating sets \(V_{s}\) and \(V_{t}\) of \(G\), and we ask whether there exists a sequence \(V_{0},,V_{}\) of size-\(h\) dominating set such that \(V_{0}=V_{s}\), \(V_{}=V_{t}\) and \(|V_{i} V_{i+1}| 2\) for all \(0 i-1\). Recall that a _dominating set_ of a graph is a subset \(V^{}\) of vertices whose neighborhood covers the whole vertex set of the graph, i.e., each vertex not from \(V^{}\) is adjacent to at least one vertex in \(V^{}\). Bodlaender _et al._ (2021) claimed that Mouawad _et al._ (2016) showed that DSR-TJ is W-hard wrt. \((h,)\), where \(h\) denotes the size of any dominating set (DS for short) on the path and \(\) the length of a shortest DS reconfiguration path (if it exists). The reduction given by Mouawad et al., however, only works for the TAR but not the TJ variant. The reason is that in their created instance, the size \(h^{}\) of the initial DS is smaller than \(h\), so the size of any intermediate dominating set could be larger than \(h^{}\) while this is not possible for the TJ variant. Below, we modify their reduction and show hardness for the TJ variant.

**Proposition 6** (\(\)).: DSR-TJ _is W-hard wrt. \(h+\)._

We obtain the same hardness for the CC rule by adapting the reduction by Betzler _et al._ (2013).

**Theorem 5**.: CC-MR\({}^{0}\) _(and hence CC-MR) are W-hard wrt. \(+\)._

Proof.: It suffices to show W-hardness for CC-MR\({}^{0}\). To achieve this, we provide a parameterized reduction from the W-hard DSR-TJ problem (see Proposition 6) to CC-MR\({}^{0}\), i.e., CC-MR where \(_{}=0\) and \(_{}=1\).

Let \((G,h,,V_{s},V_{t})\) be an instance of DSR-TJ, where \(G\) is an undirected graph, \(V_{s}\) and \(V_{t}\) are the initial and target dominating sets, respectively, \(h=|V_{s}|=|V_{t}|\), and \(\) denotes the length bound on the reconfiguration path (if it exists).

We define \(=h\) and create a preference profile as follows. For each vertex \(v_{i} V(G)\), create

* one _vertex-alternative_\(c_{i}\), and
* one _vertex-voter_\(u_{i}\) that approves of \(c_{i}\) and the alternatives corresponding to the neighbors of \(v_{i}\) in \(G\). Formally, the approval set of voter \(u_{i}\) is \(_{i}=\{c_{i}\}\{c_{j}\ |\ \{v_{i},v_{j}\} E(G)\}\).

Let \(=(C,V,R)\) denote the created profile. The total number of voters in this instance is \(|V(G)|\). To complete the construction, let the initial and target committees be \(W=\{c_{i}\ |\ v_{i} V_{s}\}\) and \(W^{}=\{c_{i}\ |\ v_{i} V_{t}\}\). Note that the score of \(W\) (resp. \(W^{}\)) is \(|V(G)|\) since \(V_{s}\) (resp. \(V_{t}\)) is a dominating set. It is straightforward to see that every size-\(h\) dominating set of \(G\) corresponds to a size-\(\) committee with score at least \(|V(G)|\). The correctness of the construction follows immediately. 

## 4 Conclusion

We introduced a framework for reconfiguring committees in multi-winner elections for four prominent committee election rules: CC, PAV, AV, and SAV, and systematically studied the (parameterized) complexity of the problem. We left open whether our reconfiguration problem under PAV is FPT wrt. the number \(n\) of voters.

Our framework can be directly applied to other score-based rules, such as the Monroe rule (Monroe, 1995), even for linear preferences. For non-score-based rules, we may adapt by either restricting the reconfiguration path to winning committees or introducing a measure that captures closeness to optimality.

Our preliminary experimental investigations (see Appendix C) indicate that for most randomly generated committees, a reconfiguration path not only exists but can also be efficiently determined using a straightforward heuristic. This finding opens a promising avenue for future research: determining the specific structures within the data that ensure the existence of a reconfiguration path, and whether it is possible to develop FPT algorithms leveraging these structures.

The concept of reconfiguration extends beyond the multi-winner election settings explored here or the fair division setting explored by Igarashi _et al._ (2024). Many other social choice frameworks remain unexplored in this context, such as stable matching (Gale and Shapley, 1962) or coalition formation (Drez and Greenberg, 1980). Investigating these could provide useful insights into the algorithmic principles of varied decision-making processes.