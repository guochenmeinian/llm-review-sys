# Stochastic Optimization Schemes for Performative Prediction with Nonconvex Loss

Qiang Li   Hoi-To Wai

Department of Systems Engineering and Engineering Management

The Chinese University of Hong Kong, Shatin, Hong Kong SAR of China

{liqiang, htwai}@se.cuhk.edu.hk

###### Abstract

This paper studies a risk minimization problem with decision dependent data distribution. The problem pertains to the performative prediction setting in which a trained model can affect the outcome estimated by the model. Such dependency creates a feedback loop that influences the stability of optimization algorithms such as stochastic gradient descent (SGD). We present the first study on performative prediction with smooth but possibly non-convex loss. We analyze a greedy deployment scheme with SGD (SGD-GD). Note that in the literature, SGD-GD is often studied with strongly convex loss. We first propose the definition of stationary performative stable (SPS) solutions through relaxing the popular performative stable condition. We then prove that SGD-GD converges to a biased SPS solution in expectation. We consider two conditions of sensitivity on the distribution shifts: (i) the sensitivity is characterized by Wasserstein-1 distance and the loss is Lipschitz w.r.t. data samples, or (ii) the sensitivity is characterized by total variation (TV) divergence and the loss is bounded. In both conditions, the bias levels are proportional to the stochastic gradient's variance and sensitivity level. Our analysis is extended to a lazy deployment scheme where models are deployed once per several SGD updates, and we show that it converges to an SPS solution with reduced bias. Numerical experiments corroborate our theories.

## 1 Introduction

When trained models are deployed in social contexts, the outcomes these models aim to predict can be influenced by the models themselves. Taking email spam detection as an example. On one hand, email service providers design filters to protect their users by identifying spam emails. On the other hand, spammers aim to circumvent these filters to distribute malware and advertisements. Each time a new classifier is deployed, spammers who are interspersed within the general population may alter the characteristics of their messages to evade detection. The above example pertains to the strategic classification problem  and can be modelled by dataset shifts .

The scenarios described can be captured by the recently proposed performative prediction problem, which called the above dataset shift phenomena as the 'performative' effect. Perdomo et al.  proposed to study the risk minimization problem with a _decision-dependent_ data distribution:

\[_{^{d}}\ V():=_{Z ()}[(;Z)],\] (1)

where \((;z)\) is a loss function that is continuously differentiable with respect to (w.r.t.) \(\) for any given data sample \(z\), and \(^{p}\) is the sample space. The dependence on \(\) in \(()\) explicitly captures the distribution shift effect of prediction models on data samples. The objective function \(V()\) is also known as the performative risk.

The decision variable \(\) in (1) affects simultaneously the distribution and the loss function. As such, optimizing \(V()\) directly is often difficult. Mendler-Dunner et al. (2020) considered the following stochastic gradient (SGD) recursion: for any \(t 0\) and let \(_{t+1}>0\) be a stepsize,

\[_{t+1}=_{t}-_{t+1}(_{t};Z_{t+ 1}),Z_{t+1}(_{t}).\] (2)

The above is known as the _greedy deployment_ scheme with SGD (SGD-GD), where the learner deploys the current trained model \(_{t}\) before drawing samples from \((_{t})\). The SGD-GD scheme describes a training procedure when the learner is _unaware of the performative phenomena_ with the data distribution \(()\), which is plausible in many applications. Relevant studies to (2) include lazy deployment where the learner deploys a new model only once every few iterations, or repeated risk minimization; see Mendler-Dunner et al. (2020); Perdomo et al. (2020).

Existing convergence analysis of (2) are limited to the case when \((;z)\) is _strongly convex_1 w.r.t. \(\). Perdomo et al. (2020) introduced the concept of _performative stable_ (PS) solution as the unique minimizer of (1) with fixed distribution. The PS solution, while being different from an optimal or stationary solution to (1), is shown to be the unique limit point of the recursion (2) provided that the sensitivity of the distribution map \(()\), measured w.r.t. the Wasserstein-1 (\(W_{1}\)) distance, is upper bounded by a factor proportional to the strong convexity modulus of \((;z)\)Mendler-Dunner et al. (2020). Furthermore, such convergence condition is proven to be tight Perdomo et al. (2020) and the analysis has been extended to proximal algorithm Drusvyatskiy and Xiao (2023), online optimization Cutler et al. (2023), saddle point seeking Wood and Dall'Anese (2023), multi-agent consensus learning Li et al. (2022), non-cooperative learning Wang et al. (2023); Narang et al. (2023); Piliouras and Yu (2023), state-dependent learning Brown et al. (2022); Li and Wai (2022), etc.

This paper provides the _first analysis_ of SGD-GD and related stochastic optimization schemes in performative prediction when \((;z)\) is _smooth but possibly non-convex_. This is a more common scenario in machine learning than the strongly convex loss considered in the prior works, e.g., it covers the case of training neural network (NN) models. We notice that existing works are limited to imposing structure on the loss function \((;z)\) and the distribution \(()\), utilizing advanced algorithms that demand extra knowledge on \(()\), etc., as we overview below.

**Related Works.** In the non-convex setting, the most related work to ours is (Mofakhami et al., 2023) which proved that a variant of PS solution can be found when training NN in the performative prediction setting, i.e., a special case with non-convex loss. However, their analysis is restrictive: (i) it requires a loss function of the form \((;z)=(f_{}(x);y)\) where \((;y)\) is strongly convex w.r.t. \(\), (ii) it only analyzes the case of training NN using a repeated risk minimization (RRM) procedure which _exactly_ minimizes a non-convex objective function at each step. In comparison, we concentrate on stochastic (first order) optimization schemes and require only smoothness for \((;z)\).

  
**Literature** & **Nevx-\(\)** & **Nevx-\(V\)** & **Sensitivity** & **Algorithm** & **Rate** & \(_{}\) \\  (Izzo et al., 2021) & ✗ & ✓ & Loc.\({}^{}\) & 2-Phase & \((T^{-})\) & \( V()=\) \\ (Miller et al., 2021) & ✗ & ✗ & \(W_{1}\) & 2-Phase & \((T^{-1})\) & \( V()\) \\ (Mendler-Dünner et al., 2020) & ✗ & ✓ & \(W_{1}\) & SGD-GD & \((T^{-1})\) & PS \\ (Mofakhami et al., 2023) & ✗\({}^{}\) & ✓ & \(^{2}\) & RRM\({}^{}\) & Linear\({}^{}\) & PS\({}^{}\) \\ 
**This Work** & ✓ & ✓ & TV or \(W_{1}\) & SGD-GD & \((T^{-})\) & \(()\)-SPS \\   

Table 1: **Comparison of Results in Existing Works**. ‘Sensitivity’ indicates the distance metric imposed on \(()\) when the latter is subject to perturbation, given in the form \(d((),(^{}))\| -^{}\|\) such that \(d(,)\) is a distance metric between distributions. ‘\(_{}\)’ indicates the type of convergent points: ‘PS’ refers to performative stable solution [cf. (4)], ‘SPS’ refers to Def. 1.

Other works departed from tackling the PS solution and considered alternative algorithms to directly minimize \(V()\). For example, Roy et al. (2022) assumed that unbiased estimates of \( V()\) is available and studied the convergence of stochastic conditional gradient algorithms towards a stationary solution of \(V()\), Li and Wai (2022) assumed bounded biasedness w.r.t. \( V()\) in (2) and show that (2) converges to a biased stationary point of \(V()\). Notice that estimating \( V()\) requires knowledge on \(()\) which has to be learnt separately. To circumvent this difficulty, two phases algorithms are studied in Miller et al. (2021); Izzo et al. (2021) that learn \(()\) via a large batch of samples at the first stage, then optimize \(\) later (see Zhu et al. (2023) for a two-timescale type online algorithm), derivative free optimization are studied in Miller et al. (2021); Ray et al. (2022); Liu et al. (2023), and confidence bound methods in Jagadeesan et al. (2022). In addition, Miller et al. (2021) proposed a mixture dominance assumption that can imply the strong convexity of \(V()\). We remark that Zhao (2022) studied conditions to ensure \(V()\) to be weakly convex. Our work does not require such advanced algorithms and show that stochastic (first order) optimization converges towards a similar solution as the PS solution. We display a comparison between these related works in Table 1.

**Our Contributions**: This work provides the _first_ analysis of stochastic gradient-based methods for performative prediction with smooth but possibly _non-convex_ losses. Our contributions are:

* We propose the concept of _stationary performative stable_ (SPS) solutions which is a relaxation of the commonly used performative stable (PS) condition Perdomo et al. (2020). The relaxation is necessary for handling non-convex losses using first-order methods.
* We show that the stochastic gradient method with greedy deployment (SGD-GD) finds a biased SPS solution. Assume that the distribution shift is \(\)-sensitive, i.e., it holds \(d((),(^{}))\| -^{}\|\) for some distance measure \(d(,)\) between the shifted distributions \((),(^{})\), SGD-GD converges at a rate of \((T^{-})\) in expectation to an \(()\)-SPS solution. The bias level is further improved to \((^{2})\) when the gradient is exact.
* Our analysis relies on constructing a time varying Lyapunov function that may shed new lights for non-gradient stochastic approximation Dieuleveut et al. (2023). We studied two alternative conditions on the distance metric between distributions. When \(d(,)\) is the Wasserstein-1 distance, SGD-GD converges to a biased SPS solution for Lipschitz loss function. When \(d(,)\) is the total variation (TV) distance, SGD-GD converges to a biased SPS solution for bounded loss function.
* We extend the analysis to the lazy deployment scheme with SGD Mendler-Dunner et al. (2020). The latter scheme finds an _SPS solution with reduced bias_ as the epoch length of lazy deployment grows.

Lastly, we provide numerical examples on synthetic and real data to validate our theoretical findings. The rest of this paper is organized as follows. SS2 introduces the problem setup and assumptions for establishing our convergence results of SGD-GD. Furthermore, we highlight the challenges in analyzing non-convex performative prediction. SS3 introduces the concept of SPS solutions and presents the convergence results for SGD-GD under two alternative assumptions on the distribution shifts. We also outline the use of a time varying Lyapunov function to handle the dynamic nature of SGD-GD. SS4 shows the results for the lazy deployment scheme. Lastly, SS5 provides numerical experiments to illustrate our results.

**Notations.** Let \(^{d}\) be the \(d\)-dimensional Euclidean space equipped with inner product \(\,|\,\) and induced norm \(\|x\|=\). Let \(\) be a (measurable) sample space, and \(,\) are two probability measures defined as \(\). \([]\) denotes taking expectation w.r.t all randomness, \(_{t}[]:=_{t}[|_{t}]\) means taking conditional expectation on the filtration \(_{t}:=(\{_{0},_{1},,_ {t}\})\), where \(()\) is the sigma-algebra generated by the random variables in the operand and \(\{_{t}\}\) is the sequence of iterates generated by the SGD-GD scheme (2).

## 2 Stationary Condition for Performative Stability

This section prepares the analysis of (1) with SGD-GD and related schemes in the non-convex loss setting. To fix idea, we define the decoupled performative risk and the decoupled partial gradient:

\[J(_{1};_{2})=_{Z(_{ 2})}[(_{1};Z)], J(_{1};_{2})=_{Z(_{2})}[( _{1};Z)].\] (3)Observe that while \(V()=J(;)\), \( J(;) V()\) in general since \( J(;)\) only represents a partial gradient of \(V()\); see (Izzo et al., 2021). In (2), the conditional expectation of the stochastic gradient update term satisfies \(_{t}[(_{t};Z_{t+1})]= J(_{t} ;_{t})\).

If the loss \((;z)\) is strongly convex w.r.t. \(\), then the decoupled performative risk \(J(;})\) admits a unique minimizer w.r.t. \(\) for any \(}\). It has hence motivated (Perdomo et al., 2020) to study the _performative stable_ (PS) solution \(}_{PS}\) which is defined as a fixed point to the map

\[(}):=_{^{d}}J(;}),\ \ \ \ _{PS}=(_{PS}).\] (4)

In the above, the uniqueness and existence of \(_{PS}\) follows by observing that \(()\) is a contraction if and only if the sensitivity of \(()\), i.e., the'smoothness' of \(()\) w.r.t. \(\), is upper bounded by the inverse of condition number of \((;z)\). The convergence of SGD-GD follows by analyzing (2) as a stochastic approximation (SA) scheme for the repeated risk minimization (RRM) procedure \(()\)(Mendler-Dunner et al., 2020).

For the case of _non-convex_ loss in this paper, the analysis becomes more nuanced since the map \(()\) is no longer well-defined, e.g., there may exist more than one minimizers to \(_{}J(;})\). Our remedy is to concentrate on the following non-convex counter part to the PS solution:

**Definition 1**.: _(\(\) **stationary performative stable solution**) Let \( 0\), the vector \(_{-SPS}^{d}\) is said to be an \(\) stationary performative stable (\(\)-SPS) solution of (1) if:_

\[\| J(_{-SPS};_{-SPS})\|^{ 2}=\|_{Z(_{-SPS})}[ (_{-SPS};Z)]\|^{2}.\] (5)

We also say that \(_{SPS}\) is an (exact) SPS solution if it satisfies (5) with \(=0\). In other words, \( 0\) measures the stationarity of a solution. Notice that if \((;z)\) is strongly convex w.r.t. \(\), then an SPS solution is also a PS solution defined in (Perdomo et al., 2020).

Although (5) is similar to the usual definitions of stationary solution in smooth optimization, there is a subtle but critical difference since \( J(;)\) may not be the _gradient_ of any function in \(\). For example, consider \((;z)=(1/2)\|-z\|^{2}\) and \(()(A,)\) for some square but asymmetric matrix \(A\), the map \( J(;)=(I-A)\) has a Jacobian of \(I-A\) which is not symmetric. Furthermore, we observe that the mean field for SGD-GD scheme (2) is \( J(;)\), which is not a gradient. The SGD-GD scheme is thus a special case of non-gradient SA scheme (Dieuleveut et al., 2023).

To get further insight, as investigated in (Dieuleveut et al., 2023), a common analysis framework of non-gradient SA scheme is by identifying a smooth Lyapunov function linked to the recursion (2). When \((;z)\) is strongly convex, we may study the Lyapunov functions as the squared distance \(\|-_{PS}\|^{2}\) (cf. (4)). It can be shown that the properties required in (Dieuleveut et al., 2023) are satisfied under the conditions analyzed by (Mendler-Dunner et al., 2020). However, in the case of non-convex loss, identifying a suitable Lyapunov function for non-gradient SA scheme is hard. In the next section, we demonstrate how to address this challenge by identifying a time varying Lyapunov function for SGD-GD.

## 3 Main Results

This section presents theoretical results on the SGD-GD scheme with non-convex loss. We first show how to construct a time varying Lyapunov function tailor made for (2). We then show the convergence of SGD-GD under two different sets of conditions.

We introduce two basic and natural assumptions on the risk minimization problem (1):

**A1**.: _For any \(z\), there exists a constant \(L 0\) such that_

\[\|(;z)-(^{};z)\|  L\|-^{}\|,\ \ ,^{}^{d},\] (6)

_where \((;z)\) denotes the gradient of \((;z)\) w.r.t. \(\). Moreover, there exists a constant \(^{}>-\) such that \((;z)^{}\) for any \(^{d}\)._

**A2**.: _For any fixed \(_{1},_{2}^{d}\), the stochastic gradient \((_{1};Z)\), \(Z(_{2})\) is unbiased such that \(_{Z(_{2})}[(_{1};Z)]=  J(_{1};_{2})\), and there exists constants \(_{0},_{1} 0\) such that_

\[_{Z(_{2})}[\|(_{1};Z)- J(_{1};_{2})\|^{2}] _{0}^{2}+_{1}^{2}\| J(_{1};_{2}) \|^{2}.\] (7)Note that A1, 2 are standard assumptions that hold for a wide range of applications and the respective stochastic optimization based training schemes. For instance, A1 requires the loss function to be smooth, while A2 assumes the stochastic gradient estimates to have a variance that may grow with \(\| J(_{1};_{2})\|^{2}\). For the _non performative prediction_ setting where the data distribution is not shifted by \(\), i.e., \(()\), these assumptions guarantee that SGD algorithm (i.e., SGD-GD with \(Z_{t+1}\)) to converge to a stationary solution of (1) with a suitable step size schedule (Ghadimi and Lan, 2013). In particular, in this case A1 implies that \(_{Z}[(;Z)]\) is a smooth function and serves as a Lyapunov function for the SGD algorithm.

In this light, it might be tempting to use the performative risk \(V()\) [cf. (1)] as the Lyapunov function for (2) and directly adopt the analysis in (Dieuleveut et al., 2023). However, the condition A1 is insufficient to guarantee that \(V()\) is smooth, and the mean field of (2) may not be aligned with \( V()\). Instead, from A1, 2, we proceed with a descent-like lemma for the iterates of SGD-GD:

**Lemma 1**.: _Under A1, 2. Suppose that the step size satisfies \(_{t 1}_{t} 1/(L(1+_{1}^{2}))\), then for any \(t 0\), the sequence of iterates \(\{_{t}\}_{t 0}\) generated by SGD-GD (2) satisfies_

\[}{2}\| J(_{t};_{t})\|^{2}  J(_{t};_{t})-_{t}[J(_{t+1};_{t})]+_{0}^{2}_{t+1}^{2}.\] (8)

Proof.: Fix any \(z\), applying A1 and the recursion (2) lead to

\[(_{t+1};z)(_{t};z)-_{t+1} (_{t};z)\,|\,(_{t};Z_{t+1}) +^{2}}{2}\|(_{t};Z_{t+1})\| ^{2},\] (9)

for any \(t 0\). Note that \(z\) can be any fixed sample while \(Z_{t+1}\) is the r.v. drawn from \((_{t})\) in (2). Let \(p_{_{t}}(z) 0\) denotes the pdf of \((_{t})\). We then multiply \(p_{_{t}}(z)\) on both sides of the inequality and integrate w.r.t. \(z\), i.e., taking the operator \(_{}()p_{_{t}}(z)z\). This yields

\[J(_{t+1};_{t}) J(_{t};_{t})- _{t+1} J(_{t};_{t})\,|\, (_{t};Z_{t+1})+^{2}}{2}\| (_{t};Z_{t+1})\|^{2},\] (10)

since \((;z)p_{_{t}}(z)z=J(;_{t})\) according to definition (3). We next evaluate the conditional expectation, \(_{t}[]\), on both sides of the above inequality

\[_{t}[J(_{t+1};_{t})] J(_{t}; _{t})-_{t+1}\| J(_{t};_{t})\|^{2 }+^{2}}{2}_{t}[\|(_{t};Z_{t+ 1})\|^{2}].\] (11)

Using A2, we note that \(_{t}[\|(_{t};Z_{t+1})\|^{2}] _{0}^{2}+(1+_{1}^{2})\| J(_{t};_{t})\| ^{2}\). Reshuffling terms and using the step size condition yield the desired result (8); see SSA for a detailed proof. 

For sufficiently small \(_{t+1}>0\) and when \(_{t}\) is not SPS, eq. (8) implies the descent relation \(_{t}[J(_{t+1};_{t})]<J(_{t};_{t})\). This suggests that at the \(t\)th iteration, the function \(J_{t}():=J(;_{t})\) may serve as a Lyapunov function for the SGD-GD scheme. Meanwhile, \(J_{t}()\) is a _time varying_ Lyapunov function. The said descent relation does not necessarily imply the convergence towards an SPS solution. Instead, the first term on the right hand side of (8) can be decomposed as:

\[[J_{t}(_{t})-J_{t}(_{t+1})]=[J_{t}( {}_{t})-J_{t+1}(_{t+1})]+[J_{t+1}(_{t+1})-J_{t}(_{t+1})]}_{}.\] (12)

The first part is a difference-of-sequence which is summable, while the second part is a residual term. The convergence of SGD-GD with non-convex losses hinges on bounding the latter residual. Taking a closer look, the residual is the difference of evaluating \(_{t+1}\) on \(J_{t}()\) and \(J_{t+1}()\), i.e.,

\[[J_{t+1}(_{t+1})-J_{t}(_{t+1})]=[ _{Z(_{t}),Z^{}(_{t+1})}[(_{t+1};Z^{})-(_{t+1};Z)] ].\] (13)

The above further depends on the differences between the distributions \((_{t}),(_{t+1})\), i.e., the _sensitivity_ of the data distribution w.r.t. perturbation in \(\). Next, we study sufficient conditions that imply the convergence of SGD-GD through bounding \([J_{t+1}(_{t+1})-J_{t}(_{t+1})]\).

### Sufficient Conditions for Convergence of SGD-GD

From (8), we anticipate the convergence of SGD-GD towards a biased SPS solution if it holds \([J_{t+1}(_{t+1})-J_{t}(_{t+1})]=( [\|_{t}-_{t+1}\|])=(_{t+1} [\|(_{t};Z_{t+1})\|])\). Now, as seen from (13), establishing such relation would require \(()\) to satisfy a certain sensitivity criterion when subject to perturbation in \(\). Our subsequent discussions are organized according to various distributional distance measures on sensitivity.

**Wasserstein-1 Sensitivity.** Our first set of conditions uses the Wasserstein-1 distance for measuring the sensitivity of data distribution. The measure is commonly used in the studies of performative prediction, e.g., as pioneered by (Perdomo et al., 2020; Mendler-Dunner et al., 2020):

**W1**.: _(\(\) sensitivity w.r.t. Wasserstein-1 distance) There exists \( 0\) such that_

\[W_{1}((),(^{})) \|-^{}\|,\] (14)

_for any \(,^{}^{d}\). Notice that the Wasserstein-1 distance is defined as \(W_{1}(,):=_{P(,)}_{(z,z^{ }) P}[\|z-z^{}\|_{1}]\), where \(((),(^{ }))\) is the set of all joint distributions on \(\) whose marginal distributions are \((),(^{})\)._

In this case, we require the loss function to be Lipschitz continuous w.r.t. shifts in the data sample \(z\).

**W2**.: _There exists a constant \(L_{0}>0\) such that for all \(z,z^{}\), and \(^{d}\),_

\[|(;z)-(;z^{})| L_{0}\|z-z^{ }\|.\] (15)

Our key observation is that the above conditions imply the desired Lipschitz continuity property on \(J(;)\). In fact, we have:

**Lemma 2**.: _Under W1, 2. For any \(_{1},_{2},^{d}\), it holds_

\[|J(;_{1})-J(;_{2})| L_{0} \|_{1}-_{2}\|.\] (16)

The proof, which is a variant of (Drusvyatskiy and Xiao, 2023, Lemma 2.1), can be found in SSB.

**TV distance Sensitivity.** Although W1 holds for a number of applications, such as the location family distributions (e.g., (Miller et al., 2021; Perdomo et al., 2020; Narang et al., 2023)), the assumption of Lipschitz loss function in W2 can be difficult to verify, especially if we want \(L_{0}\) (and thus the Lipschitz continuity constant of \((;)\) given by \(L_{0}\)) to be small. As an alternative, we consider a slightly stronger sensitivity condition on \(()\) via the total variation (TV) distance.

**C1**.: _(\(\) sensitivity w.r.t. TV distance) For any \(,^{}^{d}\), there exists a constant \( 0\) such that_

\[_{TV}((_{1}),(_{2})) \|-^{}\|,\] (17)

_where \(_{TV}(,)\) is the total variation distance defined as \(_{TV}(,):=_{A}|(A)-(A)|= |p_{}(z)-p_{}(z)|\,z\) such that \(,\) are two probability measures supported on \(\) and \(p_{()}(z)\) denotes their probability distribution functions (p.d.f.s)._

Although C1 is slightly strengthened from W1, it allows us to relax the Lipschitz continuity assumption W2 on the loss. Particularly, we consider replacing W2 by:

**C2**.: _There exists a constant \(_{max} 0\) such that \(_{^{d},z}|(;z)| _{max}\)._

The above condition requires \((;)\) to be uniformly bounded. Compared to W2, it can be easier to verify and \(_{max}\) is typically small. For example, it holds with \(_{max}=1\) for the case of sigmoid loss.

Similar to W1, 2, we observe that the above conditions imply \(J(;)\) is Lipschitz continuous:

**Lemma 3**.: _Under C1, 2. For any \(_{1},_{2},^{d}\), it holds that_

\[|J(;_{1})-J(;_{2})| 2_{ max}\|_{1}-_{2}\|.\] (18)

See SSC. The only difference with Lemma 2 is that (18) has a different Lipschitz constant.

**Remark 1**.: _It is worth noting that in lieu of C1, Mofakhami et al. (2023) assumed the following sensitivity condition with respect to the Pearson \(^{2}\) divergence, i.e.,_

\[^{2}((),(^{})):= {(p_{}(z)-p_{^{}}(z))^{2}}{p_{}(z)} z=(\|f_{}()-f_{^{}}( )\|^{2})\] (19)_where \(f_{}()\) represents the output of a neural network parameterized by \(\), \(p_{}()\) and \(p_{^{}}()\) are the probability density functions (p.d.f.s) of the induced distributions \(()\) and \((^{})\), respectively._

_Our TV distance sensitivity condition in C1 constitutes a weaker condition since for any bounded sample space \(\), the following holds:_

\[W_{1}((),(^{}))()_{TV}((),(^{}))()}{2}( (),(^{}))},\]

_as shown in (Gibbs and Su, 2002, Sec. 2), where \(():=_{z,z^{}}\|z-z^{}\|\) denotes the diameter of the sample space._

### Convergence of SGD-GD with Non-convex Loss

Equipped with Lemmas 2, 3, we are ready to present the convergence result for SGD-GD with smooth but non-convex losses. Observe the following theorem whose proof can be found in SSD:

**Theorem 1**.: _Under A1, 2. Let the step sizes satisfy \(_{t 1}_{t} 1/(L(1+_{1}^{2}))\). Moreover, let_

\[=L_{0}\ \ ,\ \ \ \ =2_{max}\ \ .\] (20)

_Then, for any \(T 1\), the iterates \(\{_{t}\}_{t 0}\) generated by SGD-GD satisfy_

\[_{t=0}^{T-1}}{4}[\| J(_{t}; _{t})\|^{2}]_{0}+(_{0}+(1+ _{1}^{2}))_{t=0}^{T-1}_{t+1}+_{0}^{2}_{t=0}^{T-1}_{t+1}^{2},\] (21)

_where \(_{0}:=J(_{0};_{0})-_{}\) is an upper bound to the initial optimality gap of performance risk._

Using a fixed step size schedule, we simplify the bound as:

**Corollary 1**.: _Under A1, 2, the alternative conditions W1, 2, or C1, 2. Let \(T 1\) be the maximum number of iterations and set \(_{t}=1/\). Let \(\) be a random variable chosen uniformly and independently from \(\{0,1,,T-1\}\). For any \(T L^{2}(1+_{1}^{2})^{2}\), the iterates by SGD-GD satisfy_

\[[\| J(_{};_{}) \|^{2}] 4(_{0}+_{0}^{2}) }+(_{0}+(1+_{1 }^{2}))}_{}.\] (22)

As \(T\), the first term in (22) vanishes as \((1/)\) and the above shows that the SGD-GD scheme finds an \((_{0}\,+(1+_{1}^{2})\,^{2})\)-SPS solution. This yields the first convergence guarantee for performative prediction with non-convex loss via a stochastic optimization scheme.

Lastly, an interesting observation is that the bias level is controlled at \((_{0}\,+(1+_{1}^{2})\,^{2})\). The latter estimate highlights the role of the stochastic gradient's variance. To see this, let us concentrate on the case when \(\) is small. When stochastic gradient is used such that \(_{0}>0\), SGD-GD finds an \(()\)-SPS solution; while with deterministic gradient, i.e., when \((_{t};Z_{t+1})= J(_{t};_{t})\) with \(_{0}=_{1}=0\), SGD-GD finds an \((^{2})\)-SPS solution. Such a distinction in the bias levels indicate that a _unique property_ of non-convex performative prediction where the asymptotic performance of SGD-GD is sensitive to the stochastic gradient's noise variance. Furthermore, our result suggests that adjusting the minibatch size in SGD-GD may have a significant effect on reducing the bias level since \(_{0},_{1}\) can be controlled by the latter.

**Remark 2**.: _Prior analysis in (Mendler-Dunner et al., 2020, Drusvyatskiy and Xiao, 2023) showed that with \(\) strongly convex loss \((;z)\), both the existence/uniqueness of the PS solution and the convergence of SGD-GD to the PS solution critically depend on the condition \(</L\) (in addition to our A1, 2, W1). When \(>/L\), it is shown that the SGD-GD scheme may even diverge. In contrary, Theorem 1 does not exhibit such an explicit condition on \(\) for the convergence results (21), (22) to hold. This happens because our result requires the loss function itself to be Lipschitz [cf. W2] or bounded [cf. C2], which may not be satisfied by their strongly convex losses._

## 4 Extension: Lazy Deployment Scheme with SGD

Implementing the SGD-GD scheme (2) requires deploying the latest model every time when drawing samples from \(()\). This may be difficult to realize since deploying a new classifier in real time can be time consuming. As inspired by (Mendler-Dunner et al., 2020), this section studies an extension of (2) to the _lazy deployment_ scheme where the new (prediction) models are deployed only once per several SGD updates.

To describe the extended scheme, let \(K 1\) denotes the epoch length of lazy deployment, we have

\[&_{t,k+1}=_{t,k}- (_{t,k};Z_{t,k+1}),Z_{t,k+1}(_{t}),\ k=0,...,K-1,\\ &_{t+1}=_{t+1,0}=_{t,K}.\] (23)

For simplicity, we focus on the case with a constant step size \(>0\). Observe that the lazy deployment scheme is a double-loop algorithm where the index \(t\) denotes the number of deployments and the index \(k\) denotes the SGD update. To analyze the convergence of (23), we further require the stochastic gradient to be uniformly bounded:

**A3**.: _There exists a constant \(G 0\) such that \(_{^{d},z}\|(;z )\| G\)._

Despite being a stronger assumption, the above remains valid for practical non-convex losses, e.g., sigmoid loss. We observe the following convergence results whose proof is in SSE:

**Theorem 2**.: _Under A1, 2, 3, and the alternative conditions W1, 2, or C1, 2. Let \(T 1\) be the maximum number of deployments to be run, we set \(=1/(K)\) and let \(\) be a random variable chosen uniformly and independently from \(\{0,1,,T-1\}\). For any \(T L^{2}(1+_{1}^{2})^{2}/K^{2}\), the iterates generated by the lazy deployment scheme with SGD (23) satisfy:_

\[[\| J(_{};_{}) \|^{2}]}{}+^{2}}{K}+}{3T}+}{K}(_{0}+2(K+ _{1}^{2})),\] (24)

_where we recall that \(\) was defined in (20) and \(_{0}=J(_{0};_{0})-_{}\)._

In (24), the first three terms decay as \((1/)\) similar to SGD-GD, the last term simplifies to \((()^{2}^{2}}{K})\). The lazy deployment scheme (23) finds an \((()^{2})\)_-SPS solution_ when \(T,K\), contrasting with SGD-GD which admits a bias level of \(()\).

We remark that the above result can be anticipated. During the \(t\)th deployment, (23) runs an SGD recursion for \(_{}J(;_{t})\) where it will find a stationary solution for the non-convex optimization as \(K\). The lazy deployment scheme resembles RRM and we expect that it may find a reduced bias SPS solution as inspired by (Mofakhami et al., 2023) which studied a similar algorithm.

## 5 Numerical Experiments

We consider two examples of performative prediction with non-convex loss based on synthetic data and real data. All simulations are performed with Pytorch on a server using a Intel Xeon 6318 CPU. Additional results can be found in SSF.

**Synthetic Data with Linear Model.** We first consider a binary classification problem using linear model. To enhance robustness to outliers, we adopt the sigmoid loss function (Ertekin et al., 2010):

\[(;z):=(1+(c y x\,|\,))^{-1}+( /2)\|\|^{2}.\] (25)

For small regularization \(>0\), \((;z)\) is smooth but non-convex. To define the data distribution, we have a set of \(m\) unshifted samples \(^{o}\{(x_{i},y_{i})\}_{i=1}^{m}\) with feature \(x_{i}^{d}\) and label \(y_{i}\{ 1\}\). For any \(^{d}\), \(()\) is a uniform distribution on \(m\)_shifted samples_\(\{(x_{i}-_{L},y_{i})\}_{i=1}^{m}\), where \(_{L}>0\) controls the shift magnitude. Applying SGD-GD to the setup yields a scheme such that A1, 2, W1 (with \(=_{L}\)) are satisfied, and W2 holds as \(\|^{t}\|\) is bounded in practice. To generate the training data, the unshifted samples \(^{o}\) are generated first as \(x_{i}[-1,1]^{d}\), i.e., the uniform distribution, \(_{i}=( x_{i}\,|\,^{o})\{ 1\}\) such that \(^{o}(0,)\), then a randomly selected 10% of the labels are flipped to generate the final \(y_{i}\). Furthermore, we set \(m=800,d=10,c=0.1,=10^{-3},\{0,0.1,0.5,2\}\). For (2), the batch size is \(b=1\) and the stepsize is \(_{t}==1/\) with \(T=10^{6}\).

First, we validate the convergence behavior of SGD-GD in Theorem 1. In Fig. 1 (left), we compare \(\| J(_{t};_{t})\|^{2}\) against the number of iteration \(t\) for the SGD-GD scheme over \(10\) repeated runs. The shaded region indicate the \(95\%\) confidence interval. We observe that after a rapid transient stage,the SPS stationarity \(\| J(_{t};_{t})\|^{2}\) saturates and stay around a constant level, indicating that the SGD-GD converges to a biased-SPS solution. Increasing \(_{L}\) leads to an increased bias, corroborating with Theorem 1 that the bias level is \(()\). Fig. 1 (middle) further evaluate the performance of the trained classifier \(_{t}\) in terms of the performative risk value. Second, we compare the lazy deployment scheme in SS4 with \(K\{5,10\}\) and stepsize \(=1/(K)\). For fairness, we test SGD-GD with batch size of \(b\{5,25\}\) and compare the SPS stationarity against the number of samples accessed. The results in Fig. 1 (right) verifies Theorem 2 where increasing \(K\) effectively reduces the bias level.

**Real Data with Neural Network.** Our second example deals with the task of training a neural network (NN) on the spambase Hopkins et al. (1999) dataset with \(m=4601\) samples, each with \(d=48\) features. We split the training/test sets as \(8:2\). Our aim is to study the behavior of SGD-GD when training NN classifier. To specify (1), we let \(z(x,y)\) where \(x^{d}\) is the feature vector, \(y\{0,1\}\) is label (0 for not spam, 1 for spam). Consider the regularized binary cross entropy loss:

\[(;z)(f_{}(x);y)=-y(f_{}(x))-(1-y)(1-f_{}(x))+(/2)\| \|^{2},\] (26)

where \(f_{}(x)\) denotes the NN classifier. The unshifted data is denoted by \(^{o}=\{(x_{i},y_{i})\}_{i=1}^{m}\). Sampling from the shifted data distribution \(()\) is achieved through (i) uniformly draw a sample \((,)\) from \(^{o}\), (ii) maximize the following utility function:

\[x=_{x^{}}U(x^{};,):=-f_{}(x^{ })-}}\|x^{}-\|^{2},\] (27)

to get \(z(x,)()\). In practice, we take the approximation \(x-_{}_{x}f_{}()\).

In our experiment, we set \(_{}\{0,10,100\}\), batch size as \(b=8\). For SGD-GD, we use \(_{t}==200/\) and for lazy deployment, we use \(=200/(K)\) with \(T=10^{5}\). The NN encoded in \(f_{}(x)\) consists of three fully-connected layers with \(\) activation and a sigmoid output layer, i.e.,

\[f_{}(x)=Sigmoid_{(1)}^{}(_{(2)}^{}(_{(3)}^{}x)),\]

where \(_{(i)}:=[w_{(i)};b_{(i)}]\) concatenates the weight and bias for each layer with \(d_{1}=10,d_{2}=50,d_{3}=57\) neurons, making a total of \(d=3421\) parameters for \(\). For the training, we initialize these parameters as \((0,1)\) for weights and constant values for the biases.

Fig. 2 (left) compares the SPS measure \(\| J(_{t};_{t})\|^{2}\) against the iteration number \(t\) using SGD-GD. As observed, SGD-GD converges to a near SPS solution and the behavior seems to be insensitive to \(_{}\). We speculate that this is due to the shift model (27) but would relegate its study to future work. Fig. 2 (middle & right) compare the greedy and lazy deployment schemes with \(_{}\{10,10^{4}\}\) against the number of samples used. Compared to SGD-GD, lazy deployment performs relatively better as \(_{}\), as seen from the no. of samples needed to reach \(\| J(_{t};_{t})\|^{2}=10^{-4}\) in the plots. This agrees with (24) which shows the dominant term as \((^{2})\) and \(\) is related to \(_{}\).

## 6 Conclusions

This paper provides the first study on the performative prediction problem with smooth but possibly non-convex loss. We proposed a stationary performative stable (SPS) condition which is the counterpart of performative stable condition used with strongly convex loss. Using the SPS solution concept, we studied the convergence of greedy deployment and lazy deployment schemes with SGD. We prove that SGD-GD finds a biased, \(()\)-SPS solution, while the lazy deployment scheme finds a reduced bias SPS solution when the lazy deployment epoch is large. As an initial work on this subclass of problems, our findings can lead to more general analysis on algorithms under the non-convex performative prediction framework.