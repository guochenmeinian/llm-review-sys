# Can Simple Averaging Defeat Modern Watermarks?

Pei Yang  Hai Ci  Yiren Song  Mike Zheng Shou

Show Lab, National University of Singapore

yangpei@u.nus.edu, ciahai03@gmail.com

yiren@nus.edu.sg, mike.zheng.shou@gmail.com

Equal contribution.Corresponding author.

###### Abstract

Digital watermarking techniques are crucial for copyright protection and source identification of images, especially in the era of generative AI models. However, many existing watermarking methods, particularly content-agnostic approaches that embed fixed patterns regardless of image content, are vulnerable to steganalysis attacks that can extract and remove the watermark with minimal perceptual distortion. In this work, we categorise watermarking algorithms into content-adaptive and content-agnostic ones, and demonstrate how averaging a collection of watermarked images could reveal the underlying watermark pattern. We then leverage this extracted pattern for effective watermark removal under both greybox and blackbox settings, even when the collection of images contains multiple watermark patterns. For some algorithms like Tree-Ring watermarks, the extracted pattern can also forge convincing watermarks on clean images. Our quantitative and qualitative evaluations across twelve watermarking methods highlight the threat posed by steganalysis to content-agnostic watermarks and the importance of designing watermarking techniques resilient to such analytical attacks. We propose security guidelines calling for using content-adaptive watermarking strategies and performing security evaluation against steganalysis. We also suggest multi-key assignments as potential mitigations against steganalysis vulnerabilities. Github page: https://github.com/showlab/watermark-steganalysis.

## 1 Introduction

Digital watermarking hides information within digital media, facilitating copyright protection and source authentication . With the advances in AI-based image generation and editing , robust and secure digital watermarking is crucial for preventing deepfake misuse or manipulations of created contents .

We categorise digital watermarking methods into two types: content-adaptive and content-agnostic. Content-adaptive methods take images into the watermarking process, dynamically adjusting the watermark's placement and strength based on the image content, as seen in technologies like HiDDeN  and RivaGAN . Content-agnostic methods, however, use fixed, predefined watermark patterns independent of or weakly dependent on image content. Apart from traditional methods like DwtDctSvd , this also includes RoSteALS  that adds image-independent additive perturbations, and Tree-Ring  that places a ring pattern to the initial noise of a diffusion generation process. Content-adaptive methods typically offer better robustness against image processing distortions, while content-agnostic methods are computationally lighter and easier to implement.

A fundamental requirement for digital watermarks is robustness, ensuring watermarks cannot be easily removed or tampered with . To meet the requirement, existing methods have been improvingwatermark robustness through design considerations  or data augmentation during training , and have demonstrated strong robustness to various image distortions like noise perturbations or JPEG compression [15; 14; 16]. Works like Tree-Ring  even demonstrated robustness against strong attacks like VAE compression and image re-generation [17; 18]. In this paper, however, we reveal that content-agnostic watermarking techniques, including Tree-Ring, are vulnerable to steganalysis attacks, unmasking their hidden fragility.

To the best of our knowledge, our steganalysis is the first successful blackbox attack against Tree-Ring watermarks . We discovered a content-agnostic ripple pattern in Tree-Ring-watermarked images and identified that this component is essential for watermark detection. Subtracting this pattern allows evading watermark detection with minimal impact on image perceptual quality. This raises the question: Do diffusion model watermarking methods that modify initial noise [19; 20; 14; 16] truly add semantic watermarks, or do they merely propagate low-level content-agnostic patterns to generated images?

Lastly, we propose new security guidelines for the watermarking community, emphasizing the importance of robustness against steganalysis. The guidelines call for performing evaluations against steganalysis when proposing new watermarking methods. It also encourages the development of content-adaptive watermarking methods to enhance resistance to steganalysis. For existing content-agnostic watermarking methods, we suggest assigning multiple watermarks per user as a mitigation strategy. In summary, the main contributions of this paper are:

* We reveal the vulnerability of content-agnostic watermarking methods to steganalysis removal and forgery.
* To the best of our knowledge, we are the first to successfully attack Tree-Ring watermarks in a blackbox setting, providing deeper insights into the essence of diffusion noise watermarking methods.
* We propose new security guidelines for future watermarking methods to help defend against steganalysis attacks.

## 2 Related works

### Digital image watermarking

The field of digital image watermarking has evolved from traditional rule-based approaches to more recent deep learning-based techniques, with a significant focus on watermarking diffusion-generated images [14; 21; 22]. We categorise digital watermarking technologies into content-agnostic, which craft modifications based solely on the watermark information, and content-adaptive, which tailor modifications based on both watermark information and the image content.

Content-agnostic watermarkingTraditional methods like DwtDctSvd  employ fixed watermark patterns in transform domains, while more recent approaches modify the initial noise for diffusion-based image generation. Tree-Ring watermarks  replace the low-frequency Fourier-domain pixels of Gaussian noise with a ring pattern before using it for diffusion denoising. Similarly, Gaussian Shading  preserves the distribution while sampling the initial noise. Other approaches [13; 23; 24] train encoders to generate additive watermark perturbations without conditioning on image features.

Content-adaptive watermarkingThese techniques leverage image features to generate watermarks tailored to the input image content. Early encoder-decoder methods like HiDDeN  and StegaStamp  employed deep neural networks to imprint watermarks onto the images. SSL  leveraged self-supervised networks as feature extractors, while RivaGAN  used attention mechanisms to look for appropriate local regions for watermark encoding. Recent approaches like Stable Signature , WADiff , and Zhao et al.  finetune the diffusion model to enable content-aware watermarking of diffusion-generated images. WMA adapter  designs a dedicated contextual adapter.

Through the classification, we highlight the vulnerability of content-agnostic techniques to steganalysis attacks, as they employ fixed or weakly content-dependent watermark patterns.

### Attacks on watermarking

Traditional attacks applied distortions to disrupt watermarks, performing signal-level distortions like image compression, noise perturbation, blurring or colour adjustment, and geometric transformations like rotation or cropping [28; 29; 30; 10; 12]. In terms of videos, codecs may also distort invisible watermarks [31; 32]. These attacks fool watermark detectors at the cost of significant image quality degradation. To resist such attacks, training-based methods have been simulating the distortions via "attack layers" during training [33; 34; 10; 35], while training-free methods have been employing design considerations such as watermarking only low-frequency components .

Recent attacks base on deep models: regeneration attacks with diffusion models  and VAEs can provably remove pixel-level invisible watermarks [37; 18]. But such attacks are shown to be ineffective  for Tree-Ring  that alters the image a lot. When attackers can access the watermarking algorithm, they may also perform adversarial attacks . The downside is that both regeneration and adversarial attacks are computationally expensive. In contrast, we propose a new type of blackbox steganalysis attack, which is efficient and works for content-agnostic watermarks. Steganalysis can extract meaningful watermark patterns, thus promoting further applications like forgery or explainability.

## 3 Watermark steganalysis

### Notations

Let \(x_{}\) denote the original digital image, \(w\) the watermark information (e.g., bit sequence or geometric pattern), and \(E\) the watermark encoder that imprints \(w\) into \(x_{}\), yielding the watermarked image \(x_{w}=E(x_{},w)\). The embedding constraint ensures that \(x_{}\) and \(x_{w}\) are perceptually indistinguishable. A watermark decoder \(D\) recovers the embedded information \(=D(x_{w})\) for authentication purposes.

### Threat model

The adversary aims to fool \(D\) by manipulating \(x_{w}\) using a strategy denoted as \(T()\) such that \(D(T(x_{w})) w\) (watermark removal) or manipulating \(x_{}\) such that \(D(T(x_{}))=w\) (watermark forgery). Formally, the adversary solves:

\[&_{T}  D(T(x_{w}))-w,\\ &_{T} D(T(x_{ }))-w,\] (1)

subject to the constraint that the original image \(x\) and the manipulated image \(T(x)\) are perceptually indistinguishable. Rather than applying strong distortions as \(T\), we demonstrate that the adversary can take a steganalysis approach to fool \(D\).

### Steganalysis: watermark extraction, removal and forgery

Figure 1 illustrates our watermark removal/forgery strategy \(T\), which assumes that \(E\) perturbs an additive pattern \(_{w}\) agnostic to image content, such that \(x_{w}=x_{}+_{w}\). This assumption can be refined based on a detailed understanding of specific watermarking algorithms (as will be showcased in Section 4.4.1). Under this additive assumption, to either remove or forge watermarks, we can approximate \(_{w}=x_{w}-x_{}\). To improve approximation and reduce randomness, we propose averaging over \(n\) images during pattern extraction:

\[_{w}=(_{i=1}^{n}x_{w,i}-_{i=1}^{n}x_{ ,i}).\] (2)

With the approximated \(_{w}\), the adversary can perform greybox watermark removal (\(_{}=T(x_{w})=x_{w}-_{w}\)) or forgery (\(_{w}=T(x_{})=x_{}+_{w}\)) on a given image \(x\). Even without paired \(x_{}\), the adversary can perform blackbox removal/forgery by approximating \(x_{}\) through averaging anycollection of clean images from the Internet. There is a practical scenario where the adversary's watermarked image collection contains multiple different watermarks, we show in Section 4.4.4 that they can still use Equation 2 for pattern extraction.

## 4 Experiments

### Experimental setup

Image experimentsWe evaluate our proposed steganalysis on 12 existing image watermarking methods: Tree-Ring , RingID , RAWatermark , DwtDctSvd , RoSteALS , Gaussian Shading , Stable Signature , WmAdapter, RivaGAN , SSL , HiDDeN , and DwtDct . For the greybox setting, we use the COCO2017  validation set for WmAdapter  and Stable Signature , Stable Diffusion Prompts  for Tree-Ring  and RingID  prompts, and DiffusionDB  for the remaining methods as the non-watermarked images (\(x_{}\)). The corresponding watermarked images (\(x_{w}\)) are generated using the respective watermarking methods. In the blackbox setting with no access to paired images, we substitute \(x_{}\) with ImageNet  test set. The selection of images within the datasets is random. The datasets are resized to 256\(\)256 for RoSteALS, SSL, and HiDDeN, and 512\(\)512 for other methods.

We assess watermark removal under different \(n\) (number of images averaged) during watermark pattern extraction, and test on 100 images3 during watermark removal. We report detection AUC for Tree-Ring  and RAWatermark , and watermark decoding bit accuracy for the other methods. Additionally, we evaluate the image quality between \(x_{w}\) and its non-watermarked counterpart, reporting PSNR in the main text and SSIM, LPIPS , and SIFID  in the appendix.

Audio experimentsWe then extend the experiments to audio watermark removal on AudioSeal  and WavMark , using the zh-CN subset of the Common Voice dataset . Each audio segment is preprocessed to a 16 kHz mono format, with only the first two seconds retained. We use paired audio for greybox removal, and unpaired audio for blackbox removal. We report the watermark detection accuracy for AudioSeal , and watermark decoding bit accuracy for WavMark . To quantify the audio quality after watermark removal, we calculate the Scale-Invariant Signal-to-Noise Ratio (SI-SNR) between the watermark-removed audio and its non-watermarked counterpart.

Computing resourcesThe experiments were conducted on an AMD EPYC 7413 24-Core Processor and an Nvidia RTX 3090 GPU, requiring around 200GB of disk space. The execution time for each experiment ranges from around 10 minutes (HiDDeN) to around 10 hours (Tree-Ring).

Figure 1: Watermark pattern extraction, removal and forgery under the Simple Linear Assumption. Two groups of paired (greybox) or unpaired (blackbox) images are first averaged and then subtracted to reveal the watermark pattern. The pattern extracted is then used for watermark removal/forgery.

### Quantitative analysis on watermark removal

As shown in Figure 2 (left column), our steganalysis-based watermark removal method effectively degrades the detection performance of RAWatermark (0.5744 AUC), DwtDctSvd (0.5722 accuracy), Tree-Ring (0.2407 AUC), RoSteALS (0.2444 bit accuracy), and Gaussian Shading (0.5615 bit accuracy). The results highlight two key findings: (1) the aforementioned methods embed content-agnostic watermarks, and (2) content-agnostic watermarks are susceptible to steganalysis-based removal.

The effectiveness of our method increases as \(n\) decreases, albeit at the cost of increased image distortion (smaller PSNR). In contrast, content-adaptive watermarking methods (Figure 2 right column) demonstrate robust resistance to this attack, maintaining high detection accuracy (\(>0.95\)) upon convergence. This resilience underscores the importance of content-adaptivity in watermark design to thwart steganalysis-based removal attacks.

### Qualitative analysis

In this qualitative analysis, we first examine the patterns extracted from various watermarking methods, then discuss how the removal of these watermarks affects image quality.

Extracted patternsFigure 9 displays patterns extracted from content-agnostic methods, while Figure 10 shows those from content-adaptive methods. Content-agnostic watermarks tend to exhibit unique patterns, like fingerprints. For example, RingID  patterns are concentric rings with bright spots in the centre, DwtDctSvd  patterns resemble vertical lines like barcodes, and RoSteALS  patterns appear as grid-like patches with non-uniform illumination. In contrast, patterns extracted from content-adaptive watermarks are less discernible. Notably, under the greybox setting, the HiDDeN-extracted  pattern converges to zero, indicating completely no discernible pattern. Furthermore, patterns extracted in the greybox setting contain fewer visual artifacts than those in the blackbox setting. As more images are averaged, the extracted watermark pattern becomes clearer and more precise, with fewer residual artefacts from image contents. A more detailed analysis is presented in Appendix A.3.

Visual quality degradationFigures 12 and 13 show the visual impact of removing content-agnostic and content-adaptive watermarks, respectively. For all methods but Gaussian Shading , under the greybox setting, when more than 50 images are averaged, virtually no visual artefacts remain after watermark removal. In the blackbox setting, averaging over 100 images is necessary to eliminate most artifacts. The exception is Gaussian Shading , which consistently produces visible artefacts because the pattern extracted has a large magnitude. Subtracting this pattern significantly distorts the image. Appendix A.4 provides a more detailed analysis.

### Case study: Tree-Ring watermarks

To further reveal how steganalysis can be a threat to content-agnostic watermarking algorithms, we conduct a case study on Tree-Ring watermarks . Tree-Ring is a sophisticated diffusion-based watermarking algorithm that injects a frequency-domain ring pattern into a Gaussian noise signal before using this watermarked noise for diffusion-denoising image generation. During detection, it performs DDIM inversion to recover the injected ring pattern from the initial noise and compares it to a reference pattern. In the following experiments, we demonstrate that with minimal modifications, we can both remove and forge Tree-Ring watermarks under different scenarios.

#### 4.4.1 Low-level content-agnostic pattern in Tree-Ring

This section focuses on revealing the low-level content-agnostic component of Tree-Ring watermarks . First, we curate a specific steganalysis for Tree-Ring's detection algorithm, demonstrating how tailored steganalysis more accurately extracts watermark patterns than generic averaging. We then compare the extracted watermarks with the ground truth to showcase this low-level component.

Our steganalysis incorporates the DDIM inversion steps from Tree-Ring's detection process. By inverting watermarked images to the DDIM-inverted latent space and averaging them, we obtain patterns (Figure 3, second row). As more images are averaged, these patterns closely resemble thoseFigure 2: Performance of watermark detectors under steganalysis-based removal. Performance metrics include AUC (watermark verification AUC), Bit Acc (bit accuracy, percentage of correctly decoded bits), and Det Acc (detection accuracy, accuracy of fully recovered watermark). The plots also illustrate the corresponding PSNR as a measure of image quality degradation. The left/right columns show content-agnostic/content-adaptive methods, respectively. NR denotes the case without removal, reflecting the decoder’s inherent performance.

extracted under greybox or blackbox settings, manifesting as ripples spreading from the corners and forming aliasing patterns in the centre, reminiscent of superpositioned 2D sinc functions.

In the Fourier domain (Figure 3, first row), these patterns display a clear ring structure nearly identical to the ground truth. The high similarity between the ground truth and the patterns extracted from both the image and DDIM-inverted latent domains indicates that **Tree-Ring likely propagates a content-agnostic ripple pattern throughout the image generation process, slightly but directly revealing it in the generated images**. This insight enables us to fool Tree-Ring's watermark detector by simply subtracting this ripple pattern, effectively removing the watermark information.

#### 4.4.2 Comparison with distortion-based removal techniques

To compare perceptual quality degradation between our method and distortion-based ones, in Figure 4, we plot Tree-Ring's AUC versus qualitative metrics varying signal strengths during watermark subtraction. In all four plots, the steganalysis-based watermark removal curves clustered in the bottom-left corner, indicating that effective steganalysis can remove watermarks with significantly less image quality degradation compared to distortion-based methods. Note that although in Section 4.2, the excess performance degradation under small \(n\) is believed to be caused by excess distortions

Figure 4: Tree-Ring detection AUC against quality metrics for steganalysis-based removals (\(n=5000\)) and image distortions. Steganalysis-based removals (blue) cluster bottom-left, indicating effective watermark removal with comparatively low quality degradation.

Figure 3: Visualisation of Tree-Ring-extracted watermark patterns. Top: Pattern extracted from DDIM-inverted latents without subtracting \(x_{}\). The first and second rows are Fourier transform pairs. Bottom: Pattern extracted in image space under greybox and blackbox settings, akin to Figure 9.

introduced due to imperfect pattern extraction, in this section, we demonstrate that distortions generally do not help remove watermarks. Appendix A.2 visualises images under these distortions.

#### 4.4.3 Watermark forgery

We demonstrate the ability to forge Tree-Ring watermarks (\(_{w}=x_{}+_{w}\)) on non-watermarked images, in addition to watermark removal (\(_{}=x_{w}-_{w}\)). Table 1 shows the forged watermarks completely deceive Tree-Ring's detection. Figure 5 shows forged watermarks exhibit slightly larger distances compared to authentic watermarked images. However, when \(n\) is large (500 images), the forged images overlap with true watermarked images in the histogram, precluding threshold-based separation, thereby demonstrating Tree-Ring's vulnerability to steganalysis-based watermark forgery.

#### 4.4.4 Effectiveness of removal under multiple watermarks

We study a heterogeneous scenario where the adversary's image collection contains multiple different watermark patterns. When there are more patterns in the adversary's image collection, the detection AUC rises while the PSNR drops, indicating decreased steganalysis removal efficacy. Mixing three different watermark patterns increases Tree-Ring's detection AUC from below 0.2 to above 0.7 in both greybox and blackbox settings with \(n=5000\), indicating that mixing watermarking keys could

  \# **Imgs Avged** & **NRmv** & **5** & **10** & **20** & **100** & **200** & **500** & **1000** & **2000** & **5000** \\ 
**Removal** & 1.00 & 0.08 & 0.09 & 0.13 & 0.13 & 0.13 & 0.14 & 0.14 & 0.14 \\
**Forgery** & 1.00 & 0.00 & 0.00 & 0.00 & 0.00 & 0.00 & 0.00 & 0.00 & 0.00 \\  

Table 1: Tree-Ring  detection accuracy at 1% FPR for watermark removal and forgery. NRmv represents ”no removal”.

Figure 5: Histograms of distance to reference watermarking pattern for Tree-Ring watermark removal (top) and forgery (bottom). For removal, averaging more images pushes the watermark-removed images (green) away from the true watermarked images (orange). For forgery, oppositely, this increases the similarity of forged images (green) to true watermarked images (orange). Red dashed lines are thresholds \(\) at 1% FPR.

Figure 6: Ablation study on watermark removal performance with Tree-Ring  when the adversary’s image collection contains multiple watermark patterns.

improve security against simple steganalysis-based watermark removals. Nevertheless, the remaining 0.3 gap to perfectness still demonstrates the vulnerability of content-agnostic watermarking. We highlight that assigning multiple watermarks serves as a mitigation and cannot fundamentally address the steganalysis vulnerability. (Appendix A.6 gives more cases).

#### 4.4.5 Summary

In this case study, we rooted Tree-Ring's security vulnerabilities in its use of low-level content-agnostic ripple patterns as watermarks, rather than solely from semantic watermarking. This enables us to successfully fool Tree-Ring watermark detection with minimal impact on perceptual quality. Although it exhibits strong robustness to distortions  and regeneration attacks [18; 17], through steganalysis-based removal, we are the first to effectively remove Tree-Ring watermarks without access to the algorithm.

### Audio watermark steganalysis

The distinction between content-agnostic and content-adaptive watermarks extends beyond images, applying equally to other media like audio. To test the generality of our steganalysis approach, we extend the experiments to two audio watermarking methods: AudioSeal  and WavMark .

Following the methodology outlined in Section 3.3, we extract audio watermark patterns by averaging in the time domain. Figure 7 illustrates the efficacy of this approach on audio watermarks. Similar to content-agnostic image watermarks, our steganalysis-based removal significantly impairs the performance of AudioSeal, reducing its detection accuracy from a perfect 1.0 to around 0.75 in both greybox and blackbox settings. This decline underscores AudioSeals's vulnerability to our simple averaging-based steganalysis.

Interestingly, for WavMark, subtracting the averaged pattern counterintuitively improves its bet accuracy from below 0.8 to a perfect 1.0 when \(n\) is large. While the complexity of WavMark's algorithm precludes definitive conclusions from this experiment, the pattern extracted under large \(n\) showcased the existence of the systematic bias and its correlation with the watermark information. Although our method does not directly "remove" WavMarks' watermark in the traditional sense, the observed behaviour raises questions about its resilience to more sophisticated steganalysis attacks.

In both cases, smaller \(n\) values lead to lower watermark detection rates and lower SI-SNR values, demonstrating coarsely extracted patterns further degrading detection performance with additional audio quality distortions. This mirrors our finding in the image domain, highlighting the importance of sufficient large \(n\) for more accurate watermark pattern extraction across different media types.

## 5 Guidelines towards steganalysis-secure watermarking

Our analysis demonstrates that content-agnostic watermarking methods like Tree-Ring  are vulnerable to steganalysis-based attacks. Although these methods claim robustness by demonstrating strong resistance against distortions (e.g., blurring or noise perturbations), adversaries may still

Figure 7: Impact of steganalysis-based removal on audio watermark detection. The plot shows watermark detection accuracy (Det Acc) for AudioSeal  and bit accuracy (Bit Acc) for WavMark . SI-SNR values indicate audio quality changes post-removal. NR represents the baseline performance without any removal attempts.

remove the watermark through steganalysis, thus compromising their robustness. Our experiments reveal that even complex, highly nonlinear methods based on deep neural networks are susceptible to steganalysis-based watermark removal.

To avoid such threat, future watermarking algorithms shall use content-adaptive watermarking methods. One approach is to incorporate image features while encoding watermark information. For example, HiDDeN  and RivaGAN  introduce image features into the watermark encoder through concatenation and attention, respectively. For existing content-agnostic methods, assigning multiple watermarks per user can _mitigate_ but not _fundamentally_ solve steganalysis threat.

While we performed simple averaging steganalysis on RGB images and 16 kHz monophonic audios, watermarking methods should resist more complex techniques, such as steganalysis in various colour spaces or different transform domains. Evaluating security against diverse steganalysis models, analogous to robustness tests against distortions, is crucial for developing secure watermarking algorithms. These two aspects form our security guidelines:

1. Ensure watermarks are content-adaptive to resist steganalysis attacks.
2. Evaluate watermark against steganalysis to ensure robustness.

## 6 Conclusions

This work has revealed the vulnerability of content-agnostic watermarking algorithms to steganalysis attacks. We have demonstrated effective watermark removal and forgery techniques under both greybox and blackbox settings across twelve watermarking methods, including recent deep-learning approaches. Our findings extend to audio watermarking methods as well. To address these threats, we propose security guidelines that encourage exploring content-adaptive watermarking methods and evaluating them against steganalysis attacks. We have also proposed temporary mitigations for existing content-agnostic methods. Only by addressing the vulnerability to steganalysis can we develop secure and robust digital watermarking systems capable of safeguarding the integrity of digital content in the era of generative AI.

Limitations and ethical considerationsSteganalysis-based watermark removal/forgery is only effective against content-agnostic watermarking, not content-adaptive techniques. Responsible development and deployment of steganalysis technologies are crucial, adhering to fairness, accountability, and transparency principles to prevent misuse for unwarranted surveillance or privacy violations.

Broader impactsThe proposed steganalysis attack and security guidelines extend beyond image watermarking. They apply to watermarking other media like video , audio , 3D models , and to other domains. Our proposed guidelines and mitigation strategies strengthen watermarking security, contributing to a safer digital environment.

## 7 Acknowledgements

This research is supported by the Ministry of Education, Singapore, under the Academic Research Fund Tier 1 (FY2022) Award 22-5406-A0001.