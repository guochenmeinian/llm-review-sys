# Continuous Heatmap Regression for Pose Estimation

via Implicit Neural Representation

 Shengxiang Hu\({}^{1}\), Huaijiang Sun\({}^{1}\), Dong Wei\({}^{1}\), Xiaoning Sun\({}^{1}\), Jin Wang\({}^{2}\)

\({}^{1}\)Nanjing University of Science and Technology, Nanjing, China

\({}^{2}\)Nantong University, Nantong, China

{hushengxiang,sunhuaijiang}@njust.edu.cn

Corresponding author.

###### Abstract

Heatmap regression has dominated human pose estimation due to its superior performance and strong generalization. To meet the requirements of traditional explicit neural networks for output form, existing heatmap-based methods discretize the originally continuous heatmap representation into 2D pixel arrays, which leads to performance degradation due to the introduction of quantization errors. This problem is significantly exacerbated as the size of the input image decreases, which makes heatmap-based methods not much better than coordinate regression on low-resolution images. In this paper, we propose a novel neural representation for human pose estimation called NerPE to achieve continuous heatmap regression. Given any position within the image range, NerPE regresses the corresponding confidence scores for body joints according to the surrounding image features, which guarantees continuity in space and confidence during training. Thanks to the decoupling from spatial resolution, NerPE can output the predicted heatmaps at arbitrary resolution during inference without retraining, which easily achieves sub-pixel localization precision. To reduce the computational cost, we design progressive coordinate decoding to cooperate with continuous heatmap regression, in which localization no longer requires the complete generation of high-resolution heatmaps. The code is available at [https://github.com/hushengxiang/NerPE](https://github.com/hushengxiang/NerPE).

## 1 Introduction

Human pose estimation (HPE) is a fundamental task in the field of computer vision, which is widely used in various human-centered applications . In multi-person pose estimation, the top-down framework is a mainstream two-stage pipeline, in which the person areas are firstly cropped out and then the body joints within them are located. According to the way to describe the positions of body joints, pose estimation methods can be further divided into coordinate regression  and heatmap regression . Due to better performance brought by spatial encoding of heatmap representation, heatmap regression has received more attention than coordinate regression. Recently, most heatmap-based methods  focus on the design of network structure but ignore the importance of heatmap generation. Only a few works  have noticed the irrationality in the standard heatmap representation widely used in existing methods.

In the top-down framework, the ground-truth coordinates of body joints in the original image are mapped to the input plane of a keypoint detector, through the same affine transformation applied to the cropped image patch. To supervise the output of traditional explicit neural networks, the current heatmap generation strategy yields 2D pixel arrays to reflect the spatial distribution of body joints, which means that the originally continuous heatmap representation needs to be discretized as shownin Fig. 1. Specifically, the center of the Gaussian kernel is placed at body joints to calculate the confidence scores on the grid points as the ground-truth heatmaps. Although this discrete heatmap representation has achieved great success, it introduces quantization errors since body joints after affine transformation may fall anywhere within the image range rather than just at these fixed grid points. For the output of explicit neural networks, the information loss caused by spatial sampling is difficult to compensate through post-processing operations . With the reduction of the input resolution, this problem will be further exacerbated, which makes the performance of heatmap-based methods degraded even worse than some methods based on coordinate regression. Considering that the Gaussian function used for heatmap generation is inherently continuous, it is a natural idea to learn a continuous heatmap representation to replace fixed spatial sampling for HPE.

Implicit neural representations (INRs) are proposed to parameterize a variety of continuous signals  in computer vision. Unlike explicit neural networks that output specific structures (_e.g._, mesh, sequence), INRs map an index to its corresponding value, enabling not only continuous representations but also greater flexibility in use. Obviously, by combining INR and heatmap regression, the pose estimation model is able to learn continuous confidence scores for all body joints at any position. Compared to the discrete heatmap representation with a fixed resolution, the introduction of INR avoids the invariant spatial sampling caused by discretization during training and can yield the predicted heatmaps at arbitrary resolution during testing.

In this paper, to improve the performance of heatmap-based HPE, we abandon the main culprit of quantization errors, namely discrete heatmap representation. Instead, we propose NerPE to achieve continuous heatmap regression through a novel neural representation. Specifically, we generalize the upsampling factor in discrete sub-pixel convolution  to infinity to obtain a continuous upsampling function with respect to 2D coordinate. NerPE learns its continuous heatmap representation at a series of queried positions that are randomly sampled within the image range. For any position, the target likelihood at it is calculated from the target 2D pose and its absolute coordinate, and the estimated likelihood at it is inferred from the local feature vector and its relative coordinate. Since confidence scores are learned at all positions within the image range during training, our method achieves better performance than discrete heatmap-based methods that focus only on fixed grid points. As the resolution of the input image decreases, the superiority of continuous heatmap representation over existing methods becomes more prominent.

Limited by the explicit neural representation of existing methods, the heatmap resolution for a given image cannot be changed once the network structure is determined. In contrast, another benefit that INR brings to heatmap regression is that the heatmap resolution is no longer correlated with the image resolution. This means that our method can flexibly generate the predicted heatmaps with different resolutions based on accuracy requirements without retraining. To speed up the inference when high-resolution heatmaps are required, we design a progressive coordinate decoding method. Thanks to the decoupling of INR and spatial resolution, NerPE enables high-precision localization without the need to calculate the complete heatmaps. Specifically, low-resolution heatmaps are first output to determine the approximate locations of body joints. Subsequently, the area near the maximal activation is further retrieved in an iterative manner. Notably, our method can be easily integrated into most heatmap-based methods. The contributions are summarized as follows:

Figure 1: **Comparison of discrete and continuous heatmap representations. In heatmap-based methods, the Gaussian function is discretized to satisfy the form of 2D pixel arrays. As the resolution decreases, the impact of quantization errors on positioning accuracy increases significantly. In contrast, NerPE can regress confidence scores at any position via implicit neural representation.**

* We propose NerPE to avoid the introduction of quantization errors during training and to output the predicted heatmaps at arbitrary resolution during inference. To our knowledge, we are the first to apply implicit neural representations to human pose estimation.
* We design a progressive coordinate decoding method to derive the coordinates of body joints from continuous heatmap representation, in which our method achieves high-precision localization with low computational cost through coarse-to-fine retrieval.
* We conduct extensive experiments on three pose estimation benchmarks: COCO , MPII , and CrowdPose . The results show that NerPE significantly enhances existing heatmap-based methods and obtains superior performance on low-resolution input images.

## 2 Related Work

### Human Pose Estimation

2D human pose estimation (HPE) aims to locate a series of anatomical keypoints to represent the human pose in the input image. Currently, coordinate regression [3; 22; 28] and heatmap regression [17; 45; 12] are the two main pose estimation paradigms, both of which have received widespread attention. Coordinate regression, also known as direct regression, relies on deep neural networks to explore the mapping between the input image and the coordinates of body joints. The high degree of nonlinearity is difficult for optimization, which makes coordinate regression not perform well enough. As for heatmap regression, HPE is converted into a combination of multi-label keypoint classification and coordinate decoding post-processing. Benefiting from dense prediction, heatmap-based methods not only easily exploit visual cues around the target position, but also take the ambiguity of keypoint localization into account. This is why heatmap-based methods are generally superior to those based on coordinate regression. Although heatmap-based methods have made steady progress, quantization errors are still a troubling problem, which is what our work is dedicated to solving.

### Discrete Heatmap Regression

To be clear at first, the cause of quantization errors is discretization, not the introduction of heatmap representations this behavior itself. As far as we know, existing heatmap-based methods [48; 42; 24; 52] all belong to discrete heatmap regression, using 2D pixel arrays to describe the spatial distribution of body joints. There are a few works that attempt to compensate for the damage to performance caused by quantization errors. In , the coordinates of body joints are empirically determined as the position of moving a 0.25 pixel from the maximal to second maximal activation. DARK  implements Taylor series approximation for heatmap activation to locate body joints based on distribution information. Although these post-processing operations achieve sub-pixel localization precision, subjective assumptions make the inference not so reliable, especially in low-resolution cases. Instead of remedying the shortcomings of discrete heatmap representation, we propose continuous heatmap regression to preserve the continuity of ground-truth heatmaps.

### Implicit Neural Representation

In response to the need to model continuous signals, implicit neural representations (INRs) aim to learn a neural function that predicts the corresponding value according to a given index. Encouraged by the success in 3D reconstruction [14; 32; 4] and generation [6; 33; 49], INR has been extended to some other tasks, including super-resolution [8; 10; 13], image generation [40; 5; 2], and video compression [7; 15; 27]. In the paper, to avoid the damage of discretization to heatmap regression, we approximate the continuous Gaussian function by multi-layer perceptrons (MLPs). Given a coordinate within the image range, NerPE is designed to regress the confidence scores of all body joints at that position, in which the heatmap representation is free from the constraints of 2D pixel arrays [11; 51; 50]. As a result, NerPE has the ability to output the predicted heatmaps at arbitrary resolution during inference. In terms of eliminating quantization errors, offset prediction [34; 19] has the same goal as our work, and it aims to perform unbiased estimation for the coordinates of body joints. However, the performance of offset prediction is still affected by the resolution of the distance field. There is complementarity between the two techniques in HPE: offset prediction helps achieve more advanced decoding, and INR makes the distance field continuous. In order to highlight the superiority of INR, we only regress confidence scores in this paper.

Proposed Method

In this section, we first discuss the hazards of discrete heatmap representation and the limitations of existing post-processing operations. Then, we introduce a novel **Ne**ural representation for human **P**ose **E**stimation (NerPE) and illustrate the superiority of continuous heatmap regression.

### Preliminary of Heatmap Representation

Given an input image \(I^{3 H_{I} W_{I}}\), heatmap-based models output 2D pixel arrays \(H\) of size \(K}{4}}{4}\) to reflect the spatial distribution of \(K\) body joints. To conform the output form of explicit neural networks, the continuous Gaussian function is discretized in the heatmap generation process, which leads to the introduction of quantization errors and the reduction of positioning accuracy. Currently, there are two post-processing operations [31; 54] that are widely used to mitigate the negative effects of discretization.

The standard coordinate decoding method  is designed entirely according to experience. Based on the analysis of the model's performance, the position \(p\) at which the maximal activation \(H(c_{m})\) moves a 0.25 pixel towards the second maximum \(H(c_{s})\) is taken as the final coordinate:

\[p=c_{m}+0.25-c_{m}}{\|c_{s}-c_{m}\|_{2}}. \]

The distribution-aware decoding method  assumes that the predicted heatmaps still conform to the Gaussian distribution. The Taylor series expansion to the quadratic term is implemented at the position \(c_{m}\) of the maximal activation as:

\[H()=H(c_{m})+H^{}(c_{m})(-c_{m})+(-c_{m})^{T}H^{ }(c_{m})(-c_{m}), \]

where \(H^{}()\) and \(H^{}()\) respectively denote the first and second order derivatives of the Gaussian distribution close to the predicted heatmaps. The position \(p\) of each body joint is determined by the Gaussian mean \(=c_{m}-(H^{}(c_{m}))^{-1}H^{}(c_{m})\).

To achieve sub-pixel localization precision against quantization errors, the above post-processing operations impose subjective assumptions in coordinate decoding. Compared with the limited improvements brought by the above passive compensations, the most direct way to solve quantization errors is to abandon the explicit neural network and learn a continuous heatmap representation.

### Reformulation in a Continuous Form

From a structural and functional perspective, general pose estimation models consist of an encoder and a decoder (also called "head" in some works). To reduce the computational cost and increase the receptive field, the image features are downsampled in the encoder. Correspondingly, the decoder increases the output resolution by including upsampling layers such as interpolation, deconvolution or sub-pixel convolution . However, once the network structure is determined, the decoder in existing methods makes the model only output the predicted heatmaps with a fixed resolution. Starting from sub-pixel convolution, we derive its continuous version via implicit neural representation (INR), known as a continuous upsampling function.

Using sub-pixel convolution as the final layer, the image features \(Z\) of size \(C H_{Z} W_{Z}\) are mapped into higher resolution heatmaps \(H\) of size \(K rH_{Z} rW_{Z}\) with an upscaling factor \(r\):

\[H=(W*Z+b), \]

where \(\) denotes a PixelShuffle operation used to reshape each element along the feature dimension into small 2D pixel arrays (called a cell) corresponding to body joints. According to the spatial prior, the weight \(W\) and bias \(b\) in Eq. (3) are further expressed as:

\[W=Concat(W_{1,1}&&W_{1,r}\\ &&\\ W_{r,1}&&W_{r,r}), b=Concat(b_{1,1}& &b_{1,r}\\ &&\\ b_{r,1}&&b_{r,r}), \]

where the order of concatenation corresponds to the order of expansion in the PixelShuffle operation. These sub-weights \(W_{i,j}\) and sub-biases \(b_{i,j}\) can be viewed as the outputs of functions \(f_{W}(i,j)\) and \(f_{b}(i,j)\) with a 2D index as argument. We use \(z^{*}\) to refer to each element in the image features \(Z\), called a local feature vector. The confidence scores at \((i,j)\) relative to \(z^{*}\) is given by:

\[H_{z^{*}}(i,j)=f_{W}(i,j)*z^{*}+f_{b}(i,j)=f_{}(z^{*},(i,j)). \]

In order to ensure the consistency in description of sub-pixel convolution with different upscaling factors, we normalize the 2D index array composed of integers in \(\{1,2,,r\}\) into \([-1,1]\):

\[i^{}\\ j^{}\\ 1=&0&0\\ 0&&0\\ 0&0&11&0&-\\ 0&1&-\\ 0&0&1i\\ j\\ 1. \]

As \(r\) increases, the spatial sampling of \([-1,1][-1,1]\) becomes denser. When \(r\) approaches \(\), the discrete grid points become a continuous region covering all resolutions. Therefore, we obtain the expression for the continuous version of sub-pixel convolution \(H_{z^{*}}(c_{rel})=f_{}(z^{*},c_{rel})\), and further replace the relative coordinate \(c_{rel}\) with the absolute coordinate \(c_{abs}\) to get:

\[H(c_{abs})=f_{}(z^{*},-c_{z^{*}}}{s_{cell}/2}), \]

where \(c_{z^{*}}\) is the center coordinate of cell \(H_{z^{*}}\), and \(s_{cell}\) is the window size of cell \(H_{z^{*}}\). Starting from sub-pixel convolution, the conclusion drawn is similar to the local implicit image function in  except for the additional normalization step. In terms of network architecture, we only replace the last few layers in existing heatmap-based models with our continuous upsampling function, which fundamentally solves the problem of discretization in training.

### Learning Continuous Heatmap Regression

Obviously, the discrete heatmap representation is a subcase of the proposed NerPE, where only several fixed positions (_i.e._, grid points) within the image range are trained and predicted. Thanks to the decoupling of heatmap representation and spatial resolution, NerPE can comprehensively fit Gaussian or Laplace functions. The design of our method involves three aspects: continuous heatmap generation, uniform position sampling, and progressive coordinate decoding.

**Continuous heatmap generation.** Since the output of the network is no longer 2D pixel arrays like existing methods, we need to calculate the ground-truth confidence scores for those positions being queried. In our method, the continuous heatmap representations based on Gaussian and Laplace distributions respectively are expressed relative to \(c_{abs}\) as:

\[H_{gau}^{gt}(c_{abs})=e^{--c_{gt})^{2}}{2^{2}}} {and} H_{lap}^{gt}(c_{abs})=e^{--c_{gt}|}{b}}, \]

where \(c_{gt}\) is the ground-truth coordinates of body joints. Since the queried position can be anywhere in the image range, the ground-truth heatmaps are continuous in space and confidence. The loss function of continuous heatmap regression is:

\[= H(c_{abs})-H^{gt}(c_{abs})_{2}^{2}. \]

Figure 2: **Overview of NerPE. The network structure consists of a general image encoder and an MLP-based decoder. During training, we use random or uniform sampling to pick queried positions, and calculate their confidence scores via continuous heatmap generation. During testing, we can obtain the predicted heatmaps at arbitrary resolution by standard and progressive coordinate decoding.**

**Uniform position sampling.** For heatmap learning based on INR, the selection of queried positions for training is critical to the model performance. On the one hand, in order to fully take care of the entire heatmap plane, the sampling of queried positions during training should be evenly distributed over the image range. Thus, we divide each cell uniformly into \(}}\) regions and perform random sampling within them, as shown in Fig. 2(b). In each training sample, \(N_{Z} H_{Z} W_{Z}\) positions are picked out and their ground-truth confidence scores are calculated for supervision.

On the other hand, INR acts as a parameterized continuous function, which expects that spatially close positions should have similar confidence scores. Inside each cell, this is easy to implement for deep neural networks. However, at the junctions between cells, the difference of local feature vectors \(z^{*}\) and the mutation of relative coordinates \(c_{rel}\) make the network tend to produce discontinuous predictions. To solve this problem, we adopt the local ensemble in  to perform bilinear interpolation, where the sampling range is expanded to achieve overlapping.

**Progressive coordinate decoding.** The design of heatmap representation has been well discussed above, and more importantly, it ultimately serves keypoint localization. In order to decode the coordinates of body joints through _argmax_, a straightforward way is to arrange the candidate points within the cells at a specific density, so that NerPE can output the predicted heatmaps with the corresponding upsampling factor \(r 1\):

\[H^{(n)}_{cell}=f_{}(z^{(n)},C_{r r}), \]

where \(H^{(n)}_{cell}\) is the distribution of body joints in the \(n\)-th cell of the input image, and \(C_{r r}\) is a relative coordinate matrix to indicate the candidate points. When the heatmap resolution is high enough, _argmax_ is sufficient to deal with quantization errors without extra post-processing operations.

In existing methods, the likelihood of body joints at each position is derived simultaneously by an explicit neural network, which means there is no choice but to output the entire predicted heatmaps. In contrast, NerPE can estimate confidence scores based on 2D coordinates in a serial manner thanks to the decoupling of INR from spatial resolution. We propose progressive coordinate decoding to reduce the computational cost by evading the complete generation of predicted heatmaps when the heatmap resolution is high, as shown in Fig. 2(d). Specifically, we first generate the low-resolution heatmaps to estimate the approximate locations of body joints. Then, the area near the maximal activation is iteratively sub-divided for coarse-to-fine retrieval. This decoding method only needs to calculate additional \(t K(r+p_{o})(r+p_{o})\) positions to achieve an equivalent resolution of \(r^{t}H_{Z} r^{t}W_{Z}\), where \(t\) is the number of iterations and \(p_{o}\) is the number of pixels overlapped.

## 4 Experiments

In this section, we compare the performance of NerPE and discrete heatmap-based methods on input images of different resolutions. The experimental results show the superiority of continuous heatmap regression and the hazards of discrete heatmap representation, especially in the case of low resolution.

### Implementation Details

**Network architecture.** We adopt ResNet , HRNet  or TokenPose  as the backbone network, and resize the extracted image features to 8 x 8. The focus of this work is to provide a new perspective on heatmap regression through implicit neural representation (INR) rather than pursuing extreme performance. For clarity, we use a pure MLP structure as a decoder to implement continuous heatmap regression. Queried position embeddings, derived from 2D coordinates and their sinusoidal encodings, are concatenated with local feature vectors and then fed into the decoder. In each cell corresponding to a local feature vector, we collect \(N_{Z}=64\) queried positions as training subjects. For continuous heatmap generation, \(\) in the Gaussian function is set to 0.06, which is close in proportion to the discrete heatmap representation. When not explicitly stated, the size of the predicted heatmaps is 256 x 256 by default. NerPE no longer needs those empirical operations to align flipped heatmaps  and shift decoded coordinates .

**Optimization.** In the main experimental results, the training settings of NerPE is consistent with the comparison methods [48; 42; 24] based on discrete heatmap regression. We use the Adam optimizer  for training, in which the learning rate is initialized to \(1e-3\) and decreased to \(1e-4\) and \(1e-5\). The data augmentation used includes random rotation, random scale, image flipping, and half body cropping. All our experiments are conducted on an open-source machine learning, PyTorch .

### Main Experimental results

**Evaluation on COCO.** To evaluate the value of continuous heatmap representation for human pose estimation (HPE), we perform NerPE with three backbones [16; 42; 24] at three input resolutions on the COCO validation set, as shown in Table 1. The experimental results show that our method achieves better performance, and the superiority over discrete heatmap-based methods increases as the input resolution decreases. Thanks to INR's modeling of continuous signals, NerPE can still output fine and smooth heatmaps of body joints even with a low-resolution image as input. In contrast, the discrete heatmap representation resorts to manually designed decoding methods [31; 54] to achieve sub-pixel accuracy, which suffers from significant performance degradation when quantization errors are too large. The comparison results on the COCO test-dev set are given in Table 2. These suggest that the accuracy and flexibility of the model are greatly improved by only replacing the last few layers in the existing heatmap-based methods with the INR-based MLP.

    & Input size & Method & OR/IR & Params & AP & AR \\    } & SimBa  & I/4 & 34.0M & 34.4 & 43.7 \\  & 64 × 64 & SimCC  & 3/1 & 24.7M & 39.3 & 48.4 \\  & & Ours & 4/1 & 29.6M & **40.8** (\(\)1.5) & **49.5** (\(\)1.1) \\   &  & SimBa  & I/4 & 34.0M & 60.3 & 67.6 \\  & & SimCC  & 3/1 & 25.0M & 62.6 & 69.5 \\  & & Ours & 2/1 & 29.0M & **63.3** (\(\)0.7) & **70.1** (\(\)0.6) \\   &  & SimBa  & I/4 & 34.0M & 70.4 & 76.3 \\  & & SimCC  & 2/1 & 25.7M & 70.8 & 76.8 \\  & & Ours & 1/1 & 28.4M & **71.0** (\(\)0.2) & **77.0** (\(\)0.2) \\    } & HRNet  & I/4 & 63.6M & 48.5 & 57.8 \\  & & SimCC  & 3/1 & 63.7M & 59.7 & 67.5 \\  & & Ours & 4/1 & 63.9M & **62.5** (\(\)2.8) & **70.0** (\(\)2.5) \\   &  & HRNet  & I/4 & 63.6M & 68.9 & 75.3 \\  & & SimCC  & 2/1 & 64.1M & 72.0 & 77.9 \\  & & Ours & 2/1 & 64.4M & **73.1** (\(\)1.1) & **78.8** (\(\)0.9) \\   &  & HRNet  & I/4 & 63.6M & 75.1 & 80.4 \\  & & SimCC  & 2/1 & 66.3M & 75.9 & 81.2 \\  & & Ours & 1/1 & 65.0M & **76.1** (\(\)0.2) & **81.3** (\(\)0.1) \\    } & DARK  & I/4 & 4.9M & 57.1 & 64.8 \\  & & SimCC  & \(-\) & 4.9M & 62.8 & 70.1 \\  & & Ours & 4/1 & 5.4M & **64.4** (\(\)1.6) & **71.6** (\(\)1.5) \\   &  & DARK  & I/4 & 5.2M & 65.4 & 71.6 \\  & & SimCC  & \(-\) & 5.1M & 70.4 & 76.4 \\  & & Ours & 2/1 & 5.5M & **71.8** (\(\)1.4) & **77.7** (\(\)1.3) \\   &  & DARK  & I/4 & 6.6M & 72.5 & 78.0 \\  & & SimCC  & \(-\) & 5.5M & 73.6 & 78.9 \\  & & Ours & 1/1 & 6.5M & **73.9** (\(\)0.3) & **79.1** (\(\)0.2) \\   

Table 1: **Comparisons on the COCO validation set.** We report the performance of existing discrete methods and continuous NerPE at different input resolutions. OR/IR: the ratio of output resolution to input resolution. SimBa: SimpleBaseline. The best results are marked in **bold**.

   Method & Backbone & Input size & Params & AP & AP\({}_{50}\) & AP\({}_{75}\) & AP\({}_{M}\) & AP\({}_{L}\) & AR \\  SimBa  & ResNet-152 & \(384 288\) & 68.6M & 73.7 & 91.9 & 81.1 & 70.3 & 80.0 & 79.0 \\ HRNet  & HRNet-W48 & \(384 288\) & 63.6M & 75.5 & 92.5 & 83.3 & 71.9 & 81.5 & 80.5 \\ TokenPose  & HRNet-W48 & \(256 192\) & 27.5M & 75.1 & 92.1 & 82.5 & 71.7 & 81.1 & 80.2 \\ SimCC  & HRNet-W48 & \(384 288\) & \(-\) & 76.0 & 92.4 & 83.5 & 72.5 & 81.9 & 81.1 \\  Ours\({}^{}\) & HRNet-W48 & \(256 192\) & 65.0M & 75.6 & 92.5 & 83.4 & 72.0 & 81.6 & 80.6 \\ Ours & HRNet-W48 & \(384 288\) & 65.0M & **76.2** & **92.6** & **83.6** & **72.8** & **82.0** & **81.2** \\   

Table 2: **Comparisons on the COCO test-dev set.**\(\) indicates the ground-truth confidence scores of body joints calculated by the Laplace function in continuous heatmap generation.

**Evaluation on MPII.** We compare our NerPE with representative discrete heatmap-based methods  on the MPII dataset, as shown in Table 3. At the input size of 128 x 128, our method achieves better performance based on the same backbone HRNet-W32. The higher scores obtained on PCKh@0.1 indicate that NerPE's positioning of body joints is closer to the ground truth.

**Evaluation on CrowdPose.** To evaluate the performance in crowded scenes, we test NerPE on the CrowdPose dataset (see Table 4), in which YoloV3  is adopted as the human detector. At the input size of 256 x 192, our method achieves superior performance with 66.9 AP. Thanks to the learned continuous heatmap representation, NerPE delivers performance gains on AP\({}_{75}\), a more stringent metric. For the low-resolution case, the experimental results show that NerPE brings an improvement of 6.1 AP to HRNet and further expands its lead over discrete heatmap-based methods.

**Progressive coordinate decoding.** In the proposed NerPE, the heatmap resolution is not dependent on the input resolution with the help of INR. Therefore, our method can flexibly increase the heatmap resolution to reduce quantization errors during inference. The standard NerPE directly outputs the complete predicted heatmaps for keypoint localization, which will bring a large amount of calculation when the heatmap resolution is high. To solve this problem, we propose the progressive coordinate decoding method and denote the corresponding version as NerPE-p. Specifically, NerPE-p first yields coarse heatmaps of size 32 x 32. Then, we iteratively divide the area near the maximal activation into 4 x 4 and set \(p_{o}\) to 2. Given inputs of size 128 x 128 from MPII, the comparison results of NerPE and NerPE-p are given in Fig. 3. As the heatmap resolution increases, the positioning accuracy is indeed improved but has a diminishing marginal effect. Compared with the standard NerPE, the use of our progressive coordinate decoding trades negligible performance degradation for a large reduction in computational cost.

### Ablation Study

**Sample selection of INR.** In NerPE, we let the INR-related network learn the continuous heatmap representation covering the entire image through uniform position sampling. We perform ablations on the sampling modes (w/ and w/o uniform) and evaluate the impact of two hyper-parameters: the division of cells \(H_{Z} W_{Z}\) (see Table 5) and the number of samples per cell \(N_{Z}\) (see Table 6). The experimental results based on ResNet-50 at the input size of 128 x 128 show that the model

   Input size & Method & Continuity & AP & AP\({}_{50}\) & AP\({}_{75}\) & AP\({}_{E}\) & AP\({}_{M}\) & AP\({}_{H}\) \\   & HRNet  & \(\) & 42.4 & 69.6 & 45.5 & 51.2 & 43.1 & 31.8 \\  & SimCC  & \(\) & 46.5 & 70.9 & 50.0 & 56.0 & 47.5 & 34.7 \\  & Ours & ✓ & **47.4** & **71.3** & **51.6** & **56.6** & **48.3** & **35.5** \\   & HRNet  & \(\) & 66.4 & 81.1 & 71.5 & 74.0 & 67.4 & 55.6 \\  & SimCC  & \(\) & 66.7 & **82.1** & 72.0 & 74.1 & 67.8 & 56.2 \\   & Ours & ✓ & **66.9** & **82.1** & **72.6** & **74.2** & **68.0** & **56.4** \\   

Table 4: **Comparisons on the CrowdPose dataset.** For the same backbone HRNet-W32, the impact of heatmap representation is given in the standard (256 × 192) and low-resolution (64 × 64) cases.

Figure 3: Comparison of computational cost (left) and accuracy (right) at different heatmap resolutions.

   Method & Hea & Sho & Elb & Wri & Hip & Kne & Ank & PCKh@0.5 & PCKh@0.1 \\  HRNet  & 96.6 & 94.7 & 87.3 & 81.7 & 86.4 & 82.3 & 78.0 & 87.3 & 26.5 \\ DARK  & 96.6 & 94.5 & **87.7** & **82.2** & 87.2 & **82.8** & 78.4 & 87.6 & 29.6 \\ SimCC  & 96.6 & 94.6 & 87.5 & 81.3 & 86.8 & 82.5 & 78.2 & 87.4 & 32.6 \\  Ours\({}^{}\) & 96.6 & 94.7 & 87.6 & 81.7 & 87.5 & 82.7 & 78.4 & 87.6 & 33.9 \\ Ours & **96.7** & **94.8** & **87.7** & 81.7 & **87.6** & **82.8** & **78.5** & **87.7** & **34.6** \\   

Table 3: **Comparisons on the MPII dataset.** The input resolution is \(128 128\) and the backbone is HRNet-W32. As a more stringent metric, PCKh@0.1 has higher requirements for localization.

performance decreases when uniform position sampling is not used. For the division of cells, if it is too sparse (_e.g._, 2 x 2), each local feature vector needs to be responsible for the prediction of a larger area, which is challenging for the network to fit the continuous heatmap representation. Considering both performance and computational cost, \(8 8\) is a better setting for NerPE. Furthermore, as the number of samples per cell increases, our method achieves better performance. The reason is that, on the one hand, querying more positions makes each gradient descent more robust, On the other hand, cells are decomposed into smaller regions to make the sampling more uniform.

**Study of heatmap generation.** In the Gaussian function, \(\) is used as a hyper-parameter to control the scale of activation peaks. The difference between continuous and discrete heatmap representations has been discussed, as shown in Fig. 1. Due to the existence of discretization in existing methods, \(\) is commonly set to an integer to facilitate the generation of the pixel-based Gaussian kernel (formally named standard biased encoding in ). In contrast, NerPE uses continuous coordinates rather than discrete indices to describe the heatmap plane, and the setting of \(\) is more flexible under our continuous heatmap representation. The same conclusion goes for \(b\) in the Laplacian function. We explore the influence of scale parameters \(\) and \(b\) on keypoint localization, as shown in Table 7. The proposed NerPE achieves better performance when \(=0.06\) and \(b=0.09\) respectively.

### Visualization

In order to more intuitively show the superiority of continuous heatmap representation, we visualize the output of NerPE at different heatmap resolutions, as shown in Fig. 4. Thanks to the decoupling of INR from spatial resolution, NerPE can output the predicted heatmaps at arbitrary resolution without changing the structure and retraining the network. In addition, we visualize the results of using Gaussian and Laplace functions for supervision in continuous heatmap generation in Fig. 5.

    & \)} \\   & 2 × 2 & 4 × 4 & 8 × 8 \\  w/o uniform & 75.28 & 80.83 & 82.54 \\ w/ uniform & 76.03 & 81.42 & 82.65 \\   

Table 6: **Ablation study on different number of samples per cell**. The division of cells is set to 8 × 8 on MPII (PCKh@0.5), using ResNet-50.

   Scale parameter & AP & AP\({}_{50}\) & AP\({}_{75}\) & AP\({}_{E}\) & AP\({}_{M}\) & AP\({}_{H}\) \\   & 0.08 & 59.1 & 78.1 & 64.5 & 68.9 & 60.4 & 46.5 \\  & 0.06 & 60.1 & 79.1 & 65.4 & 70.0 & 61.3 & 47.6 \\  & 0.04 & 59.5 & 79.1 & 64.6 & 69.1 & 60.6 & 47.2 \\   & 0.12 & 57.7 & 77.6 & 63.7 & 67.6 & 58.9 & 45.2 \\  & 0.09 & 58.8 & 78.5 & 64.6 & 68.4 & 60.1 & 46.5 \\  & 0.06 & 58.4 & 78.5 & 64.1 & 67.8 & 59.7 & 46.4 \\   

Table 7: **Ablation study on scale parameters for continuous heatmap generation.** Experiments are performed on CrowdPose with input resolutions of 128 × 128. The backbone is HRNet-W32.

Figure 4: The predicted heatmap of knee(r) output by NerPE at different heatmap resolutions.

Figure 5: The output of NerPE supervised by different heatmap generation functions.

Conclusion

In this paper, to solve the quantization error issue plaguing heatmap regression, we propose an implicit neural representation method NerPE for 2D human pose estimation. According to the extracted image features, NerPE trains a simple MLP-based decoder to fit the Gaussian or Laplace functions at a series of queried positions, which makes the learned heatmap representation continuous in space and confidence. During inference, the decoupling from spatial resolution enables NerPE to output the predicted heatmaps at arbitrary resolution. As a result, our continuous heatmap regression achieves better performance than existing methods using discrete heatmap representation, especially in the case of low resolution. Last but not least, inspired by the flexibility of implicit neural representation, we design a progressive coordinate decoding method to speed up inference by avoiding the complete generation of predicted heatmaps when the desired heatmap resolution is quite high.

**Limitations and future work.** The goal of this work is to explore the feasibility of using implicit neural representations (INRs) to achieve continuous heatmap regression for 2D human pose estimation. To highlight the superiority of NerPE over discrete heatmap representation, our INR-based decoder is designed to be as simple as possible. In future work, we will conduct in-depth research on the network structure to better utilize the characteristics of INRs.