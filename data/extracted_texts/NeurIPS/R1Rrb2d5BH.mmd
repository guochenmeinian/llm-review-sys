# EZ-HOI: VLM Adaptation via Guided Prompt Learning for Zero-Shot HOI Detection

Qinqian Lei\({}^{1}\) Bo Wang\({}^{2}\) Robby T. Tan\({}^{1,3}\)

\({}^{1}\)National University of Singapore

\({}^{2}\)University of Mississippi

\({}^{3}\)ASUS Intelligent Cloud Services (AICS)

qinqian.lei@u.nus.edu, hawk.rsrch@gmail.com, robby_tan@asus.com

###### Abstract

Detecting Human-Object Interactions (HOI) in zero-shot settings, where models must handle unseen classes, poses significant challenges. Existing methods that rely on aligning visual encoders with large Vision-Language Models (VLMs) to tap into the extensive knowledge of VLMs, require large, computationally expensive models and encounter training difficulties. Adapting VLMs with prompt learning offers an alternative to direct alignment. However, fine-tuning on task-specific datasets often leads to overfitting to seen classes and suboptimal performance on unseen classes, due to the absence of unseen class labels. To address these challenges, we introduce a novel prompt learning-based framework for Efficient Zero-Shot HOI detection (EZ-HOI). First, we introduce Large Language Model (LLM) and VLM guidance for learnable prompts, integrating detailed HOI descriptions and visual semantics to adapt VLMs to HOI tasks. However, because training datasets contain seen-class labels alone, fine-tuning VLMs on such datasets tends to optimize learnable prompts for seen classes instead of unseen ones. Therefore, we design prompt learning for unseen classes using information from related seen classes, with LLMs utilized to highlight the differences between unseen and related seen classes. Quantitative evaluations on benchmark datasets demonstrate that our EZ-HOI achieves state-of-the-art performance across various zero-shot settings with only 10.35% to 33.95% of the trainable parameters compared to existing methods. Code is available at https://github.com/ChelsieLei/EZ-HOI.

## 1 Introduction

Human-Object Interaction (HOI) detection localizes human-object pairs and identifies the interactions. HOI has various practical applications, including robot manipulations, human-computer interaction, and human activity understanding . Additionally, it is a building block for related tasks such as action recognition, visual question answering, and image generation . However, the limited generalization ability of many existing HOI detectors makes zero-shot HOI detection particularly challenging, as it requires models to identify unseen HOI classes.

Vision-Language Models (VLMs)  have gained popularity due to their extensive knowledge bases and effective ability to process and correlate complex patterns across visual and text data. Consequently, a group of methods has been developed to align HOI visual features with those of VLMs, leveraging the extensive knowledge from these models . This alignment ensures that both the HOI model and the VLM can extract similar features to represent the same concept (e.g., an action). The degree of feature alignment can be quantified using cosine similarity, which measures the similarity between feature vectors. However, aligning with VLMs requirestraining transformer-based models, which is computationally expensive and leads to extended training time and significant difficulties.

An alternative approach involves adapting VLMs for HOI tasks, bypassing the demanding alignment process and leveraging VLM capabilities for action understanding in HOI detection. Prompt tuning, which adapts VLMs to various downstream tasks with a small number of learnable parameters, has shown considerable efficacy [62; 61; 19; 21]. One notable method, MaPLe , utilizes multi-modal prompt tuning specifically for image classification tasks. However, since adaptation typically involves only seen class labels, the adapted VLMs often overfit to seen classes but struggle to deal with unseen classes in zero-shot settings [62; 7; 9; 22]. Consequently, this limitation results in suboptimal performance for unseen classes in zero-shot HOI detection.

In this paper, we introduce a novel method, Efficient Zero-Shot HOI detection (EZ-HOI), to enhance VLM adaptation via guided prompt learning with information from foundation models (e.g., LLM and VLM). We design both learnable text and visual prompts, leveraging fixed LLM and VLM to guide the adaptation process. Specifically, the text prompts are designed to capture detailed HOI class insights from an LLM, while the visual prompts are tailored to incorporate external visual semantics from a VLM. However, as the training datasets contain images with seen-class labels alone, the trainable prompts are naturally optimized for these seen classes rather than the unseen ones.

To address this limitation, we develop the Unseen Text Prompt Learning (UTPL) to leverage prompts from related seen classes effectively. We begin by measuring the relationship between HOIs using cosine similarity of text embeddings, which helps identify closely related seen classes for each unseen one. After establishing these connections, we enhance the learning of unseen prompts based on those from selected seen classes. To capture the distinctions between unseen and seen classes, we incorporate an LLM. This LLM provides what we call "disparity information", enhancing the learning of the distinctions and similarities between seen and unseen classes. Additionally, we enhance our approach by introducing intra- and inter-HOI feature fusion techniques following the visual encoder. Our method achieves competitive performance on established benchmarks in various zero-shot settings while requiring significantly fewer trainable parameters.

As illustrated in Fig. 1, we compare our method with two existing paradigms: (a) aligning HOI features to a fixed VLM and (b) adapting a VLM for HOI tasks. Unlike the existing approaches, our method facilitates VLM adaptation to HOI tasks and demonstrates effective generalization to unseen classes. Fig. 1(d) highlights that our method is competitive in terms of performance, model parameter efficiency, and training duration.

In summary, our contributions are as follows:

Figure 1: Comparison of zero-shot HOI detection paradigms. (a) Methods that align HOI features with fixed VLMs [44; 33; 4; 41]. (b) Prompt learning methods to adapt VLMs for downstream tasks [22; 57]. (c) Our approach, which adapts VLMs to HOI tasks without compromising VLM generation capabilities. (d) Unseen, seen, and full mAP indicate the performance for unseen-verb, seen-verb, and full sets on the HICO-DET dataset . Our EZ-HOI shows superior performance in these categories, with competitive trainable parameters and training epochs.

* We introduce EZ-HOI, a novel framework for zero-shot HOI detection that adapts a VLM to HOI tasks via guided prompt learning with foundation model information, enhancing the adapted VLM's generalizability in zero-shot HOI detection.
* We propose the UTPL module, which extracts information from related seen classes for the unseen learnable prompts. This module mitigates overfitting to seen classes, a common issue in task-specific VLM adaptations, improving performance on unseen classes.
* Our EZ-HOI method achieves state-of-the-art performance in various zero-shot settings while significantly reducing trainable parameters and mitigating training challenges. It lowers trainable model parameters by 66% to 78% compared to existing methods, demonstrating enhanced efficiency and effectiveness in zero-shot HOI detection.

## 2 Related Work

**Human-Object Interaction Detection** Human-Object Interaction (HOI) detection involves identifying human-object pairs and recognizing their interactions, serving as a fundamental component for various downstream tasks in computer vision [53; 6]. HOI detection methods are typically categorized into two classes: one-stage and two-stage. One-stage methods simultaneously generate all outputs, including human bounding boxes, object bounding boxes and categories, and interaction classes. Recent advancements in one-stage detectors leverage transformer architectures, delivering promising performance [8; 46; 48; 63; 55; 52; 24]. An example is HOITrans , which utilizes the transformer's encoder and decoder to extract interaction features. The output features are then processed through multi-layer perceptrons to produce all output predictions at once. On the other hand, two-stage approaches divide HOI detection into two tasks: object detection and HOI classification [10; 14; 58]. Since separation allows each module to specialize, two-stage HOI detection is more memory-efficient . Recent developments have seen the integration of transformer-based architectures into two-stage designs, which have shown promising results [59; 60; 45; 27]. Our method also falls into the two-stage design category.

**Zero-Shot HOI Detection** Prior zero-shot HOI detection efforts primarily address unseen composition settings, where models encounter action and object classes separately but not as combinations. To address this, several methods employ compositional learning strategies aimed at tackling the unseen-composition problem [14; 16; 15; 27]. However, compositional learning falls short in addressing unseen verb zero-shot HOI detection scenarios. Given the substantial image understanding capabilities of VLMs, they offer promising potential for enhancing HOI detection in zero-shot settings [2; 29; 30; 47; 37; 36], where labels for unseen HOI classes are absent from the training dataset. Recent studies have explored aligning HOI visual features with VLM [33; 44; 41; 4]. However, this approach requires training transformer-based models, which are computationally expensive. Consequently, aligning HOI models with VLMs is demanding, resulting in extended training times and significant training challenges.

**Prompt Learning** Prompt learning has gained popularity for adapting VLMs to downstream tasks [61; 62; 7; 9; 19; 23; 25; 40]. Context Optimization (CoOp)  refines the prompt input of the text encoder by combining learnable domain-shared prompt tokens with class prompt tokens. MaPLe  integrates learnable domain-shared text tokens with visual learnable tokens. This combination leverages the highly connected text and visual encoders in VLMs, facilitating the sharing of cross-domain information and benefiting both text and visual domains. However, fine-tuning VLM relies on training datasets with only seen class labels, which causes adapted VLMs to excel with seen classes but encounter difficulties with unseen ones in zero-shot scenarios. Consequently, this limitation results in suboptimal performance for unseen classes in zero-shot HOI detection.

## 3 Methodology

We start with adapting a pre-trained CLIP model  to zero-shot HOI tasks using an innovative prompt learning approach. We design two sets of learnable prompts: text and visual. The visual prompts are derived from the text prompts by using projection layers. We denote learnable text prompts as \(h_{T}\) and learnable visual prompts as \(h_{V}\):

\[h_{T}=(h_{V}),\] (1)where \(h_{T}^{p*d_{t}}\), and \(h_{V}^{p*d_{v}}\). \(d_{t}\) is the dimension of the text feature, and \(d_{v}\) is the dimension of the visual feature. \(p\) represents the number of tokens we design for each learnable prompt.

Let \(=\{v_{1},v_{2},,v_{N_{v}}\}\) as the verb set and \(=\{o_{1},o_{2},,o_{N_{v}}\}\) as the object set. Then the HOI set include all feasible verb-object pairs \(=\{_{i}=(v_{i},o_{i})|v_{i};o_{i}\}\). We set \(C\) as the total number of HOI classes. Since it is impractical for any datasets to include comprehensive HOI classes, researchers propose zero-shot HOI detection settings to encourage the generalization of HOI detectors to unseen classes \(_{}\) in inference . Denote the seen HOI class set as \(\) and the unseen HOI class set as \(=\{_{i}_{i},_{i}\}\). Please refer to Appendix 7.9 for detailed definitions of the different zero-shot setting unseen set splits.

### LLM and VLM Guidance for Learnable Prompts

Prompt learning techniques for VLMs are characterized by their ability to adapt large, pre-trained models to specific tasks using relatively small amounts of task-specific data. This often leads to a diminished generalization ability of the fine-tuned models for unseen classes [62; 7; 9; 22]. Given that foundation models, such as LLMs and VLMs, have demonstrated substantial knowledge capacity [29; 47], leveraging guidance from these models can improve performance on unseen HOI classes that are absent in the training data.

**Text Prompt Design** As shown in Fig. 2, we design input prompts, _"Describe a person <acting> <object> and focus on the action"_ related to each HOI class, for an LLM. The output from LLM contains richer semantic information with specific HOI class descriptions. Please refer to Appendix Section 7.2 for a detailed explanation with examples.

Then, we use a CLIP text encoder to obtain the text embedding for this HOI class description. We process text embeddings for all HOI classes including both seen and unseen in parallel, so the whole text embeddings are denoted as \(_{}^{C*d_{t}}\) and \(_{}=[f_{_{1}},f_{_{2}},, f_{_{C}}]\). Then, the learnable text prompts \(}\) can be obtained by:

\[}=W_{}(Q=W_{} h_{T}; \ K,V=W_{}_{})+h_{T}.\] (2)

Figure 2: Overview of our EZ-HOI framework. Learnable text prompts capture detailed HOI class information from the LLM. To enhance their generalization ability, we introduce the Unseen Text Prompt Learning (UTPL) module. Meanwhile, visual learnable prompts are guided by a frozen VLM visual encoder. These learnable text and visual prompts are then separately input into the text and visual encoder. Finally, HOI predictions are made by calculating the cosine similarity between the text encoder output and the HOI image features. MHCA denotes multi-head cross-attention.

where \(}=[}},}},,}]\), and \(}}^{psd_{t}}\). Each class has its specific learnable text prompts after the process of Eq. 2. \(W_{up}\) and \(W_{}\) indicate the up-projection and down-projection layers. \(\) means the multi-head cross attention . In Eq. 2, we only aggregate the useful information from \(_{txt}\) using learnable attention, as the information provided by LLM may not all be relevant for our task. Moreover, to keep trainable parameters small, we apply a down-projection layer \(W_{down}\) before MHCA to reduce the feature dimension, and an up-projection layer \(W_{up}\) afterward. The same design strategy is used in Eq. 3 and Eq. 5. Later, the prompts corresponding to unseen classes are further refined, as detailed in Section 3.2.

**Visual Prompt Design** Visual prompt learning in our method is facilitated by a pre-trained Visual Language Model (VLM) visual encoder, specifically the CLIP visual encoder . The pre-trained CLIP model inherently possesses knowledge of unseen HOI classes, offering richer visual semantics compared to models trained solely on task-specific datasets. The CLIP visual feature is denoted as \(f_{vis}^{}\) for an image \(\), and we enhance the visual learnable prompts \(h_{V}\) by:

\[}=W_{}(Q=W_{} h_{V}; \ K,V=W_{} f_{vis}^{})+h_{V}.\] (3)

Since the frozen VLM visual encoder can extract features for unseen HOIs, \(}\) aggregates information from these visual features, improving performance on unseen HOIs.

### Unseen-Class Text Prompt Learning (UTPL)

Since the training data has no labeled image for unseen HOI classes, learnable text prompts for seen classes are inevitably optimized better than unseen classes. Therefore, we refine the unseen-class text prompts by learning from closely related seen-class prompts. Specifically, we denote one unseen HOI class as \(u\), and the learnable text prompt tokens as \(}}\), and denote one seen HOI class as \(s\) and the related seen text prompt token as \(}}\). To identify the related seen class, we use text embeddings of the HOI class descriptions generated by the LLM, as explained in Text Prompt Design of Section 3.1. The related seen class is formulated as follows:

\[s=*{arg\,max}_{s}\ (f_{_{u}})^{T} f_{ _{s}}\] (4)

Directly refining prompts for unseen classes based solely on selected seen classes may be insufficient due to inherent differences between the seen and unseen classes. Thus, we propose utilizing disparity information, defined as the differences between unseen class \(u\) and seen class \(s\), as provided by the LLM. The architecture of UTPL is shown in Fig. 3. Please refer to Appendix Section 7.3 for detailed explanation with examples.

Since the description can be too long to be encoded at once, we process each sentence separately by using the CLIP text encoder. Thus, set the text embedding of disparity descriptions for an unseen HOI class \(u\) as \(f_{_{u}}^{}^{msd_{t}}\), where \(m\) is the number of sentences in the text description. Then we can compute the refined learnable text prompts \(}}\) for unseen class \(u\) as:

\[}}=W_{}(Q:W_{} }};\ K,V:W_{}(f_{_{u }}^{},}},}}))+}},\] (5)

Figure 3: Detailed architecture of Unseen Text Prompt Learning (UTPL). In the figure, we take the “hose a dog” unseen HOI class in the unseen-verb zero-shot setting as an example. We first utilize the HOI class text embeddings to identify the most connected seen HOI class to “hose a dog”. After selecting the seen class, we generate an input prompt to obtain disparity information from LLM. Finally, the unseen learnable prompt learns from the selected seen class prompt and the disparity information through MHCA.

where \(\) indicates concatenation. For seen classes, \(h^{}_{T_{s}}=h^{}_{T_{s}}\). Although ground-truth labels for the unseen classes are not available during training, we propose two strategies to update \(h^{}_{T_{u}}\) in Eq. 5. First, we design a class-relation loss (refer to Eq. 16 in the Appendix) to keep the relationship between seen and unseen classes, measured by cosine similarity between text features. As a result, unseen prompts can be refined based on their relation to seen classes. Second, the annotated training data serves as negative samples for unseen HOIs. If the prediction score for an unseen class is too high, the model is penalized (Eq. 17 in the Appendix).

### Deep Visual-Text Prompt Learning

We denote a set of learnable text prompts as \(_{}=[^{}_{T},^{}_{T}, ,^{}_{T}]\) and learnable visual prompts as \(_{}=[h^{}_{V},h^{}_{V},,h^{N}_{V }]\). \(^{}_{T}^{C*p*d_{c}},h^{}_{V}^{p*d_{c}},i=1,2,,N\). \(N\) means we intend to introduce new learnable prompts from the first layer to layer \(N\).

**Deep Text Prompt Learning** The text encoder is composed of \(K\) transformer layers \(\{_{i}\}_{i=1}^{K}\).The CLIP text encoder generates text features by tokenizing the words and converting them into word embeddings \(W_{0}=[w^{1}_{0},w^{2}_{0},,w^{P}_{0}]^{P*d_{c}}\). Text features \(W_{i}\) will be processed by \(i^{}\) layer of the text transformer:

\[[W_{i+1},\_]=_{i}(W_{i},h^{}_{T}),\;i=1,2, ,N,\] (6) \[[W_{i+1},h^{+1}_{T}]=_{i}(W_{i},h^{}_ {T}),\;i=N+1,N+2,,K.\]

The final text representation \(W_{t}\) can be obtained by:

\[W_{t}=(W_{K}),\] (7)

where \(W_{t}^{1*d_{a}}\) and \(d_{a}\) is the feature dimension of the final aligned text and visual features in CLIP. Since our learnable text prompt \(^{}_{T}\) is specific for each HOI class, the whole text representation can be obtained \(_{t}=[W_{t_{1}},W_{t_{2}},,W_{t_{C}}]\).

**Deep Visual Prompt Learning** The visual encoder is also composed of \(K\) transformer layers \(\{_{i}\}_{i=1}^{K}\). After each layer \(_{i}\), there is an adapter \(_{i}\) to inject object position and category information . CLIP visual encoder splits image \(\) into \(D=d_{p}*d_{p}\) fixed-size patches, which are projected to obtain visual features \(E_{1}^{D*d_{v}}\). Visual features \(E_{i}\) are processed by \(i^{}\) layer of the visual transformer:

\[[c_{i+1},E_{i+1},\_]=_{i}(_{i}(c_{i},E_{i},h^{ }_{V})),\;i=1,2,,N,\] (8) \[[c_{i+1},E_{i+1},h^{+1}_{V}]=_{i}(_ {i}(c_{i},E_{i},h^{}_{V})),\;i=N+1,N+2,,K,\]

where \(c_{i}\) is the class token for the \(i^{}\) layer.

The final visual representation \(E_{v}^{1*d_{a}}\) can be computed as follows:

\[E_{v}=(E_{K}).\] (9)

\(E_{v}^{D*d_{v}}\) can be re-sized to \(E_{v}^{d_{p}*d_{p}*d_{v}}\). Since off-the-shelf detectors can provide object detection results, we select bounding boxes with confidence score \(sc>\) and apply RoI-Align  to obtain features for each detected human and object \(E_{},E_{}\). Then, the intra-HOI feature fusion extracts HOI feature \(E_{}^{1*d_{a}}\) from \(E_{},E_{}\):

\[E_{}=MLP(E_{},E_{}),\] (10)

where \(MLP\) represents multi-layer perception. In any given image \(\), multiple humans and objects may be present, leading to the detection of several potential human-object pairs. Assume there are \(q\) human-object (H-O) pairs in image \(\) and denote all HOI features as \(}^{}_{}=[E^{1}_{},E^{2}_{ },,E^{q}_{}]\). Incorporating surrounding HOI features enriches context information for each HOI visual feature by capturing additional human-object relational details and interactions, thereby enhancing HOI features. We name this process inter-HOI feature fusion. Thus, final visual representation \(}^{}_{}\) is obtained by:

\[}^{}_{}=W_{}(W_{}^{}_{})+^{ }_{},\] (11)

where \(\) means multi-head self-attention  and \(}^{}_{}=[}^{1}_{ },}^{2}_{},,}^ {q}_{}]\). Then, we can calculate the prediction for each H-O pair \(_{i}\).

\[p_{}(c|_{i})=}^{}_{ }(W_{t_{c}})^{T})}{_{k=1}^{C}(}^{ }_{}(W_{t_{k}})^{T})},\;c=1,2,,C.\] (12)

Please refer to Appendix Section 7.5 for more details for training and inference.

## 4 Experiments

### Zero-Shot HOI Setting Definition

Our method follows the existing zero-shot HOI setting, which involves predicting unseen HOI classes and typically includes using unseen class names during training [14; 15; 16; 44; 51]. In particular, VCL, FCL and ATL [14; 16; 15] "compose novel HOI samples" during training with the unseen (novel) HOI class names. EoID  distills CLIP "with predefined HOI prompts" including both seen and unseen class names. HOICLIP  introduces "verb class representation" during training, including both seen and unseen classes.

### Implementation Details

We evaluate our method on HICO-DET by following the established protocol of zero-shot two-stage HOI detection methods [14; 3; 27]. Our object detector utilizes a pre-trained DETR model  with a ResNet50 backbone . As for our learnable prompts design, we set \(p=2,N=9\). The LLaVA-v1.5-7b model  is used to provide text description, as explained in Section 3.1 and 3.2. For all experiments, our batch size is set as 16 on 4 Nvidia A5000 GPUs. We use AdamW  as the optimizer and the initial learning rate is 1e-3. For more implementation details, please refer to Appendix Section 7.1.

### Comparison with State-of-the-Art Zero-Shot HOI Methods

**Unseen-Verb Setting** In Table 1, we compare our method to existing zero-shot HOI detection approaches under the unseen-verb zero-shot setting. The results demonstrate that our method not only achieves competitive performance but also requires only **10.35%** to **33.95%** of the trainable parameters compared to existing zero-shot HOI detection methods thanks to our novel prompt learning design. While our method shows a minor drop in performance compared to CLIP4HOI under the unseen verb setting, it is important to consider the significant reduction in trainable parameters that our method achieves--87.9% fewer than CLIP4HOI. In contrast, the existing HOI methods [33; 44; 41; 4] that align with VLMs unanimously require significantly more trainable

    &  &  &  &  \\   & & & Full & Unseen & & Full & Unseen &  \\  GEN-VLKT (CVPR’22)  & UV & Resnet50+ViT-B & 42.05M & 28.74 & 20.96 & 30.23 \\ EoID (AAAT’23)  & UV & Resnet50 & 41.45M & 29.61 & 22.71 & 30.73 \\ HOICLIP (CVPR’23)  & UV & Resnet50+ViT-B & 66.18M & 31.09 & 24.30 & 32.19 \\ CLIP4HOI (NeurlPS’23)  & UV & Resnet50+ViT-B & 56.7M* & 30.42 & **26.02** & 31.14 \\  Ours & UV & Resnet50+ViT-B & **6.85M** & **32.32** & 25.10 & **33.49** \\  UniHOI (NeurlPS’23)  & UV & Resnet50+ViT-L & 52.3M* & 34.68 & 26.05 & 36.78 \\  Ours & UV & Resnet50+ViT-L & **14.07M** & **36.84** & **28.82** & **38.15** \\   

Table 1: Unseen-verb (UV) comparison on HICO-DET with state-of-the-art methods. * indicates the model size is estimated according to papers [41; 4]. “TP” denotes the trainable parameters.

    &  &  &  &  &  \\   & & & Full & Unseen & & & Full & Unseen &  \\  GEN-VLKT  & Resnet50+ViT-B & RF & 30.56 & 21.36 & 32.91 & NF & 23.71 & 25.05 & 23.38 \\ EoID  & Resnet50 & RF & 29.52 & 22.04 & 31.39 & NF & 26.69 & 26.77 & 26.66 \\ HOICLIP  & Resnet50+ViT-B & RF & 32.99 & 25.53 & 28.47 & NF & 27.75 & 26.39 & 28.10 \\ ADA-CM  & Resnet50+ViT-B & RF & 33.01 & 27.63 & 34.35 & NF & **31.39** & 32.41 & **31.13** \\ CLIP4HOI  & Resnet50+ViT-B & RF & **34.08** & 28.47 & **35.48** & NF & 28.90 & 31.44 & 28.26 \\  Ours & Resnet50+ViT-B & RF & 33.13 & **29.02** & 34.15 & NF & 31.17 & **33.66** & 30.55 \\  UniHOI  & Resnet50+ViT-L & RF & 32.27 & 28.68 & 33.16 & NF & 31.79 & 28.45 & 32.63 \\  Ours & Resnet50+ViT-L & RF & **36.73** & **34.24** & **37.35** & NF & **34.84** & **36.33** & **34.47** \\   

Table 2: Rare-first unseen-composition (RF-UC) and Nonrare-first unseen composition (NF-UC) comparison on HICO-DET with state-of-the-art methods.

model parameters (e.g., 42.05M \(\) 66.18M with ViT-B visual encoder), whereas our method operates efficiently with only 6.85M trainable parameters.

UniHOI  is the state-of-the-art method in the unseen verb (UV) setting. Compared to UniHOI which aligns HOI features to BLIP  text embeddings, our method achieves improved performance, especially in the unseen category with a 2.77 increase in mAP. At the same time, our model requires only 26.9% of the trainable parameters compared to UniHOI. This demonstrates the effectiveness and efficiency of our proposed prompt learning framework in adapting the VLM for zero-shot HOI tasks.

**Unseen-Composition Setting** In Table 2, we provide the zero-shot performance comparison in rare-first unseen-composition (RF-UC) and nonrare-first unseen-composition (NF-UC) settings. With the ViT-B visual encoder, our method establishes a new standard for unseen-class performance across both RF and NF settings, outperforming the previous state-of-the-art method, CLIP4HOI , while requiring only 12.08% of its trainable parameters. Compared to UniHOI with ViT-L visual encoder , our method surpasses it by 5.56 mAP in unseen performance of the RF-UC setting and by 7.88 mAP in the NF-UC setting with only 26.9% of the trainable parameters of UniHOI.

**Unseen-Object Setting** We provide the unseen-object setting comparison in Table 3. Following previous methods [33; 44], we employ a DETR object detector pre-trained on MS-COCO  for object detection. To keep consistent with CLIP4HOI  and FCL , we also provide the results by using the DETR model pre-trained on HICO-DET  (marked with \(\) in Table 3). CLIP4HOI  is the state-of-the-art method in unseen performance. With the same object detector pre-trained on HICO-DET, our method shows improved performance for unseen class prediction, outperforming CLIP4HOI by 1.49 mAP, with only 12.08% of its trainable model parameters. UniHOI  is the state-of-the-art method in seen performance. With the same object detector as UniHOI, our method outperforms UniHOI in unseen category by 13.36 mAP.

### Ablation Studies

We conduct the ablation study for our text and visual prompt learning design in Table 4. The first row shows the performance of our baseline, MaPLe . Our intra-HOI fusion module improves the seen HOI performance by 7.41 mAP, as shown in the second row. In the third row, the inclusion of the visual adapter  enhances performance for seen classes while negatively affecting unseen HOI performance.

Comparing the third row and fourth row, LLM guidance, shown in Fig. 2, notably enhances unseen-class learning, resulting in a 1.52 mAP improvement. LLM guidance, by integrating learnable text prompts with detailed HOI class descriptions, improves the model's understanding of unseen classes, providing richer information compared to simple class names. Additionally, the inclusion of the UTPL module significantly boosts unseen class performance, with a **2.42** mAP improvement. Later, the inter-HOI fusion benefits both the seen and unseen learning by providing more context

    &  &  &  &  \\   & & & & Full & Unseen & Seen \\  \(^{}\) (cvpr21) & UO & Resnet50 & - & 19.87 & 15.54 & 20.74 \\ \(^{}\) (cvpr21) & UO & Resnet50 & - & 20.47 & 15.11 & 21.54 \\ GEN-VLKT (cvpr22) & UO & Resnet50 & 42.05M & 25.63 & 10.51 & 28.92 \\ HOICIP (cvpr23) & UO & Resnet50+ViT-B & 66.18M & 28.53 & 16.20 & 30.99 \\ \(^{}\) (NeurIPS’23) & UO & Resnet50+ViT-B & 56.7M* & **32.58** & 31.79 & **32.73** \\ 
**Ours** & **UO** & Resnet50**vTi-B & **6.85M** & 27.90 & 31.63 & 27.16 \\
**Ours**\({}^{}\) & **UO** & Resnet50**vTi-B & **6.85M** & 32.27 & **33.28** & 32.06 \\  UniHOI (NeurIPS 23) & UO & Resnet50+ViT-L & 52.3M* & 31.56 & 19.72 & 34.76 \\ 
**Ours** & **UO** & Resnet50**vTi-L & **14.07M** & 31.42 & 33.08 & 31.09 \\
**Ours**\({}^{}\) & **UO** & Resnet50**vTi-L & **14.07M** & **36.38** & **38.17** & **36.02** \\   

Table 3: Unseen-object (UO) comparison on HICO-DET with state-of-the-art methods. * indicates the model size is estimated according to papers [41; 4]. \(\) denotes methods that use a DETR object detection model pretrained on HICO-DET. Results _without_\(\) indicate the use of a DETR object detection model pretrained on MS-COCO. “TP” denotes the trainable parameters.

information for visual HOI features. Finally, the VLM guidance effectiveness is evaluated, which enhances the unseen performance by 1.33 mAP.

We also provide the experimental comparison with CLIP  and MaPLe  in Table 5. Since they are designed for general image classification, directly applying it to HOI tasks for comparison is unfair as they may not focus on the human-object region features. Therefore, we crop the union region from the original visual features for each human-object pair to obtain the HOI feature. HOI prediction is obtained by using cosine similarity between HOI and text features for each class.

As shown in Table 5, although with learnable prompts, MaPLe  outperforms CLIP on seen classes, its performance on unseen classes is far behind that of the seen classes, showing reduced generalization capability. Compared to our method, MaPLe lags significantly behind on unseen performance, with an 11.63 decrease in mAP. Additionally, the third row introduces another baseline that incorporates MaPLe with visual adapter (i.e., \(_{i}\)) , which is also used in our framework, ensuring a fair comparison. The performance improvement from the third row to the fourth row, with gains of 5.93 mAP for unseen classes and 3.86 mAP for seen classes, clearly demonstrates the effectiveness of our method in zero-shot HOI detection.

### Qualitative Results

Fig. 4 shows the qualitative results of MaPLe  and our method in the unseen-verb zero-shot setting. In particular, MaPLe struggles to detect unseen classes, either missing unseen HOI classes or predicting the wrong unseen HOI classes. For example, if an image only contains unseen classes, MaPLe tends to predict wrong seen classes and miss the correct ones. As shown in the bottom right of Fig. 4, this image contains unseen class only ("wear tie"), MaPLe predicts related wrong seen classes such as "pulling tie" and "adjusting tie", but fails to predict the ground-truth unseen HOI ("wear tie"). This shows the limited generalization ability of MaPLe to unseen classes. In contrast to MaPLe, our method can predict both seen and unseen classes more accurately.

### Fully Supervised Setting for HOI Detection

We conducted the fully-supervised experiments on both the HICO-DET and V-COCO benchmarks [6; 34]. Our method achieves a competitive 38.61 mAP on the HICO-DET dataset, with a smaller performance drop between rare and non-rare classes (1.19 mAP) compared to AGER  (4.18 mAP), the current state-of-the-art one-stage method. Our method also outperforms the best-performing zero-shot HOI method, CLIP4HOI , by 3.28 mAP on HICO-DET. On the V-COCO benchmark, our method achieves state-of-the-art performance with 66.2 AP in Scenario 2. Detailed discussions and comparisons are provided in the Appendix 7.6.

   Intra-HOI & visual & LLM Guide & UTPL &  Inter-HOI \\ fusion \\  & VLM Guide & 
 mAP \\  \\  \(\) & \(\) & \(\) & \(\) & \(\) & 26.26 & 17.19 & 27.73 \\ ✓ & \(\) & \(\) & \(\) & \(\) & \(\) & 33.52 & 23.54 & 35.14 \\ ✓ & ✓ & \(\) & \(\) & \(\) & \(\) & 35.40 & 22.91 & 37.44 \\ ✓ & ✓ & ✓ & \(\) & \(\) & \(\) & 35.62 & 24.43 & 37.44 \\ ✓ & ✓ & ✓ & ✓ & \(\) & \(\) & 36.23 & 26.85 & 37.76 \\ ✓ & ✓ & ✓ & ✓ & ✓ & \(\) & 36.70 & 27.49 & 38.10 \\ ✓ & ✓ & ✓ & ✓ & ✓ & ✓ & **36.84** & **28.82** & **38.15** \\   

Table 4: Ablation study of our method in zero-shot unseen verb setting on HICO-DET.

    &  \\   & Full & Unseen & Seen \\  CLIP  & 13.18 & 13.96 & 13.05 \\ MaPLe  & 26.26 & 17.19 & 27.73 \\ MaPLe  + visual adapter  & 32.70 & 22.89 & 34.29 \\ Ours & **36.84** & **28.82** & **38.15** \\   

Table 5: Prompt learning evaluation in zero-shot unseen verb setting on HICO-DET.

### Discussion of Descriptors from LLMs

Descriptors, developed to leverage the LLMs for downstream tasks [42; 20], involve attribute decomposition to benefit category recognition. We adopt the attribute decomposition concept from DVDet  and tailor it to our EZ-HOI framework. Following DVDet, we generate action descriptors for each class and integrate them into HOI class text features, thus enhancing the detail and distinctiveness of class representations. Descriptors with low cosine similarity to the class text features are discarded to avoid noise. With our straightforward adoption of action descriptors, the result shows 0.31 mAP improvement compared to our EZ-HOI, achieving 32.63 mAP under the unseen-verb setting. This indicates that LLM-generated descriptions, such as action descriptors, hold potential to enhance HOI detection and are worth further exploration.

### Limitations

Our method has some limitations. First, while our method significantly reduces the number of trainable parameters compared to existing approaches, it still requires fine-tuning on HOI-specific datasets such as HICO-DET. A training-free design, which could be used directly for HOI detection without the need for fine-tuning, would be more desirable. Second, zero-shot HOI detection requires the pre-definition of all HOI classes, both seen and unseen, following the current zero-shot HOI detection setting. This requirement restricts the generalizability to truly unseen classes. Consequently, our future work will aim to develop a robust open-category HOI detector that operates effectively without the need for predefined classes.

## 5 Conclusion

In this paper, we introduced the Efficient Zero-shot HOI Detection (EZ-HOI) approach, utilizing prompt learning to adapt visual-language models for zero-shot HOI detection. This method not only maintains competitive performance for unseen classes but also innovatively integrates learnable visual and text prompts. These prompts leverage foundation model information, thereby enriching prompt knowledge and enhancing the adaptability of VLMs. A significant challenge we addressed is the compromised performance on unseen classes, resulting from the training dataset containing only seen-class labels. To counter this, we developed a text prompt learning strategy that utilizes information from related seen classes to support the detection of unseen classes. We also employed an LLM to provide the nuanced differences between related seen and unseen classes, improving our method for unseen class prompt learning. Our method has demonstrated state-of-the-art performance across various zero-shot HOI detection settings while requiring only a third of the trainable parameters compared to existing methods.

Figure 4: Qualitative comparison with MaPLe  for unseen-verb zero-shot HOI detection.The orange bar represents the unseen class prediction and the blue bar means the seen class prediction.

Acknowledgements

This research/project is supported by the National Research Foundation, Singapore under its Strategic Capability Research Centres Funding Initiative. Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not reflect the views of National Research Foundation, Singapore.