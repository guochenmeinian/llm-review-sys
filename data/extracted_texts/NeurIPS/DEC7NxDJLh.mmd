# Coupled Reconstruction of Cortical Surfaces by Diffeomorphic Mesh Deformation

Hao Zheng Hongming Li Yong Fan

University of Pennsylvania

hzheng1@upenn.edu, {hongming.li,yong.fan}@pennmedicine.upenn.edu

###### Abstract

Accurate reconstruction of cortical surfaces from brain magnetic resonance images (MRIs) remains a challenging task due to the notorious partial volume effect in brain MRIs and the cerebral cortex's thin and highly folded patterns. Although many promising deep learning-based cortical surface reconstruction methods have been developed, they typically fail to model the interdependence between inner (white matter) and outer (pial) cortical surfaces, which can help generate cortical surfaces with spherical topology. To robustly reconstruct the cortical surfaces with topological correctness, we develop a new deep learning framework to jointly reconstruct the inner, outer, and their in-between (middthickness) surfaces and estimate cortical thickness directly from 3D MRIs. Our method first estimates the middthickness surface and then learns three diffeomorphic flows jointly to optimize the middthickness surface and deform it inward and outward to the inner and outer cortical surfaces respectively, regularized by topological correctness. Our method also outputs a cortex thickness value for each surface vertex, estimated from its diffeomorphic deformation trajectory. Our method has been evaluated on two large-scale neuroimaging datasets, including ADNI and OASIS, achieving state-of-the-art cortical surface reconstruction performance in terms of accuracy, surface regularity, and computation efficiency.

## 1 Introduction

The analysis of the cerebral cortex using magnetic resonance imaging (MRI) is crucial in understanding neurodegenerative diseases [9; 43] and psychological disorders . Since the cerebral cortex is a thin (a few millimeters thick) and highly folded sheet between the inner (white matter: WM) and outer (pial) surfaces, voxel-based segmentation methods cannot accurately capture its complicated morphology . Instead, triangular meshes have been widely used for cortical surface reconstruction (CSR)  in order to accurately measure cortical thickness, volume, and gyrification. Although well-established methods for CSR (e.g., FreeSurfer , BrainSuite ) can produce promising results, they often require significant computational resources (e.g., 6h/subject ) and may necessitate manual editing in order to attain sub-voxel precision.

Recently, deep learning (DL) methods have achieved significant improvement in CSR in terms of both accuracy (sub-voxel error) and efficiency (orders of magnitude faster) [10; 13; 19; 20; 26; 30; 31; 41; 47; 59]. These DL methods can be broadly classified into two categories according to the representation of the output surfaces. (I) Implicit surface representation, such as signed distance function [13; 19], occupancy filed , and level set , can be predicted by neural networks, and cortical surface is then generated by a marching cubes algorithm . (II) Explicit surface reconstruction methods take a coarse or fine initial mesh as input and directly predict a target mesh [10; 20; 26; 30; 31; 59]. A detailed comparison of the existing DL-based CSR methods is summarized in Table 1.

However, the existing _DL-based CSR_ methods are subject to limitations. _First_, the _interdependence_ between the inner and outer cortical surfaces is generally ignored, and therefore separate or multi-stage DL models are typically trained to reconstruct both the inner and outer cortical surfaces and intersections between them may occur. Even if both the inner and outer surfaces can be reconstructed simultaneously , they are loosely combined with no topological constraints. _Second_, complex DL architectures are commonly used, with _separate_ learning of image and surface/vertex features using both convolutional neural networks (CNNs) and graph neural networks (GNNs)/multi-layer perceptrons (MLPs). Moreover, graph convolutions become less scalable as the number of vertices in the mesh grows to accommodate complex shapes, and often fail to learn diffeomorphic mappings to produce genus-zero regular meshes . _Third_, using a coarse mesh template incurs difficulty of learning large deformations for highly folded cortical regions and may lead to non-smooth deformation and undesirable artifacts. _Last but not least_, the cortical thickness estimation is neglected in _all_ existing _DL-based CSR_ methods (i.e., needs a separate step to compute cortical attributes as in conventional pipelines [17; 56]). It may serve as an anatomical constraint to couple the inner and outer cortical surfaces, help generate cortical surfaces with topological correctness, and facilitate quantitative analysis of the cortical thickness.

In order to robustly reconstruct the cortical surfaces with topological correctness, we develop a DL-based approach to simultaneously reconstruct both the inner and outer cortical surfaces and estimate the cortical thickness by optimizing and deforming an initialized mithickness surface. _First_, our method explicitly couples the inner and outer surfaces by jointly learning three diffeomorphic flows to optimize the initialization mithickness surface to lie halfway between the inner and outer cortical surfaces and deform it to inner and outer cortical surfaces, respectively. _Second_, instead of designing a complex mixed architecture of CNNs and GNNs/MLPs, our method employs a single model of 3D CNNs to predict the diffeomorphic flows from a multi-channel input, consisting of a 3D brain MRI, a ribbon segmentation map that encodes structural information of the cerebral cortex, and a signed distance function that implicitly encodes the initialization surface. _Third_, our method calculates the diffeomorphic deformation trajectories in a continues coordinate space rather than on a 3D voxelwise grid, achieving higher sub-voxel accuracy from fine-grained velocity fields while maintaining reasonable computational efficiency even as the number of mesh vertices increases. _Fourth_, we devise an efficient and reliable approach to initialize _a fine mithickness surface_ from a cortical ribbon segmentation result, followed by topology correction to ensure genus zero. _Finally_, a vertex-wise thickness estimation can be obtained by tracing the geodesic trajectory of each vertex during the mesh deformation process. _In summary_, our new DL framework differs from the existing DL-based CSR approaches in its coupled reconstruction of multiple surfaces and the simultaneous cortical thickness estimation, which facilitates robust reconstruction of the cortical surfaces with spherical topology. Ablation studies and comparison experiments on two large public datasets (ADNI  and OASIS ) have demonstrated that our method attains superior performance over the state-of-the-art methods [10; 13; 26; 30; 31; 47].

## 2 Related Works

### Learning-based Cortical Surface Reconstruction

Recent years have witnessed a surge of interest in geometric DL-based methods for general computer vision tasks [15; 29; 49; 52; 54; 57; 58]) and biomedical object reconstruction [24; 25; 37; 38; 55].

  Methods & Input & Network & Output & Joint surf. & Direct thickness \\  & Img. & Surf. & CNN & GNN/MLP & Explicit surf. & reconstruction & estimation \\  DeepCSR  & volume & & ✓ & ✓ & & & \\ vox2Surf  & vol-cube & & ✓ & ✓ & & & \\ FastCSR  & volume & & ✓ & & & & \\  PatiNN & cube & FS & ✓ & ✓ & & & \\ CorticalFlow [26; 47] & volume & CS & ✓ & ✓ & ✓ & & \\ vox2cortex  & volume & CS & ✓ & ✓ & ✓ & ✓ & \\ TopoFit  & volume & CS & ✓ & ✓ & ✓ & & \\ CortexODE & cube & FS & ✓ & ✓ & ✓ & & \\ Ours & volume & FS+IS & ✓ & & ✓ & ✓ & ✓ \\  

Table 1: A comparison of existing DL-based CSR methods and ours. For input, “volume”: the whole 3D volume; “cube”: a sub-volume; FS: fine surface mesh; CS: coarse surface template; IS: implicit surface representation. For output, explicit surface: triangular mesh; implicit surface: signed distance function or occupancy field.

However, their applications to biomedical tasks are limited to organs with simple shapes such as the liver and heart. The cerebral cortex, on the other hand, is a highly folded, thin structure with a significantly complex shape, necessitating more advanced approaches.

Table 1 summarizes two categories of CSR methods, i.e., implicit and explicit surface reconstruction. The implicit surface reconstruction methods typically learn a function that maps 3D coordinates to a continuous implicit representation of the surface, such as signed distance function  and occupancy field . Compared to well-established pipelines , these methods have significantly improved inference efficiency (reducing time cost from hours to minutes). Despite their ability to generate surfaces at any desired resolutions [13; 18; 19; 41], these methods often rely on a marching cubes algorithm  to obtain a triangular mesh and post-processing topology correction methods  for ensuring correct spherical topology of the reconstructed surfaces.

The explicit surface reconstruction methods typically learn a mapping from an initialization mesh to a target surface and the mapping can be modeled as a deformation model [52; 53; 55]. Particularly, Pixel2Mesh  utilizes GNNs to learn vertex-wise deformations of an ellipsoid and increase the mesh resolution in a coarse-to-fine manner. Such a strategy has also been adopted in Voxel2Mesh  to reconstruct simple human organ surfaces (e.g., liver, hippocampus) from CT/MR images. Similarly, PialNN  learns to deform an input inner cortical (i.e., WM) surface to a target outer (pial) surface by a sequence of deformation blocks; TopoFit  warps a topologically-correct template surface to fit the WM surface by a series of graph convolutional blocks; and Vox2Cortex  deforms a brain template surface to target cortical surfaces by leveraging combined CNNs and GNNs. Another line of research leverages ODE to parameterize the deformation of vertices as diffeomorphic flows, such as CocialFlow methods [26; 47] and CortexODE . However, all these methods may produce intersecting inner and outer cortical surfaces because they predict the inner and outer cortical surfaces either using separate DL models or using a joint DL model without explicit constraints to penalize the generation of intersecting surfaces.

### Diffeomorphic Deformation

A diffeomorphism is theoretically differentiable and invertible and guarantees smooth and one-to-one mapping . Diffeomorphic deformation has been widely used in image registration [2; 4; 5; 35; 51]. It can be generated from a velocity field \(\) by integrating an ordinary differential equation (ODE) ,

\[,t)}{dt}=((,t),t),(,t)=(,0)+_{o}^{t}((, t),t)dt,\] (1)

where \((,0)=\). The velocity field can be stationary  or time-varying . Standard numerical integration techniques, such as the Euler method and the Runge-Kutta method , can be used to perform the integration. CocialFlow methods [26; 47] and CortexODE  parameterize the ODE by a neural network . CocialFlow requires the deformation field to be Lipschitz at each time step to ensure a bijective mapping with Lipschitz inverse and derives a stability condition for the numeric approximation of \(\). As a chain of deformation modules is trained in sequential stages to predict a series of deformation fields that deform the initial mesh template to the target surface in a coarse-to-fine manner, there is a risk of generating self-intersections due to the low-resolution template in the coarsest level model and the whole process is prone to error accumulation in multiple steps. CortexODE  is built upon NODE  and operates on a topologically-corrected high-resolution initialization mesh. The sufficient condition of diffeomorphism can be satisfied if the deformation network is Lipschitz continuous and a sufficiently small step size is used in numerical approximation. Most learning-based image registration approaches [6; 28; 36] adopt stationary velocity field (SVF), and the integral (displacement field) is computed on a voxel-grid using the scaling and squaring method , yielding comparable registration accuracy to conventional methods while significantly improving efficiency. Our work lies at the intersection of these methods in that our method uses CNNs to parameterize multiple SVFs based on a multi-channel input and train the SVFs jointly to optimize cortical surfaces under topology-preserving and inverse-consistent transformation regularizations.

## 3 Methodology

As illustrated in Fig. 1, our framework consists of two parts: a pipeline that estimates a midthickness surface, represented both explicitly as a 3D mesh and implicitly as a 3D distance map (Sect. 3.1), and an end-to-end fully convolutional network (FCN) that reconstructs multiple surfaces and estimate cortical thickness simultaneously (Sect. 3.2). Loss functions are presented in (Sect. 3.3).

### Midthickness Surface Initialization

The human cerebral cortex is a 2D sheet with an average thickness of \(\)\(2.5mm\) and has a highly folded geometry with peaks (i.e., gyri) and grooves (i.e., sulci) . The existing CSR methods typically use a smoothed template surface estimated from a group of subjects [10; 47], or a WM surface [30; 31] to initialize the surface reconstruction. However, our preliminary experiment shows that the closer the initial surface is to its target surface, the higher the reconstruction accuracy is (see Fig. 2(a)). Thus, we propose to extract the midthickness layer which lies halfway between the inner and outer cortical surfaces as an initialization surface, which brings three advantages: (1) Deforming a surface from the midthickness surface reduces the learning difficulty and improves accuracy by avoiding learning "large" deformations. It also strikes a balance between optimizing the inner and outer surfaces, making it less challenging. (2) The distance between the midthickness surface and the pial surface can help prevent topology errors in cases of deep sulci, as this layer still provides a clear separation between them. (3) Deforming the midthickness surface inward and outward to the inner and outer surfaces establishes a one-to-one mapping that explicitly encodes the correspondence between surfaces, facilitating coupled surface learning and improving CSR accuracy.

A key challenge is how to obtain a surface as close to the midthickness surface as possible. A straightforward method is to inflate the WM surface along the normal direction by a pre-determined distance . However, this method cannot accurately estimate the midthickness surface in that the cortical thickness varies across the cortex and the normal is merely an approximation using neighboring faces. We propose a more accurate method by leveraging the cortex ribbon segmentation map (i.e., the filled interior area of WM and pial surfaces). Given an input brain MRI volume \(I^{D_{1} D_{2} D_{3}}\), we utilize a 3D U-Net  to generate a WM segmentation map \(M_{W}^{D_{1} D_{2} D_{3}}\) and a GM segmentation map \(M_{G}^{D_{1} D_{2} D_{3}}\) (see Fig. 1(a)). The network is trained on a large-scale public neuroimaging dataset  by minimizing the cross-entropy loss between the prediction and ground truth which can be obtained using existing pipelines [17; 45]. Based on the predicted segmentation map \(M_{W}\), we generate a signed distance function (SDF), \(K_{W}^{D_{1} D_{2} D_{3}}\), using a distance transform algorithm: \(d(v_{i})=SDF(v_{i})\) is the minimal Euclidean distance of voxel \(v_{i} I\) to the boundary voxels. Voxels with values equal to zero represent the surface boundaries and voxels with negative or positive values encode their distances to the surface boundaries inward or outward, respectively. Similarly, we generate an SDF, \(K_{G}\), for the pial (gray matter) surface. A new SDF can be obtained by averaging the WM and GM SDFs: \(K_{M}=(K_{G}+K_{W})/2\), whose 0-level defines the midthickness surface implicitly. To ensure the midthickness surface maintains a spherical topology, a fast topology check and correction algorithm [7; 30] is then applied to the implicit surface \(K_{M}\)

Figure 1: Overview. (a) Surface initialization. An FCN generates cortical ribbon segmentation maps from the raw image. An SDF is derived, followed by topology correction and marching cubes algorithms, and then used for initializing the midthickness surface. (b) Cortical surface reconstruction network. It takes a multi-channel input and learns three parallel velocity fields (VFs) in parallel. \(_{1}\) is used to generate a deformation field for optimizing the midthickness surface \(_{M}\). \(_{2}\) (or \(_{3}\)) is used to deform \(_{M}\) to the WM surface \(_{W}\) (or pial surface \(_{G}\)) and then \(_{3}\) (or \(_{2}\)) deforms \(_{W}\) (or \(_{G}\)) to midthickness surface \(^{}_{M}\) (or \(^{}_{M}\)) to constrain topology between cortical surfaces.

Finally, the initialization midthickness surface is extracted by the marching cubes algorithm  from the 0-level of \(K_{M}\) and parameterized by a triangular mesh \(_{0}\).

### Coupled Reconstruction of Cortical Surfaces

Based on the formulation in Eq. 1, an accurate parameterization of the SVFs is crucial to modeling the diffeomorphic trajectory of each vertex and reconstructing the cortical surfaces. In this section, we will show how our method achieves the goals.

**Feature Extraction from a Mutli-channel Input of Brain MRI, Cortical Ribbon, and Cortical Surface.** The existing DL-based CSR studies have demonstrated that it is critical to fuse both image features extracted from the MRIs using CNNs and geometry features extracted from surface meshes using GNNs/MLPs. However, besides employing two different network architectures, these methods typically learn the image and geometry features _separately_ before fusion, which does not adequately utilize image texture and surface geometric information. To better model the SVFs, we propose to learn features from a multi-channel input consisting of a brain MRI, its cortical ribbon segmentation maps, and its midthickness surface represented as an SDF: \(I_{comb}=IM_{W G}K_{M}\), where \(\) is channel-wise concatenation and \(M_{W G}\) is a multiclass mask (BG = 0, WM = 0.5, GM = 1).

Such a feature learning procedure brings two key benefits: (1) Utilizing heterogeneous features enables mutual knowledge distillation. The brain MRI contains detailed texture and semantic information but may include noise and irrelevant regions far from the target surfaces. The cortical ribbon segmentation maps contain structural/semantic information about the cortical sheet and can act as an attention guide for extracting informative features around its boundaries. The SDF implicitly embeds the surface location information and relative relation between all voxels. Together, the multi-channel input provides richer and complementary information for our model to reconstruct the surfaces. (2) Only a single CNN is needed, which simplifies the model design and improves efficiency. Features can be extracted in a single forward pass for all coordinates. When scaling up the number of vertices in mesh, we can interpolate in the feature space efficiently.

**Coupled Learning of Cortical Surfaces.** The goal is to learn diffeomorphic deformations that deform the initialization midthickness surface \(_{0}^{3}\) to its target WM and pial surfaces, \(_{W}\) and \(_{G}\). Taking into account the discrepancy between the initialization \(_{0}\) and the _true_ midthickness surfaces \(_{M}\), our method also learns a diffeomorphic deformation to optimize the initialization midthickness surface. In total, our method learns a function to model three diffeomorphic deformations \(f_{}(I_{comb},_{0})=(_{M},_{W},_{G})\), using an FCN and several diffeomorphic deformation modules (DDMs). Specifically, the FCN has a similar architecture as U-Net , consisting of a 5-level hierarchical encoder-decoder with skip connections as shown in Fig. 1(b) (see Supplementary Materials for details). By taking the multi-channel input, the FCN learns to estimate three dense SVFs jointly, denoted by \(_{M}\), \(_{W}\), and \(_{G}\). We then use \(_{M}\) to compute \(_{M}\) that deforms \(_{0}\) to the _true_ midthickness surface \(_{M}\), \(_{W}\) to compute \(_{W}\) that deforms \(_{M}\) inward to the WM surface \(_{W}\), and \(_{G}\) to compute \(_{G}\) that deforms \(_{M}\) outward to the pial surface \(_{G}\). By doing so, we establish a _one-to-one mapping_ across \(_{W}\), \(_{M}\), and \(_{G}\).

However, since \(_{W}\) and \(_{G}\) are computed using different SVFs, they may cause non-invertible transformation around the midthickness surface. To address this issue, we utilize the property of diffeomorphic mapping to compute a symmetric deformation trajectory of each vertex and devise a

Figure 2: (a) The relationship between the initialization surface position (X-axis) and the surface reconstruction accuracy (Y-axis) using PialNN . Orange and blue lines represent WM and pial surfaces reconstruction resp. (b) Illustration of a symmetric deformation trajectory and cortical thickness estimation. (c) Illustration of DDM. Each vertex is deformed by sampled velocities.

symmetric cycle function \(_{cyc}\) (Eq. 2) for training. Fig. 2(b) illustrates the deformation of a vertex \(_{Mid}\) outward to \(_{GM}\) using \(_{G}\) (\(_{G}\)) followed by the deformation inward to \(_{Mid}^{}\) using \(_{W}\) (\(_{W}\)), which should be as close to \(_{Mid}\) as possible. Similarly, \(_{Mid}^{}\) should also be as close to \(_{Mid}\) as possible when deformed inward by \(_{W}\) followed by the outward deformation by \(_{G}\). The symmetric cycle loss is formulated as:

\[_{cyc}=_{_{M}}\|_{ _{W}_{G}}-\|_{2}^{2}+\|_{_{G}_{W }}-\|_{2}^{2},\] (2)

where \(_{_{b}_{b}}\) represents deforming a vertex \(\) using velocity fields \(_{a}\) and \(_{b}\) sequentially. It ensures simultaneous alignment of \(_{_{W}_{G}}_{_{G} _{W}}\) for each vertex \(_{M}\). Fig. 3 demonstrates the effectiveness of \(_{cyc}\) in the _coupled_ reconstruction of multiple surfaces in the network optimization. Moreover, we can trace the geodesic trajectory of each vertex during the mesh deformation process for estimating vertex-wise cortical thickness (Fig. 2(b)).

**Diffeomorphic Deformation Module (DDM).** To numerically solve the ODE in Eq. 1, scaling and squaring (SS) method  can be applied on the image grid, followed by trilinear interpolation (\(()\)) for vertices in continuous coordinates. However, there are three limitations: (1) Interpolation cannot guarantee the invertibility of diffeomorphic mapping; (2) Numerical errors are amplified in the two sequential steps of SS+Lint(\(\)); (3) Computation on grid voxels including no vertices is unnecessary. Hence, we utilize the DDM to directly compute the vertex-wise integral. As shown in Fig. 2(c), we obtain the velocity vector for a vertex with coordinate \(\) by interpolating its neighboring velocity vectors (\(:=_{()}\)), i.e., \(_{}=(_{( )}\)). The vertex then moves to a new coordinate \(_{}}{T}\), where \(T\) is the total time steps. We can obtain overall deformation using this procedure in \(T\) steps.

### Loss Functions

We design multiple loss functions to optimize the geometric precision of the reconstructed surfaces and regularize the SVFs for diffeomorphic deformation.

**Mesh loss**. It aims to minimize distances of the vertices between the predicted surface meshes \(_{W}\) (and \(_{G}\)) and their corresponding ground truth (GT) meshes \(_{*}\) by the bidirectional Chamfer distance :

\[_{chW}=_{_{W}}_{_{*} _{W_{*}}}\|-_{*}\|_{2}^{2}+_{_{*} _{W_{*}}}_{_{W}}\|_{*}- \|_{2}^{2},\] (3)

where \(\) and \(_{*}\) are the coordinates of vertices on meshes. We can compute \(_{chG}\) analogously. The mesh loss is \(_{ch}=_{chW}+_{chG}\).

**Trajectory loss.** Starting from the midthickness surface, the trajectory length of the vertex moving to the WM and the pial surfaces should be equal. We propose to compute the mean square difference of the vertex's trajectories:

\[_{dist}=_{}\|L_{Mid GM}( )-L_{Mid WM}()\|_{2}^{2},\] (4)

where \(L_{Mid GM}()=_{t=0}^{T}_{G,t}()\) is the accumulated Euclidean distance (i.e., trajectory length) of \(T\) steps of deformation. This term encourages the midthickness surface can be deformed to the inner and outer cortical surfaces with the same deformation path length. In other words, the midthickness surface should lie halfway between the inner and outer cortical surfaces.

**Symmetric cycle loss.** We formulate it as Eq. 2 to encourage \(_{W}\) and \(_{G}\) to be invertible.

**Symmetric similarity loss.** To optimize the midthickness surface to lie halfway between the inner and outer cortical surfaces, a magnitude difference constraint is adopted directly on the SVFs:

\[_{ss}=\|_{G}-}_{W}\|_{2}^{2},\] (5)

where \(}_{W}\) represents reverse-directional \(_{W}\).

Figure 3: Example vertex deformation trajectories with and without \(_{cyc}\).

**Normal consistency loss.** We also incorporate a normal consistency regularization term to promote robust learning of the surfaces and ensure their smoothness:

\[_{nc}=_{e E,f_{0} f_{1}=e}(1-cos(_{f_{0}}, _{f_{1}})),\] (6)

where \(e\) is an edge, \(f_{0}\) and \(f_{1}\) are \(e\)'s two neighboring faces with their unit normals \(_{f_{0}}\) and \(_{f_{1}}\).

In summary, we combine all the losses to jointly optimize our DL model: \(=_{1}_{ch}+_{2}_{dist}+_ {3}_{cyc}+_{4}_{ss}+_{5}_{nc}\), where \(\{_{i}\}_{i=1,,5}\) are weights to balance the loss terms. We empirically set \(_{i}=1\)\((i=1,,4)\) and \(_{5}=0.001\).

## 4 Experiments

We evaluated our method for reconstructing both white-matter (WM) and pial surfaces on two large-scale datasets, (ADNI)  and OASIS , and compared it with state-of-the-art (SOTA) DL-based CSR methods. We also tested its robustness and performed ablation analyses.

**Datasets.** The ADNI-1  dataset consists of 817 subjects and we randomly split it into 654, 50, and 113 subjects for training, validation, and testing, respectively. The OASIS-1  dataset consists of 413 subjects and we randomly split it into 330, 25, and 58 for training, validation, and testing, respectively. The models were trained on the training set until they reached a loss plateau on the validation set, after which their performance was evaluated on the test set. We followed pre-processing protocols in previous works [10; 13; 26; 30] for fair comparison. The T1-weighted MRI scans were aligned rigidly to the MNI152 template and clipped to the size of \(192 224 192\) at \(1mm^{3}\) isotropic resolution. The pseudo ground-truth of ribbon segmentation and cortical surfaces were generated using FreeSurfer v7.2.0 . The intensity values of MRI scans, ribbon segmentation maps, and SDFs were normalized to \(\) and the coordinates of the vertices were normalized to \([-1,1]\). The WM and GM in the cortical ribbon segmentation maps were assigned values of 0.5 and 1 respectively.

**Implementation details.** Our framework was implemented in PyTorch  and trained on an NVIDIA P100 GPU of 16 GB memory. The 3D U-Net  for ribbon segmentation was trained for 200 epochs using Adam  optimization and achieved an average Dice index of 0.96 on the testing set. The CSR model was trained for 400 epochs using Adam (\(_{1}=0.9\), \(_{2}=0.999\), \(=1e^{-10}\), learning rate \(1e^{-4}\)) to optimize the midthickness surface and reconstruct the WM and pial surfaces for each hemisphere. The surface meshes had \(\)\(130K\) vertices.

**Evaluation metrics.** We utilized three distance-based metrics to measure the CSR accuracy, including Chamfer distance (CD), average symmetric surface distance (ASSD), and Hausdorff distance (HD). In particular, CD measures the mean distance between two sets of vertices [16; 52]; ASSD and HD measure the average and maximum distances between two surfaces [13; 50]. They are computed bidirectionally over \(\)\(130K\) points uniformly sampled from the predicted and target surfaces. A lower distance indicates a better result. We used the 90th percentile instead of the maximum because HD is sensitive to outliers . We also utilized the ratio of self-intersection faces (SIF) to measure surface quality [13; 30].

### Comparison with Related Works

From the two categories of existing DL-based cortical surface reconstruction methods described in Section 1, we selected representative ones from each category for comparison. The experimental results are summarized in Table 2 and illustrated in Figure 4.

**Main Results & Analysis.** It is evident that our method achieved substantial improvement on both the WM and pial surface reconstruction over other approaches. Since DeepCSR  predicts an SDF-based implicit surface and requires post-processing to correct topology and extract a mesh, its results may contain no SIFs but were less accurate compared with the explicit CSR methods. Starting from the WM surface, PialNN  can achieve sub-voxel accuracy but its SIF ratio was relatively high. Vox2Cortex  can generate multiple surfaces from different template meshes. It employs complex CNN and GNN models to model the deformation for each vertex but has no diffeomorphism guarantee. The promising results of [26; 30; 47] indicated that using neural networks to parameterize the ODE can facilitate the diffeomorphic deformation, yielding better CSR accuracy. Our methodachieved the overall best performance due to its explicit regularizations on the deformation trajectory of vertices and its better initialization surface. On the ADNI dataset, our method achieved \(\)\(48.8\%\) improvement in mean ASSD (of WM and pial surfaces) compared to the second best CortexODE (i.e., 0.104\(mm\)_v.s_ 0.203\(mm\)) with competitive self-intersection ratio (average \(\)0.021\(\%\)). On the OASIS dataset, our method achieved similar performance improvement. More quantitative results on the WM surface are reported in the Supplementary Materials. As shown in Fig. 4, the CSR results obtained by our method had uniformly smaller errors across the whole surfaces.

**Runtime Analysis.** It took \(\)0.8\(s\) for our method to obtain a ribbon segmentation map and another \(\)\(2s\) for the topology correction and surface initialization. For the surface reconstruction, the inference time for simultaneously reconstructing _three_ (i.e., WM, pial, and middickness) surfaces was \(\)1.5\(s\). In comparison, the SOTA explicit CSR method CortexODE  needed \(\)\(2s\) to reconstruct two surfaces _sequentially_. Overall, our method is computationally as efficient as the SOTA alternatives.

### Ablation Studies

**Input.** Our method takes as input a multi-channel 3D images \(I_{comb}\) and an initialization middickness surface \(S_{0}\). We conducted two experiments to analyze the influence of the input components on the CSR performance (Table 3 Top). _First_, by gradually removing components from \(I_{comb}\), we observed a significant drop in accuracy, indicating the contribution of both the SDF and segmentation maps to the final results. _Second_, we investigated the impact of the fine structure of the initialization surface by applying Laplacian smoothing on \(S_{0}\) to generate oversmoothed initialization surfaces. The results revealed that the accuracy of the model decreased with the increasing of smoothing steps which resulted in a coarser initialization surface \(S_{0}\).

**Loss functions.** We evaluated the contribution of different losses of our method to the surface reconstruction performance in terms of both accuracy (CD, ASSD, HD) and topological correctness (SIF), with the results summarized in Table 3 Middle. Through the ablation studies, we observed

    & &  &  \\   & & CD (\(\)mm) & ASSD (\(mm\)) & HD (\(mm\)) & SIF (\(\%\)) & CD (\(mm\)) & ASSD (\(mm\)) & HD (\(mm\)) & SIF (\(\%\)) \\   ResNet \\  } & DeepCSR  & 0.945\(\)0.078 & 0.593\(\)0.065 & 1.149\(\)0.203 & \(\) & 0.938\(\)0.076 & 0.587\(\)0.064 & 1.137\(\)0.193 & \(\) \\  & PialNN  & 0.621 \(\)0.035 & 0.465\(\)0.044 & 1.002\(\)0.106 & 0.137\(\)0.093 & \(\) & \(\) & \(\) \\  & CorticalFlow  & 0.691\(\)0.043 & 0.497\(\)0.049 & 1.106\(\)0.115 & 0.419\(\)0.087 & 0.641\(\)0.037 & 0.465\(\)0.042 & 0.996\(\)0.100 & 0.108\(\)0.073 \\  & CriticalFlow++  & 0.545\(\)0.026 & 0.401\(\)0.033 & 0.386\(\)0.069 & 0.098\(\)0.067 & 0.544\(\)0.034 & 0.401\(\)0.030 & 0.878\(\)0.066 & 0.69\(\)0.042 \\  & cortexODE  & 0.476\(\)0.017 & 0.214\(\)0.020 & 0.455\(\)0.058 & **0.022\(\)**0.012 & 0.458\(\)0.016 & 0.192\(\)0.015 & 0.436\(\)0.014 & 0.015\(\)0.011 \\  & VoxCorre  & 0.582\(\)0.028 & 0.370\(\)0.025 & 0.476\(\)0.057 & 0.095\(\)0.009 & 0.577\(\)0.027 & 0.335\(\)0.022 & 0.722\(\)0.055 & 0.043\(\)0.023 \\  & Ours & **0.410\(\)**0.016 & 0.314\(\)**0.012 & **0.293\(\)**0.026 & 0.595\(\)0.021 & **0.213\(\)**0.008 & **0.071\(\)**0.005 & **0.485\(\)**0.012 & **0.407\(\)**0.010 \\   ResNet \\  } & DeepCSR  & 0.996\(\)0.085 & 0.617\(\)0.070 & 1.331\(\)0.212 & \(\) & 0.975\(\)0.081 & 0.594\(\)0.087 & 1.151\(\)0.197 & \(\) \\  & PaiNN  & 0.635\(\)0.032 & 0.460\(\)0.038 & 0.993\(\)0.082 & 0.141\(\)0.096 & & & \\  & CorticalFlow  & 0.687\(\)0.040 & 0.495\(\)0.047 & 1.082\(\)0.110 & 0.147\(\)0.086 & 0.637\(\)0.035 & 0.462\(\)0.040 & 0.992\(\)0.097 & 0.101\(\)0.070 \\  & CorticalFlow++  & 0.531\(\)0.035 & 0.399\(\)0.030 & 0.812\(\)0.057 & 0.88\(\)0.045 & 0.529\(\)0.033 & 0.398\(\)0.030 & 0.810\(\)0.055 & 0.086\(\)0.042 \\  & cortexODE  & 0.481\(\)0.019 & 0.218\(\)0.021 & 0.461\(\)0.026 & **0.026\(\)**0.015 & 0.463\(\)0.034 & 0.207\(\)0.017 & 0.438\(\)0.015 & 0.048\(\)0.010 \\  & VoxCorre  & 0.588\(\)0.032 & 0.381\(\)0.030 & 0.750\(\)0.063 & 0.061\(\)0.037 & 0.581\(\)0.028 & 0.375\(\)0.027 & 0.731\(\)0.059 & 0.046\(\)0.027 \\  & Ours & **0.442\(\)**0.014 & **0.161\(\)**0.012 & **0.348\(\)**0.025 & 0.037\(\)0.023 & **0.128\(\)**0.007 & **0.073\(\)**0.006 & **0.195\(\)**0.013 & **0.008\(\)**0.011 \\   

Table 2: Quantitative analysis of cortical surface reconstruction on geometric accuracy and surface quality. The Chamfer distance (CD), average symmetric surface distance (ASSD), Hausdorff distance (HD), and the ratio of the self-intersecting faces (SIF) were measured for WM and pial surfaces on the two datasets. The mean value and standard deviation are reported. The best ones are in bold.

Figure 4: Visualization of the reconstructed surfaces with distance compared to ground truth.

that each component played its own role in a complementary way. The first row (referred to as S0) corresponds to our complete network setting, while the last row (S4) represents using Chamfer distance alone. The results of setting S4 indicated that the model generated surfaces well matched to the ground truth data at the cost of high topological errors, particularly in highly curved regions, reflected by the results that the SIF ratio was worse on the pial surface than on the WM surface. Enforcing equality of the trajectories from the midthickness surface to the WM and pial surfaces (S3, \(_{dist}\)) helped optimize the midthickness surface, thereby preventing deformation in an arbitrary direction and reducing self-intersection. However, the geometric accuracy slightly decreased, which might be caused by the difficulty in accessing highly curved regions or deep sulci under such strong topology constraints. The proposed symmetric cycle loss (S2, \(_{cyc}\)) promoted the invertibility of deformations, yielding a significant reduction of self-intersections on the meshes since our method jointly reconstructs both the inner and outer surfaces by deforming the midthickness surface inward and outward with two VFs. Such invertibility also facilitates accurate estimation of the cortical thickness from the trajectory, as illustrated by a sample vertex deformation trajectory in Fig. 2 obtained with settings of S2 and S3. Moreover, the inclusion of regularization terms on the smoothness of SVFs (S1, \(L_{ss}\)) and surfaces (S0, \(L_{nc}\)) contributed to enhancement in surface quality. Overall, our proposed method struck a balance between geometric accuracy and topology quality.

**Deformation steps in DDM.** Table 3 Bottom shows the evaluation results of different numbers of deformation steps (\(T\)) in DDM. As \(T\) increased, the performance first improved and then saturated, indicating that five steps were sufficient to deform the midthickness surface to the inner or outer surfaces.

### Reproducibility

We carried out two experiments on two datasets: a paired ADNI\({}_{1.56 3T}\) dataset  consisting of 1.5T and 3T MRIs of the same subjects, and the Test-Retest dataset  comprising 40 MRIs collected within a short period for each of the 3 subjects. In these scenarios, the cortical surfaces of the same subject should be nearly identical. Following the experimental setup outlined in [10; 13; 30], we utilized the iterative closest-point algorithm (ICP) to align image pairs and computed the geometric distance between surfaces. The results for the left WM surfaces are presented in Table 4 (more in Supplementary Materials),

    &  \\  & & CD (\(mm\)) & ASSD (\(mm\)) & HD (\(mm\)) \\   & Ours & **0.520\(\)**0.053 & **0.337\(\)**0.058 & **0.738\(\)**0.151 \\  & CortexODE & 0.521\(\)0.056 & 0.340\(\)0.060 & 0.741\(\)0.154 \\  & DeepCSR & 0.618\(\)0.103 & 0.397\(\)0.080 & 0.823\(\)0.211 \\  & FreeSurfer & 0.556\(\)0.049 & 0.364\(\)0.054 & 0.764\(\)0.118 \\   & Ours & **0.451\(\)**0.019 & **0.235\(\)**0.030 & **0.492\(\)**0.059 \\   & CortexODE & 0.457\(\)0.021 & 0.238\(\)0.031 & 0.504\(\)0.071 \\   & DeepCSR & 0.505\(\)0.047 & 0.297\(\)0.053 & 0.610\(\)0.100 \\   & FreeSurfer & 0.476\(\)0.015 & 0.253\(\)0.022 & 0.519\(\)0.048 \\   

Table 4: Reproducibility analysis.

    &  &  &  &  \\  & & T & SDF & Seg & \# of Lap. Sm. & CD (\(mm\)) & ASSD (\(mm\)) & HD (\(mm\)) & CD (\(mm\)) & ASSD (\(mm\)) & HD (\(mm\)) \\  I0 & ✓ & ✓ & ✓ & 0 & 0.410\(\)0.016 & 0.136\(\)0.012 & 0.293\(\)0.026 & 0.213\(\)0.008 & 0.071\(\)0.005 & 0.155\(\)0.012 \\  I1 & ✓ & ✓ & & 0 & 0.426\(\)0.017 & 0.167\(\)0.017 & 0.358\(\)0.038 & 0.222\(\)0.011 & 0.075\(\)0.006 & 0.164\(\)0.013 \\ I2 & ✓ & ✓ & & 0 & 0.453\(\)0.021 & 0.201\(\)0.026 & 0.438\(\)0.074 & 0.250\(\)0.013 & 0.085\(\)0.008 & 0.184\(\)0.016 \\  M1 & ✓ & ✓ & ✓ & 10 & 0.416\(\)0.016 & 0.147\(\)0.013 & 0.315\(\)0.028 & 0.225\(\)0.010 & 0.084\(\)0.007 & 0.184\(\)0.015 \\ M2 & ✓ & ✓ & ✓ & 20 & 0.429\(\)0.018 & 0.163\(\)0.017 & 0.361\(\)0.040 & 0.235\(\)0.012 & 0.091\(\)0.009 & 0.190\(\)0.017 \\    &  &  &  \\  & & \(_{dist}\) & \(_{cyc}\) & \(_{exc}\) & \(_{enc}\) & \(_{cn}\) & ASSD (\(mm\)) & HD (\(mm\)) & SD (\(mm\)) & ASD (\(mm\)) & HD (\(mm\)) \\  S0 & ✓ & ✓ & ✓ & ✓ & 0.410\(\)0.016 & 0.136\(\)0.012 & 0.293\(\)0.026 & 0.035\(\)0.021 & 0.213\(\)0.008 & 0.071\(\)0.005 & 0.155\(\)0.012 & 0.007\(\)0.010 \\  S1 & ✓ & ✓ & ✓ & ✓ & 0.412\(\)0.016 & 0.138\(\)0.012 & 0.299\(\)0.026 & 0.036\(\)0.021 & 0.213\(\)0.010 & 0.073\(\)0.006 & 0.158\(\)0.013 & 0.008\(\)0.010 \\ S2 & ✓ & ✓ & & 0.412\(\)0.016 & 0.139\(\)0.012 & 0.302\(\)0.027 & 0.072\(\)0.021 & 0.211\(\)0.009 & 0.073\(\)0.007 & 0.156\(\)0.013 & 0.008\(\)0.011 \\ S3 & ✓ & ✓ & & 0.409\(\)0.016 & 0.136\(\)0.012 & 0.300\(\)0.027 & 0.275\(\)0.010 & 0.200\(\)0.099 & 0.099\(\)0.007 & 0.156\(\)0.013 & 0.008\(\)0.011 \\ S4 & ✓ & & & 0.404\(\)0.015 & 0.129\(\)0.011 & 0.278\(\)0.004 & 2.522\(\)0.791 & 0.203\(\)0.099 & 0.069\(\)0.006 & 0.153\(\)0.013 & 0.009\(\)0.012 \\    &  &  &  \\ (\(T\)) in DDM & CD (\(mm\)) & ASSD (\(mm\)) & HD (\(mm\)) & SIF(\%) & CD (\(mm\)) & ASSD (\(mm\)) & HD (\(mm\)) & SIF(\%) \\   & 0.410\(\)0.016 & 0.136\(\)0.012 & 0.293\(\)0.026 & 0.035\(\)0.021 & 0.213\(\)0.008 & 0.071\(\)0.005 & 0.155\(\)0demonstrating that our method obtained superior reproducibility compared with FreeSurfer and was comparable to the SOTA DL methods.

### Cortical Thickness

In contrast to the alternative methods that rely on the ICP algorithm for registering WM and pial surfaces prior to calculating the Euclidean distance , our proposed method directly provides vertex-wise cortical thickness estimation. To validate the cortical thickness estimation, we compared our method with FreeSurfer for estimating the cortical thickness. We identified 200 subjects from the ADNI-2GO  dataset (100 are diagnosed with Alzheimer's disease and 100 are normal controls) and computed the average cortical thickness across 35 cortical regions based on a surface parcellation provided by FreeSurfer . Fig. 5 shows the correlation between ours and FreeSurfer's results, showcasing the effectiveness of our proposed framework in accurately capturing cortical thickness.

## 5 Limitations and Future Directions

Despite achieving improved CSR accuracy and a low SIF ratio, our method can be further improved by adopting post-processing methods and new loss functions in order to minimize the SIF ratio and improve surface quality. While focusing on cortical thickness estimation in this paper, we recognize the value of incorporating other cortical attributes like surface area and sulci depth into CSR and analysis tasks. These attributes could serve as complementary constraints, enhancing overall performance. It should be noted that further analysis is merited to thoroughly evaluate the proposed method on a large cohort of subjects (e.g., subjects in different stages of AD) although we have demonstrated the correlation between the estimated cortical thickness and that of FreeSurfer on a balanced dataset.

## 6 Conclusion

We introduce a new DL framework for cortical surface reconstruction by generating a midthickness surface to initialize a coupled reconstruction of both the WM and pial surfaces. Specifically, the midthickness surface is estimated from a 3D distance map from each MRI by generating a cortical ribbon segmentation map that encodes structural information of the cerebral cortex. The estimated midthickness surface is represented as a triangular mesh with spherical topology, and the mesh is optimized to lie at the center of the inner and outer cortical surfaces and deformed to the inner and outer cortical surfaces by three diffeomorphic flows that are learned jointly with CNNs optimized with a multi-channel input consisting of the brain MRI, the 3D distance map of midthickness surface, and the cortical ribbon segmentation map. Our proposed symmetric cycle loss helps learn diffeomorphic deformation and the numerical solution of DDM improves CSR accuracy and computation efficiency. Experiments on two large-scale neuroimage datasets have demonstrated the superior performance of our method. Moreover, our method generates an estimation of cortical thickness, facilitating statistical analyses of brain atrophy.

## 7 Acknowledgements

This work was supported in part by the NIH grants AG066650 and EB022573.