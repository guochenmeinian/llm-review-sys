# Learning Regularized Monotone Graphon Mean-Field Games

Fengzhuo Zhang\({}^{1}\) Vincent Y. F. Tan\({}^{1}\) Zhaoran Wang\({}^{2}\) Zhuoran Yang\({}^{3}\)

\({}^{1}\)National University of Singapore \({}^{2}\) Northwestern University \({}^{3}\)Yale University

fzzhang@u.nus.edu, vtan@nus.edu.sg,

zhaoranwang@gmail.com, zhuoranyang.work@gmail.com

###### Abstract

This paper studies two fundamental problems in regularized Graphon Mean-Field Games (GMFGs). First, we establish the existence of a Nash Equilibrium (NE) of any \(\)-regularized GMFG (for \( 0\)). This result relies on weaker conditions than those in previous works for analyzing both unregularized GMFGs (\(=0\)) and \(\)-regularized MFGs, which are special cases of GMFGs. Second, we propose provably efficient algorithms to learn the NE in weakly monotone GMFGs, motivated by Lasry and Lions (2007). Previous literature either only analyzed continuous-time algorithms or required extra conditions to analyze discrete-time algorithms. In contrast, we design a discrete-time algorithm and derive its convergence rate solely under weakly monotone conditions. Furthermore, we develop and analyze the action-value function estimation procedure during the online learning process, which is absent from algorithms for monotone GMFGs. This serves as a sub-module in our optimization algorithm. The efficiency of the designed algorithm is corroborated by empirical evaluations.

## 1 Introduction

In Multi-Agent Reinforcement Learning (MARL), the sizes of state and action spaces grow exponentially in the number of agents, which is known as the "curse of many agents" (Sonu et al., 2017; Wang et al., 2020) and restrict its applicability to large-scale scenarios. The Mean-Field Game (MFG) has thus been proposed to mitigate this problem by exploiting the homogeneity assumption (Huang et al., 2006; Lasry and Lions, 2007), and it has achieved tremendous successes in many real-world applications (Cousin et al., 2011; Achdou et al., 2020). However, the homogeneity assumption is an impediment when modeling scenarios in which the agents are heterogeneous. GMFGs, as extensions of MFGs, have thus been proposed to model the behaviors of heterogeneous agents and ameliorate the "curse of many agents" at the same time (Parise and Ozdaglar, 2019; Carmona et al., 2022).

Despite the empirical successes of the Graphon Mean-Field Game (GMFG) (Aurell et al., 2022), its theoretical understanding is lacking. First, sufficient conditions for Nash Equilibrium (NE) existence in regularized GMFG have not been established. Most works only address the existence of the NE in _unregularized_ GMFGs. However, _regularization_ is employed in practical implementations for improved exploration and robustness (Geist et al., 2019). Moreover, previous works prove the existence of NE in regularized MFGs, a special case of GMFGs, only under the _contraction condition_, which is overly restrictive for real-world applications. Second, the analysis of _discrete-time_ algorithms for monotone GMFGs is lacking. Most existing works design provably efficient discrete-time algorithms only under contraction conditions, as shown in Table 1. Complementarily, previous works on monotone GMFGs either only derive the convergence rate for continuous-time algorithms, which ignores the discretization error, or require extra conditions, (e.g., potential games) to analyze discrete-time algorithms.

In this paper, we first consider GMFGs in full generality, i.e., without any contraction or monotone conditions. The goal is to establish the existence of NE in the regularized GMFG in this general setting. Then we focus on monotone GMFGs motivated by Lasry and Lions (2007). We aim to learn the unique NE from the online interactions of all agents with and without the action-value function oracle. When the oracle is absent, the action-value functions should be estimated from the data of sampled agents generated in the online game.

In the analysis, we have to overcome difficulties that arise from both the _existence_ of the NE problem and the _learning_ of the NE. First, the proof of the existence of NE in regularized GMFG involves establishing some topological spaces and operators related to NE on which fixed point theorems are applicable. However, the direct construction of the space and the operators for GMFGs with uncountably infinite agents is challenging. Second, the design and analysis of the discrete-time NE learning algorithm require subtle exploitation of the monotone condition. Unlike continuous-time algorithms with infinitesimal step sizes, the design of appropriate step sizes is additionally required for the discrete-time algorithm to guarantee that iterates evolve appropriately. This guarantee originates from the delicate utilization of the monotone condition in the optimization procedures.

To address the difficulty of the existence problem, we construct a regularized MFG from the regularized GMFG and show that the NE of the constructed game can be converted into the NE of the original game, thus mitigating the difficulty of having an uncountable number of agents. To handle the difficulty in the NE learning problem, we design the Monotone GMFG Policy Mirror Descent (MonoGMFG-PMD) algorithm, which iteratively implements policy mirror descent for each player. We show that this procedure results in a decrease of the KL divergence between the iterate and the NE, and this decrease is related to the gap appearing in the weakly monotone condition. When the action-value function oracle is absent, we also design and analyze action-value functions estimation algorithms to serve as a submodule of the optimization procedures.

**Main Contributions:** We first establish the existence of the NE in the \(\)-regularized GMFG with \( 0\) assuming Lipschitzness of graphons and continuity of transition kernels and reward functions. Our result relaxes the assumption of the Lipschitzness of transition kernels and rewards required in previous works on unregularized GMFGs and the contraction condition in the literature on regularized MFG (Cui and Koeppl, 2021). Then we design and analyze the MonoGMFG-PMD algorithm. Using an action-value function oracle, the convergence rate for MonoGMFG-PMD is proved to be \((T^{-1/2})\) after \(T\) iterations. Without the oracle, the convergence rate includes an additional \((K^{-1/2}+N^{-1})\) term that arises from sampling \(N\) agents and collecting data from \(K\) episodes, reflecting the generalization error and the approximation error of the estimation algorithm. As shown in Table 1, our algorithm can be implemented from the online interaction of agents and does not require the distribution flow manipulation. Detailed explanations of the properties stated in the columns of Table 1 are provided in Appendix A. Our result for MonoGMFG-PMD provides the _first convergence rate for discrete-time algorithms in monotone GMFGs_.

## 2 Related Works

MFGs were proposed by Huang et al. (2006) and Lasry and Lions (2007) to model the interactions among a set of homogeneous agents. In recent years, learning the NE of the MFGs formulated by

   & Condition &  No population \\ manipulation \\  &  Online \\ playing \\  & Heterogeneity &  Discrete-time \\ algorithm \\  &  Convergence \\ rate \\  \\  Anahtarci et al. (2022) & Contraction & No & No & No & Yes & Yes \\ Xie et al. (2021) & Contraction & No & Yes & No & Yes & Yes \\ Zaman et al. (2022) & Contraction & No & Yes & No & Yes & Yes \\ Yardim et al. (2022) & Contraction & Yes & Yes & No & Yes & Yes \\ Perrin et al. (2020) & Monotone & No & No & No & No & Yes \\  Geist et al. (2021) \\  } & Potential &  &  &  &  &  \\  & \&Monotone & & & & \\ 

Table 1: Comparison of GMFGs and MFGs learning algorithmsdiscrete-time Markov Decision Process (MDP)s has attracted a lot of interest. There is a large body of works that design and analyze algorithms for the MFGs under contraction conditions (Anhattarci et al., 2019, 2022; Cui and Koeppl, 2021; Xie et al., 2021; Zaman et al., 2022; Yardim et al., 2022). Typically, these works design reinforcement learning algorithms to approximate the contraction operators in MFGs, and the NE is learned by iteratively applying this operator. In contrast, another line of works focuses on the MFGs under monotone conditions. Motivated by Lasry and Lions (2007), the transition kernels in these works are independent of the mean fields. Perrin et al. (2020) proposed and analyzed the continuous-time fictitious play algorithm, which dynamically weighs the past mean fields and the best response policies to derive new mean fields and policies. With the additional potential assumption, Geist et al. (2021) derived the convergence rate for the discrete-time fictitious play algorithm. Perolat et al. (2021) then proposed the continuous-time policy mirror descent algorithm but only proved the asymptotic convergence, i.e., the consistency. In summary, there is no convergence rate result for any discrete-time algorithm for MFGs under the monotone condition. In addition, the relationship between the contraction conditions and the monotone conditions is not clear from existing works, but they complement each other.

To capture the potential heterogeneity among agents, GMFGs have been proposed by Parise and Ozdaglar (2019) in static settings as an extension of MFGs. The heterogeneous interactions among agents are represented by graphons. Aurell et al. (2022); Caines and Huang (2019) then extended the GMFGs to the continuous-time setting, where the existence and the uniqueness of NE were established. Vasal et al. (2020) formulated discrete-time GMFGs and provided way to compute the NE with master equations. With the precise underlying graphons values, Cui and Koeppl (2021) proposed algorithms to learn the NE of GMFGs with the contraction condition by modifying MFGs learning algorithms. Fabian et al. (2022) considered the monotone GMFG and proposed the continuous-time policy mirror descent algorithm to learn the NE. However, only consistency was provided in the latter two works.

**Notation** Let \([N]:=\{1,,N\}\). Given a measurable space \((,)\), we denote the collection of all the measures and the probability measures on \((,)\) as \(()\) and \(()\), respectively. For a metric space \((,\|\|)\), we use \(C()\) and \(C_{b}()\) to denote the set of all continuous functions and the set of all bounded continuous functions on \(\), respectively. For a measurable space \((,)\) and two distributions \(P,Q()\), the total variation distance between them is defined as \((P,Q):=_{A}|P(A)-Q(A)|\). A sequence of measures \(\{_{n}\}\) on \(\) is said to _converge weakly_ to a measure \(\) if \(_{}g(x)_{n}(x)_{}g(x)( x)\) for all \(g C_{b}()\).

## 3 Preliminaries

### Graphon Mean-Field Games

We consider a GMFG that is defined through a tuple \((,,,H,P,r,W,_{1})\). The horizon (or length) of the game is denoted as \(H\). In GMFG, we have infinite players, each corresponding to a point \(=\). The state and action space of them are the same, denoted as \(^{d_{a}}\) and \(^{d_{b}}\) respectively. The interaction among players is captured by _graphons_. Graphons are symmetric functions that map \(^{2}\) to \(\). Symmetry here refers to that \(W(,)=W(,)\) for all \(,\). We denote the set of graphons as \(=\{W:^{2}\,|\,W\) is symmetric. The set of graphons of the game is \(W=\{W_{h}\}_{h=1}^{H}\) with \(W_{h}\). The state transition and reward of each player are influenced by the collective behavior of all the other players through an _aggregate_\(z()\). At time \(h[H]\), we denote the state distribution of player \(\) as \(_{h}^{}()\). The aggregate for player \(\) with the underlying graphon \(W_{h}\) is then defined as

\[z_{h}^{}=_{0}^{1}W_{h}(,)_{h}^{}\,.\] (1)

The transition kernels \(P=\{P_{h}\}_{h=1}^{H}\) of the game are functions \(P_{h}:()\) for all \(h[H]\). At time \(h\), if player \(\) takes action \(a_{h}^{}\) at state \(s_{h}^{}\), her state will transition according to \(s_{h+1}^{} P_{h}(\,|\,s_{h}^{},a_{h}^{},z_{h}^{})\). The reward functions are denoted as \(r_{h}:()\) for all \(h[H]\). We note that the players in GMFG are heterogeneous. This means that different players will, in general, receive different aggregates from other players. The distribution \(_{1}()\) is the initial state distribution for all the players. A policy for an player \(\) is \(^{}=\{_{h}^{}\}_{h=1}^{H}^{H}\), where \(_{h}^{}:()\) takes action based only on the current state, and \(\) is the set of all these policies.

A policy for all the players \(^{}=^{H}\) is the collection of the policies of each player, i.e, \(^{}=\{^{}\}_{}\). In the following, we denote the state distributions of all the players at time \(h\) and the state distributions of all the players at any time (distribution flow) respectively as \(_{h}^{}=\{_{h}^{}\}_{}\) and \(^{}=\{_{h}^{}\}_{h=1}^{H}= ()^{H}\). Eqn. (1) shows that the aggregate \(z_{h}^{}\) is a function of \(_{h}^{}\) and \(W_{h}\), so to make this dependence explicit, we also write it as \(z_{h}^{}(_{h}^{},W_{h})\).

We consider the entropy-regularized GMFG. It has been shown that the regularization results in policy gradient algorithms converging faster (Shani et al., 2020; Cen et al., 2022). In this game, the rewards of each player are the sum of the original rewards and the negative entropy of the policy multiplied by a constant. In a \(\)-regularized GMFG (\( 0\)), the value function and the action-value function of player \(\) with policy \(^{}\) on the MDP induced by the distribution flow \(^{}\) are defined as

\[V_{h}^{,}(s,^{},^{})=^{^{ }}_{t=h}^{H}r_{t}s_{t}^{},a_{t}^{},z_{t}^ {}(_{t}^{},W_{t})-_{t}^{}(a_{t }^{} s_{t}^{})\,s_{h}^{}=s,\] (2)

\[Q_{h}^{,}(s,a,^{},^{})=r_{h}s,a,z_{ h}^{}(_{h}^{},W_{h})+^{^{}}V_{h+1 }^{,}(s_{h+1}^{},^{},^{})\,|\,s_{h}^ {}=s,a_{h}^{}=a\] (3)

for all \(h[H]\), where the expectation \(^{^{}}\) is taken with respect to the stochastic process induced by implementing policy \(^{}\) on the MDP induced by \(^{}\). The cumulative reward function of player \(\) is defined as \(J^{,}(^{},^{})=_{_{1}}[V_{1} ^{,}(s,^{},^{})]\). Then the notion of an NE is defined as follows.

**Definition 1**.: _An NE of the \(\)-regularized GMFG is a pair \((^{*,},^{*,})\) that satisfies: (i) (player rationality) \(J^{,}(^{*,},^{*,})=_{^{ }^{H}}J^{,}(^{},^{*,})\) for all \(\) up to a zero-measure set on \(\) with respect to the Lebesgue measure. (ii) (Distribution consistency) The distribution flow \(^{*,}\) is equal to the distribution flow induced by implementing the policy \(^{*,}\)._

Similar to the NE for the finite-player games, the NE of the \(\)-regularized GMFG requires that the policy of each player is optimal. However, in GMFGs, the optimality is with respect to \(^{*,}\).

### Mean-Field Games

As an important subclass of GMFG, MFG corresponds to the GMFG with _constant_ graphons, i.e, \(W(,)=p\) for all \(\), \(\). MFGs involve infinite _homogeneous_ players. All the players employ the same policy and thus share the same distribution flow. The aggregate in Eqn. 1 degenerates to \(z_{h}^{}=_{0}^{1}p_{h}^{}=p_{h}\) for all \(\). Here \(_{h}\) is the state distribution of a representative player. Thus, an MFG is denoted by a tuple \((},},,,,_{1})\). The state space, the action space, and the horizon are respectively denoted as \(}\), \(}\), and \(\). Here, the transition kernels \(=\{_{h}\}_{h=1}^{H}\) are functions \(_{h}:()\), and reward functions \(_{h}:()\) for all \(h[H]\). In the MFG, all the players adopt the _same_ policy \(=\{_{h}\}_{h=1}^{H}\) where \(_{h}\). The value function and the action-value function in the \(\)-regularized MFG with the underlying distribution flow \(=\{_{h}\}_{h=1}^{H}()^{H}\) can be similarly defined as Eqn. (2) and (3) respectively as follows

\[_{h}^{}(s,,)=^{}_{t=h}^{H} _{t}(s_{t},a_{t},_{t})-_{t}(a_{t}\!\!s_{t})\,s_{h}= s,\]

\[_{h}^{}(s,a,,)=_{h}(s,a,_{h})+^{} _{h+1}^{}(s_{h+1},,)\,s_{h}=s,a_{h}=a\]

for all \(h[H]\). The cumulative reward is \(^{}(,)=_{_{1}}[_{1}^{}(s,, )]\). The notion of NE can be similarly derived as follows.

**Definition 2**.: _An NE of the \(\)-regularized MFG is a pair \((^{*},^{*})^{H}()^{H}\) that satisfies: (i) (player rationality) \(J^{}(^{*},^{*})=_{^{H}}J^{}(, ^{*})\). (ii) (Distribution consistency) The distribution flow \(^{*}\) is equal to the distribution flow induced by the policy \(^{*}\)._

**Remark 1**.: _Compared with Definition 1, the definition of NE in MFG only involves the policy and the distribution flow of a single representative player, since the agents are homogeneous in MFGs._

## 4 Existence of the NEs in Regularized GMFGs and MFGs

We now state some assumptions to demonstrate the existence of a NE for \(\)-regularized GMFGs.

**Assumption 1**.: _The state space \(\) is compact, and the action space \(\) is finite._

This assumption imposes rather mild constraints on \(\) and \(\). In real-world applications, the states are usually physical quantities and thus reside in a compact set. For the action space, many deep reinforcement learning algorithms discretize the potential continuous action sets into finite sets (Lowe et al., 2017; Mordatch and Abbeel, 2018).

**Assumption 2**.: _The graphons \(W_{h}\) for \(h[H]\) are continuous functions._

The stronger version of this assumption (Lipschitz continuity) is widely adopted in GMFG works (Cui and Koeppl, 2021; Fabian et al., 2022). It helps us to build the continuity of the transition kernels and rewards with respect to players.

**Assumption 3**.: _For all \(h[H]\), the reward function \(r_{h}(s,a,z)\) is continuous on \(()\), that is if \((s_{n},a_{n},z_{n})(s,a,z)\) as \(n\), then \(r_{h}(s_{n},a_{n},z_{n}) r_{h}(s,a,z)\). The transition kernel \(P_{h}(\,|\,s,a,z)\) is weakly continuous in \(()\), that is if \((s_{n},a_{n},z_{n})(s,a,z)\) as \(n\), \(P_{h}(\,|\,s_{n},a_{n},z_{n}) P_{h}(\,|\,s,a,z)\) weakly._

This assumption states the continuity of the models, i.e., the transition kernels and the rewards, as functions of the state, action, and aggregate. We note that the Lipschitz continuity assumption of the model in the previous works implies that our assumption is satisfied (Cui and Koeppl, 2021; Fabian et al., 2022). Next, we state the existence result of regularized GMFG.

**Theorem 1**.: _Under Assumptions 1, 2 and 3, for all \( 0\), the \(\)-regularized GMFG \((,,,H,P,r,W,_{1})\) admits an NE \((^{},^{})\)._

This theorem strengthens previous existence results in Cui and Koeppl (2021) and Fabian et al. (2022) in two aspects. First, our assumptions are weaker. These two existing works require a finite state space and the Lipschitz continuity of the models. In contrast, we only need a compact state space and the model continuity. Second, their results only hold for the unregularized case (\(=0\)), whereas ours holds for any \( 0\). In the proof of Theorem 1, we construct a MFG from the given GMFG and show that an NE of the constructed MFG can be converted to an NE of the GMFG. Then we prove the existence of NE in the constructed regularized MFG. Our existence result for the regularized MFG is also a significant addition to the MFG literature.

**Remark 2**.: _Although we show that an NE of the constructed MFG can be converted to an NE of GMFG, this proof does not imply that GMFG forms a subclass of or is equivalent to MFG. This is because we have only demonstrated the relationship between the NEs of these two games, but the exact realizations of the GMFG and the conceptually constructed MFG may differ. It means that the sample paths of these two games may not be the same, which include the realizations of the states, actions, and rewards of all the players._

We next state the assumption needed for the MFG.

**Assumption 4**.: _The MFG \((},},,,_{1})\) satisfies that: (i) The state space \(}\) is compact, and the action space \(}\) is finite. (ii) The reward functions \(_{h}(s,a,)\) for \(h[H]\) are continuous on \(()\). The transition kernels are weakly continuous on \(()\); that is if \((s_{n},a_{n},_{n})(s,a,)\) as \(n\), \(_{h}(\,|\,s_{n},a_{n},_{n})_{h}(\,|\,s,a,)\) weakly._

Then the existence of the NE is stated as follows.

**Theorem 2**.: _Under Assumption 4, the \(\)-regularized MFG \((},},,,,_{1})\) admits an NE \((,)^{H}()^{H}\) for any \( 0\)._

Our result in Theorem 2 imposes weaker conditions than previous works (Cui and Koeppl, 2021; Anahtarci et al., 2022) to guarantee the existence of an NE. These existing works prove the existence of NE by assuming a _contractive_ property and the finiteness of the state space. They also require a strong Lispchitz assumption (Anahtarci et al., 2022), where the Lipschitz constants of the models should be small enough. In contrast, we only require the continuity assumption in Theorem 2. This is due to our analysis of the operator for the regularized MFG and the use of Kakutani fixed point theorem Guide (2006).

Learning NE of Monotone GMPGs

In this section, we focus on GMPGs with transition kernels that are independent of the aggregate \(z\), i.e., \(P_{h}:\) for \(h[H]\). This model is motivated by the seminal work Lasry and Lions (2007), where the state evolution in continuous-time MFG is characterized by the Fokker-Plank equation. However, the form of the Fokker-Plank equation results in the state transition of each player being independent of other players. This model is also widely accepted in the discrete-time GMFG and MFG literature (Fabian et al., 2022; Perrin et al., 2020; Perolat et al., 2021).

### Monotone GMFG

We first generalize the notion of _monotonicity_ from multi-population MFGs in Perolat et al. (2021) to GMFGs.

**Definition 3** (Weakly Monotone Condition).: _A GMFG is said to be weakly monotone if for any \(^{},^{}( )^{}\) and their marginalizations on the states \(^{},^{}()^{}\), we have_

\[_{}_{a}_{}^{ }(s,a)-^{}(s,a)r_{h}s,a,z_{h}^{} (^{},W_{h})-r_{h}s,a,z_{h}^{}(^{ },W_{h})\,s\, 0\]

_for all \(h[H]\), where \(W_{h}\) is the underlying graphon. It is strictly weakly monotone if the inequality is strict when \(^{}^{}\)._

In two MDPs induced by the distribution flows \(^{}\) of \(^{}\) and \(^{}\) of \(^{}\), the weakly monotone condition states that we can achieve higher rewards at stage \(h[H]\) by swapping the policies. This condition has two important implications. The first is the uniqueness of the NE.

**Proposition 1**.: _Under Assumptions 1, 2, and 3, a strictly weakly monotone \(\)-regularized GMFG has a unique NE for any \( 0\) up to a zero-measure set on \(\) with respect to the Lebesgue measure._

In the following, we denote this unique NE as \((^{*,},^{*,})\), and we aim to learn this NE. The second implication concerns the relationship between the cumulative rewards of two policies.

**Proposition 2**.: _If a \(\)-regularized GMFG satisfies the weakly monotone condition, then for any two policies \(^{}\), \(^{}\) and their induced distribution flows \(^{},^{}\), we have_

\[_{0}^{1}J^{,}(^{},^{})+J^{, }(^{},^{})-J^{,}( ^{},^{})-J^{,}(^{}, {}^{})\, 0\]

_If the \(\)-regularized GMFG satisfies the strictly weakly monotone condition, then the inequality is strict when \(^{}^{}\)._

Proposition 2 shows that if we have two policies, we can improve the cumulative rewards on the MDP induced by these policies by swapping the policies. This implies an important property of the NE \((^{*,},^{*,})\). Since \(^{*,}\) is optimal on the MDP induced by \(^{*,}\), we have \(_{0}^{1}J^{,}(^{*,},^{*,})\, _{0}^{1}J^{,}(^{},^{*,})\, \) for any \(^{}\). Then Proposition 2 shows that \(_{0}^{1}J^{,}(^{*,},^{})\, _{0}^{1}J^{,}(^{},^{})\, \) for any policy \(^{}\) and the distribution flow \(^{}\) it induces. This means that the NE policy gains cumulative rewards not less than any policy \(^{}\) on the MDP induced by \(^{}\). This motivates the design of our NE learning algorithm.

### Policy Mirror Descent Algorithm for Monotone GMFG

In this section, we introduce the algorithm to learn the NE, which is called MonoGMFG-PMD and whose pseudo-code is outlined in Algorithm 1. It consists of three main steps. The first step estimates the action-value function (Line 3). We need to evaluate the action-value function of a policy on the MDP induced by itself. This estimate can be obtained for each player independently by playing the \(_{t}^{}\) several times. We assume access to a sub-module for this and quantify the estimation error in our analysis. The second step is the policy mirror descent (Line 4). Given \(_{t}<1\), This step can be equivalently formulated as

\[^{}_{t+1,h}(\,|\,s)=*{argmax}_{p( )}}{1-_{t}}^{, }_{h}(s,,^{}_{t},^{}_{t}),p- R (p)-D_{}p\|^{}_{t,h}(\,|\,s) \,s,\]where \(R(p)=\! p, p\!\) is the negative entropy function. This step aims to improve the performance of the policy \(_{t}^{}\) on its own induced MDP. Intuitively, since the policy \(^{*,}\) in NE performs better than \(_{t}^{}\) on the MDP induced by \(_{t}^{}\) as shown in Section 5.1, the improved policy \(_{t+1}^{}\) should be closer to \(^{*,}\) than \(_{t}^{}\). The third step mixes the current policy with the uniform policy (Line 5) to encourage exploration.

MonoGMFG-PMD is different from previous NE learning algorithms for monotone GMFG in Perolat et al. (2021), Fabian et al. (2022) in three different ways. First, MonoGMFG-PMD is designed to learn the NE of the \(\)-regularized GMFG with \(>0\), whereas other algorithms learn the NE of the _unregularized_ GMFGs. As a result, our policy improvement (Line 4) discounts the previous policy as \((_{t,h}^{})^{1-_{t}}\), but other algorithms retain \(_{t,h}^{}\). Second, our algorithm is discrete-time and thus amenable for practical implementation. However, other provably efficient algorithms evolve in continuous time. Finally, MonoGMFG-PMD encourages exploration in Line 5, which is important for the theoretical analysis. Such a step is missing in other algorithms.

### Theoretical Analysis for MonoGMFG-PMD with Estimation Oracle

This section provides theoretical analysis for the MonoGMFG-PMD algorithm given an action-value function oracle in Line 3, i.e., \(_{h}^{,}=Q_{h}^{,}\). We denote the unique NE of the \(\)-regularized GMFG as \((^{*,},^{*,})\). For any policy \(^{}\), we measure the distance to the policy \(^{*,}\) of NE using

\[D(^{})=_{0}^{1}_{h=1}^{H}_{_{h}^{*,}} D_{}_{h}^{*,}(\,|\,s_{h}^{})\|_{ h}^{}(\,|\,s_{h}^{})\,.\]

This metric measures the weighted KL divergence between policy \(^{}\) and the NE policy, and the weights are the NE distribution flow \(^{*,}\).

**Theorem 3**.: _Assume that the GMFG is strictly weakly monotone and we have an action-value function oracle. Let \(_{t}==O(T^{-1/2})\) and \(_{t}==O(T^{-1})\) in MonoGMFG-PMD. For any \(>0\) we have_

\[D_{t=1}^{T}_{t}^{}=O T}{T^{1/2}}.\]

Theorem 3 provides the first convergence rate result for a discrete-time algorithm on strictly weakly monotone GMFGs under mild assumptions. In contrast, Perolat et al. (2021), Fabian et al. (2022) only consider the continuous-time policy mirror descent, which is difficult for the practical implementation, and only provide the asymptotic consistency results. Geist et al. (2021) derive exploitability results for a fictitious play algorithm but require the potential structure and the Lipschitzness of the reward function. Our proof for Theorem 3 mainly exploits properties of NE discussed in Section 5.1. Concretely, we use the fact that the policy mirror descent procedure reduces the distance between the policy iterate and the NE as \(D(_{t+1}^{})-D(_{t}^{})_{0}^{1}J^{ ,}(_{t}^{},_{t}^{})-J^{,}( ^{*,},_{t}^{})\,\). Thus, the policy iterate becomes closer to the NE. However, the discretization error and the exploration influence (Line 5) also appear, requiring additional care to show that \(D(_{t}^{})\), in general, decreases.

### Theoretical Analysis for MonoGMFG-PMD with General Function Classes

In this section, we remove the requirement that one is given oracle access to an action-value function and we estimate it in Line 3 of MonoGMFG-PMD using general function classes. We consider the action-value function class \(=_{1}_{H}\), where \(}_{h}\{f:[0,(H- h+1)(1+||)]\}\) is the class of action-value functions at time \(h[H]\). Then we estimate the action-value functions using Algorithm 2.

```
1:Sample \(N\) players \(\{i/N\}_{i=1}^{N}\).
2:The \(i^{ th}\) player implements \(_{t}^{0,i}\) for \(i[N]\), and the other players implement \(_{t}^{}\).
3:Collect data \(\{(s^{i}_{,h},a^{i}_{,h},r^{i}_{,h})\}_{i,,h=1}^{N,K,H}\) of sampled players from \(K\) independent episodes.
4:Initialize \(_{H+1}^{,i}(s,a)=0\) for all \(s\), \(a\) and \(i[N]\).
5:for time \(h=H,,1\)do
6:for Player \(i=1,,N\)(in parallel)do
7:\(_{h}^{,i}=*{argmin}_{f_{h}}_{ =1}^{K}f(s^{i}_{,h},a^{i}_{,h})-r^{i}_{,h}-_{h+ 1}^{,i}(s^{i}_{,h+1})^{2}\).
8:\(_{h}^{,i}(s)=_{h}^{,i}(s,),_{t,h}^{ i/N}(,s)- R_{t,h}^{i/N}(,s)\).
9:endfor
10:endfor
11:Output \(\{_{h}^{,i}\}_{i,h=1}^{N,H}\). ```

**Algorithm 2** Estimation of Action-Value Function

This algorithm mainly involves two steps. The first is involves data collection (Line 3). Here we assign policies to players and collect data from their interactions. We let the sampled \(N\) players implement behavior policies \(\{_{t}^{b,i}\}_{i=1}^{N}\), which can be different from \(\{_{t}^{i/N}\}_{i=1}^{N}\). This will not change the aggregate \(z_{h}^{}(_{h}^{},W_{h})\) for any \(\), since only a zero-measure set of players change their policies. The second is the action-value function estimation (Lines 7 and 8). The action-value function is selected based on the previous value function, and the value function is updated from the derived estimate. This can be implemented in parallel for all players. We highlight that the estimation analysis cannot leverage results from general non-parametric regression [Wainwright, 2019], since the response variable \(_{h+1}^{,i}\) is _not_ independent of \(s^{i}_{,h+1}\) in our setting.

**Assumption 5** (Realizability).: _For any policy \(^{}\) and the induced distribution flow \(^{}\), we have \(Q_{h}^{,}(,,^{},^{})_{h}\) for \(h[H]\)._

This assumption ensures that we can find the nominal action-value function in the function class. For a policy \(^{H}\) and a function \(f:\), we define the operator \((_{h}^{}f)(s,a)=_{s^{} P_{h}(|s,a)}[  f(s^{},),_{h+1}(|s^{})- R(_{ h+1}(|s^{}))]\). For a policy \(^{}\) and the induced distribution flow \(^{}\), we have \(Q_{h}^{,}(s,a,^{},^{})=r_{h}(s,a,z_{h}^{ })+(_{h}^{^{}}Q_{h+1}^{,})(s,a)\).

**Assumption 6** (Completeness).: _For any policy \(^{}\) and the induced distribution flow \(^{}\), we have that for all \(f_{h+1}\), \(r_{h}(,,z_{h}^{}(_{h}^{},W_{h}))+(_{h }^{^{}}f)_{h}\) for all \(\), \(h[H-1]\)._

This completeness assumption ensures that the estimates from \(\) also satisfy the relationship between nominal action-value functions through \(_{h}^{^{}}\). These realizability and completeness assumptions are widely adopted in the off-policy evaluation and offline reinforcement learning literature [Uehara et al., 2022, Xie et al., 2021b].

**Assumption 7**.: _The reward functions \(\{r_{h}\}_{h=1}^{H}\) are Lipschitz in \(z\), i.e., \(|r_{h}(s,a,z)-r_{h}(s,a,z^{})| L_{r}\|z-z^{}\|_{1}\) for all \(s,a,h[H]\). The graphons \(W_{h}\) for \(h[H]\) are Lipschitz continuous functions, i.e., there exists a constant \(L=L_{W}>0\) (depending only on \(W=\{W_{h}\}_{h=1}^{H}\)) such that \(|W_{h}(,)-W_{h}(^{},^{})| L_{W}(|- ^{}|+|-^{}|)\) for all \(,^{},,^{}\), and \(h[H]\)._

The Lipschitzness assumption is common in the GMFG works [Parise and Ozdaglar, 2019, Carmona et al., 2022, Cui and Koeppl, 2021b]. It helps us to approximate the action-value function of a player by that of sampled players. We denote the state distributions of player \(i\) induced by policy \(_{t}^{{ b},i}\) as \(_{t}^{{ b},i}\). Then we require the behavior policies \(\{_{t}^{{ b},i}\}_{i=1}^{N}\) to satisfy the following requirements.

**Assumption 8**.: _For any \(t[T]\), the behavior policies explore sufficiently. More precisely, for any policy \(^{H}\) and induced distributions \(()^{H}\), we have \(_{s,a}_{h}(a\,|\,s)/_{t,h}^{,i}( a\,|\,s) C_{1}\) and \(_{s}_{h}(s)/_{t,h}^{,i}( s) C_{2}\) for \(h[H]\) and \(i[N]\) where \(C_{1},C_{2}>0\) are constants._

This assumption guarantees that the behavior policies explore the actions that may be adopted by \(_{t}^{}\) and \(^{*,}\). Such an assumption is widely adopted in offline reinforcement learning and off-policy evaluation works (Uehara et al., 2022; Xie et al., 2021b).

**Theorem 4**.: _Assume that the GMFG is weakly monotone and that Assumptions 5, 6, 7, and 8 hold. Let \(_{t}==O(T^{-1/2})\) and \(_{t}==O(T^{-1})\) in Algorithm 1 (MonoGMFG-PMD). Then with probability at least \(1-\), Algorithms 1 and 2 yield_

\[D_{t=1}^{T}_{t}^{}=O {^{2}T}{}+C_{1}C_{2}B_{H}^{2}}{ }_{}(5B_{H}/K,_{[H]})}{}+ ,\]

_where \(B_{H}=H(1+||)\), and \(_{}(5B_{H}/K,_{[H]})=_{h[H]}_{ }(5B_{H}/K,_{h})\) is the \(_{}\)-covering number of the function class._

The error in Theorem 4 consists of both the optimization and estimation errors. The optimization error corresponds to the first term, which also appears in Theorem 3. The estimation error consists of the generalization error and the approximation error, in the second and third terms respectively. When the function class \(\) is finite, this term scales as \(O(K^{-1/2})\), which originates from the fact that we estimate the action-value function from the empirical error instead of its population counterpart. The approximation error scales as \(O(N^{-1})\). This term originates from the fact that the action-value function of player \(\) is approximated by that of the sampled player near \(\). To learn a policy that is at most \(>0\) far from the NE, we can set \(T=(^{-2})\), \(K=(^{-2})\), and \(N=(^{-1})\), which in total results in \(TK=(^{-4})\) episodes of online plays.

## 6 Experiments

In this section, we conduct experiments to corroborate our theoretical findings. We run different algorithms on the Beach Bar problem Perrin et al. (2020); Fabian et al. (2022). The underlying graphons are set to Stochastic Block Model (SBM) and exp-graphons. The details of experiments are deferred to Appendix B. Since the NEs of the games are not available, we adopt the _exploitability_ to measure the proximity between a policy and the NE. For a policy \(^{}\) and its induced distribution flow \(^{}\), the exploitability for the \(\)-regularized GMFG is defined as

\[(^{})=_{0}^{1}_{^{H}}J ^{,}(,^{})-J^{,}(^{ },^{}).\]

First, the experimental results demonstrate the necessity of modelling the heterogeneity of agents. Figure 1 demonstrates the performance degradation of approximating GMFG by MFG. Here we let the agents play in the GMFG with constant graphons \(W_{h}(,)=p\) for \(p\{0,0.5,1\}\). The agents have oracle access to the action-value function. We observe that this approximation results in gross errors for learning the NEs of GMFGs with non-constant graphons.

Second, the experiments show that the algorithms designed for unregularized GMFG cannot learn the NE of regularized GMFG. We implement the discrete-time version of the algorithm in Fabian et al.

Figure 1: Simulation results for Beach Bar problem with SBM and exp-graphons.

; results marked "Unreg PMD" show that the exploitability first decreases and then increases. In line with the discussion in Section 5.2, this originates from keeping too much gradient knowledge in previous iterates \(_{t}^{}\). The gradient of the policy is largely correct in the several initial iterations, but a large amount of past knowledge results in it deviating in later iterations, since the past knowledge accumulates. In contrast, our algorithm _discounts_ the past knowledge as \((_{t}^{})^{1-_{1}}\).

Finally, the results indicate the influence of action-value function estimation. In the experiments, we run our algorithm when \(N=5,K=300\), \(N=10,K=100\), and \(N=10,K=300\). Figure 1 shows that the algorithm with \(N=10,K=300\) can achieve a smaller error than the algorithms both with \(N=10,K=100\) and \(N=5,K=300\). This is in agreement with Theorem 4.

## 7 Conclusion

In this paper, we focused on two fundamental problems of \(\)-regularized GMFG. Firstly, we established the existence of NE. This result greatly weakened the conditions in the previous works. Secondly, the provably efficient NE learning algorithms were proposed and analyzed in the weakly monotone GMFG motivated by Lasry and Lions . The convergence rate of MonoGMFG-PMD features the first performance guarantee of discrete-time algorithm without extra conditions in monotone GMFGs. We leave the lower bound of this problem to the future works.