# User-Creator Feature Polarization in Recommender Systems with Dual Influence

Tao Lin

Harvard University

tlin@g.harvard.edu

&Kun Jin1

Google

kunjin@google.com

&Andrew Estornell

ByteDance

andrew.estornell@bytedance.com

&Xiaoying Zhang

ByteDance

zhangxiaoying.xy@bytedance.com

&Yiling Chen

Harvard University

yiling@seas.harvard.edu

&Yang Liu

University of California, Santa Cruz

yangliu@ucsc.edu

###### Abstract

Recommender systems serve the dual purpose of presenting relevant content to users and helping content creators reach their target audience. The dual nature of these systems naturally influences both users and creators: users' preferences are affected by the items they are recommended, while creators may be incentivized to alter their content to attract more users. We define a model, called user-creator feature dynamics, to capture the dual influence of recommender systems. We prove that a recommender system with dual influence is guaranteed to polarize, causing diversity loss in the system. We then investigate, both theoretically and empirically, approaches for mitigating polarization and promoting diversity in recommender systems. Unexpectedly, we find that common diversity-promoting approaches do not work in the presence of dual influence, while relevancy-optimizing methods like top-\(k\) truncation can prevent polarization and improve diversity of the system.

## 1 Introduction

From restaurant selection, video watching, to apartment renting, recommender systems play a pivotal role across a plethora of real-world domains. These systems match users with content they like, and help creators (those producing the content) identify their target audiences. Nevertheless, behind such success, concerns have emerged regarding possible harmful outcomes of recommender systems, in particular, _filter bubbles_ and _polarization_ - outcomes with insufficient _recommendation diversity_ and _creation diversity_. Recommendation diversity, meaning the diversity of the contents recommended to a user, is key to users' engagement and retention on the platform. Meanwhile, creation diversity, meaning the variety of content created on the platform, is a determinant of the platform's long-term health. In extreme cases, insufficient creation diversity can lead to consensus or polarization, where the latter can cause conflict and hatred, diminish people's mutual understanding, and cause societal crises. Therefore, from both business and social responsibility perspectives, championing and improving diversity in recommender systems is equally important as optimizing recommendation relevancy.

There is increasing emphasis in academia and industry on investigating and improving the diversity of recommender systems, combating filter bubbles and polarization. Popular diversity-boosting approaches include applying post-processing procedures such as re-ranking [11; 47] and setting diversity-aware objectives in addition to relevance maximization [38; 44; 22; 39; 12]. These methods aim to increase the recommendation diversity for users. Assuming that the contents on the platform are static, these methods have been shown to bring diversity gain to the system.

However, an important aspect that is overlooked in the aforementioned approaches is that: users and contents on a recommendation platform are not static entities - they can be _influenced_ by the recommendation made by the system. In content creation platforms like YouTube, TikTok, and Twitter, recommendations naturally affect both content users and content creators. It is well known that the exposure to recommended items can shift a user's preference [24; 26; 14]. On the other hand, the creators have the incentive to change their creation styles constantly to attract their audience better (and to make more profits from the platform) [15; 20; 23]. While the effects of recommendation on either users or creators have been investigated separately, to our knowledge no previous work considers both effects. The dual influence of recommendation on users and creators causes complicated dynamics where users and creators interact and their preferences evolve together. Such evolution might exacerbate filter bubble and polarization effects. Whether the aforementioned diversity-boosting approaches still work in a dynamic environment with dual influence is questionable.

Our contributionsThe first contribution of our work is to define a novel, natural dynamics model that captures the dual influence of a recommender system on users and creators, which we call user-creator feature dynamics (Section 2). We leverage the users' and items'/creators' embedding vectors to represent their preferences and creation styles, and use cosine similarity to characterize the relevance of creations and users' interests (which is common in the recommender system literature and practice). This model allows us to formally reason about the impact of various design choices on the long-term diversity of a recommender system with dual influence.

Our second contribution is to demonstrate that, under realistic conditions, the user-creator feature dynamics of any recommender system with dual influence must unavoidably converge to polarization (Section 3), i.e., the preferences of users and the contents of creators will become tightly clustered into two opposite groups, significantly reducing the diversity of the system. We demonstrate that this phenomenon still occurs even after applying diversity-boosting interventions to the system.

Then, (in Section 4) we investigate some real-world designs of recommendation algorithms in order to look for techniques that mitigate polarization. Interestingly, we find that some common efficiency-improving methods, such as top-\(k\) truncation, can both prevent the system from polarization and improve the creation diversity. We also provide empirical results (Section 5) on both synthetic and real-world (MovieLens) data. As predicted by our theory, we find that systems with dual influence more easily converge to polarization under diversity-boosting designs, while efficiency-oriented and relevance-optimizing designs can in fact improve the long-term diversity of the system. This could explain why polarization does not always happen in reality. Section 6 concludes.

### Related Work

Diversity in recommendationsDiversity, filter bubbles, and polarization in recommendations have been important research topics in recent years, and they are closely related concepts with different focuses. On the one hand, filter bubbles are frequently defined as decreasing recommendation diversity over time , which describes both the process and the outcome of insufficiently diverse recommendations. On the other hand, polarization describes the negative outcome of insufficient mutual understanding between people . In content platforms, an example of polarization is people creating content with strong agreement or disagreement with other content under the same topic, e.g., political opinions. To combat these negative outcomes, previous works propose diversity-boosting approaches including re-ranking [11; 47] and diversity-aware objective optimization [38; 44; 22; 39; 12; 45]. Despite having positive effects in situations where user preferences and creation styles are fixed, these approaches overlooked the dynamic nature of recommender systems and our work shows that certain approaches will make long-term outcomes worse under the dual influence.

Opinion dynamicsOpinion dynamics study the effect of people exchanging opinions with others on social networks [37; 17; 29; 4]. Our model of a recommender system with dual influence on usersand creators resembles a bipartite social network, and our conclusion that the system converges to polarization is conceptually similar to people reaching consensus on social networks [1; 10; 31; 46]. However, the technique we use to prove our conclusion (absorbing Markov chain) significantly differs from the main technique (stability of ODE) in the mentioned works.

Performative effects of recommender systemsThe phenomenon that predictive systems like recommender systems can impact the individuals interacting with those systems (e.g., users and creators) is related to the literature of performative prediction [34; 18]. These impacts can be direct, such as individuals ostensibly modifying their features in order to obtain more desirable outcomes . Prior works on the performative effects of recommender systems (e.g., [7; 24; 14; 41; 15; 42; 35; 20; 3; 43; 2; 23]) only consider one-sided impact, either on users or on creators. Differing from them, our work studies two-sided impacts, i.e., on both users and creators. We provide a table to compare our work with previous works in Appendix A.

## 2 Model: User-Creator Feature Dynamics

We define a _dynamics_ model for user preferences and content/creator features in a recommender system. Let \(^{t}=[^{t}_{j}]_{j=1}^{m}=[^{t}_{1},,^{t}_{m}] ^{d m}\) be a population of \(m\) users and \(^{t}=[^{t}_{i}]_{i=1}^{n}=[^{t}_{1},,^{t}_{n}] ^{d n}\) be a population of \(n\) creators at time \(t\), where each vector \(^{t}_{j},^{t}_{i}^{d-1}\) represent the preference/feature vector of each user and creator respectively, assumed to be on the unit sphere \(^{d-1}\) with \(_{2}\)-norm. Then \((^{t},^{t})\) denotes the state of the dynamics at time \(t\). The dynamics evolve as follows at each time step \(t 0\):

**1) Recommendation:** Each user \(j[m]\) is recommended a creator, where creator \(i[n]\) is chosen with a probability

\[p^{t}_{ij}=p^{t}_{ij}(^{t},^{t}).\] (1)

While we allow a wide array of different functions \(p^{t}_{ij}()\), a common example of such functions is the so-called _softmax function_:

\[p^{t}_{ij}=(^{t}_{j},^{t};)=^{t}_{j},^{t}_{i})}{_{i=1}^{n}( ^{t}_{j},^{t}_{i})}.\] (2)

A larger \(\) means that the recommendation is more sensitive to the _relevance_ of a creator to a user, measured by \(^{t}_{j},^{t}_{i}\).

**2) User update:** After recommendation, each user \(j[m]\) updates their feature vector \(^{t}_{j}\), based on which creator, say \(i^{t}_{j}\), was recommended to them:

\[^{t+1}_{j}=^{t}_{j}+_{u}f(^{t}_{i^{ }_{j}},^{t}_{j})^{t}_{i^{}_{j}}.\] (3)

Here, \(_{u}\) is a parameter controlling the rate of update, \(f(_{i},_{j})\) is a function that quantifies the impact of creator \(i\)'s content on user \(j\) (discussed in detail later), and \(()=}{\|\|_{2}}\) is the projection back onto the unit sphere. Our user update model generalizes , which considers \(^{t+1}_{j}=(^{t}_{j}+_{u}^{t}_{i^{ }_{j}},^{t}_{j}^{t}_{i^{}_{j}})\), by replacing the inner product with a general function \(f\).

**3) Creator update:** Creators also update their feature vectors based on which users are recommended their content. For each creator \(i[n]\), let \(J^{t}_{i}=\{j:i^{t}_{j}=i\}\) be the set of users being recommended creator \(i\), then \(^{t}_{i}\) is updated by:

\[^{t+1}_{i}=^{t}_{i}+}{|J^{t}_{i}|} _{j J^{t}_{i}}g(^{t}_{j},^{t}_{i})^{t}_{j},\] (4)

where \(_{c}\) is a parameter controlling the rate of update, and \(g(_{j},_{i})\) is a function that quantifies the impact of user \(j\) on creator \(i\).

Impact functions \(f\) and \(g\)Our results apply to any impact functions \(f\) and \(g\) that satisfy the following natural assumptions. First, \(f(_{i},_{j})\) and the inner product \(_{i},_{j}\) have the same sign: \(f(_{i},_{j})\) is \(>0&_{i},_{j}>0\\ <0&_{i},_{j}<0\\ =0&_{i},_{j}=0.\) This means that if a user _likes_ the content (\(^{t}_{i},^{t}_{j}>0\)), then the user vector \(_{j}^{t}\) will be updated _towards_ the direction of the creator vector \(_{j}^{t}\). If the user _dislikes_ the content \((_{i}^{t},_{j}^{t}<0)\), then the user vector \(_{j}^{t}\) will move _away from_\(_{j}^{t}\). Such "biased assimilation" user behavior is well documented in the literature . Further, we assume upper and lower bounds on \(|f|\):

\[|f(_{i},_{j})| 1,|f(_{i},_{j})| L_{f}>0 _{i},_{j} 0.\]

The lower bound \(|f(_{i},_{j})| L_{f}\) means that the exposure to an item that a user likes or dislikes always has some non-negligible impact on the user's preference. For example, \(f(_{i},_{j})=(_{i},_{j} )a+b_{i},_{j}\) satisfies both assumptions when \(L_{f}=a>0\) and \(b 0\).

For \(g\), likewise assume that its sign is the same as \(_{j},_{i}\): \(g(_{j},_{i})\) is \(>0&u\ (_{j},_{i})>0\\ <0&u\ (_{j},_{i})<0\) Intuitively, this captures the incentive of a creator who aims to maximize the average ratings from users who are recommended their items. On video platforms for example, if the creators are rewarded based on the average rating of their videos, they will try to reinforce their creation styles based on the users who give positive feedback (\(_{j},_{i}>0\)) so that their creations are more likely to be recommended to those users. Meanwhile, the creators will also change their creation styles based on negative feedback (\(_{j},_{i}<0\)), but in the opposite direction of the negative-feedback users' interests, so that their creations are less likely to be recommended to those users. Taking both scenarios into account, the creator moves towards the weighted average of user preferences \(_{j J_{i}^{t}}g(_{j}^{t},_{i}^{t})_{j}^{t}\), which is captured by our update rule (4). A particular example of \(g\) is the sign function \(g(_{j},_{i})=(_{j},_{i} )\{-1,0,1\}\). We will only consider the sign function \(g\) in order to simplify the theoretical presentation. We believe that all our results can be generalized to other \(g\) functions satisfying similar conditions as \(f\); the details are left as future work.

## 3 Unavoidable Polarization

Having defined the user-creator feature dynamics in a recommender system with dual influence, we now theoretically study how such dynamics evolve. Our main result is: if every creator can be recommended to every user with some non-zero probability, then the dynamics must eventually _polarize_.

**Definition 3.1** (consensus and bi-polarization).: _Let \(R>0\). The dynamics \((^{t},^{t})\) is said to reach:_

* \(R\)-consensus _if there exists a vector_ \(^{d}\) _such that every feature vector is_ \(R\)_-close to_ \(\)_:_ \(_{j}^{t},\|_{j}^{t}-\|_{2} R\) _and_ \(_{i}^{t},\|_{i}^{t}-\|_{2} R\)_._
* \(R\)-bi-polarization _if there exists a vector_ \(^{d}\) _such that every feature vector is_ \(R\)_-close to_ \(+\) _or_ \(-\)_:_ \(_{j}^{t}\)_,_ \(\|_{j}^{t}-\|_{2} R\) _or_ \(\|_{j}^{t}+\|_{2} R\)_, and_ \(_{i}^{t}\)_,_ \(\|_{i}^{t}-\|_{2} R\) _or_ \(\|_{i}^{t}+\|_{2} R\)_._

_The dynamics is said to reach \((R,)\)-consensus (or \((R,)\)-bi-polarization) if the dynamics reaches \(R\)-consensus (or \(R\)-bi-polarization) with the vector \(\)._

Consensus is any state where all users and creators have similar feature vectors (with maximum difference \(R\)), implying that they have similar interests or preferences. Bi-polarization is any state where all users and creators are clustered into two groups with exactly opposite features (e.g., Republicans vs Democrats). Mathematically, consensus is a special case of bi-polarization.

**Proposition 3.2**.: _Bi-polarization states are absorbing: once the dynamics reaches \((R,)\)-bi-polarization with some \(R\) and \(^{d-1}\), it will satisfy \((R,)\)-bi-polarization forever. The same holds for consensus._

A natural property of a recommender system is that every creator can be recommended to every user with some non-zero probability: \(p_{ij}^{t} p_{0}>0\) with some constant \(p_{0}\). This is satisfied by the softmax function, which is a rough model of real-world recommendation algorithms [13; 26]: \(p_{ij}^{t}=_{j}^{t},_{j}^{t}))}{_{i=1}^{n} ((_{j}^{t},_{j}^{t}))} =p_{0}>0\). Moreover, many large-scale real-world recommendation systems (e.g., Yahoo!  and Kuaishou ) intentionally insert small random traffic attempting to improve recommendation diversity or explore users' interests [25; 40], which will cause all recommendation probabilities to be non-zero. We show in Theorem 3.3 that, however, a recommender system satisfying \(p_{ij}^{t} p_{0}>0\) must converge to polarization, under some additional conditions on the users' and creators' update rates:

**Theorem 3.3**.: _Suppose \(g(_{j},_{i})=(_{j},_{i})\), the update rates \(_{c}L_{f}}{2}\) and \(_{u}<\), and the recommendation probability \(p_{ij}^{t} p_{0}>0, i,j,t\). Then, from almost all initial states, the dynamics \((^{t},^{t})\) will eventually reach \(R\)-consensus or \(R\)-bi-polarization for any \(R>0\)._

In other words, if the users' and creators' updates are not too fast and all recommendation probabilities are non-zero, then all users and creators will eventually converge to at most two clusters (regardless of the feature dimension \(d\)). Since creators in one cluster produce similar contents, users in such a polarized system can never receive diverse recommendations. This means that the naive attempt of imposing \(p_{ij}^{t} p_{0}>0\) cannot improve the diversity of a recommender system with dual influence. The conditions on the update rates \(_{u},_{c}\) are only assumed to simplify the proof of Theorem 3.3. Our experiments (in Section 5) will show that polarization still occurs even without those conditions.

Theorem 3.3 does not characterize the rate of convergence of the user-creator feature dynamics to polarization, which we leave as an open question.

The proof of Theorem 3.3 is an absorbing Markov chain argument. It uses the following lemma:

**Lemma 3.4**.: _Suppose \(_{c}L_{f}}{2}\) and \(_{u}<\). For any \(R>0\), for almost every state \((^{t},^{t})\) in the state space, there exists a path \((^{t},^{t})(^{t+1},^{t+1})(^{t+T},^{t+T})\) of finite length that leads to an \(R\)-bi-polarization state \((^{t+T},^{t+T})\)._

The proof of this lemma (in Appendix F) is involved. It uses induction on the number of creators \(n\). The base case of \(n=1\) is proved by a potential function argument. For \(n 2\), we first construct a path that leads the _subsystem_ of \(n-1\) creators and all users to \(R\)-bi-polarization. Then, depending on where the remaining creator is, we construct a sequence of recommendations that leads the remaining creator to one of the two clusters formed by the \(n-1\) creators and all users. Such recommendations will move some users out of the formed clusters, which requires extra care in the proof.

Proof of Theorem 3.3.: For any state \((^{t},^{t})\) in the state space, by Lemma 3.4 there exists a path \((^{t},^{t})(^{t+T},^{t+T})\) of length \(T\) that leads to \(R\)-bi-polarization. Because every creator can be recommended to a user with probability at least \(p_{0}\), each transition \((^{t^{}},^{t^{}})(^{t^{}+1},^{t^ {}+1})\) happens with probability at least \(p_{0}^{m}\). So, the path of length \(T\) has probability at least \(p_{0}^{mT}>0\), and the probability that the dynamics _does not_ reach \(R\)-bi-polarization after \(KT\) steps is at most \((1-p_{0}^{mT})^{K}\), which \( 0\) as \(K\). Therefore, with probability \(1\) the dynamics will reach \(R\)-bi-polarization eventually. 

## 4 Discussions on Real-World Designs

Next, we discuss how 4 types of real-world recommender system designs affect the user-creator feature dynamics: top-\(k\) truncation, threshold truncation, diversity-boosting, and uniform traffic.

(1) Top-\(k\) TruncationA prevalent practice in modern two-stage recommendation algorithms on large-scale platforms, such as YouTube , is to first filter out items that are unlikely to be relevant to a user, then make recommendations from the remaining items. In particular, we consider the top-\(k\) truncation policy: for every user \(j\), find the \(k\) most relevant creators, namely, the \(k\) creators whose inner products with the user \(_{i}^{t},_{j}^{t}\) are largest (equivalently, the \(k\) creators whose probabilities \(p_{ij}^{t}\) of being recommended to user \(j\) are highest), then recommend one of those \(k\) creators to user \(j\) with probability proportional to \(p_{ij}^{t}\). The other creators will not be recommended. This practice significantly reduces the computation cost and improves the relevancy of recommendations. Interestingly, we show that such a practice also has the potential to improve the long-term diversity of a recommender system with dual influence.

**Definition 4.1** (clusters).: _We say a state \((^{t},^{t})\) forms \(q\) clusters if there exist \(_{1},,_{q}^{d}\) and a small number \(R>0\) such that every feature vector is in the \(_{2}\) ball of some \(_{i}\) with radius \(R\) (denoted by \(B(_{},R)=\{:\|-_{}\|_{2} R\}\)), and \(B(_{},2R) B(_{^{}},2R)=\) for \(^{}\)._

It is clear that consensus has a single cluster, and bi-polarization has two.

**Proposition 4.2**.: _With top-\(k\) truncation, there exist states \((^{t},^{t})\) that form \( n/k\) clusters and are absorbing (i.e., once the system forms \( n/k\) clusters forever)._This result is in contrast with Theorem 3.3 which shows that a recommender system where every creator can be recommended to every user (\(p_{ij}^{t}>0\)) is doomed to polarize. With top-\(k\) truncation where some \(p_{ij}^{t}=0\), polarization can be avoided. Experiments in Section 5.3 support our prediction that top-\(k\) truncation can reduce polarization and improve diversity.

(2) Threshold TruncationBesides top-\(k\) truncation, threshold truncation is another way to filter out irrelevant creators: set a threshold \([-1,1]\) such that any user-creator pair with inner product \(_{i},_{j}<\) is not recommended. A natural choice is \(=0\), meaning that users will not receive recommendations predicted to be "disliked" by them. Increasing \(\) is similar to increasing the \(\) in the softmax function, which improves recommendation relevance.

**Proposition 4.3**.: _In \(d\)-dimensional feature space, if user-creator pairs with \(_{i},_{j}<0\) are not recommended, then there exist stable states with \(d+1\) clusters._

Although truncation at \(=0\) allows stable states with \(d+1\) clusters to exist, the dynamics does not necessarily converge to such states; it can still end up with stable states with fewer clusters. In fact, experiments (in Appendix B.2) show that truncation at \(=0\) is _not good_ for diversity and causes severe polarization, while truncation at a large threshold like \(=0.707\) is better at reducing polarization.

(3) Diversity Boosting Diversity boosting aims to explore users' interests and improve users' experience by diversifying recommendation. For example, when making recommendations, the model optimizes the objective:

\[h_{rel}(_{i},_{j})+ h_{div}(list_{i},_{j}),\] (5)

where \(h_{rel},h_{div}\) rewards the recommendation relevance and diversity respectively and \(list_{i}\) records the recent list of recommended items to user \(i\). \(h_{div}\) can take a simple form of \(_{j^{} list_{i}}1-_{j^{}},_{j}\), and \(>0\) controls the strength of diversity-boosting. Despite being successful when users' preferences and items are fixed, this design alone cannot prevent bi-polarization in our dual-influence dynamics, since the conditions in Theorem 3.3 are still satisfied and the users' and creators' update rules remain the same. Experiments in Section 5.2 support our claim.

(4) Uniform TrafficAdding a small fraction of uniform traffic to the personalized recommendations is another method proposed in previous works to improve recommendation diversity or to explore user preferences [25; 16; 9; 8; 30]. This method gives a non-zero lower bound on the probability of every creator being recommended to every user. So, as a corollary of our Theorem 3.3, it causes a recommender system with dual influence to polarize. Such an observation is striking as it demonstrates that optimizing for recommendation diversity in a static setting can ultimately lead to a huge loss of the system diversity in the long run.

## 5 Experiments

We present experimental results on the behavior of user-creator feature dynamics on synthetic data and real-world (MovieLens 20M) data and the effect of top-\(k\) truncation and threshold truncation on the dynamics.

### Synthetic Data Experiments

SetupThe dynamics is initialized by randomly generating user and creator features on the unit sphere in \(^{d}\). We pick \(d=10\), number of creators \(n=50\), number of users \(m=100\). We use the softmax recommendation probability function (2). We simulate the dynamics for \(T=1000\) steps, repeated \(100\) times each with a new initialization. We choose the sign impact function \(g(_{j},_{i})=(_{j},_{i})\) for creator updates. For user updates, we choose inner product \(f(_{i},_{j})=_{i},_{j}\). The inner product function is studied in previous works on users' preference dynamics (but not creators') . Note that the inner product does not satisfy the condition \(|f(_{i},_{j})| L_{f}\) needed in Theorem 3.3. However, we still observe convergence to polarization in nearly all experiments. Thus, even when this condition does not hold, users and creators still tend towards polarization in practice.

Three key parameters in our model are \(\) (sensitivity of the softmax function), \(_{c}\) (creator update rate), and \(_{u}\) (user update rate). We set them to \(=1,_{c}=_{u}=0.1\), and change one parameter at a time to see its effect on the dynamics. We also test what happens when some dimensions of the user features are _fixed_ features that are not updated.

MeasuresTo quantify the behavior of the dynamics, given user and creator feature vectors \((,)\) we compute the following measures, which cover diversity, relevancy, and polarization of the system:

* _Creator Diversity_ (CD): diversity of the creator features, measured by their average pairwise distance : \(()=_{i=1}^{n}_{j i}\|_{i}- _{j}\|\).
* _Recommendation Diversity_ (RD): diversity of the contents recommended to a user, measured by the weighted variance of the contents: \((,;)=_{j=1}^{m}_{i=1}^{n}p_{ij }\|_{i}-}_{j}\|^{2}\), where \(}_{j}=_{i=1}^{n}p_{ij}_{i}\) and \(p_{ij}=_{j},_{i}))}{_{i=1}^{n}(( {u}_{j},_{i}))}\).
* _Recommendation Relevance_ (RR): relevance of the contents recommended to a user, measured by the weighted average of inner products: \((,;)=_{j=1}^{m}_{i=1}^{n}p_{ij }_{j},_{i}\).
* _Tendency to Polarization_ (TP): This is a novel measure we propose to quantify how close the system is to consensus or bi-polarization, measured by the average absolute inner products between the creators: \(()=}_{i=1}^{n}_{k=1}^{n}|_{i},_{k}|\). \(()\) being closer to 1 means that the system is more polarized, because the term \(|_{i},_{k}|\) is 1 iff the two vectors \(_{i},_{k}\) are equal or opposite to each other.

It is worth noting that a high creator diversity is necessary for simultaneously achieving high recommendation relevance and high recommendation diversity. For example, they cannot be simultaneously achieved in a polarized state.

Sensitivity Parameter \(\)A larger \(\) means that a user will be recommended more relevant content/creator with a higher probability. \(=0\), on the other hand, means that the user receives uniform recommendations across all creators. **Our main observation** from the experiments is: _a larger \(\) leads to higher creator diversity and alleviated polarization in the long run_.

Figure 1 shows snapshots of the dynamics at different time steps under different \(\) values. Here, we choose dimension \(d=3\) instead of \(10\) so the feature vectors can be visualized on a 3d sphere. We see that the system tends to form more clusters at time \(t=200\) as \(\) increases.

Figure 2 shows the changes of the 4 measures CD, RD, RR, TP over time under different \(\) values. We see that a more diverse recommendation policy (a smaller \(\)) leads to lower creator diversity and a higher level of polarization in the long run. In particular, while Creator Diversity reaches a similar level under different \(\) in the end, it _drops at a slower rate_ with a _larger \(\)_ (see \(=5,6\)). Moreover, from the plot of Tendency to Polarization, we see that a larger \(\)_alleviates_ polarization, which means improvement in the diversity of the whole system.

An explanation for our observation is the following: When \(\) is smaller, each user receives more uniform recommendations across all creators. So, for different creators, the sets of users recommended

Figure 1: Snapshots of the dynamics simulated with the same initialization but different recommendation sensitivity \(\). A larger \(\) resulted in more clusters at time step \(t=200\).

to those creators have larger intersections. Since the creator updates are based on the sets of recommended users, different creators will be moving towards more similar directions. This leads to faster polarization. One can also predict this observation from Theorem 3.3: when \(\) is large, the minimum recommendation probability \(p_{0}\) of the softmax function tends to \(0\), so it might take a long time for the system to converge to polarization, while with a small \(\) the system polarizes quickly.

Update Rates \(_{c}\) and \(_{u}\)A larger \(_{c}\) means that creator features are updated faster, and intuitively should lead to faster polarization. This is validated in experiments: Figure 3 shows that a larger \(_{c}\) indeed causes more extreme polarization and lower diversity (both CD and RD). A larger \(_{u}\) means that user features are updated faster. It has a similar effect of exacerbating polarization as \(_{c}\) does, as shown in Figure 4.

Number of Fixed DimensionsWe also consider the scenario where some dimensions of the user feature vectors are fixed features and thus not updated from round to round (e.g., age, gender), which is a realistic scenario. Detailed results are in Appendix B.1. The **main observation** is: _as the number of fixed dimensions increases, the diversity of the system improves and the degree of polarization is reduced._ This is similar to the effect of decreasing user update rate \(_{u}\). The observation that

Figure 4: Changes of measures over time under different user update rate \(_{u}\), on synthetic data

Figure 3: Changes of measures over time under different creator update rate \(_{c}\), on synthetic data

Figure 2: Changes of measures over time under different sensitivity parameter \(\), on synthetic data. \(=0\) means uniform (non-personalized) recommendation. \(=\) means hard-max recommendation: only recommend the single most relevant creator to a user. Larger \(\) reduces the tendency to polarization.

fixed dimensions of user features help to improve diversity might be a reason why the recommender systems in practice are not as polarized as our theoretical prediction.

### Real-World Data Experiments

In this part, we conduct experiments on the MovieLens 20M dataset . We use a real-world two-tower recommendation model with 16-dimensional tower tops as the user and creator embeddings (Figure 9). The model is initialized by fitting a two-tower model  on the existing MovieLens rating data and using the tower tops as the initial user and creator embeddings. Then we follow Algorithm 1 to simulate the dynamics.

Figure 5 shows the effect of the recommendation sensitivity parameter \(\) on the system. Similar to the synthetic data experiments, a smaller \(\) (more diverse recommendation for the users in the short term) results in faster polarization. We note that the joint results on CD and TP are more informative than each one alone: despite \(=0\) has a higher creator diversity than \(=2\) at \(T=500\), the system reaches polarization more quickly under \(=0\). The higher creator diversity under \(=0\) is because the two clusters in the bi-polarized state are more balanced so the average pairwise distance between the creators is higher under \(=0\) than under \(=2\).

Figure 6 shows the effect of using diversity-aware objective (Eq. 5) for diversity boosting. We see that myopically promoting the short-term recommendation diversity (using a larger \(\)) results a higher creation diversity but also a higher tendency to polarization. A possible explanation for this phenomenon is, similar to the case with \(\), the system polarizes into two balanced clusters which actually have a large average pairwise distance. In this case, Tendency to Polarization is a better measure for diversity loss than Creator Diversity (average pairwise distance).

### Top-\(k\) Truncation and Threshold Truncation

We experimented with top-\(k\) truncation on the synthetic data (Table 1) and the MovieLens dataset (Appendix C). Our **main observation** is: _a small \(k\) improves the diversity of the recommender system and reduces polarization_. This is consistent with our theoretical prediction (Proposition 4.2). However, there is a tradeoff between the diversity of recommendations to users (RD) and the diversity of creations in the system (CD and TP). A top-\(k\) truncation policy with small \(k\) is "not diverse" for users because it exposes a user only to a small set of contents. However, such a policy can lead to a more diverse outcome in the whole system. This tradeoff is worth further studying.

Figure 5: Experiment on MovieLens 20M dataset under different recommendation sensitivity \(\)

Figure 6: Experiment on MovieLens 20M dataset with diversity-aware objective under different \(\)

We also experimented with threshold truncation on synthetic data (Appendix B.2) and MovieLens data (Appendix C). The effect of a large truncation threshold \(\) is similar to the effect of a small \(k\) in top-\(k\) truncation.

## 6 Conclusion

Our work defines a dynamics model to capture the dual influence of recommender systems on user preferences and content creation. Although our model is a theoretical abstraction, we believe that it captures the essence of a real-world recommender system, and our effort is an important initial endeavor to study diversity in recommender systems with dual influence. (See Appendix H for some additional discussions on real-world recommender systems.) We specifically point out different concepts of diversity in recommender systems (creation diversity, recommendation diversity, and tendency to polarization) and provide theoretical and empirical evidences to show that, due to dual influence, myopically optimizing recommendation diversity might hurt the long-term creation diversity and result in polarization of the system. We also explore popular design choices in recommender systems and show an interesting and somewhat counter-intuitive result that designs purely targeting efficiency improvement (e.g., top-\(k\) truncation) can alleviate polarization. We believe that the insights from our work are valuable to building healthy and sustainable recommender systems, and our results can inspire more sophisticated solutions for improving the long-term diversity of recommender systems to be developed.