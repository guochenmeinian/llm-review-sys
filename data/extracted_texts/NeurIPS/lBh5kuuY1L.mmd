# TurboHopp: Accelerated Molecule Scaffold Hopping with Consistency Models

Kiwoong Yoo\({}^{1}\)

Owen Oertell\({}^{2}\)

Junhyun Lee\({}^{3}\)

Sanghoon Lee\({}^{1,3}\)

Jaewoo Kang\({}^{*}\)\({}^{1,3}\)

\({}^{1}\)AlGEN Sciences

\({}^{2}\)Cornell University

\({}^{3}\)Korea University

kiwoong.yoo@aigensciences.com, ojo2@cornell.edu, ljhyun33@korea.ac.kr, sanghoon.lee@aigensciences.com, kangj@korea.ac.kr

Corresponding author.

###### Abstract

Navigating the vast chemical space of druggable compounds is a formidable challenge in drug discovery, where generative models are increasingly employed to identify viable candidates. Conditional 3D structure-based drug design (3D-SBDD) models, which take into account complex three-dimensional interactions and molecular geometries, are particularly promising. Scaffold hopping is an efficient strategy that facilitates the identification of similar active compounds by strategically modifying the core structure of molecules, effectively narrowing the wide chemical space and enhancing the discovery of drug-like products. However, the practical application of 3D-SBDD generative models is hampered by their slow processing speeds. To address this bottleneck, we introduce TurboHopp, an accelerated pocket-conditioned 3D scaffold hopping model that merges the strategic effectiveness of traditional scaffold hopping with rapid generation capabilities of consistency models. This synergy not only enhances efficiency but also significantly boosts generation speeds, achieving up to 30 times faster inference speed as well as superior generation quality compared to existing diffusion-based models, establishing TurboHopp as a powerful tool in drug discovery. Supported by faster inference speed, we further optimize our model, using Reinforcement Learning for Consistency Models (RLCM), to output desirable molecules. We demonstrate the broad applicability of TurboHopp across multiple drug discovery scenarios, underscoring its potential in diverse molecular settings. The code is provided at https://github.com/org/TurboHopp

## 1 Introduction

The vast chemical space, with up to \(10^{63}\) potential molecules (molecular weight under \(500\,\)) (Kirkpatrick and Ellis (2004)), presents immense challenges in drug discovery, where the process often extends over a decade and incurs costs in the billions. Recent strides in molecular design have introduced advanced generative models that excel in de-novo generation and optimization within 3D molecular space (Isert et al. (2023)). Despite these technological advances, challenges persist, such as ensuring synthesizability (Gao et al. (2021); Fialkova et al. (2021)) and maintaining desirable drug-like properties. The scarcity of protein-ligand complex data further complicates these demanding issues. While 1D/2D models attempt to address these challenges though various methods (Loeffler et al. (2024)), they often fall short in representing true 3D structures, and typicallynecessitating additional steps for proper conformation generation. On the other hand, 3D models (Ragoza et al. (2022), Luo et al. (2022), Baillif et al. (2023), Peng et al. (2022)), which directly incorporate spatial structures, show greater promise in activity prediction regarding 3D structures but are hindered by significantly slower inference speeds (Baillif et al. (2023)), which limit their practical applications such as fine-tuning via Reinforcement Learning (Ding and Jin (2024), Baillif et al. (2023), Wallace et al. (2023)). Recent research efforts, such as those by Lee and Cho (2024), have started fine-tuning 3D-autoregressive models with specialized reward functions to align with these stringent standards. Yet, notably absent are attempts involving Structure-Based Drug Design Diffusion Models(3D-SBDD DMs), as the prolonged inference times remain a formidable barrier, precluding the adoption of similar methodologies. In this work, we address this gap by successfully applying reinforcement learning to 3D-SBDD DMs, overcoming the challenge of prolonged inference times and demonstrating the feasibility of such approaches in practical drug design scenarios.

3D-SBDD-DMs (Guan et al. (2023, 2024), Schneuing et al. (2022), Torge et al. (2023), Igashov et al. (2024)) exhibit powerful generative capabilities but suffer from slow processing speeds due to their reliance on iterative sampling. Addressing these speed limitations is critical for several reasons. Primarily, faster processing speeds are essential for accelerating hit discovery phases, which could significantly increase the likelihood of identifying quality hits within a shorter time period. Additionally, the high computational demands of these models not only escalate costs but also limit access to advanced optimization techniques, thereby restricting the generation of molecules with desirable properties such as synthesizability, high binding affinity, and drug-likeness. Furthermore, real-time applications, such as interactive modeling sessions with human experts, require rapid model inference to provide effective feedback and facilitate iterative testing (Sundin et al. (2022)). By enhancing the speed of these models, it may be possible to enable real-time applications, allowing for on-the-fly modifications and adaptations during interactive sessions. Addressing the speed limitations of diffusion models is thus essential to fully realize these objectives and leverage the full potential of 3D-SBDD-DMs in practical applications.

To address slow inference of diffusion models, various strategies have been adopted to enhance their efficiency, in the computer vision domain such as improvement of solvers, optimization of diffusion processes, and model distillation techniques (Cao et al. (2024)). The emergence of consistency models and its variants (Song and Dhariwal (2023), Ding and Jin (2024), Song et al. (2023)), heralds a rapid, efficient alternative capable of delivering high-quality results with significantly reduced computational demands. However, these acceleration attempts have been minimally explored in the context of 3D drug design.

In this work, we present an efficient E(3)-equivariant consistency model that combines the rapid generation capabilities of consistency models with the effectiveness of scaffold hopping (Fig. 1). To substantiate the reliability and robustness of model performance, subsequent sections will detail results and comparisons with established diffusion and consistency models. Moreover, we incorporate reinforcement learning (RL) techniques (Oertell et al. (2024)) to further refine our model based on objectives that are challenging to address through direct modeling alone, demonstrating its capability to surmount limitations encountered by previous 3D-SBDD models (Harris et al. (2023)).

Our contributions are as follows:

* We propose a target-aware equivariant consistency model tailored for scaffold-hopping, achieving speeds up to 30 times faster than traditional DDPM-based models while achieving higher drug-likeness, synthesizability, connectivity and binding affinity.
* By leveraging faster inference speeds, we apply Reinforcement Learning (RL) to enhance binding affinity scores and reduce steric clashes without redocking in 3D-SBDD--a strategy not previously explored with diffusion models. This approach enables targeted optimizations in molecule design and opens up opportunities to tackle metrics that were previously challenging to address through direct modeling.

## 2 Related Works

### Scaffold Hopping

Scaffold hopping is a key strategy in drug discovery aimed at identifying new compounds that share biological activities but differ structurally from known molecules. This approach is crucial for enhancing drug properties and navigating intellectual property challenges. It includes techniques like heterocycle replacements, ring modifications, peptidomimetics for stability, and topology-based hopping, which innovates on molecular shape while maintaining activity (Sun et al. ). Deep-learning models, particularly in topology-based hopping, explore complex molecular structures to predict novel scaffolds, driving forward drug discovery by enabling the design of therapeutics with optimized efficacy and patentability (Torge et al. ).

### Diffusion-Based Molecular Generative Models and Limitations

Diffusion-based molecular generative models (DMs) apply noise processes and their reversal to generate novel molecular structures. These range from de-novo, non-conditional molecule creation to

Figure 1: (a) Previous diffusion-based SBDD models methodically explore vast chemical space for pocket-active molecules, with short arrows symbolizing a gradual, step-wise inference process. (b) TurboHopp efficiently generates active ligands using a consistency model, which accelerates inference and reduces the number of steps, as illustrated by the longer arrows. Moreover, it strategically leverages the functional groups of high-activity reference molecules, shown as colored areas on the diagram, to optimize the exploration within targeted chemical space.

Figure 2: (a) Comparison of QED scores, with TurboHopp (blue) reaching peak values faster compared to DiffHopp (red), throughout the generation process. (b) Progression of generated outputs of both models. Final steps are highlighted with red boxes.

precision drug design within protein pockets, and extend to specific tasks like scaffold hopping and linker generation (Hoogeboom et al. (2022); Vignac et al. (2023); Huang et al. (2022); Guan et al. (2023, 2024); Huang et al. (2024); Torge et al. (2023); Igashov et al. (2022)).

Despite their broad applicability, these models encounter substantial constraints. First, the iterative reversal of noise through SDEs or ODEs often requires extensive computation, typically hundreds to thousands of iterations, resulting in slow model inference. This significantly constrains the speed at which new, active molecules can be identified, diminishing the practical efficacy of these models in time-sensitive applications (Baillif et al. (2023)). Second, diffusion models often produce molecular poses that fail to comply with key biophysical constraints, as highlighted by recent evaluations (Harris et al. (2023)). Guan et al. (2023, 2024) struggle significantly in generating biophysically realistic molecular poses. Their strain energies are notably high, with median values around 1241.7 kcal/mol and 1243.1 kcal/mol, substantially exceeding the preferable baseline of 102.5 kcal/mol from the CrossDocked dataset (Francoeur et al. (2020)). Additionally, both models exhibit considerable issues with protein clashes: Schneuing et al. (2022) shows a high rate of steric clashes with a mean score of 15.33 before redocking, and Guan et al. (2023) also has a problematic level, with a mean score of 9.08 prior to redocking. These high levels of steric clashes suggest that the molecules often have conformations that are too cramped or improperly aligned for effective protein binding, highlighting significant challenges in their ability to produce physically and biologically plausible interactions.

### Consistency Models

Initially utilized in the vision domain, consistency models are either developed by distilling knowledge from existing diffusion models or trained as standalone entities. Defined as a distinct class of generative models (Song et al. (2023)), they address the computational inefficiencies of traditional diffusion models that require multiple iterative steps to remove noise and generate data. By directly transforming noise into data, consistency models significantly reduce generation time and offer the flexibility of multi-step sampling to improve output quality.

### RL for Consistency Models

Reinforcement Learning for Consistency Models (RLCM) is a framework that enhances the speed and efficacy of training generative models through reinforcement learning (Oertell et al. (2024)). It builds upon the fast inference speed of consistency models, enabling rapid training and inference cycles. RLCM is particularly useful as it fine-tunes models to optimize for specific reward functions, especially those hard to capture through direct modeling. In the molecule generation domain, to our knowledge there have been no attempts at fine-tuning diffusion or consistency models for task-specific purposes yet. By leveraging RLCM, we show promising evidence for mitigating issues in 3D-SBDD DMs (Harris et al. (2023)), and believe that future iteration on the reward functions with our methods will enhance their practical applicability and effectiveness.

## 3 Methods

### Notations and Problem Definition

NotationsAtoms within proteins and ligands are represented by the graph \(G=\{h,x\}\), where \(h^{N F}\) are node features and \(x^{N 3}\) are the Cartesian coordinates of the atoms. The atomic elements are encoded as one-hot vectors within \(h\). We consider only those protein pocket atoms that are within an 8 Angstrom radius of the ligand, simplifying the protein structure to a \(C_{}\) representation with node features \(h_{P}\) encoding residue types as one-hot vectors. Edges between atoms are defined for those within a 5 Angstrom radius, incorporating both the distance \(d_{ij}\) and a normalized direction vector \(-x_{j}}{d_{ij}}\).

Problem DefinitionGiven a context \(u\) which integrates the functional groups of a molecule denoted as \(g\), and a protein pocket \(p\), our focus is to generate a scaffold, a key substructure of a molecule \(Z\). A generative model, defined as \(P_{}(Z|u)\) maps uniform Gaussian noise to conditional probability distribution \(Z\) given \(u\). Ultimately, we aim to make sampling of scaffolds for any given molecular context \(u\) within the set as efficient as possible, without losing overall quality.

DatasetWe follow the dataset preprocessing scheme regarding filtering of compounds and determining of scaffolds as done in Torge et al. (2023), filtering those above QED of 0.3, training on 19,378 protein-ligand complexes in PDBBind. We also adopt the same scaffold extraction method, using Murko-Bemis method (Bemis and Murcko (1996)).

### Background

Diffusion ModelsIn DDPMs, noise is incrementally added to the original data, represented as \(_{0}\), until it is completely transformed into a noise-dominated state \(_{T}\) after \(T\) steps. This process is governed by an SDE:

\[d=(,t)dt+(t)d\] (1)

where \(\) represents standard Brownian motion, \((,t)\) is a drift function, and \((t)\) is a diffusion coefficient associated with the noise process. The reverse diffusion process is described by another SDE which incorporates the backward flow of time through \(}\), a Brownian motion in reverse, and modifies the forward SDE with a term involving the gradient of the log probability density.:

\[d=[(,t)-(t)^{2}_{}  p_{}()]dt+(t)d}\] (2)

The denoising process can be mathematically framed as an ordinary differential equation (ODE), also known as the Probability Flow ODE (Song et al. (2020)), whose solution trajectories have the same marginal density at time t:

\[d=[(,t)-(t)^{2}_{ } p_{}()]dt\] (3)

During training phase, Diffusion Models (DMs) learn to estimate the score, given by \(_{} p_{}()\) with a score model \(_{}(,t)\). Following the modifications by Karras et al. (2022), the drift term \((,t)\) is set to zero and the diffusion term is defined as \((t)=\). Consequently, the empirical Probability Flow ODE becomes:

\[}{dt}=-t_{}(,t)\] (4)

This form is used to solve the ODE backwards in time, starting from a noise state \(}\) sampled from \((0,t^{2})\). Using numerical ODE solvers like Euler and Heun, the model computes the trajectory \(\{_{t}\}_{t[0,T]}\), resulting in \(}_{0}\) as an approximate reconstruction of the original data distribution.

Consistency FunctionWe develop an equivariant consistency function \(f:(Z_{t},t u) Z_{}\) for a solution trajectory \(Z_{t}\) of an ODE across \(t[,T]\), where \(\) is near zero. This function meets both self-consistency, ensuring \(f(Z_{t},t u)\) is uniform for all \((Z_{t},t)\) on the trajectory, and boundary conditions, mandating \(f(Z_{},)=Z_{}\) at the smallest time step \(\). Successfully achieving these conditions guarantees that each solution \(Z_{t}\) can be traced back to its original state \(Z_{0}\). The function maintains SE(3)-equivariance, adjusting centers as per methodologies outlined in Xu et al. (2022), and outputs both coordinates and node features.

### Model Architecture

We wish to construct a new sample scaffold \(Z\) given a molecular context \(u\) ( \(u\) is the concatenation of the pocket \(p\) and functional groups \(g\)). An equivariant consistency function \(f_{}(Z|u)\) is parameterized by a free-form deep neural network \(F_{}\) which is a \((Z,t)\) related SE (3)-equivariant model. Theoretically, it can be any architecture that is SE(3)-equivariant. We use an adaptation of the equivariant Geometric Vector Perceptron (GVP) architecture (Jing et al. (2020)). As done in (Torge et al. (2023)), all features are embedded into a shared feature space using separate MLPs. The time factor \(t\) is embedded with a linear layer and added together as the input. As done in Torge et al. (2023), hidden node features \(h^{}\) and \(x^{}\) are obtained though message-passing layers. The outputs of the consistency function are \(x^{}_{t},h^{}_{t}=x^{}_{z},_{}(h^{}_{Z})\) where \(_{}\)is an MLP to map from embedding space to original data space. As shown in Eq. (5), we separate coordinates and node features and parameterize the consistency model with a learnable function \(f_{}\) using skip connections.

\[f_{}(x_{t},t u)=z_{}(t)x_{t}+z_{}(t)x^{} _{t} 42.679134ptf_{}(h_{t},t u)=z_{}(t)h_{t}+z_{ }(t)h^{}_{t}\] (5)\[z_{}(t)=}^{2}}{(t-)^{2}+_{ }^{2}} z_{}(t)= }(t-)}{+_{}^{2}}}\] (6)

\(z_{}(t)\) and \(z_{}(t)\) are differentiable time-dependent functions satisfying \(z_{}()=1\) and \(z_{}()=0\), thus ensuring the function \(f_{}\) adheres to the boundary condition and retains differentiability. Given \(_{}\) as the standard deviation of data, when \(t=\), setting \(z_{}()=1\) and \(z_{}()=0\) ensures that the condition \(f_{}(Z_{})=Z_{}\) is naturally satisfied. The functions \(z_{}\), \(z_{}\), and \(F_{}\) are differentiable. As stated in Fan et al. (2023), since \(z_{t}\) and \(F_{}\) are both SE-(3) equivariant, and \(z_{}(t)\) and \(z_{}(t)\) are invariant scalars, the SE (3)-equivariance is guaranteed.

### Model Training

We apply Algorithm 1 for training our consistency model. Scaffold \(Z\) extracted from the dataset is segmented into its coordinate and feature components, \(x\) and \(h\), respectively. Next, adjustments are made to the coordinates and features along the ODE trajectory \(\{x_{t}\}_{t[,T]}\) and \(\{h_{t}\}_{t[,T]}\), respectively, by incorporating perturbations \(_{x}\) and \(_{h}\). The loss function \(L()\) reduces discrepancies between successive time steps \(f_{}(Z_{n+1},t_{n+1}|u)\) and \(f_{}(Z_{n},t_{n}|u)\), ensuring self-consistency.

Let \(f_{}^{n,x}\) and \(f_{}^{n,h}\) denote the coordinate and feature components of \(f_{}(Z_{n},t_{n}|u)\), respectively. Similarly, let \(f_{}^{n+1,x}\) and \(f_{}^{n+1,h}\) denote the coordinate and feature components of \(f_{}(Z_{n+1},t_{n+1}|u)\). The loss function \(L()\) is defined as:

\[L()=(f_{}^{n+1,x},f_{}^{n,x})+(f_{ }^{n+1,h},f_{}^{n,h})\] (7)

To enhance the stability of the training process for \(f_{}\), a secondary function \(f_{^{-}}\), which utilizes parameters \(^{-}\) as the exponential moving average (EMA) of \(\), is employed. This methodology effectively reduces the variability between consecutive predictions by accounting for incremental perturbations, as detailed in Song and Dhariwal (2023). The combined loss function measures the mean squared error (MSE) between adjacent states for both coordinates \(x\) and features \(h\):

Parameter updates are conducted using stochastic gradient descent for \(\), while \(^{-}\) is incrementally adjusted using an EMA protocol where \(\) indicates the decay rate, enhancing the model's responsiveness and accuracy.

\[L(,^{-}) =(f_{}^{n+1,x},f_{^{-}}^{n,x})+(f_ {}^{n+1,h},f_{^{-}}^{n,h})\] (8) \[^{-} =^{-}+(1-)\] (9)

Figure 3: Model Architecture of TurboHopp. Given a reference ligand and its corresponding protein pocket, an equivariant consistency model samples scaffolds conditioned on pocket substructure and functional groups. Models are trained to map points on the same PF-ODE path to the original data given context.

### Reinforcement Learning Architecture

We adopt RLCM from Oertell et al. (2024), where we biject a Markov decision process to multistep consistency model inference. More formally, we adopt this mapping:

\[_{t} _{_{t}},_{t}, (_{t}|_{t}) f_{}(_{ _{t}},_{t}|)+ P(_{t+1}|_{t},_{t })(_{_{_{t+1}}},_{_{t+1}},_{ })\] \[_{t} _{_{t+1}} ((0,I),_{_{0}},p()) R_{H}(_{H})=r(f_{}(_{_{H}},_{H},), )\]

where \(\) represents the noise added during the noising procedure of the consistency model.

As with Oertell et al. (2024), we create a mapping from MDP states to noised states along the consistency model trajectory. Likewise, we follow a deterministic transition from the state to the predicted action. This action is a combination of the output from the consistency model convolved with random noise in accordance with the DDPM stochastic differential equation (Ho et al. (2020), Song et al. (2021)). Because this policy now becomes stochastic, we can apply Algorithm 3 (a modified version of reinforce with a clipping). The agent then receives a reward at the end of the trajectory corresponding to a combination of desirable chemical attributes. We use PPO (Schulman et al. (2017)) for the core optimization strategy but others like REBEL (Gao et al. (2024)) have been shown to work for RLCM optimization with sometimes stronger results.

### Metric-based Sampling

By leveraging the inherent efficiency of consistency models, we tailor molecule designs to precise standards. Contrary to the fixed-step approach suggested by Song et al. (2023), our strategy utilizes a flexible, customizable metric that adapts to the variability in protein conditions, as evidenced by our empirical findings shown in Fig. 8. This approach allows for dynamic adjustment during generation, ensuring optimal results by selecting scaffolds with the highest evaluated scores. This not only boosts efficiency but also significantly enhances molecule properties, achieving superior docking and QED scores that surpass those found in the initial dataset.

In Algorithm 2, initial samples are drawn from random Gaussian noise \(_{T}(0,T^{2}I).f_{}\) is then applied to generate initial scaffolds from these samples: \(_{t}=f_{}(Z_{T},T)\). Across a sequence of time points \(\{_{1},_{2}_{N-1}\}\) we iteratively refine the generated scaffold. After reaching a designated step m, we score metrics to assesses the quality of each \(Z_{t}\). Then we select the one with the best metric at the end of all the iterations as the final output. Our metric function is based on drug-likeness and synthesizability.

   Method & Connectivity (\(\)) & Diversity (\(\)) & Novelty (\(\)) & QED (\(\)) & SA (\(\)) & QUina (\(\)) & Steps & Time \\  DiffHopp & 0.918\(\)0.23 & 0.589\(\)0.17 & 0.999\(\)0.01 & 0.621\(\)0.12 & 0.662\(\)0.14 & -7.923\(\)3.29 & 500 & 107.10 \\ DiffHoppGAN & 0.752\(\)0.41 & **0.641\(\)0.15** & **1.000\(\)0.01** & 0.510\(\)0.12 & 0.592\(\)0.11 & -7.210\(\)1.45 & 500 & - \\ DiffHoppGAN\({}_{}\) & 0.927\(\)0.26 & 0.597\(\)0.20 & **1.000\(\)0.02** & 0.634\(\)0.18 & 0.670\(\)0.13 & -7.783\(\)2.78 & 500 & 442.48 \\  TurboHopp-50 & 0.872\(\)0.19 & 0.562\(\)0.18 & **1.000\(\)0.00** & 0.576\(\)0.12 & 0.635\(\)0.25 & -7.823\(\)1.53 & 50 & **3.19** \\ TurboHopp-100 & 0.948\(\)0.22 & 0.563\(\)0.23 & 0.997\(\)0.09 & 0.589\(\)0.19 & 0.724\(\)0.12 & -8.272\(\)1.21 & 100 & 5.69 \\ TurboHopp-150 & **1.000\(\)0.00** & 0.573\(\)0.12 & **1.000\(\)0.00** & 0.618\(\)0.19 & 0.715\(\)0.13 & -8.277\(\)1.87 & 150 & 15.82 \\  TurboHopp-50\({}_{}\) & 0.917\(\)0.28 & 0.612\(\)0.21 & **1.000\(\)0.00** & 0.583\(\)0.20 & 0.631\(\)0.15 & -7.865\(\)1.72 & 50 & 3.83 \\ TurboHopp-100\({}_{}\) & 0.997\(\)0.06 & 0.561\(\)0.22 & **1.000\(\)0.00** & **0.664\(\)0.19** & **0.737\(\)0.11** & **-8.319\(\)1.38** & 100 & 7.14 \\ TurboHopp-150\({}_{}\) & **1.000\(\)0.00** & 0.569\(\)0.22 & **1.000\(\)0.00** & 0.648\(\)0.19 & 0.727\(\)0.11 & -8.219\(\)1.722 & 150 & 20.88 \\  PDBind Test & 1.000\(\)0.00 & - & 1.000\(\)0.00 & 0.599\(\)0.17 & 0.742\(\)0.11 & -8.712\(\)0.18 & & \\   

Table 1: **DiffHopp VS TurboHopp VS TurboHopp Metric Sampling**.Results on models trained on PDBBind. Mean and standard deviation of the common molecular metrics for the molecules from the baseline models as well as time-step variations of our model.”metric” refers that inference was done with metric-based sampling. QVina score (kcal/mol) refers to estimated binding affinity measured by QVina2. Time refers to average time (seconds) required to generate a batch of molecules per complex. Best metrics are in bold. 2nd best are underlined.

[MISSING_PAGE_FAIL:8]

[MISSING_PAGE_FAIL:9]

sampling. The sampling hyperparameters for inpainting (resampling and jump length parameters) were determined by finding the ones with best validity. Also, since these models were trained on CrossDocked, our model was additionally trained on CrossDocked for fair comparison. The same train-test split suggested in Guan et al. (2024) is followed, with an additional QED minimum filter of 0.3 when constructing the dataset. Only the alpha carbon residues of the protein pocket atoms are used to reduce computational burden.

Results and DiscussionTable 3 shows that despite having lower diversity, our model has much faster generation speed as well as relatively high docking score compared to inpainting versions of reference SBDD models. Our findings show that a custom scaffold-hopping model outperforms a repurposed de-novo model.

Geometric properties and ring distributions (Appendix E) were also compared. Results show that our model has closer bond length/angle/atom-atom length distributions to the reference molecules compared to Guan et al. (2023), but poorer results compared in bond/torsion angles. In all aspects, Guan et al. (2024) was outstanding largely because it learns the distribution of bonds while ours do not. For ring distributions, results show that our model is capable of generating similar ring types compared to the reference. In future research, we plan to design our model to learn bond properties as well.

## 5 Conclusion

We introduced TurboHopp, an equivariant conditional consistency model that significantly boosts generation efficiency and outperforms traditional DDPM-based models in various metrics. Empirical results indicate that our model achieves a 5-30 times improvement in generation speed while maintaining or enhancing traditional quality metrics. Additionally, by leveraging this increased inference speed, we demonstrated that reinforcement learning (RL) is feasible for 3D-SBDD-DMs, enabling the fine-tuning of generative models to meet specific requirements. Most importantly, our method has the potential to be adapted to numerous variations explored within 3D-SBDD-DMs, increase speed and efficiency.

Key areas for improvement and future research include enhancing the denoising model, expanding dataset size, and diversifying reward functions for drug discovery tasks. Incorporating bond diffusion (Peng et al. (2023)) and including hydrogens in proteins and molecules could significantly bolster the robustness of the denoising model. In the consistency model, techniques such as eliminating the Exponential Moving Average (EMA), adopting Pseudo-Huber loss, and refining noise and loss schedules may yield more robust outcomes (Song and Dhariwal (2023)). Furthermore, for RLCM, exploring reward functions that integrate steric energies and interaction fingerprints presents a promising avenue for future research.