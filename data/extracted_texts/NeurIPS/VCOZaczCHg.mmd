# Mixed-Initiative Multiagent Apprenticeship Learning

for Human Training of Robot Teams

Esmaeil Seraj

Georgia Institute of Technology

eseraj3@gatech.edu

&Jerry Xiong

Georgia Institute of Technology

jxiong60@gatech.edu

&Mariah Schrum

University of California Berkeley

mariahschrum@berkeley.edu

&Matthew Gombolay

Georgia Institute of Technology

matthew.gombolay@cc.gatech.edu

###### Abstract

Extending recent advances in Learning from Demonstration (LfD) frameworks to multi-robot settings poses critical challenges such as environment non-stationarity due to partial observability which is detrimental to the applicability of existing methods. Although prior work has shown that enabling communication among agents of a robot team can alleviate such issues, creating inter-agent communication under existing Multi-Agent LfD (MA-LfD) frameworks requires the human expert to provide demonstrations for both environment actions and communication actions, which necessitates an efficient communication strategy on a known message space. To address this problem, we propose Mixed-Initiative Multi-Agent Apprenticeship Learning (MixTURE). MixTURE enables robot teams to learn from a human expert-generated data a preferred policy to accomplish a collaborative task, while simultaneously learning emergent inter-agent communication to enhance team coordination. The key ingredient to MixTURE's success is automatically learning a communication policy, enhanced by a mutual-information maximizing reverse model that rationalizes the underlying expert demonstrations without the need for human generated data or an auxiliary reward function. MixTURE outperforms a variety of relevant baselines on diverse data generated by human experts in complex heterogeneous domains. MixTURE is the first MA-LfD framework to enable learning multi-robot collaborative policies directly from real human data, resulting in \(~{}44\%\) less human workload, and \(~{}46\%\) higher usability score.

## 1 Introduction

In recent years, Multi-Agent Reinforcement Learning (MARL) has been predominantly used by researchers to optimize a reward signal and for learning multi-robot tasks. Nevertheless, RL generally suffers from key limitations such as difficulty in designing an expressive and suitable reward function for complex tasks  which can lead to undesirable robot behavior , high sample complexity , and safety concerns due to direct robot-environment interactions for optimizing the policy . These problems are further exacerbated in multi-robot scenarios where inter-robot interactions and environment dynamics can be more complex and task descriptions and objectives more ambiguous . As such, accurate models of human strategies and behaviors achieved via imitation methods are increasingly important for safely and effectively deploying autonomous systems and aligning values motivating robot behaviors with human values .

Learning from Demonstration (LfD) attempts to learn the correct behavior (policy) from a set of expert-generated demonstrations rather than a reward function, which can result in lower samplecomplexity and a learned policy that more closely reflects the human's preferred strategy . Unfortunately, extending existing single-agent LfD paradigms such as Behavioral Cloning (BC)  or Inverse Reinforcement Learning (IRL)  to multi-robot settings poses several challenges such as environment non-stationarity and existence of multiple equilibrium solutions (an agent's optimal policy depends on other agents' policies) . One can adopt such frameworks directly in a centralized system. However, centralized systems are not scalable, are prone to single-node failure, and pose significant computation overhead, and therefore, decentralized approaches (e.g., limited-range communication and local computations) have been more desired in multi-robot systems .

Prior work has shown that enabling communication among agents of a robot team creates a shared mental model of joint action-spaces and therefore, allowing coordinated action decisions  to handle challenges such as partial observability and environment dynamicity . Although LfD can resolve the high sample complexity and reward shaping problems in RL, the task of MA-LfD can be onerous for the humans as they have to control multiple robots and imagine and simulate an appropriate Theory-of-Mind to create a communication strategy for the robot team.

Introducing the inter-agent communication  under current state-of-the-art (SOTA) Multi-Agent LfD (MA-LfD) frameworks such as Multi-Agent Generative Adversarial Imitation Learning (MA-GAIL)  or Multi-Agent Adversarial IRL (MA-AIRL)  requires the human expert to provide demonstrations for both _environment actions_ and _communication actions_. Such approaches assume that the human expert has access to an efficient communication strategy on a known finite message space in addition to a known strategy for taking environment actions . This assumption, however, is invalid, since dynamic environments with multiple interacting agents will be too complex and unpredictable for humans to be able to develop cohesive and comprehensive inter-agent communication protocols. Even if such an efficient communication strategy exists, demonstrating both the task strategy as well as the communication strategy could potentially pose significant workload on the human expert, which in turn can affect the performance and quality of demonstrations. These issues become even more severe when the robot team is heterogeneous or of composite nature (i.e., agents with different observation- and action-spaces as well as different objectives) where agents must rely on communication to operate and fulfill their tasks correctly .

To address these challenges, we develop a distributed MA-LfD framework to efficiently incorporate a human expert's domain-knowledge of teaming strategies for collaborative robot teams and directly learn team coordination policies from expert human teachers. To this end, we propose Mixed-Initiative Multi-Agent Apprenticeship Learning (MixTURE) which enables robot teams to learn an expert's preferred strategy to act in an environment. MixTURE simultaneously learns end-to-end emergent communication for the robot team to enhance team coordination, without the need for human generated data or an auxiliary reward function. To improve the quality of the learned inter-agent communication protocol, we reduce the entropy of a generated message given joint states and actions by maximizing the Mutual Information (MI) between messages and joint states. We demonstrate through empirical evaluation and a human subject experiment that our LfD-based MixTURE outperforms RL based methods due to reward function independence and low sample complexity. Furthermore, MixTURE significantly alleviates the human demonstrators' workload and time required to provide demonstrations, increases system usability, and improves overall collaboration performance of the robot team. **Our key contributions are as follows**:

1. We propose the MixTURE framework for learning robot teaming strategies from human expert demonstrations while simultaneously learning inter-agent communication through online interactions during training, without the need for expert data or an auxiliary reward.
2. We develop an MI maximization-based emergent communication learning model which reduces the entropy of a generated message for an agent given joint state-observations.
3. We evaluate MixTURE on real, diverse human-generated data, collected in a human-subject user study, and show that, in a complex multi-agent domain with heterogeneous tasks, we are able to achieve \( 42\%- 77\%\) higher performance and a significantly lower sample complexity. We also show that using MixTURE significantly improves workload and system usability relative to a benchmark MA-LfD framework. To best of our knowledge, this is the first work to train a MA-LfD framework on real human data.
4. We investigate the effects of demonstrating both environment actions and communication actions on a human expert's workload, demonstration quality, and system usability score. Our results show that a high-workload demonstration process in classic MA-LfD approachessignificantly (\(p<.001\)) reduces an expert's demonstration quality (measured by performance) and the system's usability score. MixTURE significantly improves these results; increasing a human's performance and experience engaging in MA-LfD.

## 2 Related Work

The literature for Multi-Agent LfD (MA-LfD) primarily aims to address the complexity of simultaneously training multiple agents under coordinated [43; 58; 46; 57; 68; 28] and uncoordinated tasks [6; 69; 40; 70]. In [61; 8] the MA-LfD problem is reduced into a single-agent problem by making the assumption that all agents share the same dynamics, observation spaces, and model parameters. In , a coordinated multi-agent IL approach is proposed which learns a latent coordination model along with the individual agent policies. In  the single-agent GAIL framework is extended for multi-agent scenarios along with a practical actor-critic method for multi-agent imitation. Similarly, in  the AIRL method was extended to the multi-agent settings. In  a scalable multi-agent LfD approach is proposed where a model-based heuristic method for automated swarm reorganization is leveraged to improve multi-agent task allocation problem. In  an expert feedback-based system is developed to address multi-agent path-finding problem. In  authors create an advising system to incorporate sub-optimal model-based heuristic policies to help improve MARL performance. Other prior work focused on learning human profile/behavior models for improved MA-LfD [45; 5]. More recently, Hoque et al.  proposed Fleet-DAgger, formalizing interactive fleet learning setting, in which multiple robots interactively query and learn from multiple human supervisors.

Nevertheless, applicability of these prior works in the collaborative multi-agent problems is considerably limited since none of these works explicitly address the inter-agent communication in dynamic and partially observable domains where agents not only need to take task-related actions, but also need to communicate and share information for coordination. Additionally, none of these prior work leverage real human-generated data for training to evaluate the approach against heterogeneity and diversity in human data. Our work addresses these limitations by eliminating the requirement for an expert to demonstrate a communication strategy. Instead, the human expert only needs to teach the robot team how to complete a task through demonstrations, and the robots will automatically learn a communication strategy that aligns with the expert's demonstrations. We also collect real human data to evaluate our method's ability to cope with variations in demonstration styles and strategies.

## 3 Problem Formulation: General MA-LfD with Heterogeneous Agents

We ground our problem formulation in a Markov Game (MG)  generalized to include partial observability and heterogeneous agents. We define a set of heterogeneous agents in a _composite_ robot team (i.e., composed of different classes of robots) as agents that can have arbitrarily different state-, observation-, and action-spaces. The agents can also have different task objectives which, when enacted in coordination, enable the team to achieve a shared overarching mission. Accordingly, we define our generic MG as a 9-tuple: \(,,\{^{(c)}\}_{c},\{ ^{(c)}\}_{c},\{^{(c)}\}_{c},\{ ^{(c)}\}_{c},r,,\). \(\) is set of all available agent classes in the composite robot team and the index \(c\) denotes the agent class. \(=_{(c)}N^{(c)}\) is the total number of collaborating agents where \(N^{(c)}\) represents the number of agents in class \(c\). \(\{^{(c)}\}_{c}\) and \(\{^{(c)}\}_{c}\) are discrete joint sets of state- and action-spaces, respectively. \(\{^{(c)}\}_{c}\) is the joint set of observation-spaces, including class-specific observations. Agents of the same _class_ have identical \(\), \(\), and \(\). \([0,1)\) is the temporal discount factor for each unit of time and \(\) is the state transition probability density function. At each timestep, \(t\), each agent, \(j\), of the \(c\)-th class can receive a partial observation \(o_{t}^{c_{j}}^{(c)}\) according to some class-specific observation function \(\{^{(c)}\}_{c}:o_{t}^{c_{j}}^{(c)}( |)\). Next, each agent, \(j\), of class \(c\), takes an action, \(a_{t}^{c_{j}}\), forming a joint action vector \(=(a_{t}^{{{1}_{1}}},a_{t}^{{{1}_{2}}},,a_{t}^{{{c}_{1}}}, ,a_{t}^{{{c}_{j}}})\). When agents take the joint action \(\), in the joint state \(\) and depending on the next joint-state, they receive an immediate reward, \(r(,)\), shared by all agents regardless of classes. Each agent, \(j\), of a class, \(c\), achieves its own objective by sampling actions from a stochastic policy \(_{j}^{(c)}\). The objective of each agent is then to maximize the team return (expected sum of discounted rewards), i.e., \(_{}[_{t=0}^{T}^{t}r_{t}]\).

To directly learn the human's preferred strategy and resolve the reward specification problems  posed by RL, we leverage a demonstration dataset, \(D\), provided by an expert, rather than the ground truth reward signal \(r\) employed in MARL. Unlike [71; 60] or , we do not assume multiple human experts in our MG to avoid the need for further coordination amongst the experts, which can be time consuming and expensive. \(D\) is a set of trajectories \(\{_{j}^{c}\}_{j=1}^{N^{(c)}}\), where \(_{j}^{c}=\{(o_{t}^{c_{j}},a_{t}^{c_{j}})\}_{t=1}^{T}\) is an expert trajectory collected by sampling \(a_{t}^{c_{j}}_{E}(a_{t}^{c_{j}}|_{t})\) in which \(_{E}\) is the expert policy and \(_{t}\) is the joint observation that the expert has access to at time \(t\). We further assume that \(D\) contains the entire supervision to the learning algorithm (i.e., no online interactions during training). We build the MixTURE architecture on the generative adversarial training . Our distributed GAIL objective underlying MixTURE is shown in Eq. 1 where \(_{}^{(c_{j})}\) is a local discriminator that classifies expert and policy trajectories for agent \(j\) of a class \(c\), and \(_{}^{(c_{j})}\) is the parameterized policy of agent \(j\) of a class \(c\).

\[_{_{}^{(c)}}=-_{_{E},(,)}[_{}^{(c_{j})}(,) ]-_{_{}^{(c_{j})},(,)} [(1-_{}^{(c_{j})}(,))]\] (1)

According to , under the GAIL objective in Eq. 1 and at optimality, the distribution of generated state-action pairs by \(_{}\) should match the distribution of demonstrated state-action pairs.

## 4 Mixed-Initiative Multi-Agent Apprenticeship Learning

**Motivation and Problem Overview -** Consider a generic composite team of robots including agents with heterogeneous characteristics and task objectives. Without loss of generality, consider a robot team composed of _perception-only_ and _action-only_ robots. Under our problem formulation in Section 3, perception robots and action robots create two separate _classes_ of agents that need to collaborate on an overarching mission. For instance, in an application of wildfire fighting, robots of the perception class (e.g., quadcopters) need to search an environment for firespots, while the action robots (e.g., fire-extinguishing ground robots) who cannot sense the environment are required to extinguish the firespots found by the perception robots [54; 55; 52; 3]. Note that neither of the robot classes are capable of accomplishing the task without the other class.

To teach a collaborative policy to such a robot team, one can leverage demonstrations from a team of humans where each member is an expert. Using a team of human experts, however, poses further challenges: (1) simultaneous access to several human experts is expensive and can be time consuming, and (2) a communication strategy (e.g., natural language) among the human demonstrators is required for coordination, which can be challenging to translate to robot domain due to ambiguity, colloquialisms, and context-dependent use [30; 23]. Additionally, humans' communications might not make sense to the robot agents as humans could be unaware of all agents' full local state spaces.

Alternatively, we can leverage the demonstrations from a single human with domain-knowledge regarding the entire mission objective. For example, a trainer/coach can play a simulated game of firefighting using the aforementioned perception and action robots and provide expert demonstrations for how to efficiently distribute agents and prioritize tasks for searching the environment and putting out the fire. The challenge of using a single human expert, however, is that in this case the human would also need to demonstrate communication-actions (i.e., what information should an agent broadcast at each state) on top of the environment-actions (i.e., moving around or dousing fire). To this end, humans would have to create and maintain a Theory-of-Mind (ToM) of each agent under this increased action-space dimensionality, which significantly increases workload [15; 17].

To resolve this problem, we propose taking separate initiatives for teaching the robots in the team how to operate (environment actions, \(a_{t}\), per observation, \(o_{t}\)) and how to communicate (communication message, \(z_{t}\), per state, \(s_{t}\)) such that a human expert would only be required to provide environment-action demonstrations and the robot team would automatically infer on their own a suitable communication policy for the underlying expert demonstrations. We call our approach Mixed-Initiative Multi-Agent Apprenticeship Learning (MixTURE).

**MixTURE Architecture -** The proposed MixTURE architecture for human training of robot teams is shown in Fig. 1. At each timestep, each agent generates an embedding, representing agent's belief space, from its local observation. To handle agents' partial observability, the local observation embeddings are then passed into local recurrent policies for each agent. Each GRU policy receives the preprocessed features from the local observations as well as its own hidden state from previous timesteps. Therefore, the policy output depends only on the history of local observations and actions.

To learn from the human expert demonstrations stored in the dataset \(D_{E}\), as shown in Fig. 1, we build a distributed multi-agent GAIL architecture where each agent is equipped with a parametrized discriminator, \(_{}\). The discriminators are trained via a Binary Cross Entropy (BCE) loss to distinguish between state-action pair samples from the expert dataset and those generated by the generator (i.e., local policies). The output of the discriminators are treated as local rewards, which are then combined to encourage collaboration and teaming behaviour among agents . To learn the agent policies through this shared reward signal, we leverage the Proximal Policy Optimization (PPO) .

We enable inter-agent communication by adding an attentional communication module in which each agent is equipped with a fully-connected network that processes action-embeddings generated by the recurrent policies of an agent and those generated by its local teammates (i.e., messages, \(z\)) to output an action-decision. We enable this message-passing by creating differentiable communication channels among agents. To maintain locality, these communication channels can be leveraged locally (i.e., a communication graph where edges only exist when robots are spatially within close proximity). For an agent, \(i\), the action-embedding messages received from a teammate, \(j\), are weighted by some learned attention coefficients, \(_{ji}\), to assign message importance. Therefore, the input message for agent \(i\) at time, \(t\), can be computed as \(m_{t}^{j i}=_{j=1}^{_{t}(i)}_{ji}z_{ji}^{t}\) where \(_{t}(i)\) represents the neighbors, \(j\), of agent \(i\) at time \(t\). Here, \(_{ji}\) are the learned attention coefficients that are computed via \(_{ji}=_{j}((_{att}[_{i} ^{j i}]))\). In this equation, \(_{att}\) are the learnable weights of the attention network, \(\) represents concatenation, \(\) is an activation function nonlinearity, and \(\) represents the hidden states. The Softmax function is used to normalize the coefficients across all neighbors \(j\). Such attentional communication can enhance the action-decision quality, particularly with increased number of agents or when the states may significantly vary in different parts of the environment . Messages in our communication module are entirely learned via backpropagation.

**Mutual Information Maximization-Based Differentiable Communication -** A challenge with the communication model learned via the described end-to-end differentiable channels is that the distribution of the messages broadcasted by an agent, \(i\), given the state-observations, \((z_{ij}|)\), can have a high variance. The desired behavior, instead, is that the agents employ a cohesive communication strategy in which an agent sends a consistent message when it observes relatively similar states.

To resolve this issue, we propose maximizing the Mutual Information (MI) between an agent's outgoing message and the joint state-observations. MI is a measure of the reduction in entropy of a probability distribution, \(X\), given another probability distribution, \(Y\), such that \(I(X;Y)=H(X)-H(X|Y)\), where \(H(X)\) denotes the entropy of \(X\) and \(H(X|Y)\) is the conditional entropy

Figure 1: The proposed MixTURE architecture for a two-agent example scenario. At each timestep, each agent generates an embedding from its local observation, which is then passed into local recurrent policies for each agent. To learn from the expert demonstrations stored in the dataset \(D_{E}\), we build a distributed multi-agent GAIL architecture. We enable inter-agent communication by adding an attentional communication module enhanced by a MI maximization reverse model.

of \(X\) given \(Y\). In our work, by maximizing the MI between the distribution of an agent's message, \((z_{ij}|)\), and the joint observations, we reduce the entropy over messages and encourage the communication model to be more consistent. Maximizing the MI in this way encourages \(z_{ij}\) to correlate with features within the observation distribution (i.e., mode discovery) .

Unfortunately, a direct MI Maximization (MIM) between the message distributions and joint observations as formulated above, \(I(z_{ij};)=H(z_{ij})-H(z_{ij}|)\), is intractable as it requires access to the true posterior, \((z_{ij}|)\). Therefore, in keeping with prior work, we rely on the Evidence Lower Bound (ELBO) of the MI instead. As shown in prior work , by minimizing an MSE loss between a sample from the current message embedding and the approximate posterior, modeled as a normal distribution with constant variance, is equivalent to maximizing the likelihood of the posterior.

In practice, we build a distributed reverse model in the MixTURE architecture (shown in Fig. 1) to accommodate the mentioned MSE loss. The distributed reverse model for each agent has access to the local received messages as well as the global joint-actions taken by all agents such that the optimization results in a communication entropy-reduction mechanism at the team level. Since actions and generated messages are functions of the state-observations, each reverse model, \(\), can take in the joint actions, \(\), and all received messages, \(z_{ji}\), to estimate the outgoing message for agent, \(i\), as \(_{ij}^{t}=_{i}(,z_{ji}^{t})\). The policy and reverse models are trained together in an end-to-end fashion to minimize the message reconstruction error as \(_{^{c_{i}}}=}_{i=1}^{ }\|_{i}(,z_{ji})-z_{ij}\|^{2}\).

We note that while the addition of the MI maximization loss would make the overall loss function more complex, we believe there are further benefits that could be achieved via training the MIM reverse model, besides enhancing agent certainty in choosing actions. Particularly, we believe our MIM reverse model, when tuned well, has the potential to roughly cluster message embeddings based on observation-action pairs which can provide further useful information on the learned communication protocol for a task and further insight into interpreting the learned communication protocols.

**Training and Execution -** We build the MixTURE framework in a Centralized Training for Decentralized Execution (CTDE) paradigm  to accommodate for the global joint-action inputs to the MI maximizing reverse models during training. We note that, the MIM reverse model is only used during training and is cut during the execution, and therefore, the learned policies can be executed fully decentralized. To optimize the policies based on the reward signal generated by the discriminators, we leverage the PPO algorithm . Moreover, to enhance and stabilize the training we propose combining an offline BC loss, \(_{^{c_{i}}}=-}_{i=1}^{ }_{i}(a_{t}^{c_{i}}|o_{t}^{c_{i}},z_{ji}^{t})\), with the online GAIL loss. As shown by prior work , through this combination, the offline BC helps preserving ground knowledge that should be respected during training, while the online part helps with learning of new information encountered during execution. As such, putting together our distributed GAIL loss in Eq. 1, the standard clipped PPO loss , the offline BC loss, and the MIM loss introduced above, we present the full loss expression to train the MixTURE architecture as in Eq. 2, where \(_{}\) and \(_{D_{E}}\) are minibatches of trajectory segments belonging to current policy, \(\), and demonstration dataset, \(D_{E}\), respectively, \(\) is the total number of agents and \(\) is a tunable scaling parameter.

\[_{}(_{},_{D_{E}})=_{i=1}^{ }(_{_{}^{(c_{i})}}(_{},_{D_{E}})+ _{^{(c_{i})}}(_{}))+_{}_{^{(c_{i})}}(_{D_{E}})+_{}_{^{(c_{i})}}( _{})\] (2)

## 5 Evaluation

We break the problem of evaluating our proposed architecture for teaching multi-agent coordination policies to (heterogeneous) robot teams into three research questions (RQ):

* Can MixTURE learn useful multi-agent coordination strategies from synthetic data (e.g, models of human experts / Oz-of-Wizard )?
* Can MixTURE learn from diverse data generated by real human experts?
* How challenging is it for a human expert to provide multi-agent demonstrations and does MixTURE alleviate these challenges (comparing workload and system usability)?

**Environments -** In keeping with prior work in MARL and MA-LfD , we selected three multi-agent domains that are partially observable and require collaboration among heterogeneous agents (see Section 3). Please refer to the supplementary material for more details about the environments.

1. **Predator-Prey (PP)**: the goal in this homogeneous (i.e., same class agents) domain is for _\(\) predator_ agents with limited vision to find a stationary prey and move to its location.
2. **Predator-Capture-Prey (PCP)**: a new class of _capture_-agents, are introduced to the PP. In this heterogeneous domain, the goal of _predator_ agents is the same, while _capture_ agents must move to the prey location and capture it, without having any observation inputs.
3. **FireComander (FC)**: two classes of robots, _perception_ and _action_ robots, are required to collaborate to extinguish propagating firespots. Similar to the PCP domain, _perception_ robots search the domain to find hidden firespots, and _action_ robots with no observation must rely on communication to know where to put out the firespots using an extra action when on a fire. Unlike the PCP, in this complex domain firespots randomly spread over time and thus, the team must continue until all firespots are found and extinguished.

**Baselines -** To investigate our **RQ1**, we employ a variety of baselines, described below, all of which utilize the combined offline BC and online loss training scheme. To collect the synthetic dataset, the expert heuristic (Appendix 4) for environment-actions is a near-optimal search algorithm and for the communication, it is an anticipatory observation sharing mechanism inspired by prior work .

* **MARL**: MA-PPO optimizing both environment-action and communication policies.
* **BC+DC**: MixTURE ablation trained only via offline BC loss with diff. communication.
* **NC MA-GAIL**: Non-communicative ablation of the MA-GAIL  framework.
* **MA-GAIL**: Full MA-GAIL trained on full dataset w/ demonstrated communication.

### Human-Subject Experiment: Conditions and Procedure

To investigate our **RQ2** and **RQ3**, we conducted an IRB-approved human-subject user study in the FireCommander domain. For more experiment details please refer to the supplementary material.

**Domain, Setup, and Procedure -** Our experiments were conducted in the context of a simulated multi-robot task, leveraging the FireCommander (FC) domain under different difficulty levels and modes. Depending on the level of difficulty, there can be multiple initial firespots, hidden from the human, that propagate randomly based on a fixed wall-clock rate. The human expert was responsible to strategically move the simulated robots to find and extinguish all firespots as fast as possible. The human subject was shown a performance score at the end of each round, computed based on existing, found, and extinguished fires. After briefing, each subject began by filling in a pre-questionnaire form (demographic and prior videogame experience) followed by reading through a series of detailed game instructions. To minimize the learning effect, subjects were allowed to practice all conditions until they felt comfortable. Next, each subject played six different rounds of the game (i.e., two conditions and three difficulty levels) in a randomly selected order. The demonstration data was fully stored to be later used for training. Finally, each subject was asked to fill some post-measurement forms.

**Participants -** We recruited 55 participants (mean age \(=25.0{}2.67;34.5\%\) female). All participants were recruited through on-university-campus advertisement and were trained equally for the task.

**Independent Variables and Conditions -** In this study, we seek to determine if MixTURE can learn multi-agent collaborative policies from diverse human generated data without demonstrated communication and we compare its performance against the MA-GAIL  with expert demonstrated

Figure 2: Evaluation results for MixTURE and the baselines in the medium case on synthetic dataset. MixTURE outperforms all baselines in both sample complexity and performance at convergence.

communication. We examine the performance across three levels of difficulty, i.e., easy, medium, and hard, which represent game complexity. As such, we utilize a \(2 3\) within-subjects experiment design varying across two abstractions: (1) only demonstrating environment actions for each robot at each time step (i.e., _noComm_ condition), 2) demonstrating both environment actions and communication actions for each agent at each time step ((i.e., _withComm_ condition)).

**Metrics -** To evaluate our **RQ2** and **RQ3**, the demonstration data collected from the human subjects for both _noComm_ and _withComm_ conditions are used to train MixTURE and the benchmark MAGAIL , respectively. The algorithms are compared in terms of the learned policy performance (i.e., number of steps taken to win the game, where lower is better). Additionally, to address our **RQ3**, we leverage the NASA-TLX Workload Survey  and the System Usability Scale (SUS) .

### Results and Discussion

**RQ1: Evaluation on Synthetic Dataset -** We perform our evaluations across three different difficulty levels: (1) easy (\(5 5\) domain, \(3\) robots), (2) medium (\(10 10\) domain, \(6\) robots), and (3) hard (\(20 20\) domain, \(10\) robots). Table 1 presents the full evaluation results for collaborative policies learned by MixTURE and the baselines in terms of number of steps taken to win the game (lower is better). The test results show the mean performance values calculated over ten trials of running the best training models. As shown, MixTURE achieves significant improvement over all baselines and in all domains. Additionally, the learning curves in Fig. 2 (medium case), show significant improvement in sample complexity. We believe our model provides a strong step towards learning collaborative policies in multi-robot systems by setting a new SOTA in complex heterogeneous tasks.

We also performed several ablation studies, such as investigating scalability and effects of the MIM reverse model for message reconstruction, discriminator architecture, and the combined offline BC loss. Due to space constraints, all ablation results are available in the supplementary material.

**RQ2: Training and Evaluation Results on Human-Subject Dataset -** We train MixTURE and \(}\)-GAIL  (and other baselines) on data collected in our human-subject user experiment to investigate our **RQ2**. The results are presented in Fig. 3. Please see the Appendix for environment

    &  &  &  \\   &  &  & easy & medium & hard & easy & medium & hard & easy & medium & hard \\  MARL & ✓ & - & 15.57 & 17.93 & 47.40 & 23.38 & 56.04 & 79.76 & 78.77 & 79.09 & 80.00 \\ BC+DC & - & ✓ & 11.84 & 21.28 & 46.16 & 15.38 & 61.54 & 79.75 & 38.95 & 44.70 & 72.87 \\ NC MA-GAIL & - & - & 17.48 & 60.38 & 79.52 & 27.60 & 77.77 & 80.00 & 76.49 & 79.47 & 79.98 \\ MA-GAIL & ✓ & - & 11.68 & 20.39 & 49.08 & 16.43 & 44.84 & 79.86 & 77.46 & 79.47 & 80.00 \\
**MixTURE** & - & ✓ & **11.16** & **13.15** & **28.73** & **13.08** & **17.27** & **36.41** & **22.31** & **34.82** & **56.49** \\   

Table 1: Full evaluation results for all methods and all difficulty settings on synthetic dataset. _Heu._ and _Diff._ indicate a models access to heuristic or differentiable communication, respectively.

Figure 3: Evaluation results for MixTURE and MA-GAIL  on real human data. From left to right, the figures present test results for easy, medium, and hard scenarios with one initial firespot.

details. As shown, MixTURE can learn high-quality multi-robot collaboration policies from diverse human-generated demonstrations. This is while purely relying on human demonstrations , does not succeed in this task. We hypothesize that a key point underlying MixTURE's success despite diversity and heterogeneity in human data is that the MIM-based differentiable communication channels provide the model with ability to reason about the underlying human demonstrations and cope with trajectory distribution through automatically finding a suitable communication protocol. This result also shows that a demonstrated communication policy by a human expert is not enough to efficiently coordinate the robot team in complex domains as the human is unaware of all agents' local states, which leads to the failure of existing MA-LfD frameworks such as the MA-GAIL . We hypothesize that MA-GAIL trained on demonstrated communications fails because: (1) humans are not fully aware of all agents' full local state spaces and therefore, the demonstrated communication could be severely inefficient and sub-optimal. MixTURE instead learns an efficient communication policy automatically through gradient updates; (2) The laborious task of providing both environment and communication actions for the human demonstrators significantly deteriorates the quality of demonstrated policies, which can be confirmed by our subject-study results in next section.

We believe that this strong result shows great potential for the MixTURE model to efficiently teach multi-agent coordination and collaboration policies to robot teams through human demonstrations.

**RQ3: Statistical Analysis -** We investigate our **RQ3** by quantifying the workload and SUS measures reported by the human subjects. We hypothesize that:

**H1**: Demonstrating both an environment-action and a communication-action strategy for the robot team increases the human expert's workload and decreases the system's usability score.
**H2**: Demonstrating both an environment-action and a communication-action strategy for the robot team negatively affects human performance and the demonstration quality.

**H1**: We test for normality and homoscedasticity and do not reject the null hypothesis in either case, using Shapiro-Wilk (\(p>0.32\) and \(p>0.96\)) and Levene's (\(p>0.39\) and \(p>0.09\)) tests for workload and SUS, respectively. For workload, we perform a paired t-test and find that using the MixTURE model w/o communication demonstration was rated statistically significantly lower than using MA-GAIL w/ demonstrated communication by the expert (\(p<0.001\)) on NASA-TLX workload scale. For system usability, using a similar a paired t-test we find that using the MixTURE model w/o communication demonstration led to a statistically significantly higher SUS than using MA-GAIL w/ demonstrated communication by the expert (\(p<0.001\)). As shown in Fig. 4, relaxing the need for demonstrating a communication strategy reduced the humans' workload by \(44.3\%\) and increased the systems' usability scale by \(46.1\%\) in our experiment.

**H2**: We examine: (1) human's performance score in the game, (2) total tasks completed (i.e., fires extinguished), and (3) average demonstration time per step. We apply a paired samples Wilcoxon test and confirm that (see Fig. 5, from left to right), relaxing the need for demonstrating a communication strategy through MixTURE leads to achieving significantly higher performance score (\(p<0.001\)) by the human, better ability to scale to more complex scenarios with more tasks (\(p<0.001\)), and significantly lower demonstration time per step (\(p<0.001\)). Note that, the middle plot in Fig. 5 shows more tasks completed (i.e., more firespots killed) for _withComm_ condition under easy and moderate scenarios, which indicates a worse human performance in this conditions since existence of more firespots means inefficiency in extinguishing the fire before it spreads too large. On the other hand, under the _noComm_ condition, humans can easily scale to larger domain sizes and more initial firespots. Note that, lower tasks completed for _withComm_ condition under the hard case is attributed to failing the task and losing the game (i.e., hard game cut-off when score drops below 50).

**Further Discussions and Limitations -** Demonstrating multi-agent strategies can be considered a highly involved and high-workload task, which in turn can affect a human's situational awareness and

Figure 4: Workload and SUS results for **H1**.

optimality of demonstrations. We posit that a human's decision-making for one agent is influenced by knowledge of other agents' observations. However, we note that, classic MA-LfD methods, such as MA-GAIL, necessitate awareness all robots' states and observations **and** they require providing both environment and communication actions at the same time. In MixTURE, we relax this assumption by tasking the human to only provide environment actions for robots one at a time. Our real human subject study demonstrates this relaxation's feasibility, enabling successful demonstrations provided by humans for large and heterogeneous teams of simulated robots. In practice, one can use existing multi-agent datasets (e.g., collaborative assembly in ROBOTURK  or Meta's STARDATA for StarCraft II ) or readily create a demonstration dataset using existing tools (e.g., ROS, Gazebo). MixTURE's contribution comes in at this stage, where we can learn collaborative multi-agent policies from such datasets.

The addition of the MIM loss to Eq. 2 can complicate the tuning process. While we never observed any performance decay as a result of the MIM loss, tuning the MIM loss to achieve consistent and significant performance improvement seems to be challenging. Finally, MixTURE currently does not account for demonstration sub-optimality. An interesting future direction is then to modify the MixTURE architecture to address suboptimal human demonstrations.

**Conclusion -** We proposed the MixTURE model to learn multi-agent collaborative policies for a robot team, directly from human expert demonstrations. Using our method, a human expert can teach the robot team how to accomplish a task collaboratively via demonstrations and the team will automatically reason over and learn a communication strategy suitable for the underlying demonstrations. The learned communication helps the robot team to deal with the partial observability, reasoning about action-decisions to best respond to teammates' policies, and alleviate the effects of environment non-stationarity. We provided several empirical and experimental results, confirming MixTURE's strong ability to learn from expert heuristics and real diverse human generated data.

**Broader Impact**

Our experiments show that multi-agent learning from demonstration can be enabled for teams of cooperating heterogeneous robots via direct human teaching. This greatly assists robot collaboration through human domain knowledge and provides a strong next-step towards human-robot teaming. We note that our research could be applied for good or otherwise, particularly in an adversarial setting. Nonetheless, we believe democratizing this knowledge is for the benefit of society.