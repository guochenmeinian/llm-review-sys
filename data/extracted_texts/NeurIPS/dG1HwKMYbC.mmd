# FinCon: A Synthesized LLM Multi-Agent System

with Conceptual Verbal Reinforcement for Enhanced

FinCon: A Synthesized LLM Multi-Agent System

with Conceptual Verbal Reinforcement for Enhanced

FinCon: A Synthesized LLM Multi-Agent System

Yangyang Yu\({}^{1,}\), Zhiyuan Yao\({}^{1,}\), Haohang Li\({}^{1,}\), Zhiyang Deng\({}^{1,}\), Yuechen Jiang\({}^{1,}\), Yupeng Cao\({}^{1,}\)

Zhi Chen\({}^{1,}\), Jordan W. Suchow\({}^{1}\), Zhenyu Cui\({}^{1}\), Rong Liu\({}^{1}\), Zhaozhuo Xu\({}^{1}\), Denghui Zhang\({}^{1}\)

Koduvayur Subbalakshmi\({}^{1}\), Guojun Xiong\({}^{2}\), Yueru He\({}^{3}\), Jimin Huang \({}^{3}\), Dong Li\({}^{3}\), Qianqian Xie\({}^{3,}\)

\({}^{1}\)Stevens Institute of Technology \({}^{2}\)Harvard University \({}^{3}\)The Fin AI

\({}^{}\)These authors contributed equally \({}^{}\) Corresponding author: qianqian.xie@yale.edu

###### Abstract

Large language models (LLMs) have shown potential in complex financial tasks, but sequential financial decision-making remains challenging due to the volatile environment and the need for intelligent risk management. While LLM-based agent systems have achieved impressive returns, optimizing multi-source information synthesis and decision-making through timely experience refinement is underexplored. We introduce FinCon, an LLM-based multi-agent framework with CONceptual verbal reinforcement for diverse FINancial tasks. Inspired by real-world investment firm structures, FinCon employs a **manager-analyst hierarchy**, enabling synchronized cross-functional agent collaboration towards unified goals via natural language interactions. Its **dual-level risk-control component** enhances decision-making by monitoring daily market risk and updating systematic investment beliefs through self-critique. These **conceptualized beliefs** provide verbal reinforcement for future decisions, selectively propagated to relevant agents, improving performance while reducing unnecessary peer-to-peer communication costs. FinCon generalizes well across tasks, including single stock trading and portfolio management. 1

## 1 Introduction

The intricacies and fluctuations inherent in financial markets pose significant challenges for making high-quality, sequential investment decisions. In tasks such as single stock trading and portfolio management, each intelligent decision is driven by multiple market interactions and the integration of diverse information streams, characterized by varying levels of timeliness and modalities [1; 2]. The primary objective of these tasks is to maximize profit while managing present market risks in an open-ended environment.

In practice, trading firms often depend on synthesized teamwork, structured hierarchically with functional roles such as data analysts, risk analysts, and portfolio managers communicating across levels [3; 4]. These roles are responsible for the careful integration of diverse resources. However, the cognitive limitations of human team members can hinder their capacity to rapidly process market signals and achieve optimal investment outcomes .

To enhance investment returns and address the limitations of human decision-making, various studies have explored methods such as deep reinforcement learning (DRL) to develop agent systems that simulate market environments and automate investment strategies [6; 7; 8]. Concurrently,advancements in large language models (LLMs) have shown great potential in performing complex tasks, including reasoning , tool-using , planning , decision-making , and even in various financial applications , suggesting they may surpass existing agent architectures. Language agents, in particular, are distinguished by their human-like communication and flexible, prompt-based structures, making them well-suited to diverse decision-making settings .

To achieve optimal decision-making performance, two critical factors must be considered: (1) Organizing agents to facilitate effective teamwork and efficient communication, and (2) Enabling agents to continuously learn and refine their actions. Studies have shown that mimicking human organizational structures can successfully coordinate language agents for specific tasks . Additionally, recent advances in textual gradient-based prompt optimization  and verbal reinforcement  have proven effective in iteratively improving the reasoning and decision-making capabilities of language agents.

Language agent systems designed for financial decision-making, such as FinGPT , FinMem, and FinAgent, have shown strong performance. However, they face several limitations. First, their reliance on agents' risk preferences based on short-term market fluctuations fails to control long-term risk exposure, potentially overlooking fundamental factors driving investment returns. A more effective approach is to quantify investment risks using established **measures of risk** from quantitative finance . Second, these systems are often limited to single-asset trading tasks, making them less adaptable to multi-asset financial applications like portfolio management. Third, they place significant pressure on a single agent to understand and process information within a constrained context window, which can degrade decision quality. Although approaches like StockAgent use multi-agent systems for stock trading, their reliance on extensive discussions between numerous LLM agents leads to high communication costs and slow decision-making. Moreover, the absence of a clear optimization objective can compromise outcome effectiveness. Additional related work in the literature is discussed in the Appendix A.1.

To address these issues, we propose FinCon, an LLM-based multi-agent framework for critical financial tasks, such as single-stock trading and portfolio management, as shown in Figure 1. Our main contributions are: **1)** Inspired by real-world investment roles, we introduce a novel **Synthesized Manager-Analyst hierarchical communication structure** with a risk-control component. This structure allocates financial data from different sources to corresponding functional analyst agents, allowing them to focus on specific insights, while the manager consolidates these inputs to make informed trading decisions. The streamlined communication reduces redundant peer-to-peer interaction, lowering costs and improving efficiency. **2)** Our framework generalizes beyond stock trading to handle **portfolio management**, an area not previously addressed by other financial language agent systems. **3)** We developed a **dual-level risk control component** to update risk assessments both within and across episodes. Within episodes, risk is supervised using the Conditional Value at Risk (CVaR), a quantile-based risk measure . Across episodes, we introduced a **verbal reinforcement** mechanism, where investment beliefs are updated based on reasoning trajectories and profit-and-loss (PnL) trends, distilled into **conceptual perspectives**. These insights are selectively back-propagated from the manager to relevant analyst agents. Our ablation studies demonstrate the effectiveness of this risk control design in managing market risk and enhancing trading performance.

Figure 1: The general framework of FinCon.

Preliminaries

Here, we outline the mathematical notations for the two major financial decision-making tasks that will be explicitly discussed in our work. We also formally present the generalized modeling formulation using a Partially Observable Markov Decision Process (**POMDP**)  for financial decision-making tasks.

### Financial Decision-making Tasks Formulation

**Single Stock Trading Tasks.** FinCon uses analyst agents group \(\{M_{pr}^{i}\}_{i=1}^{I}\) to process multi-modal market information sources. The processed information is then used by a manager agent \(M_{a}\) to make trading decisions (buy, sell, hold), and to provide relevant reasoning texts. Note that the "sell" signal means the system makes a "short-selling" decision, that is, a negative trading position is allowed. Additionally, FinCon evaluates the daily investment risk, followed by prompt-optimization for the manager agent from risk-control component \(M_{r}\).

**Portfolio Trading Tasks**. In addition to processing multi-modal market information, the analyst agents also construct a stock pool for portfolio management by considering the statistical correlations between stock returns. The manager agent then makes trading decisions for each stock in the pool. Finally, the manager agent determines the portfolio weights for all stocks using an external optimization solver that applies the mean-variance optimization described below :

\[_{},-, {w}w_{n}=,&\\ [-1,0],&\\ =0,&\,\ \  n\{1,,N\}\] (1)

where \(=(w_{1},w_{N})^{N}\) is portfolio weights vector, \(\) and \(\) are the shrinkage estimators of \(N\)-dimensional sample expected return and \(N N\) sample covariance matrix of chosen stocks' daily return sequences respectively . We note that portfolio weights are rebalanced on daily basis. In our implementation, we begin by calculating the portfolio weights through solving the aforementioned optimization problem. Next, the target positions are determined by linearly scaling these portfolio weights from the previous step.

### Modeling Quantitative Trading as POMDP

Formally, we model quantitative trading task as an infinite horizon POMDP [40; 41] with time index \(=\{0,1,2,\}\) and discount factor \((0,1]\). The components of this model are as follows: (1) a state space \(\) where \(\) is the observable component and \(\) is unobservable component of the financial market; (2) the action space of analyst agents group is \(=_{i=1}^{I}^{i}\), where \(^{i}\) represents the collection of processed market information in textual format done by agent \(i\) (total \(I\) analyst agents), and for manager agent, its action space is \(\), which is modeled as (_"buy", "sell", "hold"_) for single stock trading task and as (\(\{\)_"buy", "sell", "hold"_\(\}[-1,1])^{ N}\) for portfolio management task among \(N\)-socks; (3) the reward function \((o,b,a):\) uses daily profit & loss (PnL) as the output; (4) the observation process \(\{O_{t}\}_{t}\) is an \(I\)-dimensional process, with the \(i^{th}\) entry \(\{O_{t}^{i}\}_{t}\) representing one type of uni-modal information flow solely processed by the analyst agent \(i\); (5) the reflection process \(\{B_{t}\}_{t}\) represents the manager agent's self-reflection, which is updated from \(B_{t}\) to \(B_{t+1}\) on daily basis ); (7) the processed information flow \(_{t}=(_{t}^{1},,_{t}^{I}),\ t \), which represents the information processing outputs from analyst agents group.

Then, our multi-agent system is supposed to learn the policies of all agents: the policies of analyst agents \(_{^{i}}^{i}:^{i},i\{1,,I\}\) (the ways to process information, i.e. \(_{t}^{i}_{^{i}}^{i}(|O_{t}^{i})\)), and the policy of manager agent \(_{^{a}}:\) (the ways to make trading decisions, i.e. \(A_{t}_{^{a}}(|_{t},B_{t})\)) such that the system maximizes cumulative trading reward while controlling risk . All policies \(_{}=(\{_{^{i}}^{i}\}_{i=1}^{I},_{^{a}})\) are parameterized by textual prompts \(=(\{^{i}\}_{i=1}^{I},^{a})\). By updating prompts via the risk-control component \(M_{r}\), the whole system optimizes policies \(_{}\) in a verbal reinforcement manner. By denoting daily profit & loss (PnL) by \(R_{t}^{_{}}=(O_{t},B_{t},A_{t})\), the 

[MISSING_PAGE_EMPTY:4]

The primary goal is to enhance information presentation and comprehension while minimizing unnecessary communication costs. The working mechanism of each agent is illustrated in Figure 2.

_Analyst Agents_. In FinCon, analyst agents distill concise investment insights from large volumes of multi-source market data, each focused on a specific trading target. To ensure high-quality reasoning by reducing task load and sharpening focus, each agent processes information from a single source in a uni-modal fashion, providing pre-specified outputs based on prompts. This setup mimics an efficient human team, where each analyst specializes in a specific function, filtering out market noise and extracting key insights. These agents assist the manager agent by consolidating denoised investment information from multiple perspectives. We implement seven distinct types of analyst agents using LLMs, each producing unique investment insights, as shown in the upper section of Figure 2. Based on input modalities, three textual data processing agents extract insights and sentiments from daily news and financial reports. An audio agent uses the Whisper API to interpret investment signals from earnings call recordings. Additionally, a data analysis agent and a stock selection agent compute critical financial metrics, such as momentum and CVaR, using tabular time series data. The stock selection agent also oversees portfolio selection by applying the classic risk diversification method in quantitative finance .

_Manager Agent_. In FinCon, the manager agent acts as the sole decision-maker, responsible for generating trading actions for sequential financial tasks. For portfolio management, it calculates portfolio weights using convex optimization techniques constrained by directional trading decisions (see optimization problem as presented in Formula (1)). Four key mechanisms support each decision: 1) Consolidating distilled insights from multiple analyst agents. 2) Receiving timely risk alerts and conceptual investment updates from the risk control component. 3) Refining its investment beliefs about the influence of different information sources on trading decisions for specific targets. 4) Conducting self-reflection by reviewing reasoning outcomes from previous trading actions.

#### 3.1.2 Risk-Control Component

We have innovatively designed a dual-level risk-control mechanism consisting of within-episode and over-episode risk management. The within-episode mechanism detects market risk within a single training episode, allowing the manager agent to promptly adjust trading actions to mitigate potential losses by accounting for short-term trading performance and market fluctuations. This mechanism also operates during the testing phase. In contrast, the over-episode mechanism functions exclusively during the training stage, providing prompt optimization guidance by comparing the trading performance of the current episode with the previous one. This reflection enables the manager agent to update its investment beliefs based on performance differences. By drawing on prior observations of market risk and profitability patterns, these two mechanisms help avoid repeated investment errors, thereby enhancing future returns.

_Within-Episode Risk Control:_ The within-episode risk alert is triggered by a sudden drop in the CVaR value. Conditional Value at Risk (**CVaR**) represents the average of the worst-performing 1% of daily trading Profits and Losses (**PnLs**). A decrease in CVaR typically indicates that recent trading decisions have led to PnLs within this bottom percentile, signaling a potentially high-risk market condition. When this occurs, the manager agent adopts a risk-averse stance for that day's trading actions, regardless of the prior risk status.

_Over-Episode Risk Control:_ The over-episode investment belief updates facilitate adjustments in the emphasis placed on analysts' information distillation and the manager's action generation. Through the _Actor-Critic_ mechanism, FinCon episodically optimizes its investment strategy for a given trading target, as defined by objective (Equation (2)), by reflecting on a series of winning and losing actions. This episodic reflection is powered by a unique _Conceptual Verbal Reinforcement (CVRF)_. CVRF assesses the performance of consecutive training episodes by analyzing the information perspectives provided by analysts and reflected in the manager's decision-making. It then conceptualizes and attributes the evaluation outcomes to these specific aspects. By comparing the conceptualized insights from more profitable versus less profitable episodes, the system informs both the manager and analyst agents about necessary belief adjustments, helping prioritize the most relevant market information for increased profitability, as detailed in Algorithm 1. CVRF leverages text-based gradient descent to offer optimal conceptual investment guidance for the manager agent, refining prompts with the latest investment beliefs. The guidance is organized according to perspectives provided by the respective analyst agents, key financial indicators (such as historical momentum), or other crucial viewpoints.

These belief updates are first received by the manager agent and then selectively propagated to relevant agents, minimizing over-communication. Unlike the text-based gradient descent proposed by Tang et al., which uses prompt editing distance as a learning rate, we derive investment belief updates by measuring the overlapping percentage of trading actions between two consecutive training trajectories at each belief update, as presented in Table 1. This approach has proven effective in improving the performance of a synthesized agent system, where each worker has a clearly defined and specialized role. The above describes the workflow of FinCon during the training stage, while the workflow during the testing stage is detailed in the Appendix A.3.

```  Initialize manager-analysts component \(\{M_{pr}^{i}\}_{i=1}^{I}\&M_{a}\), and risk-control component \(M_{r}\).  Initialize trading start date \(s\), stock pool of portfolio and portfolio weights \(w_{0}=\).  Initialize Prompts \(\), policy \(_{}\). while episode \(k<Max\)do for\(0 t T\)do  Run policy \(_{}\) (collecting daily PnL \(r_{t}\), portfolio weights \(w_{t}\) and daily CVaR value \(_{t}\)). if\(_{t}<_{t-1}\) or \(r_{t}<0\)then  Trigger \(M_{a}\) self-reflection and generate self-reflection text \(B_{t}\). endif  Get the investment trajectory \(_{k}\) and calculate the objective function value (Function (2)). endfor  Compare the objective function values of episodes \(k-1\) & \(k\), and decide which episode has higher performance;  Pass sustained profitable and losing trades from two episodes \(_{k-1}\) & \(_{k}\) into risk-control component \(M_{r}\);  Guide \(M_{r}\) to summarize conceptualized investment insights \(\{c_{k-1}^{1},,c_{k-1}^{n}\}\) & \(\{c_{k}^{1},,c_{k}^{m}\}\);  Compare two sets of conceptualized insights and give the reasoning for higher performance (providing textual optimization direction, i.e. \(meta\)\(prompt\));  Calculate the overlapping percentage between trading decision sequences from two episodes (providing the learning rate \(\));  Update the prompts by textual gradient-descent: \( M_{r}(,,meta\)\(prompt)\). endwhile ```

**Algorithm 1** Training Stage Algorithm of FinCon: Conceptual Verbal Reinforcement using Textual-based Gradient Descent

### Modular Design of FinCon Agents

Here, we explain the modular design of FinCon agents. Inspired by the recent works of Park et al.  and Sumers et al.  on developing the cognitive structure of language agents for human-like behavior, agents in FinCon integrate four modules to support their necessary functionalities, along with a shared general configuration, as detailed in Appendix A.4:

_General Configuration and Profiling Module_. This module defines task types (e.g., stock trading, portfolio management) and specifies trading targets, including sector and performance details. The profiling module outlines each agent's roles and responsibilities. The concatenated textual content from these parts is used to query investment-related events from the agents' memory databases.

_Perception Module_. This module defines how each agent interacts with the market, specifying the information they perceive, receive, and communicate, with interactions tailored to each agent's role. In detail, it converts raw market data, feedback from other agents, and information retrieved from the memory module into formats compatible with large language models, enabling them to process these inputs effectively. _Memory Module_. The memory module comprises three key components:

  
**Factor** & **Gradient-based model optimizer** & **LLM-based prompt optimizer** \\  Upgrade direction & Model value gradient momentum & Prompt reflection trajectory \\  Update method & Learning rate descent & Overlapping percentage of trading decisions \\   

Table 1: Analogy between glossaries in model optimizer and prompt optimizer.

working memory_, _procedural memory_, and _episodic memory_. Much like how humans process events in their working memory , FinCon agents leverage their working memory to perform a range of tasks, including observation, distillation, and refinement of available memory events, all tailored to the specific roles of the agents. _Procedural memory_ and _episodic memory_ are critical for recording historical actions, outcomes, and reflections during sequential decision-making. Procedural memory is generated after each decision step within an episode, storing data as memory events. For trading inquiries, top events are retrieved from procedural memory and ranked based on recency, relevance, and importance, following a simplified version of the method proposed by Yu et al. , with further details provided in Appendix A.13. Each functional analyst agent has distinct procedural memory decay rates, reflecting the timeliness of various financial data sources, which is crucial for aligning multi-type data influencing specific time points and supporting informed decision-making. The manager agent enhances the procedural memory of analyst agents by providing feedback through an access counter. Both analyst and manager agents maintain procedural memory, but they keep different records, as illustrated in Appendix A.4. _Episodic memory_, exclusive to the manager agent, stores actions, PnL series from previous episodes, and updated conceptual investment beliefs from the risk control component.

## 4 Experiments

Our experiment answers the key research questions (RQs): **RQ1:** Does FinCon demonstrate robustness across multiple financial decision-making tasks, especially single-asset trading and portfolio management? **RQ2:** Is the within-episode risk control mechanism in FinCon effective in maintaining superior decision-making performance? **RQ3:** Is the over-episode risk control mechanism in FinCon effective in timely updating the manager agent's beliefs to enhance trading performance?

### Experimental Setup

_(i) Multi-Modal Datasets._ We construct a market environment representation using real-world financial data, including stock prices, daily news, company filings (Form 10-Q, Form 10-K, etc.), and ECC audio from January 3, 2022, to June 10, 2023, as detailed in Appendix. A.8. Each data source is assigned to specific analyst agents based on its timeliness. _(ii) Evaluation Metrics._ We evaluate FinCon and other state-of-the-art (SOTA) agents using metrics such as Cumulative Return (CR%), Sharpe Ratio (SR), and Max Drawdown (MDD%). CR and SR are prioritized because they provide comprehensive insights into overall performance and risk-adjusted returns, essential for informed investment decisions. In contrast, MDD focuses on evaluating the potential for significant losses, making it a secondary consideration in this context. Details are provided in Appendix A.10. _(iii) Comparative Methods._ For single-stock trading, we compare FinCon with DRL agents (A2C, PPO, DQN) and LLM-based agents (Generative Agent (GA), FinGPT, FinMem, FinAgent) as well as the Buy-and-Hold (B & H) strategy. For portfolio management, we compare FinCon with Markowitz MV, FinRL-A2C, and Equal-Weighted ETF strategy, with further details provided in Appendix A.12. The detailed experiment parameter configurations of the above agent systems are articulated in Appendix. A.14. _(iv) Implementation Details._ All LLM-based agents use GPT-4-Turbo, with temperature set at 0.3. FinCon is trained from January 3, 2022, to October 4, 2022, and tested from October 5, 2022, to June 10, 2023. DRL agents are trained over the period from January 1, 2018, to October 4, 2022, to ensure that there is sufficient data available for model convergence. Performance is based on the median CR and SR from five repeated epochs. For a more detailed explanation of the experimental setup, please refer to the Appendix A.5.

### Main Results

In response to **RQ1**, we analyze FinCon's performance on two types of financial decision-making tasks: single-asset trading and portfolio management. The system's ability to manage these sequentially complex decisions is thoroughly evaluated in the following sections.

#### 4.2.1 Single Asset Trading Task

In this task, we evaluate FinCon's performance against other leading algorithmic trading models by trading eight different stocks. As presented in the tables above, FinCon significantly outperforms both LLM-based and DRL-based approaches in terms of CRs and SRs. Additionally, FinConachieves one of the lowest MDD values across most trading assets, demonstrating effective risk management while still delivering the highest investment returns. For detailed performance comparisons across all models and metrics, refer to Table 1.

Overall, even with extended training periods, DRL-based models tend to underperform, with the A2C algorithm lagging significantly behind other agents in general. Notably, the training periods for Nio Inc. (NIO) and Coinbase Global Inc. (COIN) require clarification. NIO, which completed its IPO in September 2018, has a slightly shorter training period than other tickers, yet the DRL algorithms for NIO still achieved convergence. In contrast, Coinbase Global Inc. (COIN), which completed its IPO in April 2021, presented a more significant challenge due to the limited available trading data, causing DRL algorithms to struggle with convergence. This limitation underscores a major drawback for DRL agents when trading recently listed IPOs. Consequently, our analysis of COIN focuses on comparisons between FinCon, LLM-based agents, and the buy-and-hold (B & H) strategy. In this context, FinCon demonstrates a clear advantage, achieving a cumulative return of over 57% and a Sharpe ratio of 0.825. Furthermore, LLM-based agents, which can leverage diverse data types and require minimal training, effectively mitigate the challenges faced by DRL algorithms.

In alignment with market trends, FinCon consistently exhibits superior decision-making quality compared to other LLM-based agents, regardless of market conditions--whether bullish (e.g., GOOG, MSFT), bearish (e.g., NIO), or mixed (e.g., TSLA). We attribute this performance to its high-quality distillation of information through a synthesized multi-agent collaboration mechanism, combined with its dual-level risk control design, positioning FinCon as a leader in the space. By contrast, FinGPT primarily relies on sentiment analysis of financial information, failing to fully exploit the potential of LLMs to integrate nuanced textual insights with numerical financial indicators. Similarly, GA and FinMem use single-agent frameworks without sophisticated information distillation processes or a diverse toolset, placing heavy cognitive demand on the agent to process multi-source information, especially when dealing with large and varied data modalities. Moreover, their static or minimal investment belief systems result in weak filtering of market noise. As illustrated in Figure 7 (a) & (b) of Appendix A.7.2, this limitation leads these models to consistently hold lower positions and hesitate between 'buy' or'sell' decisions, ultimately resulting in suboptimal performance.

FinCon overcomes these challenges through its innovative multi-agent synthesis, enabling it to deliver superior outcomes. Although FinAgent performs well when integrating images and tabular data, it struggles to remain competitive when incorporating audio data, such as ECC recordings, which are critical in real-world trading. Additionally, FinAgent relies on similarity-based memory retrieval, which can lead to decisions based on outdated information, often resulting in errors. In

    &  &  &  &  \\   & CR\(\%\)\(\) & SR\({}^{}\) & MDDV\(\) & CR \(\%\)\(\) & SR\({}^{}\) & MDDV\(\) & CR\(\%\)\(\) & SR\({}^{}\) & MDDV\(\) & CR\(\%\)\(\) & SR\({}^{}\) & MDDV\(\%\)\(\) \\  Market & B&A & 6.425 & 0.145 & 58.150 & 2.030 & 0.072 & 34.241 & -77.210 & -1.449 & 63.975 & 27.856 & 1.230 & 15.010 \\  Our Model & FinCon & 82.871 & 1.972 & 29.727 & 24.848 & 0.904 & 25.889 & 17.461 & 0.335 & 40.647 & 31.625 & 1.538 & 15.010 \\   & GA & 16.535 & 0.391 & 54.131 & -5.631 & -0.199 & 37.213 & -3.176 & -1.574 & 3.155 & -31.821 & -1.414 & 39.808 \\  & FinGPT & 1.549 & 0.044 & 24.00 & -29.811 & -1.310 & 29.617 & -1.4959 & -0.121 & 37.344 & 21.535 & 1.315 & 16.503 \\  & FinMem & 36.452 & 1.552 & 16.674 & -18.011 & -0.773 & 36.625 & -48.371 & -1.8610 & 64.142 & -22.036 & -1.247 & 29.435 \\  & FinAgent & 11.960 & 0.271 & 55.734 & -24.588 & -1.493 & 33.074 & 0.933 & 0.051 & 19.181 & -27.534 & -1.247 & 39.544 \\   & A2C & -35.644 & -0.805 & 61.502 & -12.506 & -0.444 & 37.169 & -0.1910 & -1.728 & 68.911 & 21.397 & 0.962 & 21.458 \\  & PPO & 1.409 & 0.032 & 94.740 & 3.863 & 0.133 & 28.085 & -72.199 & -1.332 & 62.093 & -4.761 & -21.243 & 0.950 \\  & DQN & -1.296 & -0.029 & 58.150 & 11.171 & 0.398 & 31.174 & -35.419 & -0.662 & 56.905 & 27.021 & 1.216 & 21.458 \\    &  &  &  &  \\   & CR\(\%\)\(\) & SR\({}^{}\) & MDDV\(\) & CR \(\%\)\(\) & SR\({}^{}\) & MDDV\(\) & CR\(\%\)\(\) & SR\({}^{}\) & MDDV\(\) & CR\(\%\)\(\) & SR\({}^{}\) & MDDV\(\) \\  Market & B&A & 22.315 & 1.107 & 20.659 & 22.420 & 0.891 & 21.191 & 57.338 & 1.794 & 20.926 & -21.756 & -0.311 & 60.187 \\  Our Model & FinCon & 27.352 & 1.597 & 15.266 & 25.077 & 1.052 & 17.530 & 69.239 & 2.370 & 20.792 & 57.045 & 0.825 & 42.679 \\  GA & 5.694 & 0.372 & 14.161 & -1.515 & -0.192 & 8.210 & 41.770 & 1.485 & 20.926 & 19.271 & 0.277 & 67.532 \\  & FinGPT & 20.321 & 1.161 & 16.759 & 0.242 & 0.011 & 26.848 & 11.925 & 0.472 & 20.201 & 99.553 & -1.807 & 74.967 \\  & FinMem & 21.397 & 0.994 & 11.268 & 0.311 & 0.018 & 21.503 & -10.306 & -0.478 & 27.692 & 0.811 & 0.017 & 50.390 \\  & FinAgent & 20.757 & 1.041 & 19.896 & -7.440 & -1.024 & 10.360 & 61.303 & 1.960 & 20.926 & -5.971 & -0.106 & 56.882 \\   & A2C & 13.781 & 0.683 & 14.226 & 8.562 & 0.340 & 11.911 & -8.176 & -0.258 & 0.9579 & - & - \\  & PPO & 14.041 & 0.704 & 22.785 & 2.434 & 0.097 & 25.202 & -33.1344 & -0.149 & 33.377 & - & - \\   & DON & 21.15 & 1.048 & 16.131 & 20.690 & 0.822 & 21.191 & 21.753 & 0.687 & 39.733 & - & - \\   

Table 2: Comparison of key performance metrics during the testing period for the single-asset trading tasks involving eight stocks, between FinCon and other algorithmic agents. _Note that the highest and second highest CRs and SRs have been tested and found statistically significant using the Wilcoxon signed-rank test. The highest CRs and SRs are highlighted in red, while the second highest are marked in blue._contrast, FinCon's memory structure accounts for the varying timeliness of multi-source financial data, significantly enhancing decision quality and overall performance.

#### 4.2.2 Portfolio Management Task

In this task, we compare FinCon's performance with the Markowitz Mean-Variance (MV) portfolio  and FinRL  in managing two small portfolios: Portfolio 1 (TSLA, MSFT, and PFE) and Portfolio 2 (AMZN, GM, and LLY). These assets were selected by the stock selection agent from a pool of 42 stocks, each with sufficient news data (over 800 news articles during the combined training and testing periods), as illustrated in Figure 9 in Appendix A.9. The training and testing periods, the backbone model and the parameter settings are consistent with those used in the single-asset trading task. For the Markowitz MV portfolio, we estimate the covariance matrix and expected returns using the same training data. In the case of FinRL, we use five years of training data prior to the test period. As detailed in Table 3 and Figure 3, our results show that FinCon outperforms both the Markowitz MV portfolio and FinRL as well as the market baseline - Equal-Weighted ETF, achieving significantly higher CRs and SRs, as well as MDDs.

However, managing multi-asset portfolios introduces more complexity, leading to a higher likelihood of hallucination compared to single-asset trading. This is due to the increased input length and complexity involved in multi-asset decision-making. While FinCon mitigates this issue by distributing tasks across specialized agents that focus on critical investment insights, it occasionally generates incorrect information, such as non-existent indices of memory events. Handling multi-asset decision-making requires sophisticated logic and substantial market information, which poses a significant challenge for LLMs when processing extended contexts. This complexity has left portfolio management relatively unexplored in previous language agent studies. Nonetheless, FinCon demonstrates considerable potential by constructing agent systems that can tackle complex financial tasks through effective resource optimization, even when managing relatively compact portfolios.

### Ablation Studies

In response to **RQ2** and **RQ3**, we conduct a comprehensive evaluation of our unique risk control component through two ablation studies. Both studies maintain consistency with the training and testing periods used in the main experiments. The first study examines the effectiveness of the within-episode risk control mechanism, which leverages Conditional Value at Risk (CVaR) to manage risk in real-time, as detailed in Table 4. Comparisons on primary metrics illustrate that the success of utilizing CVaR for within-episode risk control is evident in both bullish and bearish market environments in the

Figure 3: Portfolio values of Portfolio 1 & 2 changes over time for all the strategies. The computation of portfolio value refers to Equation 7 in Appendix A.10.

  
**Models** & **CR \% \(\)** & **SR\(\)** & **MDD \% \(\)** \\  FinCon & 113.836 & 3.269 & 16.163 \\ Markowitz MV & 12.636 & 0.614 & 17.842 \\ FinRL-A2C & 19.461 & 0.831 & 26.917 \\ Equal-Weighted ETF & 9.344 & 0.492 & 21.223 \\    
  
**Models** & **CR \% \(\)** & **SR\(\)** & **MDD \% \(\)** \\  FinCon & 32.922 & 1.371 & 21.502 \\ Markowitz MV & 10.289 & 0.540 & 25.099 \\ FinRL-A2C & 11.589 & 0.649 & 15.787 \\ Equal-Weighted ETF & 15.061 & 0.867 & 14.662 \\   

Table 3: Key performance metrics comparison among all portfolio management strategies of Portfolio 1 & 2. FinCon leads all performance metrics.

single asset trading case. Moreover, in portfolio trading with mixed price trends, our within-episode risk control mechanism performs robustly by monitoring the entire portfolio's value fluctuations. The second study focuses on the over-episode risk control mechanism, demonstrating its critical role in updating the trading manager agent's beliefs to provide a more comprehensive understanding of current trading conditions, as articulated in Table 5. The markedly improved CRs and SRs in both decision-making scenarios underscore the effectiveness of using CVRF to update investment beliefs episoidically, guiding the agent towards more profitable investment strategies. Additionally, FinCon demonstrates significant learning gains, achieving these results after only four training episodes--substantially fewer than what is typically required by traditional RL algorithmic trading agents. More visualizations and analysis are provided in the Appendix A.6.

## 5 Conclusion

In this paper, we present FinCon, a novel LLM-based multi-agent framework for financial decision-making tasks, including single stock trading and portfolio management. Central to FinCon is the Synthesized Manager-Analyst hierarchical communication structure and a dual-level risk control component. This communication method channels financial data from multiple sources to specialized analyst agents, who distill it into key investment insights. The manager agent then synthesizes these insights for decision-making. Our experimental evaluations demonstrate the efficacy of our risk control mechanism in mitigating investment risks and enhancing trading performance. Additionally, the streamlined communication structure reduces overhead. The dual-level risk control component introduces a novel approach to defining agent personas, enabling dynamic updates of risk and market beliefs within agent communication. A valuable future research direction would be to scale FinCon's framework to manage large-sized portfolios comprising tens of assets, while maintaining the impressive decision-making quality demonstrated with smaller portfolios. Given the LLM's input length constraint, a critical challenge lies in striking an optimal balance between information conciseness through agent distillation and potential performance deterioration when extending the current context window. Addressing this will be essential for ensuring quality-assured outcomes.

  
**Task** & **Assets** & **Market Trend** & **Models** & **CR \%\(\)** & **SR\(\)** & **MDD \%\(\)** \\   & GOOG & General Bullish \(\) & w/ CVaR & 25.077 & 1.052 & 17.530 \\  & & & w/o CVaR & -1.461 & -0.006 & 27.079 \\  & & & w/ CVaR & 17.461 & 0.335 & 40.647 \\  & & & w/o CVaR & -52.887 & -1.002 & 70.243 \\  Portfolio & (TSLA, & & w/ CVaR & 113.836 & 3.269 & 16.163 \\ Management & MSFT, PFE) & Mixed & w/o CVaR & 14.699 & 1.142 & 17.511 \\   

Table 4: Key metrics FinCon with vs. without implementing **CVaR for within-episode risk control**. The performance of FinCon with the implementation of CVaR won a leading performance in both single-asset trading and portfolio management tasks.

  
**Task** & **Assets** & **Market Trend** & **Models** & **CR \%\(\)** & **SR\(\)** & **MDD \%\(\)** \\   & GOOG & General Bullish \(\) & w/ belief & 25.077 & 1.052 & 17.530 \\  & & & w/o belief & -11.944 & -0.496 & 29.309 \\  & & & w/ belief & 17.461 & 0.335 & 40.647 \\  & & & w/o belief & 8.197 & 0.156 & 55.688 \\  Portfolio & (TSLA, & & w/ belief & 113.836 & 3.269 & 16.163 \\ Management & MSFT, PFE) & Mixed & w/o belief & 28.432 & 1.181 & 27.535 \\   

Table 5: Key metrics FinCon with vs. without implementing **belief updates for over-episode risk control**. The performance of FinCon with the implementation of CVRF won a leading performance in both single-asset trading and portfolio management tasks.