# Neural Pose Representation Learning for Generating and Transferring Non-Rigid Object Poses

Seungwoo Yoo  Juil Koo  Kyeongmin Yeo  Minhyuk Sung KAIST

{dreamy1534,63days,aaaaa,mhsung}@kaist.ac.kr

###### Abstract

We propose a novel method for learning representations of poses for 3D deformable objects, which specializes in 1) disentangling pose information from the object's identity, 2) facilitating the learning of pose variations, and 3) transferring pose information to other object identities. Based on these properties, our method enables the generation of 3D deformable objects with diversity in both identities and poses, using variations of a single object. It does not require explicit shape parameterization such as skeletons or joints, point-level or shape-level correspondence supervision, or variations of the target object for pose transfer. We first design the pose extractor to represent the pose as a keypoint-based hybrid representation and the pose supplier to learn an implicit deformation field. To better distill pose information from the object's geometry, we propose the implicit pose supplier to output an intrinsic mesh property, the face Jacobian. Once the extracted pose information is transferred to the target object, the pose supplier is fine-tuned in a self-supervised manner to better describe the target object's shapes with pose variations. The extracted poses are also used to train a cascaded diffusion model to enable the generation of novel poses. Our experiments with the DeformThings4D and Human datasets demonstrate state-of-the-art performance in pose transfer and the ability to generate diverse deformed shapes with various objects and poses.

## 1 Introduction

The recent great success of generative models  has been made possible not only due to advances in techniques but also due to the enormous scale of data that has become available, such as LAION  for 2D image generation. For 3D data, the scale has been rapidly increasing, as exemplified by OboiverseXL . However, it is still far from sufficient to cover all possible 3D shapes, particularly deformable, non-rigid 3D shapes such as humans, animals, and characters. The challenge with deformable 3D shapes is especially pronounced due to the diversity in _both

Figure 1: Results of motion sequence transfer (left) and shape variation generation (right) using the proposed neural pose representation. On the left, poses from source shapes (first and third rows) are transferred to target shapes (second and fourth rows), preserving intricate details like horns and antlers. On the right, new poses sampled from a cascaded diffusion model, trained with shape variations of the bunny (last column), are transferred to other animal shapes.

the _identities_ and _poses_ of the objects. Additionally, for a new 3D character created by a designer, information about possible variations of the creature does not even exist.

To remedy the requirement of a large-scale dataset for 3D deformable shape generation, we aim to answer the following question: Given variations of a _single_ deformable object with its different poses, how can we effectively learn the pose variations while factoring out the object's identity and also make the pose information applicable to other objects? For instance, when we have a variety of poses of a bear (Fig. 1 left, first row), our objective is to learn the space of poses without entangling them with the geometric characteristics of the bears. Also, we aim to enable a sample from this space to be applied to a new object, such as a bull, to generate a new shape (Fig. 1 left, second row). We believe that such a technique, effectively separating pose from the object's identity and enabling the transfer of poses to other identities, can significantly reduce the need for collecting large-scale datasets covering the diversity of both object identities and poses. This approach can even enable creating variations of a new creature without having seen any possible poses of that specific object.

Transferring poses from one object to another has been extensively studied in computer graphics and vision, with most methods requiring target shape supervision [42; 5; 51; 4; 12] or predefined pose parameterization [14; 9; 22; 43; 3; 50; 33; 11; 45; 20; 25; 46; 8]. Without such additional supervision, our key idea for extracting identity-agnostic pose information and learning their variations is to introduce a novel pose representation along with associated encoding and decoding techniques. For this, we consider the following three desiderata:

1. **Pose Disentanglement**: The representation should effectively represent the pose only without resembling the source object's identity when applied to the other object.
2. **Compactness**: The representation should be compact enough to effectively learn its variation using a generative model, such as a diffusion model.
3. **Transferability**: The encoded pose information should be applicable to new target objects.

As a representation that meets the aforementioned criteria, we propose an autoencoding framework and a latent diffusion model with three core components. Firstly, we design a _pose extractor_ and a _pose supplier_ to encode an **implicit deformation field** with a **keypoint-based hybrid representation**, comprising 100 keypoints in the space, each associated with a latent feature. Learning the deformation field enables _disentangling_ the pose information from the object's identity, while the keypoint-based representation _compactly_ encodes it and makes it _transferable_ to other objects. However, simply learning the deformation as a new position of the vertex is not sufficient to properly adapt the source object's pose information to others. Hence, secondly, we propose predicting an **intrinsic property** of the deformed mesh, **Jacobian fields**[54; 26; 41; 2], which can successfully apply the pose while preserving the identity of the target shape. To better preserve the target's identity while applying the pose variation from the source, thirdly, we propose a **per-identity refinement step** that fine-tunes the decoder in a _self-supervised_ way to adapt to the variations of target shapes, with poses transferred from the source object. Thanks to the compact hybrid representation of pose, a pose generative model can also be effectively learned using **cascaded diffusion models**[18; 21], enabling the generation of varying poses of an object with an arbitrary identity different from the source object.

In our experiments, we compare our framework against state-of-the-art techniques for pose transfer on animals (Sec. 4.2) and humans (Sec. 4.3). Both qualitative and quantitative analyses underscore the key design factors of our framework, demonstrating its efficiency in capturing identity-agnostic poses from exemplars and its superior performance compared to existing methods. Additionally, we extend the proposed representation to the task of unconditional generation of shape variations. Our representation serves as a compact encoding of poses that can be generated using diffusion models (Sec. 4.6) and subsequently transferred to other shapes. This approach facilitates the generation of various shapes, particularly in categories where exemplar collection is challenging.

## 2 Related Work

Due to space constraints, we focus on reviewing the literature on non-rigid shape pose transfer, including methods that operate without parameterizations, those that rely on predefined parameterizations, and recent learning-based techniques that derive parameterizations from data.

Parameterization-Free Pose Transfer.Early works [42; 49; 5; 51] focused on leveraging _point-wise_ correspondences between source and target shapes. A seminal work by Sumner and Popovic  transfers per-triangle affine transforms applied to the target shape by solving an optimization problem. A follow-up work by Ben-Chen _et al._ transfers deformation gradients by approximatingsource deformations using harmonic bases. On the other hand, a technique proposed by Baran _et al._ instead employs _pose-wise_ correspondences by learning shape spaces from given pairs of poses shared across the source and target identities. The poses are transferred by blending existing exemplars. While these techniques require point-wise or pose-wise correspondence supervision, our method does not require such supervision during training or inference.

Skeleton- or Joint-Based Pose Transfer.Another line of work utilizes handcrafted skeletons, which facilitate pose transfer via motion retargeting . This approach has been extended by incorporating physical constraints [9; 22; 43; 3] or generalizing the framework to arbitrary objects [50; 33]. Several learning-based methods [11; 45; 20; 25; 46] have also been proposed to predict joint transformations involved in forward kinematics from examples. Recently, Chen _et al._ proposed a framework that does not require skeletons during test time by predicting keypoints at joints. The method is trained to predict both relative transformations between corresponding keypoints in two distinct kinematic trees and skinning weights. However, the tasks of rigging and skinning are labor-intensive, and different characters and creatures often require distinct rigs with varying topologies. Liao _et al._ notably presented a representation that comprises character-agnostic deformation parts and a semi-supervised network predicting skinning weights that link each vertex to these deformation parts, although its performance hinges on accurate skinning weight prediction. In this work, we design a more versatile framework that is applicable to various shapes and provides better performance.

Pose Transfer via Learned Parameterization.To bypass the need for correspondence or parameterization supervision, learning-based approaches [12; 53; 47; 57; 7; 2; 24; 48; 36; 37] explore alternative parameterizations _learned_ from exemplars. Yifan _et al._ propose to predict source and target cages and their offsets simultaneously, although their method still requires manual landmark annotations. Gao _et al._ introduce a VAE-GAN framework that takes _unpaired_ source and target shape sets, each containing its own set of pose variations. The network is trained without direct pose-wise correspondences between samples from these sets, instead enforcing cycle consistency between latent representations. Although this work relaxes the requirement for correspondence supervision, it still requires pose variations for _both_ the source and target identities and individual training for each new source-target pair. Numerous works [47; 7; 57; 2] lift the requirement for gathering variations of target shapes by disentangling identities from poses, enforcing cycle consistency , or adapting conditional normalization layers  from image style transfer . Notably, Aigerman _et al._ train a network that regresses Jacobian fields from SMPL  pose parameters. The vertex coordinates are computed by solving Poisson's equation , effectively preserving the shapes' local details. Wang _et al._ also train a neural implicit function and retrieve a shape latent from a template mesh of an unseen identity via autodecoding . This method models local deformations through a coordinate-based network that learns continuous deformation fields. However, such methods struggle to generalize to unseen identities due to their reliance on _global_ latent embeddings encoding shapes. We propose a representation that not only disentangles poses from identities but also allows for implicit queries using the surface points, thereby improving generalization to new identities.

Figure 2: **Method overview. Our framework extracts keypoint-based hybrid pose representations from Jacobian fields. These fields are mapped by the pose extractor \(g\) and mapped back by the pose applier \(h\). The pose applier, conditioned on the extracted pose, acts as an implicit deformation field for various shapes, including those unseen during training. A refinement module \(\), positioned between \(g\) and \(h\), is trained in a self-supervised manner, leveraging the target’s template shape. The compactness of our latent representations facilitates the training of a diffusion model, enabling diverse pose variations through generative modeling in the latent space.**

## 3 Method

### Problem Definition

Consider a _source template mesh_\(}^{S}=(}^{S},^{S})\), given as a 2-manifold triangular mesh. The mesh comprises vertices \(}^{S}\) and faces \(^{S}\). Suppose there exist \(N\) variations of the source template mesh, \(\{_{1}^{S},,_{N}^{S}\}\), where each \(_{i}^{S}=(_{i}^{S},^{S})\) is constructed with a different _pose_, altering the vertex positions while sharing the same mesh connectivity \(^{S}\).

Assume a _target template mesh_\(}^{T}=(}^{T},^{T})\) is given without any information about its variations or existing pose parameterization (_e.g._, skeletons or joints). Our goal is to define functions \(g\) and \(h\) that can _transfer_ the pose variations from the source meshes to the target template mesh. For each variation of the source shape \(_{i}^{S}\), its corresponding mesh \(_{i}^{T}\) for the target is obtained as:

\[_{i}^{T}=(h(g(_{i}^{S}),}^{T}), ^{T}),i=1,2,,N.\] (1)

Specifically, we design \(g\) as a _pose extractor_ that embeds a source object mesh \(_{i}^{S}\) into a _pose latent representation_\(_{i}^{S}=g(_{i}^{S})\). This representation disentangles the pose information from the object's identity in \(_{i}^{S}\) and facilitates transferring the pose to the target template mesh \(}^{T}\). Given this pose representation, the _pose applier_\(h\) then applies the pose to \(}^{T}\), yielding the corresponding variation of the target object \(_{i}^{T}=h(_{i}^{S},}^{T})\). Note that our method is not limited to transferring the pose of a _given_ variation of the source object to the target mesh but can also apply a pose _generated_ by a diffusion model to the target mesh. In Sec. 3.5, we explain how a diffusion model can be trained with the latent pose representation extracted from source object variations. In the following, we first describe the key design factors of the functions \(g\) and \(h\) to tackle the problem.

### Keypoint-Based Hybrid Pose Representation

To encode a source shape \(^{S}\) into a latent representation \(^{S}\), we consider its vertices \(^{S}\) as its geometric representation and use them as input to the pose extractor \(g\), which is designed as a sequence of Point Transformer [56; 44] layers. These layers integrate vector attention mechanisms  with progressive downsampling of input point clouds. The output of the pose extractor \(g\) is a set of unordered tuples \(^{S}=\{(_{k}^{S},_{k}^{S})\}_{k=1}^ {K}\) where \(_{k}^{S}^{3}\) represents a 3D coordinate of a keypoint subsampled from \(^{S}\) via farthest point sampling (FPS) and \(_{k}^{S}\) is a learned feature associated with \(_{k}^{S}\). This set \(^{S}\) forms a sparse point cloud of keypoints in 3D space, augmented with latent features. We set \(K=100\) in our experiments.

This keypoint-based hybrid representation, visualized in Fig. 2, is designed to exclusively transfer pose information from the source to the target while preventing leakage of the source shape's identity characteristics. Since the keypoints \(\{_{k}^{S}\}\) are sampled from \(^{S}\) using FPS, they effectively capture the overall pose structure of \(^{S}\) while also supporting geometric queries with the vertices of a new mesh. This property is essential during the decoding phase, where the pose applier \(h\) predicts the pose-applied mesh from the input template as an _implicit deformation field_.

The pose applier \(h\) is implemented with a neural network that takes the 3D coordinates of a vertex from the input template mesh as a query, along with the hybrid pose latent representation \(\), and outputs the new position of the vertex in the pose-applied deformed mesh. Note that \(h\) indicates a function that collectively maps all vertices in the input template mesh to their new positions using the network. Like the pose extractor \(g\), the implicit deformation network is also parameterized as Point Transformer layers . It integrates the pose information encoded in \(^{S}\) by combining vector attention mechanisms with nearest neighbor queries to aggregate features of the keypoints \(_{k}^{S}\) around each query point. The aggregated features are then decoded by an MLP to predict the vertex coordinates of the deformed shape. (This is a base network, and we also introduce a _better_ way to design the implicit deformation network in Sec. 3.3.)

Given only the variations of the source object \(\{_{1}^{S},,_{N}^{S}\}\), we jointly learn the functions \(g\) and \(h\) by reconstructing the variations of the source object as a deformation of its template:

\[_{V}=\|_{i}^{S}-h(g(_{i}^{S}),}^{S})\|^{2}.\] (2)

While \(g\) and \(h\) are trained using the known variations of the source object \(^{S}\), the latent representation \(^{S}=g(^{S})\), when queried and decoded with the target template mesh, effectively transfers thepose extracted by \(g\) from \(^{S}\). However, we also observe that \(g\) and \(h\), when trained using the loss \(_{V}\), often result in geometry with noticeable imperfections and noise on the surfaces. To address this, we explore an alternative representation of a mesh that better captures and preserves geometric details, which will be discussed in the following section.

### Representing Shapes as Jacobian Fields

In this work, we advocate employing the differential properties of surfaces as dual representations of a mesh. Of particular interest are _Jacobian fields_, a gradient-domain representation noted for its efficacy in preserving local geometric details during deformations , while ensuring that the resulting surfaces maintain smoothness .

Given a mesh \(=(,)\), a Jacobian field \(\) represents the spatial derivative of a scalar-valued function \(:\) defined over the surface. We discretize \(\) as \(_{}^{||}\), sampling its value at each vertex \(\) of the vertex set \(\). The spatial derivative of \(\) at each triangle \(\) is computed as \(_{}_{}\) using the per-triangle gradient operator \(_{}\). Given that each dimension of vertex coordinates \(\) is such a function, we compute its spatial gradient at each triangle \(\) as \(_{}=_{}\). Iterating this process for all triangles yields the Jacobian field \(=\{_{}|\}\).

To recover \(\) from a given Jacobian field \(\), we solve a least-squares problem, referred to as Poisson's equation:

\[^{*}=}{}\|- ^{T}\|^{2},\] (3)

where \(^{||||}\) is the cotangent Laplacian of \(\), \(\) is the stack of gradient operators defined at each \(\), and \(^{3|| 3||}\) is the diagonal mass matrix, respectively. Since the rank of \(\) is at most \(||-1\), we can obtain the solution by fixing a single point, which is equivalent to eliminating one row of the system in Eqn. 3. Since \(\) in Eqn. 3 remains constant for a given shape \(\), we can prefactorize the matrix (_e.g._,using Cholesky decomposition) and quickly solve the system for different Jacobian fields \(\)'s. Furthermore, the upstream gradients can be propagated through the solver since it involves only matrix multiplications .

Employing Jacobian fields as shape representations, we now modify the implicit deformation network described in Sec. 3.2 to take _face center coordinates_ as input instead of vertex coordinates and to output a new _face Jacobian_ for a query face instead of a new vertex position. This results in decomposing \(h\) into two functions \(h=( h^{})\), where \(h^{}\) is a function that collectively maps all the faces in the input mesh to the new Jacobian, and \(\) is a differentiable Poisson solver layer. Both \(g\) and \(h^{}\) are then trained by optimizing the following loss:

\[_{J}=\|_{i}^{S}-(h^{}(g(_{i}^{S}), }^{S}))\|^{2}.\] (4)

### Per-Identity Refinement using Geometric Losses

While the latent pose representation \(\) learned by \(g\) and \(h\) exhibits promising generalization capabilities in transferring poses, the quality of the transferred shapes can be further improved by incorporating a trainable, identity-specific refinement module into our system. This module is trained in a _self-supervised_ manner with the set of pose-applied target meshes. Similarly to techniques for personalized image generation [19; 52], we introduce a shallow network \(\) between \(g\) and \(h\), optimizing its parameters while keeping the rest of the pipeline frozen.

The optimization of \(\) is driven by geometric losses, aiming to minimize the geometric discrepancies in terms of the object's identity between the target template mesh \(}^{T}\) and the pose-transferred meshes \(_{i}^{T}\). In particular, we first extract poses \(\{_{1}^{S},,_{N}^{S}\}\) corresponding to the known shapes \(\{_{1}^{S},,_{N}^{S}\}\) of the source object. A transformer-based network \(\), which maps a latent representation \(^{S}\) to \(^{S}\), is plugged in between the pose extractor \(g\) and the pose applier \(h\) :

\[_{i}^{T}=h((_{i}^{S}),}^{T}).\] (5)

The parameters of \(\) are updated by optimizing the following loss function:

\[_{}=_{}_{}( _{i}^{T},}^{T})+_{} _{}(_{i}^{T},}^{T})+_{}(_{k}\|_{k}^{S}-_{k}^{S_{}}\|^{2}+\|_{k}^{S}- _{k}^{S_{}}\|^{2}),\] (6)where \(_{}()\) is the mesh Laplacian loss , \(_{}()\) is the edge length preservation loss , and \(_{}\), \(_{}\), and \(_{}\) are the weights of the loss terms. The definitions of the losses are provided in the appendix. Note that this refinement step leverages only the originally provided template shape \(}^{T}\) and does not require its given variations or any other additional supervision.

### Learning Latent Diffusion via Cascaded Training

The use of the keypoint-based hybrid representation discussed in Sec. 3.2 offers a compact latent space suitable for generative modeling using diffusion models [39; 17; 40; 38]. Unlike the Jacobian fields with dimensionality \(|| 9\), the keypoints and their feature vectors that comprise the pose representation \(^{S}\) lie in significantly lower dimensional space, facilitating generative modeling with latent diffusion models .

We employ a cascaded diffusion framework [18; 21] to separately capture the layouts of keypoints and the associated feature vectors. Given a set \(\{^{S}_{1},,^{S}_{N}\}\) of \(N\) latent embeddings extracted from the known source shape variations \(\{^{S}_{1},,^{S}_{N}\}\), we first learn the distribution over \(^{S}=\{^{S}_{k}\}_{k=1}^{K}\). To handle unordered sets with small cardinality, we employ a transformer-based network to facilitate interactions between each element within the noise prediction network \(_{}(^{S}_{t},t)\) where \(t\) is a diffusion timestep and \(^{S}_{t}\) is a noisy 3D point cloud obtained by perturbing a clean keypoint set \(^{S}_{0}(=^{S})\) via forward diffusion process . We train the network by optimizing the denoising loss:

\[_{^{S}}=_{^{S},} (,),t(0,1)[\|-_{}(^{S}_{t},t)\|^{2}].\] (7)

Likewise, the distribution of the set of latent features \(^{S}=\{^{S}_{k}\}_{k=1}^{K}\) is modeled as a conditional diffusion model \(_{}\), which takes \(^{S}\) as an additional input to capture the correlation between \(^{S}\) and \(^{S}\). The network is trained using the same denoising loss:

\[_{^{S}}=_{^{S},} (,),t(0,1)[\|-_{}(^{S}_{t},^{S},t)\|^{2}].\] (8)

Once trained, the models can sample new pose representations through the reverse diffusion steps :

\[^{S}_{t-1} =}}(^{S}_{t}-}{_{t}}}_{}(^{S}_{t}, t)),\] (9) \[^{S}_{t-1} =}}(^{S}_{t}-}{_{t}}}_{}(^{S}_{t}, ^{S}_{0},t)),\] (10)

where \(_{t}\), \(_{t}\), and \(_{t}\) are the diffusion process coefficients.

## 4 Experiments

### Experiment Setup

**Datasets.** In our experiments, we consider animal and human shapes that are widely used in various applications. For the animal shapes, we utilize animation sequences from the DeformingThings4D-Animals dataset . Specifically, we extract 300 meshes from the animation sequences of each of 9 different animal identities, spanning diverse species such as bears, rabbits, dogs, and moose. For humanoids, we use SMPL [28; 31], which facilitates easy generation of synthetic data for both training and testing. We sample 300 random pose parameters from VPoser  to generate variations of an unclothed human figure using the _default_ body shape parameters, which are used to train our networks. For testing, we keep the pose parameters constant and sample 40 different body shapes from the parametric space covered by the unit Gaussian. This produces 40 different identities, each in 300 poses. The generated meshes serve as the ground truth for pose transfer. To assess the generalization capability to unusual identities that deviate significantly from the default body shape, we increase the standard deviation to 2.5 when sampling SMPL body parameters for 30 of the 40 identities. Additionally, we collect 9 stylized character meshes from the Mixamo dataset  to test the generalizability of different methods. For diffusion model training, the extracted keypoints and their associated features from the given set of source meshes are used as the training data for our cascaded diffusion model, which is trained separately for each identity.

**Baselines.** To assess the performance of pose transfer, we compare our method against Aigerman et al.  (NJF), Liao et al.  (SPT), Wang et al.  (ZPT), and various modifications of our framework. For NJF , we use the official code from the _Morphing Humans_ experiment, employing a PointNet  encoder to map input shapes to global latents, and we train the model on our datasets. For SPT , we use the official code and pretrained model on humanoid shapes. Since a pretrained model for animal shapes is not provided, the comparison with SPT on the DeformingThings4D-Animals dataset is omitted. For ZPT , the official implementation is not provided, so we implemented the model based on the description in the paper. In our ablation study, we explore different variations of our method to assess their impact on performance, including: (1) using vertex coordinates as shape representations (as described in Sec. 3.2), and (2) omitting the per-identity refinement module (Sec. 3.4). All models (except for SPT , for which we employ a pretrained model) are trained for _each_ shape identity.

Evaluation Metrics.For pose transfer, when the corresponding shapes of the same pose are given for both source and target shapes, in the SMPL case, we measure accuracy using Point-wise Mesh Euclidean Distance (PMD) , following our baselines. Note that this measurement cannot be applied in the DeformingThings4D-Animals case since pose-wise correspondences are not provided. For both pose transfer and shape generation (via pose generation), we measure the visual plausibility of the output meshes using FID , KID , and ResNet classification accuracy with images rendered from four viewpoints (front, back, left, and right) without texture. For the latter, we train a ResNet-18  network using 10,800 images rendered from the four viewpoints of all ground truth shape variations of each animal.

### Pose Transfer on DeformingThings4D-Animals

We begin our experiments by transferring pose variations across different animals, a challenging task that necessitates strong generalization capabilities due to the diverse shapes of the animals involved.

We summarize the quantitative metrics in Tab. 1 (left). Our method outperforms NJF  and ZPT , both of which use global latent codes to encode shapes, while ours uses a keypoint-based hybrid representation. Note that SPT  is not compared in this experiment since the pretrained model is not provided for animal shapes. Qualitative results are also shown in Fig. 3, demonstrating the transfer of poses from a source mesh \(^{S}\) (second and seventh column, _reci_) to a target template mesh \(}^{T}\) (first and sixth column, _blue_). Both NJF  and ZPT  introduce significant distortions to the results and often fail to properly align the pose extracted from the source to the target. Our method, on the other hand, effectively transfers poses to the targets while preserving local geometric details. More results can be found in the appendix.

    &  &  \\  & FID \(\) & KID \(\) & ResNet & PMD \(\) & FID \(\) & KID \(\) & ResNet \\  & (\( 10^{-2}\)) & (\( 10^{-2}\)) & Acc. \(\) (\%) & (\( 10^{-3}\)) & (\( 10^{-2}\)) & (\( 10^{-2}\)) & Acc. \(\) (\%) \\  NJF  & 11.33 & 5.71 & 64.43 & 2.55 & 1.57 & 0.82 & 70.93 \\ SPT  & - & - & - & 0.28 & 0.83 & 0.43 & 75.38 \\ ZPT  & 19.88 & 11.09 & 48.15 & 1.28 & 0.77 & 0.45 & 69.88 \\ Ours & **1.11** & **0.42** & **78.72** & **0.13** & **0.30** & **0.19** & **79.09** \\   

Table 1: Quantitative results on the experiments using the DeformingThings4D-Animals dataset  and the human shape dataset populated using SMPL .

Figure 3: Qualitative results of transferring poses of the source meshes \(^{S}\)’s (_red_) in the DeformingThings4D animals  to target templates \(}^{T}\)’s (_blue_). Best viewed when zoomed in.

### Pose Transfer on SMPL and Mixamo

We further test our method and baselines using humanoid shapes ranging from SMPL to stylized characters from the Mixamo  dataset. While we employ the parametric body shape and pose model of SMPL [28; 31], it is important to note that this is only for evaluation purposes; our method does not assume any parametric representations, such as skeletons, for either training or inference.

Tab. 1 (right) summarizes the evaluation metrics measured across the 40 target shapes. Notably, our method achieves lower PMD than SPT , which is trained on a large-scale dataset consisting of diverse characters and poses, while ours is trained using only 300 pose variations of the default human body. This is further illustrated in the qualitative results in Fig. 4, where we demonstrate pose transfer from source meshes (_red_) to target template meshes (_blue_) not seen during training. As shown, the shapes transferred by our method accurately match the overall poses. Our method benefits from combining a keypoint-based hybrid representation with Jacobian fields, outperforming the baselines in preserving local details, especially in areas with intricate geometric features such as the hands. See the zoomed-in views in Fig. 4. More results can be found in the appendix.

Furthermore, we apply our model to a more challenging setup involving stylized characters. In Fig. 5, we present qualitative results using shapes from the Mixamo  dataset. Despite being trained on a single, unclothed SMPL body shape, our method generalizes well to stylized humanoid characters with detailed geometry (first row) and even to a character missing one arm (second row).

Figure 4: Qualitative results of transferring poses of the default human meshes \(^{S}\)’s (_red_) to different target template meshes \(}^{T}\)’s (_blue_). The ground truth targets \(^{T}_{}\)’s (_grey_) are displayed for reference. Best viewed when zoomed in.

Figure 5: Qualitative results of transferring poses of the default human meshes \(^{S}\)’s (_red_) to target template meshes \(}^{T}\)’s (_blue_) of Mixamo characters . Best viewed when zoomed in.

[MISSING_PAGE_FAIL:9]

### Pose Variation Generation Using Diffusion Models

We evaluate the generation capabilities of our diffusion models trained using different pose representations. Since no existing generative model can learn pose representations transferable across various shapes, we focus on analyzing the impact of using Jacobian fields on generation quality. We use shapes obtained by applying 300 generated poses to both \(}^{S}\)'s (_red_) and various \(}^{T}\)'s (_blue_). The quantitative and qualitative results are summarized in Tab. 2 (right) and Fig. 9, respectively. While the poses are generated using the diffusion model, our model still achieves ResNet classification accuracy comparable to the pose transfer experiment (Tab. 2, left). This tendency is also reflected in the qualitative results shown in Fig. 9. These results validate that the latent space learned from variations of Jacobian fields is more suitable for generating high-quality shape and pose variations compared to the one based on vertices. More results can be found in the appendix.

## 5 Conclusion

We have presented a method for learning a novel neural representation of the pose of non-rigid 3D shapes, which facilitates: 1) the disentanglement of pose and object identity, 2) the training of a generative model due to its compactness, and 3) the transfer of poses to other objects' meshes. In our experiments, we demonstrated the state-of-the-art performance of our method in pose transfer, as well as its ability to generate diverse shapes by applying the generated poses to different identities.

Limitations.Our method leverages differential operators to compute the Jacobian field of the given template mesh, requiring additional preprocessing when dealing with meshes that have multiple disconnected components or defects in the triangulation. Our framework also assumes that a template mesh of the shape is known for pose transfer. We plan to extend our framework for transferring poses between arbitrary shapes in future work.

Societal Impacts.Our generative model for poses and the pose transfer technique could potentially be misused for deepfakes. Developing robust guidelines and techniques to prevent such misuse is an important area for future research.

Figure 8: Qualitative results of transferring a pose of the default human mesh \(^{S}\) (_red_) to the target template mesh \(}^{T}\) (_blue_) using variants of our framework (Ours-\(N\)), trained to extract \(N\) keypoints.

Figure 9: Pose variation generation results. Each row illustrates the outcomes of applying a generated pose to a source template mesh \(}^{S}\) (_red_) and a target template mesh \(}^{T}\) (_blue_).