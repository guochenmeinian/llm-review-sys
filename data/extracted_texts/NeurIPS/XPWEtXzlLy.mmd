# Mirror Diffusion Models for

Constrained and Watermarked Generation

 Guan-Horng Liu, Tianrong Chen, Evangelos A. Theodorou\({}^{}\), Molei Tao\({}^{}\)

Georgia Institute of Technology, USA

{ghliu, tianrong.chen, evangelos.theodorou, mtao}@gatech.edu

Equal advising.

###### Abstract

Modern successes of diffusion models in learning complex, high-dimensional data distributions are attributed, in part, to their capability to construct diffusion processes with analytic transition kernels and score functions. The tractability results in a simulation-free framework with stable regression losses, from which reversed, generative processes can be learned at scale. However, when data is confined to a constrained set as opposed to a standard Euclidean space, these desirable characteristics appear to be lost based on prior attempts. In this work, we propose **Mirror Diffusion Models (MDM)**, a new class of diffusion models that generate data on convex constrained sets without losing any tractability. This is achieved by learning diffusion processes in a dual space constructed from a mirror map, which, crucially, is a standard Euclidean space. We derive efficient computation of mirror maps for popular constrained sets, such as simplices and \(_{2}\)-balls, showing significantly improved performance of MDM over existing methods. For safety and privacy purposes, we also explore constrained sets as a new mechanism to embed invisible but quantitative information (_i.e.,_ watermarks) in generated data, for which MDM serves as a compelling approach. Our work brings new algorithmic opportunities for learning tractable diffusion on complex domains.

## 1 Introduction

Diffusion models  have emerged as powerful generative models with their remarkable successes in synthesizing high-fidelity data such as images , audio , and 3D geometry . These models work by progressively diffusing data to noise, and learning the score functions (often

Figure 1: **Mirror Diffusion Models (MDM)** is a new class of diffusion models for convex constrained manifolds \(^{d}\). **(left)** Instead of learning score-approximate diffusions on \(\), MDM applies a _mirror_ map \(\) and learns _tractable_ diffusions in its _unconstrained dual-space_\(()=^{d}\). **(right)** We also present MDM for watermarked generation, where generated contents (_e.g.,_ images) live in a high-dimensional _token_ constrained set \(\) that is certifiable only from the private user.

parameterized by neural networks) to reverse the processes ; the reversed processes thereby provide transport maps that generate data from noise. Modern diffusion models  often employ diffusion processes whose transition kernels are analytically available. This characteristic enables _simulation-free_ training, bypassing the necessity to simulate the underlying diffusion processes by directly sampling the diffused data. It also leads to tractable conditional score functions and simple regression objectives, facilitating computational scalability for high-dimensional problems. In standard Euclidean spaces, tractability can be accomplished by designing the diffusion processes as linear stochastic differential equations, but doing so for non-Euclidean spaces is nontrivial.

Recent progress of diffusion models has expanded their application to non-Euclidean spaces, such as Riemannian manifolds , where data live in a curved geometry. The development of generative models on manifolds has enabled various new applications, such as modeling earth and climate events  and learning densities on meshes . In this work, we focus on generative modeling on _constrained sets_ (also called _constrained manifolds_) that are defined by a set of inequality constraints. Such constrained sets, denoted by \(^{d}\), are also ubiquitous in several scientific fields such as computational statistics , biology , and robotics .

Previous endeavors in the direction of constrained generation have primarily culminated in reflected diffusions , which reflect the direction at the boundary \(\) to ensure that samples remain inside the constraints. Unfortunately, reflected diffusions do not possess closed-form transition kernels , thus necessitating the approximation of the conditional score functions that can hinder learning performance. Although simulation-free training is still possible2, it comes with a computational overhead due to the use of geometric techniques . From a theoretical standpoint, reflected Langevin dynamics are widely regarded for their extended mixing time . This raises practical concerns when simulating reflected diffusions, as prior methods often adopted special treatments such as thresholding and discretization .

An alternative diffusion for constrained sampling is the Mirror Langevin Dynamics (MLD ). MLD, as a subclass of Riemannian Langevin Dynamics , is tailored specifically to convex constrained sampling. Specifically, MLD constructs a strictly convex function \(\) so that its gradient map, often referred to as the _mirror map_\(:^{d}\), defines a nonlinear mapping from the initial constrained set to an _unconstrained dual space_. Despite extensive investigation of MLD , its potential as a foundation for designing diffusion generative models remains to be comprehensively examined. Thus, there is a need to explore the potential of MLD for designing new, effective, and tailored diffusion models for constrained generation.

With this in mind, we propose **Mirror Diffusion Models (MDM)**, a new class of diffusion generative models for convex constrained sets. Similar to MLD, MDM utilizes mirror maps \(\) that transform data distributions on \(\) to its dual space \(()\). From there, MDM learns a _dual-space diffusion_ between the mirrored distribution and Gaussian prior in the dual space. Note that this is in contrast to MLD, which constructs invariant distributions on the initial constrained set; MDM instead considers dual-space priors. Since the dual space is also unconstrained Euclidean space \(()=^{d}\), MDM

   Diffusion models & Domain &  Tractable \\ conditional score \\  &  Simulation-free \\ training \\  & 
 Regression \\ objective \\  \\  _Reflected Diffusion_ & & & & \\ Fishman et al.  & \(\) & ✗ & ✗ & ✗ \\ Lou and Ermon  & \(\) & ✗ & \(^{2}\) & ✓ \\  _Mirror Diffusion_ & & & & \\ This work (ours) & \(()\) & ✓ & ✓ & ✓ \\   

Table 1: Comparison of different diffusion models for constrained generation on \(^{d}\). Rather than learning reflected diffusions on \(\) with approximate scores, our Mirror Diffusion constructs a mirror map \(\) and lift the diffusion processes to the _unconstrained dual space_\(()=^{d}\), inheriting favorable features from standard Euclidean-space diffusion models. Constraints are satisfied by construction via the inverse map \(^{*}\); that is, \(^{*}(y)\) for all \(y()\).

preserves many important features of standard diffusion models, such as simulation-free training and tractable conditional scores, which yields simple regression objectives; see Table 1. After learning the dual-space distribution, MDM applies the inverse mapping \(^{*}\), transforming mirrored samples back to the constrained set. We propose efficient construction of mirror maps and demonstrate that MDM outperforms prior reflected diffusion models on common constrained sets, such as \(_{2}\)-balls and simplices.

Moreover, we show that MDM also stands as a novel approach for _watermarked generation_, a technique that aims to embed undetectable information (_i.e.,_ watermarks) into generated contents to prevent unethical usage and ensure copyright protection. This newly emerging goal nevertheless attracted significant attention in natural language generation , while what we will present is a general algorithmic strategy demonstrated for image generations.

To generate watermarked contents that are private to individual users, we begin by constructing a constrained set \(\) based on user-defined tokens (see Figure 2). MDM can then be instantiated to learn the dual-space distribution. Alternatively, MDM can distill pretrained diffusion models  by projecting the generated data onto the constraint set. In either case, MDM generates watermarked contents that can be certified only by users who know the tokens. Our empirical results suggest that MDM serves as a competitive approach to prior watermarking techniques for diffusion models, such as those proposed by Zhao et al. , by achieving lower (hence better) FID values.

In summary, we present the following contributions:

* We introduce **Mirror Diffusion Models (MDM)**, a new class of diffusion models that utilizes mirror maps to enable constrained generation with Euclidean-space diffusion models.
* We propose efficient computation of mirror maps on common constrained sets, including balls and simplices. Our results demonstrate that MDM consistently outperforms previous reflected diffusion models.
* As a novel application of constrained generation, we explore MDM's potential for watermarking and copyrighting diffusion models where constraints serve as private tokens. We show that it yields competitive performance compared to prior methods.

## 2 Preliminary on Euclidean-space Diffusion Models

Notation\(^{d}\) denotes a convex constrained set. We preserve \(x\) and \(y^{d}\) to better distinguish variables on constrained sets and standard \(d\)-dimensional Euclidean space. \(^{d d}\) denotes the identity matrix. \(x_{i}\) denotes the \(i\)-th element of a vector \(x\). Similarly, \([A]_{ij}\) denotes the the element of a matrix \(A\) at \(i\)-th row and \(j\)-th column.

Diffusion processGiven \(y_{0}^{d}\) sampled from some Euclidean-space distribution, conventional diffusion models define the diffusion process as a _forward_ Markov chain with the joint distribution:

\[q(y_{1:T}|y_{0})=_{t=1}^{T}q(y_{t}|y_{t-1}), q(y_{t}|y_{t-1}):= (y_{t};}y_{t-1},_{t}),\] (1)

which progressively injects Gaussian noise to \(y_{0}\) such that, for a sufficiently large \(T\) and a properly chosen noise schedule \(_{t}(0,1)\), \(y_{T}\) approaches an approximate Gaussian, _i.e.,_\(q(y_{T})(0,)\)

Figure 2: MDM for watermarked generation: **(left)** We first construct a constrained set \(\) based on a set of user-defined tokens private to other users. **(right)** MDM can be instantiated by either learning the corresponding dual-space diffusions, or projecting pretrained, _i.e.,_ unwatermarked, diffusion models onto \(\). In both cases, MDM embeds watermarks that are certifiable only from the user.

Equation (1) has tractable marginal densities, and two of which that are of particular interest are:

\[q(y_{t}|y_{0})=(y_{t};_{t}}y_{0},(1-_{t}) ), q(y_{t-1}|y_{t},y_{0})=(y_{t-1};_{t }(y_{t},y_{0}),_{t}),\] (2)

\[_{t}(y_{t},y_{0}):=}_{t}}{1-_{t}}y_{0}+}(1-_{t-1})}{1-_{t}}y_{t},_{t}:=_{t-1}}{1-_{t}}_{t},_{t}:=_{s=0}^{t}(1-_{s}).\]

The tractable marginal \(q(y_{t}|y_{0})\) enables direct sampling of \(y_{t}\) without simulating the forward Markov chain (1), _i.e.,_\(y_{t}|y_{0}\) can be sampled in a _simulation-free_ manner. It also suggests a closed-form score function \( q(y_{t}|y_{0})\). The marginal \(q(y_{t-1}|y_{t},y_{0})\) hints the optimal reverse process given \(y_{0}\).

Generative processThe generative process, which aims to _reverse_ the forward diffusion process (1), is defined by a _backward_ Markov chain with the joint distribution:

\[p_{}(y_{0:T})=p_{T}(y_{T})_{t=1}^{T}p_{}(y_{t-1}|y_{t}), p _{}(y_{t-1}|y_{t}):=(y_{t-1};_{}(y_{t},t),_{t}).\] (3)

Here, the mean \(_{}\) is typically parameterized by some DNNs, _e.g.,_ U-net , with \(\). Equations (1) and (3) imply an evidence lower bound (ELBO) for maximum likelihood training, indicating that the optimal prediction of \(_{}(y_{t},t)\) should match \(_{t}(y_{t},y_{0})\) in Equation (2).

Parameterization and trainingThere exists many different ways to parameterize \(_{}(y_{t},t)\), and each of them leads to a distinct training objective. For instance, Ho et al.  found that

\[_{}(y_{t},t):=}}y_{t}-}{_{t}}}_{}(y_{t},t),\] (4)

achieves better empirical results compared to directly predicting \(y_{0}\) or \(_{t}\). This parameterization aims to predict the "noise" injected to \(y_{t} q(y_{t}|y_{0})\), as the ELBO reduces to a simple regression:

\[():=_{t,y_{0},}[(t)\| -_{}(y_{t},t)\|].\] (5)

where \(y_{t}=_{t}}y_{0}+}\), \((0,)\), and \(t\) sampled uniformly from \(\{1,,T\}\). The weighting \((t)\) is often set to 1. Once \(_{}\) is properly trained, we can generate samples in Euclidean space by simulating Equation (3) backward from \(y_{T}(0,)\).

## 3 Mirror Diffusion Models (MDM)

In this section, we present a novel class of diffusion models, Mirror Diffusion Models, which are designed to model probability distributions \(p_{}(x)\) supported on a convex constrained set \(^{d}\) while retraining the computational advantages of Euclidean-space diffusion models.

### Dual-Space Diffusion

Mirror mapFollowing the terminology in Li et al. , let \(:\) be a twice differentiable3 function that is strictly convex and satisfying that \(_{x}\|(x)\|\) and \(()=^{d}\). We call its gradient map \(:^{d}\) the _mirror map_ and its image, \(()=^{d}\), as its _dual/mirror space_. Let \(^{*}:^{d}\) be the dual function of \(\) defined by

\[^{*}(y)=_{x} x,y-(x)\] (6)

A notable property of this dual function \(^{*}(y)\) is that its gradient map _reverses_ the mirror map. In other words, we have \(^{*}=()^{-1}\), implying that

\[^{*}((x))=xx,( ^{*}(y))=yy()=^{d}.\]

The functions \((,^{*})\) define a nonlinear, yet bijective, mapping between the convex constrained set \(\) and Euclidean space \(^{d}\). As a result, MDM does not require building diffusion models on \(\), as done in previous approaches, but rather they learn a standard Euclidean-space diffusion model in the corresponding dual space \(()=^{d}\).

Essentially, the goal of MDM is to model the _dual-space distribution_:

\[_{}(y):=([_{}]p_{})(x),\] (7)

where \(\) is the push-forward operation and \(y=(x)\) is the mirror of data \(x\).

Training and generationMDM follows the same training procedure of Euclidean-space diffusion models, except with an additional push-forward given by Equation (7). Similarly, its generation procedure includes an additional step that maps the dual-space samples \(y_{0}\), generated from Equation (3), back to the constrained set via \(^{*}(y_{0})\).

Tractable variational boundGiven a datapoint \(x\), its mirror \(y_{0}=(x)^{d}\), and the dual-space Markov chain \(\{y_{1},,y_{T}\}\), the ELBO of MDM can be computed by

\[L_{}(x):=|^{2}^{*}(y_{0})|+_{ }(y_{0}),\] (8)

where we apply the change of variables theorem  w.r.t. the mapping \(x=^{*}(y_{0})\). The dual-space ELBO \(_{}(y_{0})\) shares the same formula with the Euclidean-space ELBO [42; 43],

\[_{}(y_{0}):=D_{}(q(y_{T}|y_{0})\;||\;p(y_{T}))+ _{t=1}^{T-1}D_{}(q(y_{t}|y_{t+1},y_{0})\;||\;p_{}(y_{t}|y_{ t+1}))- p_{}(y_{0}|y_{1}).\] (9)

It should be noted that (8,9) provide a _tractable_ variational bound for constrained generation. This stands in contrast to concurrent methods relying on reflected diffusions, whose ELBO entails either intractable  or approximate  scores that could be restricted when dealing with more complex constrained sets. While, in practice, MDM is trained using the regression objective in Equation (5), computing tractable ELBO might be valuable for independent purposes such as likelihood estimation.

### Efficient Computation of Mirror Maps

What remains to be answered pertains to the construction of mirror maps for common constraint sets such as \(_{2}\)-balls, simplices, polytopes, and their products. In particular, we seek efficient, preferably closed-form, computation for \(\), \(^{*}\) and \(^{2}^{*}\).

\(_{2}\)-BallLet \(:=\{x^{d}:\|x\|_{2}^{2}<R\}\) denote the \(_{2}\)-ball of radius \(R\) in \(^{d}\). We consider the common log-barrier function:

\[_{}(x):=-(R-\|x\|_{2}^{2}).\] (10)

where \(^{+}\). The mirror map, its inverse, and the Hessian can be computed analytically by

\[_{}(x)=^{2}}, _{}^{*}(y)=^{2}+^ {2}}+},\] (11) \[^{2}_{}^{*}(y)=^{2} +^{2}}+}(-^{2}+^{ 2}}+)^{2}+^{2}}}yy^{}).\]

We refer to Appendix A for detailed derivation. Figure 3 visualizes such a mirror map for an \(_{2}\)-ball in 2D. It is worth noting that while the mirror map of log-barriers generally does not admit an analytical inverse, this is not the case for the \(_{2}\)-ball constraints.

SimplexGiven a \((d+1)\)-dimensional simplex, \(_{d+1}:=\{x^{d+1}:_{i=1}^{d+1}x_{i}=1,x_{i} 0\}\), we follow standard practices  by constructing the constrained set \(:=\{x^{d}:_{i=1}^{d}x_{i} 1,x_{i} 0\}\) and define \(x_{d+1}:=1-_{i=1}^{d}x_{i}\).4

While conventional log-barriers may remain a viable option, a preferred alternative that is widely embraced in the MLD literature for enforcing simplices  is the entropic function :

\[_{}(x):=_{i=1}^{d}x_{i}(x_{i})+(1-_{i=1}^{ d}x_{i})(1-_{i=1}^{d}x_{i}).\] (12)

The mirror map, its inverse, and the hessian of the dual function can be computed analytically by

\[[_{}(x)]_{i}= x_{i}- (1-_{i=1}^{d}x_{i}),[_{}^{*}(y)]_{i}=}}{1+_{i =1}^{d}e^{y_{i}}},\\ [^{2}_{}^{*}(y)]_{ij}=}}{1+ _{i=1}^{d}e^{y_{i}}}(i=j)-}e^{y_{j}}}{(1+ _{i=1}^{d}e^{y_{i}})^{2}},\] (13)

where \(()\) is an indicator function. Again, we leave the derivation of Equation (13) to Appendix A. Figure 3 visualizes the entropic mirror map for a 3-dimensional simplex \(_{3}\).

PolytopeLet the constrained set be \(:=\{x^{d}:c_{i}<a_{i}^{}x<b_{i}, i\{1, ,m\}\}\), where \(c_{i},b_{i}\) and \(a_{i}^{d}\) are linearly independent to each other. We consider the standard log-barrier:

\[_{}(x):=-_{i=1}^{m}(( a_{i},x -c_{i})+(b_{i}- a_{i},x))+ _{j=m+1}^{d} a_{j},x^{2},\] (14)

\[_{}(x)=_{i=1}^{m}s_{i}( a_{i},x)a_ {i}+_{j=m+1}^{d} a_{j},x a_{j},\] (15)

where the monotonic function \(s_{i}:(c_{i},b_{i})\) is given by \(s_{i}=,x-c_{i}}+,x -b_{i}}\), and \(\{a_{j}\}\) do not impose any constraints and can be chosen arbitrarily as long as they span \(^{d}\) with \(\{a_{i}\}\) (see below for more details); hence \(_{}()=^{d}\). While its inverse, \(_{}^{*}\), does not admit closed-form in general, it does when all \(d\) constraints are _orthonormal_:

\[_{}^{*}(y)=_{i=1}^{m}s_{i}^{-1}( a_{i},y )a_{i}+_{j=m+1}^{d} a_{j},y a_{j}.\] (16)

Here, \(s_{i}^{-1}:(c_{i},b_{i})\) is the inverse of \(s_{i}\). Essentially, (15,16) manipulate the coefficients of the bases from which the polytope set is constructed. These manipulations are nonlinear yet bijective, defined uniquely by \(s_{i}\) and \(s_{i}^{-1}\), for each orthonormal basis \(a_{i}\) or, equivalently, for each constraint.

Naively implementing the mirror map via (15,16) can be problematic due to _(i)_ numerical instability of \(s_{i}\) at boundaries (see Figure 4), _(ii)_ the lack of closed-form solution for its inverse \(s_{i}^{-1}\), and _(iii)_ an _one-time_ computation of orthonormal bases, which scales as \((d^{3})\) for orthonormalization methods such as Gram-Schmidt, Householder or Givens [e.g., 47]. Below, we devise a modification for efficient and numerically stable computation, which will be later adopted for watermarked generation.

Improved computation for Polytope (15,16)Given the fact that only the first \(m\) orthonormal bases \(\{a_{1},,a_{m}\}\) matter in the computation of (15,16), as the remaining \((d-m)\) orthonormal bases merely involve orthonormal projections, we can simplify the computational (15,16) to

\[_{}(x)=x+_{i=1}^{m}(s_{i}( a_{i},x )- a_{i},x)a_{i},\;_{}^{*}(y)=y+ _{i=1}^{m}(s_{i}^{-1}( a_{i},y)- a_{i},y )a_{i},\] (17)

Figure 4: Comparison between \(s_{i}\) induced by standard log-barriers _vs._ hyperbolic tangents in Eq. (18).

which, intuitively, add and subtract the coefficients of the first \(m\) orthonormal bases while leaving the rest intact. This reduces the complexity of computing orthonormal bases to \((md^{2})(d^{2})\) and improves the numerical accuracy of inner-product multiplication, which can be essential for high-dimensional applications when \(d\) is large.

To address the instability of \(s_{i}\) and intractability of \(s_{i}^{-1}\) for log-barriers, we re-interpret the mirror maps (15,16) as the changes of coefficient bases. As this implies that any nonlinear bijective mapping with a tractable inverse would suffice, we propose a rescaling of the hyperbolic tangent:

\[s_{i}( a_{i},x):=(^{-1}_{i})( a_{i},x),\ \ s_{i}^{-1}( a_{i},y):=(_{i}^{ -1})( a_{i},y),\] (18)

where \(_{i}(z):=2}{(b_{i}-c_{i})}-1\) rescales the range from \((c_{i},b_{i})\) to \((-1,1)\). It is clear from Figure 4 that, compared to the \(s_{i}\) induced by the log-barrier, the mapping (18) is numerical stable at the boundaries and admits tractable inverse.

**Complexity** Table 2 summarizes the complexity of the mirror maps for each constrained set. We note that all computations are parallelizable, inducing nearly no computational overhead.

**Remark 1**.: _Equations (17) and (18) can be generalized to non-orthonormal constraints by adopting \(_{i},x\) and \(_{i},y\), where \(_{i}\) is the \(i\)-th row of the matrix \(}:=(^{})^{-1}^{}\) and \(:=[a_{1},,a_{m}]\). Indeed, when \(\) is orthonormal, we recover \(_{i}=a_{i}\). We leave more discussions to Appendix B._

## 4 Related Work

**Constrained sampling** Sampling from a probability distribution on a constrained set has been a long-standing problem not only due to its extensive applications in, _e.g.,_ topic modeling  and Bayesian inference , but its unique challenges in non-asymptotic analysis and algorithmic design . Mirror Langevin is a special instance of endowing Langevin dynamics with a Riemannian metric , and it chooses a specific reshaped geometry so that dynamics have to travel infinite distance in order to cross the boundary of the constrained set. It is a sampling generalization of the celebrated Mirror Descent Algorithm  for convex constrained optimization, and the convexity of constrained set leads to the existence of a mirror map. However, Mirror Langevin is designed to draw samples from an unnormalized density supported on a constrained set. This stands in contrast to our MDM, which instead tackles problems of constrained _generation_, where only samples, not unnormalized density, are available, sharing much similarity to conventional generative modeling . In addition, Mirror Langevin can be understood to go back and forth between primal (constrained) and mirror (unconstrained) spaces, while MDM only does one such round trip.

**Diffusion Models in non-Euclidean spaces** There has been growing interest in developing diffusion generative models that can operate on domains that are not limited to standard Euclidean spaces, _e.g.,_ discrete domains  and equality constraints . Seminar works by De Bortoli et al.  and Huang et al.  have introduced diffusion models on Riemannian manifolds, which have shown promising results in, _e.g.,_ biochemistry  and rotational groups . Regarding diffusion models on constrained manifolds, most concurrent works consider similar convex constrained sets such as simplices and polytopes . Our MDM works on the same classes of constraints and includes additionally \(_{2}\)-ball, which is prevalent in social science domains such as opinion dynamics . It is also worth mentioning that our MDM may be conceptually similar to Simplex Diffusion (SD)  which reconstructs samples on simplices similar to the mirror mapping. However, SD is designed specifically for simplices and Dirichlet distributions, while MDM is applicable to a broader class of convex constrained sets. Additionally, SD adopts Cox-Ingersoll-Ross processes , yielding a framework that, unlike MDM, is not simulation-free.

**Latent Diffusion Models (LDMs)** A key component to our MDM is the construction of mirror map, which allows us to define diffusion models in a different space than the original constrained set, thereby alleviating many computational difficulties. This makes MDM a particular type of LDMs , which generally consider structurally advantageous spaces for learning diffusion models. While LDMs typically _learn_ such latent spaces either using pretrained model or on the fly using, _e.g.,_ variational autoencoders, MDM instead derives analytically a latent (dual) space through a mirror map tailored specifically to the constrained set. Similar to LDM , the diffusion processes of MDM on the initial constrained set are implicitly defined and can be highly nonlinear.

   \(_{2}\)**-Ball** & **Simplex** & **Polytope** \\  \((d)\) & \((d)\) & \((md)\) \\   

Table 2: Complexity of \(\) and \(^{*}\) for each constrained set.

## 5 Experiment

### Constrained Generation on Balls and Simplices

**Setup** We evaluate the performance of **Mirror Diffusion Model (MDM)** on common constrained generation problems, such as \(_{2}\)-ball and simplex constrained sets with dimensions \(d\) ranging from \(2\) to \(20\). Following Fishman et al. , we consider mixtures of Gaussian (Figure 1) and Spiral (Figure 3) for ball constraints and Dirichlet distributions  with various concentrations for simplex constraints. We compare MDM against standard unconstrained diffusion models, such as DDPM , and their constrained counterparts, such as Reflected Diffusion , using the same time-embedded fully-connected network and 1000 sampling time steps. Evaluation metrics include Sliced Wasserstein distance  and constraint violation. Other details are left to Appendix C.

**MDM surpasses Reflected Diffusion on all tasks.** Tables 3 and 4 summarize our quantitative results. For all constrained generation tasks, our MDM surpasses Reflected Diffusion by a large margin, with larger performance gaps as the dimension \(d\) increases. Qualitatively, Figure 5 demonstrates how MDM better captures the underlying distribution than Reflected Diffusion. Additionally, Table 5 reports the relative complexity of both methods compared to simulation-free diffusion models such as DDPM. While Reflected Diffusion requires extensive computation due to the use of implicit score matching  and assertion of boundary reflection at every propagation step, our MDM constructs efficient, parallelizable, mirror maps in unconstrained dual spaces (see Section 3), thereby enjoying preferable simulation-free complexity and better numerical scalability.

**MDM matches DDPM without violating constraints.** It should be highlighted that, while DDPM remains comparable to MDM in terms of distributional metric, the generated samples often violate the designated constrained sets. As shown in Tables 3 and 4, these constraint violations worsen as the dimension increases. In contrast, MDM is by design violation-free; hence marrying the best of both.

    & \(d=2\) & \(d=2\) & \(d=6\) & \(d=8\) & \(d\)=\(20\) \\  Sliced Wasserstein \(\) & & & & & \\ DDPM  & 0.0704 \(\) 0.0095 & 0.0236 \(\) 0.0048 & **0.0379 \(\) 0.0015** & **0.0231 \(\) 0.0020** & 0.0200 \(\) 0.0034 \\ Reflected  & 0.0642 \(\) 0.0181 & 0.0491 \(\) 0.0103 & 0.0609 \(\) 0.0055 & 0.0881 \(\) 0.0010 & 0.0574 \(\) 0.0065 \\ MDM (ours) & **0.0544 \(\) 0.0070** & **0.0214 \(\) 0.0025** & 0.0467 \(\) 0.0096 & 0.0292 \(\) 0.0017 & **0.0159 \(\) 0.0044** \\  Constraint violation (\%) \(\) & & & & \\ DDPM  & 0.00 \(\) 0.00 & 0.00 \(\) 0.00 & 8.67 \(\) 0.87 & 13.60 \(\) 0.62 & 19.33 \(\) 1.29 \\   

Table 3: Results of \(_{2}\)**-ball constrained sets** on five synthetic datasets of various dimension \(d\). We report Sliced Wasserstein  w.r.t. 1000 samples, averaged over three trials, and include constraint violations for unconstrained diffusion models. Note that Reflected Diffusion  and MDM satisfy constraints by design. Our MDM clearly achieves similar or better performance to standard diffusion models while fully respecting the constraints. Other metrics, _e.g.,_\(_{1}\), are reported in Appendix C. sc

Figure 5: Comparison between MDM and Reflected Diffusion  in modeling a Dirichlet distribution on a 7-dimensional simplex. We visualize the joint densities between \(x_{3:4}\) and \(x_{5:6}\).

    & \(d=3\) & \(d=3\) & \(d=7\) & \(d=9\) & \(d\)=\(20\) \\  Sliced Wasserstein \(\) & & & & \\ DDPM  & 0.0089 \(\) 0.0002 & **0.0110 \(\) 0.0032** & **0.0047 \(\) 0.0004** & 0.0053 \(\) 0.0003 & 0.0031 \(\) 0.0003 \\ Reflected  & 0.0233 \(\) 0.0019 & 0.0336 \(\) 0.0009 & 0.0411 \(\) 0.0039 & 0.0897 \(\) 0.0112 & 0.0231 \(\) 0.0011 \\ MDM (ours) & **0.0074 \(\) 0.0008** & 0.0169 \(\) 0.0016 & 0.0051 \(\) 0.0006 & **0.0040 \(\) 0.0003** & **0.0027 \(\) 0.0000** \\  Constraint violation (\%) \(\) & & & & \\ DDPM  & 0.73 \(\) 0.12 & 14.40 \(\) 1.39 & 11.63 \(\) 0.90 & 27.53 \(\) 0.57 & 68.83 \(\) 1.66 \\   

Table 4: Results of **simplices constrained sets** on five synthetic datasets of various dimension \(d\).

    & Runtime & Memory \\  MDM & 108\% & 100\% \\ Reflected Diff.  & \(>\)1200\% & 905\% \\   

Table 5: Runtime and memory complexity w.r.t. DDPM .

### Watermarked Generation on High-Dimensional Image Datasets

**Setup**  We present MDM as a new approach for watermarked generation, where the watermark is attached to samples within an orthonormal polytope \(:=\{x^{d}:c_{i}<a_{i}^{}x<b_{i}, i\}\). These parameters \(\{a_{i},b_{i},c_{i}\}_{i=1}^{m}\) serve as the _private tokens_ visible only to individual users (see Figure 2). While our approach is application-agnostic, we demonstrate MDM mainly on image datasets, including both unconditional and conditional generation. Given a designated watermark precision, defined as the percentage of constraint-satisfied images that are generated by MDMs, we randomly construct tokens as \(m\) orthonormalized Gaussian random vectors and instantiate MDMs by either projecting unwatermarked diffusion models onto \(\) (**MDM-proj**), or learning the corresponding dual-space diffusions (**MDM-dual**). More precisely, MDM-proj projects samples generated by pretrained diffusion models to a constraint set whose parameters (_i.e.,_ tokens) are visible only to the private user. In contrast, MDM-dual _learns_ a dual-space diffusion model from the constrained-projected samples; hence, like other MDMs in Section 5.1, it is constraint-dependent. Other details are left to Appendix C.

**Unconditional watermark generation on FFHQ and AFHQv2**  We first test out MMD on FFHQ  and AFHQv2  on unconditional 64\(\)64 image generation. Following Zhao et al. , we adopt EDM parameterization  and report in Table 6 the performance of MDM in generating watermarked images, quantified by the Frechet Inception Distance (FID) . Compared to prior watermarked approaches, which require additional training of latent spaces , **MDM stands as a competitive approach for watermarked generation** by directly constructing analytic dual spaces from the tokens (_i.e.,_ constraints) themselves. Intriguingly, despite the fact that MDM-dual learns a smoother dual-space distribution compared to the truncated one from MDM-proj (see Figure 7), the latter consistently achieves lower (hence better) FIDs. Since samples generated by MDM-dual still remain close to the watermarked distribution, as indicated in Table 6 by the low _FIDs*_ w.r.t. the shifted training statistics, we conjecture that the differences may be due to the significant distributional shift induced by naively projecting the training data onto the constraint set. This is validated, partly, in the ablation study from Figure 8, where we observe that both the FID and watermark precision improve as the number of constraints \(m\) decreases, and as the constraint ranges \((c_{i},b_{i})\) loosen. We highlight this fundamental trade off between watermark protection and generation quality. Examples of watermarked images are shown in Figure 6 and Appendix C.

**Conditional generation on ImageNet256**  Finally, we consider conditional watermarked generation on ImageNet 256\(\)256. Specifically, we focus on image restoration tasks, where the goal

    &  &  \\ _Precision_ & _59.3\%_ & _71.8\%_ & _93.3\%_ & _56.9\%_ & _75.0\%_ & _92.7\%_ \\  MDM-proj & 2.54 & 2.59 & 3.08 & 2.10 & 2.12 & 2.30 \\  & 2.96 & 4.57 & 15.74 & 2.23 & 2.86 & 6.79 \\  & 2.65* & 2.93* & 4.40* & 2.21* & 2.32* & _3.05*_ \\   

Table 6: The 50k-FID for unconditional watermarked generation. _Waternark precision_ denotes the percentage of constraint-satisfied images that are generated by MDMs, controlled by loosing/tightening the constrained sets. As MDM-dual is trained on constraint-projected images, we also report its _FIDs*_ w.r.t. the shifted distributions. The prior watermarked diffusion model  reported 5.03 on FFHQ and 4.32 on AFHQv2.

is to generate clean, watermarked, images conditioned on degraded--restored with JPEG in this case--inputs. Similar to unconditional generation, we consider a polytope constraint set whose parameters are chosen such that the watermark yields high precision (\(>\) 95%) and low false positive rate (\(<\) 0.001%). Specifically, we set \(m=100\) and \(b=-c=1.2\). We initialize the networks with pretrained checkpoints from Liu et al. .

Figure 9 reports the qualitative results. It is clear that both MDM-dual and MDM-proj are capable of solving this conditional generation task, generating clean images that additionally embed invisible watermarks, _i.e.,_\(x\). Note that all non-MDM-generated images, despite being indistinguishable, actually violate the polytope constraint, whereas MDM-generated images always satisfy the constraint. Overall, our results suggest that both MDM-dual and MDM-proj scale to high-dimensional applications and are capable of embedding invisible watermarks in high-resolution images.

## 6 Conclusion and Limitation

We developed Mirror Diffusion Models (MDMs), a dual-space diffusion model that enjoys simulation-free training for constrained generation. We showed that MDM outperforms prior methods in standard constrained generation, such as balls and simplices, and offers a competitive alternative in generating watermarked contents. It should be noted that MDM concerns mainly _convex_ constrained sets, which, despite their extensive applications, limits the application of MDM to general constraints. It will be interesting to combine MDM with other dynamic generative models, such as flow-based approaches.

## Broader Impact

Mirror Diffusion Models (MDMs) advance the recent development of diffusion models to complex domains subjected to convex constrained sets. This opens up new possibilities for MDMs to serve as preferred models for generating samples that live in _e.g.,_ simplices and balls. Additionally, MDMs introduce an innovative application of constrained sets as a watermarking technique. This has the potential to address concerns related to unethical usage and safeguard the copyright of generative models. By incorporating constrained sets into the generating process, MDMs offer a means to prevent unauthorized usage and ensure the integrity of generated content.

Figure 9: Conditional watermarked generation on ImageNet 256\(\)256. Specifically, we consider the JPEG restoration task, where, given degraded, low-quality inputs \(y\) (_upper-left_), we wish to generate their corresponding clean images \(x\) (_upper-right_) by learning \(p(x|y)\). It is clear that both MDM-dual and MDM-proj are capable of solving this conditional generation task, generating clean images that additionally embed invisible watermarks, _i.e.,_\(x\).

[MISSING_PAGE_FAIL:11]

*  Emile Mathieu and Maximilian Nickel. Riemannian continuous normalizing flows. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2020.
*  Ricky T. Q. Chen and Yaron Lipman. Riemannian flow matching on general geometries. _arXiv preprint arXiv:2302.03660_, 2023.
*  Nic Fishman, Leo Klarner, Valentin De Bortoli, Emile Mathieu, and Michael Hutchinson. Diffusion models for constrained domains. _Transactions on Machine Learning Research (TMLR)_, 2023.
*  Ben J Morris. Improved bounds for sampling contingency tables. _Random Structures & Algorithms_, 21(2):135-146, 2002.
*  Nathan E Lewis, Harish Nagarajan, and Bernhard O Palsson. Constraining the metabolic genotype-phenotype relationship using a phylogeny of in silico methods. _Nature Reviews Microbiology_, 10(4):291-305, 2012.
*  Li Han and Lee Rudolph. Inverse kinematics for a serial chain with joints under distance constraints. In _Robotics: Science and Systems (RSS)_, 2006.
*  Tsuneo Yoshikawa. Manipulability of robotic mechanisms. _The international journal of Robotics Research_, 4(2):3-9, 1985.
*  Ruth J Williams. Reflected brownian motion with skew symmetric data in a polyhedral domain. _Probability Theory and Related Fields_, 75(4):459-485, 1987.
*  Andrey Pilipenko. _An introduction to stochastic differential equations with reflection_, volume 1. Universitatsverlag Potsdam, 2014.
*  Aaron Lou and Stefano Ermon. Reflected diffusion models. In _International Conference on Machine Learning (ICML)_, 2023.
*  Sebastien Bubeck, Ronen Eldan, and Joseph Lehec. Finite-time analysis of projected langevin monte carlo. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2015.
*  Kanji Sato, Akiko Takeda, Reiichiro Kawai, and Taiji Suzuki. Convergence error analysis of reflected gradient langevin dynamics for globally optimizing non-convex constrained problems. _arXiv preprint arXiv:2203.10215_, 2022.
*  Ya-Ping Hsieh, Ali Kavis, Paul Rolland, and Volkan Cevher. Mirrored langevin dynamics. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2018.
*  Dominique Bakry, Ivan Gentil, and Michel Ledoux. _Analysis and geometry of Markov diffusion operators_, volume 103. Springer, 2014.
*  Mark Girolami and Ben Calderhead. Riemann manifold langevin and hamiltonian monte carlo methods. _Journal of the Royal Statistical Society: Series B (Statistical Methodology)_, 73(2):123-214, 2011.
*  Kelvin Shuangjian Zhang, Gabriel Peyre, Jalal Fadili, and Marcelo Pereyra. Wasserstein control of mirror langevin monte carlo. In _Conference on Learning Theory (COLT)_, 2020.
*  Sinho Chewi, Thibaut Le Gouic, Chen Lu, Tyler Maunu, Philippe Rigollet, and Austin Stromme. Exponential ergodicity of mirror-Langevin diffusions. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2020.
*  Kwangjun Ahn and Sinho Chewi. Efficient constrained sampling via the mirror-Langevin algorithm. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2021.
*  Ruilin Li, Molei Tao, Santosh S Vempala, and Andre Wibisono. The mirror langevin algorithm converges with vanishing bias. In _International Conference on Algorithmic Learning Theory (ALT)_, 2022.

*  Michael Liebrenz, Roman Schleifer, Anna Buadze, Dinesh Bhugra, and Alexander Smith. Generating scholarly content with chatgpt: ethical challenges for medical publishing. _The Lancet Digital Health_, 5(3):e105-e106, 2023.
*  John Kirchenbauer, Jonas Geiping, Yuxin Wen, Jonathan Katz, Ian Miers, and Tom Goldstein. A watermark for large language models. In _International Conference on Machine Learning (ICML)_, 2023.
*  Jurgen Rudolph, Samson Tan, and Shannon Tan. Chatgpt: Bullshit spewer or the end of traditional assessments in higher education? _Journal of Applied Learning and Teaching_, 6(1), 2023.
*  Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2022.
*  Yunqing Zhao, Tianyu Pang, Chao Du, Xiao Yang, Ngai-Man Cheung, and Min Lin. A recipe for watermarking diffusion models. _arXiv preprint arXiv:2303.10137_, 2023.
*  Olaf Ronneberger, Philipp Fischer, and Thomas Brox. U-Net: Convolutional networks for biomedical image segmentation. In _International Conference on Medical Image Computing and Computer-assisted Intervention_. Springer, 2015.
*  Peter D Lax. Change of variables in multiple integrals. _The American mathematical monthly_, 106(6):497-501, 1999.
*  Alexander Quinn Nichol and Prafulla Dhariwal. Improved denoising diffusion probabilistic models. In _International Conference on Machine Learning_, pages 8162-8171. PMLR, 2021.
*  Yang Song, Conor Durkan, Iain Murray, and Stefano Ermon. Maximum likelihood training of score-based diffusion models. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2021.
*  Sebastien Bubeck and Ronen Eldan. The entropic barrier: a simple and optimal universal self-concordant barrier. In _Conference on Learning Theory (COLT)_, 2015.
*  Arkadij Semenovic Nemirovskij and David Borisovich Yudin. _Problem complexity and method efficiency in optimization_. Wiley-Interscience, 1983.
*  Amir Beck and Marc Teboulle. Mirror descent and nonlinear projected subgradient methods for convex optimization. _Operations Research Letters_, 31(3):167-175, 2003.
*  Yousef Saad. _Iterative methods for sparse linear systems_. SIAM, 2003.
*  David M Blei, Andrew Y Ng, and Michael I Jordan. Latent dirichlet allocation. _Journal of Machine Learning Research (JMLR)_, 2003.
*  Arthur Asuncion, Max Welling, Padhraic Smyth, and Yee Whye Teh. On smoothing and inference for topic models. In _Conference on Uncertainty in Artificial Intelligence (UAI)_, 2009.
*  Lixin Lang, Wen-shiang Chen, Bhavik R Bakshi, Prem K Goel, and Sridhar Ungarala. Bayesian estimation via sequential monte carlo sampling--constrained dynamic systems. _Automatica_, 43(9):1615-1622, 2007.
*  Michael A Gelbart, Jasper Snoek, and Ryan P Adams. Bayesian optimization with unknown constraints. In _Conference on Uncertainty in Artificial Intelligence (UAI)_, 2014.
*  Yann Brenier. Decomposition polaire et rearrangement monotone des champs de vecteurs. _CR Acad. Sci. Paris Ser. I Math._, 305:805-808, 1987.
*  Nicolas Brosse, Alain Durmus, Eric Moulines, and Marcelo Pereyra. Sampling from a log-concave distribution with compact support with proximal Langevin Monte Carlo. In _Conference on Learning Theory (COLT)_, 2017.

*  Sam Patterson and Yee Whye Teh. Stochastic gradient Riemannian Langevin dynamics on the probability simplex. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2013.
*  Yaron Lipman, Ricky T. Q. Chen, Heli Ben-Hamu, Maximilian Nickel, and Matt Le. Flow matching for generative modeling. In _International Conference on Learning Representations (ICLR)_, 2023.
*  Ricky TQ Chen, Brandon Amos, and Maximilian Nickel. Semi-discrete normalizing flows through differentiable tessellation. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2022.
*  Xingchao Liu, Lemeng Wu, Mao Ye, et al. Learning diffusion bridges on constrained domains. In _International Conference on Learning Representations (ICLR)_, 2022.
*  Mao Ye, Lemeng Wu, and Qiang Liu. First hitting diffusion models for generating manifold, graph and categorical data. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2022.
*  Bowen Jing, Gabriele Corso, Jeffrey Chang, Regina Barzilay, and Tommi Jaakkola. Torsional diffusion for molecular conformer generation. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2022.
*  Gabriele Corso, Hannes Stark, Bowen Jing, Regina Barzilay, and Tommi Jaakkola. Diffdock: Diffusion steps, twists, and turns for molecular docking. In _International Conference on Learning Representations (ICLR)_, 2023.
*  Adam Leach, Sebastian M Schmon, Matteo T Degiacomi, and Chris G Willcocks. Denoising diffusion probabilistic models on \(SO\)(3) for rotational alignment. In _International Conference on Learning Representations (ICLR), Workshop Track_, 2022.
*  Julen Urain, Niklas Funk, Georgia Chalvatzaki, and Jan Peters. \(SE\)(3)-DiffusionFields: Learning cost functions for joint grasp and motion optimization through diffusion. In _IEEE International Conference on Robotics and Automation (ICRA), Workshop Track_, 2022.
*  Pierre H Richemond, Sander Dieleman, and Arnaud Doucet. Categorical SDEs with simplex diffusion. _arXiv preprint arXiv:2210.14784_, 2022.
*  Marco Caponigro, Anna Chiara Lai, and Benedetto Piccoli. A nonlinear model of opinion formation on the sphere. _Discrete & Continuous Dynamical Systems-A_, 35(9):4241-4268, 2015.
*  Jason Gaitonde, Jon Kleinberg, and Eva Tardos. Polarization in geometric opinion dynamics. In _ACM Conference on Economics and Computation_, pages 499-519, 2021.
*  John C Cox, Jonathan E Ingersoll Jr, and Stephen A Ross. A theory of the term structure of interest rates. In _Theory of valuation_, pages 129-164. World Scientific, 2005.
*  Arash Vahdat, Karsten Kreis, and Jan Kautz. Score-based generative modeling in latent space. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2021.
*  Kushagra Pandey, Avideep Mukherjee, Piyush Rai, and Abhishek Kumar. Diffusevae: Efficient, controllable and high-fidelity generation from low-dimensional latents. _Transactions on Machine Learning Research (TMLR)_, 2022.
*  Dongjun Kim, Byeonghu Na, Se Jung Kwon, Dongsoo Lee, Wanmo Kang, and Il-Chul Moon. Maximum likelihood training of implicit nonlinear diffusion models. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2022.
*  Nicolas Bonneel, Julien Rabin, Gabriel Peyre, and Hanspeter Pfister. Sliced and radon wasserstein barycenters of measures. _Journal of Mathematical Imaging and Vision_, 51:22-45, 2015.
*  Yang Song, Sahaj Garg, Jiaxin Shi, and Stefano Ermon. Sliced score matching: A scalable approach to density and score estimation. In _Conference on Uncertainty in Artificial Intelligence (UAI)_, 2020.

* Karras et al.  Tero Karras, Samuli Laine, and Timo Aila. A style-based generator architecture for generative adversarial networks. In _IEEE Conference on Computer Vision and Pattern Recognition (CVPR)_, 2019.
* Choi et al.  Yunjey Choi, Youngjung Uh, Jaejun Yoo, and Jung-Woo Ha. Stargan v2: Diverse image synthesis for multiple domains. In _IEEE Conference on Computer Vision and Pattern Recognition (CVPR)_, 2020.
* Heusel et al.  Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. GANs trained by a two time-scale update rule converge to a local nash equilibrium. In _Advances in Neural Information Processing Systems (NeurIPS)_, 2017.
* Liu et al.  Guan-Horng Liu, Arash Vahdat, De-An Huang, Evangelos A Theodorou, Weili Nie, and Anima Anandkumar. I\({}^{2}\)SB: Image-to-Image Schrodinger bridge. In _International Conference on Machine Learning (ICML)_, 2023.
* Paszke et al.  Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, Alban Desmaison, Andreas Kopf, Edward Yang, Zachary DeVito, Martin Raison, Alykhan Tejani, Sasank Chilamkurthy, Benoit Steiner, Lu Fang, Junjie Bai, and Soumith Chintala. Pytorch: An imperative style, high-performance deep learning library. In _Advances in Neural Information Processing Systems 32_, pages 8024-8035. Curran Associates, Inc., 2019. URL http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf.
* Loshchilov and Hutter  Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization. In _International Conference on Learning Representations (ICLR)_, 2019.
* Elfwing et al.  Stefan Elfwing, Eiji Uchibe, and Kenji Doya. Sigmoid-weighted linear units for neural network function approximation in reinforcement learning. _Neural Networks_, 107:3-11, 2018.
* Wu and He  Yuxin Wu and Kaiming He. Group normalization. In _Proceedings of the European conference on computer vision (ECCV)_, pages 3-19, 2018.

Derivation of Mirror Mappings

Here, we provide addition derivation of \(^{*}\). Computation of \((x)\) and \(^{2}^{*}(y)\) follow straightforwardly by differentiating \((x)\) and \(^{*}(y)\) w.r.t. \(x\) and \(y\), respectively.

\(_{2}\)-BallSince the gradient map also reverses the mirror map, we aim to rewrite \(y=^{2}}x\) as \(x=f(y)=_{}^{*}(y)\). Solving the second-order polynomial,

\[\|y\|_{2}^{2}=(^{2}})^{2}\|x \|_{2}^{2},\] (19)

yields

\[\|x\|_{2}^{2}=R+^{2}}(-^{2}+^{2}}).\] (20)

With that, we can rewrite Equation (11) by

\[x=^{2}}{2}\,y}{=} ^{2}+^{2}}-}{\|y\|_{2}^{2}}y=^{2}+^{2}}+}y.\]

SimplexStandard calculations in convex analysis  shows

\[_{}^{*}(y)=(1+_{i}^{d}e^{y_{i}} ).\] (21)

Differentiating Equation (21) w.r.t. \(y\) yields \(_{}^{*}\) in Equation (13).

PolytopeSince the gradient map also reverses the mirror map, we aim to inverse

\[y=_{i=1}^{m}s_{i}( a_{i},x)a_{i}+_{j=m+1}^{ d} a_{j},x a_{j}.\] (22)

When all \(d\) constraints are orthonormal, taking inner product between \(y\) and each \(a\) yields

\[ a_{i},y=s_{i}( a_{i},x), a _{j},y= a_{j},x.\] (23)

Therefore, we can reconstruct \(x\) from \(y\) via

\[x =_{i=1}^{m} a_{i},x a_{i}+_{j=m+1}^{d}  a_{j},x a_{j}\] \[}{=}_{i=1}^{m}s_{i}^{-1}( a_{i},y)a_{i}+_{j=m+1}^{d} a_{j},y a_{j},\]

which defines \(x=_{}^{*}(y)\). For completeness, the Hessian can be presented compactly as

\[^{2}_{}^{*}(y)=+ ^{},\] (24)

where \(\) is the identity matrix, \(:=[a_{1},,a_{m}]\) is a \(d\)-by-\(m\) matrix whose column vector \(a_{i}\) corresponds to each constraint, and \(^{m m}\) is a diagonal matrix with leading entries

\[[]_{ii}=^{-1}(z)}{ z}|_{z= a_{i},y }-1}{=}-c_{i}}{2}(1-^{2}(  a_{i},y))-1.\]Additional Remarks on Polytope

Derivation of Equation (17)Since the subspaces spanned by \(\{a_{i}\}\) and \(\{a_{j}\}\) are orthogonal to each other, we can rewrite (15) as

\[_{}(x)=_{i=1}^{m}s_{i}( a_{i},x)a_{i} +(x-_{i=1}^{m} a_{i},x a_{i})=x+_{i=1}^{m} (s_{i}( a_{i},x)- a_{i},x)a_{i}.\]

\(_{}^{*}(y)\) follows similar derivation.

Generalization to non-orthonormal constraintsThe mirror maps of a polytope, as described in Equations (15) to (17), can be seen as operations that manipulate the coefficients associated with the bases defined by the constraints. This understanding allows us to extend the computation to non-orthonormal constraints by identifying the corresponding "coefficients" through a change of bases, utilizing the reproducing formula:

\[x=_{i=1}^{d}_{i},x a_{i},_{i}(^{})^{-1}^{},\]

and \(:=[a_{1},,a_{m}]\). Similarly, we have \(y=_{i=1}^{d}_{i},y a_{i}\). Applying similar derivation leads to

\[_{}(x)=x+_{i=1}^{m}(s_{i}(_{i}, x)-_{i},x)a_{i},\;_{}^{*}(y)=y+ _{i=1}^{m}(s_{i}^{-1}(_{i},y)-_{i},y)a_{i}.\]

## Appendix C Experiment Details & Additional Results

Dataset & constrained sets
* _\(_{2}\)-balls constrained sets_: For \(d=2\), we consider the Gaussian Mixture Model (with variance \(0.05\)) and the Spiral shown respectively in Figures 1 and 3. For \(d=\{6,8,20\}\), we place \(d\) isotropic Gaussians, each with variance \(0.05\), at the corner of each dimension, and reject samples outside the constrained sets.
* _Simplices constrained sets_: We consider Dirichlet distributions , \(()\), with various concentration parameters \(\) detailed in Table 7.
* _Hypercube constrained sets_: For all dimensions \(d=\{2,3,6,8,20\}\), we place \(d\) isotropic Gaussians, each with variance \(0.2\), at the corner of each dimension, and either reject (\(d=\{2,3,6,8\}\)) or reflect (\(d=20\)) samples outside the constrained sets.
* _Watermarked datasets and polytope constrained sets_: We follow the same data preprocessing from EDM5 and rescale both FFHQ and AFHQv2 to 64\(\)64 image resolution. For the polytope constrained sets \(:=\{x^{d}:c_{i}<a_{i}^{}x<b_{i}, i\}\), we construct \(a_{i}\) from orthonormalized Gaussian random vectors and detail other hyperparameters in Table 8.

   \(d\) & \(3\) & \(3\) & \(7\) & \(9\) & \(20\) \\   \(\) & \(\) & \([1,0.1,5]\) & \(\) & \([1,0.5,2,0.3,0.6,4,8,8,2]\) & \([0.2,0.4,,4,4.2]\) \\   

Table 7: The concentration parameter \(\) of each Dirichlet distribution in simplices constrained sets.

ImplementationAll methods are implemented in PyTorch . We adopt ADM6 and EDM5 respectively as the MDM's diffusion backbones for constrained and watermarked generation. We implemented Reflected Diffusion  by ourselves as their codes have not yet been made available by the submission time (May 2023), and used the official implementation7 of Reflected Diffusion  in Table 11. We also implemented Simplex Diffusion , but as observed in previous works , it encountered computational instability especially when computing the modified Bessel functions.

TrainingFor constrained generation, all methods are trained with AdamW  and an exponential moving average with the decay rate of 0.99. As standard practices, we decay the learning rate by the decay rate 0.99 every 1000 steps. For watermarked generation, we follow the default hyperparameters from EDM5. All experiments are conducted on two TITAN RTXs and one RTX 2080.

NetworkFor constrained generation, all networks take \((y,t)\) as inputs and follow

\[=((()+ (()))),\]

where timestep_embedding(\(\)) is the standard sinusoidal embedding. t_mod and out_mod consist of 2 fully-connected layers (Linear) activated by the Sigmoid Linear Unit (SiLU) :

\[== \]

and y_mod consists of 3 residual blocks, _i.e.,_y_mod(\(y\)) = \(y+((y))\), where

\[= \]

All Linear's have 128 hidden dimension. We use group normalization  for all norm. For watermarked generation, we use EDM parameterization5.

EvaluationWe compute the Wasserstein and Sliced Wasserstein distances using the geomloss8 and ot9 packages, respectively. The Maximum Mean Discrepancy (MMD) is based on the popular package https://github.com/ZongxianLee/MMD_Loss.Pytorch, which is unlicensed. For watermarked generation, we follow the same evaluation pipeline from EDM6 by first generating 50,000 watermarked samples and computing the FID w.r.t. the training statistics.

False-positive rateSimilar to Kirchenbauer et al. , we reject the null hypothesis and detect the watermark if the sample produces no violation of the polytope constraint, _i.e.,_ if \(x\). Hence, the false-positive samples are those that are actually true null hypothesis (_i.e.,_ not generated by MDM) yet accidentally fall into the constraint set, hence being mistakenly detected as watermarked. Specifically, the false-positive rates of our MDMs are respectively 0.07% and 0.08% for FFHQ and AFHQv2. Lastly, we note that the fact that both MDM-proj and MDM-dual generate samples that always satisfy the constraint readily implies 100% recall and 0% Type II error.

### Additional Results

Tractable variational bound in Equation (8)Figure 10 demonstrates how MDM faithfully captures the variational bound to the negative log-likelihood (NLL) of 2-dimensional GMM.

More constrained sets, distributional metrics, & baselineTables 9 and 10 expand the analysis in Tables 3 and 4 with additional distributional metrics such as Wasserstein-1 (\(_{1}\)) and Maximum Mean Discrepancy (MMD). Additionally, Table 11 reports the results of hypercube \(^{d}\) constrained set, a special instance of polytopes, and includes additional baseline from Lou and Ermon , which approximate the

Figure 10: Tractable variational bound by our MDM.

intractable scores in Reflected Diffusion using eigenfunctions tailored specifically to hypercubes, rather than implicit score matching as in Fishman et al. . Consistently, our findings conclude that the MDM is the _only_ constrained-based diffusion model that achieves comparable or better performance to DDPM. These results affirm the effectiveness of MDM in generating high-quality samples within constrained settings, making it a reliable choice for constrained generative modeling.

More watermarked samplesFigures 11 and 12 provide additional qualitative results on the watermarked samples generated by MDMs.

Figure 11: FFHQ 64\(\)64 unconditional watermarked samples generated by **(left)** MDM-proj and **(right)** MDM-dual from the same set of random seeds. Despite the fact that some images, such as the one in the first row and sixth column, were altered possibly due to the change of dual-space distribution (see Figure 7), they look realistic and remain close to the data distribution.

Figure 12: AFHQv2 64\(\)64 unconditional watermarked samples generated by **(left)** MDM-proj and **(right)** MDM-dual from the same set of random seeds. Despite the fact that some images, such as the one in the fifth row and first column, were altered possibly due to the change of dual-space distribution (see Figure 7), they all look realistic and remain close to the data distribution.

    & \(d=2\) & \(d=2\) & \(d=6\) & \(d=8\) & \(d{=}20\) \\  \(_{1}\) (unit: \(10^{-2}\)) & & & & \\  DDPM  & \( 0.00\) & \( 0.01\) & \( 0.00\) & \( 0.00\) & \( 0.00\) \\ Reflected  & \(0.06 0.01\) & \(0.12 0.00\) & \(0.62 0.08\) & \(3.57 0.05\) & \(0.98 0.02\) \\ MDM (ours) & \( 0.00\) & \( 0.01\) & \( 0.00\) & \( 0.00\) & \(0.13 0.00\) \\  \))} & & & \\  DDPM  & \(0.72 0.007\) & \(0.72 0.30\) & \(0.74 0.10\) & \(0.97 0.22\) & \(1.12 0.07\) \\ Reflected  & \(3.91 0.95\) & \(15.12 1.36\) & \(16.48 1.04\) & \(131.44 2.65\) & \(57.90 2.07\) \\ MDM (ours) & \( 0.16\) & \( 0.26\) & \( 0.08\) & \( 0.13\) & \( 0.03\) \\   & & & \\  DDPM  & \(0.73 0.12\) & \(14.40 1.39\) & \(11.63 0.90\) & \(27.53 0.57\) & \(68.83 1.66\) \\   

Table 10: Expanded results of simplices constrained sets.

    & \(d=3\) & \(d=3\) & \(d=7\) & \(d=9\) & \(d{=}20\) \\  \(_{1}\) (unit: \(10^{-2}\)) & & & & \\  DDPM  & \( 0.00\) & \( 0.01\) & \( 0.00\) & \( 0.00\) & \( 0.00\) \\ Reflected  & \(0.06 0.01\) & \(0.12 0.00\) & \(0.62 0.08\) & \(3.57 0.05\) & \(0.98 0.02\) \\ MDM (ours) & \( 0.00\) & \( 0.01\) & \( 0.00\) & \( 0.00\) & \(0.13 0.00\) \\  \))} & & & \\  DDPM  & \(0.72 0.007\) & \(0.72 0.30\) & \(0.74 0.10\) & \(0.97 0.22\) & \(1.12 0.07\) \\ Reflected  & \(3.91 0.95\) & \(15.12 1.36\) & \(16.48 1.04\) & \(131.44 2.65\) & \(57.90 2.07\) \\ MDM (ours) & \( 0.16\) & \( 0.26\) & \( 0.08\) & \( 0.13\) & \( 0.03\) \\   & & & \\  DDPM  & \(0.73 0.12\) & \(14.40 1.39\) & \(11.63 0.90\) & \(27.53 0.57\) & \(68.83 1.66\) \\   

Table 11: Results of **hypercube \(^{d}\) constrained sets**.

    & \(d=2\) & \(d=2\) & \(d=6\) & \(d=8\) & \(d{=}20\) \\  \(_{1}\) (unit: \(10^{-2}\)) & & & & \\  DDPM  & \(0.66 0.15\) & \(0.14 0.03\) & \( 0.09\) & \( 0.10\) & \(3.45 0.50\) \\ Reflected  & \(0.55 0.29\) & \(0.46 0.17\) & \(3.11 0.40\) & \(10.13 0.21\) & \(19.42 0.13\) \\ MDM (ours) & \( 0.07\) & \( 0.04\) & \(0.72 0.39\) & \(1.05 0.26\) & \( 0.31\) \\  \))} & & & \\  DDPM  & \(0.67 0.23\) & \( 0.07\) & \( 0.19\) & \(0.75 0.24\) & \(0.98 0.42\) \\ Reflected  & \(0.58 0.46\) & \(5.03 1.17\) & \(2.34 0.14\) & \(28.82 0.66\) & \(14.83 0.62\) \\ MDM (ours) & \( 0.36\) & \(0.27 0.19\) & \(0.54 0.12\) & \( 0.23\) & \( 0.17\) \\   & & \\  DDPM  & \(0.00 0.00\) & \(0.00 0.00\) & \(8.67 0.87\) & \(13.60 0.62\) & \(19.33 1.29\) \\   

Table 9: Expanded results of \(_{2}\)**-ball constrained sets**, where we include additional distributional metrics such as \(_{1}\) and Maximum Mean Discrepancy (MMD), all computed with 1000 samples and averaged over three trials. Consistently, our findings conclude that the MDM is the _only_ constrained-based diffusion model that achieves comparable or better performance to DDPM.