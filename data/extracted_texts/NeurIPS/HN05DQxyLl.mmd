# Approximating mutual information of high-dimensional variables using learned representations

Gokul Gowri

1Wyss Institute for Biologically Inspired Engineering

2Department of Systems Biology, Harvard University

2corresponding authors: ggowri@g.harvard.edu, allon_klein@hms.harvard.edu

Xiao-Kang Lun

2Department of Systems Biology, Harvard University

2corresponding authors: ggowri@g.harvard.edu, allon_klein@hms.harvard.edu

Allon M. Klein

2Department of Systems Biology, Harvard University

2corresponding authors: ggowri@g.harvard.edu, allon_klein@hms.harvard.edu

Peng Yin

1Wyss Institute for Biologically Inspired Engineering

2Department of Systems Biology, Harvard University

2corresponding authors: ggowri@g.harvard.edu, allon_klein@hms.harvard.edu

###### Abstract

Mutual information (MI) is a general measure of statistical dependence with widespread application across the sciences. However, estimating MI between multi-dimensional variables is challenging because the number of samples necessary to converge to an accurate estimate scales unfavorably with dimensionality. In practice, existing techniques can reliably estimate MI in up to tens of dimensions, but fail in higher dimensions, where sufficient sample sizes are infeasible. Here, we explore the idea that underlying low-dimensional structure in high-dimensional data can be exploited to faithfully approximate MI in high-dimensional settings with realistic sample sizes. We develop a method that we call latent MI (LMI) approximation, which applies a nonparametric MI estimator to low-dimensional representations learned by a simple, theoretically-motivated model architecture. Using several benchmarks, we show that unlike existing techniques, LMI can approximate MI well for variables with \(>10^{3}\) dimensions if their dependence structure is captured by low-dimensional representations. Finally, we showcase LMI on two open problems in biology. First, we approximate MI between protein language model (pLM) representations of interacting proteins, and find that PLMs encode non-trivial information about protein-protein interactions. Second, we quantify cell fate information contained in single-cell RNA-seq (scRNA-seq) measurements of hematopoietic stem cells, and find a sharp transition during neutrophil differentiation when fate information captured by scRNA-seq increases dramatically. An implementation of LMI is available at latentmi.readthedocs.io.

## 1 Introduction

Mutual information is a universal dependence measure which has been used to describe relationships between variables in a wide variety of complex systems: developing embryos , artificial neural networks , flocks of birds , and more. Its widespread use can be attributed to at least two of its appealing properties: equitability and interpretability.

Many dependence measures are inequitable, meaning that they are biased toward relationships of specific forms . For example, Pearson correlations quantify the strength of linear relationships, and Spearman correlations quantify the strength of monotonic relationships. Inequitability can be particularly problematic for complex systems, where relationships can be nonlinear, non-monotonic, or involve higher-order interactions between multidimensional variables . Mutual information (MI) stands out as an equitable measure that can capture relationships of any form, and generalizes across continuous, discrete, and multidimensional variables . And when scaled consistently, MI provides a universal currency in interpretable units - which can be understood as the number of 'bits'of information shared between variables . MI can also be interpreted through decomposition into pointwise mutual information (pMI) [8; 9], which attributes dependence to specific pairs of values.

MI can be defined as the Kullback-Leibler divergence, \(D_{KL}\), of a joint distribution from the product of its marginals. For absolutely continuous random variables \(X,Y\) defined over \(,\), with joint distribution \(P_{XY}\) and marginal distributions \(P_{X},P_{Y}\)

\[I(X;Y)=D_{}(P_{XY}||P_{X} P_{Y})=_{}_{ }P_{XY}(x,y)(x,y)}{P_{X}(x)P_{Y}(y)}dydx\] (1)

In practice, \(P_{XY}\) is often unknown, and \(I(X;Y)\) must be estimated from observations \(\{(x_{i},y_{i})\}\) that sparsely sample \(P_{XY}\). While nonparametric MI estimators have been remarkably successful for variables with a single dimension [10; 11; 12; 13], MI estimation for high-dimensional variables remains a significant challenge. Nonparametric MI estimation suffers from the curse of dimensionality - accurate estimation requires a number of samples that scales exponentially with the dimensionality of the variables .

An exciting recent approach to scaling MI estimates to high dimension is the use of variational bounds on KL divergence to reduce the MI estimation problem to a gradient descent optimization problem [15; 16]. MI estimators based on variational bounds indeed empirically perform well for data with ones to tens of dimensions , but still suffer from the curse of dimensionality , and can exhibit high variance [16; 17]. To our knowledge, no techniques have been shown to reliably estimate MI in practice for variables with hundreds or thousands of dimensions - a regime relevant to many fields, including genomics, neuroscience, ecology, and machine learning [18; 19; 5; 20].

More generally, it has been shown that no technique can accurately estimate MI from finite samples without making strong assumptions about the distribution from which samples are drawn , resulting in a fundamental tension between the theoretical appeal of MI and the practical difficulty of its estimation. One way to resolve this tension is to develop alternative measures of statistical dependence [14; 22], which retain desirable properties of MI, but are tractable to estimate. Sliced MI, which is the average of MI estimates on random low-dimensional linear projections ("slices") of high-dimensional data, is a notable example of such an approach [14; 23]. While sliced MI is useful for many problems [24; 25], it does not retain the interpretability (in bits) of classical MI, and is inequitable, as it quantifies information that can be extracted through linear projections .

Here, we take a complementary approach to sliced measures. Rather than considering alternatives to classical MI, we ask if it is possible to make strong, yet reasonable, assumptions about data which enable tractable MI estimation. In this work, we consider the empirically supported assumption that complex systems have underlying low-dimensional structure . The usefulness of this assumption relies on our ability to identify low-dimensional structure in data. We will explore methods for learning low-dimensional representations which are useful for MI estimation and highlight examples where the methods can still fail.

Specifically, we propose latent mutual information (LMI) approximation, which applies a nonparametric MI estimator to mutually informative compressed representations of high-dimensional variables. To learn such representations, we design a simple neural network architecture motivated by information-theoretic principles. We demonstrate, using synthetic multivariate Gaussian data, that LMI approximation can be stable for variables reaching thousands of dimensions, provided their dependence has low-dimensional structure. We then introduce an approach for resampling real data to generate benchmark datasets of two high-dimensional variables where ground truth mutual information is known. Using this approach, we evaluate the ability of LMI to capture statistical dependence in two types of real data: images and protein sequence embeddings. Finally, we apply LMI to two open problems in biology: quantifying interaction information in protein language model embeddings, and quantifying cell fate information in the gene expression of stem cells.

## 2 Approach

Our goal is to approximate MI from high-dimensional data using low-dimensional representations which capture dependence structure. Our specific approach is to use neural networks to map variables \(X,Y\) to low-dimensional representations \(Z_{x},Z_{y}\). Then, we use the well-established nonparametric MI estimator introduced in  to estimate \((Z_{x};Z_{y})\).

The central challenge here is to learn \(Z_{x},Z_{y}\) such that \((Z_{x};Z_{y}) I(X;Y)\). One sensible approach would be to use autoencoders  or other popular nonlinear dimensionality reduction techniques [27; 28] to compress each variable separately. While such an approach could yield a good approximation if compression is perfectly lossless, it can result in a poor approximation if compression is lossy. An illustrative example is two variables each with thousands of independent dimensions but a single pair of strongly dependent dimensions - two separate lossy compressions are unlikely to preserve the rare dependent components.

We can make this intuition precise using properties of entropy and MI . For simplicity, let us consider an approximation using only one compressed variable, \(Z_{y}=f(Y)\). By rewriting MI in terms of differential entropy, denoted \(h\), we see that for absolutely continuous \(X,Y\) with finite differential entropy,

\[I(X;Y)-I(X;Z_{y})=h(X)-h(X|Y)-h(X)+h(X|Z_{y})=h(X|Z_{y})-h(X|Y)\] (2)

In the case of lossless compression, \(h(X|Z_{y})=h(X|Y)\), so

\[I(X;Y)-I(X;Z_{y})=h(X|Z_{y})-h(X|Y)=0\] (3)

However, if compression does not perfectly preserve information, it is possible that \(h(X|Z_{y}) h(X|Y)\). Since \(h(X|Y)\) is intrinsic to the data and independent of learned representations, minimizing \(h(X|Z_{y})\) is equivalent to minimizing \(I(X;Y)-I(X;Z_{y})\). This points to an approach to learn representations suitable for approximating \(I(X;Y)\): regularizing a pair of autoencoders to learn compressed representations \(Z_{x}=f(X)\) and \(Z_{y}=g(Y)\) while minimizing \(h(X|Z_{y})\) and \(h(Y|Z_{x})\).

Because directly minimizing conditional entropies is intractable, we instead minimize a convenient proxy, which is the mean-squared error (MSE) loss of networks that predict one variable from another. The connection between conditional entropy and reconstruction loss has long been appreciated as a way to interpret autoencoders through an information-theoretic lens [29; 30]. Here, we observe that this connection can be applied to learn representations which lend themselves to MI estimation. We explicitly show that minimizing cross-prediction loss from \(Z_{x}\) to \(Y\) is equivalent to minimizing an upper bound on the conditional entropy \(h(Y|Z_{x})\) in Appendix A.1.1, Theorem 1.

Applying cross-predictive regularization to a pair of autoencoders results in a network architecture (Fig. 1) with one encoder for each variable and four decoders which reconstruct each variable from each latent code. We train the networks by minimizing the sum of the MSE reconstruction loss for each decoder. More precisely, for variables \(X,Y\) with dimensionality \(d_{X},d_{Y}\), we optimize encoders \(E_{X},E_{Y}\), and decoders \(D_{XX},D_{XY},D_{YY},D_{YX}\) to minimize \(_{AEC}=_{AE}+_{C}\), where

\[_{AE}=}[||X-D_{XX}(E_{X}(X))||_{2}^{2}]+ }[||Y-D_{YY}(E_{Y}(Y))||_{2}^{2}]\] (4)

\[_{C}=}[||X-D_{YX}(E_{Y}(Y))||_{2}^{2}]+ }[||Y-D_{XY}(E_{X}(X))||_{2}^{2}]\] (5)

Figure 1: **Workflow of latent MI approximation a)** Embed high-dimensional data in low-dimensional space such that mutually informative structure is preserved. **b)** The KSG estimator  is used to estimate MI by averaging over pointwise MI (pMI) contributions.

This is not the only way one could regularize autoencoders to preserve mutually informative structure. We design and empirically characterize some alternatives in Appendix A.2. We find that multiple regularization approaches can be effective, but cross-prediction comes with unique benefits. For example cross-predictive networks can be dissected to attribute high-dimensional MI estimates to specific dimensions, as demonstrated in Appendix A.2.3.

While the specific architecture of encoders and decoders could be carefully chosen for each estimation problem (e.g. convolutional layers for image data), here we use multilayer perceptrons with _a priori_ determined hidden layer sizes for all problems. This is intentional: a useful MI estimator should not need extensive parameter selection. Every LMI estimate shown in this paper (excluding Appendix and Section 3.3) uses the default parameters of our library, equivalent to running lmi.estimate(X_samples,Y_samples).

To ensure that optimizing based on cross-reconstruction does not introduce spurious dependence due to overfitting, we learn representations and estimate MI on different subsets of the data. That is, for \(N\) joint samples, we train the network using a subset of \(N/2\) samples, then estimate MI by applying the estimator of  to latent representations of the remaining \(N/2\) samples. A high-level overview of an MI estimate using LMI approximation is given in Algorithm 1.

We also state and prove some basic properties of LMI approximation in Appendix 1.3, Theorems 2 and 3, namely that \(I(Z_{x};Z_{y}) I(X;Y)\), and that \(I(Z_{x};Z_{y})=0\) if \(I(X;Y)=0\).

```
0:\(N\) joint samples \(\{(x_{i},y_{i})\}_{i=1}^{N}\) of random variables \(X,Y\)
0: Encoders \(E_{X},E_{Y}\), decoders \(D_{XX},,D_{YY}\) parameterized by \(_{1},,_{6}\) randomly split into two subsets of \(N/2\) samples, \(_{},_{}\) optimize \(_{1},,_{6}\) to minimize \(_{AEC}\) on \(_{}\) encode \(_{}\) using \(E_{1},E_{2},_{1},_{2}\), yielding \(\{(Z_{i}^{x},Z_{i}^{y})\}_{i=1}^{N/2}\) return\(_{KSG}(\{(Z_{i}^{x},Z_{i}^{y})\}_{i=1}^{N/2})\) ```

**Algorithm 1** Estimating MI using LMI Approximation

## 3 Empirical evaluation

Next, we empirically study the effectiveness of LMI approximation with 16 dimensional latent space (8 dimensions per variable), in comparison with three popular estimators: the nonparametric estimator from , referred to as KSG, and the variational bound estimators from [15; 31] referred to as MINE and InfoNCE, respectively (implementation details in Appendix A4).

### Evaluating mutual information estimators on synthetic data

We first consider the problem of MI estimation between multivariate Gaussian distributions, because ground truth MI can be analytically computed, and dimensionality can be easily tuned. We consider the scalability of MI estimators with increasing dimensionality of two kinds: the ambient dimensionality of the data, denoted \(d\), and the intrinsic dimensionality of the dependence structure, denoted \(k\). We benchmark the performance of estimators in the regime of high ambient dimensionality and low intrinsic dimensionality. Specifically, we consider variables with \(d=10\) to \(d=5 10^{3}\) ambient dimensions and \(k=1\) to \(k=9\) dimensional dependence structure.

To generate samples from two \(d\)-dimensional random variables \(X,Y\) with \(k\)-dimensional dependence structure, we sample multivariate Gaussians with a covariance matrix of a prescribed from. In particular, we enforce pairwise correlation \(\) between \(k\) components of each variable, with redundant duplicate components as well as independent components constituting the remain \(d-k\) dimensions. \(I(X;Y)\) can then be easily computed analytically from the covariance matrix. The exact sampling procedure we use for these experiments is given in Appendix A.3.1, Algorithm 4.

Results of benchmarking MI estimators using these synthetic datasets are given in Fig. 2. For estimates from \(N=2 10^{3}\) samples, we find that, as expected, the performance of existing estimators degrades with \(d\), with near complete failure for \(d>100\) (Fig. 1(a)-c, 1(f)-h.). In contrast, applying LMI approximation results in stable estimates up to \(d=5 10^{3}\) ambient dimensions (Fig. 1(d), 1(i)). The faithfulness of LMI approximation instead degrades with increasing \(k\). Nonetheless, LMIapproximation gives more absolutely and relatively accurate MI estimates than alternatives for 83% and 87% of tested settings respectively (Fig. 2e, 2j). We also find that these benchmarking results remain qualitatively similar for multivariate Gaussian data after various MI-preserving transformations (Appendix A.3.4), similar to the benchmarking approach of .

#### 3.1.1 Empirically quantifying convergence rates of MI estimators on synthetic data

The principle enabling the scalability of LMI approximation is that the number of samples it requires to converge is limited by \(k\) rather than \(d\) when \(k d\). We empirically demonstrate this by quantifying the convergence rates of MI estimators on the synthetic Gaussian datasets described above. We generate datasets with sample numbers in \(N[10^{2},10^{4}]\), and ambient dimensionalities in \(d\), each with a single correlated dimension between variables (\(k=1\)), and 1 bit MI. For each estimator and each ambient dimensionality \(d\), we empirically determine the number of samples required to achieve \(|I(X,Y)-(X,Y)|<\) bits, with linear interpolation between tested sample numbers.

As expected, methods that do not explicitly learn low-dimensional representations (InfoNCE, MINE, KSG) require increasing numbers of samples to estimate MI with error below \(=0.1\) (Fig. 3a). KSG fails to estimate MI for \(d 13\) for any \(N\), while MINE and InfoNCE scale slightly better, failing for \(d 25\) and \(d 37\) respectively. In contrast, the sample requirements of LMI remain qualitatively stable - no more than \(4 10^{3}\) samples are necessary for an accurate estimate.

While the convergence behavior of LMI is mostly unaffected by varying \(d\), it is sensitive to varying \(k\). When the same experiment is performed with increasing numbers of correlated dimensions at the limit where \(k=d\), the convergence behavior of LMI is no longer favored over other estimators (Fig. 3c). The performance of all estimators dramatically decreases with \(k\), such that a larger error tolerance must be chosen for informative convergence estimates. The dependence of variational bound estimator convergence on \(k\) is, to our knowledge, not explained by existing theory [16; 32]. In the intermediate case of \(k=[0.1 d]\) (Fig. 3b), we find that LMI convergence is fast with low \(k\), but becomes slow as \(k\) grows, nonetheless remaining favorable compared to other estimators.

### Evaluating mutual information estimators on resampled real-world data

While the empirical results on multivariate Gaussians are reassuring, they are not representative of performance on real data, where low intrinsic dimensionality is not known _a priori_, and distributions can be non-Gaussian. To better understand the behavior of LMI in more realistic settings, we introduce a technique for creating benchmark datasets by resampling real-world data. Briefly, we use correspondences between discrete labels and complex data (i.e. digit labels and digit images in MNIST) to transform simple discrete distributions into realistic high-dimensional distributions. A similar approach is explored in a concurrent benchmarking study .

Specifically, we draw samples from a bivariate Bernoulli vector, \(=[L_{x},L_{y}]\{0,1\}^{2}\) with prescribed pairwise correlation \((L_{x},L_{y})=\), where each value corresponds to a discrete label

Figure 2: **MI estimator performance scaling with increasing dimensionality.****a) - d)** Absolute accuracy measured by mean-squared error over 10 estimates per setting, with ground truth MI between 0 and 2 bits, and \(2 10^{3}\) samples per estimate (1:1 training split for neural network-based estimators). **e)** Estimator with highest absolute accuracy in each setting. Ties broken randomly. **f) - i)** Relative accuracy measured by Kendall \(\) rank correlation of estimates with ground truth. **j)** Estimator with highest relative accuracy in each setting. Ties broken randomly.

of a set of samples in a high-dimensional dataset (e.g. \(0\) and \(1\) correspond to images of 0s and 1s in MNIST). For each sample of \(\), we replace each component with a random (without replacement) high-dimensional sample matching the label. For the example of MNIST, this transforms samples from \(\) into pairs of images of 0s and 1s, represented as samples of random vectors \(X,Y^{784}\).

Under the assumption that discrete labels can be uniquely identified by high-dimensional vectors, high-dimensional MI is identical to the discrete label MI. That is, assuming \(H(L_{x}|X)=H(L_{y}|Y)=0\) then \(I(X;Y)=I(L_{x};L_{y})\) (shown in Appendix A.3.2, Theorem 4). And using our knowledge of \(\), \(I(L_{x};L_{y})\) can be analytically computed.

We resample two different source datasets: (1) "binary" subset of MNIST, containing only images of 0s and 1s, with \(5000\) samples and \(784\) dimensions and (2) embeddings of a subset of protein sequences from _E. coli_ and _A. thaliana_ proteins, with \(4402\) samples and \(1024\) dimensions. For both source datasets, we validate the \(I(L_{x};L_{y}) I(X;Y)\) approximation in Appendix A.3.3.

For each source dataset, we generate 200 benchmark datasets with true MI ranging from 0 to 1 bits. We estimate MI on each dataset with each estimator (Fig. 4a, 4b), and quantify absolute accuracy (MSE), relative accuracy (rank correlation with ground truth), and runtime for each estimator (Fig. 4c). For both types of source data, we find that variational bound estimators have high variance, in line with previous observations . On protein embedding datasets, variational estimators nearly always fail to estimate nonzero values - resulting in a rank correlation below 0 for InfoNCE. The KSG estimator, while achieving high relative accuracy, systematically underestimates MI, resulting in low absolute accuracy. Furthermore, the amount by which it underestimates true MI is different between the two datasets - indicating inequitability. In contrast, LMI approximation yields estimates consistently close to the ground truth, with high relative and absolute accuracy.

### Constructing and studying problems where LMI fails

While LMI performs well on a diverse set of benchmarks, it is not infallible. LMI can fail when (1) its representations do not capture dependence structure, or (2) when KSG fails to accurately estimate MI in latent space. Because the limitations of KSG are well-studied , here we focus on failure mode (1) and identify problems where LMI learns representations which result in poor MI estimates.

LMI trivially fails to learn useful representations when the dimensionality of the latent space is too small to capture the dependence structure of the variables (e.g. in Fig. 3c). This limitation can be partially overcome by evaluating LMI with a latent space large enough to capture dependence structure, however _a priori_ knowledge of the appropriate embedding dimension is rarely possible. One heuristic approach (Appendix A.5.2) is to make estimates with several latent space sizes, and choose the size which maximizes the estimate.

LMI accuracy can also degrade when MSE cross-prediction loss fails to constrain latent representations, reducing the LMI model to a pair of independent autoencoders. This can happen when certain symmetries are present in the data, such as variables \(X,Y\) for which \([X|Y]=[X]\) and \(I(X;Y) 0\), two examples of which are shown in Fig. 5a. For such variables, the MSE-minimizing predictor of \(X\) becomes independent of \(Y\), and cross-prediction loss no longer has a useful regularization effect. In these cases, if independent autoencoders are insufficient to capture dependence structure, LMI will fail to accurately estimate MI.

Figure 3: **Number of samples required to achieve \(|I(X,Y)-(X,Y)|<\).****a)** Data with low-rank dependence structure, with \(=0.1\). **b)** Moderate-rank dependence structure, with \(=0.2\). **c)** Full-rank dependence structure, with \(=0.4\). “+” marker indicates that \(N>10^{4}\) samples are required for accurate estimates for all larger \(d\). Ground truth MI is 1 bit in all cases.

We construct a benchmark to illustrate this limitation and understand if other estimators suffer from the same limitation in practice. In brief, we generate samples from variables with a single pair of symmetric dimensions and increasing numbers of independently normally distributed dimensions. The exact sampling procedure is given in Appendix A.3.5. An ideal estimator should not vary with the number of independent dimensions as true MI is invariant. In the case with no independent dimensions, we expect LMI to be accurate up to the limitations of KSG because independent autoencoders are sufficient to learn mutually informative representations. As the number of independent dimensions increases, LMI estimates should quickly degrade.

As anticipated, LMI estimates implemented with an MSE cross-prediction regularization decay quickly (Fig. 5b). However, this behavior is not unique to LMI: all studied estimators decay to near 0 with fewer than 10 dimensions. In this dimensionality, MINE and InfoNCE typically perform well , so their failure is not due merely to the dimensionality of the problem but also due to the nature of the distributions. The estimators do not agree even in the 1D case without independent dimensions, suggesting that symmetric distributions may be generally problematic for MI estimation, similar to long-tailed distributions .

Because this failure of LMI specifically arises from an artifact of the MSE loss, one might conclude avoiding MSE cross-prediction regularization may be sufficient to improve LMI estimation. We explore this possibility in Appendix A.2.4.

## 4 Applications

### Quantifying interaction information in protein language model embeddings

Pretrained protein language models (pLMs) have recently seen widespread use, largely due to their convenient representations of protein sequences (vectors in \(^{N}\), typically with \(N 10^{3}\)) which can be used for transfer learning on downstream tasks [35; 36; 37]. While it is known that pLM sequence embeddings contain significant information about protein structure , it is not clear how well existing pLMs encode functional information. Recent work has shown that pLMs fail to capture

Figure 4: **Performance of MI estimators on resampled real datasets.****a)** Estimates on resampled pairs of MNIST digits, with \(5 10^{3}\) samples and \(784\) dimensions. **b)** Estimates on resampled pairs of ProtTrans5 sequence embeddings, with \(4.4 10^{3}\) samples and \(1024\) dimensions. **c)** Statistics of estimator accuracy and runtime (in seconds), for each dataset type.

Figure 5: **Constructing problems where LMI fails.****a)** Examples of symmetric distributions where \([X|Y]=[X]\). **b)** MI estimates from \(10^{3}\) samples of symmetric variables as exclusive (independent normal) dimensions are added. Ideal estimators are invariant. LMI latent space is 1D per variable.

some important functional properties, such as thermostability . It remains unclear the extent to which pLM embeddings contain information about protein-protein interactions, which are essential to protein function. Here, we use an information-theoretic approach to quantify interaction information contained in 1024-dimensional sequence embeddings from the ProtTrans5 model .

We study two types of protein-protein interactions: kinase-target and ligand-receptor interactions. For both, the OmniPath database  contains lists of thousands of annotated pairs of interacting proteins. We consider each annotated pair to be a sample from a joint "interaction" distribution over pairs of sequence embeddings. For example, for kinase-target interactions, we consider kinase and target sequence embeddings as random variables \(K^{1024}\), \(T^{1024}\), with joint distribution \(P_{KT}(k,t)\). Then, using joint samples \(\{(k_{1},t_{1}),,(k_{N},t_{N})\}\) we estimate mutual information between interaction partners, \(I(K;T)\). We analogously estimate \(I(L;R)\) for ligand-receptor interactions.

If pLM embeddings capture interaction information, MI between interaction partners should be significantly above 0 bits. Applying LMI approximation, we estimate \(I(L;R) 2.8\) bits and \(I(K;T) 0.8\) bits. To test the significance of these values, we estimated MI from shuffled data, and found \(I_{}(K;T) I_{}(L;R) 0\) (both mean and standard deviation \(<0.05\)), across 20 random shuffles. These results indicate that pLM embeddings contain information about both types of interactions, and contain more information about ligand-receptor interactions than kinase-target interactions. In contrast, existing estimators yield far lower estimates, with MINE estimates indicating independence for both types of interactions (Fig. 6a, 6b). To validate the LMI estimates of dependence, we next operationally verify the presence of interaction information.

If protein-protein interactions can be predicted for a set of held-out proteins based on sequence embeddings, then sequence embeddings must contain interaction information. To see if this is the case, we extend LMI to predict protein interactions from sequence embeddings. For ligand-receptor prediction, our goal is to predict whether a held-out pair of sequence embeddings \((l,r)\) is an annotated ligand-receptor pair. One way to do this is estimating the log density ratio \((l,r)}{P_{L}(l) P_{R}(r)}\), and setting a threshold above which sequence pairs are predicted to be annotated interactions.

We make a simple modification to the KSG estimator to yield the desired density ratio estimates (given in Algorithm 2), and use these estimates (with latent approximation) to predict interaction annotations. For 20 different random splits of 170 held out proteins, we use density ratio estimates to classify all \(2.89 10^{4}\) pairs of held out proteins as interacting or non-interacting. The receiver operating characteristic (ROC) curves for predictions of both interaction types are shown in Fig. 6c, 6d, with mean AUC-ROC scores of 0.87 and 0.74 for ligand-receptor and kinase-target interactions respectively. These results demonstrate that protein interactions can be predicted better than random chance using ProtTrans5 embeddings, suggesting that pLM embeddings capture information about kinase-target and ligand-receptor interactions. And in line with the LMI estimates, ligand-receptor interactions are better predicted than kinase-target interactions.

Figure 6: **Quantifying dependence between participants of protein interactions.****a) - b)** MI estimates between interaction partners, compared to randomly permuted data. **c) - d)** ROC curves of density ratio classifier distinguishing annotated interacting pairs from unannotated “negative” samples, for all pairs of \(170\) held-out proteins. Averages over 20 random hold-out splits.

### Identifying cell fate information in hematopoietic stem cells

Single cell RNA sequencing (scRNA-seq) measures the expression of \(g 10^{4}\) genes in single cells, which can be thought of samples of a gene expression state variable \(X^{g}\). These samples can be used to infer a probability distribution over gene expression states, \(P_{X}\). To study the dynamics of gene expression, one approach is to make measurements at multiple timepoints \(t_{1},...t_{N}\), which can be thought of as samples of random variables \(X_{i}^{g}\). Lineage tracing is a technique where clonally related cells can be labelled with barcodes, allowing sampled cells from different timepoints to be matched with their "twins" from another. When combined with scRNA-seq, lineage tracing can be thought to provide samples from the joint distribution \(P_{X_{1},...,X_{N}}\).

One fundamental question about cellular dynamics is whether the time evolution of gene expression state is dependent entirely on the current gene expression state. That is, if the "fate" of a cell can be formally modeled as a Markov chain \(X_{i} X_{i+1}\). In some cases, cell behavior may be a function of hidden variables resulting in non-Markovian dynamics. Using the data processing inequality (DPI) , we know that if gene expression dynamics are Markovian, \(I(X_{i};X_{i+1}) I(X_{i};X_{i+2})\), and if the DPI does not hold, then gene expression states are non-Markovian. This can, in principle, be tested using samples from the joint distribution \(P_{X_{1},...,X_{N}}\). Due to the difficulty of high-dimensional MI estimation, previous work has used heuristic alternatives to indirectly test the Markovian assumption for lineage-traced scRNA-seq (LT-seq) data . Here, we will use LMI to explicitly estimate high-dimensional MI from LT-seq data, and test the Markovian assumption for gene expression states.

We study a previously published LT-seq data set of _in vitro_ differentiating mouse hematopoietic stem cells . The dataset includes sister cells which are separated at day 2 of the experiment and allowed to differentiate in separate wells until day 6, with cell states sampled on both days 2 and 6. Under the Markovian assumption, this can be modeled as \(X_{2} X_{6}\), \(X_{2} X_{6^{}}\), where \(X_{6^{}}\) is the state of the cells on day 6 in the second well. By the DPI we should have \(I(X_{2};X_{6}) I(X_{6};X_{6^{}})\). Using LMI, we estimate that \(I(X_{2};X_{6}) 0.31 0.02\) bits and \(I(X_{6};X_{6^{}}) 0.98 0.01\) bits (mean \(\) SEM), over 20 random pairings of clonally related cells. This indicates that gene expression states are non-Markovian, in line with prior findings [42; 43].

Cell fate information manifests in transcriptomes sometime between days 2 and 6. By decomposing LMI estimates into pointwise contributions (Appendix A.4.3, Algorithm 5), we can determine precisely when this hidden information emerges. Generally, we see that pMI increases along differentiation trajectories (Fig. 7b). Along the neutrophil trajectory, we quantatively compare cell fate information with neutrophil pseudotime computed by graph smoothing , and find that pMI begins to rapidly increase around pseudotime value of \(35 10^{3}\), which is roughly aligned with the transition from granulocyte-myeloid progenitor to promyelocyte, as defined in .

## 5 Discussion

In this paper, we tested the hypothesis that low-dimensional structure can enable scalable estimation of MI from high-dimensional data. We introduced LMI approximation, which applies a nonparametric MI estimator to low-dimensional representations learned by neural networks. We quantified the effectiveness of LMI approximation, using multiple approaches spanning over 3000 benchmark datasets. Our results suggest that, unlike existing techniques, LMI approximation is generally effective for high-dimensional data with low-dimensional structure, even if the number of available samples remains relatively low - a regime where many real datasets reside .

We used LMI to study two open problems in biology. We show one example where LMI enables the use of information-theoretic ideas to study the dynamics of gene expression. In the original study , the authors had indeed wished to estimate MI but were unable to do so and resorted to heuristic approaches. LMI may similarly help identify dependence in cellular dynamics in other systems [43; 45; 46]. In a different subfield of biology, we showed an example of using LMI to quantify functional information learned by pLMs. Our results suggest that nontrivial protein-protein interaction information is learned by ProtTrans5, motivating the development of interaction prediction tools based on pLMs. As the number of large pLMs grows [35; 37; 47; 36], information-theoretic approaches using LMI could help benchmark models.

LimitationsThe most prominent limitation of LMI follows directly from its motivating assumption: it will fail to quantify dependence not captured by the learned representations. As a result, it is easy to design synthetic datasets on which LMI will fail (see Fig. 3c). However, it is likely that many real datasets (beyond those explored in this paper) will be amenable to LMI approximation, as there is strong evidence that complex systems generally have low intrinsic dimensionality . Our implementation of LMI approximation also inherits some limitations of the KSG estimator, notably that it fails for strongly dependent (near deterministically related) variables [32; 34]. To overcome this, it may be possible to apply previously developed corrections . Finally, despite reassuring empirical results, few theoretical properties of LMI have been derived. This is an important line of future work, which could help precisely identify settings where LMI approximation is effective.

Broader impactsMI estimators have been used to quantify moral and legal fairness [25; 48; 49]. LMI approximation is not universally faithful, and more generally no MI estimator can be universally accurate . MI estimates must be interpreted with great care when applied to human lives. The experiments (and pilot iterations) in this paper were performed on a single NVIDIA RTX 3090, and resulted in estimated 45.36 kg CO\({}_{2}\)eq. Estimates made using .

Code availabilityThe code necessary to reproduce all results from this paper are available at https://github.com/ggdna/latent-mutual-information. The lmi Python package can be found at https://github.com/ggdna/latentmi, and its documentation is hosted at https://latentmi.readthedocs.io.

Figure 7: **Quantifying cell fate information in single cell transcriptomes.****a)** 2D SPRING embedding  of lineage-traced single cell RNA-sequencing data from . **b)** Pointwise decomposition of MI between sister cells across timepoints, as estimated using LMI. Hue applied to early timepoint cells, late timepoint and unbarcoded cells in grey. Star indicates neutrophil pseudotime value \(35 10^{3}\). **c)** Smoothed pMI (rolling average over 100 cells) across neutrophil differentiation trajectory. Vertical line denotes neutrophil pseudotime value \(35 10^{3}\).