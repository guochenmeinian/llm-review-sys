# Decision-Focused Learning with Directional Gradients

Vishal Gupta

USC Marshall School of Business

Los Angeles, CA 90029

guptavis@usc.edu

&Michael Huang

CUNY Baruch Zicklin School of Business

New York, NY 10010

michael.huang@baruch.cuny.edu

###### Abstract

We propose a novel family of decision-aware surrogate losses, called Perturbation Gradient (PG) losses, for the predict-then-optimize framework. The key idea is to connect the expected downstream decision loss with the directional derivative of a particular plug-in objective, and then approximate this derivative using zeroth order gradient techniques. Unlike the original decision loss which is typically piecewise constant and discontinuous, our new PG losses is a Lipschitz continuous, difference of concave functions that can be optimized using off-the-shelf gradient-based methods. Most importantly, unlike existing surrogate losses, the approximation error of our PG losses vanishes as the number of samples grows. Hence, optimizing our surrogate loss yields a best-in-class policy asymptotically, even in misspecified settings. This is the first such result in misspecified settings, and we provide numerical evidence confirming our PG losses substantively outperform existing proposals when the underlying model is misspecified.

## 1 Introduction

We study the contextual optimization problem

\[^{*}(X)_{z}f^{*}(X)^{}z,\;\;f^{*}(X) [Y X], \]

where \((X,Y)\) are random variables, and \(^{d}\) is a known, potentially non-convex feasible region. We work in a data-driven setting in which \(f^{*}\) is unknown, but we observe i.i.d. draws \(\{(X_{i},Y_{i}):i=1,,n\}\) of \((X,Y)\). Problem (1) models applications in which we observe a potentially informative context \(X\) before selecting the decision \((X)\) such as vehicle routing, portfolio allocation, and inventory management [7; 5; 32]. Problem (1) has also been used as an "optimization layer" in neural network architectures to model combinatorial decisions . Through a suitable transformation, it can also represent some, but not all, nonlinear problems like personalized pricing (see Appendix A).

The predict-then-optimize framework focuses on _plug-in policies_ for Problem (1). Given a function \(f:\), the corresponding plug-in policy is

\[(f(X))_{z}f(X)^{}z, \]

with ties broken by some pre-specified tie-breaking rule. Plug-in policies are attractive because they separate the prediction procedure (\(f\)) from the optimization procedure (Problem (2)). This decoupling is especially useful when i) decisions \(z\) must satisfy hard constraints (enforced by \(\)), or ii) one has a specialized algorithm for solving instances of Problem (2) (e.g., a custom vehicle-routing solver).

Given the form of \(^{*}\), a natural approach might be to learn an estimate \(\) of \(f^{*}\) from the data, e.g., by minimizing the mean-squared error, and then compute \(((X))\). Such procedures are called _decision-blind_ since they do not leverage Problem (1) when learning \(\).

The seminal paper Elmachtoub and Grigas  argues _decision-aware_ techniques can be superior to decision-blind ones. Given a hypothesis class \(^{}\), they propose solving \(_{f}(f)\) where \((f)[Y^{}(f(X))]-[Y^{}(f^{*}(X))]\). This is equivalent to solving

\[_{f}[(f(X),Y)]\ (t,y)  y^{}(t). \]

Growing empirical evidence supports the strength of decision-aware approaches .

A challenge is that when \(\) is polyhedral or combinatorial, \(t(t,y)\) is a piecewise constant, discontinuous map. Its gradient is either zero or undefined at all points. Hence, one cannot easily apply a first-order method like stochastic gradient descent (SGD) to optimize Problem (3).

In this paper we propose a new family of surrogate losses to approximate \((t,y)\) by connecting \((t,y)\) to the directional derivative of a particular plug-in function and using zeroth order gradients to approximate this derivative. We call this family _perturbation gradient (PG) losses_. PG losses are Lipschitz continuous, general purpose, and only require a black-box oracle which solves Problem (2). Most importantly, their gradients are "informative" (c.f. Lemma 2.2); after replacing \(\) with a PG loss, one can apply a first order method to Problem (3) or its empirical counterpart "out-of-the-box."

Previous authors have also proposed surrogates which satisfy some of these properties (see Section 1.2). What distinguishes our work is that under mild assumptions on the distribution of \((X,Y)\), the error of our surrogate in approximating \((t,y)\) vanishes as \(n\) with a rate that depends on the complexity of \(\). More precisely, we prove that, for general \(\), optimizing the empirical PGB loss (a particular member of the PG family) induces an excess regret over the best-in-class policy of at most \(_{p}(^{n}}+n^{-1/2})\) where \(^{n}\) is the multivariate Rademacher complexity of \(\) (Theorem 3.8). For linear hypotheses with \((X)=p\), this bound reduces to \(_{p}((dp/n)^{1/4})\). When \(\) is polyhedral, optimizing empirical PGB loss induces an excess regret of at most \(_{p}(n^{-1/2}_{}|})\), where \(\) is VC linear subgraph dimension of \(\) and \(_{}\) are the extreme points of \(\) (Theorem 3.8). Both bounds vanish as \(n\), implying that optimizing our PGB loss yields a best-in-class policy asymptotically.

Critically - and this is the most distinctive feature of our work - our results hold even when \(f^{*}\) (misspecified setting). To our knowledge, these are the first result of their kind for a differentiable surrogate. Existing results on the predict-then-optimize framework ) require \(f^{*}\) (the well-specified setting) and somewhat restrictive assumptions on the noise \(Y-f^{*}(X)\) (see Section 1.2). These requirements are not simply a weakness in prior analysis. As seen in Fig. 1, existing methods can have very poor performance under misspecification. The key issue is that the justification for many of these losses tacitly relies on the fact that an optimal \(f\) should be such that \(f(X) Y\) almost surely, but under misspecification, this is generally impossible. Hence, they do not well-approximate the decision loss \(\). See Fig. 2.

This poor performance is especially unfortunate, because misspecified settings are _precisely_ those where decision-aware learning offers the most benefit over decision-blind approaches . This is for at least three reasons: First, because the solution mapping \(()\) is piecewise constant, there may exist \(f f^{*}\) such that \((f(X))=(f^{*}(X))\) almost surely . (Indeed, this appears to occur in Fig. 1.) Hence, one might still achieve (near) zero regret by learning over a low-complexity \(\) in a decision-aware fashion, and, typically low-complexity hypothesis classes \(\) are preferred for tractability, interpretability, and strong generalization properties. Second, when every \(f\) must induce some error, decision-aware learning seeks an \(f()\) such that \((f(X))\) disagrees with \((f^{*}(X))\) on regions of the covariate space \(\) that are not too costly in the decision-problem, while decision-blind methods typically seek an \(f\) such that \(f(X)\) disagrees with \(f^{*}(X)\) on less proba

Figure 1: (Convergence under Misspecification). Excess regret normalized by optimal policyâ€™s performance under the misspecified setting of Section 4.1 (\(=1\), \(m=0\)). PGB is our proposed loss. ETO is a decision-blind approach that minimizes MSE. Other benchmarks include: DBB , FYL , and SPO+ . Under misspecification, only the PG losses have vanishing excess regret. Error bars are \(95\%\) confidence intervals on the mean over 100 trials.

. Finally,  suggest traditional decision-blind learning strictly dominates decision-aware techniques in a well-specified setting (see Section 1.2), i.e, decision-aware learning loses most of its advantages if \(f^{*}\).

To be fair, the improved approximation quality of our PG losses comes at the cost of computational complexity. Many existing surrogates are convex if \(\) is a linear class. We can optimize these surrogates over \(\) in polynomial time. On the other hand, Elmachtoub and Grigas  shows that solving the empirical counterpart of Problem (3) is NP-Hard (reduction from \(0/1\) classification). Thus, these aforementioned surrogates cannot be expected to reliably find best-in-class policies without additional assumptions on the data distribution unless \(=\).

By contrast, our proposed PG losses are non-convex, expressible as the difference of concave functions. Optimizing such functions is well-studied , but is, in the worst-case, NP-Hard. This is to be expected; if we seek a method that finds a best-in-class policy, it must contend with this hardness. Importantly, some NP-Hard problems admit algorithms that find high-quality solutions efficiently for most real-world instances. We argue our loss (combined with simple gradient descent type methods) yields such a problem. Previous authors  have also proposed non-convex surrogates and shown that first-order methods still recover high-quality solutions.

Finally, we offer that convexity is often moot in applications. When using a nonlinear hypothesis class (e.g., a neural network with more than 1 layer), even convex surrogates induce non-convex loss functions. Optimizing these losses is theoretically no easier than optimizing our surrogate.

In summary, our PG losses represent a practically implementable and (the first) theoretically justified approach to decision-aware learning in misspecified setting.

### Contributions

* We propose a new family of surrogate losses called Perturbation Gradient (PG) losses for the predict-then-optimize approach to Problem (1). Our surrogates are Lipschitz continuous and can be expressed as the difference of concave functions.
* We show that the gradient of a PG loss evaluated at a sample point is an unbiased estimate of the gradient of the expected loss (Lemma 2.2). Thus, unlike the decision loss \(\), we can apply first-order methods to minimize our expected surrogate or its ERM counterpart.
* We bound the uniform approximation error of our surrogates with respect to decision loss by a term vanishing in \(n\) (Theorems 3.4 and 3.7). Thus, with more data, our loss becomes more accurate.
* We prove that the empirical minimizer of our PGB loss yields a best-in-class policy asymptotically, even if the underlying hypothesis class is misspecified (Theorem 3.8). To our knowledge, ours is the _first_ surrogate for the predict-then-optimize framework with such a performance guarantee.
* We provide numerical evidence showing that minimizing our surrogate loss performs comparably to other surrogates when the hypothesis class is well-specified, and substantively outperforms them when the hypothesis class is misspecified.

Figure 2: (Comparing Surrogates under Misspecification). See Section 4.1 for setup (\(=1\), \(m=0\)). Benchmarks are decision-loss (DL) \(\), our PGB and PGC losses, Fenchel-Young Loss (FYL) , SPO+ , and the learning-to-rank list loss (. Left-panel: (\(n=200\)) Only our PG losses closely track the DL. Right Panels: As \(n\) increases, the DL and PG losses both become smoother.

### Related Work

Elmachtoub and Grigas  first proposed a convex, differentiable surrogate loss for Problem (3) called the SPO+ loss leveraging a duality argument. Subsequent researchers have proposed other approaches to surrogate creation including replacing the plug-in policy Problem (2) with a regularized counterpart , creating a response-surface , training a neural network to approximate \((t,y)\) non-parametrically , linearizing \(l(t,y)\), and combining randomized-smoothing with conjugate duality . A recent computational study  compares many of these approaches and found that SPO+ and the Fenchel-Young loss of  performed best or near-best on all benchmarks.

Despite the empirical strengths of decision-aware methods, their theoretical justification is less clear. Few methods establish regret bounds. Wilder, Dilkina, and Tambe  and Berthet et al.  prove that gradients of particular surrogates can be evaluated easily, but do not prove a regret guarantee for the minimizer of those surrogates. On the other hand, El Balghiti et al.  and Hu, Kallus, and Mao  prove generalization guarantees relating \([(f(X),Y)]\) to its empirical counterpart; hence, if one finds an \(f\) with small empirical loss, \([l(f(X),Y)]\) will also be small. But minimizing the empirical counterpart to Problem (3) is computationally challenging. Jeong et al.  proposes a symbolic reduction scheme for this task. However, the method only applies to linear \(f\) and does not scale to large \(n\). Most importantly, it is not amenable to first-order methods, so cannot be easily integrated into neural architectures.

The strongest known regret bounds are for the SPO+ loss in the well-specified setting (\(f^{*}\)). When the conditional distribution of \(Y|X\) is centrally symmetric around its mean, Elmachtoub and Grigas  establish a Fisher-consistency result. Liu and Grigas  strengthen this result, establishing (under similar assumptions) that if the multivariate Rademacher complexity of \(\) is \(O(n^{-1/2})\), then the empirical minimizer of the SPO+ loss has regret at most \(O(n^{-1/4})\).

That said, such results are perhaps unsatisfying because decision-blind methods typically dominate decision-aware methods in well-specified settings. Hu, Kallus, and Mao  show that when \(f^{*}\), the regret of a decision-blind approach that minimizes MSE converges to zero faster than the empirical minimizer of Problem (3). Said differently, decision-aware methods likely offer the most benefit in misspecified settings. Hence, these settings are arguably the most interesting.

Most closely related to our work are perturbation-based approaches for estimating out-of-sample performance. These works each use Danskin's theorem to "debias" a naive estimate of out-of-sample performance. Ito, Yabe, and Fujimaki  and Guo, Jordan, and Zhou  each establish asymptotic convergence of their estimators (without an explicit rate): Ito, Yabe, and Fujimaki  treats a non-contextual setting and focuses on the ERM estimator. Guo, Jordan, and Zhou  treats a causal inference setting. By contrast, Gupta, Huang, and Rusmevichientong  establish a finite-sample regret guarantee, but in a small-data, large-scale data regime with nearly-Gaussian corruptions. In this paper, we focus on the traditional large-sample regime (\(n\)) with contexts. Moreover, instead of "debiasing," we perturbations to approximate a directional derivative which exactly represents our out-of-sample loss.

### Notation and Preliminaries

We write \(a b\) to mean that there exists a universal constant \(C\) such that \(a Cb\). We denote the \(_{2}\) norm by \(\|\|\). To simplify the presentation, we also make the following boundedness assumption:

**Assumption 1.1** (Boundedness).: There exists \(B>0\) such that \(_{z}\|z\| B\), and \(\|Y\| 1\), almost surely.

## 2 A New Family of Surrogate Losses

Define the plug-in policy objective:

\[V(t)\;=\;_{z}\;t^{}z\;=\;t^{}(t).\]

Evaluating \(V(t)\) only requires a black-box oracle for Problem (2). Since it is minimum of linear functions, \(V(t)\) is concave.

Our first key observation is that by Danskin's Theorem [2, Prop B.22],

\[V(t+ y)_{=0}\;=\;y^{}(t)\;=\;(t,y), \]

where the left side is a derivative if \((t)\) is unique and a subgradient otherwise. We can form a family of PG surrogates by considering different zeroth order approximations to the derivative on the left (see  for more on zeroth order gradients). We focus on two specific zeroth order gradients:

* Backward Differencing (PGB): \(^{b}_{h}(t,y)(V(t)-V(t-hy))\)
* Central Differencing (PGC): \(^{c}_{h}(t,y)(V(t+hy)-V(t-hy)),\)

for some user-defined \(h>0\). Intuitively, as \(h 0\), both \(^{b}_{h}(t,y)\) and \(^{c}_{h}(t,y)\) should better approximate \((t,y)\). (We formalize the tradeoff in \(h\) below.)

For intuition on the shape of PG losses, consider the special case where \(=[-1,1]\), and \(Y\{-1,1\}\). Then, \((t,y)=-(ty)\), a step function. The PGB and PGC losses are both ramp losses in this case, where the width of the ramp is controlled by \(h\).

Other zeroth order gradient schemes are possible. For example, forward differencing yields the surrogate from , motivated from a different perspective. This alternate perspective sheds light on empirical performance. Indeed, our theoretical analysis suggests \(h\) should be small, tending to zero, while  advocates for large \(h\). Our analysis also shows forward differencing suffers optimistic bias because it overestimates the derivative of a concave function. These features might explain the poor performance of  in  benchmarks. We explore some of these issues in Appendix B, but fully characterizing how the choice of zeroth order gradient affects surrogate quality is an open problem.

### Properties of PG Losses

Using the structure of Problem (1), we prove some key properties of our surrogates.

**Lemma 2.1** (Basic Properties).: _Suppose Assumption 1.1 holds. For any \(t,t^{}^{d}\) and \(y\), the PG losses are_

1. _Lipschitz, i.e.,_ \(|^{b}(t,y)-^{b}(t^{},y)| \|t-t^{}\|,|^{c}(t,y)-^{b}(t^{},y)|\|t-t^{}\|.\)__
2. _Bounded, i.e.,_ \(|^{b}(t,y)| B,\) _and_ \(|^{c}(t,y)| B.\)__
3. _Differentiable_ 1_, i.e.,_ \(_{t}^{b}(t,y)=((t)-(t-hy)),\) _and_ \(_{t}^{c}(t,y)=((t+hy)-(t-hy)).\)__

_Finally, the backward difference upperbounds the true loss, i.e., \((t,y)^{b}(t,y)\)._

A primary advantage of our PG losses over the original loss \(\) is that gradients are "informative." More precisely, because \(\) is discontinuous, \(_{t}[(t,Y)][_{t}( t,Y)]\), and \(_{t}(t,Y_{j})\) is not an unbiased estimate of \(_{t}[(t,Y)]\). Our surrogates do not have this problem.

**Lemma 2.2** (Informative Gradients).: _Suppose Assumption 1.1 holds. For all \(t\) and \(Y\), \(_{t}[^{b}_{h}(t,Y)]=[_{t} ^{b}_{h}(t,Y)]\). Thus, \(_{t}^{b}_{h}(t,Y_{j})\) is an unbiased estimate of \(_{t}[^{b}_{h}(t,Y)]\). The same statements also hold \(^{c}_{h}\)._

Lemma 2.2 ensures that we can apply first order methods out-of-the-box to optimize our PG losses.

## 3 Performance Guarantees

For brevity, we focus on the backward PG loss. Analogous results hold for the central PG loss.

**Key Intuition.** The key challenge is bounding the error between our PGB loss \(^{b}_{h}\) and the decision loss \(\). For intuition, consider the expected error at a fixed \(f\), i.e., \(^{b}_{h}(T,Y)-(T,Y)\), where \(T=f(X)\). Define the auxiliary function \(H()=[V(T+ Y)]\). When \((T+ Y)\) is unique, Lemma E.1 justifies switching the derivative and expectation yielding

\[H^{}()\;=\;[V(T+ Y)] \;=\;[Y^{}(T+ Y)],\]

where the last equality is Danskin's theorem [2, Prop B.22]. Thus, \(^{b}(T,Y)-(T,Y)=(H(0)-H(-h))- H^{}(0)\), i.e., the expected approximation error equals the error in estimating the derivative of \(H\).

If \(H\) is not sufficiently well-behaved, this error may not be small. Lemma E.2 proves that if \(H\) is \(\)-smooth, i.e., \(H^{}()\) is \(\)-Lipschitz, then this error is at most \( h\). Since \(H\) entails expectation, we intuit that it should be smooth if \((T,Y)\) has a "nice" density, similar to the intuition behind randomized smoothing.

To quantify what "nice" might mean, write

\[H^{}()-H^{}()\;=\; [Y^{}(T+ Y)]-[Y^{ }(T+Y)]\,.\]

Since \((t,y) Y^{}(T+ Y)\) is \(B\)-bounded by Lemma 2.1, the last difference is at most \(B TV((Y,T+ Y),(Y,T+))\), where \(TV(,)\) is the total variation distance between the two random vectors. Hence, a "nice" density is any density such that distributions of \((Y,T+ Y)\) and \((Y,T+Y)\) are close whenever \(\) and \(\) are close. We expect this generally occurs whenever \((T,Y)\) admit Lipschitz continuous densities, but can be shown to fail if, e.g., \(T\) is concentrated at a single point.

We make the above intuition formal in the next section.

### Expected Approximation Error

We make the following assumption:

**Assumption 3.1** (Lipschitz Log Conditional Density).: Let \(g(\;;f,Y)\) be the conditional density of \(f(X) Y\). We assume that there exists a constant \(L>0\) such that \( g(\;;f,Y)\) is \(L\)-Lipschitz for all \(f\) and all \(Y\) almost surely.

As discussed above, Assumption 3.1 is sufficient to ensure the requisite TV distance is small, but not necessary. We prefer Assumption 3.1 as it facilitates a short proof. Under this assumption, we have:

**Lemma 3.2** (Expected Approximation Error).: _Suppose Assumptions 1.1 and 3.1 hold and \(h<\). Then, for any \(f\), \(0\;\;[^{b}_{h}(f(X),Y)-(f(X),Y)]\;\;(e-1)B  L h\)._

### Uniform Error Bounds

Combining Lemma 3.2 and Hoeffding's inequality, yields a pointwise bound:

**Corollary 3.3** (Pointwise Approximation Error).: _Fix some \(f\). Suppose Assumptions 1.1 and 3.1 hold and \(h<\). Then, for any \(0<<\), with probability at least \(1-\),_

\[_{j=1}^{n}^{b}_{h}(f(X_{j}),Y_{j})- [(f(X),Y)]\;\;BLh+B.\]

As seen in Lemma 2.1, the Lipschitz constant of \(^{b}_{h}\) scales like \(1/h\). Hence, unlike other learning methods, \(h\) does _not_ control a bias-variance tradeoff; rather \(h\) controls a bias-computational complexity tradeoff. Practically, we suggest taking \(h\) as large as the next largest term in the bound, i.e. \(h=O(n^{-1/2})\) above, to maximize the smoothness without compromising the rate.

Corollary 3.3 captures the key ideas of our approach, but is insufficient to establish a regret guarantee; we need a uniform error bound. To that end, we prove two results:

Our first generalization bound applies to any choice of \(\). We leverage the Lipschitzness of \(^{b}_{h}\) (Lemma 2.1a) to apply a vector contraction inequality from Maurer  and bound the Rademacher complexity of our sample surrogate loss. A similar strategy is used in .

More specifically, define the multivariate Rademacher complexity

\[^{n}()\;=\;\,}^{n}()\;=\;_{f }_{i=1}^{n}_{i}^{}f(X_{i}), \]

where \(_{i}=(_{i1},,_{id})\) and \(_{ij}\) are i.i.d. Rademacher random variables. Then, we have 

**Theorem 3.4** (Uniform Error Bound for General \(\)).: _Suppose Assumptions 1.1 and 3.1 hold. For any \(0<<\) and \(0<h<\), with probability at least \(1-\)_

\[_{f}_{i=1}^{n}_{h}^{b} (f(X_{i}),Y_{i})-[(f(X),Y)] \ \ BLh+}{h}^{n}()+B.\]

If \((X)=p\) and \(\) is a linear class, \(^{n}()=()\). Choosing \(h=O((dp/n)^{1/4})\) yields an error of size \(_{p}((dp/n)^{1/4})\). This is same rate as Liu and Grigas , but also holds in the misspecified setting where \(f^{*}\).

Theorem 3.4 applies to general \(\), but may be loose. We next present a stronger result when \(\) is polyhedral by leveraging results from Hu, Kallus, and Mao  based on VC dimension:

**Definition 3.5** (VC-Linear-Subgraph Dimension).: The VC-linear-subgraph dimension of a class of functions \(^{}\), is the VC dimension of the sets \(^{}=\{\{(x,,t):^{}f(x) t \}:f\}\) in \(^{d+1}\), that is, the largest integer \(\) for which there exist \(x_{1},,x_{}\), \(_{1},,_{}^{d}\), \(t_{1}\), \(\), \(t_{}\) such that \(|\{(\{_{j}^{}f(x_{j}) t _{j}\}:j=1,,):f\}|=2^{}\).

We make the following assumption:

**Assumption 3.6** (Bounded VC Dimension).: The VC-linear-subgraph dimension of the class \(}=\{:(x,y)=f(x)+hy,f,h \}\) is at most \(\).

We obtain the following bound for polyhedral \(\), where \(_{}\) is the set of extreme points of \(\).

**Theorem 3.7** (Uniform Error Bound for Polyhedral \(\)).: _Suppose Assumptions 1.1, 3.1 and 3.6 hold. For any \(0<<\) and \(0<h<\), with probability at least \(1-\),_

\[_{f}_{i=1}^{n}_{h}^{b} (f(X_{i}),Y_{i})-[(f(X_{i}),Y_{i}) ]\ \ BLh\ +\ B_{}|+1) (1/)}{n}}.\]

Choosing \(h=O(n^{-1/2})\) yields a bound of size \(O_{p}(n^{-1/2})\) which matches the generalization error of \(\) from [14; 6]. Thus, for polyhedral \(\), our surrogate converges no slower than the empirical loss, but is more computationally tractable.

### Excess Regret Bounds

We next transform the uniform bounds of the previous section to bounds on excess regret. Define

\[(f)[Y^{}(f(X))]-[Y^{}(f^{OR}(X))],\ \ f^{OR}_{f}(f).\]

Excess regret measures regret relative to the best-in-class policy \(f^{OR}\), not the full-information optimum \(f^{*}\). For a fixed \(h<\), define the empirical minimizer of PGB loss \(_{h}_{f}_{i=1}^{n} _{h}^{b}(f(X_{i}),Y_{i}).\) Then, we have the following:

**Theorem 3.8** (Excess Regret Bounds).:
1. _Suppose the assumptions of Theorem_ 3.4 _hold. Then,_ \((_{h})\ \ L^{n}()}+}\)_._
2. _Suppose the assumptions from Theorem_ 3.7 _hold. Then,_ \((_{h})\ \ B_{}|+1)}{n}}.\)__

For many hypothesis classes, the multivariate Rademacher complexity is vanishing in \(n\). Hence, both bounds are vanishing in \(n\) and \(_{h}\) achieves best-in-class performance asymptotically.

## 4 Numerical Experiments

We compare learning a linear hypothesis class with our PG losses (PGB and PGC) to surrogates currently implemented in the PyEPO Python package . Specifically, we benchmark against: SPO+ , DBB , FYL , and the family of LTR losses . Additionally, we also benchmark against a"decision-blind" two stage policy that first minimizes the least-squares loss and then implementsthe corresponding plug-in policy (ETO). We optimize each surrogate using ADAM via the PyEPO framework. All methods are trained for a total of \(100\) epochs, and we select the best model found in those \(100\) epochs based on validation set of size \(200\). For PG losses, we initialized at the SPO+ solution and choose \(h\) from a small grid of values based on validation set performance. Future computational experiments might explore the effect of alternate initializations. We do not add additional regularization or smoothing to any of the surrogates. See Appendix C for other implementation details.

Our metric of interest is the normalized excess regret (\([Y^{}(^{*}(X)-(X))]/[Y^{}^{*}(X)]\)), where we have normalized by the optimum policy (c.f. Problem (1)) for interpretability.

### Simple Misspecification Experiment

In our first experiment, we let \(\{0,1\}\). We let \(X(0,2)\) and

\[f^{*}(x)=-4x+2,&x[0,0.55)\\ m(x-0.55)-0.2,&x[0.55,2]\]

The function is piecewise linear with one piece that has a slope of \(-4\) and another piece with a slope of \(m[0,-4]\) (an elbow). The change point is at \(x=0.55\) where the two functions meet at \(-0.2\) (see Fig. 7 in Appendix D). Intuitively, \(m\) controls the degree of misspecification; at \(m=-4\), \(f^{*}\) and the problem is well-specified. At \(m=0\), the problem is maximally misspecified.

We generate synthetic data as \(Y=f^{*}(X)+_{}\). We define \(_{}=(-0.5)+\,\) where \(\), \(\) is an exponential random variable with mean \(0.5\), and \((0,0.25)\). By construction \(\) is mean-zero noise with variance \(0.25\). The value of \( 0\), \(\) controls how asymmetric the noise is. Note, when \( 0\), the theoretical performance guarantees on SPO+ from  do not apply.

**Results.** Figure 1 plots the relative regret for \(m=0\) and \(=1\), that is, the most misspecified setting with the most asymmetric noise \(\). Beyond highlighting the superior performance of the PG losses in misspecified settings, Fig. 1 also shows the choice of finite difference approximation (backward or central) also impacts performance. Intuitively, central differencing likely outperforms backward differencing because in standard, deterministic settings, central finite differencing has error \(O(h^{2})\) relative to the true derivative, while backward differencing has error \(O(h)\). This intuition can be made formal in our setting by adapting Lemma 3.2, but we omit the details for brevity.

The left panel of Fig. 3 in Appendix D studies the effect of increasing degrees of misspecification. We limit the benchmarks to ETO and SPO+ as other methods are qualitatively similar. We find that (as argued in the introduction), in well-specified settings (\(m=-4\)), the benefits of decision-aware learning may be small. All methods (including decision-blind ETO) achieve low regret, even for small \(n\). In our experiments, even for \(n=20\) the relative regret was less than \(0.6\%\) across all methods.

Figure 3: (SPO+ Comparisons) The left figure plots the excess regret normalized by the optimal policyâ€™s performance as we vary \(m\) for \(n=80\) and \(=1\). The right figure plots the same value as we vary \(\) for \(n=200\). When \(=0\) the noise is centrally symmetric and when \(=1\) the noise is the most asymmetric. Error bars are \(95\%\) confidence intervals on the mean over 100 trials.

On the other hand, as the degree of misspecification grows, decision-aware methods have an advantage. However, we see that SPO+ is nearly as susceptible as to misspecification as decision-blind approaches since the relative regret also increases rapidly. By contrast, the relative regret for our PG losses increases more slowly. We stress, this experiment fixes \(n\). As \(n\), our theory shows the regret of the PG losses tends to best-in-class as in Fig. 1.

The right panel of Fig. 3 studies how the noise distribution impacts the relative regret since all prior known performance guarantees for SPO+ require strong assumptions on the noise [7; 19]. The plot suggests that requiring a symmetric noise is not simply a weakness in the analysis of SPO+, but fundamental to the method. As the noise becomes less symmetric, the performance of SPO+ degrades. Even when the assumption is satisfied (\(=0\)), we see SPO+ is still significantly impacted by misspecification. By contrast, the PG losses perform similarly as the shape of the noise varies.

### Shortest Path Experiments

**Random Arc Costs.** We first replicate the shortest path experiment from [7; 31] on a \(5 5\) grid graph. We let \(X(0,_{5})\) and for each edge \(j\), and take

\[f_{j}^{*}(x)=}[(}(B^{*}x)_{j}+3 )^{6}+1]\]

where \(B^{*}\{0,1\}^{40 5}\) has i.i.d. Bernoulli\((0.5)\) entries (drawn once and fixed throughout). We consider two different data generation mechanisms: i) Multiplicative noise, i.e., \(Y_{j}=f_{j}^{*}(X)(1+_{j})\) where \(_{j}\) are i.i.d \([-.3,.3]\). This choice closely mirrors the original experiment of . ii) Additive Gaussian noise, i.e., \(Y_{j}=f_{j}^{*}(X)+_{j}\) where \(_{j}(0,0.3^{2})\).

Figure 8 in the Appendix D compares the PG losses to the best two surrogates in our experiments, FYL  and SPO+ . Here PGF represents a zeroth order gradient using forward differencing and is equivalent to the method of  but with a small \(h\) as opposed to a large \(h\). Despite the non-convexity, minimizing our PG losses with first order methods yields comparable performance to FYL and SPO+ (convex methods). In other words, they do not seem to get stuck in local minimima. For small \(n\), we do seem some distinction, which is likely because our losses are less smooth (see the right figure of Fig. 2).

**Harder Example with Planted Arcs.** Because arc costs are completely at random in the previous example, there are likely many paths with near-optimal length. We next consider a harder instance where we hide a unique good path.

Specifically, we now take \(X^{6}\) where \(X_{1:5}(0,_{5})\) and \(X_{6}\). In Fig. 3(a), we have a safe (red) path and a risky (blue) path. For red arcs, \(f_{j}^{*}(x)=2\) for all \(x\). For the blue arcs (risky

Figure 4: Harder Shortest Path. a) One of the two planted paths will be optimal depending on value of \(X_{6}\). All other arcs strictly worse. b) Normalized Excess Regret as we vary the training samples. Error bars are 95% confidence intervals on the mean over \(100\) trials.

path), \(f^{*}_{j}(x)=4x_{6}\) if \(0 x_{6} 0.55\) and \(f^{*}_{j}(x_{6})=2.2\) otherwise. For all other arcs, we take

\[f^{*}_{j}(x)=}[(}(B^{*}x)_{j}+3 )^{6}+1]+2.2,\]

which is similar to previous experiment but shifted up by \(2.2\). Consequently, either the red path or the blue path is optimal, depending on the value of \(X_{6}\). The observed \(Y\) values are generated as before by adding either multiplicative uniform or additive Gaussian noise. A good method thus must first identify these two paths as the best options (despite the noise) and choose between them (by learning the relationship to \(X_{6}\)). In this harder setting, PG losses offer a significant benefit. Figure 9 in Appendix D shows this performance is relatively robust to the choice of \(h\).

### Portfolio Experiment

We study the same portfolio optimization problem as [7; 28; 34] but use real data, specifically the 12 Fama French Industry Sector Portfolios from the Fama French Library . These portfolios are indices representing monthly returns of different asset classes and realistically mirror the asset allocation problem faced by wealth managers. We sample a month \(t\) at random from the last 10 years, and let \(Y=r_{t}\) be the return of the \(d=12\) indices, and let \(X=r_{t-1}+(0,0.5)\) (\(p=12\)) where \(\) is the covariance of \(r_{t}\) over those \(10\) years. The additional noise lowers the signal-to-noise ratio while maintaining the correlation matrix of \(X\) and makes the problem harder.

As one can see in Fig. 5, because of the low signal-to-noise ratio, all methods induce significant regret to the optimum, but both PGB and PGC are notably stronger.

## 5 Conclusion

In this paper we proposed a novel family of surrogate losses for the predict-then-optimize framework that can be optimized using off-the-shelf gradient methods. Most importantly, the approximation error of these surrogates vanishes as \(n\). Hence, optimizing our surrogate yields a best-in-class policy asymptotically, even in misspecified settings. Our PG losses are the first proposed surrogates with this property and substantively outperform other methods in misspecified settings.

The family of PG losses arises from different approaches to approximating a derivative. As mentioned, an interesting open question is identifying the best-possible choice of approximation. We also believe that better understanding the role of \(h\) in trading off between bias and computational complexity might shed light on improve algorithms and tuning procedures.

Figure 5: (Portfolio Optimization) We plot the excess regret normalized by optimal policyâ€™s performance as we vary the number of training samples. Error bars are \(95\%\) confidence intervals on the mean over 100 trials.