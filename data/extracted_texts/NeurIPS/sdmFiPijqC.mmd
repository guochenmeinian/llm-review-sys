# Extracting Nonlinear Symmetries

From Trained Neural Networks on Dynamics Data

Yoh-ichi Mototake

Graduate School of Social Data Science

Hitotsubashi University

Tokyo, 186-8601

y.mototake@r.hit-u.ac.jp

https://mototakelab.github.io/mototake.github.io

###### Abstract

To support scientists who are developing the reduced model of complex physics systems, we propose a method for extracting interpretable physics information from a deep neural network (DNN) trained on time series data of a physics system. Specifically, we propose a framework for estimating the hidden nonlinear symmetries of a system from a DNN trained on time series data that can be regarded as a finite-degree-of-freedom classical Hamiltonian dynamical system. Our proposed framework can estimate the nonlinear symmetries corresponding to the Laplace-Lunge-Renz vector, a conservation value that keeps the long-axis direction of the elliptical motion of a planet constant, and visualize its Lie manifold.

## 1 Introduction

One of the central roles in scientific activities is understanding large-scale complex systems through their reduced models. Some complex systems are modeled as low-dimensional canonical dynamical systems. For instance, reduced models have been developed for large-scale collective motion systems, which are a type of large-scale complex system with order, such as plasma, acoustic waves, or vortex systems . To develop these reduced models, collective coordinates have been introduced, such as the Fourier basis of a density or charge distribution , or a vortex feature space . Then, a Hamiltonian that describes the coarse-grained properties of a dynamical system is derived. Thus, to develop a reduced model, it is necessary to introduce collective coordinates and derive the Hamiltonian in those coordinates. The obtained Hamiltonian is then verified by confirming that it can reconstruct the properties of the phenomena analyzed. This approach relies heavily on the physical insights of physicists and may not work for modeling a dynamical system that features a more complicated structure. One example is the collective motion of living things such as fish or birds; such systems frequently have stable but very complicated patterns in a metastable state .

The problem we are considering here is how to infer a reduced model using machine learning methods. As mentioned earlier, this involves solving two problems: estimating a coordinate system and constructing a reduced model within that coordinate system. One way to solve these problems is to construct a Hamiltonian based on a given coordinate system and search for a coordinate system that improves the model. Several machine learning methods have been developed for inferring the Hamiltonian from a time-series dataset . These methods can be roughly divided into two types. In the first type, the Hamiltonian is inferred by regressing the data with an explicit function, such as the linear sum of multiple basis functions . However, when inferring a reduced model that consists of complicated unknown basis functions, this method only infers an approximated reduced model using an approximated function, such as a polynomial function. In the second type, a Hamiltonian is modeled using deep learning techniques . In this case, an explicit functionused in the first type is not required. Based on these machine learning methods, the search for the coordinate system could be performed using statistical criteria such as the prediction error.

There are inherent difficulties in building a reduced model using a machine learning approach. Such an approach finds a Hamiltonian that has properties that only hold for the given data. Historically, physicists have achieved great success in constructing reduced models by abstracting knowledge obtained from observational data and building universal models that can explain various physical phenomena, not just the given data. For example, in thermodynamics, Gibbs linked a reduced model that describes the molecular motion of a gas to chemical reaction theory . This is one of the most successful uses of a reduced model. In other words, a good reduced model and a good coordinate system mean that the performance is high not only for the given data.

To achieve a successful reduced model, it is important to interpret the knowledge obtained during data analysis and develop a model that can be applied to different phenomena by combining explicit and implicit knowledge of physics. In general, an inferred Hamiltonian modeled by deep neural networks (DNNs) is difficult to interpret because DNNs are models with enormous degrees of freedom. If all physical knowledge could be quantified, it would be possible to construct a reduced model with a DNN, but this is currently an impractical assumption. Therefore, it is difficult for a machine learning approach to achieve the same function as a physicist, who can flexibly interpret phenomena by utilizing explicit or implicit physical knowledge and construct a reduced model.

To overcome this problem, it is usefull to employ methods to extract symmetries of the dynamics system directly from physical data without constructing a reduced model . These methods are derived from Noether's theorem , which connects the symmetry of the Hamiltonian and the conservation law. For example, as the study most relevant to this study, Liu et al. have been proposed using deep neuralnetworks and symbolic regression , and they have achieved quantitative estimation of complex conservation laws as interpretable form of functions. To infer the conservation laws, it is only needed the tangent space of the manifold of the continuous transformation group that corresponds to the symmetry of the system. Therefore, unlike Hamiltonian estimation, conservation law estimation only requires manifold modeling with at most first-order accuracy. This means that the conservation law can be inferred with arbitrary precision by polynomial approximation. A coordinate system can then be selected based on the system's symmetries on the coordinate system. Furthermore, the obtained symmetries information can also help physicists construct a reduced model.

The purpose of this study is to verify whether nonlinear symmetry can be estimated by the method of Mototake et al . They develop a method for inferring the symmetry of a data manifold modeled by a deep autoencoder  and determine the conservation laws of the system. This method allows direct visualization of the symmetries captured by the Auto Encoder through sampling. Although the method of Liu et al.  can also estimate the conservation laws as interpretable forms of functions corresponding to nonlinear symmetries, the visualization of symmetries should allow the scientists to work their insight from other viewpoints. Such a property of the method is expected to be useful for extracting complex conservation laws corresponding to nonlinear symmetries in an interpretable form to scientists. The method is also capable, in principle, of estimating complex symmetries, such as invariance of the system to non-linear transformations, but no such symmetry estimation was actually carried out in the study . The purpose of this study is to verify whether the method can estimate the symmetries corresponding to non-linear transformations and to propose modifications to the estimation framework needed to do it. Specifically, we attempt to estimate non-linear transformations corresponding to the conservation law of Runge-Lenz vector present in central force systems obeying the inverse square law.

This paper is organized as follows. In Sec. 2, we show the relationship between the symmetry of the time-series dataset distribution and the conservation law using Noether's theorem according to Mototake's paper . In Sec. 3, we describe the proposed procedure of inferring the non-linear symmetry of the time-series data manifold based on the employed methods . In Sec. 4, to confirm the effectiveness of the proposed methods, we apply them to the system conserving the Runge-Lenz vector in a central force system. In Sec. 5, we present a summary and discussion.

Theory

### Noether's theorem

Noether's theorem establishes a deep connection between the continuous symmetries of a Hamiltonian system and the conservation laws that govern it . It is often described in the \((2d+1)\)-dimensional extended phase space \(\), \((,):=(q_{0}=t,q_{1},,q_{d},p_{1},,p_{d})\). The Noether's theorem can also be described in the \((2d+2)\)-dimensional space \(\), \((q_{0}=t,q_{1},,q_{d},p_{0}=-H,p_{1},,p_{d})\). In this study, we describe the Noether's theory in the \((2d+2)\)-dimensional space as follows. Hamiltonian systems in the \((2d+2)\)-dimensional space \(\) are considered, and restrict ourselves to the case where the system's Hamiltonian belongs to a \(C^{2}\) class function \(H(,)\). The Hamiltonian representation of Noether's theorem is described as follows . Assume that \(H(,)\) and the canonical equations of motion \(,)}{ q_{i}}=-_{i}\) and \(,)}{ p_{i}}=_{i}\) are invariant under the infinitesimal transformation \((q_{i}^{},p_{i}^{})=(q_{i}+ q_{ij},p_{i}+ p_{ij})\), where \(i=1,,d\), and \(j\) is the index of the direction of the infinitesimal transformation corresponding to a conservation law. Then, on the basis of Noether's theorem, the conserved value \(G_{j}\) satisfies the following equation: \(( q_{ij}, p_{ij})=(}{ p_{i}},- }{ q_{j}})\). The canonical transformation that makes the Hamiltonian system invariant is given as

\[_{}():\;   ,\] (1) \[(,)  (,}):=((,,), }(,,)),\] (2)

where \((,,)\) and \(}(,,)\) represent the invariant transformation functions of coordinate \((,)\) to \((,})\), and \(\) represents a \(d_{0}\)-dimensional continuous parameter characterizing transformation that satisfies \((,,=)=\), and \(}(,,=)=\). In this paper, this transformation is called an invariant transformation. A set of the invariant transformations characterized by the continuous parameters \(\) forms a Lie group. By the first-order Taylor expansion of \(_{i}(,,)\) and \(}_{i}(,,)\) around \(=\), we have the infinitesimal transformation, \(( q_{ij}, p_{ij})=(.(,,)}{_{j}}|_{=}, ._{i}(,,)}{ _{j}}|_{=})\), where \(|| 1\).

### Noether's theorem and time-series dataset

In previous study, we found that the candidate transformations that make the Hamiltonian and canonical equations invariant are obtained as the transformations that make the subspace

\[S_{i}:=\{_{t+ t},_{t+ t},_{t},_{t} .|\;H(_{t},_{t})=E_{i},_{t+ t}=_{t}- _{t},_{t})}{_{t}},_{t+  t}=_{t}+_{t},_{t})}{_ {t}}\}\] (3)

invariant. We also found tah \(S_{i}\) is understood as a differentiable manifold. Interpolation of differentiable manifolds can be realized by machine learning methods such as deep learning [25; 23; 26; 27; 28; 29]. In the framework, \(S_{i}\) is estimated from a finite number of data \(D\) using a deep learning technique.

### DNN and data manifold

As mentioned in Sec. 2.2, the subspace \(S_{i}\) could be modeled as a differentiable manifold using a DNN model. In this paper, we refer to such a differentiable manifold as a data manifold.

We explain how a DNN models a \(d_{}\)-dimensional manifold in \(d_{}\)-dimensional space \(\) using one of the simplest DNNs: a feed forward three-layer DNN, for which the input has \(d_{}\) dimensions, the hidden layer has \(d_{}(>d_{})\) dimensions, and the output has \(d_{}(<d_{})=d_{m}\) dimensions. The mapping function \(_{}()=[f_{1}(),f_{2}(),,f_{d_{}}()]\) of the DNN is defined as \(f_{}()=^{}=^{}( ^{})\), where \(=(h_{1},h_{2},,h_{d_{}})\) is the \(d_{}\)-dimensional output of the hidden layer. We define \(()\) as \((^{})=(_{1},_{2},, _{d_{}}),_{j}=[_{i}^{d_{}}( ^{}_{ij}x_{i})]\), where \(\) is the activation function. Usually, a sigmoid or ReLU function is used as the activation function. These activation functions are constructed using linear and flat domains. On the basis of these properties of activation functions, \(_{j}\) maps the input subspace related to the linear domain of the activation function to a one-dimensional space to align the vector \((w_{0j},w_{1j},w_{d_{}})\). If the number of \(_{j}\) sharing the same input subspace is \(d_{}\), the \(_{j}\) defines a \(d_{}\)-dimensional sub-hyperplane. The DNN models the data distribution by continuously pasting these sub-hyperplanes as if they were the tangent spaces of a data manifold.

That is, the DNN embeds the input space in the output space by pasting the sub-hyperplanes and compresses the tangent direction of these sub-hyperplanes (Fig. 1). Deeper and more complex DNNs can be understood as a collection of such three-layer DNN. Thus, such deeper DNNs can model more complex manifold structures as a combination of simple manifold structures modeled by a three-layer DNN . Note that the output of a three-layer DNN, a part of the deeper DNN, is referred to as a hidden layer. This is only one example of how a DNN models a data manifold. However, many studies have suggested that there are resemble property in successful trained DNNs [25; 23; 26; 27; 28; 29]. By replacing the input space from \(\) to \(\), we can also model a time-series data manifold \(S_{i}\) using DNN.

In the employed method , using a trained DNN that models a time-series data manifold \(S_{i}\), we propose a method of extracting information about the symmetry of a dynamical system. The framework does not require special DNNs, so we can directly utilize the vast knowledge obtained from studies on physical data analysis using DNNs.

## 3 Method

In this section, we describe the employed framework for estimating the symmetry of a time-series dataset of dynamics.

### Estimating method of nonlinear symmetry

On the basis of the theory of the relationship between the symmetry of the time-series dataset distribution and the conservation law (Sec. 2.2), we prviously proposed a method of inferring the symmetry of data manifold using the Monte Carlo sampling method. In this study, we extended the methods to extract the symmetry for non-linear transformations. In this section, the symmetry estimation framework is described, together with the extensions for nonlinear-symmetry estimation.

It can be inferred from the discussion in Sec. 2 that data points that are not on the manifold in the input space are attracted to the manifold (Fig. 1). Once the data points are attracted to the manifold in the hidden layer, they continue to exist on the manifold in the output \(()\). We propose a method based on this property of DNNs for extracting the symmetry of the data manifold using a deep autoencoder . The deep autoencoder is a model that compresses the input space to a low-dimensional hidden layer and decompresses the layer to an output space with the same dimension as the input space. In the decompression process, only the subspace of the input space around the data manifold is recovered

Figure 1: Schematic diagram of method of extracting invariant transformation using autoencoder. Lower panel shows the schematic diagram of the mapping structure of a two-dimensional input space in a DNN trained with data distributed on a black curve. The arrows indicate the compression direction of the input space in the mapping from the input to the hidden layer.

[MISSING_PAGE_FAIL:5]

The set of invariant transformations \(M_{}\) forms a Lie group, as we mentioned in Sec. 2.1. Therefore, \(M_{}\) constructs a \(d_{}\)-dimensional differential manifold in the coordinate space of \(\). The infinitesimal transformation is estimated as the tangent vector of the manifold at \(=\) as follows:

\[(_{l},_{l})=( .(,;(_{l}))}{_{ l}}|_{=0},\,(,;(_{l}))}{ _{l}}|_{=0}).\] (9)

Because \(\) is a differentiable function of \(\), the tangent vector is given as

\[(_{l},_{l})=( ._{k=1}^{d_{}}(,;)}{  a_{k}}()}{_{l}}| _{=},\,_{k=1}^{d_{}}(, ;)}{ a_{k}}()}{_{ l}}|_{=}).\] (10)

Because functions \(\) and \(\) are defined explicitly, their derivations, \(.(,;)}{ a_{k}}.\) and \(.(,;)}{ a_{k}}.\), can be obtained analytically. Therefore, we should only estimate \(.()}{_{l}}|_{= }\) to obtain the infinitesimal transformation.

Because \(()\) is defined as a differentiable function, set \(\{|^{d_{}}\}\) constructs a \(d_{}\)-dimensional manifold structure in coordinate space \(\). The implicit function representation of the manifold is defined as

\[\{f_{1}(a_{1},,a_{d_{}})=0\\ \\ f_{d_{}-d_{}}(a_{1},,a_{d_{}})=0..\] (11)

The Jacobian matrix of \(f_{k}\) for the parameters of subset \(\), \((b_{1},b_{2},,b_{d_{}})\), is defined as \(J_{kl}=(a_{1},,a_{d_{}})}{ b_{1}}\). If the Jacobian matrix at \(_{}\) becomes nonsingular, from the implicit function theorem, variables other than \((b_{1},b_{2},,b_{d_{}})\), \(\{c_{k}\}_{k=1}^{d_{}-d_{}}:=A^{}\{b_{l}\}_{l=1}^ {d_{}}\), can be expressed as \(c_{k}=g_{i}(b_{1},,b_{d_{}})\). This means that \(\) can be replaced by \(\). In this case, \(.()}{_{l}}|_{= }\) is estimated as the tangent vector \(.()}{ b_{l}}|_{=_{l }}\) at identity map \(_{}\{|(,;)=,( ,;)=\}.\) This implies that, around \(e_{}\), the implicit equations in Eq. (11) representing the manifold \(M_{}\) can be decomposed into the following \(d^{}-d_{}\) simultaneous equations:

\[\{h_{1}(c_{1},b_{1},,b_{d_{}})=0\\ \\ h_{d^{}-d_{}}(c_{d^{}-d_{}},b_{1},,b_{d_{ }})=0.,\] (12)

where \(b_{l}\) corresponds to the continuous parameter \(_{l}\) of continuous transformation \([(,,),(,,)]\). Differentiating these equations with respect to \(b_{l}\) around a point \(e_{}\) yields \(d^{}-d_{}\) simultaneous partial differential equations,

\[\{}h_{1}(c_{1},b_{1}, ,b_{d_{}})|_{A^{}=e_{}}=0\\ \\ }h_{d^{}-d_{}}(c_{d^{}-d_{ }},b_{1},,b_{d_{}})|_{A^{}=e_{}}=0..\] (13)

Solving these simultaneous partial differential equations gives the tangent vector \(.(b_{l})}{ b_{l}}|_{=_{ {id}}}\) of the manifold at \(_{}\). Thus, if \(h_{k}\) can be regressed with the sampling result \(D_{a}\) as the polynomial of \(\{b_{l}\}_{l=1}^{d_{}}\), the conservation law can be inferred. Thus, we can estimate the infinitesimal transformation \((_{l},_{l})\) from the sampling result \(D_{a}\). Thus, in principle, the previously proposed method can be applied to general coordinate transformations including nonlinear transformation. But, to estimate interpretable conservation laws, we would need to model nonlinear transformations of appropriate complexity as parametric functions. This is as difficult as setting up a reduced coordinate system.

### Runge Lenz vector and nonlinear transformation

From the discussion in the Sec. 3.1 and 3.2, in order to search for the non-linear symmetries required for conservation law estimation, it is necessary to set up a parametric function that can represent the non-linear transformation to be estimated. On the other hand, it is generally difficult to pre-set such parametric functions. This difficulty could be overcome by finding a class of parametric functions to explore that can be used generically in certain domains based on physical knowledge. The purpose of this study is therefore to explore a class of parametric functions for such non-linear transformations through the estimation of non-linear transformations corresponding to the Runge Lenz vector, which is a hidden conservation law for central force potential systems where the force is inversely proportional to the square of the radius.

\[H_{3}=^{2}+G|}\] (14)

First, we describe the geometrical structure of the symmetry of the Runge Lenz vector following previous studies . Consider the motion of the central force potential in six-dimensional phase space: \((,)=(q_{1},q_{2},q_{3},p_{1},p_{2},p_{3})\). In this system, the Laplace-Runge-Lenz vector, \(= L-mG}{||_{2}},\ \ L=\), is conserved. The Runge Lenz vector corresponds to the SO(4) symmetry in the coordinate space \((},_{4},},_{4})=(_{1}, _{2},_{3},_{4},_{1},_{2},_{3},_{4})\), defined as

\[}=}(,):=}{\| \|_{2}}-}{mG},\ \ _{4}=_{4}(,):=}{mG},\] (15) \[}=}(,):= }{p_{0}^{2}+p^{2}},\ \ _{4}=_{4}(,):=-p_{0}^{2}}{p_{0}^{2}+p^ {2}},\] (16)

where \(p_{0}=\). The transformed coordinate satisfies the conditions \(}^{2}+_{4}^{2}=1,}^{2}+_{4}^{2}=1\), and \(}}+_{4}_{4}=0\). Let us assume that the matrix representation of SO(4) is given by \(A\). Moreover, assume the transformation is represented as \(}^{ T}=A}^{T}\) and \(}^{ T}=A}^{T}\).

We investigate the correspondence between the \(4 4\) matrix representation \(A\) of the SO(4) symmetry in \((},})\) space and the coordinate transformation in \((,)\) space. Because the inverse of the coordinate transformation is given by

\[=(},_{4},},_{4})=- [(1-_{4})}+_{4}}],\ \ =(},_{4},},_{4})=}}{1-_{4}},\] (17)

the transformation of SO(4) in the original space becomes

\[(},_{4},},_{4 })=(},_{4},},_{4}),\ \ (},_{4},},_{4})=( {},_{4},},_{4}),\] (18) \[(}^{i}\\ _{4})=A(}^{i}\\ _{4}),\ \ (}^{i}\\ _{4})=A(}^{i} \\ _{4}).\] (19)

Thus, the Runge Lenz vector has linear symmetry in the space beyond which it maps the phase space with certain non-linear transformations. Such symmetry estimates suggest that it is useful to assume a class of non-linear transformations, such as stereo mapping, as a class of mapping transformations of phase space.

In this study, we propose a framework in which the non-linear symmetry is assumed to be a combination of a coordinate transformation and a linear transformation (Fig. 2), each of which is estimated

Figure 2: Schematic diagram of proposed framework.

independently of the other. A machine learning framework to estimate nonlinear symmetries has been already proposed using symbolic regression , they can also estimate the conservation laws as interpretable forms of functions corresponding to nonlinear symmetries. A method has also been proposed  to visualize conservation laws in the space in which they are embedded. The advantage of our method is to allow direct visualization of the manifolds formed by Lie groups. It should allow the scientists to work their insight from other viewpoints.

In this study, we check whether it is possible to estimate the linear symmetry corresponding to the Runge Lenz vector in the space of its mapping destination when the previously mentioned coordinate transformations are known. It is not obvious that the estimation will work even when the coordinate transformations are known. That is, under a non-linear coordinate transformation, the measure changes from a point in the original space to a point in mapped space, and if the data are finite, even if the data manifold has a uniform density in the original space, there will be regions where the density is almost zero at the mapping destination (see Fig. 2). This makes it difficult to estimate symmetry.

## 4 Results

We applied the proposed method to a system of central force potentials (Eq. 14). Specifically, for simulation data generated at all energies and initial conditions under the Hamiltonian of the central force potential (Eq. 14), an estimation of the set of transformations that make the data manifold invariant was performed in the framework of the following linear transformation after applying a coordinate transformation [Eqs.(23) and (24)]:

\[_{1}\\ _{2}\\ _{3}\\ _{1}\\ _{2}\\ _{3}=a_{11},a_{12},&0&0&0&0&0\\ a_{21},a_{22},&0&0&0&0&0\\ 0&0&1&0&0&0&0\\ 0&0&0&0&a_{11},a_{12},&0\\ 0&0&0&0&a_{21},a_{22},&0\\ 0&0&0&0&0&0&1\\ _{1}\\ _{2}\\ _{3}\\ _{1}\\ _{2}\\ _{3}\] (20)

The estimation results of the proposed method confirm that a set of target transformations corresponding to the Lungerenz vector can be obtained (Fig. 3). Specifically, for the matrix elements \(a_{11}\) and \(a_{12}\) corresponding to \(\) and \(\), a set of circular symmetric transformations was obtained, and for the matrix elements \(a_{11}\) and \(a_{22}\) corresponding to \(\) and \(\), a set of diagonal symmetric transformations (Fig. 3).

## 5 Summary and Discussion

This study suggests that the employed method  of directly visualizing manifolds formed by Lie algebras is also effective for non-linear transformations, by separating the transformation function for verifying symmetry into a coordinate transformation and a linear transformation. In this study, it was confirmed that linear transformations can be estimated under known coordinate transformations. As a result, we succeeded in extracting a set of symmetric transformations, despite the fact that the nonlinear coordinate transformations resulted in large differences in measures between the original and mapped spaces. In the future, we will further attempt to estimate the non-linear coordinate transformations and estimate the conserved values based on them. It is necessary to express non-linear mapping transformations in terms of parametric functions, in which case it may be useful to use a function class of stereo mapping, such as the one used in this study. It is then necessary to represent the non-linear coordinate transformations by parametric functions. The results of this study suggest that it is useful to use a function class of stereo mapping, such as the one used in this study, as its parametric function.

Figure 3: Estimation results of symmetric transformation set corresponding to Runge Lentz vector.

## Appendix A

The procedure of proposed method is summarized in Algorithm 1.

```
0: dataset \(D=\{_{t}^{i},_{t}^{i},_{t_{t+}}^{i},_{t_{t+ }}^{i}\}_{i=1}^{N}\) in a given coordinate system.
0: Invariant transformation set \(D_{a}=\{(a_{1},a_{2},a_{3},,a_{d_{a}})_{n_{a}}\}_{n_{a}=1}^{N_ {a}}\).
0: Train the deep autoencoder with dataset \(D\).
0: Using the trained deep autoencoder and REMC method, sampling transformation parameters \(a_{1},a_{2},a_{3},,a_{d_{a}}\) from multiple probability distributions \(P^{}(a_{1},a_{2},a_{3},,a_{d_{a}})\) corresponding to different noise intensities \(^{}\).
0: Select \(^{}\) from the distribution structure of the sampling results and output the sampling result of the selected \(^{}\) state as \(D_{a}\). ```

**Algorithm 1** Estimation of the invariant transformation set