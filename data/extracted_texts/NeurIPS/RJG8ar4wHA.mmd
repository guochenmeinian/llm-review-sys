# Improving Generalization of Dynamic Graph Learning via Environment Prompt

Kuo Yang

University of Science and Technology of China (USTC), Hefei, China

Zhengyang Zhou

Quhe Huang

University of Science and Technology of China (USTC), Hefei, China

Limin Li

University of Science and Technology of China (USTC), Hefei, China

Yuxuan Liang

The Hong Kong University of Science and Technology (Guangzhou), Guangzhou, China

Yang Wang

Yang Wang and Zhengyang Zhou are corresponding authors.

###### Abstract

Out-of-distribution (OOD) generalization issue is a well-known challenge within deep learning tasks. In dynamic graphs, the change of temporal environments is regarded as the main cause of data distribution shift. While numerous OOD studies focusing on environment factors have achieved remarkable performance, they still fail to systematically solve the two issue of environment inference and utilization. In this work, we propose a novel dynamic graph learning model named EpoD based on prompt learning and structural causal model to comprehensively enhance both environment inference and utilization. Inspired by the superior performance of prompt learning in understanding underlying semantic and causal associations, we first design a self-prompted learning mechanism to infer unseen environment factors. We then rethink the role of environment variable within spatio-temporal causal structure model, and introduce a novel causal pathway where dynamic subgraphs serve as mediating variables. The extracted dynamic subgraph can effectively capture the data distribution shift by incorporating the inferred environment variables into the node-wise dependencies. Theoretical discussions and intuitive analysis support the generalizability and interpretability of EpoD. Extensive experiments on seven real-world datasets across domains showcase the superiority of EpoD against baselines, and toy example experiments further verify the powerful interpretability and rationality of our EpoD.

## 1 Introduction

Dynamic graph learning aims to capture the evolution patterns of individual feature and global topology in spatio-temporal graphs over time. It has extensive applications in real-world scenarios, such as social relationship analysis [6; 61], traffic flow forecasting [3; 59; 64] and air quality prediction [16; 23]. The dynamic evolution is a prominent characteristic of spatio-temporal graphs [4; 16; 47], such as human interest and social development naturally undergo changes over time. This characteristic inevitably gives rise to a issue of data distribution shifts. Given this issue, enabling models to get temporal out-of-distribution (OOD) generalization ability poses a major challenge in dynamic graph learning [51; 55; 63].

Actually, recent studies have paid attention to tackling the issue of temporal OOD generalization [53; 58; 61]. They demonstrate that unseen temporal environments contribute to such distributionshift. For example, potential urban-hosted events can lead to out-of-distribution traffic state, and unrecorded academic communication between individuals in citation networks may hide new patterns of cooperation. Therefore, the research line relying on environment inference present a promising solution for addressing the temporal OOD issue. This paradigm focuses on inferring underlying environment factors, and utilizing the extracted environment information to enhance the robustness of dynamic graph learning against environment shifts. Although some works have achieved impressive performance , there remain limitations in both environment inference and utilization.

The judgment of existing limitations stems from two crucial observations. **Firstly**, unseen environments invariably encompass a wide range of factors, posing challenges in accurately determining their quantities and scales. However, existing methods often rely on a predefined scale environment codebook for inferring unseen environments , which may infer unrealistic environment results. **Secondly**, the shift of environments in dynamic graphs fundamentally reflects in the changes of structural associations . A real-world example is that the change of weather alters the future flow of the traffic network by changing human's trajectory. Nevertheless, existing methods often prioritize using the inferred environment as additional information to augment raw features, overlooking capturing the evolving structural associations . Therefore, the existing dynamic graph OOD efforts face issues in both environment extraction and utilization, and the comprehensive solution to address both problems is currently lacking.

To tackle these limitations, we propose an **E**nvironment-**p**rompted **D**ynamic Graph Learning (EpoD) architecture. **Firstly**, we propose a novel self-prompted learning mechanism to infer underlying environment representation. Given the lacking of environment labels and explicit scaling of environments, our aim is to guide the network generalizing environment factors from historical data in autonomous manner. The practices of language model inference on underlying semantics inspires us to utilize prompt learning to achieve this goal . We propose a self-prompted learning mechanism for spatio-temporal data to infer environment variables from historical data. By designing learnable prompt tokens and an interactive prompt-answer squeezing mechanism, we enable the model to effectively infer the compact and informative environment representations. **Secondly**, we propose a novel Structural Causal Model (SCM) with dynamic subgraph as mediating variable to enhance the adaptability of the network to environment shifts. Different from some approaches that obtain the causal subgraph by partitioning the original graph , we design a node-centered subgraph extractor specifically tailored for spatio-temporal data. This design is derived from a profound understanding of dynamic graph that the shift of environments within dynamic graphs invariably result in the changes of these asymmetric correlations between nodes. Our node-centered dynamic subgraphs extractor can capture node-wise asymmetry, where each node has its unique subgraph based on its environment states. **Lastly**, we conduct comprehensive experiments to evaluate the generalizability of EpoD. On the one hand, we perform experiments over multiple cross-domain datasets and introduce a more intricate long-series prediction task. On the other hand, we design an environment-shaded toy dataset, named _EnvST_, to verify the generalization ability of EpoD. The results show that EpoD can precisely perceive environment factors, and the generated dynamic subgraphs are equipped with both generalizability and interpretability. Our **contributions** are summarized as follows:

* We systematically investigate the environment-based efforts to tackle the temporal OOD issue, and observe the limitations of existing works in environment inference and utilization.
* To address existing challenges, we propose a novel **E**nvironment-**p**rompted **D**ynamic Graph Learning (EpoD) architecture. Specifically, we introduce a self-prompted learning mechanism for spatio-temporal data to infer underlying environment variables without preset scale. For the exploitation of inferred environment factors, we propose a structural causal model with dynamic subgraphs for mediating variables to capture the effect of environment variable shifts on the data distribution. Our work presents a pioneering practice jointly focusing and solving the issue of environment inference and utilization.
* We conduct experiments over multiple cross-domain datasets, including traffics and social networks, to verify the effectiveness of our framework. And a toy dataset is designed to demonstrate the generalizability and interpretability of EpoD.

## 2 Background

Preliminaries.We denote \(}=\{^{t}\}_{t=1}^{T}\) as a dynamic graph across \(T\) steps, where \(^{t}=(^{t},^{t},^{t})\) represents a snapshot of the graph at step \(t\). The tensor \(^{t}^{N D}\) indicates observed features of \(N=|^{t}|\) nodes at step \(t\), where \(D\) denotes the feature dimension. \(^{t}\{0,1\}^{N N}\) is the adjacency matrix describing the connectivity of graph \(^{t}\). Given the historical data \(=\{^{t}\}_{t=1}^{T}\), dynamic graph learning aims to predict the future evolution patterns \(=\{^{t}\}_{t=T+1}^{T+K}\), where \(K\) denotes the number of predicted future time steps. Historical observations \(\) can be divided into the accessible environment features \(}\) and observed labels with evolution patterns \(}\), e.g., volumes in traffic datasets, or links in social networks.

Problem Definition.There is a consensus that unseen environment factor, \(\), considered as the primary reason for temporal OOD issue [58; 53]. In this work, we focus on capturing the invariant evolution pattern of dynamic graph to tackle the temporal OOD issue.

Spatio-Temporal Graph Forecasting for OOD issue.Our work aims to systematically tackle the challenges in existing environment-centered OOD approaches. Our specific practice in environment inference and utilization is significantly distinct from existing works and has substantial improvements. _On the one hand_, the self-prompted environment inference framework aims to guide the network to adaptively infer environment variables from historical data by using well-designed prompt tokens. Different from existing efforts relying on predefined environment scale [53; 58], our methods advantageously eliminates human biases and ensures accurate extraction of the environment from real historical data. _On the other hand_, we propose a novel SCM with dynamic subgraph as mediating variable. Compared to simply attaching environment embeddings to existing representations, our approach is more consistent with the understanding of dynamic graph data from a causal perspective. Furthermore, unlike some approaches that rely on partition strategies commonly used in static graph learning to extract subgraphs , we propose a node-centered dynamic subgraph extraction method that is better suited for spatio-temporal graph scenarios.

Prompt Learning.Prompt learning was initially introduced to address the challenge of data scarcity in language models [7; 12; 11]. By utilizing well-designed prompts, the model can effectively capture a broader space of data distributions and patterns during training, which is better at adapting to input samples from different distributions. For an extended period, the complexity of prompt design has been a hindrance preventing prompt learning from achieving broader applications. In contrast to language data, human beings lack the intuitive cognition of both image and graph data, making it challenging to design interpretable prompts templates. Recently, learnable prompts have also been proven to have superior performance [29; 20]. Therefore, prompt learning is thriving in computer vision research and graph learning [22; 30; 39]. Recently, the efforts of using prompt learning to enhance spatio-temporal prediction is beginning to emerge, including  and . The former focuses on multi-attribute forecasting; the latter aims to enhance model generalization ability. However, there is lacking systematical research on prompt learning addressing temporal OOD problems.

Figure 1: The architecture of EpoD. Left panel: the prediction of future evolution based on historical observations. Right panel: the extraction process of node-centered dynamic subgraph.

Methodology

In this section, we introduce a novel **E**nvironment-**p**rompted **D**ynamic Graph Learning architecture named EpoD. First, we propose a self-prompted learning mechanism to realize the awareness of unseen environment factors. Second, we revisit the winding causal path from environment to graph evolution, and a spatio-temporal learning framework utilizing dynamic subgraph as mediating variables is presented. Last, we provide theoretical analysis of EpoD from causal perspective to interpret its excellent generalization ability.

### Self-prompted learning for environment awareness

Existing methods typically infer environments by predefining the scale of the environment codebook, which introduces human bias and has the potential to cause performance degradation. To tackle this issue, we introduce an environment inference principle that extract underlying environment representations from historical observations without predefining scales. Inspired by the remarkable success of prompt learning in inferring underlying semantics and the multimodal generalization of large language models (LLMs) [49; 35; 39], we propose a self-prompted learning mechanism (SPL) to realize this environment inference principle.

**Spatial-specified prompt design.** Our SPL focuses on guiding models to effectively extract environment variables from observed data by well-designed prompts. Therefore, the initial challenge we need to address is the design of prompt tokens. Within spatio-temporal graphs, it is common for different nodes to exhibit diverse evolution patterns. Thus, the design of prompts should be specified on spatial aspect to reflect node-wise distinctive evolution state. Given a dynamic graph \(}\), we assign a prompt token \(_{i}\) for each node, which is shared across temporal steps. However, the absence of prior knowledge about environment information hinders us from adopting the template-based approach to initialize \(_{i}\). Fortunately, learnable prompts have revealed satisfactory performances on capturing hidden mappings [39; 30]. Therefore, we initialize a learnable prompt token \(_{i}^{d}\) for each \(i\), where \(d\) denotes the dimension of latent embedding space. The environment prompt tokens **P** for \(}\) is then denoted as,

\[=\{_{i}\}_{i=1}^{N}^{N d}.\] (1)

Since **P** is specified on the spatial perspective, the node across different temporal snapshots shares the same environment prompt. In the implementation, **P** is expanded as a new tensor of \(^{T N d}\) by cloning \(T\) times.

**Prompt-answer mechanism for environment squeezing.** The next challenge to address is how to effectively utilize the well-designed prompts to guide the model in extracting underlying environment representations \(_{E}^{T N d}\). The premise of achieving this goal lies in profoundly understanding the relationships between the variables in dynamic graph. The ability of Structural Causal Model (SCM) to describe the relationship between variables offers a valuable framework for our analysis [26; 27]. The SCM of dynamic graph includes the temporal environment information **E**, spatial context **C**, historical observation **X**, and future evolving signals **Y**. Actually, **X** denotes historical observations, which is the combination of \(_{}\) and \(_{}\) defined in Sec. 2. This causal model can be formalized as,

\[(,|,)=( |,,)(|,).\] (2)

Therefore, we aim to squeeze environment variables **E** from the observable feature \(_{}\) and the observed labels with evolution patterns \(_{}\), which is similar to solving cloze problems. To accomplish this, we design an interactive squeezing mechanism \(g_{}()\) to guide the model to squeeze out the underlying environment variables through the interaction of learnable prompts **P** and the observable features \(_{}\). Specifically, we first perform a spatio-temporal network backbone \(h_{}()\) to get nodes embedding \(=\{^{t}_{1},,^{t}_{k}\}_{t=1}^{T} ^{T N d}\) by taking observable features \(_{}\) as inputs. Then, \(g_{}()\) decodes the learnable prompts **P** and encoded embedding **Z** to obtain prompt answers \(_{E}\). In implementation, \(g_{}()\) consists of three families of learnable parameters, i.e., \(W^{Q},W^{K},W^{V}^{T d d}\). Three hidden state matrices are calculated by,

\[^{Q}=W^{Q},\;^{K}=W^{K},\;^ {V}=W^{V}.\] (3)

The prompt answer \(_{E}\) is obtained by,

\[_{E}=(^{Q}(^{K})^{T}}{ })^{V}+,\] (4)where \((,)\). Random noise is added to further enhance the robustness of inferred environment representation. Then, the ground-truth \(}\) serves as the learning goal during this squeezing process. We design a tractable objective to squeeze unseen environment representation \(_{E}\),

\[_{,,}}_{P}=-[( }|},)]=[( _{}(_{E})||_{}())]-[_{,}(}|_{E})],\] (5)

where \(\) is a preset hyperparameter, and its sensitivity analysis is provided in Appendix G.1.

* The first term captures the similarity between environment states \(_{E}\) and node embedding \(\).
* The second term predicts the evolution rule \(}\) only using inferred unseen environments \(_{E}\).

The objective of Eq. 5 implies that our prompt answers not only reflect the evolution of dynamic graphs but also significantly differ from current available features.

Our design infers unseen environment factors into a continuous space, which remarkably distinctive from previous methods with predefined and discrete environment scale [53; 58]. Our extracted \(_{E}\) can eliminate the bias stemming from inadequate prior knowledge of environment information.

**Provable Squeezed Environment Answer.** SPL enables the awareness of environment factors via employing environment prompt framework. However, there is still indistinctness about the feasibility of our design. From the perspective of information theory [2; 5], the learning objective of SPL can be restated as,

\[_{,,}}I(_{E};})- I( _{E};}).\] (6)

We will replace Eq. 5 with above Eq. 6 for later proof.

**Theorem 3.1**.: _If there exists a causal relationship between unseen environment pattern \(_{E}^{*}\) and the label \(}\), \(_{E}^{*}\) is the optimal result of SPL objective._

Theorem 3.1 demonstrates the feasibility of SPL and we can always extract additional environment factor if it exist. Detailed proof is provided in Appendix C.

### Spatial-temporal Learning with Dynamic Subgraph

With the well-learned environment answers, how to exploit such representations to achieve spatio-temporal prediction becomes a natural problem. Existing environment-centered approaches tend to directly treat the perceived environment embedding \(_{E}\) as the additional feature. However, from the perspective of data generation, the influence of environments on data distribution shifts is usually reflected in the changes of node-wise correlations. Current methods fail to capture the causal effects of environment variables in dynamic graphs. In this subsection, we introduce a spatio-temporal invariant learning approach using node-centered dynamic subgraph as the mediating variable.

**A winding causal path in dynamic graph.** We revisit the role of \(\) in the spatio-temporal causal model, and propose a novel SCM with dynamic subgraph \(}\) as mediating variable as shown in Fig. 2(c). It can be formalized by,

\[(,|,)=(| })(}|,)( |,).\] (7)

In contrast to the symmetric correlations between nodes in static graphs, the dependencies between nodes in dynamic graphs are often directional and asymmetric. For example, there is a flow direction between nodes in traffic network and certain node pairs may have different influence or importance to each other in social network. As a result, the shift of environments within dynamic graphs always leads to the changes of these asymmetric correlations between nodes. A typical example is that the change of weather conditions always leads to a shift in the direction of traffic flow instead of bring any new paths. Different from partition-based subgraph learning strategies investigated in static

Figure 2: SCMs of dynamic graph. (a) Traditional generation understanding of dynamic graph; (b) Indirect effect of environment factors; (c) Dynamic subgraph as mediating variable.

graphs, we design node-centered dynamic subgraph extractor tailored for dynamic graphs, where each node has its unique subgraph based on its environment states. Such strategy not only captures the impact of environments on internode dependencies, but also facilitates to mine the invariant pattern of spatio-temporal evolution more interpretably.

**Dynamic subgraph extraction for environment enhancement.** We argue that the asymmetry of environment factor between nodes often leads to clustering effects, such as the asymmetrical importance between the prominent individuals and their followers brings stable connectivity. We leverage the relative entropy (Kullback-Leibler Divergence) to measure such asymmetry. Relative entropy is a metric employed to quantify the disparity between two probability distributions, which exhibits a notable feature of asymmetry, i.e., \((||)(||)\). \((||)\) quantifies the degree of match when using \(\) as the reference distribution and approximating it with \(\), while \((||)\) quantifies the degree of match when using \(\) as the reference distribution and approximating it with \(\). Such property of relative entropy offers significant advantages in quantifying asymmetric environment distributions. This is because the asymmetric dependencies of environment distributions also considers the influence of one environment factor on another as the reference basis. However, computing the KL divergence between every pair of nodes \((^{t}_{(i,:)}||^{t}_{E(j,:)})\) is computationally intensive. To this end, we propose linear complexity quantification method using the mean distribution of node-level environment distributions as a proxy. \(^{t}_{(i,j)}\) represents the dependence from \(i\) on \(j\) at time \(t\),

\[^{t}_{(i,j)}{=}\ (}^{t}_{E}||^{t}_{E( i,:)})(^{t}_{E(j,:)}||}^{t}_{E}),\] (8)

where \(}^{t}_{E}=(^{t}_{E})\) denotes the mean distribution of node-level environment embedding. This method utilizes \(}^{t}_{E}\) as an intermediary to measure the environment dependency from node \(i\) to \(j\). The larger of \(^{t}_{(i,j)}\) indicates a greater gap of environment difference from node \(i\) to \(j\), which reflects the strong dependence. The asymmetric correlation matrix \(^{t}^{N N}\) at time \(t\) can be calculated as,

\[^{t}=(^{t})^{}^{t}.\] (9)

\(^{t}^{1 N}\) and \(^{t}^{1 N}\) are respectively calculated from the two terms in Eq. 8,

\[^{t}=[(}^{t}_{E}||^{t}_{E(1,:)}), (}^{t}_{E}||^{t}_{E(2,:)}),\!...,(}^{t}_{E}||^{t}_{E(N,:)})],\] (10)

\[^{t}=[(^{t}_{E(1,:)}||}^{t}_{E}), (^{t}_{E(2,:)}||}^{t}_{E}),\!...,(^{t}_{E(N,:)}||}^{t}_{E})].\] (11)

\(^{t}_{(:,i)}\) denotes potential nodes centered on node \(i\) and \((||)\) indicates the Kullback-Leibler divergence. We can extract node-centered \(L\)-hop subgraph \(^{t}}^{N N}\) based on this environment-enhanced correlation matrix \(^{t}\),

\[^{t}}=^{t}((^{t})^{L}),\] (12)

where \(\) denotes element-wise multiplication of matrices and \(L\) is a hyperparameter. \(L\) is set to 5 and its sensitivity is discussed in Appendix G.1. \(()\) is an indicator function that assigns a value of 1 to elements in the matrix that are greater than 0, and assigns a value of 0 to the rest. We can get a series of dynamic subgraphs that evolves over time \(}^{T N N}\). Meanwhile, we combine the features of each node by concatenating environment answer \(^{t}_{E}\) to obtain enhanced \(}^{t}^{N(D+d)}\),

\[}^{t}=([^{t},^{t}_{E}]).\] (13)

The historical data enhanced by dynamic subgraph with environment representation is denoted as,

\[}=\{^{t}}\}_{t=1}^{T}=\{^{t}, }^{t},}^{t}\}_{t=1}^{T}.\] (14)

**Dynamic graph prediction with generalizability.** Finally, \(f_{}\) encodes the dynamic subgraphs \(}\) via a spatio-temporal network backbone to predict future dynamic evolution. We obtain the learning objective of EpoD,

\[_{,,,}=-[_{ }(|})-_{,}(}| },)]-[(_{}( _{E})||_{}(|}))].\] (15)

We provide the training process of EpoD in Alg. 1. It is worth noting that our EpoD systematically resolves the limitations of environment inference and environment utilization faced by spatio-temporal invariant learning methods. The two aspects of the design are not independent, but rather tightly coupled. Moreover, our EpoD is pluggable that can be flexibly integrated with various backbones. Inthe experiments of traffic flow and social relationship prediction, we select Adaptive Graph Convolutional Recurrent Network (AGCRN)  and Disentangled Dynamic Graph Attention Networks (DDGAN)  as our STGNN backbone respectively.

Our approach does not require predictions of future unseen environments. Actually, we argue that the underlying unseen environment factors within historical observations harbors valuable information to guide evolution. Therefore, our focus lies in perceiving historical environment factors and exploiting them appropriately to capture evolution-invariant pattern for prediction. The subsequent experimental discussion can further validate such intuition.

### Causal Interpretation of Dynamic Subgraphs

In this subsection, we provide a deeper understanding of EpoD in the causal theory perspective .

**The mediating effect in the dynamic graph.** The efforts on how temporal environment factors and spatial contexts influence the evolution of dynamics graph has been extensively made. However, even though some studies claim disentanglement of spatial-temporal dependencies, it is acknowledged that true separation may not be fully achieved. Most of them inherently concentrated on exploring the interplay between spatial and temporal dynamics. In fact, some pioneering researches have revealed the temporal evolution mostly stem from the changes over spatial dependencies. To this end, we summarize such indirect influence as mediating effect within dynamic graph, as shown in Fig. 2(b). But according to _the complete mediation effect theorem_, this SCM eliminates the direct effect of temporal variable **E** on future spatio-temporal evolution **Y**. This requires us to contemplate whether **C** can serve as a mediation variable. Given the time-varying property of dynamic graph, the only spatial context cannot sufficiently interpret the graphs evolution. Therefore, a mediating variable simultaneously encapsulating spatial dependencies and temporal dynamics is required.

**Dynamic subgraphs as mediation variable.** The dynamic spatial variations induced by environment factors are essentially rooted in the changes of local dependencies. Thus, a novel SCM is introduced, which employ dynamic subgraph \(_{}\) as the mediation variable as illustrated in Fig. 2(c). Dynamic subgraphs exhibit both temporal and spatial characteristics, also serve as the mediation variable from **X** to **Y**. This design offers us a chance to address distribution shift issue along the practices of causal adjustment . We can observe a back-door path between causal path **X** and **Y**, i.e., \(_{} \). The backdoor adjustment pattern leveraging _do-calculus_ on dynamic subgraph \(_{}\) is,

\[P(=y|do(=x))=_{x_{S}}P(=y|=x, _{}=x_{S})P(_{}=x_{S}).\] (16)

In essence, our EpoD can be viewed as employing backdoor adjustments to estimate \(P(|do())\) by discovering dynamic subgraphs, where the prompted environment representations support the subgraph discovery process. More discussion is provided in Appendix D.

## 4 Experiments

### Experiment Setup

We introduce datasets, baselines and experiment settings, and details are leaved in Appendix E.

    &  &  &  &  \\   & **MAE** & **RMSE** & **MAE** & **RMSE** & **MAE** & **RMSE** & **MAE** & **RMSE** \\  GWNET & 19.04\(\)0.9 & 29.02\(\)1.1 & 23.12\(\)0.8 & 38.75\(\)1.3 & 30.22\(\)2.1 & 43.65\(\)2.9 & 31.27\(\)2.6 & 45.29\(\)2.3 \\ AGCRN & 17.30\(\)0.2 & 27.44\(\)0.6 & 21.19\(\)0.3 & 34.65\(\)0.2 & 26.19\(\)1.2 & 40.51\(\)1.3 & 28.74\(\)1.6 & 43.75\(\)2.0 \\ Z-GCNETs & 19.24\(\)0.3 & 28.40\(\)0.2 & 22.55\(\)0.5 & 36.27\(\)0.7 & 28.21\(\)1.7 & 41.32\(\)1.8 & 29.87\(\)1.2 & 43.11\(\)2.2 \\ DSTGNN & 17.56\(\)0.3 & 26.29\(\)0.2 & 21.22\(\)0.7 & 36.65\(\)0.2 & 26.34\(\)1.4 & 41.31\(\)1.6 & 30.11\(\)2.0 & 42.99\(\)2.7 \\ STGNCDE & 18.41\(\)0.6 & 27.38\(\)0.3 & 22.04\(\)0.6 & 35.39\(\)0.4 & 27.34\(\)0.9 & 40.73\(\)1.3 & 29.21\(\)1.5 & 43.03\(\)2.4 \\ CaST & 17.28\(\)0.3 & 26.56\(\)0.4 & **20.79\(\)0.4** & 34.95\(\)0.3 & 25.38\(\)1.1 & 39.92\(\)1.6 & 28.67\(\)1.8 & 42.23\(\)1.9 \\  EpoD(ours) & **16.92\(\)0.2** & **25.66\(\)0.6** & 21.12\(\)0.4 & **34.02\(\)0.3** & **23.58\(\)1.2** & **38.25\(\)1.4** & **27.26\(\)1.5** & **40.14\(\)1.8** \\   

Table 1: The performance of traffic prediction tasks \((12 24)\) on four real-world datasets. The best results are shown in **bold** and the second best results are underlined.

**Datasets.** We employ seven cross-domain real-world dynamic graph datasets to evaluate our EpoD. PEMS08 and PEMS04  are classic medium-scale traffic network datasets from California with 5-minute intervals; SD and GBA  are newly proposed large-scale traffic network datasets. COLLAB  is an academic collaboration dataset comprising papers published in 16 years; Yelp  is a business review dataset; ACT  shows students' actions on a MOOC platform over 30 days.

**Baselines.** We compare EpoD with two families of baselines, i.e., six traffic flow prediction models and six social link forecasting methods. Traffic flow prediction models: GWNET , AGCRN , Z-GCNETs, DSTAGNN , STGNCDE , CaST . Social link forecasting models: DySAT, IRM, VREx, GroupDRO, DIDA, EAGLE .

**Experiment settings.** In the experiments of traffic flow prediction, our task is to predict the next 24 steps based on historical 12 steps observations (\(12 24\)). Moreover, we choose traffic data from the SD and GBA datasets spanning from 2019 to 2020 in order to add the distribution shift scenarios arising from COVID-19, where the training set is composed of data from 2019, while the data from 2020 is divided into a validation set and a test set. The task of social relationship analysis is to exploit past graphs to make link prediction in the next time step. In the training stage, we selectively mask a shifted attribute link from COLLLAB, Yelp and ACT to simulate the distribution shift scenario encountered in the real world .

### Performance Analysis on Real-world Datasets

**Traffic flow prediction.** We evaluate our EpoD with baselines based on Mean Absolute Error (MAE) and Root Mean Square Error (RMSE), where lower values of them represent better performance. Tab. 1 shows the results of EpoD on traffic flow data. We have two observations: 1) our EpoD outperforms all baselines on three datasets. The powerful long-sequence prediction ability of EpoD demonstrates that our design is robust to environment perturbations and excels in capturing the evolution patterns of dynamic graph. We also note that CaST  obtains suboptimal results on most datasets and even optimal results on PEMS04. This indicates that it is effective to tackle the temporal distribution shift issue by studying environment factors under the guidance of causal theory. 2) EpoD exhibits a more pronounced capability for prediction improvement on two large-scale traffic datasets. It indicates that EpoD is better suited for addressing the distribution shift issue caused by extremely intricate environment perturbations, which is the main challenge posed by large-scale traffic data. We also discuss the interpretability of dynamic subgraphs in Appendix G.3.

**Social link forecasting.** Tab. 2 presents the performance of EpoD on social link prediction tasks. Our model outperforms all baselines on two datasets under distribution shifts. We also observe that EAGLE  achieves one best performance and other sub-optimal results, which is comparable to our method. It proves that the approaches of perceiving environments can tackle the distribution shifts issue in dynamic graph. Besides, our extracted continuous environment representations are more expressive than the environment factors with pre-defined scales.

### Toy Dataset

We manually design a toy dataset _EnvST_ with temporal distribution shift to explore the generalizability of EpoD. The feature of each node in _EnvST_ encompasses three components, i.e., [\(x_{A}\), \(x_{B}\), \(x_{C}\)], where \(x_{A}\) and \(x_{B}\) represent evolution-causal features but \(x_{B}\) is masked after the data is generated, \(x_{C}\) indicates available evolution-spurious feature. To simulate the temporal distribution shift in the dynamic graph, the training and test dataset of \(x_{A}\), \(x_{B}\) and \(x_{C}\) are sampled from distributions with significant differences separately. The label of each node on the _EnvST_ at \(t\) step is activated by updated feature \(y_{i}^{t}((z_{i}^{t}))\), where \(()\) is the sigmoid func

  
**Model** & **Collab** & **Yelp** & **ACT** \\  DySAT & 76.59\(\)0.20 & 66.09\(\)1.42 & 66.55\(\)1.21 \\ IRM & 75.42\(\)0.87 & 56.02\(\)16.08 & 69.19\(\)1.35 \\ VREx & 76.24\(\)0.77 & 66.41\(\)1.87 & 70.15\(\)1.09 \\ GroupDRO & 76.33\(\)0.29 & 66.97\(\)0.61 & 74.35\(\)1.62 \\ DIDA & 81.87\(\)0.40 & 75.92\(\)0.90 & 78.64\(\)0.97 \\ EAGLE & **84.41\(\)0.87** & 77.26\(\)0.74 & 82.70\(\)0.72 \\  EpD(ours) & 83.21\(\)0.35 & **80.85\(\)0.81** & **83.85\(\)0.52** \\   

Table 2: AUC score (\(\%\) ) of future link prediction task on real-world social relationship datasets. The best results are shown in **bold** and the second best results are underlined.

tion. We conduct experiments from the following two aspects: 1) we investigate whether EpoD has the capability to perceive masked environment feature \(x_{B}\), 2) we study whether EpoD can identify and remove the spurious correlation \(x_{C}\). More analysis can be found in Appendix E.4.

**Powerful perception for unseen environment.** Fig. 3(a) and 3(b) show the distribution difference between masked feature \(x_{B}\) and prompted environment feature \(_{E}\), where experiments are conducted on _EnvST_ under the scenario of distribution shift. Fig. 3(a) shows our prompted environment feature \(_{E}\) can cover more than half of the shifted features in the future steps. As shown in Fig. 3(b), we observe that our prompted environment variables can effectively cover slight early signal and utilize it to tackle OOD issue.

**Robust spurious information identification ability.** We then explore whether our EpoD can filter out the disturbance of \(x_{C}\). Specifically, we have the following experiment design. Consider \(x_{C}\) is sampled from \((,I)\), we set \(\) and record the performance of EpoD under the influence of different spurious information as shown in Fig. 7. We can observe that the fluctuations in prediction performance consistently fall within the acceptable error bounds. Therefore, we can conclude that EpoD have the ability to identify spurious information \(x_{C}\).

### Ablation Study

We conduct ablation studies from the following two aspects.

**Temporal shared learnable prompts.** In spatio-temporal graphs, we can observe different nodes always reveal heterogeneous evolution patterns. Thus, we design temporal shared node-wise learnable prompts. In essence, this design is driven by both resource consumption and real-world scenarios. There are still two potentially effective design approaches: a single learnable prompt shared globally (SingleP) and node-private learnable prompts (PrivateP). The former only initializes a globally shared prompt for the dynamic graph \(^{d}\); the latter assigns learnable prompts to each node of each snapshot \(^{T d}\). To this end, we compare three design methods in terms of accuracy and efficiency. Fig. 4 shows the results of ablation, where the bars represent the time consuming and the lines depict accuracy. We have the following two observations.

1) From the aspects of accuracy, the design of EpoD and PrivateP have similar performance, and SingleP is significantly inferior to them. 2) From the aspects of efficiency, it is understandable that SingleP has the highest training efficiency and PrivateP is the least efficient. The efficiency of EpoD falls between them, yet it remains competitive with SingleP. Therefore, we can conclude that our design stands out as the optimal choice considering both efficiency and accuracy.

**The necessity of dynamic subgraph design.** We aim to investigate the importance of dynamic subgraphs and explore which subgraph extraction strategy is more suitable for dynamic graph learning. Specifically, we first construct two variants of EpoD, i.e., EpoD-NoSub and EpoD-PartitionSub. EpoD-NoSub is a variant of EpoD that does not utilize dynamic subgraphs for spatiotemporal prediction, which just uses the perceived environment only by incorporating features.

Figure 4: A comparison of learnable prompts design approaches.

Figure 3: Analysis on the toy dataset.

  
**Model** & **PEMS08** & **PEMS04** & **Yelp** \\  EpoD-NoSub & 17.45 & 21.93 & 76.34 \\ EpoD-PartitionSub & 18.09 & 22.04 & 77.35 \\  EpoD(ours) & **16.92** & **21.12** & **80.85** \\   

Table 3: Ablation results on dynamic subgraph in EpoD. MAE performance on PEMS08 and PEMS04, AUC(\(\%\)) score on Yelp.

EpoD-PartitionSub means an EpoD variant with partition-based subgraph extraction strategy like static graph learning. We perform ablation experiments on PEMS08, PEMS04 and Yelp, as shown in Tab. 3. First, we observe that the performance difference between EpoD and EpoD-NoSub is substantial, with a maximum gap exceeding 2. It means the utilization of dynamic subgraphs not only enhances interpretability but also is crucial for improving generalization performance. Second, we EpoD had a more pronounced effect than EpoD-PartitionSub. In addition, more experiments show that EpoD is more stable than EpoD-PartitionSub.

### Efficiency Analysis

We analyze the efficiency of EpoD theoretically and practically. We utilize \(|V|\) and \(|E|\) to denote the number of nodes and edges in the graph, \(d\) to represent the dimension of implicit representation, and \(\) to represent the time step of historical observations. The time consumption mainly comprises three components: the spatio-temporal graph aggregation process, the prompt answer process, and the dynamic subgraphs sampling process. The time complexity of the spatio-temporal aggregation is \(O(T(|E| d+|V| d^{2}))\). The prompt answer process primarily involves a cross-attention operation, with a time complexity of \(O(T|V| d)\). The dynamic subgraphs sampling module implements node-centered sampling, with a time complexity of \(O(T|V|)\). Therefore, the time complexity of EpoD is \(O(T d|E|+T(1+d+d^{2})|V|)\). In conclusion, EpoD exhibits linear time complexity concerning the number of nodes and edges, which is competitive with existing dynamic GNNs such as DIDA, EAGLE, and CaST.

We also conduct efficiency comparisons of EpoD, DIDA, and EAGLE in COLLAB, Yelp, and ACT datasets, measuring the time taken per epoch (s/epoch). All experiments are run on an NVIDIA A100-PCIE-40GB. Empirically, we observe that the operational efficiency of our method is competitive with existing approaches.

## 5 Conclusion and Future Work

In this paper, we propose a novel dynamic graph learning framework EpoD to tackle the temporal distribution shift issue by exploiting prompt learning. Inspired by the powerful ability of prompt learning in perceiving underlying semantic and causal associations, we first introduce a self-prompted environment inference mechanism. This approach aims to extract underlying environment variables that potentially influence temporal distribution shift. Subsequently, we propose a novel causal pathway that leverages dynamic subgraphs as mediating variables to effectively utilize the inferred environment embedding. Experiments on real-world datasets and toy examples show that our EpoD effectively improve the dynamic graph learning under temporal shifts, especially boosting the interpretability via dynamic subgraphs.

**Limitations.** One of the limitation of our work is its strong dependence on graph topology. Specifically, our subgraph discovery strategy essentially is the node filtering based on K-hop neighbors, which can be regarded as subtracting elements from the graph topology. However, the graph topology constructed by distance-based adjacency matrix always lacks adaptability to dynamic changes in the relationships between nodes . In the future, we aim to improve the extraction process of node-centered dynamic subgraphs. We intend to form subgraphs from an empty topology by taking into account both the perceived environment embeddings and the initial distance information.