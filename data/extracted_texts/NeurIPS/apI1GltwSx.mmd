# DELT: A Simple Diversity-driven EarlyLate Training for Dataset Distillation

Anonymous Author(s)

Affiliation

Address

email

###### Abstract

Recent advances in dataset distillation have led to solutions in two main directions. The conventional _batch-to-batch_ matching mechanism is ideal for small-scale datasets and includes bi-level optimization methods on models and syntheses, such as FRePo, RCIG, and RaT-BPTT, as well as other methods like distribution matching, gradient matching, and weight trajectory matching. Conversely, _batch-to-global_ matching typifies decoupled methods, which are particularly advantageous for large-scale datasets. This approach has garnered substantial interest within the community, as seen in SRe\({}^{2}\)L, G-VBSM, WMDD, and CDA. A primary challenge with the second approach is the lack of diversity among syntheses within each class since samples are optimized independently and the same global supervision signals are reused across different synthetic images. In this study, we propose a new EarlyLate training scheme to enhance the diversity of images in _batch-to-global_ matching with less computation. Our approach is conceptually simple yet effective, it partitions predefined IPC samples into smaller subtasks and employs local optimizations to distill each subset into distributions from distinct phases, reducing the uniformity induced by the unified optimization process. These distilled images from the subtasks demonstrate effective generalization when applied to the entire task. We conducted extensive experiments on CIFAR, Tiny-ImageNet, ImageNet-1K, and its sub-datasets. Our empirical results demonstrate that the proposed approach significantly improves over previous state-of-the-art methods under various IPCs1.

## 1 Introduction

In the era of large models and large datasets, dataset distillation has emerged as a crucial strategy to enhance training efficiency and make AI technologies more accessible and affordable for the general public. Previous approaches [1; 2; 3; 4; 5; 6; 7; 8; 9; 10] primarily employ a _batch-to-batch_ matching technique, where information like features, gradients, and trajectories from a local original data batch are used to supervise and train a corresponding batch of generated data. This method's strength lies in its ability to capture fine-grained information from the original data, as each batch's supervision signals vary. However, the downside is the necessity to repeatedly

Figure 1: Distill datasets to IPC\({}_{N}\) requires \(N*T\) iterations in traditional distillation processes (left) but fewer iteration processes (right).

input both original and generated data for each training iteration, which significantly increases memory usage and computational costs. Recently, a new decoupled method [11; 12; 13] has been proposed to separate the model training and data synthesis, also it leverages the _batch-to-global_ matching to avoid inputting original data during distilled data generation. This solution has demonstrated great advantage on large-scale datasets like ImageNet-1K [11; 14] and ImageNet-21K . However, as shown in Fig. 2 right subfigure, a significant limitation of this method is its strategy of synthesizing each data point individually, where supervision is repetitively applied across various synthetic images. For instance, SRe\({}^{2}\)L utilizes globally-counted layer-wise running means and variances from the pre-trained model for supervising different intra-class image synthesis. This methodology results in a pronounced lack of diversity within the same category of generated images.

To address this issue, previous studies such as G-VBSM  and RDED  have been conducted. Specifically, G-VBSM  introduces a framework that utilizes a diverse set of _local-match-global_ matching signals derived from multiple backbones and statistical metrics, offering more precise and effective matching than the singular model. However, as the diversity of matching models grows, the overall complexity of the framework also increases, thus diminishing its conciseness. RDED  crops each original image into multiple patches and ranks these using realism scores generated by an observer model. Then it amalgamates every four chosen patches from previous stage into a single new image, maintaining the resolution of the original images, and produce IPC-numbered distilled images for each class. While RDED is effective for selecting and combining data, it does not enhance or optimize the visual content within the distilled dataset. Thus, the diversity and richness of information it encapsulates largely dependent on the distribution of the original dataset.

Our solution, termed the EarlyLate training scheme, is straightforward and also orthogonal to these prior methods: by initializing each image in the same category at a different starting point for optimization, we ensure that the final optimized results vary across images. We also use teacher-ranked real image patches to initialize the synthetic images. This prevents some images from being short-optimized and ensures they provide sufficient information. As shown in Fig. 1 of the computation comparison, our approach not only enhances intra-class diversity but also significantly reduces the computational load of the training process. Specifically, while conventional training requires \(T\) optimization iterations per image or batch, in our EarlyLate scheme, the first image undergoes \(T_{1}\) iterations (where \(T_{1}=T\)). Subsequent batches are processed with progressively fewer iterations, such as \(T_{2}\) (\(T_{2}=T_{1}-^{2}\)) for the next set, and so forth. The iterations for the final batch are reduced to RI which is \(1/j\) of the standard count (where typically \(j=4\) or \(8\)), meaning the total number of optimization iterations required is just about \(2/3\) of prior _batch-to-global_ matching methods, such as SRe\({}^{2}\)L and CDA. We further visualize the average cosine similarity between each sample of 50 IPCs with the associated cluster centroid within the same class on ImageNet-1K, as shown in Fig. 2 left subfigure, DELT shows significantly better diversity than other counterpart methods across all classes.

We perform extensive experiments on datasets of CIFAR-10, Tiny-ImageNet, ImageNet-1K and its subsets. On ImageNet-1K, our proposed approach achieves 66.1% under IPC 50 with ResNet-101, outperforming previous state-of-the-art RDED by 4.9%. On small-scale datasets of CIFAR-10, our approach also obtains 2.5% and 19.2% improvement over RDED and SRe\({}^{2}\)L using ResNet-101.

Our main contributions in this work are as follows:

* We propose a simple yet effective EarlyLate training scheme for dataset distillation to enhance the intra-class diversity of synthetic images from _batch-to-global_ matching.

Figure 2: **Left**: Intra-class semantic cosine similarity after a pretrained ResNet-18 model on ImageNet-1K dataset, lower values are better. **Right**: Synthetic images from SRe\({}^{2}\)L, CDA and our DELT.

* We demonstrate empirically that the proposed method can generate optimized images at different distances from their initializations, to enlarge informativeness among generations.
* We conducted extensive experiments and ablations on various datasets across different scales to prove the effectiveness of the proposed approach3. 
## 2 Related Work

**Dataset Distillation.** Dataset distillation or condensation  focuses on creating a compact yet representative subset from a large original dataset. This enables more efficient model training while maintaining the ability to evaluate on the original test data distribution and achieve satisfactory performance. Previous works [1; 2; 3; 4; 5; 6; 7; 8; 9; 10] mainly designed how to better match the distribution between original data and generated data in a _batch-to-batch_ manner, such as the distribution of features , gradients , or the model weight trajectories [4; 8]. The primary optimization method used is bi-level optimization [16; 17], which involves optimizing model parameters and updating images simultaneously. For instance, using gradient matching, the process can be formulated as to minimize the gradient distance:

\[_{^{N d}}D(_{}( ;),_{}(;))=D(,;)\] (1)

where the function \(D(,)\) is defined as a distance metric such as MSE , \(\) denotes the model parameters, and \(_{}(;)\) represents the gradient, utilizing either the original dataset \(\) or its synthetic version \(\). \(N\) is the number of \(d\)-dimensional synthetic data. During distillation, the synthetic dataset \(\) and model \(\) are updated alternatively,

\[-_{}D(, ;),-_{}( ;),\] (2)

where \(\) and \(\) are learning rates designated for \(\) and \(\), respectively.

_Batch-to-global_ matching used in [11; 14; 12; 13] tracks the distribution of BN statistics derived from the original dataset for the local batch synthetic data, the formulation can be:

\[_{^{N d}}(_{l}\|_{l}()-_{l}^{}\|_{2}+_{l}\|_{l }^{2}()-_{l}^{}\|_{2})\] (3)

where \(l\) is the index of BN layer, \(_{l}()\) and \(_{l}^{2}()\) are mean and variance. \(_{l}^{}\) and \(_{l}^{}\) are running mean and running variance in the pre-trained model at \(l\)-th layer, which are globally counted. Fig. 3 illustrates the difference of _batch-to-batch_ and _batch-to-global_ matching mechanisms, where \(b\) represents a local batch in data \(\) and \(\).

**Initialization.** Weight initialization [20; 21; 22; 23] is pivotal in training neural networks, significantly influencing their optimization process. Proper initialization is essential for ensuring model convergence and mitigating issues such as gradient vanishing. Recently, weight selection  introduces a strategy for initializing smaller models by selecting a subset of weights from a pretrained larger model. This

Figure 3: _Batch-to-batch_ vs. _batch-to-global_ matching in dataset distillation. \(_{f}\) indicates weights are pretrained and frozen in this stage.

method facilitates the transfer of learned attributes from the pretrained weights, enhancing the smaller model's performance. Weight subcloning  involves manipulating the pretrained model to derive a correspondingly scaled-down version with equivalent initialization. This involves two main steps: initially, it applies a neuron importance ranking to reduce the embedding dimension per layer within the pretrained model. Subsequently, it eliminates blocks from the transformer model to align with the layer count of the scaled-down network.

This work focuses on data initialization for generation processes. Few studies have examined this angle. While, PCA-K  appears to be the most relevant. It employs an initialization method that involves drawing samples from a distribution that accurately mirrors and is easily sampled from the training distribution. During training, it is possible to retrieve some details from the original image using the initial noisy sample, which at best provides a blurred representation of the original image.

## 3 Our Approach

**Preliminaries.** The objective of a regular dataset distillation task is to generate a compact synthetic dataset \(=\{(}_{1},}_{1})\),..., \(\{}_{||},}_{||}\}\}\) as a _student_ dataset that captures a substantial amount of the information from a larger labeled dataset \(=\{(_{1},_{1})\),..., \(\{_{||},_{||}\}\}\), which serves as the _teacher_ dataset. Here, \(}\) represents the soft label for the synthetic sample \(}\), and the size of \(\) is much smaller than \(\), yet it retains the essential information of the original dataset \(\). The learning goal using this distilled dataset is to train a post-validation model with parameters \(\):

\[_{}=}{}_{ }(),\] (4)

\[_{}()=_{(},}) }[(_{_{S}}(}),};)],\] (5)

where \(\) is a standard loss function such as soft cross-entropy and \(_{_{S}}\) represents the model.

The primary aim of dataset distillation is to produce synthetic data that ensures minimal performance difference between models trained on the synthetic dataset \(\) and those trained on the original dataset \(\) using validation data \(V\). The optimization procedure for generating \(\) is given by:

\[,||}{}(\{| (_{_{T}}(_{val}),_{val})-(_{ _{S}}(_{val}),_{val})|\}_{(_{val}, _{val})-V}).\] (6)

where \((_{val},_{val})\) are the sample and label pairs in the validation set of the real dataset \(\). The learning task then focuses on the <data, label> pairs within \(\), maintaining a balanced representation of distilled data across each class.

**Initialization.** Previous dataset distillation methods [11; 14; 12] on large-scale datasets like ImageNet-1K and 21K employ Gaussian noise by default for data initialization in the synthesis phase. However, Gaussian noise is random and lacks any semantic information. Intuitively, using real images provide a more meaningful and structured starting point, and this structured start can lead to quicker convergence during optimization because the initial data already contains useful features and patterns that are closer to the target distribution, which further

Figure 4: The proposed DELT learning procedure via a multi-round EarlyLate scheme.

Figure 5: Selection criteria with a teach ranker.

enhances realism, quality, and generalization of the synthesized images. As shown in Fig. 2 right subfigure, our generated images exhibit both diversity and a high degree of realism in some cases.

**Selection Criteria.** Here, we introduce how to select real image patches to initialize the synthetic images. In our final syntheses, a significant fraction of our data has been subject to limited optimization iterations, making effective initialization crucial. A proper initialization also dramatically minimizes the overall computational load required for the updating on data. Prior approach  has demonstrated that choosing representative data patches from the original dataset without training can yield favorable performance without any additional training. Our observation, however, underscores that applying iterative refinement to original patches can lead to markedly improved results. As illustrated in Fig. 1, our selection criterion is based on a pretrained teacher model as a ranker, we calculate all patches' probabilities and sort them as the initialization pool. Then, we choose lowest, medium, or highest probability patches as the initialization for our optimization.

**Diversity-driven IPC Concatenation Training.** As shown in Fig. 4, to further emphasize diversity and avoid potential distribution bias from initialization, we optimize the initialized images starting from different points. The motivation behind this design is that different data samples require varying numbers of iterations to converge which is similar to the early stopping idea . Importantly, as images become easier to predict with more updates by class labels, training primarily on easy data points can hinder model generalization. Therefore, our method enhances generalization by generating data samples with varying difficulty levels, acting as a regularizer by limiting the optimization process to a smaller volume of image pixel space. Previous work  studies how to perform early stopping training on different layers' weights of the model with progressive retraining to mitigate noisy labels. We are pioneering to study how to leverage early-late training when optimizing data. Moreover, we improve the efficiency of our approach by performing gradient updates in a single scan. Initially, we conduct a single gradient loop, continually introducing new data for distillation by concatenating them at different time stamps. Consequently, the \(M\) batch receives the synthetic images of all preceding batches, \(IPC_{0:Mk-1}\), as final generations. This process can be simplified as follows:

\[IPC_{0:Mk-1}=}_{0},}_{1},, }_{k-1},,}_{Mk-1}]}_{IPC_{0:Mk-1}\\ }}\] (7)

where \([}_{0},}_{1},,}_{Mk-1}]\) refers to the concatenation of the generated image. \(M\) is the number of batches, \(k\) is the number of generated images in each batch. We train these different batches at different starting points, each batch goes through a completed learning phase, but the total number of iterations varies. Then, the multiple IPCs of \(}\) are concatenated into a simple batch. Because of its early-late training property, we refer to this simple training scheme as Earlylate training.

**Training Procedure.** As illustrated in Fig. 4, our learning procedure is extremely simple using an incremental learning process: We split the total IPCs to be learned into multiple batches. The training begins with the first batch. Following a predefined number of iterations, the second batch commences its iterative training, and this process continues sequentially with subsequent batches. _Batch-to-global_ matching algorithm  of Eq. 3 has been utilized between each round.

## 4 Experiments

### Datasets and Results Details

We first run DELT on five standard benchmark tests including CIFAR-10 (10 classes) , Tiny-ImageNet (200 classes) , ImageNet-1K (1,000 classes)  and it variants of ImageNet (10 classes) , and ImageNet-100 (100 classes)  with performances reported in Table 1 and Table 2. The evaluation protocol is following prior works [15; 11]. We compare DELT to six baseline dataset distillation algorithms including Matching Training Trajectories (MTT) , Improved Distribution Matching (IDM) , TraIEqctory Matching with Constant Memory (TESLA) , Squeeze-Recover-Relabel (SRe\({}^{2}\)L) , Difficulty-Aligned Trajectory-Matching (DATM) , Realistic-Diverse-Efficient Dataset Distillation (RDED) . Following previous dataset distillation methods [2; 15; 11], we use ConvNet , ResNet-18/ResNet-101 , EfficientNet-B0 , MobileNet-V2 , MnasNet1_3 , and RegNet-Y-8GF , as our backbone for training or post-validation. All our experiments are conducted on 4 NVIDIA RTX 4090 GPUs.

As shown in Table 1, our approach establishes the new state-of-the-art accuracy in 13 out of 15 of the configurations on five datasets from small-scale CIFAR-10 to large-scale ImageNet-1K using relatively large backbone architecture of ResNet-101, in many cases with significant margins of improvement. The results using small-scale architecture ConvNet are shown in Table 2, our approach also achieves the state-of-the-art accuracy in 8 out of 12 of the configurations on four datasets.

### Cross-architecture generalization

An important characteristic of distilled datasets is their effectiveness in generalizing to novel training architectures. In this context, we assess the transferability of DELT's distilled datasets tailored for ImageNet-1K with 10 images per class. Following previous studies [11; 15], we test our models using five distinct architectures: ResNet-18 , MobileNet-V2 , MnasNet1_3 , EfficientNet-B0 , and RegNet-Y-8GF . As shown in Table 4, our proposed approach demonstrates significant better performance than other competitive methods on all these architectures.

### Ablation Study

**Mosaic splicing pattern.** Mosaic stitching method  in RDED selects four crops from the train set as the optimal hyper-parameter, and puts the contents of the four crops into a synthetic image that is directly used for post-validation. In this work, considering that we use different difficulty levels of

    & &  &  & MobileNet-v2 \\  Dataset & IPC & SRe\({}^{2}\)L  & RDED  & Ours & SRe\({}^{2}\)L  & RDED  & Ours & Ours \\   & 1 & \(16.6 0.9\) & \(22.9 0.4\) & \(\) & \(13.7 0.2\) & \(18.7 0.1\) & \(\) & \(\) \\  & 10 & \(29.3 0.5\) & \(37.1 0.3\) & \(\) & \(24.3 0.6\) & \(33.7 0.3\) & \(\) & \(\) \\  & 50 & \(45.0 0.7\) & \(62.1 0.1\) & \(\) & \(34.9 0.1\) & \(51.6 0.4\) & \(\) & \(\) \\   & 1 & \(19.1 1.1\) & \(\) & \(24.1 1.8\) & \(15.8 0.6\) & \(\) & \(19.4 1.7\) & \(\) \\  & 10 & \(29.4 3.0\) & \(61.4 0.4\) & \(\) & \(23.4 0.8\) & \(54.0 0.4\) & \(\) & \(\) \\  & 50 & \(40.9 0.3\) & \(80.4 0.4\) & \(\) & \(36.5 0.7\) & \(75.0 1.2\) & \(\) & \(\) \\   & 1 & \(2.62 0.1\) & \(\) & \(9.3 0.5\) & \(1.9 0.1\) & \(3.8 0.1\) & \(\) & \(\) \\  & 10 & \(16.1 0.2\) & \(41.9 0.2\) & \(\) & \(14.6 1.1\) & \(22.9 3.3\) & \(\) & \(\) \\  & 50 & \(41.1 0.4\) & \(\) & \(55.7 0.5\) & \(42.5 0.2\) & \(41.2 0.4\) & \(\) & \(\) \\   & 10 & \(9.5 0.4\) & \(\) & \(28.2 1.5\) & \(6.4 0.1\) & \(\) & \(22.4 3.3\) & \(\) \\  & 50 & \(27.0 0.4\) & \(61.6 0.1\) & \(\) & \(25.7 0.3\) & \(66.0 0.6\) & \(70.8 2.3\) & \(\) \\  & 100 & - & \(74.5 0.4\) & \(\) & - & \(73.5 0.8\) & \(\) & \(\) \\   & 10 & \(21.3 0.6\) & \(42.0 0.1\) & \(\) & \(30.9 0.1\) & \(48.3 1.0\) & \(\) & \(\) \\  & 50 & \(46.8 0.2\) & \(56.5 0.1\) & \(\) & \(60.8 0.5\) & \(61.2 0.4\) & \(\) & \(\) \\   & 100 & \(52.8 0.3\) & \(59.8 0.1\) & \(\) & \(62.8 0.2\) & - & \(\) & \(\) \\   

Table 1: Comparison with SOTA dataset distillation methods using relatively large-scale backbones on five benchmarks across different scales. MobileNet-v2 is modified to match the low resolutions of CIFAR-10 and Tiny-ImageNet following . Due to the table space limitation, some other methods that are weaker than RDED are not listed, such as CDA and G-VBSM. Since IPC 1 is not applicable to use \(\) strategy and the single image in each class is optimized with a constant iteration.

    & &  \\  Dataset & IPC & MTT  & IDM  & TESLA  & DATM  & RDED  & Ours \\   & 1 & \(\) & - & - & - & \(33.8 0.8\) & \(29.8 1.4\) \\  & 10 & \(63.0 1.3\) & - & - & - & \(\) & \(51.7 1.2\) \\  & 50 & - & - & - & - & \(83.8 0.2\) & \(\) \\   & 1 & \(8.8 0.3\) & \(10.1 0.2\) & - & \(\) & \(12.0 0.1\) & \(12.4 0.8\) \\  & 10 & \(23.2 0.2\) & \(21.9 0.3\) & - & \(31.1 0.3\) & \(39.6 0.1\) & \(\) \\  & 50 & \(28.0 0.3\) & \(27.7 0.3\) & - & \(39.7 0.3\) & \(47.6 0.2\) & \(\) \\   & 10 & - & \(17.1 0.6\) & - & - & \(\) & \(24.7 1.5\) \\  & 50 & - & \(26.3 0.4\) & - & - & \(50.2 0.

selection for initialization, we examine different strategies of the Mosaic splicing patterns, including \(1 1\), \(2 2\), \(3 3\), \(4 4\), and \(5 5\) patches, as illustrated in Fig. 11. The ablation results are shown in Table 3, it can be observed that \(1 1\) achieves the best accuracy.

**Initialization.** We examine how different initialization strategies affect final performance, including: choosing lowest probability crops, medium probability crops and highest probability crops. Our results are shown in Table 3. Overall, the performance gap between different strategies is not significant, and selecting the medium probability crops as the initialization achieves the best accuracy.

**Optimization iterations.** We examine two types of optimization iterations: maximum iteration (MI) for the earliest batch training and round iteration (RI). MI presents the number of optimization iterations that the earliest batch goes through. RI represents the number of iterations used for each round in Fig. 4. It essentially indicates the iteration gap between the optimization of two adjacent batches. As shown in Table 3, we test MI values of 1K, 2K, and 4K, using 500 and 1K iterations for each RI. Note that when MI is set to 1K, it is not feasible to use 1K as RI. The results show that 4K (same as [11; 12]) MI and 500 RI achieves the best accuracy.

**Early-only vs. EarlyLate.** Early-only is equivalent to using constant MI to optimize each image. The method will transform to baseline _batch-to-global_ matching of CDA  + real image initialization. Our results in Table 3 clearly show that the EarlyLate training bring a significant improvement on final performance. More importantly, this strategy is the key factor in enhancing generation diversity.

**Real image stitching vs. Minimax diffusion vs. Ours.** We further compare the performance of our approach with real image stitching  and diffusion generation . The results are presented in Table 3d. While the first two methods produce more realistic images, each image contains limited information. In contrast, our method achieves the best final performance.

### Computational Analysis

For image optimization-based methods like SRE\({}^{2}\)L and CDA, the total computational cost is calculated as \(N T\), where \(N\) is the MI. In our EarlyLate scheme, the first batch images undergo \(T_{1}\) iterations (where \(T_{1}=T\)). Subsequent batches are processed with progressively fewer iterations, such as \(T_{2}\) (\(T_{2}=T_{1}-\)) for the next set, and so forth. The iterations for the final batch are reduced to RI which is \(1/j\) of the standard count (where \(j=4\) or \(8\) in our ablation), the total number of our optimization iterations required is \(N T-\), which is roughly \(2/3\) of prior _batch-to-global_ matching methods. Our real time consumptions for data generation are shown in Table 5, note that the smaller the dataset like CIFAR, the more time is spent on loading and processing the data, rather than training.

### Visualization of DELT

Fig. 7 illustrates a comprehensive visual comparison between randomly selected synthetic images from our distilled dataset and those from the real image patches , MinimaxDiffusion , MTT , IDC , SRe\({}^{2}\)L , SCDD , CDA  and G-VBSM  distilled data. It can be observed that

Figure 6: Mosaic splicing patterns on ImageNet-1K using real image patches as the initialization. In each block, the left column is the starting real image initialized samples and right is the final optimized syntheses. From top to bottom are images generated by early training and late training.

the images generated by each method have their own characteristics. MinimaxDiffusion leverages the diffusion model to synthesize images which is close to the real ones. However, as in our above ablation, both real and diffusion-generated data are inferior to ours. MTT results show noticeable artifacts and distortions, the objects in all images are located in the middle of the generations, the diversity is limited. IDC results also show distorted and less recognizable dog images, but diversity is increased. SRe\({}^{2}\)L exhibits some dog features but with significant distortions and similar simple background. SCDD shows more recognizable dog features but still the color is simple and monochromatic, the same situation happens in CDA. G-VBSM shows more colorful patterns, possibly due to recovery from multiple different networks, but all generations are in the same pattern and the diversity is not large. Our approach's synthetic images exhibit a higher degree of diversity, including both compressed distorted images from long-optimized initializations and clear, recognizable dog images from short-optimized initializations, a unique capability not present in other methods.

### Application I: Data-free Network Pruning

Our distilled dataset acts as a multifunctional training tool and boosts the adaptability for diverse downstream applications. We validate its utility in the scenario of data-free network pruning . Table 6 shows the applicability of our dataset in this task when pruning 50% weights, where it significantly surpasses previous methods such as SRe\({}^{2}\)L and RDED under IPC 10 and 50.

Table 4: **Cross-architecture generalization**. Results are evaluated on IPC 10.

Table 3: **Ablation experiments** on various aspects of our framework with ResNet-18 on ImageNet-1K.

Table 5: **Actual computational consumption and analysis** (hours under IPC 50) in data synthesis with image optimization-based methods on a single NVIDIA 4090 GPU. “RI” represents _round iterations_. A total 4K iterations are used for all methods and datasets to ensure fair comparisons.

### Application II: Continual Learning

We examine the effectiveness of DELT generated images in the continual learning scenario. Following the setup in prior studies [11; 6], we perform 100-step class-incremental experiments on ImageNet-1K, comparing our results with the baselines G-VBSM and SRe\({}^{2}\)L. As shown in Fig. 8, our DELT distilled dataset significantly outperforms G-VBSM, with an average improvement of about 10% in 100-step class-incremental learning task. This highlights the significant benefits of deploying DELT, particularly in mitigating the challenges of continual learning.

## 5 Conclusion

We have introduced a new training strategy, EarlyLate, to improve image diversity in _batch-to-global_ matching scenarios for dataset distillation. The proposed approach organizes predefined IPC samples into smaller, manageable subtasks and utilizes local optimizations. This strategy helps in refining each subset into distributions characteristic of different phases, thereby mitigating the homogeneity typically caused by a singular optimization process. The images refined through this method exhibit robust generalization across the entire task. We have extensively evaluated this approach on CIFAR-10 and 100, Tiny-ImageNet, ImageNet-1K, and its variants. Our empirical findings indicate that our approach significantly outperforms prior state-of-the-art methods across various IPC configurations.

**Limitations.** Our method effectively avoids the issue of insufficient data diversity generated by _batch-to-global_ methods and reduces the computational cost of the generation process. However, there is still a performance gap when training the model on our generated data compared to training on the original dataset. Additionally, our short-optimized data exhibits similar semantic information to the original images, which may potentially leak the privacy of the original dataset.

    & SRe\({}^{2}\)L  & RDED  & Ours \\  IPC 10 & 12.5 & 13.2 & **17.9\({}_{(+4.7)}\)** \\ IPC 50 & 31.7 & 42.8 & **44.8\({}_{(+2.0)}\)** \\   

Table 6: Accuracy of data-free network pruning using slimming  on VGG11-BN .

Figure 8: Continual learning results.

Figure 7: Distilled dataset visualization compared with other image optimization-based methods.