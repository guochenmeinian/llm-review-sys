# Bayesian Optimization over Bounded Domains with Beta Product Kernels

Huy Hoang Nguyen\({}^{}\)   Han Zhou\({}^{}\)   Matthew B. Blaschko\({}^{}\)   Aleksei Tiulpin\({}^{}\)

\({}^{}\)Research Unit of Health Sciences and Technology, University of Oulu, Oulu, Finland

\({}^{}\)Dept. ESAT, Center for Processing Speech and Images, KU Leuven, Leuven, Belgium

{huy.nguyen,aleksei.tiulpin}@oulu.fi  {han.zhou,matthew.blaschko}@esat.kuleuven.be

Equal last author

###### Abstract

Bayesian Optimization with Gaussian Process (GP) and Matern and Radial Basis Function (RBF) covariance functions is commonly used to optimize black-box functions. The Matern and the RBF kernels do not make any assumptions about the domain of the function, which may limit their applicability in bounded domains. To address the limitation issue, we introduce a non-stationary Beta Unit Hyper-Cube (BUC) kernel, which is induced by a product of Beta distribution density functions, and allows to model functions on bounded domains. To provide theoretical insights, we provide analyses of information gain and cumulative regret bounds when using the GP Upper Confidence Bound (GP-UCB) algorithm with the BUC kernel. Our experiments show that the BUC kernel consistently outperforms the well-known Matern and RBF kernels in different problems, including synthetic function optimization and the compression of vision and language models.

## 1 Introduction

Bayesian Optimization (BO) is a theoretically grounded strategy for sequential optimization of noisy and black-box functions with costly evaluations. A surrogate model, which approximates the objective function and guides the search process is at the core of BO. A Gaussian Process (GP) is frequently employed here due to its flexibility, capability to quantify uncertainty, and inject priors through covariance functions (interchangeably called kernels). A GP \(f((),K(,^{}))\) is specified by its mean \(()=[f()]\) and covariance function \(K(,^{})=[(f()-())(f (^{})-(^{}))]\). The choice of kernel plays a critical role in encoding prior beliefs about the characteristics of the target function. Among various options, Matern and Radical Basis Function (RBF) are frequently chosen kernels for a wide range of optimization problems due to their flexibility (Pedregosa et al., 2011; Head et al., 2018; Gardner et al., 2018)1. The Matern kernel is expressed as (Rasmussen, 2003)

\[K_{}(r)=}{()}()^{}K_{}(),\] (1)

where \(r=\|-^{}\|_{2}\), \(>0\) is a smoothness parameter, \(\) is a positive length scale, \(()\) is the Gamma function, and \(K_{}\) is a modified Bessel function (Abramowitz and Stegun, 1968). When \(\), the Matern kernel is equivalent to the RBF kernel, formulated as

\[K_{}(r)=(-}{2^{2}}).\] (2)The Matern and RBF kernels are defined on unbounded domains; however, in many practical applications, a function of choice may be defined on a bounded domain, which may result in sub-optimal performance.

In this work, we propose a novel non-stationary kernel BUC, named after Beta distribution-based Unit Hyper-Cube, which is specifically designed for modeling functions over bounded domains. Our kernel is constructed from a product of multiple Beta distribution density functions, each of which naturally represents a wide range of functions defined on \(\). We theoretically derive bounds for the maximum information gain and the cumulative regret when optimizing with the GP Upper Confidence Bound (GP-UCB) algorithm. Our results show that BUC _consistently_ outperforms the RBF and Matern kernels across various tasks, including synthetic function optimization and deep learning-based vision and language model compression.

## 2 Beta Distribution-based Unit HyperCube Kernel

### Definition

Let \(,^{}^{d}\) denote two random variables in a \(d\)-dimensional unit hypercube. We aim to develop some positive semi-definite function \(K:^{d}^{d}\). For that purpose, we introduce a function \(:^{d}(^{d})\), that is

\[(,)=_{i=1}^{d}_{h_{i}}(x_{i};s_{i}) =_{i=1}^{d}+_{i})}{(_{i}) (_{i})}s_{i}^{_{i}-1}(1-s_{i})^{_{i}-1},\] (3)

where \(x_{i}\) represents the mode of the \(i\)-th Beta distribution, \(_{i}=}{h_{i}}+1\), \(_{i}=}{h_{i}}+1\), \(h_{i}\) is the smoothing bandwidth of the \(i\)-th dimension, and \(=[s_{1},,s_{d}]^{}^{d}\) is the variables of the Beta distributions. Then, the BUC kernel is expressed as

\[K_{}(,^{})=_{^{d}}(,)(^{},)d=C_{} _{}_{i=1}^{d}g(s_{i})ds_{1} ds_{d},\] (4)

where

\[C=_{i=1}^{d}+_{i})}{(_{i}) (_{i})}^{}+_{i}^{})}{( _{i}^{})(_{i}^{})} 28.452756pt  28.452756ptg(s_{i})=s_{i}^{_{i}+_{i}^{}-2}(1-s_{i})^{ _{i}+_{i}^{}-2}.\] (5)

Based on the cumulative distribution function of the Beta distribution Beta(\(,\)), we have that

\[_{}s^{-1}(1-s)^{-1}ds=,\] (6)

each individual integral becomes

\[_{}g(s_{i})ds_{i}=+_{i}^{}-1) (_{i}+_{i}^{}-1)}{(_{i}+_{i}^{} +_{i}+_{i}^{}-2)}.\] (7)

Assume that \(s_{i}\)'s are independent of each other, the BUC kernel can be simplified to

\[K_{}(,^{})=C_{i=1}^{d}+_{i}^{}-1)(_{i}+_{i}^{}-1)}{ (_{i}+_{i}^{}+_{i}+_{i}^{}-2)}\] (8)

As \(_{i}+_{i}=_{i}^{}+_{i}^{}=}+2\), the kernel can be expressed as

\[K_{}(,^{})=^{d} (}+2)}{(}+2 )}}_{(h_{1},,h_{d})}_{i=1}^{d}+ _{i}^{}-1)(_{i}+_{i}^{}-1)}{(_{i })(_{i})(_{i}^{})(_{i}^{})}.\] (9)

We graphically compare the BUC kernel to the Matern kernel on the unit 1D domain in Figures 0(a) and 0(b). Whereas Matern is a stationary kernel with a constant diagonal, our proposed kernel is non-stationary.

### Bounds on Maximum Information Gain and Cumulative Regret

Consider a GP \(f(0,K_{}(,^{}))\) on the \(d\)-dimensional unit hypercube \(D=^{d}\). Assume that we use the Gaussian Process Upper Confidence Bound (GP-UCB) algorithm to find the optimal solution \(^{*}=_{^{d}}f()\). Here, we aim to derive bounds of the _maximum information gain_\(_{T}\) and the corresponding _cumulative regret_\(R_{T}\) after \(T\) iterations. \(_{T}\) is defined as

\[_{T}=_{A D:|A|=T}(_{A},_{A}),\] (10)

where \(_{A}=[f()]_{ A}\), and \((_{A},_{A})\) is the information gain, defined as

\[(_{A},_{A})=(_{A})-( _{A}_{A}),\] (11)

where \(()\) is the Shannon entropy. The maximum information gain can also be expressed as \((_{A},_{A})=|+^{- 2}_{A}|\), where \(_{A}=[K(,^{})]_{,^{ } A}\)(Cover, 1999; Srinivas et al., 2009). The cumulative regret is defined as \(R_{T}=_{t=1}^{T}f(_{t})-f(^{*})\). We derive the bound of \(_{T}\) as \((d(T2^{3d-}h^{-}))\) in Theorem 1, and the bound of the cumulative regret w.r.t. the BUC kernel in Theorem 2.

**Theorem 1**.: _The maximum information gain \(_{T}\) of the BUC kernel is bounded by \((dT)\) where \(=|3 2-+|\)._

Proof.: We directly bound \((_{A},_{A})=|+^{- 2}_{A}||(+^{-2} _{A})|\) using the Hadamard's inequality. \(K_{}(,)\) can bounded by \(2^{3d-}(+1)^{d}(+)^{}\) given that \((x+1)}{(2x+1)}=(x+1)}{2^{2} (x+)}\) and \(()^{})}{ (x+1)} 2, x 0\). 

**Theorem 2**.: _Let \(D=^{d}\) with \(d\), pick \((0,1)\), and define \(_{t}=2(t^{2}2^{2}/(3)+2d(t^{2}dbr)\). Running the GP-UCB with \(_{t}\) for a sample \(f\) of a GP with mean function zero and covariance function \(K_{}\), the cumulative regret is bounded as follows_

\[\{R_{T} T_{T}d}+2\; T 1 \} 1-,\]

_where \(C_{1}=8/(1+^{2})\)._

Proof.: Apply Theorem 1 and Theorem 2 of Srinivas et al. (2009). 

In Figure 0(c), we present the spectral decay analysis for the RBF, Matern, and BUC kernels. Our analysis demonstrates a strong correlation between the bandwidth parameter \(h\) and the eigenvalue decay rate of the BUC kernel. With \(h<1\), the BUC kernel shows a slower eigenvalue decay rate

Figure 1: (a-b) Covariance matrices of the Matern kernel and our BUC kernel on the unit 1D domain. (c) Eigenvalue decay rate comparison between the RBF, Matern, and BUC kernels.

compared to the RBF and Matern kernels, indicating its superior capacity to capture complex function behaviors on the unit hypercube. In addition, based on Theorem 4 of Srinivas et al. (2009), this slower decay rate suggests that the BUC kernel has a higher upper bound on the maximum information gain than the RBF and Matern kernels.

## 3 Experiments

Levy FunctionWe conducted experiments on the Levy function (Laguna and Marti, 2005). We utilized the GP-UCB algorithm for the minimization. We initially selected \(30\) data points using the Sobol's algorithm (Sobol', 1967; Owen, 1998), and performed the optimization in \(300\) iterations. We present the comparisons between the BUC kernel and the Matern kernel in Figure 1(a). In both cases of \(d=4\) and \(d=8\), our kernel converged more slowly during the early iterations but ultimately produced better results.

Vision and Language Model CompressionWe formulated the compression objective as \(_{^{d}}()+()\), where \(()\) is the error rate of the compressed model, and \(()\) is the compression rate compared to the original model. We utilized the LoSparse method (Li et al., 2023) to perform low-rank and sparse approximation. We compressed the vision classification model ViT (Dosovitskiy, 2020) on the ImageNet dataset (Deng et al., 2009), and the language model BERT-large (Devlin, 2018) on the SQuAD v1 (Rajpurkar et al., 2016). For both the models, we had \(d=72\). We randomly sampled \(5\) initial data points, and set \(T=30\). In each iteration, we trained each compressed ViT model for only one epoch, while the compressed BERT-large model was trained for \(256\) steps (less than one epoch). We repeated the experiments \(10\) times and reported the results in Figures 1(b) and 1(c). Accordingly, the experiments consistently indicates that the BUC kernel substantially outperformed the two well-known baseline kernels, RBF and Matern on both tasks. The detailed quantitative results in Table 1 show that our kernel significantly enhanced the compression rate while maintaining minor performance trade-offs.

## 4 Conclusion

We introduce a novel non-stationary kernel, called BUC, tailored specifically for BO on unit hyper-cubes. We then derive bounds on \(_{T}\) and \(R_{T}\) for optimization using the GP-UCB algorithm with the

Table 1: Quantitative results on vision and language model compression. ‘LR’ indicates the latency ratio between the original model and its compressed version. The latency measurements were conducted on an Nvidia GTX 2080 Ti.

Figure 2: Comparison between GP using the Matern kernel (\(=2.5\)), and our BUC kernel

BUC kernel. The experiments show that our kernel consistently outperforms the widely used RBF and Matern kernels across different optimization tasks.