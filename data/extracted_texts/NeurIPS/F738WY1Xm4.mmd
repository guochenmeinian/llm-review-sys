# Deep linear networks for regression are implicitly regularized towards flat minima

Pierre Marion

Institute of Mathematics

EPFL

Station Z, CH-1015 Lausanne, Switzerland

pierre.marion@epfl.ch &Lenaic Chizat

Institute of Mathematics

EPFL

Station Z, CH-1015 Lausanne, Switzerland

lenaic.chizat@epfl.ch

###### Abstract

The largest eigenvalue of the Hessian, or sharpness, of neural networks is a key quantity to understand their optimization dynamics. In this paper, we study the sharpness of deep linear networks for univariate regression. Minimizers can have arbitrarily large sharpness, but not an arbitrarily small one. Indeed, we show a lower bound on the sharpness of minimizers, which grows linearly with depth. We then study the properties of the minimizer found by gradient flow, which is the limit of gradient descent with vanishing learning rate. We show an _implicit regularization towards flat minima_: the sharpness of the minimizer is no more than a constant times the lower bound. The constant depends on the condition number of the data covariance matrix, but not on width or depth. This result is proven both for a _small-scale initialization_ and a _residual initialization_. Results of independent interest are shown in both cases. For small-scale initialization, we show that the learned weight matrices are approximately rank-one and that their singular vectors align. For residual initialization, convergence of the gradient flow for a Gaussian initialization of the residual network is proven. Numerical experiments illustrate our results and connect them to gradient descent with non-vanishing learning rate.

## 1 Introduction

Neural networks have intricate optimization dynamics due to the non-convexity of their objective. A key quantity to understand these dynamics is the largest eigenvalue of the Hessian or _sharpness_\(S()\) (see Section 3 for a formal definition), in particular because of its connection with the choice of learning rate \(\). Classical theory from convex optimization indicates that the sharpness should remain lower than \(2/\) to avoid divergence (Nesterov, 2018). The relevance of this point of view for deep learning has recently been questioned since neural networks have been shown to often operate at the _edge of stability_(Cohen et al., 2021), where the sharpness oscillates around \(2/\), while the loss still steadily decreases, albeit non-monotonically. Damian et al. (2023) explained the stability of gradient descent slightly above the \(2/\) threshold to be a general phenomenon for non-quadratic objectives, where the third-order derivatives of the loss induce a self-stabilization effect. They also show that, under appropriate assumptions, gradient descent on a risk \(R^{L}\) implicitly solves the constrained minimization problem

\[_{}R^{L}() S() \,.\] (1)

Trainability of neural networks initialized with a sharpness larger than \(2/\) is also studied by Lewkowycz et al. (2020), which describes a transient catapult regime, which lasts until the sharpness goes below \(2/\). These results beg the question of quantifying the largest learning rate that enables successful training of neural networks. For classification with linearly separable data and logistic loss,Wu et al. (2024) show that gradient descent converges for any learning rate. In this work, we address the case of deep linear networks for regression. As illustrated by Figure 0(a), the picture then differs from the classification case: **when the learning rate exceeds some critical value, the network fails to learn**. We further remark that this critical value does not seem to be related to the initial scale: when the learning rate is under the critical value, learning is successful for a wide range of initial scales. In Figure 0(b), we see that the large initialization scales correspond to initial sharpnesses well over the \(2/\) threshold, confirming that training is possible while initializing beyond the \(2/\) threshold.

To understand where the critical value for the learning rate comes from, **we characterize the sharpness of minimizers** of the empirical risk. We show that there exist minimizers with arbitrarily large sharpness, but _not_ with arbitrarily small sharpness. Indeed, the sharpness of any minimizer grows linearly with depth, as made precise next.

**Theorem 1**.: _Let \(X^{n d}\) be a design matrix and \(y^{n}\) a target. Then the minimal sharpness \(S_{}\) of any linear network \(x W_{L} W_{1}x\) of depth \(L\) that implements the optimal linear regressor \(w^{}^{d}\) satisfies_

\[2\|w^{}\|_{2}^{2-}La S_{} 2\|w^{ }\|_{2}^{2-}+(L-1)^{2}a^{2}}\,,\]

_where \(\) is the largest eigenvalue of the empirical covariance matrix \(:=X^{}X\), and \(a:=(w^{}/\|w^{}\|)^{}(w^{}/\|w^{}\|)\)._

We note that this bound is similar to a result of Mulayoff and Michaeli (2020), although we alleviate their assumption of data whiteness (\(=I\)). In particular, we do not assume that data covariance

Figure 1: Training a deep linear network on a univariate regression task with quadratic loss. The weight matrices are initialized as Gaussian random variables, whose standard deviation is the x-axis of plots 0(a) and 0(b). Experimental details are given in Appendix C.

matrix is full rank. Furthermore, our proof technique differs, since we do not require tensor algebra, and instead exhibit a direction in which the second derivative of the loss is large.

This result shows that it is not possible to find a minimizer of the empirical risk in regions of low sharpness. Combined with (1), this suggests an interpretation of the critical value for the learning rate: gradient descent should not be able to converge to a global minimizer as soon as

\[S_{}>>}( \|w^{}\|_{2}^{2-}La)^{-1}\,.\]

This is confirmed experimentally by Figure 2, which shows that the critical value of the learning rate matches our theoretical prediction. We note that this gives a quantitative answer to the observations of Lewkowycz et al. (2020), which shows the existence of a maximal architecture-dependent learning rate beyond which training fails. The dependence of learning rate on depth (namely, constant over depth) also matches other papers that study scaling of neural networks (Chizat and Netrapalli, 2024; Yang et al., 2024).

To deepen our understanding of the training dynamics, we aim at quantifying the sharpness of the minimizer found by gradient descent (when it succeeds): we know that it has to be larger than \(S_{}\), but is it close to \(S_{}\) or is it much larger? Inspecting Figure 0(b), we see that the answer empirically depends on the interplay between initialization scale and learning rate. For small initialization scale, the sharpness after training is equal to a value relatively close to \(S_{}\) and independent of the learning rate. As the initialization scale increases, the sharpness of the trained network also increases, and plateaus at the value \(2/\). The plateauing for large initialization scales can be explained by the edge of stability analysis (1), which upper bounds the sharpness of the minimizer by \(2/\) (see Figure 0(d)). However, this gives no insight on the value of the sharpness when the learning rate is sufficiently small so that the network does not enter the edge of stability regime (see Figure 0(c)).

In this paper, we study the limiting case for vanishing \(\), i.e., training with gradient flow. **As our main finding, we bound the sharpness of the minimizer found by gradient flow** in the case of overdetermined regression, meaning that the sample size \(n\) is larger that the data dimension \(d\) and the data empirical covariance matrix is nonsingular. In this case, we prove that the ratio between the sharpness after training and \(S_{}\) is less than a constant depending mainly on the condition number of the empirical covariance matrix \(\). In particular, the ratio does not depend on the width or depth of the network. This shows an **implicit regularization towards flat minima**. Note that the phenomenon we exhibit is different from the well-studied implicit regularization towards flat minima caused by stochasticity in SGD (Keskar et al., 2017; Smith and Le, 2018; Blanc et al., 2020; Damian et al., 2021; Li et al., 2022; Liu et al., 2023). In the present study, the dynamics are purely deterministic, and the low sharpness is due to the fact that the weight matrices found by gradient flow have (approximately) the same norm across layers, and that this norm is (approximately) the smallest possible one so that the network can minimize the risk.

Figure 2: Squared distance of the trained network to the empirical risk minimizer, for various learning rates and depth. For each depth, learning succeeds if the learning rate is below a threshold, which corresponds to the theoretical value \(}(\|w^{}\|_{2}^{2-}La)^{-1}\) of Theorem 1 (dashed vertical line).

Link with generalization.Flatter minima have been found to generalize better (Hochreiter and Schmidhuber, 1997; Jastrzebski et al., 2017; Keskar et al., 2017; Jiang et al., 2020), although the picture is subtle (Dinh et al., 2017; Neyshabur et al., 2017; Andriushchenko et al., 2023). However, in this paper, we focus on the link of sharpness with (non-convex) optimization dynamics, rather than with generalization abilities. Indeed, our implicit regularization result holds in the overdetermined setting, where all minimizers of the empirical risk implement the same function thus have the same generalization error, although they differ in parameter space and in particular have different sharpnesses. We leave to future work extensions to more complex settings where our approach may link sharpness and generalization, beginning with deep linear networks for underdetermined regression. We refer to Appendix C for more comments on the link with generalization.

We investigate two initialization schemes, quite different in nature: small-scale initialization and residual initialization. Let us explain both settings, by presenting our approach, contributions of independent interest, and related works.

Small-scale initialization.In this setting, we consider an initialization of the weight matrices \(W_{k}\) with i.i.d. Gaussian entries of small variance. Initialization scale is known to play a key role in training of neural networks: small-scale initialization corresponds to the "feature learning" regime where the weights change significantly during training, by opposition to the "lazy" regime (see, e.g., Chizat et al., 2019). We show convergence of the empirical risk to zero, then **characterize the structure of the minimizer found by gradient flow**, a novel result of interest independently of its connection with sharpness. At convergence, **the weight matrices are close to being rank-one**, in the sense that all their singular values but the largest one are small. Furthermore, the first left singular vector of any weight matrix aligns with the first right singular vector of the next weight matrix. From this specific structure, we deduce our bound on the sharpness of the trained network. The bound is illustrated on Figure 0(b), where our lower and upper theoretical bounds on the sharpness are plotted as dotted black lines. We observe that the sharpness after training, when starting from a small-scale initialization, is indeed situated between the black lines.

The result and proof extend the study by Ji and Telgarsky (2020) for classification, although the parameters do not diverge to infinity contrarily to the classification case, thus requiring a finer control of the distance to the rank-one aligned solution. In regression, implicit regularization towards low-rank structure in parameter space was also studied by Saxe et al. (2014); Lampinen and Ganguli (2019); Gidel et al. (2019); Saxe et al. (2019); Varre et al. (2023) for two-layer neural networks and in Timor et al. (2023) for deep ReLU networks. This latter paper assumes convergence of the optimization algorithm and show that a solution with minimal \(_{2}\)-norm has to be low-rank. In our linear setting, we instead show convergence. As detailed below, we impose mild requirements on the structure on the initialization beyond its scale; they are satisfied for instance by initializing one weight matrix to zero and the others with i.i.d. Gaussian entries. In particular, we do not require the so-called "zero-balanced initialization" as is common in the literature on deep linear networks (see, e.g., Arora et al., 2018; Advani et al., 2020; Li et al., 2021) or a deficient-margin initialization as in Arora et al. (2019). Finally, the limit when initialization scale tends to zero has been described for deep linear networks in Jacot et al. (2021) for multivariate regression. It consists in a saddle-to-saddle dynamics, where the rank of the weight matrices increases after each saddle. The present study considers instead a non-asymptotic setting where the initialization scale is small but nonzero, and shows convergence to a rank-one limit because univariate and not multivariate regression is considered.

We note that sharpness at initialization can be made arbitrarily small, since it is controlled by the initialization scale, while sharpness after training scales as \((L)\). This therefore showcases an **example of sharpening during training** (although we make no statement on monotonicity).

Residual initialization.Architectures of deep neural networks used in practice often present residual connections, which stabilize training (He et al., 2015). A simple non-linear residual architecture writes \(h_{k+1}=h_{k}+(N_{k}h_{k})\). Removing the non-linearity, we get \(h_{k+1}=(I+N_{k})h_{k}\), which prompts us to consider deep linear networks with square weight matrices \(W_{k}^{d d}\) that are initialized as

\[W_{k}(0)=I+}N_{k}\,,\] (2)

where the \(N_{k}^{d d}\) are filled with i.i.d. standard Gaussian entries and \(s 0\) is a hyperparameter tuning the initialization scale. The scaling of the residual branch in \(1/\) is common and correspondsfor instance to the so-called Glorot and He initializations respectively from Glorot and Bengio (2010) and He et al. (2015). It ensures that the variance of the residual branch is independent of the width \(d\). Similarly, as studied in Arpit et al. (2019); Marion et al. (2022), the scaling in \(1/\) is the right one so that the initialization noise neither blows up nor decays when \(L\). Note that, in practice, this scaling factor is often replaced by batch normalization (Ioffe and Szegedy, 2015), which has been shown empirically to have a similar effect to \(1/\) scaling (De and Smith, 2020).

In this setting which we refer to as _residual initialization_, we show global convergence of the empirical risk. To our knowledge, **it is the first time that convergence is proven for a standard Gaussian initialization of the residual network outside the large width \(d n\) regime**. Previous works considered either an identity initialization (Bartlett et al., 2018; Arora et al., 2019; Zou et al., 2020) or a smooth initialization such that \(\|W_{k+1}(0)-W_{k}(0)\|_{F}=(1/L)\)(Sander et al., 2022; Marion et al., 2024). The extension to standard Gaussian initialization leverages sharp bounds for the singular values of the product of \(W_{k}(0)\). Our main assumption, in alignment with the literature, is that the risk at initialization should not be larger than a constant (depending on \(\) and \(s\)).

We then show that the weights after training can be written

\[W_{k}()=I+}N_{k}+_{k}\,,\]

where the Frobenius norm of the \(_{k}\) is bounded by a constant (depending only on \(s\)). This structure finally enables us to bound the sharpness of the trained network. Remark that, to connect this analysis with our discussion of sharpness in univariate regression, we add to the residual network a final fixed projection vector \(p^{d}\), so that our neural network writes \(x p^{}W_{L} W_{1}x\), but the proof of convergence also holds without this projection.

Experimentally, we give in Appendix C plots in the residual case that are qualitatively similar to Figure 1. The main difference is that the initial sharpness is less sensitive to the initialization scale \(s\).

Organization of the paper.Section 2 details our setting and notations. Section 3 studies the sharpness of minimizers of the empirical risk and proves Theorem 1. Dynamics of gradient flow starting from small-scale initialization and residual initialization are respectively presented in Sections 4 and 5. The Appendix contains proofs, additional plots, experimental details, and related works.

## 2 Setting

Model.We consider linear networks of depth \(L\) from \(^{d}\) to \(\), which are linear maps

\[x p^{}W_{L} W_{1}x\] (3)

parameterized by weight matrices \(W_{1},,W_{L}\), where \(W_{k}^{d_{k} d_{k-1}}\), \(d_{0}=d\) and \(p^{d_{L}}\) is a fixed vector. This definition includes both fully-connected networks by setting \(d_{L}=1\) and \(p=1\), and residual networks by setting \(d_{1}==d_{L}=d\), the \(W_{k}\) close to the identity, and \(p\) to some fixed (potentially random) vector in \(^{d}\). We let \(=(W_{1},,W_{L})\) and \(w_{}=W_{1}^{} W_{L}^{}p\). Given \(X^{n d}\) a design matrix and \(y^{n}\) a target, we consider the empirical risk for regression

\[R^{L}():=\|y-XW_{1}^{} W_{L}^{}p\|_{2}^{2}= \|y-Xw_{}\|_{2}^{2}=:R^{1}(w_{})\,.\]

The notations \(R^{L}()\) and \(R^{1}(w_{})\) may seem redundant, but are actually practical to define gradients of the risk both with respect to a single matrix \(W_{k}\) and to the product \(w_{}\). Let \(:=X^{}X\) the empirical covariance matrix, and \(\) and \(\) respectively its smallest _nonzero_ and largest eigenvalue. For now, we do not assume that \(\) is full rank, so there is more than one solution to the regression problem \(_{w_{}^{d}}R^{1}(w_{})\). We denote by \(w^{}^{d}\) the smallest norm solution, and we let \(R_{}=R^{1}(w^{})\) the minimum of \(R^{1}\) (and \(R^{L}\)). In all the following, we assume that \(w^{} 0\). Note that, due to the overparameterization induced by the neural network, there exists an infinity of parameterizations of the mapping \(x w^{}x\).

Gradient flow.We consider that the neural network is trained by gradient flow on the empirical risk \(R^{L}\), that is, the parameters evolve according to the ordinary differential equation

\[}{dt}=-}{ W_{k}}\,.\] (4)An application of the chain rule gives

\[_{k}R^{L}():=}{ W_{k}}=W_{k+1}^{ } W_{L}^{}p R^{1}(w_{})^{}W_{1}^{} W _{k-1}^{}\,,\] (5)

with

\[ R^{1}(w_{})=-X^{}(y-Xw_{})=-X^{}X(w^{}-w_{})\,.\] (6)

where the second equality is a consequence of \( R^{1}(w^{})=0\).

Notations.For \(k\{1, L\}\), we denote respectively by \(_{k}\), \(u_{k}\), and \(v_{k}\) the first singular value (which equals the \(_{2}\) operator norm), the first left singular vector and the first right singular vector of \(W_{k}\). The \(_{2}\) operator norm of a matrix \(M\) is denoted by \(\|M\|_{2}\) and its Frobenius norm by \(\|M\|_{F}\). Its smallest singular value is denoted by \(_{}(M)\). For a vector \(v\), we let \(\|v\|_{2}\) its Euclidean norm. Finally, for quantities that depend on the gradient flow time \(t\), we omit for concision their explicit dependence on \(t\) when it is dispensable.

## 3 Estimates of the minimal sharpness of minimizers

To define the sharpness of the model, we let \(D=_{k=1}^{L}d_{k}d_{k-1}\) and identify the space of parameters with \(^{D}\), which amounts to stacking all the entries of the weight matrices in a large \(D\)-dimensional vector. Then the norm of the parameters seen as a \(D\)-dimensional vector can be related to the Frobenius norm of the matrices by

\[\|\|_{2}^{2}=_{k=1}^{L}\|W_{k}\|_{F}^{2}\,.\]

This allows us to define the Hessian of the risk \(H:^{D}^{D D}\), and we denote by \(S()\) its largest eigenvalue for some parameters \(\), or sharpness. We note that there exists alternative definitions of the sharpness, but this one is the most relevant to study optimization dynamics. Our results are specific to this definition. The following result gives estimates on the minimal sharpness of minimizers of the empirical risk (and is a strictly stronger statement than Theorem 1).

**Theorem 2**.: _Let \(S_{}=_{R^{L}()}S( )\) and \(a:=(w^{}/\|w^{}\|)^{}(w^{}/\|w^{}\|)\). We have_

\[S_{} 2a\|w^{}\|_{2}^{2-}\|p\|^{}_{ k=1}^{L}\|_{F}}\,,\]

_and_

\[2\|w^{}\|_{2}^{2-}\|p\|^{}La S_{}  2\|w^{}\|_{2}^{2-}\|p\|^{}+(L-1)^{2}a^{2}}\,.\]

The proof of the result relies on the following variational characterization of the sharpness as the direction of the highest change of the gradient

\[S()^{2}=_{ 0}_{\|W_{k}-_{k}\|_{F} }^{L}\|_{k}R^{L}()-_{k}R^{L}(})\|_{F}^{2}}{_{k=1}^{L}\|W_{k}-_{k}\|_{F}^{2}}\,.\] (7)

Lower bounds are proven by considering well-chosen directions \(_{k}\), for instance \(_{k}=(1+_{k})W_{k}\) for the first lower bound. The upper bound is proven by constructing a specific minimizer and bounding its sharpness. The first lower bound shows that the sharpness of minimizers can be arbitrarily high if one of the matrices has a low-enough norm. More precisely, take any minimizer \(=(W_{1}, W_{L})\) and consider \(^{C}=(CW_{1},W_{2}/C,W_{3},,W_{L})\), for some \(C>0\). Then \(^{C}\) is still a minimizer, and

\[S(^{C})\|_{2}^{2-}\|p\|^{ }}{\|W_{2}/C\|_{F}}=\|_{2}^{2-}\|p\|^{ }C}{\|W_{2}\|_{F}}.\]

The fact that a reparameterization of the network can lead to arbitrarily high sharpness is consistent with a similar result by Dinh et al. (2017) for two-layer ReLU networks.

Note that the first lower bound is arbitrarily small for minimizers such that the norms \(\|W_{k}\|_{F}\) are large. On the contrary, the second lower bound is uniform and asymptotically matches the upper bound when \(L\): we have \(S_{} 2\|w^{*}\|_{2}^{2}La\).

As already noted by Mulayoff and Michaeli (2020), the intuition behind the linear scaling of the bound with depth can be seen from a one-dimensional example: take \(f(x_{1},,x_{L})=_{k=1}^{L}x_{i}\). Then an easy computation shows that the sharpness of \(f\) at \((1,,1)\) is equal to \(L-1\). This showcases a simple example where the output of \(f\) is constant with \(L\) while its sharpness grows linearly with \(L\).

## 4 Analysis of gradient flow from small initialization

In this section, we characterize the structure of the minimizer found by gradient flow starting from a small-scale initialization. The proof is inspired by the one of Ji and Telgarsky (2020) for linearly-separable classification, with a finer analysis due to the finiteness of minimizers in our setting.

We consider the model (3) with \(d_{L}=1\) and \(p=1\). Denoting by \(R_{0}\) the empirical risk when the weight matrices are equal to zero, we can state our assumption on the initialization.

\((A_{1})\): The initialization satisfies that \(R^{L}((0)) R_{0}\) and \( R^{L}((0)) 0\).

It is satisfied for instance if one of the weight matrices \(W_{k}\) is equal to zero at initialization while the others have i.i.d. Gaussian entries, so that \(R^{L}((0))=R_{0}\) and \(_{k}R^{L}((0)) 0\) (almost surely).

Linear networks trained by gradient flow possess the following remarkable property (Arora et al., 2018) that shall be useful in the remainder.

**Lemma 1**.: _For any time \(t 0\) and any \(k\{1,,L-1\}\),_

\[W_{k+1}^{}(t)W_{k+1}(t)-W_{k+1}^{}(0)W_{k+1}(0)=W_{k}(t)W_{k}^{}(t )-W_{k}(0)W_{k}^{}(0)\,.\]

Define now

\[:=3_{1 k L}\|W_{k}(0)\|_{F}^{2}+2_{k=1}^ {L-1}\|W_{k}(0)W_{k}^{}(0)-W_{k+1}^{}(0)W_{k+1}(0)\|_{2}\,.\]

Note that \(\) only depends on the initialization, and can be made arbitrarily small by scaling down the initialization. The following key lemma connects throughout training three key quantities to \(\).

**Lemma 2**.: _The parameters following gradient flow satisfy for any \(t 0\) that_

* _for_ \(k\{1,,L\}\)_,_ \[\|W_{k}(t)\|_{F}^{2}-\|W_{k}(t)\|_{2}^{2}\,,\]
* _for_ \(j,k\{1,,L\}\)_,_ \[|_{k}^{2}(t)-_{j}^{2}(t)|\,,\]
* _for_ \(k\{1,,L-1\}\)_,_ \[ v_{k+1}(t),u_{k}(t)^{2} 1-^{2}(t)}\,.\]

The first identity of the Lemma bounds the sum of the squared singular values of \(W_{k}(t)\), except the largest one. In other words, it quantifies how close \(W_{k}(t)\) is to the rank-one approximation given by the first term in its singular value decomposition. The second statement bounds the distance between the spectral norms of any two weight matrices. The last bound quantifies the alignment between the first left singular vector of \(W_{k}(t)\) and the first right singular vector of \(W_{k+1}(t)\). In particular, if \(\) is small and \(_{k+1}^{2}(t)\) is of order \(1\), then \(v_{k+1}(t)\) and \(u_{k}(t)\) are nearly aligned.

We next use this Lemma to show that the neural network satisfies a Polyak-Lojasiewicz (PL) condition, which is one of the main tools to study non-convex optimization dynamics (Rebjock and Boumal, 2023). A well-known result, recalled in Appendix A for completeness, shows that this implies exponential convergence of the gradient flow to a minimizer \(^{}\) of the empirical risk.

**Theorem 3**.: _Under Assumption \((A_{1})\), the network satisfies the PL condition for \(t 1\), in the sense that there exists some \(>0\) such that, for \(t 1\),_

\[_{k=1}^{L}\|_{k}R^{L}((t))\|_{F}^{2} (R^{L}((t))-R_{})\,.\]The proof leverages the structure of the gradient of the risk with respect to the first weight matrix, which relies on the linearity of the neural network and the fact that we consider a univariate output. More precisely, recall that, by (5),

\[_{1}R^{L}((t))=(t) W_{2}(t))^{}}_{d _{1} 1}(w_{}(t))^{}}_{1 d_{0}}\,.\]

Therefore the Frobenius norm of the gradient decomposes as the product of two vector norms

\[_{1}R^{L}((t))_{F}^{2} =\|W_{L}(t) W_{2}(t)\|_{2}^{2}\| R^{1}(w_{}( t))\|_{2}^{2}\] \[ 4\|W_{L}(t) W_{2}(t)\|_{2}^{2}(R^{L}( (t))-R_{})\,,\]

where the lower bound unfolds from a straightforward computation. The delicate step is to lower bound \(\|W_{L}(t) W_{2}(t)\|_{2}\), which we approach by distinguishing depending on the magnitude of \(_{1}(t)=\|W_{1}(t)\|_{2}\). If \(_{1}(t)\) is large, we use Lemma 2 to deduce both that all \(_{k}(t)\) are large and then that the first singular vectors of successive weight matrices are aligned. This implies that the product of weight matrices has a large norm. To analyze the case where \(_{1}(t)\) is small, we use Assumption \((A_{1})\) to bound away \(R^{L}((t))\) from \(R_{0}\) for \(t 1\), and therefore \(w_{}(t)\) from \(0\). The fact that \(w_{}(t)\) cannot be too close to \(0\) while \(_{1}(t)\) is small implies that \(\|W_{L}(t) W_{2}(t)\|_{2}\) is large. All in all, this allows us to lower bound \(\|W_{L}(t) W_{2}(t)\|_{2}\), and the PL condition follows.

To characterize the weights at the end of the training, we make the following assumption.

* The data covariance matrix \(\) is full rank, and we have \( 1\), \(\|w^{}\|_{2} 1\), and \(32L 1\).

The first statement ensures unicity of the minimizer \(w^{}\) of \(R^{1}\), and thus, given that the risk goes to \(0\), we have \(w_{} w^{}\). The last condition means that the initialization has to be scaled down as the depth increases, so that \(=(1/L^{2})\). Intermediates conditions are technical. We can then show the following corollary.

**Corollary 1**.: _Under Assumptions \((A_{1})\)-\((A_{2})\), there exists \(T 1\), such that, for all \(t T\) and \(k\{1,,L\}\),_

\[\|_{2}}{2}^{1/L}_{k}(t) (2\|w^{}\|_{2})^{1/L}.\]

Together with Lemma 2, this result gives a precise description of the structure of the weights at the end of the gradient flow trajectory. Up to the small factor \(\), the weights are rank-one matrices, with equal norms and aligned singular vectors. Since the product of weights aligns with \(w^{}\), this means that the first right singular vector of \(W_{1}\) has to align with \(w^{}\), and then the weight matrices align with their neighbors in order to propagate the signal in the network.

Combining this specific structure of the weights with the variational characterization (7) of the sharpness and the explicit formulas (5)-(6) for the gradients, we derive the following upper bound on the sharpness of the found minimizer.

**Corollary 2**.: _Under Assumptions \((A_{1})\)-\((A_{2})\), the following bounds on the sharpness of the minimizer \(^{}\) hold:_

\[1^{})}{S_{}} 4\,.\]

This result shows that the sharpness of the minimizer is close to \(S_{}\) in the sense that their ratio is bounded by a constant times the condition number of \(\). For example, in the case of white data (\(=I\)), we obtain that \(S(^{}) 4S_{}\).

## 5 Analysis of gradient flow from residual initialization

We now study the case of residual initialization. We consider a linear network of the form (3) with

\[W_{k}(t)=I+}N_{k}+_{k}(t)\,,\]where each matrix is a \(d d\) matrix and the \(N_{k}\) are filled with i.i.d. Gaussian entries \((0,1)\). We refer to Section 1 for a discussion of the scaling factor in front of \(N_{k}\). Following the standard initialization of residual networks, we assume that the \(_{k}\) are initialized to zero. Note that the scaling factor \(1/L\) in front of the \(_{k}\) has no impact on the dynamics; it is convenient for exposition and computations, since we show that, with this scaling factor, the \(_{k}\) are of order \((1)\) after training.

Before stating the main result of this section on the convergence of the gradient flow, recall that \(p^{d}\) is a fixed vector appended at the end of the residual network to project its output back in \(\).

**Theorem 4**.: _There exist \(C_{1},,C_{5}>0\) depending only on \(s\) such that, if \(L C_{1}\) and \(d C_{2}\), then, with probability at least_

\[1-16(-C_{3}d)\,,\]

_if_

\[R^{L}((0))-R_{}^{2}\|p\|_{2}^{2}}{ }\,,\]

_the gradient flow dynamics (4) converge to a global minimizer \(^{}\) of the risk. Furthermore, the minimizer \(^{}\) satisfies_

\[W_{k}^{}=I+}N_{k}+_{k}^{ }\|_{k}^{}\|_{F} C_{5}\,, 1  k L\,.\] (8)

To our knowledge, Theorem 4 is the first result showing convergence of gradient flow for standard Gaussian initialization of residual networks without assuming overparameterization. The main requirement is that the loss at initialization be not too large, as is standard in the literature analyzing gradient flow for deep linear residual networks (Bartlett et al., 2018; Arora et al., 2019; Zou et al., 2020; Sander et al., 2022). Note that our bound on the loss at initialization does not depend on the width \(d\), depth \(L\), or sample size \(n\). We emphasize that the same proof holds for multivariate regression, in the absence of the projection vector \(p\). We focus here on univariate regression to connect the result with the analysis of sharpness for univariate regression in Section 3. Details on adaptation to multivariate regression are given in Appendix B.7. Finally, the precise dependence of \(C_{1}\) to \(C_{5}\) on \(s\) can be found in the proof.

The proof is a refinement of the analysis for identity initialization of residual networks (Zou et al., 2020; Sander et al., 2022). From the expression of the gradients (5), we can show that

\[4\|p\|_{2}^{2}\|_{L:k+1}\|_{2}^{2}\|_{k-1:1}\|_{2}^ {2}(R()-R_{})\\ \|_{k}R^{L}()\|_{F}^{2} 4 \|p\|_{2}^{2}_{}^{2}(_{L:k+1})_{}^{2}(_{k-1: 1})(R()-R_{})\,,\]

with \(_{L:k}:=W_{L} W_{k}\) and \(_{k:1}:=W_{k} W_{1}\). Letting

\[t^{*}=\{t_{+}, k\{1,,L\},\|_{k}(t )\|_{F}>C_{5}\},\]

the crucial step is to lower bound \(_{}^{2}(_{L:k+1})\) and \(_{}^{2}(_{k-1:1})\) uniformly for \(t[0,t^{*}]\), in order to get a PL condition valid for \(t[0,t^{*}]\). Then, the condition on the loss at initialization is used to prove that \(t^{*}=\), thereby the PL condition holds for all \(t 0\). We deduce both convergence and the bound on the norm of \(_{k}^{}\). The lower bound on \(_{}^{2}(_{L:k+1})\) and \(_{}^{2}(_{k-1:1})\) is straightforward in the case of an identity initialization. In the case of Gaussian initialization, the proof is more intricate, and leverages the following high probability bounds on the singular values of residual networks.

**Lemma 3**.: _There exist \(C_{1},,C_{4}>0\) depending only on \(s\) such that, if_

\[L C_{1}\,, d C_{2}\,, u[C_{3},C_{4}L^{1/4}]\,,\]

_then, with probability at least_

\[1-8-}{32s^{2}}\,,\]

_it holds for all \(\) such that \(_{1 k L}\|_{k}\|_{2}(-2s ^{2}-4u)\) and all \(k\{1,,L\}\) that_

\[I+}N_{k}+_{k} I+}N_{1}+_{1}_{2}  4}{2}+u\,,\]

_and_

\[_{}I+}N_{k}+_{k} I+}N_{1}+_{1} -}{d}-u\,.\]The proof of this result goes in three steps. We first study the evolution of the norm of the activations across the layers of the residual network when \(=0\), and prove a high-probability bound by leveraging concentration inequalities for Gaussian and \(^{2}\) distributions. Then an \(\)-net argument allows to bound the singular values. Finally, the extension to \(\) in a ball around \(0\) is done via a perturbation analysis. The proof technique is related to previous works (Marion et al., 2022; Zhang et al., 2022), but provides a crisper and sounder bound. More precisely, Marion et al. (2022) show a bound on the norm of the activations with a probability of failure that decays polynomially with the width \(d\), which is not sufficient to apply the \(\)-net argument that requires an exponentially decreasing probability of failure. As for Zhang et al. (2022), they provide a similar bound with the purpose of showing convergence of wide residual networks, however with a less sharp probability of failure that increases polynomially with depth.1 Finally, as previously, the dependence of \(C_{1}\) to \(C_{4}\) on \(s\) can be found in the proof.

The characterization (8) of the minimizer in Theorem 4 allows to bound its sharpness, as made precise by the following corollary. It holds under the same assumptions and high-probability bound as the conclusion of Theorem 4.

**Corollary 3**.: _Under the assumptions of Theorem 4, and if the data covariance matrix \(\) is full rank, there exists \(C>0\) depending only on \(s\) such that the following bounds on the sharpness of the minimizer \(^{}\) hold:_

\[1^{})}{S_{}} C\,.\]

As for Corollary 2, the proof relies on the fact that the norms of the weight matrices are close to each other and to the smallest possible norm to minimize the risk. This result shows again an implicit regularization towards a low-sharpness minimizer. Experimental illustration connecting the result with gradient descent with non-vanishing learning rate is provided in Appendix C.

## 6 Conclusion

This paper studies dynamics of gradient flow for deep linear networks on a regression task. For small-scale initialization, we prove that the learned weight matrices are approximately rank-one and that their singular vectors align. For residual initialization, convergence of the gradient flow for a Gaussian initialization is proven. In both cases, we obtain that the sharpness of the solution found by gradient flow is close to the smallest sharpness among all minimizers. Interesting next steps include studying the dynamics at any initialization scale, for non-vanishing learning rates, as well as extension to non-linear networks. We refer to Appendix C for additional comments and preliminary experimental results regarding possible extensions.