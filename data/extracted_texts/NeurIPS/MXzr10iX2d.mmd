# TopoLogic: An Interpretable Pipeline for Lane Topology Reasoning on Driving Scenes

Yanping Fu

Institute of Computing Technology,

Chinese Academy of Sciences

University of Chinese Academy of Sciences

fyanyping23s@ict.ac.cn

&Wenbin Liao

Institute of Computing Technology,

Chinese Academy of Sciences

University of Chinese Academy of Sciences

liaowenbin23z@ict.ac.cn

&Xinyuan Liu

Institute of Computing Technology,

Chinese Academy of Sciences

liaowenbin23z@ict.ac.cn

&Hang Xu

Hangzhou Dianzi University

hxu@hdu.edu.cn

&Yike Ma

Institute of Computing Technology,

Chinese Academy of Sciences

ykma@ict.ac.cn

&Yucheng Zhang

Institute of Computing Technology,

Chinese Academy of Sciences

zhangyucheng@ict.ac.cn

&Feng Dai

Institute of Computing Technology,

Chinese Academy of Sciences

fdai@ict.ac.cn

Corresponding Author

###### Abstract

As an emerging task that integrates perception and reasoning, topology reasoning in autonomous driving scenes has recently garnered widespread attention. However, existing works often emphasizes "perception over reasoning": they typically boost reasoning performance by enhancing the perception of lanes and directly adopt vanilla MLP to learn lane topology from lane query. This paradigm overlooks the geometric features intrinsic to the lanes themselves and is prone to being influenced by inherent endpoint shifts in lane detection. To tackle this issue, we propose an interpretable method for lane topology reasoning based on lane geometric distance and lane query similarity, named TopoLogic. This method mitigates the impact of endpoint shifts in geometric space, and introduces explicit similarity calculation in semantic space as a complement. By integrating results from both spaces, our method provides more comprehensive information for lane topology. Ultimately, our approach significantly outperforms the existing state-of-the-art methods on the mainstream benchmark OpenLane-V2 (23.9 v.s. 10.9 in TOP\({}_{ll}\) and 44.1 v.s. 39.8 in OLS on _subset_A_). Additionally, our proposed geometric distance topology reasoning method can be incorporated into well-trained models without re-training, significantly boosting the performance of lane topology reasoning. The code is released at https://github.com/Franpin/TopoLogic.

## 1 Introduction

In recent years, the field of autonomous driving has witnessed numerous milestone achievements and has progressively shifted from pure research to practical applications. In complex driving scenarios, vehicles need to perceive lanes & traffic elements and reason their topological relationships (i.e., lane connectivity and correspondence with traffic elements), which provides comprehensive information for downstream path planning and motion control. Under the trend of end-to-end autonomous driving, abovementioned perception and reasoning are integrated into a single task, referred to as topology reasoning  in autonomous driving scenes. This challenge has attracted widespread attention within the ego planning [2; 3; 4]and high-definition map learning [5; 6; 7; 8] communities.

The topology reasoning task has garnered significant attention recently, since it is closer to the real needs. Some works have explored lane centerline representation [1; 9; 10; 11] and lane segment representation , while others have introduced SDMap (Standard-Definition Map)  to provide additional clues for learning. However, existing works primarily focus on enhancements in the perception part, with scarce modifications made to the reasoning part. Irrespective of the approach details, existing studies typical employ vanilla MLP to learn lane topology directly from lane query. This paradigm has its shortcoming: since each lane is encoded independently through distinct query, it is challenging to ensure strictly overlap at the endpoints of two connected lanes, as shown in Figure 1(b). In contrast, it is evident that the endpoints of two connected lanes in the ground truth actually overlap perfectly, as shown in Figure 1(a). Lanes with slightly shifted endpoints may be erroneously classified by MLP as disconnected. This leads to MLP easily predicting fewer lane topology, as shown in Figure 1(c).

To tackle the aforementioned issues, we introduce TopoLogic, an interpretable method for lane topology reasoning that is based on lane geometric distances and the similarity of lane query in semantic space. The geometric distance-based approach aims to mitigates the impact of endpoint shift, thereby more robustly learning lane topology. This approach first calculates the geometric distance between lanes and then uses a learnable mapping function to map the distance to connectivity probability. Notably, for two given lanes, their geometric distance is defined as the distance between the ending point of one lane and the starting point of subsequent lane. This distance itself can serve as a strong criterion: when this distance is within a certain range, the predicted endpoints should be considered overlapping, and the lanes connected; otherwise, they are not. In this way, the lane topology reasoning becomes more tolerant of endpoint shifts, thus becoming more accurate. It's worth noting that even when the geometric distance method is merely applied as post-processing without re-training, the performance of SOTA model in lane topology reasoning is significantly improved, as shown in Figure 1(d). Moreover, reasoning lane topology completely based on geometric distances can lead to inaccuracies when lane detection is imprecise as is shown in Figure 4, since the calculation of lane geometric distance heavily relies on the accuracy of lane detection. To make up for the deficiency of geometric distances approach, we design a extra topology approach based on the similarity of lane

Figure 1: **Comparison of results with and without post-processing in TopoNet.** We use a post-processing based on geometric distance to improve the lane topology reasoning performance of TopoNet. **(a)** denotes the ground truth of lane topology reasoning. **(b)** denotes the endpoints of two connected lanes in prediction do not overlap (marked with yellow circle) as desired in ground truth. **(c)** denotes the lane topology reasoning result of TopoNet, the arrow denotes lane topology (marked with red arrow). **(d)** denotes the lane topology reasoning result of TopoNet using post-processing, significantly improves the reasoning precision of lane topology.

queries as a complement. This approach projects lane queries into a high-dimensional semantic space, and involves explicitly computing the dot product between lane query to determine similarity, and then mapping this similarity onto lane topology using sigmoid . The approach for calculating lane query similarity complements the approach used for computing lane geometric distance topology and similarly boasts high interpretability. The final lane topology is obtained by fusing the topology matrix derived from both approachs. By the way, the lane topology is also used in GNN to enhance lane learning through the aggregation of features from adjacent lanes. **In summary, our contributions are as follows:**

**1.** We identify the current state of research in topology reasoning as "perception over reasoning", and reveal that the lane topology is easily disturbed by the endpoint shifts in lane detection when MLP employed solely for lane topology reasoning.

**2.** We propose an interpretable method, referred to as TopoLogic, which conducts lane topology reasoning by calculating lane geometric distances and semantic similarity of lane query in a high-dimensional semantic space.

**3.** Extensive experiments on the mainstream benchmark OpenLane-V2 for topology reasoning task indicate that our method significantly outperforms existing state-of-the-art methods, especially in lane topology metric. Even if employed solely as a post-processing step without re-training, proposed geometric distance approach can significantly enhance well-trained lane topology reasoning models.

## 2 Related Work

### Lane Detection

Lane detection plays an important role in autonomous driving, which has been a fundamental aspect of lane topology reasoning. In the realm of lane detection, some works [15; 16; 17] attempt to perform lane detection on a segmentation map. Moreover, some researchers use vector-based methods to perform 3D lane detection [18; 19; 20; 21], however, these methods rely on a predetermined series of Y-axis coordinates within the query for forecasting 3D lanes, thereby lacking the capability to exclusively predict 3D lane positions along the Y-axis. In recent study, TopoNet  leverages Graph Neural Network (GNN)  to enhance the perception of lane centerline, while TopoMLP  utilizes PETR  for centerline detection. LaneSegNet  designs a Lane Attention mechanism to reinforce the perception of lane segment, and SMERF  introduces Standard-definition (SD) Map as an additional input to bolster the perception of lane centerline. In our work, we enhance lane learning by aggregating features of adjacent lanes through GNN, which involves computing lane geometric distance and lane query similarity.

### Lane Topology Reasoning

In lane topology reasoning, accurate comprehension of lane topology is imperative for effective navigation and decision-making in autonomous driving. Some methods [24; 25; 26; 27; 28] have been proposed to address this. The STSU  model drew inspiration from DETR  and employed a neural network architecture, complemented by a multi-layer perceptron (MLP) to establish line connectivity. Building upon this foundation, Can et al.  introduced minimal cycle queries to refine centerline, ensuring accurate ordering of overlapping lines and thereby enhancing precision. Further advancements include the perception of centerline [1; 13; 11; 9] and the perception of lane segment . Among them, CenterLineDet  and TopoNet, Both treat lane line as vertices and leverage an graph-based model to update lane representation and lane topology. While these methods have predominantly relied on MLP for generating adjacency matrices to represent lane topology. In our work, we calculate the lane topology matrices based on the geometric distances between lanes and the similarity of lane query within high-dimensional semantic space, respectively, and then fuse them to form the final lane topology. The fusion of geometric and semantic space enriches the model's understanding of lane topology, thereby culminating in improved performance in driving scene analysis and decision-making.

## 3 Method

### Problem Definition

Given images captured by the surround-view cameras of a vehicle, lane topology reasoning needs to perceive lane instances in BEV(Bird's Eye View) and then infer the topology between these lane instances. The enhancement of lane instance perception assists in the reasoning of lane topology. Lane instances are described as a set of directed lane lines which is denoted as \(L=[l_{0},,l_{n-1}]\). Each lane line is composed of a series of ordered points, and it is denoted as \(l=[p_{0},,p_{n-1}],p=(x,y,z)^{3}\). The topology between lane instances signifies the connectivity of the directed lanes and it is depicted as a topology graph \((V,E)\), where the edge set \(E V V\). An entry \((i,j)\) in \(E\) is positive if and only if the ending point of lane \(l_{i}^{end}\) connects to the starting point of lane \(l_{j}^{start}\).

### Overview

As is depicted in the Figure 2, our proposed TopoLogic takes multi-view images from onboard cameras as input. These images are processed by a backbone to generate multi-scale image features. Multi-scale image features are transformed into BEV features through a view transformation module, and then passed to a lane deformable decoder to generate lane query \(Q_{l}\) for lane detection. The proposed lane geometric distance approach and the lane similarity approach compute the lane topology respectively. Ultimately, the two topologies are fused and fed into GNN to augment the learning of lane line in the next decoder layer.

### Lane Geometric Distance Topology

**Lane Geometric Distance Matrix.** Lane query \(Q_{l}\) can generate multiple directed lane lines through lane head. We can assess the connectivity between these lanes by computing the geometric distance between the ending point of one directed lane line and the starting point of the following lane line.

\[l_{0},,l_{n-1}=(Q_{l}^{i})\] (1)

\[d_{ij}=|l_{i}^{end}-l_{j}^{start}\ |\] (2)

\[D=\{d_{ij}\ |\ i,j=0 n-1\}\] (3)

Figure 2: **Pipeline of TopoLogic.** The overarching structure of TopoLogic comprises two main components: an image encoder for feature extraction and transformation, and a lane decoder responsible for end-to-end topology reasoning. This decoder utilizes the proposed lane geometric distance topology and lane similarity topology, and fuse them into the final lane topology, which is facilitated through GNN to augment lane learning in the next decoder layer.

where \(D\) is the lane geometric distance, \(l_{i}\) and \(l_{j}\) represent preceding and subsequent lane lines, \(d_{ij}\) denotes the geometric distance between \(l_{i}\) and \(l_{j}\), \(l_{i}^{end}\) signifies the last point of lane line \(l_{i}\), and \(l_{j}^{start}\) indicates the first point of lane line \(l_{j}\).

**Distance to Topology Mapping Function.** After obtaining the geometric distance matrix \(D\) for the lanes, it is necessary to map the lane geometric distance into the lane topology. The lane topology can be represented by a matrix ranged in 0\(\)1. Zero indicates that there is no connection between two lanes, while one indicates that there is a connection. This mapping function needs to capture the following notion: when the input \(x 0\), it meaning the two lanes are very close to each other, the output \(y 1\), suggesting that these two lanes are very likely to be connected. Conversely, as \(x\), \(y 0\). Inspired by the Gaussian function, we design a learnable mapping function as follows:

\[f_{ours}=e^{-}{}}\] (4)

where \(x=d_{ij}\). \(\) is the standard deviation of the geometric distance matrix \(D\). \(,\) are learnable parameters. With the help of such mapping, we can get a lane topology as follows:

\[G_{dis}=\{f_{ours}(d_{ij})|i,j=0...n-1\}\] (5)

There also exists some common alternative functions that meet the criteria, for example Gaussian function, sigmoid-based function and tanh-based function as Equation 6(a,b,c). We make a comparison between them with \(f_{ours}\) in Figure 3. Obviously, \(f_{ours}\) sets a larger geometric distance threshold for determining topological connectivity compared to \(f_{gau}\), \(f_{sig}\) and \(f_{tan}\), which makes the lane topology more robust to the endpoint shifts. Ablation study in Table 3 also verifies this opinion.

\[f_{gau}=e^{-}{2}}(a), f_{sig}=}(b),  f_{tan}=-e^{x}}{e^{-x}+e^{x}}+1(c)\] (6)

### Lane Similarity Topology

Lane topology reasoning based on the geometric distance of lane lines can achieve commendable results when the detection of lane lines is accurate. However, since this topology reasoning method heavily relies on the detected lane lines, inaccuracies in lane line detection can interfere with the geometric approach and lead to erroneous reasoning outcomes, as demonstrated in the Figure 4. In light of this situation, we reason lane topology by calculating the similarity between lane query \(Q_{l}\) within high-dimensional semantic space. A higher similarity between \(Q_{l}\) indicates a greater likelihood of connectivity between the lanes, while lower similarity suggests an absence of connectivity. Weinitially encode \(Q_{l}\) using two distinct MLP, and then represent the similarity by computing the inner product between the two encoding results. Finally, we require a function to map the similarity between \(Q_{l}\) to lane topology. Given the correlation between lane similarity and lane topology, we employ sigmoid to map the lane similarity onto lane topology. This process is as follows:

\[Q_{emb_{1}},Q_{emb_{2}}=_{1}(Q_{l}^{i}),_{2 }(Q_{l}^{i})\] (7) \[S=(Q_{emb_{1}},(Q_{emb_{2}}))\] (8) \[G_{sim}=(S)\] (9)

where \(Q_{l}^{i}^{N_{l} C}\), \(S\) represents the similarity of \(Q_{l}\). \(G_{sim}^{N_{l} N_{l}}\), while \(N_{l}\) represents the number of lane query.

### Lane-Lane Topology

Both the lane topology reasoned from the geometric distance between lane lines and the lane topology reasoned from the similarity of lane query \(Q_{l}\) in the high-dimensional semantic space can indicate the connectivity of lanes. These two methods are complementary in the task of lane topology reasoning. In this context, we merge the two lane topology reasoning results together as the final and more accurate lane topology using learnable coefficients as follow:

\[G=_{1} G_{dis}+_{2} G_{sim}\] (10)

where \(_{1},_{2}\) are learnable parameters, and \(G\) is the final lane topology prediction.

### Learning

Similar to Transfomer-based networks [30; 32], the supervision is applied on each decoder layer to optimize the query feature iteratively. The overall loss of TopoLogic is:

\[=_{det}+_{top}\] (11)

The lane detection loss \(_{det}\) consists of a focal loss  for lane classification and an L1 loss for lane regression. The lane topology reasoning loss \(_{top}\) includes only the loss computed for \(G_{}\). As for the calculation of \(G_{}\), since it is enhanced by GNN to facilitate lane learning, we update its learnable parameters through \(_{det}\).

## 4 Experiment

### Dataset and Metric

**Dataset**. We have evaluated TopoLogic on the OpenLane-V2 , which is currently the only large-scale perception and topology reasoning dataset devised for autonomous driving scenarios. This dataset was developed by Argogorse2  and nuScenes  respectively. It provides annotations for both lane centerline tasks and lane segment detection tasks. OpenLane-V2 consists of two subsets: _subset_A_ and _subset_B_, each comprising 1000 scenes with 2Hz multi-view images and annotations. Each subset includes annotations for the lane centerline, traffic element, lane topology, as well as the topology between traffic element and lane. In _subset_A_, there are seven views as input, together with an additional Standard-definition Map input, and the annotations for lane segment have been expanded; _subset_B_ contain only six views as input.

**Metric**. OpenLane-V2 evaluates perception tasks for both lane centerline and lane segment.

**(1)** In the task of lane centerline perception, the metrics include \(_{l}\), \(_{t}\), \(_{ll}\), and \(_{lt}\). \(_{l}\) quantifies similarity by averaging the Frechet distance at matching thresholds of 1.0, 2.0, 3.0. \(_{t}\) uses Intersection over Union (IoU) as a measure of similarity and calculates the average across different traffic categories. \(_{ll}\) and \(_{lt}\) respectively compute the topology matrix similarity between lanes and between lanes and traffic elements, with the overall evaluation metric for lane centerlines being denoted as OLS. The OLS is carried out as \(=[_{l}+_{t}+f(_{ ll})+f(_{lt})]\), where \(f\) is the square root function.

**(2)** In the task of lane segment perception, we adopt the metric proposed by LaneSegNet for evaluating lane segment perception. These include the lane segment distance \(_{ls}\), the corresponding AveragePrecision AP\({}_{ls}\) and AP\({}_{ped}\), with the mAP calculated as the average of AP\({}_{ls}\) and AP\({}_{ped}\). The lane segment topology metric is denoted as TOP\({}_{lsls}\).

**(3)** For centerline, OpenLane-V2 has two versions available for evaluation on TOP\({}_{ll}\), TOP\({}_{lt}\), and OLS: v1.0.0 and v2.1.0. For lane segment, OpenLane-V2 has versions v2.0.0 and v2.1.0 on TOP\({}_{lsls}\). 2**Since the ultimate goal of perception is reasoning, we believe that topology metrics are what should be paid more attention. Moreover, our modifications mainly involve lane topology reasoning, so we primarily focus on the lane topology metric TOP\({}_{ll}\) and TOP\({}_{lsls}\).

### Implementation Details

**Feature Extractor.** All images are resized into the same resolution of 1550 \(\) 2048. For reproducibility, we utilize the official implementations of TopoNet, SMERF, and LaneSegNet models. Both models use ResNet-50  backbone pretrained on ImageNet  paired with a Feature Pyramid Network (FPN)  to extract multi-scale features. The number of output channels is set to 256. We employ the view transformer from BEVformer  encoder to transform multi-scale features into BEV features. The size of BEV grids is set to 200\(\)100. TopoLogic is configured identically.

**Lane Detector.** We employ Deformable DETR  for the detection of lane line. The number of query is set to 200. After passing through each decoder layer of Deformable DETR, the query undergo GNN using the lane topology matrix. We predict the offset of the lane lines by setting reference points, with each lane line consisting of 11 three-dimensional points. For LaneHead, the classification head adopts a three-layer MLP with LayerNorm and ReLU to predict the confidence score of the lane line. The regression head is a three-layer MLP combined with ReLU, used to predict the 11\(\)3 offset of the lane line. For lane detection loss \(_{dett}\), the weight of the classification part is 1.5, and the weight of the regression part is 0.025.

**Lane Topology Head.** The Lane Topology Head consists of a lane geometry distance predictor and a lane similarity predictor. For lane geometry distance predictor, we first calculate the geometric distance between the terminating point of the previous lane line and the starting point of the subsequent lane line to obtain a 200\(\)200 distance matrix. Then the distance matrix is mapped to a lane topology matrix through a learnable mapping function\(f(x)=e^{-}{.}}\), where the size of \(,,\) is 1\(\)1, \(\) is the standard deviation of \(x\), \(,\) are learnable parameters, \(\) is initialized to 2, \(\) is initialized to 0.2. For the calculation of lane similarity, given a 200\(\)256 lane query, it is encoded through two different three-layer MLP. The we compute the similarity between the encoded results, resulting in a 200\(\)200 lane similarity matrix. The similarity matrix is transformed into a lane topology matrix through sigmoid. The two lane topology matrices are fused into the final lane topology using learnable coefficients, which are initialized to 1 and have a size of 1\(\)1.

**Training.** We train TopoLogic utilizing the AdamW optimizer  with a weight decay of 0.01 with an initial learning rate of \(2 10^{-4}\) and employ a cosine annealing schedule for the learning rate. All experiment is trained for 24 epochs on 8 NVIDIA RTX 3090 GPUs with a batch size of 16.

### Comparison to State-of-the-art

**Centerline.** We compared TopoLogic with existing state-of-the-art methods such as STSU, VectorMapNet, MapTR, TopoNet, SMERF on centerline. Table 1 shows the results on the _subset_A_ and _subset_B_ datasets. Without any additions, our method achieves state-of-the-art performance. Compared with TopoNet, our method achieves decent detection accuracy (**29.9** v.s. 28.6 on _subset_A_, **25.9** v.s. 24.4 on _subset_B_), especially with a significant improvement in TOP\({}_{ll}\) (**18.6** v.s. 4.1 on _subset_A_ for v1.0.0, **23.9** v.s. 10.8 on _subset_A_ for v2.1.0), which is the lane topology reasoning score. There is also an improvement in OpenLane-V2 overall score OLS (**41.6** v.s. 35.6 on _subset_A_ for v1.0.0, **44.1** v.s. 39.8 on _subset_A_ for v2.1.0). Even when using SDMap, our proposed TopoLogic still manages to achieve state-of-the-art performance and realizes a significant improvement in TOP\({}_{ll}\) (**23.4** v.s. 7.5 for v1.0.0, **28.9** v.s. 15.4 for v2.1.0).

**Lane Segment.** Concurrently, we compared TopoLogic with existing state-of-the-art methods such as TopoNet, MapTR, MapTRv2, LaneSegNet on lane segment. In Table 2, it indicates that our method exhibits improvements in the Mean Average Precision (mAP) for lane segment detection comparedwith LaneSegNet (**33.2** v.s. 32.6). Moreover, there is a significant enhancement in topology reasoning score TOP\({}_{lsls}\) (**22.0** v.s. 8.1 on v2.0.0, **30.8** v.s. 25.4 on v2.1.0).

### Alation Study

We have studied several important components of TopoLogic and conducted ablation experiments on the OpenLane-V2 _subset_\(\_\)A_. In the following text, we employ evaluation metrics from the latest v2.1.0 release for our assessment.

**The design of mapping function.** We have studied the effect of different mapping functions in the transformation from lane geometric distances to lane topology. Table 3 suggests that our designed learnable mapping function performs better at mapping the geometric distances of lane lines to lane topology compared to sigmoid-based, tanh-based, and Gaussian functions. It exhibits the best performance in terms of both the lane topology reasoning score and the centerline score (**29.9** v.s. 28.9 v.s. 28.7 v.s. 27.6 on DET\({}_{l}\), and **23.9** v.s. 21.7 v.s. 19.1 v.s. 15.1 on TOP\({}_{ll}\)).

**The approach of lane topology reasoning.** We have investigated the impact of various lane topology computation approaches on lane topology reasoning, specifically using MLP, lane query similarity, and geometric distance. The results in the Table 4 indicate that the integration of a lane topology method, combining both lane geometric distance and lane query similarity calculations, yields optimal results on TOP\({}_{ll}\) (**23.9** v.s. 20.1 v.s. 12.9 v.s. 10.8) and also performs best in terms of lane line detection scores indicated by DET\({}_{l}\) (**29.9** v.s. 28.6 v.s. 28.1 v.s. 27.8). This demonstrates that

    &  &  & _{l}\)} & _{t}\)} &  &  \\  & & & & & TOP\({}_{ll}\) & TOP\({}_{ll}\) & \(\) & OLS\(\) & TOP\({}_{ll}\) & TOP\({}_{ll}\) & \(\)OLS\(\) \\   & STSU  & \(\) & 12.7 & 43.0 & 0.5 & 15.1 & 25.4 & 2.9 & 19.8 & 29.3 \\  & VectorMapNet  & \(\) & 11.1 & 41.7 & 0.4 & 5.9 & 20.8 & 2.7 & 9.2 & 24.9 \\  & MapTR  & \(\) & 17.7 & 43.5 & 1.1 & 10.4 & 26.0 & **5.9** & 15.1 & 31.0 \\  & TopoNet  & \(\) & 28.6 & 48.6 & 4.1 & 20.8 & 35.6 & 10.9 & 23.8 & 39.8 \\  & TopoMLP  & \(\) & 28.3 & **50.0** & 7.2 & 22.8 & 38.2 & 19.0 & 23.4 & 42.2 \\  & **TopoLogic** & \(\) & **29.9** & 47.2 & **18.6** & **21.5** & **41.6** & **23.9** & **25.4** & **44.1** \\   & SMERF  & ✓ & 33.4 & **48.6** & 7.5 & 23.4 & 39.4 & 15.4 & 25.4 & 42.9 \\  & **TopoLogic** & ✓ & **34.4** & 48.3 & **23.4** & **24.4** & **45.1** & **28.9** & **28.7** & **47.5** \\   & STSU  & \(\) & 8.2 & 43.9 & 0.0 & 9.4 & 21.2 & - & - & - \\  & VectorMapNet  & \(\) & 3.5 & 49.1 & 0.0 & 1.4 & 16.3 & - & - & - \\   & MapTR  & \(\) & 15.2 & 54.0 & 0.5 & 6.1 & 25.2 & - & - & - \\   & TopoNet  & \(\) & 24.3 & 55.0 & 2.5 & 14.2 & 33.2 & **6.7** & 16.7 & 36.8 \\   & TopoMLP  & \(\) & **26.6** & **58.3** & 7.6 & **17.8** & 38.7 & - & - & - \\   & **TopoLogic** & \(\) & 25.9 & 54.7 & **15.1** & 15.1 & **39.6** & **21.6** & **17.9** & **42.3** \\   

Table 1: Performance comparison with state-of-the-art methods on OpenLane-V2 benchmark on centerline. Results for existing methods are from TopoNet, TopoMLP and SMERF. “SDMap” indicates the use of a Standard-definition Map. ”-” denotes the absence of relevant data. We are more focused on TOP\({}_{ll}\).

    &  & _{ls}\)} & _{ped}\)} &  &  \\  & & & & TOP\({}_{lsls}\) & TOP\({}_{lsls}\) \\  TopoNet  & 23.0 & 23.9 & 22.0 & 1.0 & - \\ MapTR  & 27.0 & 25.9 & 28.1 & - & - \\ MapTRv2  & 28.5 & 26.6 & 30.4 & - & - \\ LaneSegNet  & 32.6 & 32.3 & 32.9 & 8.1 & 25.4 \\
**TopoLogic** & **33.2** & **33.0** & **33.4** & **22.0** & **30.8** \\   

Table 2: Performance comparison with state-of-the-art methods on OpenLane-V2 benchmark on lane segment. Results for existing methods are from LaneSegNet. ”-” denotes the absence of relevant data. We are more focused on TOP\({}_{lsls}\).

the topology obtained from the fusion of these two methods can also improve the learning of lane centerline through GNN feature enhancement.

**The approach of similarity topology.** We investigated the impact of using MLPs to encode lane queries for computing lane similarity on lane topology reasoning. As Lane similarity topology, its subtlety lies in that it uses two independent MLPs to map the lane query rather than a single MLP, which can decouple a lane into two queries of start and end point, achieving an analogous effect to the geometric distance approach in semantical space. The results presented in Table 5 indicate that encoding lane query with two independent MLPs to obtain features for the starting and ending points of lanes allows for better computation of lane similarity topology. This approach exhibits the best performance in terms of both lane centerline detection score and lane topology reasoning score (**29.9** v.s. 27.5 v.s. 25.6 on DET\({}_{l}\), and **23.9** v.s. 21.2 v.s. 18.7 on TOP\({}_{ll}\)).

**The post-processing mode of geometric distance approach.** We have investigated the effectiveness of geometric distance approach as a post-processing module on well-trained model. In Table 6, we conducted experiments by adding a post-processing to the already trained TopoNet, SMERF, and LaneSegNet, respectively. The results indicate that our proposed approach, which calculates lane topology based on lane geometric distances, can be integrated into well-trained models without any additional modifications and can significantly enhance the performance of lane topology reasoning(**22.3** v.s. 10.9 on TopoNet, **26.2** v.s. 15.4 v.s. on SMERF).

### Qualitative Analysis

As shown in Figure 5, we presents a qualitative comparison between TopoLogic and TopoNet. Specifically, two traffic scenes are selected for analysis, and the results of lane line detection and topology reasoning are visualized. The first row displays multi-view inputs of realistic scenes, while the second row shows the lane detection results of TopoLogic and TopoNet alongside the ground truth. Notably, TopoLogic demonstrates superior accuracy in lane line detection compared to TopoNet.

**Lane Graph.** The inherent complexity of topology reasoning makes intuitive representation of results challenging. To address this issue, as shown in third row in Figure 5, we construct a lane graph where nodes represent lane lines, and their relative positions in the graph correspond one-to-one with the relative positions of lane lines. This layout enhances the connection between lane line detection results and facilitates subsequent analysis. Additionally, we use directed edges to represent the lane topology, with red indicating error predictions and blue indicating missing predictions. TopoLogic consistently exhibits proficient lane topology reasoning across various intersection scenarios, showcasing significantly enhanced performance in the topology graph compared to TopoNet.

   Approach & DET\({}_{l}\) & DET\({}_{t}\) & TOP\({}_{ll}\) & TOP\({}_{ll}\) & OLS\(\) \\  MLP & 27.8 & 46.8 & 10.8 & 23.9 & 39.1 \\ Similarity & 28.1 & 46.4 & 12.9 & 23.7 & 39.8 \\ GeoDist & 28.6 & 44.1 & 20.1 & 23.1 & 41.4 \\
**Ours** & **29.9** & **47.2** & **23.9** & **25.4** & **44.1** \\   

Table 4: Ablation study on different lane topology reasoning approaches on centerline. Ours indicate Similarity+GeoDist.

   Function & DET\({}_{l}\) & DET\({}_{t}\) & TOP\({}_{ll}\) & TOP\({}_{ll}\) & OLS\(\) \\  \(f_{tan}\) & 27.6 & 47.2 & 15.1 & 24.8 & 40.9 \\ \(f_{sig}\) & 28.7 & 44.1 & 19.1 & 24.1 & 41.4 \\ \(f_{gau}\) & 28.9 & 46.8 & 21.7 & 23.2 & 42.6 \\ \(f_{ours}\) & **29.9** & **47.2** & **23.9** & **25.4** & **44.1** \\   

Table 3: Ablation study on different mapping functions from lane geometric distance to lane topology on centerline.

   Approach & DET\({}_{l}\) & DET\({}_{t}\) & TOP\({}_{ll}\) & TOP\({}_{lt}\) & OLS\(\) \\  No MLP & 25.6 & 46.5 & 18.7 & 20.8 & 40.2 \\ Single MLP & 27.5 & 46.8 & 21.2 & 23.8 & 42.3 \\
**Ours** & **29.9** & **47.2** & **23.9** & **25.4** & **44.1** \\   

Table 5: Ablation study on using MLP to encode lane query computing lane similarity topology. Ours indicate using two indepent MLPs.

## 5 Conclusion

In this paper, we reveal the limitation of using vanilla MLP in lane topology reasoning task and propose TopoLogic, which is the first to employ an interpretable approach for lane topology reasoning. TopoLogic fuses the geometric distance of lane line endpoints mapped through a designed function and the similarity of lane query in a high-dimensional semantic space to reason lane topology. Experiments on the large-scale autonomous driving dataset OpenLane-V2 benchmark demonstrate that TopoLogic significantly outperforms existing methods in topology reasoning in complex scenarios.

**Limitations.** Due to the GNN's role in merely aggregating features from adjacent lanes to enhance the learning of the current lane, our proposed method significantly improves the performance of lane topology but does not substantially elevate lane detection.

**Impact.** Based on the previous sections, it is evident that our proposed method is intended for research purposes. It should not be directly used in or deployed within any actual autonomous driving application. Notably, we cannot provide any guarantee in safety-critical situations.

## 6 Acknowledgements

This work is supported by National Key R&D Program of China (2023YFD2000303) and National Natural Science Foundation of China (62372433).

   Centerline & TOP\({}_{ll}\) & Centerline+SDMap & TOP\({}_{ll}\) & Lane Segment & TOP\({}_{lsls}\) \\  TopoNet  & 10.9 & SMERF  & 15.4 & LaneSegNet  & 25.4 \\
**TopoNet+GeoDist** & **22.3** & **SMERF+GeoDist** & **26.2** & **LaneSegNet+GeoDist** & **29.6** \\   

Table 6: Ablation study on incorporating lane geometric distance into post-processing for well-trained model under different task setting (centerline / centerline+SDMap / lane segment).

Figure 5: **Qualitative result about lane topology reasoning result of TopoNet and our TopoLogic.** The first row denotes multi-view inputs. The second row denotes lane detection result and lane topology reasoning result. The third row denotes graph form of lane topology reasoning (node indicates lane line, edge indicates lane topology), where green color indicates the right prediction, while red color indicates the error prediction and blue color indicates missing prediction.