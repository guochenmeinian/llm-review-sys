# Stable Nonconvex-Nonconcave Training

via Linear Interpolation

 Thomas Pethick

EPFL (LIONS)

thomas.pethick@epfl.ch &Wanyun Xie

EPFL (LIONS)

wanyun.xie@epfl.ch &Volkan Cevher

EPFL (LIONS)

volkan.cevher@epfl.ch

###### Abstract

This paper presents a theoretical analysis of linear interpolation as a principled method for stabilizing (large-scale) neural network training. We argue that instabilities in the optimization process are often caused by the nonmonotonicity of the loss landscape and show how linear interpolation can help by leveraging the theory of nonexpansive operators. We construct a new optimization scheme called relaxed approximate proximal point (RAPP), which is the first 1-SCLI method to achieve last iterate convergence rates for \(\)-comonotone problems while only requiring \(>-\). The construction extends to constrained and regularized settings. By replacing the inner optimizer in RAPP we rediscover the family of Lookahead algorithms for which we establish convergence in cohypomonotone problems even when the base optimizer is taken to be gradient descent ascent. The range of cohypomonotone problems in which Lookahead converges is further expanded by exploiting that Lookahead inherits the properties of the base optimizer. We corroborate the results with experiments on generative adversarial networks which demonstrates the benefits of the linear interpolation present in both RAPP and Lookahead.

## 1 Introduction

Stability is a major concern when training large scale models. In particular, generative adversarial networks (GANs) are known to be notoriously difficult to train. To stabilize training, the Lookahead algorithm of Zhang et al. (2019) was recently proposed for GANs Chavdarova et al. (2020) which linearly interpolates with a slow moving iterate. The mechanism has enjoyed superior empirical performance in both minimization and minimax problems, but it largely remains a heuristic with little theoretical motivation.

One major obstacle for providing a theoretical treatment, is in capturing the (fuzzy) notion of stability. Loosely speaking, a training dynamics is referred to as _unstable_ in practice when the iterates either cycle indefinitely or (eventually) diverge--as has been observed for the Adam optimizer (see e.g. Gidel et al. (2018, Fig. 12) and Chavdarova et al. (2020, Fig. 6) respectively). Conversely, a _stable_ dynamics has some bias towards stationary points. The notion of stability so far (e.g. in Chavdarova et al. (2020, Thm. 2-3)) is based on the spectral radius and thus inherently _local_.

In this work, we are interested in establishing _global_ convergence properties, in which case some structural assumptions are needed. One (nonmonotone) structure that lends itself well to the study of stability is that of cohypomonotonicity studied in Combettes & Pennanen (2004); Diakonikolas et al. (2021), since even the extragradient method has been shown to cycle and diverge in this problem class (see Pethick et al. (2022, Fig. 1) and Pethick et al. (2023, Fig. 2) respectively). We provide a geometric intuition behind these difficulties in Figure 1. Biasing the optimization schemes towards stationary points becomes a central concern and we demonstrate in Figure 2 that Lookahead can indeed converge for such nonmonotone problems.

A principled approach to cohypomonotone problems is the extragradient+ algorithm (EG+) proposed by Diakonikolas et al. (2021). However, the only known rates are on the best iterate, which can be problematic to pick in practice. It is unclear whether _last_ iterate rates for EG+ are possible even in the monotone case (see discussion prior to Thm. 3.3 in Gorbunov et al. (2022)). For this reason, the community has instead resorted to showing last iterate of extragradient (EG) method of Korpelevich (1977), despite originally being developed for the monotone case. Maybe not surprisingly, EG only enjoys a last iterate guarantee under mild form of cohypomonotonicity and have so far only been studied in the unconstrained case (Luo and Tran-Dinh; Gorbunov et al., 2022). Recently, last iterate rate were established for the same (tight) range of cohypomonotone problems for which EG+ has best iterate guarantees. However, the analyzed scheme is _implicit_ and the complexity blows up with increasing cubypomonotonicity (Gorbunov et al., 2022). This leaves the questions: _Can an explicit scheme enjoy last iterate rates for the same range of cohypomonotone problems? Can the rate be agnostic to the degree of cohypomonotonicity?_ We answer both in the affirmative.

This work focuses on 1-SCLI schemes (Arjevani et al., 2015; Golowich et al., 2020), whose update rule only depends on the previous iterate in a time-invariant fashion. Another approach to establishing last iterate is Halpern-type methods with an explicit scheme developed in Lee and Kim (2021) for cohypomonotone problems and later extended to the constrained case in Cai et al. (2022) (c.f. Appendix A).

As will become clear, a principled mechanism behind convergence in this nonmonotone class is the linear interpolation also used in Lookahead. This iterative interpolation is more broadly referred to as the Krasnosel'skii-Mann (KM) iteration in the theory of nonexpansive operators. We show that the extragradient+ algorithm (EG+) of Diakonikolas et al. (2021), our proposed relaxed approximate proximal point method (RAPP), and Lookahead based algorithms are all instances of the (inexact) KM iteration and provide simple proofs of these schemes in the cohypomonotone case.

More concretely we make the following contributions:

1. We prove global convergence rates for the last iterate of our proposed algorithm RAPP which additionally handles constrained and regularized settings. This makes RAPP the first 1-SCLI scheme to have non-asymptotic guarantees for \(\)-comonotone problems while only requiring \(>-}{{2L}}\). As a byproduct we obtain a last iterate convergence rate for an implicit scheme that is _independent_ of the degree of cohypomonotonicity. The last iterate rates are established by showing monotonic decrease of the operator norm-something which is not possible for EG+. This contrast is maybe surprising, since RAPP can be viewed as an extension of EG+, which simply takes multiple extrapolation steps.
2. By replacing the inner optimization routine in RAPP with gradient descent ascent (GDA) and extragradient (EG) we rediscover the Lookahead algorithms considered in Chavdarova et al. (2020). We obtain guarantees for the Lookahead variants by deriving nonexpansive properties of the base optimizers. By casting Lookahead as a KM iteration we find that the optimal interpolation constant is \(=0.5\). This choice corresponds to the default value used in practice for both minimization and minimax--thus providing theoretical motivation for the parameter value.

    & Method & Setting & \(\) & Handles constraints & \(\)-independent rates & Reference \\   & PP & Comonotone & \((-}{{2L}},)\) & ✓ & ✗ & (Gorbunov et al., 2022, Thm. 3.1) \\  & Relaxed PP & Comonotone & \((-}{{2L}},)\) & ✓ & ✓ & Theorem 6.2 \\   & EG & Comonotone \& Lips. & \((-}{{8L}},)\) & ✗ & ✗ & (Gorbunov et al., 2022, Thm. 4.1) \\  & EG+ & Comonotone \& Lips. & & & Unknown rates & \\   & RAPP & Comonotone \& Lips. & \((-}{{2L}},)\) & ✓ & ✓ & Corollary 6.4 \\   &  & Local & - & ✗ & - & (Chavdarova et al., 2020, Thm. 2) \\  & & Bilinear & - & ✗ & - & (Ha and Kim, 2022, Cor. 7) \\   & & Comonotone \& Lips. & \((-}{{3}}}{{3L}},)\) & ✗ & - & Theorem 7.1 \\   &  & Bilinear & - & ✗ & - & (Ha and Kim, 2022, Cor. 8) \\  & & Monotone \& Lips. & - & ✓ & - & Theorem E.1 \\   & LA-CEG+ & Comonotone \& Lips. & \((-}{{2L}},)\) & ✓ & - & Corollary 7.7 \\   

Table 1: Overview of last iterate results with our contribution highlighted in blue. Prior to this work there existed no rates for 1-SCLI schemes handling \(\)-comonotone problems with \((-}{{2L}},)\) and no global convergence guarantees for Lookahead beyond bilinear games.

3. For \(=2\) inner iterations we observe that \(\) reduces to a linear interpolation between GDA and \(\)+ which allows us to obtain global convergence in \(\)-comonotone problems when \(>-}{{3}}L\). However, for \(\) large, we provide a counterexample showing that \(\) cannot be guaranteed to converge. This leads us to instead propose \(\)+ which corrects the inner optimization to guarantee global convergence for \(\)-comonotone problems when \(>-}{{2L}}\).
4. We test the methods on a suite of synthetic examples and GAN training where we confirm the stabilizing effect. Interestingly, RAPP seems to provide a similar benefit as Lookahead, which suggest that linear interpolation could play a key role also experimentally.

An overview of the theoretical results is provided in Table 1 and Figure 58B.

## 2 Related work

LookaheadThe Lookahead algorithm was first introduced for minimization in Zhang et al. (2019). In the context of Federated Averaging in federated learning (McMahan et al., 2017) and the Reptile algorithm in meta-learning (Nichol et al., 2018), the method can be seen as a single worker and single task instance respectively. Analysis for Lookahead was carried out for nonconvex minimization (Wang et al., 2020; Zhou et al., 2021) and a nested variant proposed in (Pushkin and Barba, 2021). Chavdarova et al. (2020) popularized the Lookahead algorithm for minimax training by showing state-of-the-art performance on image generation tasks. Apart from the original local convergence analysis in Chavdarova et al. (2020) and the bilinear case treated in Ha and Kim (2022) we are not aware of any convergence analysis for Lookahead for minimax problems and beyond.

CohypomonotoneCohypomonotone problems were first studied in Iusem et al. (2003); Combettes and Pennanen (2004) for proximal point methods and later expanded on in greater detail in Bauschke et al. (2021). The condition was relaxed to the star-variant referred to as the weak Minty variational inequality (MVI) in Diakonikolas et al. (2021) and the extragradient+ algorithm (\(\)+) was analyzed. The analysis of \(\)+ was later tightened and extended to the constrained case in Pethick et al. (2022).

Proximal pointThe proximal point method (PP) has a long history. For maximally monotone operators (and thus convex-concave minimax problems) convergence of PP follows from Opial (1967). The first convergence analysis of _inexact_ PP dates back to Rockafellar (1976); Brezis and Lions (1978). It was later shown that convergence also holds for the _relaxed_ inexact PP as defined in (8) (Eckstein and Bertsekas, 1992). In recent times, PP has gained renewed interest due to its success for certain nonmonotone structures. Inexact PP was studied for cohypomonotone problems in Iusem et al. (2003). Asymptotic convergence was established of the relaxed inexact PP for a sum of cohypomonotone operators in Combettes and Pennanen (2004), and later considered in Grimmer et al. (2022) without inexactness. Last iterate rates were established for PP in \(\)-comonotone problems (with a dependency on \(\)) (Gorbunov et al., 2022b). Explicit approximations of PP through a contractive map was used for convex-concave minimax problems in Cevher et al. (2023) and was the original motivation for MirrorProx of Nemirovski (2004). See Appendix A for additional references in the stochastic setting.

## 3 Setup

We are interested in finding a zero of an operator \(S:^{d}^{d}\) which decomposes into a Lipschitz continuous (but possibly nonmonotone) operator \(F\) and a maximally monotone operator \(A\), i.e. find \(z^{d}\) such that,

\[0 Sz:=Az+Fz.\] (1)

Most relevant in the context of GAN training is that (1) includes constrained minimax problems.

**Example 3.1**.: _Consider the following minimax problem_

\[_{x}_{y}(x,y).\] (2)

_The problem can be recast as the inclusion problem (1) by defining the joint iterates \(z=(x,y)\), the stacked

Figure 1: Consider \(_{x}_{y}(z)\) with \(z=(x,y)\). As opposed to convex-concave minimax problems, the cohypomonotone condition allows the gradients \(Fz=(_{x}(z),-_{y}(z))\) to point away from the solutions (see Appendix B.1 for the relationship between cohypomonotonicity and the weak MVI). This can lead to instability issues for standard algorithms such as the Adam optimizer.

gradients \(Fz=(_{x}(x,y),-_{y}(x,y))\), and \(A=(_{},_{})\) where \(\) denotes the normal cone. As will become clear (cf. Algorithm 1), \(A\) will only be accessed through the resolvent \(J_{ A}:=(+ A)^{-1}\) which reduces to the proximal operator. More specifically \(J_{ A}(z)=(_{}(x),_{}(y))\)._

We will rely on the following assumptions (see Appendix B for any missing definitions).

**Assumption 3.2**.: _In problem (1),_

1. _The operator_ \(A:^{d}^{d}\) _is maximally monotone._
2. _The operator_ \(F:^{d}^{d}\) _is_ \(L\)_-Lipschitz, i.e. for some_ \(L[0,)\)_,_ \[\|Fz-Fz^{}\| L\|z-z^{}\| z,z^{} ^{d}.\]
3. _The operator_ \(S:=F+A\) _is_ \(\)_-comonotone for some_ \((-}{{2L}},)\)_, i.e._ \[ v-v^{},z-z^{}\|v-v^{}\|^{2} (v,z),(v^{},z^{})\,S.\]

_Remark 3.3_.: Assumption 3.2(iii) is also known as \(||\)-cohypomonotonicity when \(<0\), which allows for increasing nonmonotonicity as \(||\) grows. See Appendix B.1 for the relationship with weak MVI.

When only stochastic feedback \(_{}(,)\) is available we make the following classical assumptions.

**Assumption 3.4**.: _For the operator \(_{}(,):^{d}^{d}\) the following holds._

1. _Unbiased:_ \(_{}_{}(z,)=Fz z ^{d}\)_._
2. _Bounded variance:_ \(_{}\|_{}(z,)-Fz\|^{2}^{2 } z,z^{}^{d}\)_._

## 4 Inexact Krasnosel'skii-Mann iterations

The main work horse we will rely on is the inexact Krasnosel'skii-Mann (IKM) iteration from monotone operators (also known as the _averaged_ iteration), which acts on an operator \(T:^{d}^{d}\) with inexact feedback,

\[z^{k+1}=(1-)z^{k}+(Tz^{k}+e^{k}),\] (IKM)

where \((0,1)\) and \(e^{k}\) is a random variable with dependency on all variables up until (and including) \(k\). The operator \(_{k}:z Tz+e^{k}\) can crucially be an iterative optimization scheme in itself. This is important, since we can obtain \(\), \(\) and \(\) by plugging in different optimization routines. In fact, \(\) is derived by taking \(_{k}\) to be a (contractive) fixed point iteration in itself, which approximates the resolvent.

We note that also the extragradient+ (EG+) method of Diakonikolas et al. (2021), which converges for cohypomonotone and Lipschitz problems, can be seen as a Krasnosel'skii-Mann iteration on an extragradient step

\[(z)&=z- F(z- Fz )\\ z^{k+1}&=(1-)z^{k}+\,(z^{ k})\] (EG+)

where \((0,1)\). We provide a proof of EG+ in Theorem G.1 which extends to the constrained case using the construction from Pethick et al. (2022) but through a simpler argument under fixed stepsize.

Essentially, the IKM iteration leads to a conservative update that stabilizes the update using the previous iterate. This is the key mechanism behind showing convergence in the nonmonotone setting known as cohypomonotonicity. Very generally, it is possible to provide convergence guarantees for IKM when the following holds (Theorem C.1 is deferred to the appendix due to space limitations).

**Definition 4.1**.: _An operator \(T:^{n}^{d}\) is said to be quasi-nonexpansive if_

\[\|Tz-z^{}\|\|z-z^{}\| z^{d}, z ^{}\,T.\] (3)

_Remark 4.2_.: This notion is crucial to us since the resolvent \(J_{B}:=(+B)^{-1}\) is (quasi)-nonexpansive if \(B\) is \(}{{2}}\)-cohypomonotone (Bauschke et al., 2021, Prop. 3.9(iii)).

## 5 Approximating the resolvent

As apparent from Remark 4.2, the IKM iteration would provide convergence to a zero of the cohypomonotone operator \(S\) from Assumption 3.2 by using its resolvent \(=J_{ S}\). However, the update is implicit, so we will instead approximate \(J_{ S}\). Given \(z^{d}\) we seek \(z^{}^{d}\) such that

\[z^{}=J_{ S}(z)=(+ S)^{-1}z=(+ A)^{-1}(z- Fz^{})\]

This can be approximated with a fixed point iteration of

\[Q_{z}:w(+ A)^{-1}(z- Fw)\] (4)

which is a contraction for small enough \(\) since \(F\) is Lipschitz continuous. It follows from Banach's fixed-point theorem Banach (1922) that the sequence converges linearly. We formalize this in the following theorem, which additionally applies when only stochastic feedback is available.

\[w^{t+1}=(+ A)^{-1}(z-_{}(w^{t},_ {t}))_{t}\] (5)

**Lemma 5.1**.: _Suppose Assumptions 3.2(i), 3.2(ii) and 3.4. Given \(z^{d}\), the iterates generated by (5) with \((0,}{{L}})\) converges to a neighborhood linearly, i.e.,_

\[\|w^{}-J_{ S}(z)\|^{2}( L)^{2 }\|w^{0}-w^{}\|^{2}+}{(1- L)^{2}}^{2}.\] (6)

The resulting update in (5) is identical to GDA but crucially always steps from \(z\). We use this as a subroutine in RAPP to get convergence under a cohypomonotone operator while only suffering a logarithmic factor in the rate.

InterpretationIn the special case of the constrained minimax problem in (2), the application of the resolvent \(J_{ S}(z)\) is equivalent to solving the following optimization problem

\[_{x^{}}_{y^{}}_{ }(x^{},y^{}):=(x^{},y^{})+\| x^{}-x\|^{2}-\|y^{}-y\|^{2}}.\] (7)

for appropriately chosen \((0,)\). (5) can thus be interpreted as solving a particular regularized subproblem. Later we will drop this regularization to arrive at the Lookahead algorithm.

## 6 Last iterate under cohypomonotonicity

As stated in Section 5, we can obtain convergence using the approximate resolvent through Theorem C.1. The convergence is provided in terms of the average, so additional work is needed for a last iterate result. IKM iteration on the approximate resolvent (i.e. \(_{k}(z)=J_{ S}(z)+e^{k}\)) becomes,

\[^{k} =z^{k}-v^{k} v^{k} S(^{k})\] (8a) \[z^{k+1} =(1-)z^{k}+(^{k}+e^{k})\] (8b)

with \((0,1)\) and \(>0\) and error \(e^{k}^{d}\). Without error, (8) reduces to relaxed proximal point

\[z^{k+1}=(1-)z^{k}+ J_{ S}(z^{k})\] (Relaxed PP )

For a last iterate result it remains to argue that the residual \(\|J_{ S}(z^{k})-z^{k}\|\) is monotonically decreasing (up to an error we can control). Showing monotonic decrease is fairly straightforward if \(=1\) (see Lemma E.1 and the associated proof). However, we face additional complication due to the averaging, which is apparent both from the proof and the slightly more complicated error term in the following lemma.

**Lemma 6.1**.: _If \(S\) is \(\)-comonotone with \(>-\) then (8) satisfies for all \(z^{}S\),_

\[\|J_{ S}(z^{k})-z^{k}\|^{2}\|J_{ S}(z^{k-1})-z^{k-1}\|^{2}+ _{k}(z^{})\]

_where \(_{k}(z):=4\|e^{k}\|(\|z^{k+1}-z\|+\|z^{k}-z\|)\)._

The above lemma allows us to obtain last iterate convergence for IKM on the inexact resolvent by combing the lemma with Theorem C.1.

**Theorem 6.2** (Last iterate of inexact resolvent).: _Suppose Assumptions 3.2 and 3.4 with \(_{k}\). Consider the sequence \((z^{k})_{k}\) generated by (8) with \((0,1)\) and \(>-\). Then, for all \(z^{}\,S\),_

\[[\|J_{ S}(z^{K})-z^{K}\|^{2}]-z^{}\|^{2}+ _{k=0}^{K-1}_{k}(z^{})}{(1-)K}+ {K}_{k=0}^{K-1}_{j=k}^{K-1}_{j}(z^{}),\]

_where \(_{k}(z):=2[\|e^{k}\|\|z^{k}-z\|]+^{2} [\|e^{k}\|^{2}]\) and \(_{k}(z):=4[\|e^{k}\|(\|z^{k+1}-z\|+\|z^{k}-z\|)]\)._

_Remark 6.3_.: Notice that the rate in Theorem 6.2 has _no_ dependency on \(\). Specifically, it gets rid of the factor \(/(+2)\) which Gorbunov et al. (2022b, Thm. 3.2) shows is unimprovable for PP. Theorem 6.2 requires that the iterates stays bounded. In Corollary 6.4 we will assume bounded diameter for simplicity, but it is relatively straightforward to show that the iterates can be guaranteed to be bounded by controlling the inexactness (see Lemma E.2).

All that remains to get convergence of the explicit scheme in RAPP, is to expand and simplify the errors \(_{k}(z)\) and \(_{k}(z)\) using the approximation of the resolvent analyzed in Lemma 5.1.

**Corollary 6.4** (Explicit inexact resolvent).: _Suppose Assumption 3.2 holds. Consider the sequence \((z^{k})_{k}\) generated by RAPP with deterministic feedback and \(>-\). Then, for all \(z^{}\,S\) with \(D:=_{j}\|z^{j}-z^{}\|<\),_

1. _with_ \(=}{{}})}\)_:_ \(_{i=0}^{K-1}\|J_{ S}(z^{k})-z^{k}\|^{2}= -z^{}\|^{2}}{(1-)K}+}{(1-)K} \)_._
2. _with_ \(=}{(}{{}})}\)_:_ \(\|J_{ S}(z^{K})-z^{K}\|^{2}=-z^{}\|^{ 2}}{(1-)K}+}{K}+}{(1-)K^{2}},\)_._

_Remark 6.5_.: Corollary 6.4(ii) implies an oracle complexity of \((^{-2})^{-1}\) for ensuring that the last iterate satisfies \(\|J_{ S}(z^{K})-z^{K}\|^{2}\). A stochastic extension is provided in Corollary E.3 by taking the batch size increasing. Notice that RAPP, for \(=2\) inner steps, reduces to EG+ in the unconstrained case where \(A 0\).

## 7 Analysis of Lookahead

The update in RAPP leads to a fairly conservative update in the inner loop, since it corresponds to optimizing a highly regularized subproblem as noted in Section 5. Could we instead replace the optimization procedure with gradient descent ascent (GDA)? If we replace the inner optimization routine we recover what is known as the Lookahead (LA) algorithm

\[w_{k}^{0} =z^{k}\] (LA-GDA) \[w_{k}^{t+1} =w_{k}^{t}- Fw_{k}^{t} t=0,...,-1\] (LA-GDA) \[z^{k+1} =(1-)z^{k}+ w_{k}^{}\]

We empirically demonstrate that this scheme can converge for nonmonotone problems for certain choices of parameters (see Figure 2). However, what global guarantees can we provide theoretically?

It turns out that for LA-GDA with two inner steps (\(=2\)) we have an affirmative answer. After some algebraic manipulation it is not difficult to see that the update can be simplified as follows

\[z^{k+1}=(z^{k}-2 Fz^{k})+(z^{k}-2  F(z^{k}- Fz^{k})).\] (9)This is the average of GDA and EG+ (when \((0,}{{2}})\)). This observation allows us to show convergence under cohypomonotonicity. This positive result for nonmonotone problems partially explains the stabilizing effect of LA-GDA.

**Theorem 7.1**.: _Suppose Assumption 3.2 holds. Consider the sequence \((z^{k})_{k}\) generated by LA-GDA with \(=2\), \(}{{L}}\) and \((0,}{{2}})\). Furthermore, suppose that_

\[2>-(1-2) 2 2-(1-^{2 }L^{2}).\] (10)

_Then, for all \(z^{}\,F\),_

\[_{k=0}^{K-1}\|F^{k}\|^{2}-z^{}\|^{ 2}}{(1-2)+2K}.\] (11)

_Remark 7.2_.: For \( 0\) and \(=}{{L}}\) where \(c(0,)\), sufficient condition reduces to \(-(1-^{2}L^{2})/2=-)}}{{2L}}\), of which the minimum is attained with \(c=}{{}}\), leading to the requirement \(-}{{3L}}\). A similar statement is possible for \(z^{k}\). Thus, (LA-GDA) improves on the range of \(\) compared with EG (see Table 1).

For larger \(\), LA-GDA does not necessarily converge (see Figure 3 for a counterexample). We next ask what we would require of the base optimizer to guarantee convergence for any \(\). To this end, we replace the inner iteration with some abstract algorithm \(:^{d}^{d}\), i.e.

\[w_{k}^{0} =z^{k}\] (LA) \[w_{k}^{t+1} =(w_{k}^{t}) t=0,...,-1\] \[z^{k+1} =(1-)z^{k}+ w_{k}^{}\]

Convergence follows from quasi-nonexpansiveness.

**Theorem 7.3**.: _Suppose \(:^{d}^{d}\) is quasi-nonexpansive. Then \((z^{k})_{k}\) generated by (LA) converges to some \(z^{}\,\)._

_Remark 7.4_.: Even though the base optimizer \(\) might not converge (since nonexpansiveness is not sufficient), Theorem 7.3 shows that the outer loop converges. Interestingly, this aligns with the benefit observed in practice of using the outer iteration of Lookahead (see Figure 4).

CocoerciveFrom Theorem 7.3 we almost immediately get converge of LA-GDA for coercive problems since \(V=- F\) is nonexpansive iff \( F\) is \(}{{2}}\)-cocoercive.

**Corollary 7.5**.: _Suppose \(F\) is \(}{{L}}\)-cocoercive. Then \((z^{k})_{k}\) generated by LA-GDA with \(}{{L}}\) converges to some \(z^{}\,F\)._

_Remark 7.6_.: Corollary 7.5 can trivially be extended to the constrained case by observing that also \(V=(+ A)^{-1}(- F)\) is nonexpansive when \(A\) is maximally monotone. As a special case this captures constrained convex and gradient Lipschitz minimization problems.

Figure 2: LA-GDA and RAPP can converge for Hsieh et al. (2021, Ex. 5.2). Interestingly, we can set the stepsize \(\) larger than \(}{{L}}\) while RAPP remains stable. Approximate proximal point (APP) with the same stepsize diverges (the iterates of APP are deferred to Figure 6). In this example, it is apparent from the rates, that there is a benefit in replacing the conservative inner update in RAPP with GDA in LA-GDA as explored in Section 7.

MonotoneWhen only monotonicity and Lipschitz holds we may instead consider the following extragradient based version of Lookahead (first empirically investigated in Chavdarova et al. (2020))

\[w_{k}^{0} =z^{k}\] (LA-EG) \[w_{k}^{t+1} =(w_{t}^{k}) t=0,...,-1\] \[z^{k+1} =(1-)z^{k}+ w_{k}^{}\]

where \((z)=z- F(z- Fz)\). We show in Theorem F.1 that the \(\)-operator of the inner loop is quasi-nonexpansive, which implies convergence of LA-EG through Theorem 7.3. Theorem F.1 extends even to cases where \(A 0\) by utilizing the forward-backward-forward construction of Tseng (1991). This providing the first global convergence guarantee for Lookahead beyond bilinear games.

CohypomonotoneFor cohypomonotone problems large \(\) may prevent LA-GDA from converging (see Figure 3 for a counterexample). Therefore we propose replacing the inner optimization loop in LA-GDA with the method proposed in (Pethick et al., 2022, Alg. 1). Let \(H=- F\). We can write one step of the inner update with \((0,1)\) as

\[^{+}(w)=w+2(H-Hw)=( + A)^{-1}Hw.\] (12)

The usefulness of the operator \(^{+}:^{d}^{d}\) comes from the fact that it is quasi-nonexpansive under Assumption 3.2 (see Theorem G.1). Thus, Theorem 7.3 applies even when \(F\) is only cohypomonotone if we make the following modification to LA-GDA

\[w_{k}^{0} =z^{k}\] (LA-CEG+) \[w_{k}^{t+1} =^{+}(w_{k}^{t}) t=0,...,-1\] \[z^{k+1} =(1-)z^{k}+ w_{k}^{}\]

In the unconstrained case (\(A 0\)) this reduces to using the EG+ algorithm of Diakonikolas et al. (2021) for the inner loop. We have the following convergence guarantee.

**Corollary 7.7**.: _Suppose Assumption 3.2 holds. Then \((z^{k})_{k}\) generated by LA-CEG+ with \((0,1)\), \((-2_{+},}{{L}})\) and \((0,1+)\) converges to some \(z^{}\,S\)._

## 8 Experiments

This section demonstrates that linear interpolation can lead to an improvement over common baselines.

Synthetic examplesFigures 2 and 3 demonstrate RAPP, LA-GDA and LA-CEG+ on a host of nonmonotone problems (Hsieh et al. (2021, Ex. 5.2), Pethick et al. (2022, Ex. 3(iii)), Pethick et al. (2022, Ex. 5)). See Appendix H.2 for definitions and further details.

Figure 3: We test the Lookahead variants on Pethick et al. (2022, Ex. 3(iii)) where \((}{{8L}},}{{10L}})\) (left) and Pethick et al. (2022, Ex. 5) with \(=}{{3}}\) (right). For the left example LA-GDA (provably) converges for \(=2\), but may be nonconvergent for larger \(\) as illustrate. Both variants of LA-GDA diverges in the more difficult example on the right, while LA-CEG+ in contrast provably converges. It seems that LA-CEG+ trades off a constant slowdown in the rate for convergence in a larger class.

[MISSING_PAGE_FAIL:9]

Acknowledgements

Thanks to Leello Dadi and Stratis Skoulakis for helpful discussion. This work was supported by Google. This work was supported by Hasler Foundation Program: Hasler Responsible AI (project number 21043). This work was supported by the Swiss National Science Foundation (SNSF) under grant number 200021_205011. This project has received funding from the European Research Council (ERC) under the European Union's Horizon 2020 research and innovation programme (grant agreement n\({}^{}\) 725594 - time-data).