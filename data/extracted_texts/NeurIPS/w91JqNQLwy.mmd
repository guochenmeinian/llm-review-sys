# A Fast and Provable Algorithm for Sparse Phase Retrieval

Anonymous Author(s)

Affiliation

Address

email

###### Abstract

We study the sparse phase retrieval problem, which aims to recover a sparse signal from a limited number of phaseless measurements. Existing algorithms for sparse phase retrieval primarily rely on first-order methods with linear convergence rate. In this paper, we propose an efficient second-order algorithm based on Newton projection, which maintains the same per-iteration computational complexity as popular first-order methods. The proposed algorithm is theoretically guaranteed to converge to the ground truth (up to a global sign) at a quadratic convergence rate after at most \((\|^{}\|/x_{}^{})\) iterations, provided a sample complexity of \((s^{2} n)\), where \(^{}^{n}\) represents an \(s\)-sparse ground truth signal. Numerical experiments demonstrate that our algorithm not only outperforms state-of-the-art methods in terms of achieving a significantly faster convergence rate, but also excels in attaining a higher success rate for exact signal recovery from noise-free measurements and providing enhanced signal reconstruction in noisy scenarios.

## 1 Introduction

We study the phase retrieval problem, which involves reconstructing an \(n\)-dimensional signal \(^{}\) using its intensity-only measurements:

\[y_{i}=|_{i},^{}|^{2}, i=1,2,,m,\] (1)

where each \(y_{i}\) represents a measurement, \(_{i}\) denotes a sensing vector, \(^{}\) is the unknown signal to be recovered, and \(m\) is the total number of measurements. The phase retrieval problem arises in various applications, including diffraction imaging , X-ray crystallography [2; 3], and optics , where detectors can only record the squared modulus of Fresnel or Fraunhofer diffraction patterns of radiation scattered from an object. The loss of phase information complicates the understanding of the scattered object, as much of the image's structural content may be encoded in the phase.

Although the phase retrieval problem is ill-posed and even NP-hard , several algorithms have been proven to succeed in recovering target signals under certain assumptions. Algorithms can be broadly categorized into convex and nonconvex approaches. Convex methods, such as PhaseLift [6; 7], PhaseCut , and PhaseMax [9; 10], offer optimal sample complexity but are computationally challenging in high-dimensional cases. To improve computational efficiency, nonconvex approaches are explored, including alternating minimization , Wirtinger flow , truncated amplitude flow , Riemannian optimization , Gauss-Newton [14; 15], and Kaczmarz [16; 17]. Despite the nonconvex nature of its objective function, the global geometric landscape lacks spurious local minima [18; 19], allowing algorithms with random initialization to work effectively [20; 21].

The nonconvex approaches previously mentioned can guarantee successful recovery of the ground truth (up to a global phase) with a sample complexity \(m(n^{a}n)\), where \(a 0\). This complexity is nearly optimal, as the phase retrieval problem requires \(m 2n-1\) for real signals and \(m 4n-4\) for complex signals . However, in practical situations, especially in high-dimensional cases, the number of available measurements is often less than the signal dimension (_i.e._, \(m<n\)), leading to a need for further reduction in sample complexity.

In this paper, we focus on the sparse phase retrieval problem, which aims to recover a sparse signal from a limited number of phaseless measurements. It has been established that the minimal sample complexity required to ensure \(s\)-sparse phase retrievability in the real case is only \(2s\) for generic sensing vectors . Several algorithms have been proposed to address the sparse phase retrieval problem [24; 25; 26; 27; 28]. These approaches have been demonstrated to effectively reconstruct the ground truth using \((s^{2} n)\) Gaussian measurements. While this complexity is not optimal, it is significantly smaller than that in general phase retrieval.

### Contributions

Existing algorithms for sparse phase retrieval primarily employ first-order methods with linear convergence. Recent work  introduced a second-order method, while it fails to obtain a quadratic convergence rate. The main contributions of this paper can be summarized in three key points:

1. We propose a second-order algorithm based on Newton projection for sparse phase retrieval that maintains the same per-iteration computational complexity as popular first-order methods. To ensure fast convergence, we integrate second-order derivative information from intensity-based empirical loss into the search direction; to ensure computational efficiency, we restrict the Newton update to a subset of variables, setting others to zero in each iteration.
2. We establish a non-asymptotic quadratic convergence rate for our proposed algorithm and provide the iteration complexity. Specifically, we prove that the algorithm converges to the ground truth (up to a global sign) at a quadratic rate after at most \((|^{}|/x_{}^{})\) iterations, provided a sample complexity of \((s^{2} n)\). To the best of our knowledge, this is the first algorithm to establish a quadratic convergence rate for sparse phase retrieval.
3. Numerical experiments demonstrate that the proposed algorithm achieves a significantly faster convergence rate in comparison to state-of-the-art methods. Furthermore, the experiments reveal that our algorithm attains a higher success rate in exact signal recovery from noise-free measurements and provides enhanced signal reconstruction performance in noisy scenarios, as evidenced by the improved Peak Signal-to-Noise Ratio (PSNR).

Notation:The \(p\)-norm \(\|\|_{p}:=(_{i=1}^{n}|x_{i}|^{p})^{1/p}\) for \(p 1\). \(\|\|_{0}\) denotes the number of nonzero entries of \(\), and \(\|\|\) denotes the 2-norm. For a matrix \(^{m n}\), \(\|\|\) is the spectral norm of \(\). For any \(q_{1} 1\) and \(q_{2} 1\), \(\|\|_{q_{2} q_{1}}\) denotes the induced operator norm from the Banach space \((^{n},\|\|_{q_{2}})\) to \((^{m},\|\|_{q_{1}})\). \(_{}()\) and \(_{}()\) denote the smallest and largest eigenvalues of the matrix \(\). \(||\) denotes the number of elements in \(S\). \(\) denotes the entrywise product of \(\) and \(\). For functions \(f(n)\) and \(g(n)\), we write \(f(n) g(n)\) if \(f(n) cg(n)\) for some constant \(c(0,+)\). For \(\), \(^{}^{n}\), the distance between \(\) and \(^{}\) is defined as \((,^{}):=\{\|-^{} \|,\|+^{}\|\}\). \(x_{}^{}\) denotes the smallest nonzero entry in magnitude of \(^{}\).

## 2 Problem Formulation and Related Works

We first present the problem formulation for sparse phase retrieval, and then review related works.

### Problem formulation

The standard sparse phase retrieval problem can be concisely expressed as finding \(\) that satisfies

\[|_{i},|^{2}=y_{i}\,i=1,,m, \|\|_{0} s,\] (2)

where \(\{_{i}\}_{i=1}^{m}\) are known sensing vectors and \(\{y_{i}\}_{i=1}^{m}\) represent phaseless measurements with \(y_{i}=|_{i},^{}|^{2}\), where \(^{}\) is the ground truth signal (\(\|^{}\|_{0} s\)). While sparsity level \(s\) is assumed known a priori for theoretical analysis, our experiments will also explore cases with unknown \(s\).

To address Problem (2), various problem reformulations have been explored. Convex formulations, such as the \(_{1}\)-regularized PhaseLift method , often use the lifting technique and solve the problem in the \(n n\) matrix space, resulting in high computational costs. To enhance computational efficiency, nonconvex approaches [25; 26; 28; 29] are explored, which can be formulated as:

\[}{}\ f(),\| \|_{0} s.\] (3)

Both the loss function \(f()\) and the \(_{0}\)-norm constraint in Problem (3) are nonconvex, making it challenging to solve. Two prevalent loss functions are investigated: intensity-based empirical loss

\[f_{I}():=_{i=1}^{m}(|_{i}, |^{2}-y_{i})^{2},\] (4)

and amplitude-based empirical loss

\[f_{A}():=_{i=1}^{m}(|_{i}, |-z_{i}^{2}\,,\] (5)

where \(z_{i}=}\), \(i=1,,m\). The intensity-based loss \(f_{I}()\) is smooth, while the amplitude-based loss \(f_{A}()\) is non-smooth because of the modulus.

### Related works

Existing nonconvex sparse phase retrieval algorithms can be broadly classified into two categories: gradient projection methods and alternating minimization methods. Gradient projection methods, such as ThWF  and SPARTA , employ thresholded gradient descent and iterative hard thresholding, respectively. On the other hand, alternating minimization methods, including CoPRAM  and HTP , alternate between updating the signal and phase. When updating the signal, formulated as a sparsity-constrained least squares problem, CoPRAM leverages the cosamp method , while HTP applies the hard thresholding pursuit algorithm . In this paper, we introduce a Newton projection-based algorithm that incorporates second-order derivative information, resulting in a faster convergence rate compared to gradient projection methods, and, unlike alternating minimization methods, it eliminates the need for separate signal and phase updates. We note that ThWF and our algorithm utilize intensity-based loss as the objective function, while SPARTA, CoPRAM, and HTP employ amplitude-based loss. All these algorithms require a sample complexity of \((s^{2} n)\) under Gaussian measurements for successful recovery.

The majority of sparse phase retrieval algorithms, such as ThWF, SPARTA, and CoPRAM, are first-order methods with linear convergence rates. While HTP is a second-order method that converges in a finite number of iterations, it fails to establish a quadratic convergence rate. We propose a second-order algorithm that attains a non-asymptotic quadratic convergence rate and exhibits lower iteration complexity compared to HTP. Our algorithm maintains the same computational complexity per iteration as popular first-order methods when \(s\). This condition is always assumed to hold true; otherwise, the established sample complexity for sparse phase retrieval algorithms, \((s^{2} n)\), would be reduced to that of general phase retrieval methods. Table 1 presents a comparative overview of the previously discussed methods and our proposed method.

  
**Methods** & **Per-iteration cost** & **Iteration complexity** & **Loss function** & **Algorithm types** \\  ThWF  & \((n^{2} n)\) & \(((1/))\) & \(f_{I}()\) & Grad. Proj. \\ SPARTA  & \((ns^{2} n)\) & \(((1/))\) & \(f_{A}()\) & Grad. Proj. \\ CoPRAM  & \((ns^{2} n)\) & \(((1/))\) & \(f_{A}()\) & Alt. Min. \\ HTP  & \(((n+s^{2})s^{2} n)\) & \(((s^{2} n)+(\|^{}\|/x_{}^{}))\) & \(f_{A}()\) & Alt. Min. \\ Proposed & \(((n+s^{2})s^{2} n)\) & \((((1/))+(\|^{}\|/x_{}^{}))\) & \(f_{I}()\) & Newton Proj. \\   

Table 1: Overview of per-iteration computational cost, numbers of iterations for convergence, loss function, and algorithm types for various methods. \(^{}\) represents the ground truth signal with dimension \(n\) and sparsity \(s\), and \(x_{}^{}\) denotes the smallest nonzero entry in magnitude of \(^{}\).

Main Results

In this section, we present our proposed algorithm for sparse phase retrieval. Generally, nonconvex methods comprise two stages: initialization and refinement. The first stage generates an initial guess close to the target signal, while the second stage refines the initial guess using various methods, such as ThWF, SPARTA, CoPRAM, and HTP. Our proposed algorithm adheres to this two-stage strategy. In the first stage, we employ an existing effective method to generate an initial point. Our primary focus is on the second stage, wherein we propose an efficient second-order algorithm based on Newton projection to refine the initial guess.

Before delving into the details of our proposed algorithm, we present a unified algorithmic framework for addressing the sparsity-constrained optimization problem in Eq. (3), as summarized in . Given the \(k\)-th iterate \(^{k}\), the next iterate \(^{k+1}\) can be obtained through the following steps:

**Step 1** (Hard thresholding):

\[^{k+1}=_{r}((^{k})),\] (6)
**Step 2** (Debiasing):

\[^{k+1}=}{}\;_{k}(),()_{k+1},\] (7)
**Step 3** (Pruning):

\[^{k+1}_{s}(^{k+1}),\] (8)

where \((^{k})\) is typically chosen as either \( f(^{k})\) or \(^{k}- f(^{k})\), \(_{k}()\) is designed based on the objective function \(f()\) and the iterate \(^{k}\), and \(_{k+1}\) is usually defined as the support of \(^{k+1}\). The hard-thresholding operator, denoted by \(_{s}\), is defined with a sparsity level of \(s\) as follows:

\[_{s}():=}{}\;\|-\| ^{2},\|\|_{0} s.\] (9)

A variety of well-known algorithms for solving sparsity-constrained optimization problems adhere to the three-step algorithmic framework mentioned earlier. For instance, the Iterative Hard Thresholding (IHT) algorithm solely performs Step 1 using \(_{s}(^{k}- f(^{k}))\) with \(\) the stepsize; the Hard Thresholding Pursuit (HTP) implements the first two steps by computing \(^{k+1}\) via one-step IHT in Step 1, and then solving the support-constrained problem in Step 2 with \(_{k+1}=(^{k+1})\); the Compressive Sampling Matching Pursuit (CoSaMP) executes all three steps, calculating \(^{k+1}=_{2s}( f(^{k}))\) in Step 1, performing Step 2 with \(_{k+1}=(^{k+1})(^{k})\), and pruning the result in Step 3 to ensure an \(s\)-sparse level.

Several state-of-the-art methods for sparse phase retrieval share strong connections with the previously described popular algorithms for sparsity-constrained optimization, and thus relate closely to the algorithmic framework. SPARTA combines IHT with gradient truncation to eliminate erroneously estimated signs. HTP merges hard thresholding pursuit with alternating minimization, updating the signal and phase alternately. CoPRAM integrates CoSaMP with alternating minimization. Our proposed algorithm will also be presented using this algorithmic framework.

### Proposed algorithm

In this subsection, we introduce our proposed algorithm for sparse phase retrieval, which utilizes the intensity-based loss \(f_{I}\) defined in Eq. (4) as the objective function. The algorithm incorporates the first two steps of the previously discussed algorithmic framework.

Our algorithm is developed based on the Newton projection method. It is worth mentioning that Newton-type methods typically require solving a linear system at each iteration to determine the Newton direction. This generally results in a computational cost of \((n^{3})\) for our problem, rendering it impractical in high-dimensional situations. To address this challenge, we categorize variables into two groups at each iteration: _free_ and _fixed_, updating them separately. The _free_ variables, consisting of at most \(s\) variables, are updated according to the (approximate) Newton direction, while the _fixed_ variables are set to zero. This strategy requires solving a linear system of size \(s s\), substantially decreasing the computational expense from \((n^{3})\) to \((s^{3})\).

In the first step, we identify the set of _free_ variables using one-step IHT of the loss \(f_{A}()\) in (5):

\[_{k+1}=(_{s}(^{k}-  f_{A}(^{k}))),\]

where \(\) is the stepsize. Since \(f_{A}\) is non-smooth, we adopt the generalized gradient  as \( f_{A}\). The \(s\)-sparse hard thresholding limits \(|_{k+1}|\) to \(s\), implying that there are at most \(s\)_free_ variables. We only update _free_ variables along the approximate Newton direction and set others to zero.

In the second step, we update the _free_ variables in \(_{k+1}\) by solving a support-constrained problem in Eq. (7). Note that we adopt the intensity-based loss \(f_{I}\) as the objective function. To accelerate convergence, we choose function \(_{k}()\) in (7) as the second-order Taylor expansion of \(f_{I}\) at \(^{k}\):

\[_{k}():=f_{I}(^{k})+ f_{I}(^{k}),\; -^{k}+-^{k},\; ^{2}f_{I}(^{k})(-^{k}).\]

Let \(^{}\) denote the minimizer of Problem (7). For notational simplicity, define \(^{k}_{_{k+1}}= f_{I}(^{k})_{ _{k+1}}\), which denotes the sub-vector of \( f_{I}(^{k})\) indexed by \(_{k+1}\), \(^{k}_{_{k+1}}=^{2}f_{I}(^{k})_{ _{k+1}}\), which represents the principle sub-matrix of the Hessian indexed by \(_{k+1}\), and \(^{k}_{_{k+1},^{c}_{k+1}}=^{2}f_{I}( ^{k})_{_{k+1},^{c}_{k+1}}\), denoting the sub-matrix of the Hessian whose rows and columns are indexed by \(_{k+1}\) and \(^{c}_{k+1}\), respectively. Following from the first-order optimality condition of Problem (7), we obtain that \(^{}_{^{c}_{k+1}}=\) and \(^{}_{_{k+1}}\) satisfies

\[^{k}_{_{k+1}}^{}_{_{k+1}}-^{k}_{_{k+1}}=^{k}_{_{k+1},^{c }_{k+1}}^{}_{^{c}_{k+1}}-^{k}_{_{k+1}}.\] (10)

As a result, we obtain the next iterate \(^{k+1}\) by

\[^{k+1}_{_{k+1}}=^{k}_{_{k+1}}-^{k}_{ _{k+1}},^{k+1}_{^{c}_{k+1}}= ,\] (11)

where \(^{k}_{_{k+1}}\) represents the approximate Newton direction over \(_{k+1}\), which can be calculated by

\[^{k}_{_{k+1}}^{k}_{_{k+1}}=-^{k}_{ _{k+1},J_{k+1}}^{k}_{J_{k+1}}+^{k}_{_{k+1}}.\] (12)

where \(J_{k+1}:=_{k}_{k+1}\) with \(|J_{k+1}| s\). In contrast to Eq. (10), we replace \(^{k}_{^{c}_{k+1}}\) with \(^{k}_{J_{k+1}}\) in (12), as \(J_{k+1}\) captures all nonzero elements in \(^{k}_{^{c}_{k+1}}\) as follows:

\[^{k}_{^{c}_{k+1}}= []{c}^{k}_{_{k+1}_{k}}\\ =^{k}_{_{k }_{k+1}}\\ =^{k}_{J_{k+1}}\\ ,\] (13)

where operator \(\) arranges all nonzero elements of a vector to appear first, followed by zero elements. The first equality in (13) follows from the fact that \((^{k})_{k}\). By calculating \(^{k}_{_{k+1},J_{k+1}}\) rather than \(^{k}_{_{k+1},^{c}_{k+1}}\) as in (12), the computational cost is substantially reduced from \((smn)\) to \((s^{2}m)\). The costs for computing \(^{k}_{_{k+1}}\) and solving the linear system in (12) are \((s^{2}m)\) and \((s^{3})\), respectively. Therefore, the overall computational cost for Step 2 is \((s^{2}m)\), while the cost for Step 1 amounts to \((mn)\), which involves calculating \( f_{A}(^{k})\).

In summary, the computational costs for Steps 1 and 2 are \((mn)\) and \((s^{2}m)\), respectively, making the total cost per iteration \((n+s^{2})m\), with \(m(s^{2} n)\) that is required for successful recovery. Since \(s\) is always assumed to hold true as discussed in Section 2.2, the per-iteration computational complexity of our algorithm is equivalent to that of popular first-order methods, which is \((ns^{2} n)\). The pruning step is omitted as \(^{k+1}\) in (11) is already \(s\)-sparse.

```
0: Data \(\{_{i},y_{i}\}_{i=1}^{m}\), sparsity \(s\), initial estimate \(^{0}\), and stepsize \(\).
1:for\(k=0,1,2,\)do
2: Identify the set of _free_ variables \(_{k+1}=(_{s}(^{k}- f _{A}(^{k})))\);
3: Compute the approximate Newton direction \(^{k}_{_{k+1}}\) over \(_{k+1}\) by solving (12).
4: Update \(^{k+1}\): \[^{k+1}_{_{k+1}}=^{k}_{_{k+1}}-^{k}_{ _{k+1}},^{k+1}_{^{c}_{k+1}}= .\]
5:endfor
6:\(^{k+1}\). ```

**Algorithm 1** Proposed algorithm

### Initialization

The nonconvex nature of phase retrieval problems often requires a well-designed initial guess to find a global minimizer. Spectral initialization is a common approach . In this paper, we adopt a sparse variant of the spectral initialization method to obtain a favorable initial guess for Algorithm 1.

Assuming \(\{_{i}\}_{i=1}^{m}\) are independently drawn from a Gaussian distribution \((,_{n})\), the expectation of the matrix \(_{i=1}^{m}y_{i}_{i}_{i}^{T}\) is \(:=\|^{}\|^{2}_{n}+2^{}(^{ })^{T}\). The leading eigenvector of \(\) is precisely \(^{}\). Hence, the leading eigenvector of \(_{i=1}^{m}y_{i}_{i}_{i}^{T}\) can be close to \(^{}\). However, this method requires the sample complexity of at least \((n)\), which is excessively high for sparse phase retrieval. Leveraging the sparsity of \(^{}\) is crucial to lower this complexity.

We adopt the sparse spectral initialization method proposed in . Specifically, we first collect the indices of the largest \(s\) values from \(\{_{i=1}^{m}y_{i}[_{i}]_{j}^{2}\}_{j=1}^{n}\) and obtain the set \(\), which serves as an estimate of the support of the true signal \(^{}\). Next, we construct the initial guess \(^{0}\) as follows: \(^{0}_{}\) is the leading eigenvector of \(_{i=1}^{m}y_{i}[_{i}]_{}[_{i}]_{}^{T}\), and \(^{0}_{^{c}}=\). Finally, we scale \(^{0}\) such that \(\|^{0}\|^{2}=_{i=1}^{m}y_{i}\), ensuring the power of \(^{0}\) closely aligns with the power of \(^{}\).

The study in  demonstrates that, given a sample complexity \(m(s^{2} n)\), the aforementioned sparse spectral initialization method can produce an initial estimate \(^{0}\) that is sufficiently close to the ground truth. Specifically, it holds \((^{0},^{})\|^{}\|\) for any \((0,1)\), with a probability of at least \(1-8m^{-1}\).

### Theoretical results

Given the nonconvex nature of both the objective function and the constraint set in the sparse phase retrieval problem, a thorough theoretical analysis is essential for ensuring the convergence of our algorithm to the ground truth. In this subsection, we provide a comprehensive analysis of the convergence of our algorithm for both noise-free and noisy scenarios.

#### 3.3.1 Noise-free case

We begin by the noise-free case, in which each measurement \(y_{i}=|_{i},^{}|^{2}\). Starting with an initial guess obtained via the sparse spectral initialization method, the following theorem shows that our algorithm exhibits a quadratic convergence rate after at most \((\|^{}\|/x^{}_{})\) iterations.

**Theorem 3.1**.: _Let \(\{_{i}\}_{i=1}^{m}\) be \(i.i.d.\) random vectors distributed as \((,_{n})\), and \(^{}^{n}\) be any signal with \(\|^{}\|_{0} s\). Let \(\{^{k}\}_{k 1}\) be the sequence generated by Algorithm 1 with the input measurements \(y_{i}=|_{i},^{}|^{2}\), \(i=1,,m\), and the initial guess \(^{0}\) generated by the sparse spectral initialization method mentioned earlier. There exists positive constants \(,_{1},_{2},C_{1},C_{2},C_{3},C_{4},C_{5}\) such that if the stepsize \([_{1},_{2}]\) and \(m C_{1}s^{2} n\), then with probability at least \(1-(C_{2}K+C_{3})m^{-1}\), the sequence \(\{^{k}\}_{k 1}\) converges to the ground truth \(^{}\) at a quadratic rate after at most \((\|^{}\|/x^{}_{})\) iterations, i.e.,_

\[(^{k+1},^{})^{2}( ^{k},^{}),\,k K,\]

_where \(K C_{4}\|^{}\|/x^{}_{}+C_{5}\), and \(x^{}_{}\) is the smallest nonzero entry in magnitude of \(^{}\)._

The proof of Theorem 3.1 is available in Appendix B.2.

_Remark 3.2_.: Theorem 3.1 establishes the non-asymptotic quadratic convergence rate of our algorithm as it converges to the ground truth, leading to an iteration complexity of \(((1/))+(\|^{}\|/x^{ }_{})\) for achieving an \(\)-accurate solution. This convergence rate is significantly faster than those of state-of-the-art methods such as ThWF , SPARTA , and CoPRAM , which, as first-order methods, exhibit only linear convergence. Although HTP  is a second-order approach, it fails to establish a quadratic convergence rate, and its iteration complexity, \(((n^{s^{2}}))+(\|^{}\|/x^{ }_{})\), is higher than that of our algorithm.

_Remark 3.3_.: It is worth emphasizing that while the superlinear convergence is extensively established for Newton-type methods in existing literature, it often holds only asymptotically: the ratio of the distance to the optimal solution at \((k+1)\)-th and \(k\)-th iterations tends to zero as \(k\) goes to infinity. Consequently, the overall iteration complexity cannot be explicitly characterized. This fact highlights the significance of establishing a non-asymptotic superlinear convergence rate.

#### 3.3.2 Noisy case

In real-world scenarios, observations are frequently affected by noise. In what follows, we demonstrate the robustness of our proposed algorithm in the presence of noise within phaseless measurements. Building upon [25; 34], we assume that the noisy measurements are given by:

\[y_{i}=|_{i},^{}|^{2}+_{i},\;\;i=1,,m,\]

where \(\) represents a vector of stochastic noise that is independent of \(\{_{i}\}_{i=1}^{m}\). Throughout this paper, we assume, without loss of generality, that the expected value of \(\) is \(\).

**Theorem 3.4**.: _Let \(\{_{i}\}_{i=1}^{m}\) be \(i.i.d.\) random vectors distributed as \((,_{n})\), and \(^{}^{n}\) be any signal with \(\|^{}\|_{0} s\). Let \(\{^{k}\}_{k 1}\) be the sequence generated by Algorithm 1 with noisy input \(y_{i}=|_{i},^{}|^{2}+_{i}\), \(i=1,,m\). There exists positive constants \(_{1},_{2},C_{6},C_{7},C_{8}\), and \((0,1/8]\), such that if the stepsize \([_{1},_{2}]\), \(m C_{6}s^{2} n\) and the initial guess \(^{0}\) obeys \((^{0},^{})\|^{}\|\) with \(\|^{0}\|_{0} s\), then with probability at least \(1-(C_{7}K^{}+C_{8})m^{-1}\),_

\[(^{k+1},^{})^{}(^{k},^{})+\|\|, \,0 k K^{},\]

_where \(^{}(0,1)\), \((0,1)\), and \(K^{}\) is a positive integer._

The proof of Theorem 3.4 is provided in Appendix B.3. Theorem 3.4 validates the robustness of our algorithm, demonstrating its ability to effectively recover the signal from noisy measurements.

## 4 Experimental Results

In this section, we present a series of numerical experiments designed to validate the efficiency and accuracy of our proposed algorithm. All experiments were conducted on a 2 GHz Intel Core i5 processor with 16 GB of RAM, and all compared methods were implemented using MATLAB.

Unless explicitly specified, the sensing vectors \(\{_{i}\}_{i=1}^{m}\) were generated by the standard Gaussian distribution. The true signal \(^{}\) has \(s\) nonzero entries, where the support is selected uniformly from all subsets of \([n]\) with cardinality \(s\), and their values are independently generated from the standard Gaussian distribution \((0,1)\). In the case of noisy measurements, we have:

\[y_{i}=|_{i},^{}|^{2}+_{i}, \;\;i=1,,m,\] (14)

where \(\{_{i}\}_{i=1}^{m}\) follow \(i.i.d\) standard Gaussian distribution, and \(>0\) determines the noise level.

Figure 1: Relative error versus iterations for various algorithms, with fixed signal dimension \(n=5000\) and sample size \(m=3000\). The results represent the average of 100 independent trial runs.

We compare our proposed algorithm with state-of-the-art methods, including ThWF , SPARTA , CoPRAM , and HTP . For ThWF, we set parameters as recommended in . For SPARTA, we set parameters as follows: \(=1\) and \(||= m/6\). Both HTP and our algorithm use a step size \(\) of 0.95. The maximum number of iterations for each algorithm is 100. The Relative Error (RE) between the estimated signal \(}\) and the ground truth \(^{}\) is defined as \(:=(},^{})}{\|^{ }\|}\). A recovery is deemed successful if \(<10^{-3}\). We provide additional experimental results on robustness to noise levels and phase transition with varying sparsity levels in Appendix A.

Figure 1 compares the number of iterations required for convergence across various algorithms. In these experiments, we set the number of measurements to \(m=3000\), the dimension of the true signal to \(n=5000\), and the sparsity levels to \(s=80\) and \(100\). We consider both noise-free measurements and noisy measurements with a noise level of \(=0.03\). As depicted in Figure 1, all five algorithms perform well under both noise-free and noisy conditions; however, our algorithm converges with significantly fewer iterations compared to state-of-the-art methods.

Table 2 presents a comparison of the convergence running times for various algorithms, corresponding to the experiments depicted in Figure 1. For noise-free measurements, all algorithms are set to terminate when the iterate satisfies the following condition: \((^{},^{})}{\|^{} \|}<10^{-3}\), which indicates a successful recovery. In the case of noisy measurements, the termination criterion is set as \((^{}+1,^{})}{\|^{} \|}<10^{-3}\). As evidenced by the results in Table 2, our algorithm consistently outperforms state-of-the-art methods in terms of running time, for both noise-free and noisy cases, highlighting its superior efficiency for sparse phase retrieval applications.

Figure 2 depicts the phase transitions of different algorithms, with the true signal dimension fixed at \(n=3000\) and sparsity levels set to \(s=25\) and \(50\). The phase transition graph is generated by evaluating the successful recovery rate of each algorithm over 100 independent trial runs. Figure 2 shows that the probability of successful recovery for each algorithm transitions from zero to one as the sample size \(m\) increases. Furthermore, our algorithm consistently outperforms state-of-the-art methods, achieving a higher successful recovery rate across various measurement counts.

    &  &  & CoPRAM & HTP & Proposed \\   & Sparsity \(80\) & \(0.3630\) & \(1.0059\) & \(0.9762\) & \(0.0813\) & \(\) \\  & Sparsity \(100\) & \(0.6262\) & \(1.2966\) & \(3.3326\) & \(0.2212\) & \(\) \\   & Sparsity \(80\) & \(0.2820\) & \(1.1082\) & \(1.3426\) & \(0.1134\) & \(\) \\  & Sparsity \(100\) & \(0.4039\) & \(1.6368\) & \(4.1006\) & \(0.2213\) & \(\) \\   

Table 2: Comparison of running times (in seconds) for different algorithms in the recovery of signals with sparsity levels of \(80\) and \(100\) for both noise-free and noisy scenarios.

Figure 2: Phase transition performance of various algorithms for signals of dimension \(n=3000\) with sparsity levels \(s=25\) and \(50\). The results represent the average of 100 independent trial runs.

In practical applications, natural signals may not be inherently sparse; however, their wavelet coefficients often exhibit sparsity. Figure 3 illustrates the reconstruction performance of a signal from noisy phaseless measurements, where the true signal, with a dimension of \(30{,}000\), exhibits sparsity and contains \(208\) nonzero entries under the wavelet transform, using \(20{,}000\) samples. The sampling matrix \(^{20,000 30,000}\) is constructed from a random Gaussian matrix and an inverse wavelet transform generated using four levels of Daubechies 1 wavelet. The noise level is set to \(=0.03\). To evaluate recovery accuracy, we use the Peak Signal-to-Noise Ratio (PSNR), defined as:

\[=10^{2}}{},\]

where \(\) represents the maximum fluctuation in the ground truth signal, and \(\) denotes the mean squared error of the reconstruction. A higher PSNR value generally indicates better reconstruction quality. As depicted in Figure 3, our proposed algorithm outperforms state-of-the-art methods in terms of both reconstruction time and PSNR. It achieves a higher PSNR while requiring considerably less time for reconstruction. In the experiments, the sparsity level is assumed to be unknown, and the hard thresholding sparsity level is set to \(300\) for various algorithms.

## 5 Conclusions and Discussions

In this paper, we have introduced an efficient Newton projection-based algorithm for sparse phase retrieval. Our algorithm attains a non-asymptotic quadratic convergence rate while maintaining the same per-iteration computational complexity as popular first-order methods, which exhibit linear convergence limitations. Empirical results have demonstrated a significant improvement in the convergence rate of our algorithm. Furthermore, experiments have revealed that our algorithm excels in attaining a higher success rate for exact signal recovery with noise-free measurements and provides superior signal reconstruction performance when dealing with noisy data.

Finally, we discuss the limitations of our paper, which also serve as potential avenues for future research. Both our algorithm and state-of-the-art methods share the same sample complexity of \((s^{2} n)\) for successful recovery; however, our algorithm requires this complexity in both the initialization and refinement stages, while state-of-the-art methods require \((s^{2} n)\) for initialization and \((s n/s)\) for refinement. Investigating ways to achieve tighter complexity in our algorithm's refinement stage is a worthwhile pursuit for future studies.

Currently, the initialization stage exhibits a sub-optimal sample complexity of \((s^{2} n)\). A key challenge involves reducing its quadratic dependence on \(s\). Recent work  attained a complexity of \((s n)\), closer to the information-theoretic limit, but relied on the strong assumption of power law decay for sparse signals. Developing an initialization method that offers optimal sample complexity for a broader range of sparse signals is an engaging direction for future research.

Figure 3: Reconstruction of the signal with a dimension of \(30{,}000\) from noisy phaseless measurements by various algorithms. The proposed algorithm requires significantly less time for reconstruction than state-of-the-art methods while preserving the highest PSNR. Time(s) is the running time in seconds.