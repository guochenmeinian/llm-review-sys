# Equivariant Neural Diffusion for Molecule Generation

Francois Cornet

Technical University of Denmark

frjc@dtu.dk

&Grigory Bartosh

University of Amsterdam

g.bartosh@uva.nl

Mikkel N. Schmidt

Technical University of Denmark

mnsc@dtu.dk

&Christian A. Naesseth

University of Amsterdam

c.a.naesseth@uva.nl

###### Abstract

We introduce Equivariant Neural Diffusion (END), a novel diffusion model for molecule generation in \(3\)D that is equivariant to Euclidean transformations. Compared to current state-of-the-art equivariant diffusion models, the key innovation in END lies in its learnable forward process for enhanced generative modelling. Rather than pre-specified, the forward process is parameterized through a time- and data-dependent transformation that is equivariant to rigid transformations. Through a series of experiments on standard molecule generation benchmarks, we demonstrate the competitive performance of END compared to several strong baselines for both unconditional and conditional generation.

## 1 Introduction

The discovery of novel chemical compounds with relevant properties is critical to a number of scientific fields, such as drug discovery and materials design (Merchant et al., 2023). However, due to the large size and complex structure of the chemical space (Ruddigkeit et al., 2012), which combines continuous and discrete features, it is notably difficult to search. Additionally, _ab-initio_ Quantum Mechanics (QM) methods for computing target properties are often computationally expensive, preventing brute-force enumeration. While some of these heavy computations can be amortized through learned surrogates, the need for innovative search methods remains, and generative models have recently emerged as a promising avenue (Anstine and Isayev, 2023). Such models can learn complex data distributions, that, in turn, can be sampled from to obtain novel samples similar to the original data. Compared to other data modalities such as images or text, molecules present additional challenges as they have to adhere to strict chemical rules, and obey the symmetries of the \(3\)D space.

Currently, the most promising directions for molecule generation in \(3\)D are either auto-regressive models (Gebauer et al., 2019, 2022; Luo and Ji, 2022; Daigavane et al., 2024) building molecules one atom at a time, or Diffusion Models (DMs) (Hoogeboom et al., 2022; Vignac et al., 2023; Le et al., 2024) that learn to revert a corruption mechanism that transforms the data distribution into noise. As both approaches directly operate in 3D space, they can leverage architectures designed for machine learned force fields (Unke et al., 2021), that were carefully developed to encode the symmetries inherent to the data (Schutt et al., 2017, 2021; Batzner et al., 2022; Batatia et al., 2022).

The success of DMs has not been limited to molecule generation, and promising results have been demonstrated on a variety of other data modalities (Yang et al., 2023). Nevertheless, most existing DMs pre-specify the forward process, forcing the reverse process to comply with it. A recent line of work has sought to overcome that limitation and improve generation by replacing the fixed forward process with a learnable one (Bartosh et al., 2023; Nielsen et al., 2024; Bartosh et al., 2024).

ContributionsIn this paper, we present Equivariant Neural Diffusion (END), a novel diffusion model for molecule generation in \(3\)D that (1) is equivariant to Euclidean transformations, and (2) features a learnable forward process. We demonstrate competitive unconditional molecule generation performance on the QM9 and GEOM-Drugs benchmarks. For conditional generation driven by composition and substructure constraints, our approach exhibits a substantial performance gain compared to existing equivariant diffusion models. Our set of experiments underscores the benefit of a learnable forward process for improved unconditional and conditional molecule generation.

## 2 Background

We begin by establishing the necessary background for generative modeling of geometric graphs. We first introduce the data representation and its inherent symmetries. We then discuss Diffusion Models (DMs), and more specifically the Equivariant Diffusion Model (EDM) (Hoogeboom et al., 2022). Finally, we present the Neural Flow Diffusion Models (NFDM) framework (Bartosh et al., 2024).

### Equivariance

Molecules as geometric graphs in E(3)We consider geometric graphs embedded in \(3\)-dimensional Euclidean space that represent molecules. Formally, each atomistic system can be described by a tuple \(=(,)\), where \(=(_{1},...,_{M})^{M 3}\) form a collection of vectors in \(3\)D representing the coordinates of the atoms, and \(=(_{1},...,_{M})^{M D}\) are the associated scalar features (e.g. atomic types or charges). When dealing with molecules, we are particularly interested in \(E(3)\), the Euclidean group in \(3\) dimensions, generated by translations, rotations and reflections. Each group element in \(E(3)\) can be represented as a combination of a translation vector \(^{3}\) and an orthogonal matrix \( O(3)\) encoding rotation or reflection. While scalar features \(\) remain invariant, coordinates \(\) transform under translation, rotation and reflection as \(+=(_{1}+,..., {r}_{M}+)\).

Equivariant functionsA function \(f:\) is said to be equivariant to the action of a group \(G\), or \(G\)-equivariant, if \(g f()=f(g), g G\). It is said to be \(G\)-invariant, if \(f()=f(g), g G\). In the case of a function \(f:(^{M 3}^{M D})(^{M  3}^{M D})\) operating on geometric graphs, the function is said to be \(E(3)\)-equivariant if

\[^{(r)}+,^{(h)}=f+ ,,\; O(3)^{3},\]

where \(^{(r)}\) and \(^{(h)}\) denote the output related to \(\) and \(\) respectively. There exists a large variety of graph neural network architectures designed to be equivariant to the Euclidean group (Schutt et al., 2017, 2021; Batzner et al., 2022; Batatia et al., 2022).

Equivariant distributionsA conditional distribution \(p(|)\) is equivariant to rotations and reflections when \(p(|)=p(|),\; O (3)\), while a distribution is said to be invariant when \(p()=p(),\; O(3)\). Regarding translation, it is not possible to have a translation-invariant non-zero distribution, as it would require that \(p()=p(+),^{3}, ^{M 3}\), which would mean that \(p()\) cannot integrate to \(1\)(Garcia Starons et al., 2021). However, a translation-invariant distribution can be constructed in the linear subspace \(R\), where the centre of gravity is fixed to \(\)(i.e. zero CoM subspace): \(R=\{^{M 3}:_{i=1}^{M}_{i}=\}\)(Xu et al., 2022). As \(R\) can be shown to be intrinsically equivalent to \(^{(M-1) 3}\)(Bao et al., 2023), we will consider in what follows that \(\) is defined in \(^{(M-1) 3}\) for ease of notation.

### Equivariant Diffusion Models

Diffusion Models (DMs) (Sohl-Dickstein et al., 2015; Ho et al., 2020) are generative models that learn distributions through a hierarchy of latent variables, corresponding to perturbed versions of the data at increasing noise scales. DMs consist of a forward and a reverse (or generative) process. The Equivariant Diffusion Model (EDM) (Hoogeboom et al., 2022) is a particular instance of a DM, where the learned marginal \(p_{}()\) is made invariant to the action of translations, rotations and reflections by construction. Intuitively, this means that the likelihood of a given molecule under the model does not depend on its orientation.

Forward processThe forward process perturbs samples from the data distribution, \( q()\), over time through noise injection, resulting in a trajectory of latent variables \((_{t})_{t}\), conditional on \(\). The conditional distribution for \((_{t})_{t}\) given \(\), can be described by an initial distribution \(q(_{0}|)\) and a Stochastic Differential Equation (SDE),

\[d\{_{t}^{(r)},_{t}^{(h)}\}=f(t)_{t}^{(r)},_{t}^ {(h)}\,dt+g(t)\,d\{^{(r)},^{(h)}\},\]

where the drift \(f(t)\) and volatility \(g(t)\) are scalar functions of time, and \(^{(r)}\) and \(^{(h)}\) are two independent standard Wiener processes defined in \(^{(M-1) 3}\) and \(^{M D}\) respectively. Specifically, EDM implements the Variance-Preserving SDE (VP-SDE) scheme (Song et al., 2020), with \(f(t)=-(t)\) and \(g(t)=\) for a fixed schedule \((t)\). Due to the linearity of the drift term, the conditional marginal distribution is known in closed-form (Sarkka and Solin, 2019), and can be reconstructed as

\[q[_{t}^{(r)},_{t}^{(h)}][,]=q( _{t}^{(r)}|)q(_{t}^{(h)}|)=(_{t}^{(r) },|_{t},_{t}^{2})(_{t}^{(h) },|_{t},_{t}^{2}),\]

where \(_{t}=(-_{0}^{t}(s)\,ds\,)\) and \(_{t}=1-(-_{0}^{t}(s)\,ds\,)\). It evolves from a low-variance Gaussian centered around the data \(q(_{0}|)(_{0}|,^{2})\) to an uninformative prior distribution (that contains no information about the data distribution), i.e. a unit Gaussian \(q(_{1}|)(_{1}|,)\).

Reverse (generative) processStarting from the prior \([_{1}^{(r)},_{1}^{(h)}](_{t}^{(r)}|, )(_{t}^{(h)}|,)\), samples from \(q()\) can be generated by reversing the forward process. This can be done by following the reverse-time SDE (Anderson, 1982),

\[d_{t}&=f(t)_{t}^{(r)},_{t}^ {(h)}-g^{2}(t)_{_{t}^{(r)}} q(_{t}), _{_{t}^{(h)}} q(_{t})\,dt+g(t)\,d\{}^ {(r)},}^{(h)}\},\]

where \(}^{(r)}\) and \(}^{(h)}\) are independent standard Wiener processes defined in \(^{(M-1) 3}\) and \(^{M D}\), respectively, with time flowing backwards. DMs approximate the reverse process by learning an approximation of the score function \(_{_{t}} q(_{t})\) parameterized by a neural network \(s_{}(_{t},t)\). With the learned score function \(s_{}(_{t},t)\), a sample \(_{0} p_{}(_{0}) q(_{0}) q()\) can be obtained by first sampling from the prior \([_{1}^{(r)},_{1}^{(h)}](_{t}^{(r)}|, )(_{t}^{(h)}|,)\), and then simulating the reverse SDE,

\[d_{t}=f(t)_{t}^{(r)},_{t}^{(h)}-g^{2}( t)s_{}^{(r)}(_{t},t),s_{}^{(h)}(_{t},t) \,dt+g(t)\,d\{}^{(r)},}^{(h)}\},\]

where the true score function has been replaced by its approximation \(s_{}(_{t},t)\). In EDM, the approximate score is parameterized through an equivariant function: \(s_{}(_{t},t)=s_{}^{(r)}(_{t},t),s_{}^{(h) }(_{t},t)\) such that \(s_{}([_{t}^{(r)},_{t}^{(h)}],t)= s_{}^{(r)}(_{t},t),s_{}^{(h)}(_{t},t), \; O(3)\). Practically, this is realized through the specific parameterization,

\[s_{}(_{t},t)=}_{}(_{t},t)- _{t}}{_{t}^{2}},\]

where the data point predictor \(}_{}\) is implemented by an equivariant neural network.

OptimizationThe data point predictor \(}_{}\), or \(s_{}\), is trained by optimizing the denoising score matching loss (Vincent, 2011),

\[_{}=_{u(t),q(,_{t})}(t )s_{}(_{t},t)-_{_{t}} q(_{t}| )_{2}^{2},\]

where \((t)\) is a positive weighting function, and \(u(t)\) is a uniform distribution over the interval \(\).

### Neural Flow Diffusion Models

Neural Flow Diffusion Models (NFDM) (Bartosh et al., 2024) are based on the observation that latent variables in DMs, i.e. \(_{t}\), are conventionally inferred through a pre-specified transformation - as implied by the chosen type of SDE and the noise schedule. This potentially limits the flexibility of the latent space, and makes the learning of the reverse (generative) process more challenging.

Forward processIn contrast to conventional DMs, NFDM define the forward process implicitly through a learnable transformation \(F_{}(,t,)\) of injected noise \(\), time \(t\), and data point \(\). The latent variables \(_{t}\) are obtained by transforming noise samples \(\), conditional on data point \(\) and time step \(t\): \(_{t}=F_{}(,t,)\). If \(F_{}\) is differentiable with respect to \(\) and \(t\), and invertible with respect to \(\), then, for fixed \(\) and \(\), samples from \(q_{}(_{t}|)\) can be obtained by solving the following conditional Ordinary Differential Equation (ODE) until time \(t\),

\[d_{t}=f_{}(_{t},t,)\,dt\,f_{}(_ {t},t,)=(,t,)}{  t}_{=F_{}^{-1}(_{t},t,)},\] (1)

with \(_{0} q(_{0}|)\). While \(F_{}\) and \(q()\) define the conditional marginal distribution \(q_{}(_{t}|)\), we need a distribution over the trajectories \((_{t})_{t}\). NFDM obtain this through the introduction of a conditional SDE starting from \(_{0}\) and running forward in time. Given access to the ODE in Eq. (1) and the score function \(_{_{t}} q_{}(_{t}|)\), the conditional SDE sharing the same conditional marginal distribution \(q_{}(_{t}|)\) is given by

\[d_{t}=f_{}^{F}(_{t},t,)\,dt+g_{}(t)\,d \,f_{}^{F}(_{t},t,)=f_{}(_{t},t,)+ ^{2}(t)}{2}_{_{t}} q_{}(_{t}| ),\] (2)

where the score function of \(q_{}(_{t}|)\) is \(_{_{t}} q_{}(_{t}|)=_{_{t}}  q()+J_{F}^{-1}\), with \(=F_{}^{-1}(_{t},t,)\), and \(J_{F}^{-1}=^{-1}(_{t},t,)}{_{t}}\).

**Reverse (generative) process** A conditional reverse SDE that starts from \(_{1} q(_{1})\), runs backward in time, and reverses the conditional forward SDE from Eq. (2) can be defined as

\[d_{t}=f_{}^{B}(_{t},t,)+g_{}(t)\,d}\,f_{}^{B}(_{t},t,)=f_{}(_{t},t,)-^{2}(t)}{2}_{_{t}} q_{}(_{t}|).\] (3)

As \(\) is unknown when generating samples, we can rewrite Eq. (3) with the prediction of \(\) instead,

\[d_{t}=_{,}(_{t},t)\,dt+g_{}(t)\,d},_{,}(_{t},t)=f_{}^{B} _{t},t,}_{}(_{t},t),\] (4)

where \(}_{}\) is a function that predicts the data point \(\). Provided that the reconstruction distribution \(q(_{0}|)\) and prior distribution \(q(_{1})\) are defined, this fully specifies the reverse (generative) process.

**Optimization** The forward and reverse processes can be optimized jointly by matching the drift terms of the true and approximate conditional reverse SDEs through the following objective,

\[_{}=_{u(t),q_{}(,_{t})} ^{2}(t)}f_{}^{B}(_{t}, t,)-_{,}(_{t},t)_{2}^{2},\] (5)

which can be shown to be equivalent to minimizing the Kullback-Leibler divergence between the posterior distributions resulting from the discretization of Eqs. (3) and (4) (Bartosh et al., 2024).

## 3 Equivariant Neural Diffusion

We now introduce Equivariant Neural Diffusion (END), that generalizes the Equivariant Diffusion Model (EDM) (Hoogeboom et al., 2022), by defining the forward process through a learnable transformation. Our approach is a synthesis of NFDM introduced in Section 2.3, and leverages ideas of EDM outlined in Section 2.2 to maintain the desired invariance of the learned marginal distribution \(p_{,}(_{0})\). By providing an equivariant learnable transformation \(F_{}\) and an equivariant data point predictor \(}_{}\), we show that it is possible to obtain a generative model with the desired properties. Finally, we propose a simple yet flexible parameterization meeting these requirements.

### Formulation

The key innovation in END lies in its forward process, which is also leveraged in the reverse (generative) process. The forward process is defined through a learnable time- and data-dependent transformation \(F_{}(,t,)\), such that the latent \(_{t}\) transforms covariantly with the injected noise \(\) (i.e. a collection of random vectors) and the data point \(\),

\[F_{}(,t,)=F_{ }(,t,)=_{t},\, O(3).\]

We then define \(}_{}\) as another learnable equivariant function, such that the predicted data point transforms covariantly with the latent variable \(_{t}\), i.e. \(}_{}(_{t},t)=}_{}( _{t},t)\). Finally, we choose the noise and prior distribution, i.e. \(p()\) and \(p(_{1})\), to be invariant to the considered symmetry group.

Invariance of the learned distributionWith the following choices: (1) \(p(_{t})\) an invariant distribution, (2) \(F_{}\) an equivariant function that satisfies \(F_{}(,t,)=F_{} (,t,)\), and (3) \(}_{}\) an equivariant function, we have that the learned marginal \(p_{,}(_{0})\) is invariant as desired. This can be shown by demonstrating that the reverse SDE is equivariant. We start by noting that the reverse SDE in END is given by

\[d_{t}=_{,}(_{t},t)\,dt+g_{}(t)\,d}\,.\]

As the Wiener process is isotropic, this boils down to verifying that the drift term, \(_{,}(_{t},t)\) is equivariant, i.e. \(_{,}(_{t},t)=_{, }(_{t},t)\). As the drift is expressed as a sum of two terms, we inspect each of them separately. The first term is

\[f_{}_{t},t,}_{}(_{t},t)= ,t,}_{}( _{t},t)}{ t}_{=F_{}^{-1}( _{t},t,}_{}(_{t},t))}.\]

If \(F_{}\) is equivariant, then so is its time-derivative (see Appendix A.3.1). The same holds for its inverse with respect to \(\) (see Appendix A.3.2), such that we have \(F_{}^{-1}(_{t},t,)=F_{ }^{-1}(_{t},t,)=\). We additionally have that \(}_{}\) is equivariant, by definition. As the equivariance of \(F_{}\) implies the equivariance of \(q_{}\), from the second term of the drift, we observe that, for \(_{t}=_{t}\), we have

\[_{_{t}} q_{}_{t}|}_{}( _{t},t)=_{_{t}} q_{}_{t}|}_{}(_{t},t),\, O (3).\]

In summary, in addition to an invariant prior, an equivariant \(F_{}\) and an equivariant \(}_{}\) ensure the equivariance of the reverse process, and hence the invariance of the learned distribution. In Appendix A.3.3, we additionally show that the objective function is invariant, i.e. \(_{}()=_{}(),  O(3)\).

We note that alternative formulations for the drift of the reverse process, \(_{,}\), exist. Most notably, it can be learned directly through an equivariant function, without explicit dependence on \(F_{}\), while maintaining the desired invariance.

### Parameterization

We now introduce a simple parameterization of \(F_{}\) that meets the requirements outlined above,

\[F_{}(,t,)=_{}(,t)+U_{}( ,t),\] (6)

where, due to the geometric nature of \(\), \(U_{}(,t)^{(M-1) 3 3}\) is structured as a block-diagonal matrix where each block is a \(3 3\) matrix, ensuring a cheap calculation of the inverse transformation and its Jacobian. This is equivalent to a diagonal parameterization in the case of scalar features.

Similarly to EDM, our parametrization of \(F_{}\) leads to a conditional marginal \(q_{}(_{t}|)\) that is a conditional Gaussian with (block-) diagonal covariance, with the notable difference that the mean and covariance are now data- and time-dependent, and learnable through \(F_{}\),

\[q_{}(_{t}|)=_{t}|_{}(,t),_{}(,t),\] (7)

where \(_{}(,t)=U_{}(,t)U_{}^{}(,t)\), such that \(_{}(,t)\) is also block-diagonal. As \(F_{}\) is linear in \(\), both \(_{}\) and \(U_{}\) must be equivariant functions whose outputs transform covariantly with \(\), in order to ensure the desired equivariance of \(F_{}\),

\[F_{}(,t,)=_{}( ,t)+U_{}(,t)= _{}(,t)+U_{}(,t)=F_{}(,t,).\]

We can then readily check that the resulting \(q_{}\) is equivariant, as \(\, O(3)\), we have that

\[q_{}(_{t}|)=_{t}|_{}(,t),_{}(,t)=_{t}| _{}(,t),_{}(,t)^{}=q_{}(_{t}|).\]

We note that other, and more advanced, parametrizations are possible, e.g. based on normalizing flows with a flow architecture similar to that of Klein et al. (2024).

Prior and ReconstructionWhile not strictly required, it can be advantageous to parameterize the transformation \(F_{}\) such that the prior and reconstruction losses need not be computed. To do so, we design \(F_{}(,,t)\) such that the conditional distribution evolves from a low-variance Gaussian centered around the data, i.e. \(q(_{0}|)(_{0}|,^{2})\) to an uninformative prior distribution (thatcontains no information about the data distribution), i.e. a unit Gaussian \(q(_{1}|)(_{1}|,)\). Specifically, we parameterize \(F_{}\) through the following functions,

\[_{}(,t) =(1-t)+t1-t_{}(,t),\] (8) \[U_{}(,t) =^{1-t}_{}(,t)^{t(1-t)} +t1-t_{}(,t),\] (9)

which ensure that (i) in \(t=0\), \(_{}(,0)=\) and \(_{}(,0)=^{2}\); (ii) in \(t=1\), \(_{}(,1)=\) and \(_{}(,1)=\); while being unconstrained for \(t]0,1[\). We note that this is only one possible parametrization for \(F_{}\), and that, by adapting \(_{}\) and \(U_{}\), richer priors can easily be leveraged - e.g. harmonic prior given a molecular graph or scale-dependent prior (Jing et al., 2023; Irwin et al., 2024).

ImplementationIn practice, \(F_{}\) is implemented as a neural network with an architecture similar to that of the data point predictor \(}_{}(_{t},t)\), but with a specific readout layer that produces \([_{}(,t),_{}(,t),_{ }(,t)]\). The mean output \(_{}(,t)\) is similar to that of \(}_{}(_{t},t)\). For \(U_{}(,t)\), as \(_{}(,t)=U_{}(,t)U_{}^{}(,t)\) should rotate properly, \(_{}(,t)\) is a positive invariant scalar, while \(_{}(,t)\) is constructed as a matrix whose columns are vectors that transform covariantly with \(\).

To ease notation, we introduced all notations in the linear subspace \(R\), however in practice we work in the ambient space, i.e. \(^{M 3}\). We detail in Appendix A.5.1, how working in ambient space is possible. The training and sampling procedures are detailed in Algorithms 1 and 2 in the appendix.

### Conditional Model

While unconditional generation is a required stepping stone, many practical applications require some form of controllability. As other generative models, DMs can model conditional distributions \(p(|)\), where \(\) is a given condition. Different methods exist for sampling from the conditional distribution, e.g. via guidance (Bao et al., 2023; Jung et al., 2024) or twisting (Wu et al., 2024), but the simplest approach consists in training a conditional model on pairs \((,)\). In such setting, \(F_{}\) and \(_{}\) simply receive an extra input \(\) representing the conditional information, such that they respectively become \(F_{}(,t,,)\), and \(}_{}(_{t},t,)\). It is important to note that, compared to conventional DMs, the forward process of END is now also condition-dependent.

## 4 Experiments

In this section, we demonstrate the benefits of END with a comprehensive set of experiments. In Section 4.1, we first display the advantages of END for unconditional generation on \(2\) standard benchmarks, namely QM9 (Ramakrishnan et al., 2014) and GEOM-Drugs(Axelrod and Gomez-Bombarelli, 2022). Then, in Section 4.2, we perform conditional generation in \(2\) distinct settings on QM9. Additional experimental details are provided in Appendix A.6.

DatasetsThe QM9 dataset (Ramakrishnan et al., 2014) contains 134 thousand small- and medium-sized organic molecules with up to \(9\) heavy atoms, and up to \(29\) when counting hydrogen atoms. GEOM-Drugs(Axelrod and Gomez-Bombarelli, 2022) contains 430 thousand medium- and large-sized drug-like molecules with \(44\) atoms on average, and up to maximum \(181\) atoms. We use the same data setup as in previous work (Hoogeboom et al., 2022; Xu et al., 2022).

### Unconditional Generation

TaskWe sample \(10\,000\) molecules using the stochastic sampling procedure detailed in Algorithm 2. As END is trained in continuous-time, we vary the number of integration steps from \(50\) to \(1000\). We repeat each sampling for \(3\) seeds, and report averages along with standard deviations for each metric.

Evaluation metricsWe follow previous work (Hoogeboom et al., 2022; Xu et al., 2023), and first evaluate the chemical quality of the generated samples in terms of stability, validity, and uniqueness (in Tables 1, 6 and 9). On QM9, we additionally evaluate how well the model learns the atom and bond types distributions by measuring the total variation between the dataset's and generated distributions, as well as the overall quality of the generated structures via their strain energy, expressed as the energy difference between the generated structure and a relaxed version thereof (in Tables 2 and 6). On GEOM-Drugs, we additionally compute connectivity, total variation for atom types, and strain energy (in Tables 2 and 9). Connectivity accounts for the fact that validity can easily be increased by generating several disconnected fragments (where only the largest counts towards validity), the total variation ensures that the model properly samples all atom types, whereas the strain energy evaluates the generated geometries. On both datasets, we also report additional drug-related metrics as per Qiang et al. (2023) (in Tables 7 and 10). More details about evaluation metrics are provided in Appendix A.6.1.

BaselinesWe compare END to several relevant baselines from the literature: the original EDM (Hoogeboom et al., 2022); EDM-Bridge (Wu et al., 2022), an improved version of EDM that adds a physics-inspired force guidance in the reverse process; GeoLDM (Xu et al., 2023), an equivariant latent DM; and GeoBFN (Song et al., 2024), a geometric version of Bayesian Flow Networks (Graves et al., 2024). A detailed discussion about related work can be found in Section 5.

Ablations of ENDIn addition to baselines from the literature, we compare different ablated versions of END. As the key component to our method is the learnable forward process, the logical ablation is whether to include a learnable forward (=END), or not (=EDM). To ensure a fair comparison and that any difference in performance does not stem from an increase in learnable parameters, an architectural change or the training paradigm, we implement our own EDM (Hoogeboom et al., 2022), denoted EDM*. It features the exact same architecture as END, the same amount of learnable parameters (i.e. through a deeper \(}_{}\)), and is similarly trained in continuous-time. Additionally, we provide EDM* + \(\), similar to EDM* but with a learned SNR (Kingma et al., 2021) for each data modality (i.e. atomic types and coordinates), and END (\(_{}\) only), an ablated version of END where only the mean is learned whereas the standard deviation of the conditional marginal is pre-specified and derived from the noise schedule of EDM. Table 5 provides an overview of the compared models.

Results on QM9Our main results on the QM9 dataset are summarized in the left part of Tables 1 and 2, where END is shown to significantly outperform the baseline and reach a level of performance similar to current SOTA methods, GeoLDM (Xu et al., 2023) and GeoBFN (Song et al., 2024), across stability and validity metrics. The ablation study in Appendix A.2.1 clearly reveals the benefits of a learnable forward. On the one hand, the two variants of END are shown to outperform (or be on par with) all baselines across all metrics in Table 6 (in particular, in terms of the more challenging

    & &  &  \\   & &  &  &  &  \\  Model & Steps & A [\%] & M [\%] & V [\%] & V\(\)U [\%] & A [\%] & V [\%] & V\(\)C [\%] \\  Data & & \(99.0\) & \(95.2\) & \(97.7\) & \(97.7\) & \(86.5\) & \(99.0\) & \(99.0\) \\  EDM (Hoogeboom et al., 2022) & 1000 & \(98.7\) & \(82.0\) & \(91.9\) & \(90.7\) & \(81.3\) & \(92.6\) & \(-\) \\  EDM-Bridge (Wu et al., 2022) & 1000 & \(98.8\) & \(84.6\) & \(92.0\) & \(90.7\) & \(82.4\) & \(92.8\) & \(-\) \\  GeoLDM (Xu et al., 2023) & 1000 & \(98.9_{.1}\) & \(89.4_{.5}\) & \(93.8_{.4}\) & \(92.7_{.5}\) & \(84.4\) & \(99.3\) & \(45.8^{}\) \\  GeoBFN (Song et al., 2024) & 50 & \(98.6_{.0}\) & \(87.2_{.3}\) & \(93.0_{.3}\) & \(91.5_{.3}\) & \(78.9\) & \(93.1\) & \(-\) \\  ^{*}\)} & 50 & \(98.8_{.8}\) & \(88.4_{.2}\) & \(93.4_{.2}\) & \(91.8_{.2}\) & \(81.4\) & \(93.5\) & \(-\) \\  & 100 & \(98.0_{.1}\) & \(90.9_{.2}\) & \(95.3_{.1}\) & \(93.0_{.1}\) & \(85.6\) & \(92.1\) & \(-\) \\   ^{*}\)} & 50 & \(97.6_{.0}\) & \(77.6_{.5}\) & \(90.2_{.2}\) & \(89.2_{.2}\) & \(84.7_{.0}\) & \(93.6_{.2}\) & \(46.6_{.3}\) \\  & 100 & \(98.1_{.0}\) & \(81.9_{.4}\) & \(92.1_{.2}\) & \(90.9_{.2}\) & \(85.2_{.1}\) & \(93.8_{.3}\) & \(56.2_{.4}\) \\  & 250 & \(98.3_{.0}\) & \(84.3_{.1}\) & \(93.2_{.4}\) & \(91.7_{.3}\) & \(85.4_{.0}\) & \(94.2_{.1}\) & \(61.4_{.6}\) \\  & 500 & \(98.4_{.0}\) & \(85.2_{.3}\) & \(93.5_{.2}\) & \(92.2_{.3}\) & \(85.4_{.0}\) & \(94.3_{.2}\) & \(63.4_{.1}\) \\  & 1000 & \(98.4_{.0}\) & \(85.3_{.3}\) & \(93.5_{.1}\) & \(91.9_{.1}\) & \(85.3_{.1}\) & \(94.4_{.1}\) & \(64.2_{.6}\) \\   & 50 & \(98.6_{.0}\) & \(84.6_{.1}\) & \(92.7_{.1}\) & \(91.4_{.1}\) & \(87.1_{.1}\) & \(84.6_{.5}\) & \(66.0_{.4}\) \\  & 100 & \(98.8_{.0}\) & \(87.4_{.2}\) & \(94.1_{.0}\) & \(92.3_{.2}\) & \(87.2_{.1}\) & \(87.0_{.2}\) & \(73.7_{.4}\) \\   & 250 & \(98.9_{.1}\) & \(88.8_{.5}\) & \(94.7_{.2}\) & \(92.6_{.1}\) & \(87.1_{.1}\) & \(88.5_{.2}\) & \(77.4_{.4}\) \\   & 500 & \(98.9_{.0}\) & \(88.8_{.4}\) & \(94.8_{.2}\) & \(92.8_{.2}\) & \(87.0_{.0}\) & \(88.8_{.3}\) & \(78.6_{.3}\) \\   & 1000 & \(98.9_{.0}\) & \(89.1_{.1}\) & \(94.8_{.1}\) & \(92.6_{.2}\) & \(87.0_{.0}\) & \(89.2_{.3}\) & \(79.4_{.4}\) \\   

Table 1: Stability and validity results on QM9 and GEOM-Drug obtained over \(10000\) samples, with mean/standard deviation across 3 sampling runs. END compares favorably to the baseline across all metrics on both datasets, while offering competitive performance for reduced number of sampling steps. It reaches a performance level similar to that of current SOTA methods. \(\) denotes results obtained by our own experiments.

molecule stability), and be in better agreement with the data distribution in Table 7 (except for QED which is captured perfectly by all methods). On the other hand, we observe that, with as few as \(100\) integration steps, END is capable of generating samples that are qualitatively better than those generated by the simpler baselines in \(1000\) steps. A few illustrative QM9-like molecules generated by END are displayed in Fig. 1.

**Results on GEOM-Drugs** Our main results on the more realistic GEOM-Drugs dataset are presented in the right part of Tables 1 and 2, where we observe that END is competitive against the compared baselines in terms of atom stability, while being slightly subpar in terms of validity. However, when accounting for connectivity (via the V\(\)C metric), we observe that END does outperform the baseline with an increased success rate of around \(20\%\) on average, as well as better than the SOTA method GeoLDM (Xu et al., 2023) by a large margin. The generated molecules also better follow the atom types distribution of the dataset - as per the lower total variation, and feature better geometries than those generated by competitors - as implied by the lower strain energy. As for QM9, the ablation study provided in Appendix A.2.3 illustrates the clear improvement provided by a learnable forward process compared to a fixed one. In this more challenging setting, only learning the mean function yields a slight decrease in performance across the metrics reported in Table 9, and a similar agreement with the dataset in terms of the drug-related metrics in Table 10, compared to the full model. Furthermore, while each sampling step is currently slower than EDM* (Table 11), the improved sampling efficiency afforded by END (in terms of integration steps) allows practical time gains on this more complex dataset. As a concrete example, samples obtained with END with only \(100\) steps are qualitatively better those generated by EDM* in \(1000\) integration steps, amounting to a \(3\)x time cut. Examples of GEOM-Drugs-like molecules generated by END are provided in Fig. 1.

    &  &  \\   & &  &  &  & Strain En. (\(\)) \\   & & A [\(10^{-2}\)] & B [\(10^{-3}\)] & \(\)E [kcal/mol] & A [\(10^{-2}\)] & \(\)E [kcal/mol] \\ Model & Steps & & & & \\  Data & & & & \(7.7\) & \(15.8\) \\  GeoLDM (Xu et al., 2023) & 1000 & \(1.6^{}\) & \(1.3^{}\) & \(10.4^{}\) & \(10.6^{}\) & \(133.5^{}\) \\    & 50 & \(4.6_{ 1}\) & \(1.7_{ 5}\) & \(16.4_{ 2}\) & \(10.5_{ 1}\) & \(134.2_{ 1.5}\) \\  & 100 & \(3.5_{ 1}\) & \(1.4_{ 3}\) & \(13.5_{ 1}\) & \(8.0_{ 1}\) & \(110.9_{ 0.3}\) \\   & 250 & \(2.8_{ 2}\) & \(1.3_{ 4}\) & \(12.3_{ 4}\) & \(6.7_{ 1}\) & \(98.9_{ 0.3}\) \\   & 500 & \(2.6_{ 2}\) & \(1.3_{ 4}\) & \(11.7_{ 1}\) & \(6.4_{ 1}\) & \(95.3_{ 0.1}\) \\   & 1000 & \(2.5_{ 1}\) & \(1.4_{ 4}\) & \(11.3_{ 1}\) & \(6.2_{ 0}\) & \(92.9_{ 1.1}\) \\   & 50 & \(1.4_{ 1}\) & \(1.9_{ 4}\) & \(13.1_{ 1}\) & \(5.9_{ 1}\) & \(86.3_{ 6}\) \\   & 100 & \(1.1_{ 0}\) & \(1.5_{ 2}\) & \(11.1_{ 1}\) & \(4.5_{ 1}\) & \(67.9_{ 9}\) \\   & 250 & \(1.0_{ 0}\) & \(0.5_{ 1}\) & \(10.3_{ 1}\) & \(3.5_{ 0}\) & \(58.9_{ 1}\) \\   & 500 & \(0.9_{ 0}\) & \(0.7_{ 1}\) & \(10.0_{ 1}\) & \(3.3_{ 0}\) & \(56.4_{ 8}\) \\   & 1000 & \(0.9_{ 2}\) & \(1.0_{ 1}\) & \(9.7_{ 2}\) & \(3.0_{ 0}\) & \(55.0_{ 5}\) \\   

Table 2: Additional results on QM9 and GEOM-Drugs obtained over \(10000\) samples, with mean/standard deviation across 3 sampling runs. END matches better the training distributions, and generates less strained structures than baselines. \(\) denotes results obtained by our own experiments.

Figure 1: Representative samples generated by END on QM9 (top), and GEOM-Drugs (bottom).

### Conditional Generation

Dataset and SetupWe perform our experiments on the QM9 dataset, on \(2\) different tasks: composition-conditioned and substructure-conditioned generation. Both tasks allow for direct validation with ground-truth properties without requiring expensive QM calculations, or approximations with surrogate models. In each case, we train a conditional diffusion model as described in Section 3.3, i.e. where \(F_{}\) and \(_{}\) are provided with an extra input corresponding to the condition. Additional details are provided in Appendix A.6.4.

Task 1: composition-conditioned generationThe model is tasked to generate a compound with a predefined composition, i.e. structural isomers of a given formula. The condition is specified as a vector \(=(c_{1},...,c_{D})^{D}\), where \(c_{d}\) denotes the number of atoms of type \(d\) that the sample should contain. To evaluate the model, we generate \(10\) samples per target formula, and compute the proportion of samples that match the provided composition. Our results are provided in Table 3, where we observe that cEND significantly outperforms the baseline, and offers nearly fully controllable composition generation. Additionally, reducing the number of sampling steps has a very limited impact on the controllability. Finally, we perform an ablation whose results are presented in Table 8, where fixing the standard deviation is shown to lead to a small decrease in performance, with respect to the full model while remaining significantly better than the baseline with fixed forward.

Task 2: substructure-conditioned generationWe adopt a setup similar to that of Bao et al. (2023), and train a conditional END, where the condition is a molecular fingerprint encoding structural information about the molecule. A fingerprint is a binary vector \(=(c_{1},...,c_{F})\{0,1\}^{F}\), where \(c_{f}\) is set to \(1\) if substructure \(f\) is present in the molecule, or to \(0\) if not. Fingerprints are obtained using OpenBabel(O'Boyle et al., 2011). We evaluate the ability of the compared models to leverage the provided structural information, by sampling conditionally on fingerprints obtained from the test set. We then compute the Tanimoto similarity between the fingerprints yielded by generated molecules and the fingerprints provided as conditional inputs. We compare cEND to EEGSDE (Bao et al., 2023), an improved version of EDM (Hoogeboom et al., 2022), that performs conditional generation by combining a conditional diffusion model and regressor guidance. Our results are presented in Table 4, along with a handful of samples in Fig. 2, where cEND is shown to offer better controllability than the compared baselines, as highlighted by the higher similarity.

## 5 Related Work

The main approaches to molecule generation in \(3\)D are auto-regressive models (Gebauer et al., 2019; Simm et al., 2020; Gebauer et al., 2022; Luo and Ji, 2022; Daigavane et al., 2024), flow-based models (Garcia Satorras et al., 2021), and diffusion models (Hoogeboom et al., 2022; Igashov et al., 2024). A notable exception to the geometric graph representation of \(3\)D molecules are voxels (Skalic et al., 2019; Ragoza et al., 2022; O Pinheiro

    &  &  \\   & &  & \(.671_{.004}\) \\ EEGSDE\({}^{}\) & &  & \(.750_{.003}\) \\    & 50 & \(.601_{.000}\) \\  & 100 & \(.640_{.002}\) \\   & 250 & \(.663_{.002}\) \\   & 500 & \(.669_{.001}\) \\   & 1000 & \(.673_{.002}\) \\   & 50 & \(.783_{.001}\) \\   & 100 & \(.807_{.001}\) \\   & 250 & \(.819_{.001}\) \\   & 500 & \(.825_{.001}\) \\   & 1000 & \(.828_{.001}\) \\  

Table 4: On substructure-conditioned generation, cEND shows competitive performance, surpassing EEGSDE that uses an additional property predictor. \({}^{}\)Results are borrowed from Bao et al. (2023).

    &  &  \\   & 50 & \(69.6_{ 0.6}\) \\  & 100 & \(73.0_{ 0.6}\) \\ cEDM* & 250 & \(74.1_{ 1.4}\) \\  & 500 & \(76.2_{ 0.6}\) \\  & 1000 & \(75.5_{ 0.5}\) \\   & 50 & \(89.2_{ 0.8}\) \\  & 100 & \(90.1_{ 1.0}\) \\   & 250 & \(91.2_{ 0.8}\) \\   & 500 & \(91.5_{ 0.8}\) \\   & 1000 & \(91.0_{ 0.9}\) \\   

Table 3: On composition-conditioned generation, cEND offers nearly perfect composition controllability. Matching refers to the % of samples featuring the prompted composition.

Figure 2: Excerpt of substructure-conditioned samples, where cEND matches the provided substructure better (in terms of compositions and local patterns).

et al., 2024), from which the \(3\)D graph is extracted via some post-processing procedure. Recently, several works have shown that leveraging \(2\)D connectivity information can lead to improved results (Peng et al., 2023; Vignac et al., 2023; Le et al., 2024). While not incompatible with END, we perform our experiments without modeling that auxiliary information, and therefore do not compare to these approaches directly. Other frameworks have also been tailored to molecule generation, such as Flow Matching (Lipman et al., 2022; Song et al., 2023; Irwin et al., 2024) or Bayesian Flow Networks (Graves et al., 2024; Song et al., 2024), also showing promises for accelerated sampling.

In the realm of diffusion models for molecules, EDM-Bridge(Wu et al., 2022) and EEGSDE (Bao et al., 2023) extend upon a continuous-time formulation of EDM (Hoogeboom et al., 2022), as END also does. Based on the observation that there exists an infinity of processes mapping from prior to target distributions, EDM-Bridge constructs one such process that incorporates some prior knowledge, i.e. part of the drift term is a physically-inspired force term. END can be seen as a generalization of EDM-Bridge, where the forward drift term is now learned instead of pre-specified. Through experiments, we show that a learnable forward performs better than a fixed one, even when the latter is physics-inspired. EEGSDE specifically targets conditional generation by combining (1) a conditional model score model, (2) a method similar to classifier-guidance (requiring the training of an auxiliary model). In cEND, we instead only learn a conditional model. Finally, GeoLDM(Xu et al., 2023) is a latent diffusion model that performs diffusion in the latent space of an equivariant Variational Auto-Encoder (VAE), and it can be seen as a particular case of END, where \(F_{}(,t,)=_{t}E_{}()+_{t}\), with \(E_{}()\) denoting the (time-independent) encoder of the VAE.

## 6 Conclusion

In this work, we have presented Equivariant Neural Diffusion (END), a novel diffusion model that is equivariant to Euclidean transformations. The key innovation in END lies in the forward process that is specified by a learnable data- and time-dependent transformation. Experimental results demonstrate the benefits of our method. In the unconditional setting, we show that END yields competitive generative performance across two different benchmarks. In the conditional setting, END offers improved controllability, when conditioning on composition and substructure. Finally, as a by-product of the introduced learnable forward, we also find the sampling efficiency (in terms of integration steps) to be improved, while that property is not actively optimized for in the design of the parameterization nor in the training procedure.

Avenues for future work are numerous. In particular, further leveraging the flexible framework of NFDM (Bartosh et al., 2024) to constrain the generative trajectories, e.g. to be straight and enable even faster sampling, modelling bond information, or extending the conditional setting to other types of conditioning information, e.g. other point cloud or target property, are all promising directions.

LimitationsFrom a computational perspective, END is currently slower to train and sample from compared to a baseline with fixed forward with identical number of learnable parameters. Even if convergence is similarly fast, each training (resp. sampling) step incurs a relative \( 2.5\)x (resp. \( 3\)x). However, END usually requires much fewer number of function evaluations to achieve comparable (or better) accuracy, and alternative (and more efficient) parameterizations of the reverse process exist. In particular, the drift \(_{,}\) could be learned without direct dependence on \(f_{}\), thereby leading to an improved training time and, more importantly, a very limited overhead with respect to vanilla DMs for sampling. In terms of scalability, END suffers from limitations similar to concurrent approaches. It operates on fully-connected graphs - preventing its scaling to very large graphs, and models categorical features through an arbitrary continuous relaxation - potentially suboptimal and scaling linearly with the number of chemical elements in the modeled dataset. Encodings that scale more gracefully, such as that of Analog Bits (Chen et al., 2023) (logarithmic) or GeoLDM (Xu et al., 2023) (learned low-dimensional), are good candidates to better deal with discrete features within END. In terms of data, the presented findings are limited to organic molecules and the metrics, while widely used in the community, also have some evident limitations. To fully assess the practical interest of the generated molecules, thorough validation with QM simulations would be required.

Broader ImpactGenerative models for molecules have the potential to accelerate _in-silico_ discovery and design of drugs or materials. This work proposes an instance of such model. As any generative model, it also comes with potential dangers, as this could be misused for designing e.g. chemicals with adversarial properties.