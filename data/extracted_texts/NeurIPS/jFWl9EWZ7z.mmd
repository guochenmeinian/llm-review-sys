# Multi-Object 3D Grounding with Dynamic Modules and Language-Informed Spatial Attention

Haomeng Zhang Chiao-An Yang Raymond A. Yeh

Department of Computer Science, Purdue University

{zhan5050, yang2300, rayyeh}@purdue.edu

###### Abstract

Multi-object 3D Grounding involves locating 3D boxes based on a given query phrase from a point cloud. It is a challenging and significant task with numerous applications in visual understanding, human-computer interaction, and robotics. To tackle this challenge, we introduce D-LISA, a two-stage approach incorporating three innovations. First, a dynamic vision module that enables a variable and learnable number of box proposals. Second, a dynamic camera positioning that extracts features for each proposal. Third, a language-informed spatial attention module that better reasons over the proposals to output the final prediction. Empirically, experiments show that our method outperforms the state-of-the-art methods on multi-object 3D grounding by 12.8% (absolute) and is competitive in single-object 3D grounding.1

Code: https://github.com/haomengz/D-LISA

## 1 Introduction

Building agents that can operate in real-world environments with humans has been a fundamental goal of artificial intelligence. Importantly, the agent would need to understand the 3D scene and natural language to take instructions from humans. To benchmark these capabilities, there is an increasing amount of interest in the task of object grounding in 3D . Recently, the task of multi-object 3D grounding  has been proposed, _i.e_., given a text description and a 3D scene localize _all_ objects referred by the description.

Along with the benchmark, Zhang et al.  proposes, M3DRef-CLIP, a two-stage approach that first detects all the potential objects (capped at a maximum number) from the 3D scene, and then reasons about which of the objects are relevant to the text description by extracting features for each of the objects. Specifically, they leverage both 3D features from the point cloud, and 2D features extracted from renderings of the detected objects at fixed camera poses. These object features along with the text embedding are passed into a Transformer to make the final prediction. Model training is formulated as multi-output classification, where each potential object is classified based on whether it is referred to by the text.

In this work, we identify several directions in which M3DRef-CLIP could be improved. First, the generation of object proposals is based on a _fixed_ maximum. Prior work  points out the dilemma of deciding the number of boxes in the 3D grounding task under the two-stage detection-and-selection diagram. Excessive proposals may increase complexity and lead to redundant computations while sparse proposals may miss critical information in the scene. Second, the camera poses of the renderer are _fixed_ to hand-selected viewpoints, which seems unlikely to be ideal given the variability in object sizes. Third, the fusion module does not effectively reason over the spatial relationship of the objects based on the text description.

To address these shortcomings, we propose D-LISA, a two-stage approach that incorporates three innovative modules. First, instead of using all detected objects, we use a dynamic proposal module to select the key box proposals. Second, we incorporate a dynamic multi-view renderer module that optimizes the viewing angles tailored to a specific scene. Third, we introduce a language-informed spatial fusion module that uses textual description to guide reasoning based on spatial relations.

To evaluate our proposed method, we conduct experiments on the Multi3DRefer benchmark for multi-object 3D grounding and achieve a substantial 12.8% absolute increase over the existing baseline M3DRef-CLIP. We also validate the effectiveness of our method by achieving the state-of-the-art performance on ScanRefer benchmark  and competitive results on Nr3D benchmark  for single-object 3D grounding. **Our contributions are summarized as follows:**

* We introduce a dynamic box proposal module that automatically determines the key box proposals for the later reasoning stage, which could potentially replace the fixed object proposals prevalent in existing two-stage grounding pipelines. Also, we learn the camera pose for 2D rendering dynamically based on the scene, enhancing the quality of auxiliary object features in uncertain environments.
* We propose a language-informed spatial fusion module that dynamically captures the spatial relations among objects, significantly improving the model's contextual understanding and performance in the multi-object 3D grounding task.
* We conduct thorough experiments to validate the proposed framework. The proposed approach not only significantly outperforms the state-of-the-art model in multi-object 3D grounding, but also maintains robust performance in the single-object 3D grounding task.

## 2 Related Work

**2D grounding** aims to identify the target object in a 2D image based on a natural language description. The conventional detection-and-selection two-stage pipeline first extracts the visual features for the proposals and language features for the description then employs the attention mechanism to effectively align the visual features and language features [15; 27; 42; 48; 55]. Alternatively, one-stage methods directly regress the target boxes by integrating object detection and language understanding [28; 33; 44; 45]. While relational graphs have been used to explicitly model the object relations in 2D images [29; 37; 43], extending the modeling to 3D is challenging due to larger number of objects and more complex spatial relations.

**3D grounding.** Similar to 2D grounding, 3D grounding aims to target the language-referred object in a 3D scene. There have been a variety of datasets [1; 2; 8] and approaches [50; 17; 39; 40; 5] to tackle this challenging problem. M3DRef-CLIP  is the pioneered work to explore targeting multiple objects that match the language description. Other than the one-stage methods that directly identify the target box [30; 38], two-stage methods like M3DRef-CLIP following the detection-and-selection diagram are facing the issue of determining the number of boxes from the detection stage. We propose a module that dynamically selects the key box proposals from object candidates.

2D features have been widely used to assist with 3D grounding [4; 17; 21; 46; 23] as well as other 3D tasks [3; 31; 36; 47; 51]. However, most studies rely on fixed camera poses to generate these 2D image features, which is sub-optimal given the varying object sizes across different 3D scenes. In contrast, we propose to learn scene-conditioned camera poses for object rendering.

Many works have studied how to model the object relations in complex 3D scenes [7; 16; 18; 19; 20; 34; 49; 53]. For example, 3DVG-Trans  and M3DRef-CLIP  model the spatial relations based on distances. ViL3DRef  and CORE-3DVG  incorporate language and hand-selected features to guide the spatial relations. Differently, we propose a simple yet effective language-informed balancing strategy to explicitly reason over the spatial relation that solely depends on distances.

## 3 Approach

Given a 3D point cloud of a scene \(\), and a text description \(\), the task of multi-object 3D grounding aims to predict the set of bounding boxes \(\) for objects that are referred to in the text description. Our proposed Multi-Object 3D Grounding with **D**ynamic Modules and **L**anguage **I**nformed **S**patialAttention (**D-LISA**) follows the detection-and-selection paradigm for multi-object 3D grounding task . This paradigm involves three components: (i) a text encoder to extract text features; (ii) a vision module to detect object proposals and extract corresponding features given a point cloud; (iii) a fusion module that combines the text and object features to select the final referred bounding-boxes. Specifically, our D-LISA is designed with a novel vision module that allows for a dynamic number of proposal boxes and extracts features from dynamic viewpoints (Sec. 3.1) per scene. Furthermore, we propose a fusion model that is spatially aware with explicit language conditioning (Sec. 3.2). An overview of our approach is illustrated in Fig. 1.

### Dynamic Vision Module

Our dynamic vision module takes a 3D scene point cloud \(\) as the input and generates a set of box proposals \(\) with corresponding visual features \(\). As in prior work , we adopt the backbone detector of PointGroup  to obtain a fixed number of \(M\) box candidates \(\), _i.e._, \(||=M\). To eliminate irrelevant detected objects, we employ a dynamic box proposal module with non-maximum suppression (NMS). This module dynamically selects a subset with variable sizes, from the \(M\) candidates, to form the set of box proposals \(\), which are then used by the fusion model.

**Dynamic box proposal.** To achieve box proposals with a flexible number, we learn a dynamic proposal probability \(_{m}\) for each of the \(M\) box candidates.

We model the proposal probability \(_{m}\) as a normalized linear function of the detector score \(s_{m}\), _i.e._,

\[_{m}=((s_{m})).\] (1)

At prediction time, an object candidate would be selected if the dynamic proposal probability exceeds the filtering threshold \(_{f}\):

\[^{}=\{b_{m}_{m}>_{f}\},\] (2)

where \(b_{m}\) denotes the 3D box of the \(m^{}\) object.

We then use non-maximum suppression (NMS)  to remove overlapping boxes from the box proposal candidates \(^{}\) and finalize the box proposals \(\). First, the proposal probabilities \(_{i}\) are sorted in descending order. Then we sequentially select the candidate with the highest probability as a box proposal and remove other box proposal candidates that have an Intersection over Union (IoU) greater than a threshold \(_{}\). The NMS module ensures the box proposals \(\) do not include duplicated boxes for the same object.

Figure 1: **Illustration of the overall pipeline. Our D-LISA processes the 3D point cloud through the dynamic visual module (Sec. 3.1) and encodes the text description through a text encoder. The visual and word features are fused through a language informed spatial fusion module (Sec. 3.2).**

Dynamic Proposal loss.To train this proposal probability, we incorporated a regularization term penalizing the expected value of the number of boxes

\[_{}=_{m=1}^{M}_{m}.\] (3)

This loss encourages the model to use as few box proposals as possible while maintaining the grounding performance.

Object proposal feature extraction.Given the \(N\) box proposals \(\), _i.e._, \(||=N\), we extract visual features \(\) that is a concatenation of both the 3D features \(^{}\) from the detector and 2D features \(^{}\) from our dynamic multi-view renderer.

3D feature from detector backbone.Each box \(b_{n}\) in the box proposals \(\) has a corresponding 3D feature \(_{i}^{}\) that can be extracted from the detector backbone. Next, to ensure that the proposal probability \(_{m}\) reflect the quality of the box \(b_{m}\), we weight the 3D features with the probability, _i.e._,

\[^{}=\{_{1}_{1}^{},_{2} _{2}^{},,_{N}_{N}^{}\}.\] (4)

2D feature from Dynamic multi-view renderer.The dynamic multi-view renderer takes as input the box proposals \(\) and generates the corresponding 2D features \(^{}\). Instead of using fixed camera poses for rendering all objects across different scenes, we learn scene-conditioned camera poses for rendering. We predefined \(V\) base camera poses \(_{j}^{}\) for \(j=1,2,,V\). Next, we calculate the average size of all boxes denoted as \(}^{3}\) with the average length, width, and height respectively. We use a Multi-Layer Perceptron (MLP) to learn the camera pose offset for each view \(j\) based on the average box size \(}\):

\[_{j}^{}=_{j}(}).\] (5)

The final camera pose for each view \(j\) is

\[_{j}^{}=_{j}^{}+_{j}^{}.\] (6)

For each view \(j\), the renderer generates the 2D image for each box proposal \(b_{i}\) with camera pose \(_{j}^{cam}\). The pre-trained CLIP image encoder extracts the 2D features for each view. Finally, we compute the average over all the extracted features from each view to obtain the 2D features

\[^{}=\{_{j=1}^{V}( (b_{n},_{j}^{}))\;|\;b_{n} \}.\] (7)

### Language-Informed Spatial Fusion Module

Given the visual features \(\) from the dynamic vision module and the word features \(\) from CLIP's text encoder, the language-informed spatial fusion module predicts a probability \(p_{n}\) on whether the object in box \(b_{n}\) is targeted in the text description. The module consists of a stack of transformer layers followed by an MLP grounding head.

To better capture the spatial relationship among objects, we introduce the language-informed spatial attention (LISA) block that balances the visual attention weights and the spatial relations using the sentence feature \(\), a weighted sum over all word features. Each transformer layer comprises a language-informed spatial attention block and a cross-attention block, as illustrated in Fig. 1. Finally, we only predicted a box if the associated probability \(p_{n}\) exceeds a threshold \(_{}\), _i.e._, the predicted box set is

\[=\{b_{n}\;|\;p_{n}>_{}\}.\] (8)

We now discuss the details of LISA. The details of the cross-attention block are provided in Appendix Sec. A4.

Language informed spatial attention (LISA).Given the visual feature matrix \(=[_{1},_{2},,_{N}]^{T}^{N d_{ o}}\) where \(_{n}\) and the sentence feature \(\), language-informed spatial attention block (Fig. 2) updates the visual features with spatial information by balancing the visual attention weights and spatial relations guided by language.

LISA follows the standard self-attention mechanism proposed by Vaswani et al.  consisting of queries, keys, and values. Given \(\), the queries \(\), keys \(\) and values \(\) are computed as follows:

\[=_{Q},=_{K},=_{V}\] (9)

with linear projections \(_{Q/V/K}^{d_{o} d}\).

To explicitly build in spatial reasoning, we introduce spatial scores \(\), conditioned on the sentence feature and visual features, to weight between the standard attention terms and a spatial distance matrix \(\). The overall language-informed spatial attention is as follows:

\[(,,)=((_{N}-) ^{T}}{}+),\] (10)

where \(_{N}\) is an all-ones matrix and \(\) normalizes along each row. We now describe \(\) and \(\).

_Spatial scores \(\)_. Given a variety of objects in a complex scene, we want the model to dynamically learn whether an object should pay more attention to the spatial relationship based on text description. For the \(i^{}\) object in the box proposal, we predict the normalized score \(_{i}\) by concatenating the visual feature \(_{i}\) and the sentence feature \(\), followed by a linear projection. To align with the attention weights, we construct the spatial scores \(^{N N}\) as

\[=_{1}&_{1}&&_{1}\\ _{2}&_{2}&&_{2}\\ &&&\\ _{N}&_{N}&&_{N},_{i}= ((_{i}))\] (11)

and \(\) denotes a concatenation.

_Spatial distance matrix \(\)_. We model the spatial relationship among objects through relative distances. We construct this matrix \(^{N N}\) by computing the pairwise \(l_{2}\)-distance between the box centers \(c_{i}\) and \(c_{j}\), _i.e_., \(d_{ij}=||c_{i}-c_{j}||_{2}\). To ensure that closer objects should receive greater attention, we define \(}_{ij}=}\).

### Training details

In addition to the dynamic proposal loss for our dynamic box proposal module, we follow the loss functions of the prior work  for end-to-end training. These include detection loss, reference loss, and contrastive loss. We briefly discuss these losses for completeness.

Figure 2: **Illustration of language informed spatial attention (LISA).** We model the object relations through spatial distance \(\). For each box proposal, a spatial score is predicted to balance the visual attention weights and spatial relations.

Detection loss.We use Pointgroup  as our detector backbone and adopt their training losses. The detection loss \(_{}\) consists of four components: a) a semantic segmentation loss, b) an offset regression loss, c) an offset direction loss, and d) a proposal score loss.

Reference loss.For multi-object 3D grounding, we adopt the binary cross-entropy loss over the detected objects as the reference loss \(_{}\). We apply the Hungarian algorithm  to find an optimal match based on the pairwise IoU between the detected objects and ground truth. A detected box is successfully grounded if it matches one ground truth box in the Hungarian solution and the pairwise IoU is greater than a threshold \(_{}\). For single-object 3D grounding, we use the cross-entropy loss. We identify the highest IoU between the detected boxes and the ground truth box and consider it a success if this maximal IoU is greater than the threshold \(_{}\).

Contrastive loss.We apply a symmetric contrastive loss \(_{}\) between the object features and the word features. A positive pair is formed if the object features and the word features come from the same scene-instruction pair, while a negative pair is formed if they come from different scene-instruction pairs. For computing efficiency, we only identify the positive and negative pairs within a single batch. This loss has been proven effective for learning better multi-modal embeddings .

The total loss function is a weighted sum over all loss terms

\[=_{}_{}+_{} _{}+_{}_{}+ _{}_{},\] (12)

where \(_{i}\) is the individual loss weight for each loss term \(_{i}\).

## 4 Experiments

We conduct experiments on the Multi3DRefer  dataset. We also compare our model with other two-stage methods on single-object grounding using the ScanRefer  and the Nr3D  datasets. Finally, we ablate the effectiveness of each proposed module.

### Multi-object 3D grounding

**Dataset and evaluation metric.** Multi3DRefer is a dataset based on ScanRefer . It contains 61,926 descriptions of 11,609 objects, with each text description potentially referencing zero, single, or multiple target objects.

Using the standard evaluation protocol , we report the F1 score at the intersection over union (IoU) threshold of 0.5 over five different categories: a) zero target without distractors of the same semantic class (ZT w/o D); b) zero target with distractors (ZT w/D); c) single target without distractors (ST w/o D); d) single target with distractors (ST w/D); and e) multiple targets (MT). The average over these categories is reported as an overall score.

**Baselines.** Following prior work , we consider two-stage methods that perform well on the ScanRefer dataset as baselines; including, 3DVG-Trans , D3Net , 3DJCG  and M3DRef-CLIP . We also report the performance of M3DRef-CLIP with NMS after the first-stage detector for a fair comparison.

**Implementation details.** We train our model on a single NVIDIA A100 GPU. We set the batch size to 4 with the AdamW optimizer using a learning rate of \(5e^{-4}\). We follow the same train/val set split as the baselines . For the PointGroup detector, we use the same pre-trained PointGroup

    &  \\   & ZT w/o D & ZT w/D & ST w/o D & ST w/D & MT & All \\ 
3DVG-Trans  & 87.1 & 45.8 & 27.5 & 16.7 & 26.5 & 25.5 \\ D3Net  & 81.6 & 32.5 & 38.6 & 23.3 & 35.0 & 32.2 \\
3DJCG  & **94.1** & **66.9** & 26.0 & 16.7 & 26.2 & 26.6 \\ M3DRef-CLIP  & 81.8 & 39.4 & 47.8 & 30.6 & 37.9 & 38.4 \\  M3DRef-CLIP w/NMS & 79.0 & 40.5 & **67.6** & 40.0 & 49.1 & 49.3 \\ D-LISA & 82.4 & 43.7 & 67.1 & **42.5** & **51.0** & **51.2** \\   

Table 1: Quantitative comparison of F1@0.5 on the Multi3DRefer  val set.

module following Zhang et al.  with the same loss coefficients. We set the dynamic proposal loss coefficient \(_{dyn}\) to 5. We set the \(_{}\) to 0.25 and search for the optimal value of \(_{}\) over {0.05, 0.1, 0.15, 0.2, 0.25} during evaluation for M3DRef-CLIP w/NMS and our model.

**Results.** We compare the F1@0.5 metric of our model and state-of-the-art baselines on Multi3DRefer val set in Tab. 1. Our D-LISA achieves a 12.8% absolute increase in the overall F1@0.5 score over M3DRef-CLIP. Comparing M3DRef-CLIP and M3DRef-CLIP w/NMS, we observe that NMS is a key factor in the final F1 score, successfully removing duplicate predictions leading to improved recall.

Next, D-LISA achieves a better overall F1 score, especially for multiple targets and sub-categories where the distractors of the same semantic class exist. We further provide qualitative results over our method and the baselines in Fig. 3. The top two rows are examples from multiple target categories. Our D-LISA successfully identifies more objects that match the text description. The last row shows an example of a single target with distractors. Our D-LISA accurately identifies the object while the baselines are affected by the distractors and predict additional incorrect targets.

### Single-object 3D grounding.

**Dataset and evaluation metric.** We evaluate the single-object 3D grounding performance on the ScanRefer and the Nr3D datasets. The ScanRefer dataset contains 51,583 human-written sentences for 800 scenes in ScanNet . ScanRefer divides scenes into "Unique" and "Multiple" subsets based on whether the semantic class of the target object is unique in the scene.

The Nr3D dataset consists of 41,503 human-annotated text descriptions across 707 indoor scenes from ScanNet. Nr3D divides scenes into "Easy" and "Hard" subsets based on whether there exist the distractors of the same semantic class, and into "View-dependent" and "View-independent" subsets based on whether a specific viewpoint is required to identify the target. Both ScanRefer and Nr3D are annotated for single-object grounding. Different from ScanRefer, Nr3D _assumes perfect object proposals_ are provided.

Following prior work , for the ScanRefer dataset we report Acc@0.5 on both val and test sets over different subsets. The number represents the proportion of predicted target boxes that have an IoU value greater than 0.5 compared to the ground truth box. For the Nr3D dataset, we report the accuracy of selecting the target bounding box among all candidate proposals on the test set over different subsets.

Figure 3: **Qualitative examples of Multi3DRefer val set. For each scene-text pair, we visualize the predictions of M3DRef-CLIP, M3DRef-CLIP w/NMS, D-LISA and ground truth labels in magenta/blue/green/red separately.**

**Baselines.** We focus on comparing the two-stage methods designed for the situation where the ground truth box proposals are not provided. For the ScanRefer dataset, we compare with the baselines: TGNN , FFL-3DOG , InstanceRefer , 3DVG-Trans , 3DJCG , D3Net , UniT3D , HAM , CORE-3DVG  and M3DRef-CLIP . For joint captioning and grounding models 3DJCG, D3Net, and UniT3D, we compare their best grounding performance with extra captioning training data. For the Nr3D dataset, we compare with the above baselines which reported the performance in their paper.

**Implementation details.** We follow the multi-object setting to adapt to the single-object setting. Differently, we let the fusion module return the _most likely_ box among all the proposal boxes instead of using a threshold. For the Nr3D dataset, we follow the prior work  to directly crop the box features from the detector backbone based on the ground truth bounding boxes. We follow the same train/val/test set split for both datasets as the baselines.

**Results.** We report the Acc@0.5 of different methods on the ScanRefer val set and test set in Tab. 2. Comparing M3DRef-CLIP and M3DRef-CLIP w/NMS, we could see that non-maximum suppression slightly improves the performance. Our D-LISA outperforms all existing baselines on both the ScanRefer val set and test set, especially for the subsets where there are multiple objects with the semantic class of the target object in the scene.

Next, we report the grounding accuracy of different methods on the Nr3D test set in Tab. 3. Our D-LISA outperforms all baselines on the Nr3D test set over all subsets. For more comparison with other methods on the ScanRefer and the Nr3D datasets, see Sec. A2 in the Appendix.

_Limitations:_ As with other two-stage methods, the grounding performance of our designed two-stage model is upper bounded by the detector quality. From Tab. 1 and Tab. 2, we can see that our model achieves better performance for complex scenarios but sacrifice some performance for the simpler single-object settings.

    &  &  \\   & Unique & Multiple & All & Unique & Multiple & All \\  TGNN  & 56.8 & 23.2 & 29.7 & 58.9 & 25.3 & 32.8 \\ FFL-3DOG  & 67.9 & 25.7 & 34.0 & - & - & - \\ InstanceRefer  & 66.8 & 24.8 & 32.9 & 66.7 & 26.9 & 35.8 \\
3DVG-Trans  & 62.0 & 30.3 & 36.4 & 57.9 & 31.0 & 37.0 \\
3DJCG*  & 64.3 & 30.8 & 37.3 & 60.6 & 31.2 & 37.8 \\ D3Net*  & 72.0 & 30.1 & 37.9 & 68.4 & 30.7 & 39.2 \\ UniT3D*  & 73.1 & 31.1 & 39.1 & - & - & - \\ HAM  & 67.9 & 34.0 & 40.6 & 63.7 & 33.2 & 40.1 \\ CORE-3DVG  & 67.1 & 39.8 & 43.8 & - & - & - \\ M3DRef-CLIP  & **77.2** & 36.8 & 44.7 & **70.9** & 38.1 & 45.5 \\  M3DRef-CLIP w/NMS & 75.6 & 38.5 & 45.7 & - & - & - \\ D-LISA & 75.5 & **40.0** & **46.9** & 69.0 & **39.7** & **46.3** \\   

Table 2: Acc@0.5 of different methods on the ScanRefer dataset . For joint models indicated by *, the best grounding performance with extra captioning training data is reported.

    &  \\   & Easy & Hard & View-Dep & View-Indep & All \\  TGNN  & 44.2 & 30.6 & 35.8 & 38.0 & 37.3 \\ InstanceRefer  & 46.0 & 31.8 & 34.5 & 41.9 & 38.8 \\
3DVG-Trans  & 48.5 & 34.8 & 34.8 & 43.7 & 40.8 \\ FFL-3DOG  & 48.2 & 35.0 & 37.1 & 44.7 & 41.7 \\ HAM  & 54.3 & 41.9 & 41.5 & 51.4 & 48.2 \\ M3DRef-CLIP  & 55.6 & 43.4 & 42.3 & 52.9 & 49.4 \\  D-LISA & **60.2** & **46.2** & **44.3** & **57.4** & **53.1** \\   

Table 3: Grounding accuracy of different methods on Nr3D dataset .

### Ablation studies

We conduct ablation studies on the proposed modules to validate their effectiveness under the multi-object grounding setting on the M3DRef dataset. The ablations follow the same experiment settings for the multi-object grounding in Sec. 4.1. The baseline Row #1 shows the result of M3DRef-CLIP w/NMS.

**Dynamic box proposal.** In Tab. 4, comparing Row #3 with baseline Row #1, we validate the effectiveness of the dynamic box proposal module. We also validate the number of box candidates in the reasoning stage after using the dynamic box proposal module. For our complete model Row #5, an average of 30.5 boxes are selected for the fusion stage on the M3DRefer val set. This is a much smaller number of boxes compared to the 62.4 boxes used in baseline Row #1.

**Dynamic multi-view renderer.** In Tab. 4, comparing Row #2 with baseline Row #1, we validate the effectiveness of the dynamic multi-view renderer module. We provide the qualitative results for the dynamic multi-view renderer in Fig. 4. Instead of using fixed camera poses, the dynamic renderer adapts different camera poses from scene to scene, enhancing the quality of 2D object features.

**Language informed spatial fusion.** In Tab. 4, comparing Row #4 with baseline Row #1, we validate the effectiveness of the language-informed spatial fusion module, especially for the sub-categories where distractors exist (ZT w/D and ST w/D). For more ablation results on the language-informed spatial fusion module, please refer to Appendix Sec. A3.

**Computational cost.** We report the FLOPs and inference time of each proposed module and a comparison with the baseline model M3DRef-CLIP in Tab. 5. All experiments are conducted on Multi3DRefer validation set on a single NVIDIA A100 GPU. The reported FLOPs and inference time are the average over the validation set. We observe that the dynamic box proposal module

    &  &  &  &  \\   & & & & & ZT w/o D & ZT w/o D & ST w/o D & MT & All \\ 
1 & ✗ & ✗ & ✗ & 79.0 & 40.5 & **67.6** & 40.0 & 49.1 & 49.3 \\
2 & ✗ & ✗ & ✓ & 79.5 & 42.3 & 66.1 & 41.2 & 49.2 & 49.8 \\
3 & ✗ & ✓ & ✗ & 80.3 & 41.5 & 66.2 & 41.4 & 50.6 & 50.3 \\
4 & ✓ & ✗ & ✗ & 80.1 & 42.6 & 66.6 & 41.8 & 49.9 & 50.4 \\
5 & ✓ & ✓ & ✓ & **82.4** & **43.7** & 67.1 & **42.5** & **51.0** & **51.2** \\   

Table 4: Ablation study of proposed modules on Multi3DRefer dataset. ‘LIS.’, ‘DBP.’ and ‘DMR.’ stands for ‘Language informed spatial fusion’, ‘Dynamic box proposal’, and ‘Dynamic multi-view renderer’ respectively.

Figure 4: **Qualitative results of dynamic multi-view renderer. On the left, we show the learned pose distribution over the Multi3DRefer val set and visualize one camera ray example. On the right, we present examples of comparison between rendering with fixed pose and dynamic learned pose.**and the dynamic multi-view renderer in the dynamic vision module contribute marginally to the computation. The additional computations in the language-informed spatial fusion module are also minimal. In other words, our model achieves better grounding performance without significantly increasing computations.

## 5 Conclusion

In this paper, we present D-LISA, a two-stage pipeline for multi-object 3D grounding, featuring three novel components. Our dynamic box proposal module dynamically selects the key box proposals from detected objects. We enhance the 2D features through optimized scene-conditioned rendering poses using a dynamic multi-view renderer. Furthermore, our language-informed spatial fusion module facilitates explicit reasoning over the object spatial relations. Our proposed approach not only outperforms the state-of-the-art model in multi-object 3D grounding but also is competitive in single-object 3D grounding.

   Module & FLOPs & Inference time \\  Baseline detector & 943.1 M & 0.235 s \\ Detector w/ dynamic box proposal & 943.1 M & 0.241 s \\  Baseline multi-view renderer & 638.9 G & 0.271 s \\ Dynamic multi-view renderer & 638.9 G & 0.276 s \\  Baseline fusion & 155.3 M & 0.004 s \\ Language-informed spatial fusion & 247.4 M & 0.007 s \\   

Table 5: Computational cost for proposed modules during inference.