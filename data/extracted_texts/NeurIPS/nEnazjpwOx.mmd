# Diffusion Models Meet Contextual Bandits with Large Action Spaces

Anonymous Author(s)

Affiliation

Address

email

###### Abstract

Efficient exploration in contextual bandits is crucial due to their large action space, where uninformed exploration can lead to computational and statistical inefficiencies. However, the rewards of actions are often correlated, which can be leveraged for more efficient exploration. In this work, we use pre-trained diffusion model priors to capture these correlations and develop diffusion Thompson sampling (dTS). We establish both theoretical and algorithmic foundations for dTS. Specifically, we derive efficient posterior approximations (required by dTS) under a diffusion model prior, which are of independent interest beyond bandits and reinforcement learning. We analyze dTS in linear instances and provide a Bayes regret bound highlighting the benefits of using diffusion models as priors. Our experiments validate our theory and demonstrate dTS's favorable performance.

## 1 Introduction

A _contextual bandit_ is a popular and practical framework for online learning under uncertainty (Li et al., 2010). In each round, an agent observes a _context_, takes an _action_, and receives a _reward_ based on the context and action. The goal is to maximize the expected cumulative reward over \(n\) rounds, striking a balance between exploiting actions with high estimated rewards from available data and exploring other actions to improve current estimates. This trade-off is often addressed using either _upper confidence bound (UCB)_(Auer et al., 2002) or _Thompson sampling (TS)_(Scott, 2010).

The action space in contextual bandits is often large, resulting in less-than-optimal performance with standard exploration strategies. Luckily, actions usually exhibit correlations, making efficient exploration possible as one action may inform the agent about other actions. In particular, Thompson sampling offers remarkable flexibility, allowing its integration with informative priors (Hong et al., 2022) that capture these correlations. Inspired by the achievements of diffusion models (Sohl-Dickstein et al., 2015; Ho et al., 2020), which effectively approximate complex distributions (Dhariwal and Nichol, 2021; Rombach et al., 2022), this work captures action correlations by employing diffusion models as priors in contextual Thompson sampling.

We illustrate the idea using video streaming. The objective is to optimize watch time for a user \(j\) by selecting a video \(i\) from a catalog of \(K\) videos. Users \(j\) and videos \(i\) are associated with context vectors \(x_{j}\) and unknown video parameters \(_{i}\), respectively. User \(j\)'s expected watch time for video \(i\) is linear as \(x_{i}^{}_{i}\). Then, a natural strategy is to independently learn video parameters \(_{i}\) using LinTS or LinUCB(Agrawal and Goyal, 2013; Abbasi-Yadkori et al., 2011), but this proves statistically inefficient for larger \(K\). Fortunately, the reward when recommending a movie can provide informative insights into other movies. To capture this, we leverage offline estimates of video parameters denoted by \(_{i}\) and build a diffusion model on them. This diffusion model approximates the video parameter distribution, capturing their dependencies. This model enriches contextual Thompson sampling as a prior, effectively capturing complex video dependencies while ensuring computational efficiency.

We introduce a framework for contextual bandits with diffusion model priors, upon which we develop diffusion Thompson sampling (dTS) that is both computationally and statistically efficient. dTS requires _fast updates of the posterior_ and _fast sampling from the posterior_, both of which are achieved through our novel efficient posterior approximations. These approximations become exact when both the diffusion model and likelihood are linear. We establish a bound on dTS's Bayes regret for this specific case, highlighting the advantages of using diffusion models as priors. Our empirical evaluations validate our theory and demonstrate dTS's strong performance across various settings.

Diffusion models were applied in offline decision-making (Ajay et al., 2022; Janner et al., 2022; Wang et al., 2022), but their use in online learning was only recently explored by Hsieh et al. (2023), who focused on _multi-armed bandits without theoretical guarantees_. Our work extends Hsieh et al. (2023) in two ways. First, we apply the concept to the broader contextual bandit, which is more practical and realistic. Second, we demonstrate that with diffusion models parametrized by linear score functions and linear rewards, we can derive exact closed-form posteriors without approximations. These exact posteriors are valuable as they enable theoretical analysis (unlike Hsieh et al. (2023), who did not provide theoretical guarantees) and motivate efficient approximations for non-linear score functions in contextual bandits, addressing gaps in Hsieh et al. (2023)'s focus on multi-armed bandits.

A key contribution, beyond applying diffusion models in contextual bandits, is the efficient _computation_ and _sampling_ of the posterior distribution of a \(d\)-dimensional parameter \( H_{t}\), with \(H_{t}\) representing the data, when using a diffusion model prior on \(\). This is relevant not only to bandits and reinforcement learning but also to a broader range of applications (Chung et al., 2022). To motivate our approximations, we start with exact closed-form solutions for cases where both the score functions of the diffusion model and the likelihood are linear. These solutions form the basis for our approximations for non-linear score functions, demonstrating both strong empirical performance and computational efficiency. Our approach avoids the computational burden of heavy approximate sampling algorithms required for each latent parameter. For a detailed comparison with existing studies, see Appendix A, where we discuss diffusion models in decision-making, structured bandits, approximate posteriors, and more.

## 2 Setting

The agent interacts with a _contextual bandit_ over \(n\) rounds. In round \(t[n]\), the agent observes a _context_\(X_{t}\), where \(^{d}\) is a _context space_, it takes an _action_\(A_{t}[K]\), and then receives a stochastic reward \(Y_{t}\) that depends on both the context \(X_{t}\) and the taken action \(A_{t}\). Each action \(i[K]\) is associated with an _unknown action parameter_\(_{*,i}^{d}\), so that the reward received in round \(t\) is \(Y_{t} P( X_{t};_{*,A_{t}})\), where \(P( x;_{*,i})\) is the reward distribution of action \(i\) in context \(x\). Throughout the paper, we assume that the reward distribution is parametrized as a generalized linear model (GLM) (McCullagh and Nelder, 1989). That is, for any \(x\), \(P( x;_{*,i})\) is an exponential-family distribution with mean \(g(x^{}_{*,i})\), where \(g\) is the mean function. For example, we recover linear bandits when \(P( x;_{*,i})=(;x^{}_{*,i},^{2})\) where \(>0\) is the observation noise. Similarly, we recover logistic bandits (Filippi et al., 2010) if we let \(g(u)=(1+(-u))^{-1}\) and \(P( x;_{*,i})=(g(x^{}_{*,i}))\), where \((p)\) be the Bernoulli distribution with mean \(p\).

We consider the _Bayesian_ bandit setting (Russo and Van Roy, 2014; Hong et al., 2022b), where the action parameters \(_{*,i}\) are assumed to be sampled from a _known_ prior distribution. We proceed to define this prior distribution using a diffusion model. The correlations between the action parameters \(_{*,i}\) are captured through a diffusion model, where they share a set of \(L\) consecutive _unknown latent parameters_\(_{*,}^{d}\) for \([L]\). Precisely, the action parameter \(_{*,i}\) depends on the \(L\)-th latent parameter \(_{*,L}\) as \(_{*,i}_{*,1}(f_{1}(_{*,1}),_{1})\), where the _score function_\(f_{1}:^{d}^{d}\) is _known_. Also, the \(-1\)-th latent parameter \(_{*,-1}\) depends on the \(\)-th latent parameter \(_{*,}\) as \(_{*,-1}_{*,}(f_{}(_{*,}),_ {})\), where the score function \(f_{}:^{d}^{d}\) is known. Finally, the \(L\)-th latent parameter \(_{*,L}\) is sampled as \(_{*,L}(0,_{L+1})\). We summarize this model in (1) and its graph in Fig. 1.

Figure 1: Graphical model of (1).

The model in (1) represents a Bayesian bandit, where the agent interacts with a bandit instance defined by \(_{*,i}\) over \(n\) rounds (4-th line in (1)). These action parameters \(_{*,i}\) are drawn from the generative process in the first 3 lines of (1). In practice, (1) can be built by pre-training a diffusion model on offline estimates of the action parameters \(_{*,i}\)(Hsieh et al., 2023).

A natural goal for the agent in this Bayesian framework is to minimize its _Bayes regret_(Russo and Van Roy, 2014) that measures the expected performance across multiple bandit instances \(_{*}=(_{*,i})_{i[K]}\),

\[(n)=_{t=1}^{n}r(X_{t},A_{t,*};_{*})-r(X _{t},A_{t};_{*})\,,\] (2)

where the expectation in (2) is taken over all random variables in (1). Here \(r(x,i;_{*})=_{Y P(|x;_{*,i})}[Y]\) is the expected reward of action \(i\) in context \(x\) and \(A_{t,*}=_{i[K]}r(X_{t},i;_{*})\) is the optimal action in round \(t\). The Bayes regret is known to capture the benefits of using informative priors, and hence it is suitable for our problem.

## 3 Diffusion contextual Thompson sampling

We design Thompson sampling that samples the latent and action parameters hierarchically (Lindley and Smith, 1972). Precisely, let \(H_{t}=(X_{k},A_{k},Y_{k})_{k[t-1]}\) be the history of all interactions up to round \(t\) and let \(H_{t,i}=(X_{k},A_{k},Y_{k})_{\{k[t-1];A_{k}=i\}}\) be the history of interactions _with action_\(i\) up to round \(t\). To motivate our algorithm, we decompose the posterior \((_{*,i}=\,|\,H_{t})\) recursively as

\[(_{*,i}=\,|\,H_{t})=_{_{1:L}}Q_{t,L}( _{L})_{=2}^{L}Q_{t,-1}(_{-1}_{})P_{t,i}( _{1})\,_{1:L}\,,\] (3)

\(Q_{t,L}(_{L})=(_{*,L}=_{L}\,|\,H_{t})\) is the _latent-posterior_ density of \(_{*,L} H_{t}\). Moreover, for any \([2:L]\), \(Q_{t,-1}(_{-1}_{})=(_{*,-1}= _{-1}\,|\,H_{t},_{*,}=_{})\) is the _conditional latent-posterior_ density of \(_{*,-1} H_{t},_{*,}=_{}\). Finally, for any action \(i[K]\), \(P_{t,i}(_{1})=(_{*,i}=\,|\,H_{t,i}, _{*,1}=_{1})\) is the _conditional action-posterior_ density of \(_{*,i} H_{t,i},_{*,1}=_{1}\).

The decomposition in (3) inspires hierarchical sampling. In round \(t\), we initially sample the \(L\)-th latent parameter as \(_{t,L} Q_{t,L}()\). Then, for \([L]/\{1\}\), we sample the \(-1\)-th latent parameter given that \(_{*,}=_{t,}\), as \(_{t,-1} Q_{t,-1}(_{t,})\). Lastly, given that \(_{*,1}=_{t,1}\), each action parameter is sampled _individually_ as \(_{t,i} P_{t,i}(_{t,1})\). This is possible because action parameters \(_{*,i}\) are conditionally independent given \(_{*,1}\). This leads to Algorithm 1, named diffusion Thompson Sampling (dTS). dTS requires sampling from the \(K+L\) posteriors \(P_{t,i}\) and \(Q_{t,}\). Thus we start by providing an efficient recursive scheme to express these posteriors using known quantities. We note that these expressions do not necessarily lead to closed-form posteriors and approximation might be needed. First, the conditional action-posterior \(P_{t,i}(_{1})\) can be written as

\[P_{t,i}(_{1})_{k S_{t,i}}P(Y_{k} X_{k};) (;f_{1}(_{1}),_{1})\,,\] (4)

where \(S_{t,i}=\{[t-1],A_{}=i\}\) are the rounds where the agent takes action \(i\) up to round \(t\). Moreover, let \(_{}(_{})=(H_{t}_{*,}=_{ })\) be the likelihood of observations up to round \(t\) given that \(_{*,}=_{}\). Then, for any \([L]/\{1\}\), the \(-1\)-th conditional latent-posterior \(Q_{t,-1}(_{})\) is

\[Q_{t,-1}(_{-1}_{})_{-1}(_{ -1})(_{-1},f_{}(_{}),_{})\,,\] (5)

and \(Q_{t,L}(_{L})_{L}(_{L})(_{L},0,_{ L+1})\). All the terms above are known, except the likelihoods \(_{}(_{})\) for \([L]\). These are computed recursively as follows. First, the basis of the recursion is

\[_{1}(_{1})=_{i=1}^{K}_{_{i}}_{k S_{t,i}}P(Y _{k} X_{k};_{i})(_{i};f_{1}(_{1}),_{1})\, _{i}.\] (6)

Then for \([L]/\{1\}\), the recursive step is \(_{}(_{})=_{_{-1}}_{-1}(_{ -1})(_{-1};f_{}(_{}),_{})\, _{-1}\).

All posterior expressions above use known quantities \((f_{},_{},P(y x;))\). However, these expressions typically need to be approximated, except when the score functions \(f_{}\) are linear and the reward distribution \(P( x;)\) is linear-Gaussian, where closed-form solutions can be obtained with careful derivations. These approximations are not trivial, and prior studies often rely on computationally intensive approximate sampling algorithms. In the following sections, we explain how we derive our efficient approximations which are motivated by the closed-form solutions of linear instances.

### Linear diffusion model

Assume the score functions \(f_{}\) are linear such as \(f_{}(_{*,})=_{}_{*,}\) for \([L]\), where \(_{}^{d d}\) are _known mixing matrices_. Then, (1) becomes a linear Gaussian system (LGS)  in this case. This model is important, both in theory and practice. For theory, it leads to closed-form posteriors when the reward distribution is linear-Gaussian as \(P( x;_{*,i})=(;x^{}_{*,i},^{2})\). This allows bounding the Bayes regret of dTS. For practice, the posterior expressions are used to motivate efficient approximations for the general case in (1) as we show in Section 3.2.

The reward distribution is parameterized as a generalized linear model (GLM) , allowing for non-linear rewards. Thus, we need posterior approximation despite linearity in score functions. Since this non-linearity arises solely from the reward distribution, we approximate it by a Gaussian and propagate this approximation to the latent parameters. This results in efficient posterior approximations that are exact when the reward function is Gaussian (a special case of the GLM model). Specifically, the reward distribution \(P( x;)\) is an exponential family distribution with a mean function denoted by \(g\). Then, we approximate the corresponding likelihood as \((H_{t,i}\,|\,_{*,i}=) ;_{t,i},_{t,i}^{-1}\), where \(_{t,i}\) and \(_{t,i}\) are the maximum likelihood estimate (MLE) and the Hessian of the negative log-likelihood, respectively, and they are defined as

\[_{t,i}=_{^{d}}(H_{t,i}\,| \,_{*,i}=)\,,_{t,i}=_{k S_{t,i}} X_{k}^{}_{t,i}X_{k}X_{k}^{}\,.\] (7)

where \(S_{t,i}=\{[t-1]:A_{}=i\}\) represents the rounds where the agent takes action \(i\) up to round \(t\). This simple approximation makes all posteriors Gaussian. Specifically, the conditional action-posterior is Gaussian and is given by \(P_{t,i}(_{1})=(;_{t,i},_{t, i})\), where \(_{t,i}\) and \(_{t,i}\) are computed using \(_{t,i}\) and \(_{t,i}\) in (7). Moreover, for \([L-1]\), the \(\)-th conditional latent-posterior is also Gaussian, \(Q_{t,}(_{+1})=(;_{t,},_{t,})\), where \(_{t,}\) and \(_{t,}\) are computed recursively. The recursion starts with \(_{t,1}\) and \(_{t,1}\), which are calculated using \(_{t,i}\) and \(_{t,i}\) in (7). Full expressions are provided in Appendix B.1. The only approximation made is \((H_{t,i}\,|\,_{*,i}=) ;_{t,i},_{t,i}^{-1}\), and we propagated it to latent posteriors. Thus, these posterior approximations become exact when the reward distribution follows a linear-Gaussian model, \(P( x;_{*,a})=(;x^{}_{*,a},^{2})\).

### Non-linear diffusion model

After deriving the posteriors for linear score functions, we return to the general model in (1). Approximation is needed since both the score functions and rewards can be non-linear. To avoid computational challenges, we use a simple and intuitive approximation, where all posteriors \(P_{t,i}\) and \(Q_{t,}\) are approximated by Gaussians that are computed recursively. First, the conditional action-posterior is approximated by a Gaussian distribution as \(P_{t,i}(_{1})=(;_{t,i},_{t, i})\), where

\[_{t,i}^{-1}=_{1}^{-1}+_{t,i}_{t,i}=_{t,i}_{1}^{-1}f_{1}(_{1})+_{ t,i}_{t,i}.\] (8)

In the absence of samples, \(G_{t,i}=0_{d d}\). Thus, the approximate action posterior in (8) matches precisely the term \((f_{1}(_{1}),_{1})\) in the diffusion prior (1). Moreover, as more data is accumulated, \(G_{t,i}\) increases, and the influence of the prior diminishes as \(_{t,i}_{t,i}\) will dominate the prior term \(_{1}^{-1}f_{1}(_{1})\). Similarly, for \([L]/\{1\}\), the \(-1\)-th conditional latent-posterior is approximated bya Gaussian distribution as \(Q_{t,-1}(_{})=(_{t,-1}, _{t,-1})\), where

\[_{t,-1}^{-1}=_{}^{-1}+_{t,-1}\,, _{t,-1}=_{t,-1}_{}^{-1}f_{ }(_{})+_{t,-1}\,,\] (9)

and the \(L\)-th latent-posterior is \(Q_{t,L}()=(_{t,L},_{t,L})\),

\[_{t,L}^{-1}=_{L+1}^{-1}+_{t,L}\,, _{t,L}=_{t,L}_{t,L}\,.\] (10)

Here, \(_{t,}\) and \(_{t,}\) for \([L]\) are computed recursively. The basis of the recursion are

\[_{t,1}=_{i=1}^{K}_{1}^{-1}-_{1}^{-1}_{t,i}_{1}^{-1}\,,_{t,1}=_{1}^{-1} _{i=1}^{K}_{t,i}_{t,i}_{t,i}\,.\] (11)

Then, the recursive step for \([L]/\{1\}\) is,

\[_{t,}=_{}^{-1}-_{}^{-1}_{t,-1}_{}^{-1}\,,_{t,}=_{}^ {-1}_{t,-1}_{t,-1}\,.\] (12)

Similarly, in the absence of samples, \(Q_{t,-1}\) in (9) precisely matches the term \((f_{}(_{1}),_{})\) in the diffusion prior (1). As more data is accumulated, the influence of this prior diminishes. Therefore, this approximation retains a key attribute of exact posteriors: they match the prior when there is no data, and the prior's effect diminishes as data accumulates.

## 4 Analysis

We analyze dTS under the linear diffusion model in Section 3.1 with linear rewards \(P( x;_{*,a})=(;x^{}_{*,a},^{2})\). This assumption leads to a structure with \(L\) layers of linear Gaussian relationships, allowing for theory inspired by linear bandits (Agrawal and Goyal, 2013a, Abbasi-Yadkori et al., 2011). However, proofs are not the same, and technical challenges remain (explained in Appendix D).

Although our result holds for milder assumptions, we make some simplifications for clarity and interpretability. We assume that **(A1)** Contexts satisfy \(\|X_{t}\|_{2}^{2}=1\) for any \(t[n]\). **(A2)** Mixing matrices and covariances satisfy \(_{1}(_{}^{}_{})=1\) for any \([L]\) and \(_{}=_{}^{2}I_{d}\) for any \([L+1]\). Note that **(A1)** can be relaxed to any contexts \(X_{t}\) with bounded norms \(\|X_{t}\|_{2}\). Also, **(A2)** can be relaxed to positive definite covariances \(_{}\) and arbitrary mixing matrices \(_{}\). In this section, we write \(}\) for the big-O notation up to polylogarithmic factors. We start by stating our bound for dTS.

**Theorem 4.1**.: _Let \(_{}^{2}=_{[L+1]}1+^{2}}{2^{2}}\). For any \((0,1)\), the Bayes regret of dTS under Section 3.1 with linear rewards, **(A1)** and **(A2)** is bounded as_

\[(n)^{}(n)+ _{=1}^{L}_{}^{}(1/) }+cn\,,c>0,\] (13) \[^{}(n)=c_{0}dK1+^{2}}{d},\ c_{0}=^{2}}{1+_{1}^{2} }\,,_{}^{}=c_{}d1+ ^{2}}{_{}^{2}},c_{}=^{2}_{}^{2}}{1+_{+1}^{2} },\]

(13) holds for any \((0,1)\). In particular, the term \(cn\) is constant when \(=1/n\). Then, the bound is \(}()\), and this dependence on the horizon \(n\) aligns with prior Bayes regret bounds. The bound comprises \(L+1\) main terms, \(^{}(n)\) and \(_{}^{}\) for \([L]\). First, \(^{}(n)\) relates to action parameters learning, conforming to a standard form (Lu and Van Roy, 2019). Similarly, \(_{}^{}\) is associated with learning the \(\)-th latent parameter. Roughly speaking, our bound captures that our problem can be seen as \(L+1\) sequential linear bandit instances stacked upon each other.

**Technical contributions.** dTS uses hierarchical sampling. Thus the marginal posterior distribution of \(_{*,i} H_{t}\) is not explicitly defined. The first contribution is deriving \(_{*,i} H_{t}\) using the total covariance decomposition combined with an induction proof, as our posteriors in Section 3.1 were derived recursively. Unlike standard analyses where the posterior distribution of \(_{*,i} H_{t}\) is predetermined due to the absence of latent parameters, our method necessitates this recursive total covariance decomposition. Moreover, in standard proofs, we need to quantify the increase in posterior precision for the action taken \(A_{t}\) in each round \(t[n]\). However, in dTS, our analysis extends beyond this. We not only quantify the posterior information gain for the taken action but also for every latent parameter, since they are also learned. To elaborate, we use the recursive formulas in Section 3.1 that connect the posterior covariance of each latent parameter \(_{*,}\) with the covariance of the posterior action parameters \(_{*,i}\). This allows us to propagate the information gain associated with the action taken in round \(A_{}\) to all latent parameters \(_{*,}\), for \([L]\) by induction. Finally, we carefully bound the resulting terms so that the constants reflect the parameters of the linear diffusion model. More technical details are provided in Appendix D.

To include more structure, we propose the _sparsity_ assumption **(A3)**\(_{}=(}_{},0_{d,d-d_{}})\), where \(}_{}^{d d_{}}\) for any \([L]\). Note that **(A3)** is not an assumption when \(d_{}=d\) for any \([L]\). Notably, **(A3)** incorporates a plausible structural characteristic that a diffusion model could capture.

**Proposition 4.2** (Sparsity).: _Let \(^{2}_{}=_{[L+1]}1+^{2}}{ ^{2}}\). For any \((0,1)\), the Bayes regret of dTS under Section 3.1 with linear rewards, **(A1)**, **(A2)** and **(A3)** is bounded as_

\[(n)^{}(n)+ _{=1}^{L}}_{}^{}(1/ )}+cn\,,c>0\] (14) \[^{}(n)=c_{0}dK1+^{2}}{d},c_{0}=^{2}}{1+_{1}^{2} }\,,}_{}^{}=c_{}d_{} 1+^{2}}{_{}^{2}},c_{}= ^{2}_{}^{2}}{1+_ {+1}^{2}}.\]

From Proposition 4.2, our bounds scales as \((n)=}^{2}+_{ =1}^{L}d_{}_{+1}^{2}_{}^{2})}\). The Bayes regret bound has a clear interpretation: if the true environment parameters are drawn from the prior, then the expected regret of an algorithm stays below that bound. Consequently, a less informative prior (such as high variance) leads to a more challenging problem and thus a higher bound. Then, smaller values of \(K\), \(L\), \(d\) or \(d_{}\) translate to fewer parameters to learn, leading to lower regret. The regret also decreases when the initial variances \(_{}^{2}\) decrease. These dependencies are common in Bayesian analysis, and empirical results match them. The reader might question the dependence of our bound on both \(L\) and \(K\). We will address this next.

**Why the bound increases with \(K\)?** This arises due to our conditional learning of \(_{*,i}\) given \(_{*,1}\). Rather than assuming deterministic linearity, \(_{*,i}=_{1}_{*,1}\), we account for stochasticity by modeling \(_{*,i}(_{1}_{*,1},_{1}^{2}I_{d})\). This makes dTS robust to misspecification scenarios where \(_{*,i}\) is not perfectly linear with respect to \(_{*,1}\), at the cost of additional learning of \(_{*,i}_{*,1}\). If we were to assume deterministic linearity (\(_{1}=0\)), our regret bound would scale with \(L\) only.

**Why the bound increases with \(L\)?** This is because increasing the number of layers \(L\) adds more initial uncertainty due to the additional covariance introduced by the extra layers. However, this does not imply that we should always use \(L=1\) (the minimum possible \(L\)). While a higher \(L\) complicates online learning and increases regret bound, it also enables the capture of a more complex prior distribution through offline pre-training of the diffusion model. Thus, a trade-off exists in practice. A smaller \(L\) results in faster computation and easier learning for dTS, but the learned prior might deviate from reality, potentially violating the "true prior assumption" used to derive the regret bound. On the other hand, a larger \(L\) allows for better modeling of complex action distributions, producing a prior that more accurately reflects reality and strengthens the validity of the bound.

### Discussion

**Computational benefits.** Action correlations prompt an intuitive approach: marginalize all latent parameters and maintain a joint posterior of \((_{*,i})_{i[K]} H_{t}\). Unfortunately, this is computationally inefficient for large action spaces. To illustrate, suppose that all posteriors are multivariate Gaussians (Section 3.1). Then maintaining the joint posterior \((_{*,i})_{i[K]} H_{t}\) necessitates converting and storing its \(dK dK\)-dimensional covariance matrix. Then the time and space complexities are \((K^{3}d^{3})\) and \((K^{2}d^{2})\). In contrast, the time and space complexities of dTS are \(L+Kd^{3}\) and \(L+Kd^{2}\). This is because dTS requires converting and storing \(L+K\) covariance matrices, each being \(d d\)-dimensional. The improvement is huge when \(K L\), which is common in practice. Certainly, a more straightforward way to enhance computational efficiency is to discard latent parameters and maintain \(K\) individual posteriors, each relating to an action parameter \(_{*,i}^{d}\) (LinTS). This improves time and space complexity to \(Kd^{3}\) and \(Kd^{2}\), respectively. However, LinTS maintains independent posteriors and fails to capture the correlations among actions; it only models \(_{*,i} H_{t,i}\) rather than \(_{*,i} H_{t}\) as done by dTS. Consequently, LinTS incurs higher regret due to the information loss caused by unused interactions of similar actions. Our regret bound and empirical results reflect this aspect.

**Statistical benefits.** We do not provide a matching lower bound. The only Bayesian lower bound that we know of is \((^{2}(n))\) for a much simpler \(K\)-armed bandit (Lai, 1987, Theorem 3). Allseminal works on Bayesian bandits do not match it and providing such lower bounds on Bayes regret is still relatively unexplored (even in standard settings) compared to the frequentist one. Therefore, we argue that our bound reflects the overall structure of the problem by comparing dTS to algorithms that only partially use the structure or do not use it at all as follows.

The linear diffusion model in Section3.1 can be transformed into a Bayesian linear model (LinTS) by marginalizing out the latent parameters; in which case the prior on action parameters becomes \(_{*,i}(0,\,)\), with the \(_{*,i}\) being not necessarily independent, and \(\) is the marginal initial covariance of action parameters and it writes \(=_{1}^{2}I_{d}+_{=1}^{L}_{+1}^{2}_{ }_{}^{}\) with \(_{}=_{k=1}^{}_{k}\). Then, it is tempting to directly apply LinTS to solve our problem. This approach will induce higher regret because the additional uncertainty of the latent parameters is accounted for in \(\) despite integrating them. This causes the _marginal_ action uncertainty \(\) to be much higher than the _conditional_ action uncertainty \(_{1}^{2}I_{d}\) in (3.1), since we have \(=_{1}^{2}I_{d}+_{=1}^{L}_{+1}^{2}_{ }_{}^{}_{1}^{2}I_{d}\). This discrepancy leads to higher regret, especially when \(K\) is large. This is due to LinTS needing to learn \(K\) independent \(d\)-dimensional parameters, each with a considerably higher initial covariance \(\). This is also reflected by our regret bound. To simply comparisions, suppose that \(_{[L+1]}_{}\) so that \(_{}^{2} 2\). Then the regret bounds of dTS (where we bound \(_{}^{2}\) by \(2^{}\)) and LinTS read

\[:}^{2}+_{=1} ^{L}d_{}_{+1}^{2}2^{})}\,,: {}^{2}+_{=1}^{L}_{+1}^ {2})}\,.\]

Then regret improvements are captured by the variances \(_{}\) and the sparsity dimensions \(d_{}\), and we proceed to illustrate this through the following scenarios.

**(I) Decreasing variances.** Assume that \(_{}=2^{}\) for any \([L+1]\). Then, the regrets become

\[:}^{L}d_{}4^ {}))}\,,:} {ndK2^{L})}\]

Now to see the order of gain, assume the problem is high-dimensional (\(d 1\)), and set \(L=_{2}(d)\) and \(d_{}=}\). Then the regret of dTS becomes \(})\), and hence the multiplicative factor \(2^{L}\) in LinTS is removed and replaced with a smaller additive factor \(L\).

**(II) Constant variances.** Assume that \(_{}=1\) for any \([L+1]\). Then, the regrets become

\[:}^{L}d_{}2^ {}))}\,,:} \]

Similarly, let \(L=_{2}(d)\), and \(d_{}=}\). Then dTS's regret is \(}\). Thus the multiplicative factor \(L\) in LinTS is removed and replaced with the additive factor \(L\). By comparing this to **(I)**, the gain with decreasing variances is greater than with constant ones. In general, diffusion models use decreasing variances (Ho et al., 2020) and hence we expect great gains in practice. All observed improvements in this section could become even more pronounced when employing non-linear diffusion models. In our current analysis, we used linear diffusion models, and yet we can already discern substantial differences. Moreover, under non-linear diffusion (1), the latent parameters cannot be analytically marginalized, making LinTS with exact marginalization inapplicable. Finally, AppendixD.7 provide an additional comparison and connection to hierarchies with two levels.

**Large action space aspect.** dTS's regret bound scales with \(K_{1}^{2}\) instead of \(K_{}_{}^{2}\), particularly beneficial when \(_{1}\) is small, as often seen in diffusion models. Our regret bound and experiments show that dTS outperforms LinTS more distinctly when the action space becomes larger. Prior studies (Foster et al., 2020; Xu and Zeevi, 2020; Zhu et al., 2022) proposed bandit algorithms that do not scale with \(K\). However, our setting differs significantly from theirs, explaining our inherent dependency on \(K\) when \(_{1}>0\). Precisely, they assume a reward function of \(r(x,i;_{*})=(x,i)^{}_{*}\), with a shared \(_{*}^{d}\) and a known mapping \(\). In contrast, we consider \(r(x,i;_{*})=x^{}_{*,i}\), with \(_{*}=(_{*,i})_{i[K]}^{dK}\), requiring the learning of \(K\) separate \(d\)-dimensional action parameters. In their setting, with the availability of \(\), the regret of dTS would similarly be independent of \(K\). However, obtaining such a mapping \(\) can be challenging as it needs to encapsulate complex context-action dependencies. Notably, our setting reflects a common practical scenario, such as in recommendation systems where each product is often represented by its unique embedding.

## 5 Experiments

We evaluate dTS using synthetic data, to validate our theory and test dTS in large action spaces. We omit semi-synthetic data (Riquelme et al., 2018) as they often result in small action spaces. Thischoice is further justified by the fact that Hsieh et al. (2023) has already demonstrated the advantages of diffusion models in multi-armed bandits using such data, without theoretical guarantees.

### Settings and baselines

We run 50 random simulations and plot the average regret with its standard error. We consider both linear and non-linear rewards. The distribution of linear rewards is \(P( x;_{a})=(x^{}_{a},^{2})\) with \(=1\). The non-linear rewards are binary and generated from \(P( x;_{a})=(g(x^{}_{a})))\), where \(g\) is the sigmoid function. The covariances are \(_{}=I_{d}\), and the context \(X_{t}\) is uniformly drawn from \([-1,1]^{d}\). We vary \(d\{5,20\}\), \(L\{2,4\}\) and \(K\{10^{2},10^{4}\}\). We set the horizon \(n=5000\).

**Linear diffusion.** We consider the linear diffusion model in (3.1) where score functions are linear as \(f_{}()=_{}\) where \(_{}\) are uniformly drawn from \([-1,1]^{d d}\). To introduce sparsity, we zero out the last \(d_{}\) columns of \(_{}\), resulting in \(_{}=(}_{},0_{d,d-d_{}})\), where \((d_{1},d_{2})=(5,2)\) when \(d=5\) and \(L=2\) and \((d_{1},d_{2},d_{3},d_{4})=(20,10,5,2)\) when \(d=20\) and \(L=4\).

**Non-linear diffusion.** We consider the general diffusion model in (1) with score functions \(f_{}\) defined by two-layer neural networks with random weights in \([-1,1]\), \(\) activation, and a hidden layer dimension of \(h=20\) when \(d=5\) and \(h=60\) when \(d=20\).

**Baselines.** When rewards are linear, we use \(\)(Abbasi-Yadkori et al., 2011), \(\)(Agrawal and Goyal, 2013), and \(\)(Hong et al., 2022) that marginalizes out all latent parameters except \(_{*,L}\). This corresponds to \(\) in Appendix D.7. When rewards are non-linear, we include UCB-GLM (Li et al., 2017), and GLM-TS (Chapelle and Li, 2012). GLM-UCB (Filippi et al., 2010) induced high regret while \(\) was designed for linear rewards only and thus both are not included. We name \(\) for each setting as \(\)-\(\), where the suffix \(\) indicates the type of diffusion; \(\) for linear and \(\) for non-linear. For instance, \(\) signifies \(\) in linear diffusion (Section 3.1) with linear rewards.

### Results and interpretations

Results are shown in Fig. 2 and we make the following observations:

**1) \(\) has better performance.**\(\) outperforms the baselines. First, when both the diffusion and rewards are linear, \(\) consistently outperforms all baselines that disregard the latent structure (\(\) and \(\)) or incorporate it only partially (\(\)). Second, when the diffusion is linear and rewards are non-linear, \(\) surpasses all baselines. Third, when the diffusion is non-linear and rewards are linear, \(\) demonstrates significant performance gains compared to both \(\) and \(\). With non-linear diffusion and rewards, \(\) surpasses both GLM-TS and UCB-GLM.

**2) Latent diffusion structure may be more important than the reward distribution.** When rewards are non-linear (second and fourth columns in Fig. 2), we included variants of \(\) that use the correct diffusion prior but the wrong reward distribution, employing linear-Gaussian instead of logistic-Bernoulli (\(\) in the second column and \(\) in the fourth column). In both cases, despite the misspecification of the reward distribution, these variants outperform models that use the correct reward distribution but neglect the latent diffusion structure, such as GLM-TS and UCB-GLM.

Figure 2: Regret of \(\) with varying diffusion and reward models and varying parameters \(d\), \(K\), \(L\).

This underscores the significance of accounting for the latent structure, which can sometimes be more crucial than having an accurate reward distribution. Also, the performance gap between dts-ll (non-linear diffusion) and GLM-TS and Ucb- GLM is even more pronounced compared to the gap between dts-ll (linear diffusion) and these baselines, possibly due to the increased complexity of the latent structure, in the non-linear diffusion, overshadowing the impact of the reward model itself.

**3) Prior misspecification (Fig. 3).** We consider a scenario where the prior used by dts does not match the true prior. To simulate this, we use our setting with linear diffusion and rewards above, but the true parameters \(W_{}\) and \(_{}\) are replaced by misspecified parameters \(_{}+_{1}\) and \(_{}+_{2}\). Here, \(_{1}\) and \(_{2}\) are sampled uniformly from \([v,v+0.5]^{d d}\), with \(v\) controlling the level of misspecification. The higher the value of \(v\), the greater the misspecification. We vary \(v\{0.5,1,1.5\}\) and analyze its impact on dts's performance. For comparison, we include the well-specified dts-ll and the most competitive baseline, HierTS. Results are shown in Fig. 3. As expected, dts's performance decreases with increasing misspecification. However, even with misspecification, dts outperforms the most competitive baseline, except when \(v=1.5\), where their performances are comparable. Note that the entries of the true parameters \(_{}\) and \(_{}\) are smaller than 1, so values of \(v\{0.5,1,1.5\}\) can lead to significant parameter misspecification. Yet, the performance of dts with misspecified prior parameters remains favorable, suggesting that even an imperfect pre-trained diffusion model can be beneficial when used as prior.

**4) Regret scaling with \(K\), \(d\) and \(L\) matches our theory (Fig. 4).** We verify the impact of the number of actions \(K\), the context dimension \(d\), and the diffusion depth \(L\) on the regret of dts. We maintain the same experimental setup with linear diffusion and rewards, for which we have derived a Bayes regret upper bound. In Fig. 4, we plot the regret of dts-ll across varying values of these parameters: \(K\{10,100,500,1000\}\), \(d\{5,10,15,20\}\), and \(L\{2,4,5,6\}\). As anticipated and aligned with our theory, the empirical regret increases as the values of \(K\), \(d\), or \(L\) grow. This trend arises because larger values of \(K\), \(d\), or \(L\) result in problem instances that are more challenging to learn, consequently leading to higher regret.

**5) Performance gap between dts and**LinTS **widens as \(K\) increases (Fig. 5).** To showcase dts's improved scalability to larger action spaces, we examine its performance across a range of \(K\) values, from \(10\) to \(50,000\), in our setting with linear diffusion and rewards. Fig. 5 reports the final cumulative regret for varying values of \(K\) for both dts-ll and LinTS, observing that the gap in the performance becomes larger as \(K\) increases.

## 6 Conclusion

Graphing with large action spaces in contextual bandits is challenging. Recognizing this, we focused on structured problems where action parameters are sampled from a diffusion model; upon which we built diffusion Thompson sampling (dts). We developed both theoretical and algorithmic foundations for dts in numerous practical settings. We identified several directions for future work. Exploring other approximations for non-linear diffusion models, both empirically and theoretically. From a theoretical perspective, future research could explore the advantages of non-linear diffusion models by deriving their Bayes regret bounds, akin to our analysis in Section 4. Empirically, investigating our and other approximations in complex tasks would be interesting. Additionally, exploring the extension of this work to offline (or off-policy) learning in contextual bandits (Swaminathan and Joachims, 2015; Aouali et al., 2023) represents a promising avenue for future research.

Figure 4: dts-ll’s regret scaling.

Figure 5: Regret of dts-ll and LinTS with varying \(K\).

Figure 3: Prior misspecification effect.