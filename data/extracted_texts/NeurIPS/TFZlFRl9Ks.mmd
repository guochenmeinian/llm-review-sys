# CAT3D: Create Anything in 3D

with Multi-View Diffusion Models

 Ruiqi Gao\({}^{1}\)* Aleksander Holyinski\({}^{1}\)* Philipp Henzler\({}^{2}\) Arthur Brussee\({}^{1}\)

**Ricardo Martin-Brualla\({}^{2}\) Pratul Srinivasan\({}^{1}\) Jonathan T. Barron\({}^{1}\) Ben Poole\({}^{1}\)* \({}^{1}\)Google DeepMind \({}^{2}\)Google Research *equal contribution**

###### Abstract

Advances in 3D reconstruction have enabled high-quality 3D capture, but require a user to collect hundreds to thousands of images to create a 3D scene. We present CAT3D, a method for creating anything in 3D by simulating this real-world capture process with a multi-view diffusion model. Given any number of input images and a set of target novel viewpoints, our model generates highly consistent novel views of a scene. These generated views can be used as input to robust 3D reconstruction techniques to produce 3D representations that can be rendered from any viewpoint in real-time. CAT3D can create entire 3D scenes in as little as one minute, and outperforms existing methods for single image and few-view 3D scene creation.

## 1 Introduction

The demand for 3D content is higher than ever, since it is essential for enabling real-time interactivity for games, visual effects, and wearable mixed reality devices. Despite the high demand, high-quality 3D content remains relatively scarce. Unlike 2D images and videos which can be easily captured with consumer photography devices, creating 3D content requires complex specialized tools and a substantial investment of time and effort.

Figure 1: CAT3D enables 3D scene creation from any number of generated or real images.

Fortunately, recent advancements in photogrammetry techniques have greatly improved the accessibility of 3D asset creation from 2D images. Methods such as NeRF , Instant-NGP , and Gaussian Splatting  allow anyone to create 3D content by taking photos of a real scene and optimizing a representation of that scene's underlying 3D geometry and appearance. The resulting 3D representation can then be rendered from any viewpoint, similar to traditional 3D assets. Unfortunately, creating detailed scenes still requires a labor-intensive process of capturing hundreds to thousands of photos. Captures with insufficient coverage of the scene can lead to an ill-posed optimization problem, which often results in incorrect geometry and appearance and, consequently, implausible imagery when rendering the recovered 3D model from novel viewpoints.

Reducing this requirement from dense multi-view captures to less exhaustive inputs, such as a single image or text, would enable more accessible 3D content creation. Prior work has developed specialized solutions for different input settings, such as geometry regularization techniques targeted for sparse-view reconstruction [4; 5], feed-forward models trained to create 3D objects from single images , or the use of image-conditioned  or text-conditioned  generative priors in the optimization process--but each of these specialized methods comes with associated limitations in quality, efficiency, and generality.

In this paper, we instead focus on the fundamental problem that limits the use of established 3D reconstruction methods in the observation-limited setting: an insufficient number of supervising views. Rather than devising specialized solutions for different input regimes [8; 9; 7], a shared solution is to instead simply _create_ more observations--collapsing the less-constrained, under-determined 3D creation problems to the fully-constrained, fully-observed 3D reconstruction setting. This way, we reformulate a difficult ill-posed _reconstruction_ problem as a _generation_ problem: given any number of input images, generate a collection of consistent novel observations of the 3D scene. Recent video generative models show promise in addressing this challenge, as they demonstrate the capability to synthesize video clips featuring plausible 3D structure [10; 11; 12; 13; 14; 15]. However, these models are often expensive to sample from, challenging to control, and limited to smooth and short camera trajectories.

Our system, **CAT3D**, instead accomplishes this through a multi-view diffusion model trained _specifically_ for novel-view synthesis. Given any number of input views and any specified novel viewpoints, our model generates multiple 3D-consistent images through an efficient parallel sampling strategy. These generated images are subsequently fed through a robust 3D reconstruction pipeline to produce a 3D representation that can be rendered at interactive rates from any viewpoint. We show that our model is capable of producing photorealistic results of arbitrary objects or scenes from any number of captured or synthesized input views in as little as one minute. We evaluate our work across various input settings, ranging from sparse multi-view captures to a single captured image, and even just a text prompt (by using a text-to-image model to generate an input image from that prompt). CAT3D outperforms prior works for measurable tasks (such as the multi-view capture case) on multiple benchmarks, and is an order of magnitude faster than previous state-of-the-art. For tasks where empirical performance is difficult to measure (such as text-to-3D and single image to 3D), CAT3D compares favorably with prior work in all settings.

## 2 Related Work

Creating entire 3D scenes from limited observations requires 3D generation, _e.g._, creating content in unseen regions, and our work builds on the ever-growing research area of 3D generative models . Due to the relative scarcity of 3D datasets, much research in 3D generation is centered on transferring knowledge learned by 2D image-space priors, as 2D data is abundant. Our diffusion model is built on the recent development of video and multi-view diffusion models that produce highly consistent novel views. We show that pairing these models with 3D reconstruction, similar to [17; 18], enables efficient and high quality 3D creation. Below we discuss how our work is related to several areas of prior work.

2D priors.Given limited information such as text, pretrained text-to-image models can provide a strong generative prior for text-to-3D generation. However, distilling the knowledge present in these image-based priors into a coherent 3D model currently requires an iterative distillation approach. DreamFusion  introduced Score Distillation Sampling (SDS) to synthesize 3D objects (as NeRFs) from text prompts. Research in this space has aimed to improve distillation strategies [19; 20; 21; 22;Figure 2: **Qualitative results (renders)**: CAT3D can create high-quality 3D objects or scenes from a number of input modalities: an input image generated by a text-to-image model (_top row_), a single captured real image (_middle row_), and multiple captured real images (_bottom row_).

23], swap in other 3D representations [24; 25; 26; 27; 28], and amortize the optimization process . Using text-based priors for single-image-to-3D has also shown promise [30; 31; 32], but requires a complex balancing of the image observation with additional constraints. Incorporating priors such as monocular depth models or inpainting models has been useful for creating 3D scenes, but tends to result in poor global geometry [33; 34; 35; 36].

2D priors with camera conditioning.While text-to-image models excel at generating visually appealing images, they lack precise control over the pose of images, and thus require a time-consuming 3D distillation process to encourage the 3D model to conform to the 2D prior. To overcome this limitation, several approaches train or fine-tune generative models with explicit image and pose conditioning [7; 37; 38; 39; 40; 41; 42]. These models provide stronger priors for what an object or scene should look like given text and/or input image(s), but they also model all output views _independently_. In cases where there is little uncertainty in what should appear at novel views, reasoning about generated views independently is sufficient for efficient 3D reconstruction . But when there is some uncertainty exists, these top-performing methods still require expensive 3D distillation to resolve the inconsistencies between different novel views.

Multi-view priors.Modeling the correlations between multiple views provides a much stronger prior for what 3D content is consistent with partial observations. Methods like MVDream , ImageDream , Zero123++ , ConsistNet , SyncDreamer  and ViewDiff  fine-tune text-to-image models to generate multiple views simultaneously. CAT3D is similar in architecture to ImageDream, where the multi-view dependency is captured by an architecture resembling video diffusion models with 3D self-attention. Given this stronger prior, these papers also demonstrate higher quality and more efficient 3D extraction.

Video priors.Video diffusion models have demonstrated an astonishing capability of generating realistic videos [49; 50; 10; 12; 15; 13; 51], and are thought to implicitly reason about 3D. However, it remains challenging to use off-the-shelf video diffusion models for 3D generation for a number of reasons. Current models lack exact camera controls, limiting generation to clips with only smooth and short camera trajectories, and struggle to generate videos with only camera motion but no scene dynamics. Several works have proposed to resolve these challenges by fine-tuning video diffusion models for camera-controled or multi-view generation. For example, AnimateDiff  LoRA fine-tuned a video diffusion model with fixed types of camera motions, and MotionCtrl  conditioned the model on arbitrary specified camera trajectories. ViVid-1-to-3  combines a novel view synthesis model and a video diffusion model for generating smooth trajectories. SVD-MV , IM-3D  and SV3D  further explored leveraging camera-controlled or multi-view video diffusion models for 3D generation. However, their camera trajectories are limited to orbital ones surrounding the center content. These approaches mainly focus on 3D object generation, and do not work for 3D scenes, few-view 3D reconstruction, or objects in context (objects that have not been masked or otherwise separated from the image's background).

Feed-forward methods.Another line of research is to learn feed-forward models that take a few views as input, and output 3D representations directly, without an optimization process per instance [6; 56; 57; 58; 18; 59; 60]. These methods can produce 3D representations efficiently (within a few seconds), but the quality is often worse than approaches built on image-space priors.

## 3 Method

CAT3D is a two-step approach for 3D creation: first, we generate a large number of novel views consistent with one or more input views using a multi-view diffusion model, and second, we run a robust 3D reconstruction pipeline on the generated views (see Figure 3). Below we describe our multi-view diffusion model (Section 3.1), our method for generating a large set of nearly consistent novel views from it (Section 3.2), and how these generated views are used in a 3D reconstruction pipeline (Section 3.3).

### Multi-View Diffusion Model

We train a multi-view diffusion model that takes a single or multiple views of a 3D scene as input and generates multiple output images given their camera poses (where "a view" is a paired image and its camera pose). Specifically, given \(M\) conditional views containing \(M\) images \(^{}\) and their corresponding camera parameters \(^{}\), the model learns to capture the joint distribution of \(N\) target images \(^{}\) assuming their \(N\) target camera parameters \(^{}\) are also given:

\[p^{}|^{},^{ },^{}\,.\] (1)

Model architecture.Our model architecture is similar to video latent diffusion models (LDMs) [49; 11], but with camera pose embeddings for each image instead of time embeddings. Given a set of conditional and target images, the model encodes every individual image into a latent representation through an image variational auto-encoder . Then, a diffusion model is trained to estimate the joint distribution of the latent representations given conditioning signals. We initialize the model from an LDM trained for text-to-image generation similar to  trained on web-scale image data, with an input image resolution of \(512 512 3\) and latents with shape \(64 64 8\). As is often done in video diffusion models [50; 10; 11], the main backbone of our model remains the pretrained 2D diffusion model but with additional layers connecting the latents of multiple input images. As in , we use 3D self-attention (2D in space and 1D across images) instead of simple 1D self-attention across images. We directly inflate the existing 2D self-attention layers after every 2D residual block of the original LDM to connect latents with 3D self-attention layers while inheriting the parameters from the pre-trained model, introducing minimal amount of extra model parameters. We found that conditioning on input views through 3D self-attention layers removed the need for PixelNeRF  and CLIP image embeddings  used by the prior state-of-the-art model on few-view reconstruction, ReconFusion . We use FlashAttention [65; 66] for fast training and sampling, and fine-tune all the weights of the latent diffusion model. Similar to prior work [10; 67], we found it important to shift the noise schedule towards high noise levels as we move from the pre-trained image diffusion model to our multi-view diffusion model that captures data of higher dimensionality. Concretely, following logic similar to , we shift the log signal-to-noise ratio by \((N)\) towards the high signal-to-noise ratio region, where \(N\) is the number of target views. Similar shifts have been adopted empirically

Figure 3: **Illustration of the method. Given one to many views, CAT3D creates a 3D representation of the scene in as little as one minute. CAT3D has two stages: (1) generate a large set of synthetic views with a multi-view latent diffusion model conditioned on the input views and target poses; (2) run a robust 3D reconstruction pipeline on the observed and generated views. This decoupling of the generative prior and 3D reconstruction process results in efficiency improvements and reduced methodological complexity relative to prior work [7; 8; 42], while also improving visual quality.**by [11; 10]. For training, latents of target images are noise perturbed while latents of conditional images are kept as clean, and the diffusion loss is defined only on target images. A binary mask is concatenated to the latents along the channel dimension, to denote conditioning vs. target images. To deal with multiple 3D generation settings, we train a single versatile model that can model a total of 8 conditioning and target views (\(N+M=8\)), and randomly select the number of conditional views \(M\) to be \(1\) or \(3\) during training, corresponding to \(7\) and \(5\) target views respectively. The noise schedule is shifted based on \(5\) target views. See Appendix B for more model details.

Camera conditioning.To condition on the camera pose, we use a camera ray representation ("raymap") that is the same height and width as the latent representations [38; 68] and encodes the ray origin and direction at each spatial location. The rays are computed relative to the camera pose of the first conditional image, so our pose representation is invariant to rigid transformations of 3D world coordinates. Raymaps for each image are concatenated channel-wise onto the latents for the corresponding image.

### Generating Novel Views

Given a set of input views, our goal is to generate a large set of consistent views to fully cover the scene and enable accurate 3D reconstruction. To do this, we need to decide on the set of camera poses to sample, and we need to design a sampling strategy that can use a multi-view diffusion model trained on a small number of views to generate a much larger set of consistent views.

Camera trajectories.Compared to 3D object reconstruction where orbital camera trajectories can be effective, a challenge of 3D scene reconstruction is that the views required to fully cover a scene can be complex and depend on the scene content. We empirically found that designing reasonable camera trajectories for different types of scenes is crucial to achieve compelling few-view 3D reconstruction. The camera paths must be sufficiently thorough and dense to fully-constrain the reconstruction problem, but also must not pass through objects in the scene or view scene content from unusual angles. In summary, we explore four types of camera paths based on the characteristic of a scene: (1) orbital paths of different scales and heights around the center scene, (2) forward facing circle paths of different scales and offsets, (3) spline paths of different offsets, and (4) spiral trajectories along a cylindrical path, moving into and out of the scene. See Appendix C for more details.

Generating a large set of synthetic views.A challenge in applying our multi-view diffusion model to novel view synthesis is that it was trained with a small and finite set of input and output views -- just 8 in total. To increase the total number of output views, we cluster the target viewpoints into smaller groups and generate each group independently given the conditioning views. We group target views with close camera positions, as these views are typically the most dependent. For single-image conditioning, we adopt an autoregressive sampling strategy, where we first generate a set of 7 _anchor views_ that cover the scene (similar to , and chosen using the greedy initialization from ), and then generate the remaining groups of views in parallel given the observed and anchor views. This allows us to efficiently generate a large set of synthetic views while still preserving both long-range consistency between anchor views and local similarity between nearby views. For the single-image setting, we generate 80 views, while for the few-view setting we use 480-960 views. See Appendix C for details.

Conditioning larger sets of input views and non-square images.To expand the number of views we can condition on, we choose the nearest \(M\) views as the conditioning set, as in . We experimented with simply increasing the sequence length of the multi-view diffusion architecture during sampling, but found that the nearest view conditioning and grouped sampling strategy performed better. To handle wide aspect ratio images, we combine square samples from square-cropped input views with wide samples cropped from input views padded to be square.

### Robust 3D reconstruction

Our multi-view diffusion model generates a set of high-quality synthetic views that are reasonably consistent with each other. However, the generated views are generally not perfectly 3D consistent. Indeed, generating perfectly 3D consistent images remains a very challenging problem even for current state-of-the-art video diffusion models . Since 3D reconstruction methods have been designed to take photographs (which are by definition perfectly consistent) as input, we modify the standard NeRF training procedure to improve its robustness to inconsistent input views.

We build upon Zip-NeRF , whose training procedure minimizes the sum of a photometric reconstruction loss, a distortion loss, an interlevel loss, and a normalized L2 weight regularizer. We additionally include a perceptual loss (LPIPS ) between the rendered image and the input image. Compared to the photometric reconstruction loss, LPIPS emphasizes high-level semantic similarity between the rendered and observed images, while ignoring potential inconsistencies in low-level high-frequency details. Since generated views closer to the observed views tend to have less uncertainty and are therefore more consistent, we weight the losses for generated views based on the distance to the nearest observed view. This weighting is uniform at the beginning of the training, and is gradually annealed to a weighting function that more strongly penalizes reconstruction losses for views closer to one of the observed views. See Appendix D for additional details.

## 4 Experiments

We trained the multi-view diffusion model at the core of CAT3D on four datasets with camera pose annotations: Obiayverse , CO3D , RealEstate10k  and MVImgNet . We then evaluated CAT3D on the few-view reconstruction task (Section 4.1) and the single image to 3D task (Section 4.2), demonstrating qualitative and quantitative improvements over prior work. The design choices that led to CAT3D are ablated and discussed further in Section 4.3.

### Few-View 3D Reconstruction

We first evaluate CAT3D on five real-world benchmark datasets for few-view 3D reconstruction. Among those, CO3D  and RealEstate10K  are in-distribution datasets whose training splits were part of our training set (we use their test splits for evaluation), whereas DTU , LLFF  and the mip-NeRF 360 dataset  are out-of-distribution datasets that were not part of the training dataset. We tested CAT3D on the \(3\), \(6\) and \(9\) view reconstruction tasks, with the same train and eval splits as . In Table 1, we compare to the state-of-the-art for dense-view NeRF reconstruction with no learned priors (Zip-NeRF ) and methods that heavily leverage generative priors such as ZeroNVS 

Figure 4: **Qualitative comparison, few-view reconstruction (renders).** A comparison of rendered reconstructions on scenes from mip-NeRF 36 (_top row_) and CO3D (_bottom row_), given \(3\) input captured views. Compared to ReconFusion , CAT3D better aligns with ground-truth in seen regions, while hallucinating plausible content in unseen regions. See supplemental website for additional comparisons.

[MISSING_PAGE_FAIL:8]

in-domain and out-of-domain datasets) and few-view 3D reconstruction performance. We also compare important design choices for 3D reconstruction. Results from our ablation study are reported in Table 3 and Figure 6 in Appendix A and summarized below. Overall, we found that video diffusion architectures, with 3D self-attention (spatiotemporal) and raymap embeddings of camera pose, produce consistent enough views to recover 3D representations when combined with robust reconstruction losses.

**Image and pose.** Previous work  used PixelNerf  feature-map conditioning for multiple input views. We found that replacing PixelNeRF with attention-based conditioning in a conditional video diffusion architecture using a per-image embedding of the camera pose results in improved samples and 3D reconstructions, while also reducing model complexity and the number of parameters. We found that embedding the camera pose as a low-dimensional vector (as in ) works well for in-domain samples, but generalizes poorly compared to raymap conditioning (see Section 3.1).

**Increasing the number of views.** We found that jointly modeling multiple output views (_i.e._, 5 or 7 views instead of 1) improves sample metrics -- even metrics that evaluate the quality of each output image _independently_. Jointly modeling multiple outputs creates more consistent views that result in an improved 3D reconstruction as well.

   Model & Time (min) & CLIP (Image) \\  ImageDream  & 120 & 83.77 \(\) 5.2 \\ One2345++  & 0.75 & 83.78 \(\) 6.4 \\ IM-3D (NeRF)  & 40 & 87.37 \(\) 5.4 \\ IM-3D  & 3 & **91.40**\(\) 5.5 \\ CAT3D (ours) & 1 & 88.54 \(\) 8.6 \\   

Table 2: Evaluating image-to-3D quality with CLIP image scores on examples from  (numbers reproduced from ). CAT3D produces competitive results to object-centric baselines while also working on whole scenes. (Note: shown images are 3D renders, and time for CAT3D was evaluated on 16 A100 GPUs.)

Figure 5: **3D creation from single input images**. Renderings of 3D models from CAT3D (_middle row_) are higher quality than baselines (_bottom row_) for scenes, and competitive for objects. Note that scale ambiguity amplifies the differences in renderings between methods. See supplemental website for additional comparisons.

**Attention layers.** We found that 3D self-attention (spatiotemporal) is crucial, as it yields improved performance relative to factorized 2D self-attention (spatial-only) and 1D self-attention (temporal-only). While models with 3D self-attention in the finest feature maps (\(64 64\)) result in the highest fidelity images, they incur a significant computational overhead for training and sampling for relative small gain in fidelity. We therefore decided to use 3D self-attention only in feature maps of size \(32 32\) and smaller.

**Multi-view diffusion model training.** Initializing from a pre-trained text-to-image latent diffusion model improved performance on out-of-domain examples. We experimented with fine-tuning the multi-view diffusion model to multiple variants specialized for specific numbers of inputs and outputs views, but found that a single model jointly trained on 8 frames with either 1 or 3 conditioning views was sufficient to enable accurate single image and few-view 3D reconstruction.

**3D reconstruction.** LPIPS loss is crucial for achieving high-quality texture and geometry, aligning with findings in [17; 7]. On Mip-NeRF 360, increasing the number of generated views from 80 (single elliptical orbit) to 720 (nine orbits) improved central object geometry but sometimes introduced background blur, probably due to inconsistencies in generated content.

## 5 Discussion

We present CAT3D, a unified approach for 3D content creation from any number of input images. CAT3D leverages a multi-view diffusion model for generating highly consistent novel views of a 3D scene, which are then input into a 3D multi-view reconstruction pipeline. CAT3D decouples the generative prior from 3D extraction, leading to efficient, simple, and high-quality 3D generation.

Although CAT3D produces compelling results and outperforms prior works on multiple tasks, it has limitations. Because our training datasets have roughly constant camera intrinsics for views of the same scene, the trained model cannot handle test cases well where input views are captured by multiple cameras with different intrinsics. The generation quality of CAT3D relies on the expressivity of the base text-to-image model, and it performs worse in the cases where scene content is out of distribution for the base model (e.g. human faces, since the base model was trained on limited human data). The number of output views supported by our multi-view diffusion model is still relatively small, so when we generate a large set of samples from our model, not all views may be 3D consistent with each other (see Supplementary website). Finally, CAT3D uses manually-constructed camera trajectories that cover the scene thoroughly (see Appendix C), which may be difficult to design for large-scale open-ended 3D environments.

There are a few directions worth exploring in future work to improve CAT3D. The multi-view diffusion model may benefit from being initialized from a pre-trained video diffusion model, as observed by [10; 17]. The consistency of samples could be further improved by extending the number of conditioning and target views handled by the model. Automatically determining the camera trajectories required for different scenes could increase the flexibility of the system.