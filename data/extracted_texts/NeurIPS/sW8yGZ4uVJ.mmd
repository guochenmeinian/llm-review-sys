# Ordering-based Conditions for Global Convergence

of Policy Gradient Methods

 Jincheng Mei

Google DeepMind

jcmei@google.com

&Bo Dai

Google DeepMind

bodai@google.com

&Alekh Agarwal

Google Research

alekhagarwal@google.com

&Mohammad Ghavamzadeh

Amazon

ghavamza@amazon.com

&Csaba Szepesvari

Google DeepMind

University of Alberta

szepi@google.com

&Dale Schuurmans

Google DeepMind

University of Alberta

daes@ualberta.ca

The work was done prior to joining Amazon, while the author was at Google Research.

37th Conference on Neural Information Processing Systems (NeurIPS 2023).

###### Abstract

We prove that, for finite-arm bandits with linear function approximation, the global convergence of policy gradient (PG) methods depends on inter-related properties between the policy update and the representation. First, we establish a few key observations that frame the study: **(i)** Global convergence can be achieved under linear function approximation without policy or reward realizability, both for the standard Softmax PG and natural policy gradient (NPG). **(ii)** Approximation error is not a key quantity for characterizing global convergence in either algorithm. **(iii)** The conditions on the representation that imply global convergence are different between these two algorithms. Overall, these observations call into question approximation error as an appropriate quantity for characterizing the global convergence of PG methods under linear function approximation. Second, motivated by these observations, we establish new general results: **(i)** NPG with linear function approximation achieves global convergence _if and only if_ the projection of the reward onto the representable space preserves the optimal action's rank, a quantity that is not strongly related to approximation error. **(ii)** The global convergence of Softmax PG occurs if the representation satisfies a non-domination condition and can preserve the ranking of rewards, which goes well beyond policy or reward realizability. We provide experimental results to support these theoretical findings.

## 1 Introduction

Policy gradient (PG) is a foundational concept in reinforcement learning (RL), centrally used in both policy-based and actor-critic methods . Despite the non-convexity of the policy optimization objective , global convergence of PG methods has been recently established in the tabular case for standard configurations such as the softmax parameterization  and stochastic on-policy sampling . In practice, when an RL agent is faced with a problem with large state and/or action spaces, _function approximation_ is needed to generalize across related states and actions. The behavior of PG methods in these settings is relatively under-explored. In this paper, we study this question for the case of linear function approximation, and establish a surprising result that

_the classical Softmax PG method converges whenever there exists an adequate linear function that ranks actions in the same order as the ground-truth reward function._Understanding the behavior of PG methods under function approximation is crucial for describing the behavior of RL in practice, since one rarely faces domains small enough to explicitly enumerate over states and actions in parameterizing the policy. It is well known that, standard Softmax PG converges to stationary points if a "compatible" function approximation is used ; i.e., one that is able to exactly represent policy value functions. However, when exact policy values are non-realizable, "approximation error" is typically considered to be the key quantity for characterizing how well a function approximation captures relevant problem quantities, including transition dynamics, rewards and policy values. This paper shows that such an approximation error perspective is _overly demanding_ when attempting to characterize the conditions that lead to global convergence of PG methods.

Using the concept of approximation error, global convergence results for PG methods have been recently established in an additive form,

sub-optimality gap \[\] optimization error \[+\] approximation error, (1)

implying that if the approximation error is small, a diminishing optimization error implies a small sub-optimality gap. A representative result is the global convergence of natural policy gradient (NPG) [4, Table 2], where the optimization error will diminish as the algorithm updates. There have also been global convergence results for other PG variants under linear function approximation that follow a similar approximation error analysis . However, an additive bound like Eq. (1) has the inherent weakness that the approximation error will never be zero if the function approximation is not able to perfectly represent the desired quantities. This prevents such a strategy from establishing global convergence in cases where the approximation error is non-zero but a PG method still reaches the best representable solution.

Therefore, in spite of this recent progress, using approximation error in PG global convergence with function approximations has left two major gaps in the literature. First, it has not been investigated whether small approximation error is _necessary_ to achieve convergence to an optimal representable policy , diverting attention from feature designs that achieve useful properties beyond small approximation error. Second, it is not clear if standard Softmax PG (other than NPG) converges globally under small approximation errors. In particular, NPG contains a least squares regression step [4, Eq. (17)] that can be naturally characterized with an approximation error quantity. However, standard Softmax PG does not have such a projection step , and the results in  do not apply to this update. Whether standard Softmax PG can achieve global convergence with even linearly realizable rewards (zero approximation error) is still an open problem.

In this paper, we address the above questions and contribute the following results. First, we provide negative answers to questions on the role of approximation error in determining global convergence of PG methods:

**(i)**: Global convergence can be achieved under linear function approximation with non-zero approximation error, for both the standard Softmax PG and natural policy gradient (NPG) updates.
**(ii)**: Approximation error is not a key quantity for characterizing global convergence in either case.
**(iii)**: The conditions that imply global convergence are different between these two algorithms.

Second, these results lead us to question whether approximation error is an appropriate quantity to consider the global convergence of PG methods under linear function approximation. We establish new general results that characterize the conditions for global convergence of PG methods:

**(i)**: NPG with log-linear function approximation achieves global convergence if and only if the projection of the reward onto the representable space preserves the optimal action's rank. This result significantly extends previous results that use approximation error in the analysis , since preserving the rank of the optimal action is not strongly related to approximation error (except in the realizable limit).
**(ii)**: We show that the global convergence of Softmax PG follows if the representation satisfies a non-domination condition and can preserve the ranking of rewards, which goes well beyond policy or reward realizability. As a byproduct, we resolve an open question by showing that even for linearly realizable reward function, Softmax PG cannot always converge to globally optimal policies when the non-domination condition for representation is violated.

## 2 Settings

We study the policy optimization problem under one state with \(K\) actions. Given a reward vector \(r^{K}\), the problem is to find a parametric policy \(_{}\) to maximize the expected reward,

\[_{^{d}}_{}^{}r,\] (2)

where \(^{d}\) with \(d<K\) is the parameter, and \(_{}=(X)\) is called a "log-linear policy"  such that for all action \(a[K]\{1,2,,K\}\),

\[_{}(a)=}{_{a^{}[K]}\{[X ](a^{})\}},\] (3)

where \(X^{K d}\) is the feature matrix with full column rank \(d<K\). There are two major difficulties with the policy optimization problem. First, Eq. (2) is a non-concave maximization w.r.t. \(\), due to the softmax transform [22, Proposition 1]. Second, the policy and reward can be unrealizable, in the sense that the parametric log-linear policy \(_{}=(X)\) cannot well approximate every policy \(\) in the \(K\)-dimensional probability simplex, and the score \(X^{K}\) cannot well approximate the true mean reward \(r^{K}\). Such limitations arise in the linear function approximation case because \(_{}\) and \(X\) are restricted to low-dimensional manifolds via \(^{d}\) for \(d<K\).

To solve Eq. (2), we consider the standard Softmax PG  and NPG  methods, shown in Algorithms 1 and 2. Softmax PG is an instance of gradient ascent, obtained by the chain rule,

\[}^{}r}{d_{t}}=}{d _{t}}(}}{d\,X_{t}})^{}}^{}r}{d_{_{t}}}=X^{}((_{ _{t}})-_{_{t}}_{_{t}}^{})\;r.\] (4)

On the other hand, NPG conduc updates using least squares regression (i.e., projection),

\[(X^{}X)^{-1}X^{}r=*{arg\,min}_{w^{d}}\|Xw-r\|_{2}^{2}.\] (5)

As representative policy-based methods, in their general forms, Softmax PG and NPG lay the foundation for widely used RL methods, including REINFORCE , actor-critic , TRPO and PPO . The above Eqs. (4) and (5) are their updates applied to the one-state setting.

``` Input: Learning rate \(>0\). Output: Policies \(_{_{t}}=(X_{t})\).  Initialize parameter \(_{1}^{d}\). while\(t 1\)do \(_{t+1}_{t}+ X^{}((_{_{t}}) -_{_{t}}_{_{t}}^{})r\). endwhile ```

**Algorithm 1** Softmax policy gradient (PG)

To understand the difficulty of the optimization problem in Eq. (2), it is helpful to consider previous work that has analyzed the convergence of PG methods.

In the tabular setting, where \(d=K\), \(X=\), and \(_{}=()\) with \(^{K}\), both the rewards and optimal policy can be arbitrarily well approximated. In this case it is known that NPG enjoys a \(O(1/t)\) global convergence rate [4, Table 1], which has been recently improved to \(O(e^{-c_{t}})\). For the case of function approximation, such results have subsequently been extended to log-linear policies, where approximation error is used to characterize the projection step of Eq. (5) . In particular, NPG achieves the following sub-optimality gap for all \(t 1\)[4, Table 2],

\[(^{*}-_{_{t}})^{}r c_{1}/+c_{2} _{},(c_{1}>0,\;c_{2}>0)\] (6)

where \(c_{1}\) and \(c_{2}\) are problem specific constants, \(^{*}\) is the globally optimal policy, \(_{_{t}}\) is produced by NPG, and \(_{}\) is the approximation error, i.e., the minimum error with which the policy values can be approximated using the features [4, Table 2]. The "optimization error" term \(c_{1}/\) in Eq. (6) has since been improved to \(O(e^{-c_{3} t})\) with \(c_{3}>0\) in . Note that if \(_{}>0\) then Eq. (6) is insufficient for establishing \(_{_{t}}^{}r r(a^{*})_{a[K]}r(a)\) as \(t\) even when such global convergence is achieved.

The understanding for the standard Softmax PG is even less clear. In the tabular case, it is known that Softmax PG achieves global convergence asymptotically, i.e., \(_{_{t}}^{}r r(a^{*})\) as \(t\), with an \(O(1/t)\) rate of convergence that exhibits undesirable problem and initialization dependent constants. Directly extending this global convergence result to the case of function approximation, i.e., log-linear policies, is impossible without any additional assumptions on the features, since there can be exponentially many sub-optimal local maxima in the worst case . In fact, even with linearly realizable rewards (zero approximation error), whether standard Softmax PG achieves global convergence still remains unsolved . One intuitive reason why this is a difficult result to establish is that standard Softmax PG uses the gradient Eq. (4) rather than projection (regression) to perform updates, which is less directly connected to the concept of approximation error.

## 3 The Limitations of Approximation Error in Characterizing Convergence

It is known that there exist representations \(X^{K d}\) with \(d<K\) and \(r^{K}\) that create exponentially many sub-optimal local maxima in Eq. (2) [9, Theorem 1], which makes it impossible to ensure global convergence of PG methods without imposing any structure on the function approximation. Before identifying specific conditions that ensure global convergence, we first explain how approximation error cannot be a useful structural measure for this purpose, by demonstrating that zero approximation error is not a necessary condition for global convergence, and illustrating problem instances with comparable approximation error that render starkly different convergence behaviors across different PG methods. Specifically, we illustrate these points with a set of concrete scenarios, each with \(4\) actions and \(2\)-dimensional feature vectors describing each action. Since \(d<K\), not every policy can be expressed in these representations, hence the problem instances are unrealizable.

### Global Convergence is Achievable with Non-zero Approximation Error

The results of [9, Theorem 1] do not imply that sub-optimal local maxima always appear, as shown in the following.

**Example 1**.: \(K=4\)_, \(d=2\), \(X^{}=0&-1&0&2\\ -2&0&1&0\) and \(r=(9,8,7,6)^{}\). The approximation error is \(_{}=_{w^{d}}\|Xw-r\|_ {2}=\|X(X^{}X)^{-1}X^{}r-r\|_{2}=  14.2338\)._

Note that the approximation error is larger than any sub-optimality gap, i.e., for any policy \(\),

\[(^{*}-)^{}\,r 3<_{},\] (7)

hence the bound in Eq. (6) does not imply global convergence for NPG in this example. Yet, despite the non-zero approximation error and the inability of existing results including Eq. (6) to establish global convergence on Example 1, both Algorithms 1 and 2 can be shown to reach a global maximum.

**Proposition 1**.: _Denote \(a^{*}_{a[K]}r(a)\). With constant \(>0\) and any initialization \(_{1}^{d}\), both Algorithms 1 and 2 guarantee \(_{_{t}}^{}r r(a^{*})\) as \(t\) on Example 1._

All proofs can be found in the appendix due to space limits. The fact that Softmax PG achieves global convergence in Example 1 is much harder to establish than for NPG, since Eq. (4) involves a complex non-linearity given the presence of the softmax, unlike the linear least squares Eq. (5) used in NPG. To illustrate the intuition behind Proposition 1 we use a visualization of the optimization landscape.

Visualization.A visualization of the optimization landscape of Example 1 is shown in Figure 1(a). The bottom two-dimensional plane is the parameter space \(^{d}\) where \(d=2\). For each \(^{d}\), we calculate \(_{}\) using Eq. (3) and \(_{}^{}r\) using Eq. (2), and use \(_{}^{}r\) as the vertical axis value of \(\).

To verify Proposition 1, we run Softmax PG and NPG on Example 1 with the same \(_{1}=(6,8)^{}^{2}\). In Figure 1(a), the optimization trajectories show \(85\) iterations of NPG and \(8.5 10^{6}\) iterations of

Figure 1: Visualizing the landscapes in the example problem instances.

[MISSING_PAGE_FAIL:5]

### Reward Order Preservation with Adequate Features is Sufficient for PG Convergence

We now investigate a global convergence condition for Softmax PG under log-linear policies.

Intuition.Consider Example 1, where Softmax PG achieves global convergence. From the landscape shown in Figure 1(a), there appears to be a monotonic path from any initialization point that allows gradient ascent to reach the optimal plateau with reward \(r(a^{*})=9\). Intuitively, this arises because the actions' rewards seem to be nicely "ordered". For example, starting from \(_{1}=(6,8)^{}^{d}\) such that \(_{_{1}}^{}r 6\), Softmax PG is able to improve its expected reward eventually to \(_{_{t}}^{}r 7\), since there exists a sub-optimal plateau with a higher reward \(7\) right beside the lowest plateau with reward \(6\). Next, Softmax PG continues to improve its expected reward eventually to \(_{_{t}}^{}r 8\) by "climbing" toward another neighboring plateau with a higher reward. Finally, this process ends with Softmax PG successfully arriving at the optimal plateau with reward \(r(a^{*})=9\).

By contrast, in Example 2, as shown in Figure 1(b), Softmax PG gets stuck on a bad plateau with a local maximum reward of \(8\). Visually, Softmax PG stops improving its expected reward on this sub-optimal plateau, because it is "surrounded" by two lower plateaus with rewards \(6\) and \(7\), which breaks the nice "ordering" of the expected reward landscape and traps the gradient ascent trajectory on a sub-optimal plateau from which there is no monotonic ascent to global optimality.

Verifying reward order preservation.Based on the above intuition and observations, we conjecture that the ordering structure between the different rewards is a key property behind the global convergence of Softmax PG. We can verify this conjecture in each of the Examples 1 to 3 by determining whether the feature matrix \(X^{K d}\) allows the same action ordering as the reward vector \(r^{K}\) to be realized. For Example 1, note that with \(w=(-1,-1)^{}^{d}\), we have

\[r^{} Xw=(2,1,-1,-2)^{}^{K},\] (8)

which preserves the ordering of \(r^{K}\), such that for all \(i,j[K]\), \(r(i)>r(j)\) if and only if \(r^{}(i)>r^{}(j)\). Similarly, for Example 3, if we let \(w=(-3,-1)^{}\) then we have \(r^{} Xw=(3,2,-1,-6)^{}\), which also preserves the order of \(r\) over actions. Softmax PG converges to a globally optimal reward in both of these examples.

By contrast, for Example 2, it is impossible to find any \(w^{d}\) such that \(Xw\) preserves the order of the rewards \(r\). To see why, consider any \(w=(w(1),w(2))^{}\) and note that

\[r^{} Xw=(-2 w(2),w(2),-w(1),2 w(1))^{}\,.\] (9)

To preserve the reward order, we require both \(-2 w(2)>w(2)\) (which would imply \(w(2)<0\)) and \(-w(1)>2 w(1)\) (which would imply \(w(1)<0\)), but these two conditions imply \(w(2)<0<-w(1)\), which must reverse the order of the second and third actions. This is an example where PG can fail to reach a global optimum.

Main Softmax PG result.We formalize the above intuition by proving the following main result, which establishes that reward order preservation with adequate representations is a sufficient condition for the global convergence of Softmax PG under log-linear function approximation.

**Theorem 1** (Reward order preservation, non-domination features).: _Given any reward \(r^{K}\) and feature matrix \(X^{K d}\). Denote \(x_{i}^{d}\) as the \(i\)-th row vector of \(X\). If **(i)**\(x_{i}^{}x_{i}>x_{i}^{}x_{j}\) for all \(j i\), and **(ii)** there exists at least one \(w^{d}\), s.t., \(r^{} Xw\) preserves the order of \(r\), i.e., for all \(i,j[K]\), \(r(i)>r(j)\) if and only if \(r^{}(i)>r^{}(j)\), then for any initialization \(_{1}^{d}\), Algorithm 1 with a constant learning rate \(>0\) achieves global convergence of \(_{_{t}}^{}r r(a^{*})\) as \(t\)._

A few remarks about this theorem are in order.

Examples 1 to 3 all satisfy the non-domination condition **(i)** on \(X\), and their differences lie in satisfying reward order preservation or not. However, the following example shows that if the condition **(i)** on \(X\) is removed, then global convergence is not always achievable for even linearly realizable rewards (with zero approximation error).

**Proposition 2**.: _Let \(K=3\), \(d=2\), \(X^{}=0&-10&0\\ -2&4&1^{d K}\), and \(r=Xw=(4,2,-2)^{}\), where \(w=(-1,-2)^{}^{d}\). With initialization \(_{1}=(- 2, 2)^{}\), Algorithm 1 does not achieve global convergence, i.e., \(_{_{t}}(1) 1\) as \(t\)._

**Generalization of tabular and linear realizability.** When \(d=K\) and \(X=\), i.e., the softmax tabular parameterization \(_{}=()\), it is always true that \(Xr=r\) preserves the order of \(r\). Consequently, Theorem 1 recovers the global convergence result for PG in the softmax tabular setting  as a special case. More generally, for non-domination features, when the reward is linearly realizable, such that \(Xw=r\) for some \(w^{d}\), the global convergence of Softmax PG also follows from Theorem 1, since \(r\) preserves its own order when the approximation error is zero.

**Corollary 1** (Linearly realizable rewards, non-domination features).: _Given any reward \(r^{K}\) and feature matrix \(X^{K d}\). Denote \(x_{i}^{d}\) as \(i\)-th row vector of \(X\). If **(i)**\(x_{i}^{}x_{i}>x_{i}^{}x_{j}\) for all \(j i\), and **(ii)** there exists \(w^{d}\), s.t., \(Xw=r\), then for any initialization \(_{1}^{d}\), Algorithm 1 with a constant learning rate \(>0\) achieves global convergence of \(_{_{i}}^{}r r(a^{*})\) as \(t\)._

It is worth mentioning that Proposition 2 and Corollary 1 together answer a question which still remain unsolved in PG literature : with linearly realizable rewards (zero approximation error), whether standard Softmax PG achieves global convergence? Proposition 2 shows that linearly realizable reward on its own is not enough to guarantee global convergence, while Corollary 1 shows that with adequate features, linearly realizable reward implies global convergence. Note that the NPG global convergence result in , such as Eq. (6), does not apply to standard Softmax PG.

**Ordering does not determine approximation.** As already illustrated in Section 3, approximation error is not adequate for capturing the global convergence of Softmax PG. It is important to emphasize that the existence of an order preserving reward \(r^{}\) is very different from having a small approximation error. When the approximation error is zero, then an order preserving reward (equal to \(r\)) always exists. However, in general, \(r^{}\) can take very different values than \(r\), and hence have a very large approximation error, yet still enable global convergence as shown in Examples 1 and 3.

**Proof idea.** The idea behind the proof of the main theorem consists of three parts. We provide a sketch of the proof here; the full proof is given in Appendix A. **First**, starting from any initialization \(_{t}^{d}\), Algorithm 1 guarantees that \(_{_{t}}\) will approach a (generalized) one-hot policy as \(t\). To see why, first note that \(_{}^{}r\) is \(\)-smooth over \(^{d}\) with some \(>0\) (Lemma 3 in Appendix B), since the softmax transform is smooth  and the feature matrix \(X\) has bounded values. This implies that using a sufficiently small constant learning rate \(0< 2/\) we obtain,

\[_{_{t+1}}^{}r-_{_{t}}^{}r\| }^{}r}{d_{t}}\|_{2}^{2} 0.\] (10)

Note that \(_{}^{}r\) is upper bounded by \(r(a^{*})\). According to the monotone convergence, \(_{_{t}}^{}r c r(a^{*})\) as \(t\). This fact combined with Eq. (10) implies \(\|}^{}r}{d_{t}}\|_{2} 0\) as \(t\). Next, a special co-variance structure of softmax PG (Lemma 4) shows that \(\|}^{}r}{d_{t}}\|_{2} 0\) implies that \(\|_{t}\|_{2}\) and \(_{_{t}}\) approaches a (generalized) one-hot policy as \(t\).

**Lemma 1**.: _Under the same conditions as Theorem 1, and \(r(i) r(j)\) for all \(i j\) (unique action reward), Algorithm 1 assures \(\|_{t}\|_{2}\) and \(_{_{t}}(i) 1\) for an action \(i[K]\) as \(t\)._

**Remark 1**.: _Removing the unique action reward condition in Lemma 1 makes \(_{_{t}}\) approach a generalized one-hot policy (rather than a strict one-hot in Lemma 1) as \(t\) as a result._

According to Lemma 1, \(_{t}\) grows unboundedly. Intuitively, this can be seen in Figure 1(a), where there are no stationary points in a finite region.

**Second**, for any vector \(r^{}\) that preserves the order of \(r\), we establish the following key lemma.

**Lemma 2** (Non-negative covariance of order preservation).: _If \(r^{}^{K}\) preserves the order of \(r^{K}\), i.e., for all \(i,j[K]\), \(r(i)>r(j)\) iff \(r^{}(i)>r^{}(j)\), then for any policy \((K)\),_

\[{r^{}}^{}(()-^{})r=_{ }(r^{},r) 0.\] (11)

Now consider the direction \(w^{d}\) such that \(r^{} Xw\) preserves the order of \(r\). We have,

\[w^{}_{t+1} =w^{}_{t}+ w^{}X^{}(( _{_{t}})-_{_{t}}_{_{t}}^{})r()\), and we show that the assumption \(_{_{t}}(i) 1\) as \(t\) leads to a contradiction.

To that end, first observe that this assumption implies that for all large enough time \(t 1\),

\[[}{\|_{t}\|_{2}}](i)=_{a[K]}[ }{\|_{t}\|_{2}}](a),\] (15)

which means that the sub-optimal action \(i[K]\) always has the largest score (since its probability \(_{_{t}}(i) 1\) is always the largest). Moreover, differences between actions' scores are unbounded, due to \(}(i)}{_{_{t}}(j)}\{[X_{t}](i)-[X _{t}](j)\}\) for all other actions \(j i\).

Consider Example 1 for illustration. The top view of Figure 1(a) is shown in Figure 2(a). Take \(i=2\) and \(r(i)=8\), and assume \(}{\|_{t}\|_{2}}\) stays in the green (sub-optimal) region of Figure 2(a), excluding its boundaries. This green region is partitioned in Figure 2(b), where the dark sub-region contains \(v_{2}^{d}\) such that \([Xv_{2}](a^{*})\) is the second largest component among all \(a 2\), and the light sub-region is the remaining.

The argument is completed by addressing the two cases: **(i)** If \(}{\|_{t}\|_{2}}\) stays in the dark sub-region where \(v_{1}^{d}\) belongs to, then \(_{_{t}}^{}r>r(i)=8\) must occur in finite \(t<\), implying \(_{_{t}}(i) 1\), contradicting the assumption. Intuitively, the contradiction occurs because the dark sub-region is closer to a higher plateau with reward \(9\), and scaling up \(_{t}\)'s magnitude in this sub-region eventually ensures \(_{_{t}}^{}r>r(i)=8\). **(ii)** If \(}{\|_{t}\|_{2}}\) stays in the light sub-region which contains \(v_{2}^{d}\), then \(w^{}_{t}>u^{}_{t}\) must occur in finite time \(t<\), implying that \(}{\|_{t}\|_{2}}\) will enter the dark sub-region, reducing to the first case. This argument depends on Eq. (12) and a key observation showing that \(u^{}_{t+1}<u^{}_{t}\), where \(u\) is a "worse" direction such that \([Xu](a^{-})=_{a[K]}[Xu](a)\) for some \(a^{-}[K]\) with \(r(a^{-})<r(i)\).

To summarize, \(}{\|_{t}\|_{2}}\) cannot always stay in the green sub-optimal region in Figure 2(a), which implies that \(}{\|_{t}\|_{2}}\) must eventually enter the optimal region that contains \(w\) and stay in that region. By Lemma 1 we then obtain \(_{_{t}}(a^{*}) 1\) and \(_{_{t}}^{}r r(a^{*})\) as \(t\) (see appendix).

### Optimal Action Preservation is Necessary and Sufficient for NPG Convergence

Next, we investigate the global convergence conditions for NPG under log-linear policies. Unlike Softmax PG, the key property for determining global convergence of NPG is whether the projection of the rewards \(r\) onto the feature representation \(X\) preserves the top ranking of the optimal action.

Intuition and demonstration.First consider Example 1 where NPG successfully converges to a global maximum. From Algorithm 2, a simple calculation shows,

\[X_{t+1}=X_{t}+ X(X^{}X)^{-1}X^{}r=X_{t}+ (22,-4,-11,8)^{},\] (16)

which implies that the optimal action \(a^{*}=1\) always receives the largest update to its score \([X_{t}](a^{*})\) in each iteration. Next, take a sub-optimal action \(a=2\), as an example, and observe that,

\[}(a^{*})}{_{_{t+1}}(a)}=} (a^{*})}{_{_{t}}(a)}\{((a^{*})-( a))\}=}(a^{*})}{_{_{t}}(a)} \{\}\] (17)

by Eq. (3), where \( X(X^{}X)^{-1}X^{}r\). Using a constant learning rate \(>0\) and applying Eq. (17), we have that \(_{_{t}}(a^{*})\) grows exponentially with \(t\), indicating that \(_{_{t}}(a^{*}) 1\) as \(t\) since the same argument works for any sup-optimal action \(a a^{*}\). Moreover, the rate is \(O(e^{-c t})\), since \((^{*}-_{_{t}})^{}r 2\|r\|_{}(1-_{ _{t}}(a^{*}))\). The \(O(e^{-c t})\) rate matches the results in softmax tabular settings .

Figure 2: Idea illustration.

Second, consider Example 2 where NPG fails to converge to a global maximum. Using similar calculations to Eq. (16) we obtain,

\[X_{t+1}=X_{t}+=X_{t}+( -3,18,-9,-6)^{}\] (18)

which implies that a sub-optimal action \(a=2\) always receives the largest update on its score \([X_{t}](2)\) in each iteration. The failure in Figure 1(b) is then verified by similar arguments around Eq. (17).

Main NPG result.Based on these observations, it is evident that for NPG to converge globally, it is important for the optimal action to eventually always receive the largest update to its score, which makes it critical that the least square projection \(X(X^{}X)^{-1}X^{}r\) preserves the top ranking of the optimal action. We formalize this intuition by establishing the following main result.

**Theorem 2** (Optimal action preservation condition).: _For a constant learning rate \(>0\), a necessary and sufficient condition for Algorithm 2 to achieve global convergence \(_{_{t}}^{}r r(a^{*})\) as \(t\) from any initialization \(_{1}^{d}\) is that \((a^{*})>(a)\) for all \(a a^{*}\), such that \(a^{*}*{arg\,max}_{a[K]}r(a)\), and \( X(X^{}X)^{-1}X^{}r\) is the least squares projection of \(r\) onto the column space of \(X\). If the condition is satisfied, then the rate of convergence is \((^{*}-_{_{t}})^{}r O(e^{-c t})\) for some \(c>0\)._

**Proof idea.** When the optimal action preservation is satisfied, similar arguments to Eqs. (16) and (17) guarantee that \(_{_{t}}(a^{*})\) grows exponentially with \(t\), indicating that \(_{_{t}}(a^{*}) 1\) as \(t\).

The constant \(c>0\) in Theorem 2 depends on the gap of \(\), i.e., \((a^{*})-_{a a^{*}}(a)\), which finds similarities to NPG results in tabular settings . The main difference is that the gap of true reward \(r\) in tabular cases is replaced with the gap of least square projection \(\) in function approximation settings in Theorem 2. This similarity is an evidence for improving the rate to super-linear by using geometrically increasing step sizes, as in tabular settings .

One-sided Approximation Error.For NPG, [4, Lemma 6.2] introduces a "one-sided approximation error" quantity, which aims to overestimate the advantage of the optimal action \(a^{*}\),

\[_{t} r(a^{*})-_{_{t}}^{}r-w^{}(x_{a^{ *}}-X^{}_{_{t}})=r(a^{*})-_{_{t}}^{}r-( (a^{*})-_{_{t}}^{}).\] (19)

This quantity relaxes the notion of approximation error and still guarantees the global convergence of NPG, since if \(_{t=1}_{t} o(T)\), then NPG with \( O(1/)\) achieves global convergence [4, Lemma 6.2]. We note however that Eq. (19) has two limitations: **(i)** Eq. (19) depends on the entire update trajectory \(\{_{t}\}_{t 1}\), which is hard to verify. By contrast, the optimal action preservation condition in Theorem 2 only involves problem quantities \(X\) and \(r\). **(ii)** It is not clear whether Eq. (19) is a necessary condition for global convergence, while optimal action preservation is proved above to be both necessary and sufficient.

## 5 Simulation Study

We conducted additional simulations to check the theoretical results. **First**, we check whether the strict inequality of \((a^{*})>(a)\) for all \(a a^{*}\) in Theorem 2 is required for NPG global convergence.

**Example 4**.: \(K=4\)_, \(d=2\), \(X^{}=0&-1&0&1\\ -1&0&1&0^{d K}\), and \(r=(9,8,7,6)^{}^{K}\). The best fit for \(r\) is \(=X(X^{}X)^{-1}X^{}r=(1,1,-1,-1)^{}\)._

Example 4 has \((a^{*})=(1)=(2)\), which violates the strict inequality condition of \((a^{*})>(a)\) for all \(a a^{*}\). The consequence is that NPG guarantees \(}(a^{*})}{_{_{t}}(2)}=}(a^{ *})}{_{_{t}}(2)}\) for all \(t 1\), which makes it impossible for \(_{_{t}}(a^{*}) 1\) as \(t\). This is observed in Figure 3(a), supporting that the strictly inequality condition in Theorem 2 is indeed necessary. The initialization is \(_{1}=(4,10)^{}\), and \(=0.2\). We run \(150\) iterations for NPG and \(1.5 10^{7}\) iterations for Softmax PG.

**Second**, we run \(150\) iterations of NPG on Example 1. As shown in Figure 3(b), the quantity \(-_{_{t}})^{}r}\) is a linear function of time \(t\), implying that \((^{*}-_{_{t}})^{}r O(e^{-c t})\) with \(c>0\). This supports the convergence rate results in Theorem 2. Here \(_{1}\) and \(\) are the same as in Figure 1(a).

**Third**, we check whether the condition in Theorem 1 is required for Softmax PG global convergence.

**Example 5**.: \(K=6\)_, \(d=2\), \(X^{}=0&-1&-1&0&1&1\\ -1&0&1&1&0&-1\), and \(r=(9,8,7,6,5,4)^{}\)._

Similar to Eq. (9), it is impossible to find any \(w^{d}\), such that \(r^{} Xw\) preserves the order of \(r\) in Example 5. However, as shown in Figure 3(d), Softmax PG achieves \(_{_{t}}^{} r(a^{*})=9\), indicating that the reward order preservation condition in Theorem 1 is sufficient but not necessary for PG to achieve global convergence. The initialization is \(_{1}=(10,-2)^{}\), and \(=0.2\). We run \(100\) iterations for NPG and \(2 10^{6}\) iterations for Softmax PG. Note that NPG behaves erratically on Example 5 (which does not satisfy its global convergence conditions), by first entering then leaving the optimal plateau, eventually approaching a sub-optimal solution.

**Finally**, we run \(10^{8}\) iterations of Softmax PG on Example 1, using the same \(\) and \(_{1}\) as in Figure 1(a). Figure 3(c) shows that the slope of \(-_{_{t}})^{}r}\) over \(\) approaches \(-1\), indicating that the global convergence rate is \((^{*}-_{_{t}})^{}r O(1/t)\), matching the softmax tabular setting results .

## 6 Discussions

**Checking ordering-based conditions.** Checking the existence of \(w^{d}\) in Theorem 1 is known as linear feasibility in literature , i.e., determining whether a set of inequalities has a non-empty intersection. In particular, suppose \(X^{K d}\), and \(r^{K}\) is sorted, i.e., \(r(1) r(2) r(K)\). Denote \(x_{i}^{d}\) as the \(i\)-th row vector of \(X\). The linear feasibility problem in this case is to check if there exists \(w^{d}\), such that for all \(i[K-1]\), \(x_{i}^{}w x_{i+1}^{}w\). Linear feasibility can be cast as linear programming (LP) using a dummy objective and keeping the constraints, hence any LP technique, such as the ellipsoid method, can be used to solve it . On the other hand, checking the optimal action preservation in Theorem 2 requires the same information as in calculating approximation error \(\|-r\|_{2}=_{w^{d}}\|Xw-r \|_{2}\), since \(_{a[K]}(a)=_{a[K]}r(a)\) can be immediately verified after calculating the projection \( X^{}(X^{}X)^{-1}X^{}r\).

**Generalization to Markov decision processes (MDPs).** Our work provides some new and useful insights for understanding more complex settings, but it requires further investigation to resolve this highly non-trivial problem for general MDPs. See Appendix C for detailed discussions.

## 7 Conclusions and Future Work

We believe this work opens new directions for understanding PG-based methods under function approximation, going well beyond the conventional approximation error based analysis. The major technical findings involve ordering-based conditions and relevant techniques (covariance and global convergence). Identifying exact necessary and sufficient conditions for the global convergence of Softmax PG remains future work. Extending the results and techniques to general MDPs is another important and challenging next step. Combining function approximation with recent results on stochastic on-policy sampling  is another interesting direction for agnostic learning. Investigating whether these new global convergence conditions might be used to achieve better representation learning is of great interest for algorithm design. Generalizing the proof techniques to other scenarios where non-linear transforms (activation functions) interact with low-dimensional features through gradient descent, such as in neural networks, is another lofty ambition.

Figure 3: Simulations for verifying theoretical results.