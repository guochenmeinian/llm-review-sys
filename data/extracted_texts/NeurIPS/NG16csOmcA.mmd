# Neural Residual Diffusion Models for Deep

Scalable Vision Generation

 Zhiyuan Ma1, Liangliang Zhao1,2, Biqing Qi3, Bowen Zhou1,3

1Department of Electronic Engineering, Tsinghua University, Beijing, China

2Frontis.AI, Beijing, China

3Shanghai AI Laboratory, Shanghai, China

{mzyth,zhoubowen}@tsinghua.edu.cn

Corresponding Author.

###### Abstract

The most advanced diffusion models have recently adopted increasingly deep stacked networks (e.g., _U-Net_ or _Transformer_) to promote the generative emergence capabilities of vision generation models similar to large language models (LLMs). However, progressively deeper stacked networks will intuitively cause numerical propagation errors and reduce noisy prediction capabilities on generative data, which hinders massively deep scalable training of vision generation models. In this paper, we first uncover the nature that neural networks being able to effectively perform generative denoising lies in the fact that the intrinsic residual unit has consistent dynamic property with the input signal's reverse diffusion process, thus supporting excellent generative abilities. Afterwards, we stand on the shoulders of two common types of deep stacked networks to propose a unified and massively scalable Neural Residual Diffusion Models framework (_Neural-RDM_ for short), which is a simple yet meaningful change to the common architecture of deep generative networks by introducing a series of learnable gated residual parameters that conform to the generative dynamics. Experimental results on various generative tasks show that the proposed neural residual models obtain state-of-the-art scores on image's and video's generative benchmarks. Rigorous theoretical proofs and extensive experiments also demonstrate the advantages of this simple gated residual mechanism consistent with dynamic modeling in improving the fidelity and consistency of generated content and supporting large-scale scalable training.2

## 1 Introduction

Diffusion models (DMs)  have emerged as a class of powerful generative models and have recently exhibited high quality samples in a wide variety of vision generation tasks such as image synthesis , video generation  and 3D rendering and generation . Relying on the advantage of iterative denoising and high-fidelity generation, DMs have gained enormous attention from the community and have been significantly improved in terms of sampling procedure , conditional guidance , likelihood maximization  and generalization ability  in previous efforts.

However, current diffusion models still face a scalability dilemma, which will play an important role in determining whether could support scalable deep generative training on large-scale vision data and give rise to emergent abilities  similar to large language models (LLMs) . Representatively, the recent emergence of Sora  has pushed the intelligent emergence capabilities of generative models to a climax by treating video models as world simulators. While unfortunately,Sora is still a closed-source system and the mechanism for the intelligence emergence is still not very clear, but the scalable architecture must be one of the most critical technologies, according to the latest investigation  on its reverse engineering.

To alleviate this dilemma and spark further research in the open source community beyond the realms of well established U-Net and Transformers, and enable DMs to be trained in new scalable deep generative architectures, we propose a unified and massively scalable _Residual-style Diffusion Models_ framework (_Neural-RDM_ for short) with a learnable gating residual mechanism, as shown in Figure 1. The proposed _Neural-RDM_ framework aims to unify the current mainstream residual-style generative architecture (e.g., _U-Net_ or _Transformer_) and guide the emergence of brand new scalable network architectures with emergent capabilities. To achieve this goal, we first introduce a continuous-time neural ordinary differential equation (ODE) to prove that the generative denoising ability of the diffusion models is closely related to the residual-style network structure, which almost reveals the essential reason why any network rich in residual structure can denoise well: Residual-style neural units implicitly build an ordinary differential equation that can well fit the reverse denoising process through ever-deepening neural units, thus supporting excellent generative abilities. Further, we also show that the gating-residual mechanism plays an important role in adaptively correcting the errors of network propagation and approximating the mean and variance of data, which avoids the adverse factors of network deepening. On this basis, we further present the theoretical advantages of the _Neural-RDM_ in terms of stability and score prediction sensitivity when stacking this residual units to a very long depth by introducing another residual-sensitivity ODE. From a dynamic perspective, it reveals that deep stacked networks have the challenge of gradually losing sensitivity as the network progressively deepens, and our proposed gating weights have advantages in reverse suppression and error control.

Our proposed framework has several theoretical and practical contributions:

**Unified residual denoising framework:** We unify the residual-style diffusion networks (e.g., _U-Net_ and _Transformer_) by introducing a simple gating-residual mechanism and reveal the significance of the residual unit for effective denoising and generation from a brand new dynamics perspective.

**Theoretically deep scalability:** Thanks to the introduction of continuous-time ODE, we demonstrate that the dynamics equation expressed by deep residual networks possesses excellent dynamic consistency to the denoising probability flow ODE (PF-ODE) . Based on this property, we achieve the simplest improvement to each mrs-unit by parameterizing a learnable mean-variance scheduler, which avoids to manually design and theoretically support massively deep scalable training.

**Adaptive stability maintenance and error sensitivity control:** When the mrs-units are infinitely stacked to express the dynamics of an overall network \(_{}\), the main technical difficulty is how to reduce the numerical errors caused by network propagation and ensure the stability of denoising. By introducing a sensitivity-related ODE in Sec. 2.3, we further demonstrate the theoretical advantages of the proposed gated residual networks in enabling stable denoising and effective sensitivity control. Qualitative and quantitative experimental results also consistently show their effectiveness.

## 2 Neural Residual Diffusion Models

We propose _Neural-RDM_, a simple yet meaningful change to the architecture of deep generative networks that facilitates effective denoising, dynamical isometry and enables the stable training of extremely deep networks. This framework is supported by three critical theories: **1) _Gating-Residual_ ODE** (Sec. 2.1), which defines the dynamics of the **min**imum **res**idual **s**tacking **unit** (_mrs-unit_ for short) that serves as the foundational denoising module, as shown in Figure 1 (a). Based on this gating-residual mechanism, we then introduce **2) _Denoising-Dynamics_ ODE** (Sec. 2.2) to further stack the _mrs-units_ to become a continuous-time deep score prediction network \(_{}\). Different from previous human-crafted _mean-variance_ schedulers (e.g., variance explo

Figure 1: _Neural Residual-style Diffusion Models_ framework with massively scalable gating-based **min**imum **res**idual **s**tacking **unit** (_mrs-unit_).

and variance preserving scheduler DDPM ), which may cause concerns about instability in denoising efficiency and quality, we introduce a parametric method to implicitly learn the mean and variance distribution, which lowers the threshold of manual design and enhances the generalization ability of models. Last but not least, to maintain the stability of the deep stacked networks and verify the sensitivity of each residual unit \(_{_{i}}()\) to the network \(_{}\), we stand on the shoulders of the _adjoint sensitivity_ method  to propose _3) Residual-Sensitivity_**ODE** (Sec. 2.3), which means the sensitivity-related dynamics of each latent state \(_{i}\) from \(_{_{i}}()\) to the deep network \(_{}\). Through rigorous derivation, we prove that the parameterized gating weights have a positive inhibitory effect on sensitivity decaying as network deepening. We will elaborate on them below.

### Gating-Residual Mechanism

Let \(_{_{i}}\) represents the minimum residual unit \(_{i}\) (Figure 1 (a)), \(f()\) denotes any feature mapper wrapped by \(_{_{i}}\). Instead of propagating the signal \(\) through each of vanilla neural transformation \(}=f_{}()\) directly, we introduce a gating-based residual connection for the signal \(\), which relys on the two learnable gating weights \(\) and \(\) to modulate the non-trivial transformation \(_{_{i}}(_{i})\) as,

\[}_{i}=_{i}+_{i}_{_{i}}( {z}_{i})+_{i}.\] (1)

For a deep neural network \(_{}()\) with depth \(L\), consider two common residual stacking fashions: Flow-shaped Stacking (**FS**)  and U-shaped Stacking (**US**) . For the flow-based deep stacking networks as shown in Figure 2 (a), each residual unit \(f()\) accepts the output \(_{i}\) of the previous _mrs-unit_ as input, and obtains a new hidden state \(_{i+1}\) through gating-residual connection,

\[}_{i}=_{i+1}=_{i}+[_{i} f_{_{i}}( {z}_{i})+_{i}].\] (2)

Note that Eq. 2 is a refined form of Eq. 1 in the case of flow-shaped stacking. In contrast, for the U-shaped deep stacking networks as in Figure 2 (b), each minimum residual unit contains two symmetrical branches, where the left branch receives the output \(_{i}\) of the previous _mrs-unit_'s left branch as input (called the _read-in_ branch), and the right branch performs the critical nonlinear residual transformation for readout (called the _read-out_ branch), which can be formally described as:

\[}_{i}=^{(l)} f_{_{i}^{(l)}}( {z}_{i})+_{i}^{(l)}}_{}_{i}+_{i}^{(r)} f_{_{i}^{(r)}}(_{2L-2-i})+_ {i}^{(r)}}_{}=_{i}+_{i}_{_{i}}(_{i})+_{i}.\] (3)

Here Eq. 3 is a refined form of Eq. 1 in the case of U-shaped stacking, \(_{i}\) and \(_{i}\) collectively denotes the gating weights from the left and right branches, \(_{_{i}}\) is the \(i\)-th minimum residual unit of the U-shaped networks, and "\(\)" denotes the skip-connection for "\(_{i+1}_{2L-2-i}\)", which is computed recursively via \(_{_{i+1:L-1}}\). To enable the networks to be infinitely stacked, we introduce a continuous-time _Gating-Residual_ ordinary differential equation (ODE) to express the neural dynamics

Figure 2: **Overview. (a)** Flow-shaped residual stacking networks. **(b)** U-shaped residual stacking networks. **(c)** Our proposed unified and massively scalable residual stacking architecture (i.e., _Neural-RDM_) with learnable gating-residual mechanism. **(d)** Residual denoising process via _Neural-RDM_.

of these two types of deep stacking networks (\(=\), \(L\) denotes the number of the _mrs-units_),

\[_{i+}-_{i}}{}=}_{i}-_{i}=_{i}_{_{i}}(_{i})+_{i} _{t}}{dt}=_{}_{_{t}}(_{t})+_{},\] (4)

where \(\) represents the gating weights, which can be independently trained or fine-tuned without considering the parameters \(\) of the feature mapping network \(_{}()\) itself.

### Denoising Dynamics Parameterization

The above-mentioned gating-residual mechanism is utilized to modulate mainstream deep stacking networks and unify them into a residual-style massively scalable generative framework, as shown in Figure 2 (c). Next, we further explore the essential relationship between residual neural networks and score-based generative denoising models from a dynamic perspective.

First, inspired by the theory of continuous-time diffusion models , the forward add-noising process can be expressed as a dynamic process with stochastic differential equation (SDE) as,

\[d_{t}=(_{t},t)dt+(t)d_{t} _{t}}{dt}=(_{t},t)+(t) _{t},_{t}(,),\] (5)

which describes a data perturbation process controlled by a _mean-variance_ scheduler composed of \((_{t},t)\) and \((t)\) respectively, \(_{t}\) denotes the standard Brownian motion. Compared with the forward process, the core of the diffusion model is to utilize a deep neural network (as deep and large as possible) for score-based reverse prediction . A remarkable property of this SDE is the existence of a reverse ODE (also dubbed as the _Probability Flow_ (PF) ODE by ), which retain the same marginal probability densities as the SDE (See Appendix. A.2 for detailed proof) and could effectively guide the dynamics of the reverse denoising, it can be formally described as,

\[_{t}}{dt}=(_{t},t)-(t)^{2} [_{z} p_{t}(_{t})]=}_{t,} _{}(_{t},t)+}_{t,},\] (6)

where \(_{z} p_{t}(_{t})\) denotes the gradient of the log-likelihood of \(p_{t}(_{t})\), which can be estimated by a score matching network \(_{}(_{t},t)\). Here we re-parameterize the PF-ODE by utilizing gated weights to replace the manually designed mean-variance scheduler, in which \(}_{t,}\) and \(}_{t,}\) denotes the time-dependent dynamics parameters, which is respectively parameterized to represent \(-(t)^{2}\) and \((_{t},t)\) by our proposed gating-residual mechanism. Note that \(_{}()\) is a score estimation network composed of infinite _mrs-units_\(_{i}\) (i.e., \(_{_{i}}\)), which enables massively scalable generative training on large-scale vision data, but also presents the challenge of numerical propagation errors.

### Residual Sensitivity Control

To control the numerical errors in back-propagation and achieve steadily and massively scalable training, we stand on the shoulders of the _adjoint sensitivity_ method  to introduce another

Figure 3: Compared with the latest baseline (SDXL-1.0 ), the samples produced by Neural-RDM (trained on JourneyDB ) exhibit exceptional quality, particularly in terms of fidelity and consistency in the details of the subjects in adhering to the provided textual prompts.

_Residual-Sensitivity_ ODE, which is utilized to evaluate the sensitivity of each residual-state \(_{t}\) of the _mrs-unit_\(_{_{i}}\) to the total loss \(\) derived by score estimation network \(_{}()\) (the sensitivity is denoted as \(_{t}=}{d_{t}}\), \(\) denotes an infinitesimal time interval) and can be formally described by the chain rule,

\[_{t}=}{d_{t}}=}{d_{t+ }}_{t+}}{d_{t}}=_{t+} {d_{t+}}{d_{t}}.\] (7)

On the basis of Eq. 7, we next continue to discuss the dynamic equation of sensitivity changing with time \(t\). First, considering the trivial transformation \(f_{}()\) without gating-residual mechanism,

\[d_{t+}=d_{t}+_{t}^{t+}f_{}(_{t},t)dt.\] (8)

We can rewrite Eq. 7 based on Eq. 8 as:

\[_{t}=_{t+}+_{t+}_{t}}(_{t}^{t+}f_{}(_{t},t)dt).\] (9)

The _Residual-Sensitivity_ ODE under vanilla situation then can be derived,

\[_{t}}{dt}=_{ 0^{+}}_{t+}-_{t }}{}=_{ 0^{+}}_{t+}_{t}}(_{t}^{t+}f_{}(_{t})dt)}{ }=-_{t}(_{t},t)}{ {z}_{t}}.\] (10)

According to the derived residual-sensitivity equation in Eq. 10, we further use the Euler solver to obtain the sensitivity \(_{t_{0}}\) of the starting state \(_{t_{0}}\) to network \(_{}()\) as,

\[_{t_{0}}=_{t_{L}}+_{t_{L}}^{t_{0}}_{t}}{dt}dt= _{t_{L}}-_{t_{L}}^{t_{0}}_{t}( _{t},t)}{_{t}}dt.\] (11)

Due to the non-negativity of the integral and the gradient \((_{t},t)}{_{t}}\) not equals to \(0\), we can obtain a gradually decaying sensitivity sequence: \(_{t_{L}}>_{t_{L-1}}>>_{t_{0}}\). Similarly, when defining parameter-sensitivity \(_{}=}{d}\), the same decaying results for \(_{_{0}}\) can be obtained:

\[_{_{0}}=_{_{L}}+_{t_{L}}^{t_{0}}_{ }}{dt}dt=_{_{L}}-_{t_{L}}^{t_{0}}_{} (_{t},t)}{}dt.\] (12)

    &  &  &  &  \\   & & & FID\(\) & sFID\(\) & IS\(\) & FID\(\) & sFID\(\) & IS\(\) \\   & BigGAN-deep  & \(\) & 6.95 & 7.36 & 171.4 & - & - & - \\  & StyleGAN-XL  & \(\) & 2.30 & 4.02 & 265.12 & - & - & - \\   & ADM  & \(\) & 10.94 & 6.02 & 100.98 & - & - & - \\  & ADM-U & \(\) & 7.49 & 5.13 & 127.49 & - & - & - \\  & ADM-G & \(\) & 4.59 & 5.25 & 186.70 & - & - & - \\  & LDM-8  & \(\) & 15.51 & - & 79.03 & 16.64 & 11.32 & 64.50 \\  & LDM-8-G & \(\) & 7.76 & - & 209.52 & 9.35 & 10.02 & 125.73 \\  & LDM-4 & \(\) & 10.56 & - & 103.49 & 12.37 & 11.58 & 94.65 \\  & LDM-4-G & \(\) & 3.60 & - & 247.67 & 3.78 & 5.89 & 182.53 \\   & DiT-XL/2  & \(\) & 9.62 & 6.85 & 121.50 & 8.53 & 5.47 & 144.26 \\  & DiT-XL/2-G & \(\) & 2.27 & 4.60 & 278.24 & 3.53 & 5.48 & 175.63 \\  & Latte-XL  & \(\) & 2.35 & 5.17 & 224.75 & 2.74 & 5.35 & 195.03 \\   & **Neural-RDM-U (Ours)** & \(\) & 3.47 & 5.08 & 256.55 & **2.25** & **4.36** & **235.35** \\  & **Neural-RDM-F (Ours)** & \(\) & **2.12** & **3.75** & **295.32** & 2.46 & 5.65 & 206.32 \\   

Table 1: The main results for image generation on ImageNet  (Class-to-Image) and JourneyDB  (Text-to-Image) with \(256 256\) image resolution. We highlight the best value in \(|\)blue\(\,\), and the second-best value in \(\,\) green\(\,\). The _Scalability_ column indicates the scaling capability of the parameter scale and architecture.

To alleviate this problem, and enable stable training in massively deep scalable architecture, we introduce the following non-trivial solution with gating-residual transformation,

\[d}_{t+}=d}_{t}+_{t}^{t+}_{t, } f_{}(}_{t})+_{t,}dt.\] (13)

Substitute Eq. 13 into Eq. 7 to obtain the corrected sensitivity \(}_{t}=}{d}_{t}}\) as:

\[}_{t}=}_{t+}+}_{t+}}_{t}}(_{t}^{t+}_{t,}  f_{}(}_{t})+_{t,}dt).\] (14)

The non-trivial _Residual-Sensitivity_ ODE can be derived as,

\[}_{t}}{dt}=_{ 0^{+}}}_{t+ }-}_{t}}{}=-(_{t,}}_{t}) (}_{t},t)}{}_{t}}-( _{t,}}_{t}).\] (15)

Through the Euler solver, we can also obtain the sensitivity \(}_{t_{0}}\) of the starting state adjusted by the gating-residual weights,

\[}_{t_{0}}=}_{t_{L}}+_{t_{L}}^{t_{0}}}_{t}}{dt}dt=}_{t_{L}}-_{t_{L}}^{t_{0}}(_{t, }}_{t})(}_{t},t)}{ }_{t}}+(_{t,}}_{t})dt.\] (16)

Where \(_{t,}\) and \(_{t,}\) adaptively modulate and update the sensitivity of each _mrs-unit_ to the final loss, which supports being trained through minimizing \(_{s}=||_{}(_{t},t)-_{z} p_{t}(_{t})||_{2}^{2}+_{L}||_{t,}(}_{t},t)}{}_{t}}-_{t,}||_{2}^ {2}\) in full-parameter training or model fine-tuning fashions.

## 3 Experiments

We present the main experimental settings in Sec. 3.1. To evaluate the generative performance of Neural-RDM, we compare it with state-of-the-art conditional/unconditional diffusion models for image synthesis and video generation in Sec. 3.2 and Sec. 3.3 respectively. We also visualize and analyze the effects of the proposed gated residuals and illustrate their advantages in enabling deep scalable training, which are presented in Sec. 3.4 and Sec. 3.5.

### Experimental Settings

**Datasets.** For image synthesis tasks, we train and evaluate the **Class-to-Image** generation models on the ImageNet  dataset and train and evaluate the **Text-to-Image** generation models on the

Figure 4: Compared with the latest baseline (Latte-XL ), the sample videos from SkyTime-lapse , Taichi-HD and UCF101  all exhibit better frame quality, temporal consistency and coherence.

MSCOCO  and JourneyDB  datasets. All images are resized to \(256 256\) resolution for training. For video generation tasks, we follow the previous works  to train **None-to-Video** (_i.e.,_ unconditional video generation) models on the SkyTimelapse  and Taichi  datasets, and train **Class-to-Video** models on the UCF-101  dataset. Moreover, we follow previous works  to sample \(16\)-frame video clips from these video datasets and then resize all frames to the second-best value in green.

**Implementation details.** We implement our Neural-RDMs into Neural-RDM-U (U-shaped) and Neural-RDM-F (Flow-shaped) two versions on top of the current state-of-the-art diffusion models LDM  and Lette  for image generation, and further employ the Neural-RDM-F version for video generation. Specifically, we first load the corresponding pre-trained models and initialize gating parameters \(\{=1,=0\}\) of each layer, then perform full-parameter fine-tuning to implicitly learn the distribution of the data for acting as a parameterized mean-variance scheduler. During the training process, we adopt an explicit supervision strategy to enhance the sensitivity correction capabilities of \(\) and \(\) for deep scalable training, where the explicitly supervised hyper-parameter \(\) is set to 0.35. Eventually, we utilize the AdamW optimizer with a constant learning rate of \(5 10^{4}\) for all models and exploit an exponential moving average (EMA) strategy to obtain and report all results.

**Evaluation metrics.** Following the previous baselines , we adopt Frechet Inception Distance (FID) , sFID  and Inception Score (IS)  to evaluate the image generation quality and the video frame quality (except for sFID). Furthermore, we utilize a Frechet Video Distance (FVD)  metric similar with FID to evaluate the unconditional and conditional video generation quality. Among these metrics, FVD is closer to human subjective judgment and thus better reflects the visual quality of the generated video content. Adhering to the evaluation guidelines proposed by StyleGAN-V , we calculate the FVD scores by analyzing 2048 generated video clips with each clip consists of 16 frames.

**Baselines.** We compare the proposed method with the recent state-of-the-art baselines, and categorize them into three groups: 1) **GAN-based.** BigGAN-deep  and StyleGAN-XL  for image task, MoCoGAN , MoCoGAN-HD , DIGAN , StyleGAN-V  and MoStGAN-V  for video task. 2) **U-shaped.** ADM  and LDM  for image task, PVDM  and LVDM  for video task. 3) **F-shaped.** DiT-XL/2  and Lette-XL  for image task, VideoGPT  and Lette-XL  (with temporal attention learning) for video task.

### Experiments on Image Synthesis with Deep Scalable Spatial Learning

For a more objective comparison, we maintain approximately the same model size to perform class-conditional and text-conditional image generation experiments, which are shown in Table 1. From Table 1, it can be observed that our Neural-RDMs have obtained state-of-the-art results. Specifically,

    &  &  &  &  \\   & & FID\(\) & IS\(\) &  SkyTimelapse \\ (FVD\(\)) \\  &  Taichi-HD \\ (FVD\(\)) \\  & 
 UCF-101 \\ (FVD\(\)) \\  \\  MoCoGAN  & ✗ & 23.97 & 10.09 & 206.6 & - & 2886.9 \\ MoCoGAN-HD  & ✗ & 7.12 & 23.39 & 164.1 & 128.1 & 1729.6 \\ DIGAN  & ✗ & 19.10 & 23.16 & 83.11 & 156.7 & 1630.2 \\ StyleGAN-V  & ✗ & 9.45 & 23.94 & 79.52 & - & 1431.0 \\ MoStGAN-V  & ✗ & - & - & 65.30 & - & 1380.3 \\  PVDM  & ✗ & 29.76 & 60.55 & 75.48 & 540.2 & 1141.9 \\ LVDM  & ✗ & - & - & 95.20 & 99.0 & **372.0** \\  VideoGPT  & ✗ & 22.70 & 12.61 & 222.7 & - & 2880.6 \\ Lette-XL  & ✗ & 5.02 & 68.53 & 59.82 & 159.60 & 477.97 \\ 
**Neural-RDM (Ours)** & ✗ & 3.35 & 85.97 & **39.89** & **91.22** & **461.03** \\   

Table 2: The main results for video generation on the SkyTimelapse , Taichi-HD  and UCF-101  with \(256 256\) resolution of each frame. We highlight the best value in blue, and the second-best value in green.

the flow-based version (i.e., Neural-RDM-F) consistently outperforms all class-to-image baselines in all three image's generative benchmarks and meanwhile obtains relatively suboptimal results on another text-to-image evaluations. It is worth noting that another Neural-RDM-U version have made up for this shortcoming and achieved optimal results, which may benefit from the more powerful semantic guidance abilities of the cross-attention layer built into U-Net. To more clearly present the actual effects of the gated residuals, we further perform qualitative comparative experiments, which are shown in Figure 3. Compared with the latest baseline (SDXL-1.0 ), we can observe that the samples produced by Neural-RDM exhibit exceptional quality, particularly in terms of fidelity and consistency in the details of the subjects in adhering to the provided textual prompts, which consistently demonstrates the effectiveness of our proposed approach in deep scalable spatial learning.

### Experiments on Video Generation with Deep Scalable Temporal Learning

To further explore the effectiveness and specific contributions of proposed gating-residual mechanism in temporal learning, we continue to perform the video generation evaluations, which are shown in Table 2. From Table 2, we find that our model (flow-shaped version) basically achieves the best results (except for the second-best results in **class-to-video** evaluation). Specifically, compare with Latte-XL , Neural-RDM respectively achieves an improvement of \(33.3\%\) and \(42.8\%\) in FVD scores on Sky-Timelapse and Taichi-HD datasets, which hints the powerful potential of flow-based deep residual networks in promoting generative emergent capabilities of video models. Furthermore, we exhibit a number of visual comparison results of the 16-frames video produced by Neural-RDM and baseline (Latte-XL ), as shown in Figure 4. We can observe that some generated frames from the baseline partially exhibits poor quality and temporal inconsistency. Compare with the baseline, Neural-RDM maintains temporal coherence and consistency, resulting in smoother and more dynamic video frames, which further reflects the effectiveness of proposed method in both quantitative and qualitative evaluations.

### The Analyses of Gating Residual Sensitivity

To better illustrate the advantage of the gated residuals and understand the positive suppression effect for sensitivity attenuation as network deepening, we visualize the normalized sensitivity at different depths of our Neural-RDM during the training process, as shown in Figure 5. From Figure 5, we can observe that \(\) and \(\) can adaptively modulate the sensitivity of each _mrs-unit_ to correct the denoising process as network deepening, which is consistent with Eq. 16. Moreover, we can also observe that at the beginning of training, the sensitivity scores are relatively low. As training advances, \(\) and \(\) are supervised to correct the sensitivity until obtaining relatively higher sensitivity scores.

Figure 5: The sensitivity of \(\) and \(\) at different depths of the residual denoising network during the training process.

Figure 6: **(a), (b), and (c) respectively illustrate the performance of the five residual structures variant models across the SkyTimelapse , Taichi-HD, and UCF-101 .**

### Comparison Experiments of Gating Residual Variants and Deep Scalability

To explore the actual effects of different residual settings in deep training, we first perform the comparison experiments on 5 different residual variants: _1) Variant-0 (Ours)_: \(z_{i+1}=z_{i}+ f(z_{i})+\); _2) Variant-1 (AdaLN )_: \(z_{i+1}=z_{i}+f( z_{i}+)\); _3) Variant-2_: \(z_{i+1}= z_{i}+f(z_{i})+\); _4) Variant-3 (ResNet _: \(z_{i+1}=z_{i}+f(z_{i})\); _5) Variant-4 (ReZero )_: \(z_{i+1}=z_{i}+ f(z_{i})\). We utilize Lattre-XL as backbone to train each variant from scratch and then evaluate their performance for video generation. As depicted in Figure 6, as the number of training steps increases, almost all variants can converge effectively, but only _Variant-0_ (Our approach) achieves the best FVD scores. We speculate that it may be because this post-processing gating-residual setting maintains excellent dynamic consistency with the reverse denoising process, thus achieving better performance.

Moreover, we further perform the deepepl scalability experiments, which are shown in Figure 7. We can observe that as the depth of residual units increases, the performance of the model can be further improved, which illustrates the positive correlation between model performance and the depth of residual units and further highlights the deep scalability advantage of our Neural-RDM.

## 4 Related Work

Deep Residual Networks.Most common deep residual networks can be divided into two types of architectures: flow-shaped stacking (FS) and u-shaped stacking (US) architectures. As a milestone of flow-based deep residual networks, ResNet  has led the research of visual understanding tasks . In fact, the pratices [81; 82] and theories [83; 84; 85] that introducing the highway connections [86; 87] have been studied for a long time and have demonstrated excellent advantages in dealing with vanishing/exploding gradients and numerical propagation errors in deep stacked networks. Different from ResNet, U-Net  is a leader of u-shaped networks and almost dominated diffusion-based generative models [2; 30]. Though achieving remarkable success, both types of CNN-based models still face concerns about training efficiency. Recent years, Transformer  and ViT  have emerged as new state-of-the-art backbones in computer vision and multimodal [88; 89; 90; 91] and have also gained prominence in various diffusion models. Among them, DiT  and U-ViT  are two representative works by respectively adopting flow-shaped and u-shaped residual stacking fashions, which have enabled many studies on deep generative models [60; 92; 93; 94; 95]. In this work, we unify the above two types of residual stacking architectures from a dynamic perspective and propose a unified and deep scalable neural residual framework with a same gating-residual ODE.

Diffusion Models.Recent years has witnessed the remarkable success of diffusion models [2; 3; 4], due to their impressive generative capabilities. Previous efforts mainly focus on sampling procedure [25; 26; 27; 28], conditional guidance [31; 32; 96; 97; 98], likelihood maximization [33; 34; 35; 36] and generalization ability [37; 99; 39; 10] and have gained enormous attention. Recently, a major research topic on diffusion models is scalability. DiT  is one of the most representative models by exploiting a scalable Transformer to train latent diffusion models for image generation. Lattre  stands on the shoulders of DiT to further perform temporal learning for video generation. However, both Lattre and DiT adopt the residual structure of Transformer by default and utilize S-AdaLN to incorporate guidance information, they generally lack: 1) attention to the residual structure and 2) study the dynamic nature of the deep generative models, and 3) ignore the error propagation issues from deeper networks and therefore are still limited by the bottleneck of massively scalable training.

Overall, we practically unify u-shaped and flow-shaped stacking networks and to propose a unified and deep scalable neural residual diffusion model framework. Moreover, we theoretically parameterize the previous human-designed mean-variance scheduler and demonstrate excellent dynamics consistency.

Figure 7: The performance of Neural-RDM with different network depths on the UCF-101 dataset .

Conclusion

In this paper, we have presented Neural-RDM, a simple yet meaningful change to the architecture of deep generative networks that facilitates effective denoising, dynamical isometry and enables the stable training of extremely deep networks. Further, we have explored the nature of two common types of neural networks that enable effective denoising estimation. On this basis, we introduce a parametric method to replace previous human-designed mean-variance schedulers into a series of learnable gating-residual weights. Experimental results on various generative tasks show that Neural-RDM obtains the best results, and extensive experiments also demonstrate the advantages in improving the fidelity, consistency of generated content and supporting large-scale scalable training.