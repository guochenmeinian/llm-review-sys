# Stochastic Optimization Algorithms for Instrumental Variable Regression with Streaming Data

Xuxing Chen

Department of Mathematics

University of California, Davis

xuxchen@ucdavis.edu

&Abhishek Roy

Halcioglu Data Science Institute

University of California, San Diego

a2roy@ucsd.edu

&Yifan Hu
Traditionally, IVaR algorithms are based on two-stage estimation procedures, where we first regress \(Z\) and \(X\) to obtain an estimator \(\), and then regress \(\) and \(Y\), with the essence that \(\) is independent of \(Y\), and thus eliminating the aforementioned endogeneity of the unknown confounder. A vast literature has devoted to understanding the two-stage approaches , with the parametric two-stage least-squares (2SLS) procedure being the most canonical one . The main drawback of this approach is that the second-stage regression problem is affected by the estimation error from the regression problem corresponding to first stage. In fact,  call the first stage regression as "forbidden regression", due to the concerns in estimating a nuisance parameter.

Considering the squared loss function,  formulate the IVaR problem as a conditional stochastic optimization problem :

\[_{g}F(g):=_{Z}_{Y|Z}[(Y-_{X|Z} [g(X)])^{2}].\] (2)

However,  did not solve problem (2) efficiently, and resort to reformulating (2) further as a minimax optimization problem. Indeed, they mention explicitly in their work that "_it remains cumbersome to solve_ (2) _directly because of the inner expectation_". Then, they leverage the Fenchel conjugate of the squared loss, leading to a minimax optimization with maximization over a continuous functional space. Following ,  propose to use reproducing kernel Hilbert space (RKHS) to handle the maximization over continuous functional space. See also  for similar minimax approaches. The issue with such an approach is that approximating the dual variable via maximization over continuous functional space inevitably introduces approximation error. Hence, although there is no explicit nuisance parameter estimation step like in the two-stage approach, there is an implicit one, which makes the minimax approach less appealing as an alternate to the two-stage procedures.

In this work, contrary to the claim made in  that problem (2) is cumbersome to solve, we design and analyze efficient streaming algorithms to directly solve the conditional stochastic optimization problem in (2). Direct application of methods from  for solving (2) is possible, yet their approach utilizes nested sampling, i.e., for each sample of \(Z\),  generate a batch of samples of \(X\) from \((X|Z)\), to reduce the bias in estimating the composition of non-linear loss function with conditional expectations. Thus their methods are not suitable for the streaming setting that we are interested in. Considering (2), we first parameterize the function class \(:=\{g(;X)^{d_{}}\}\). Now, defining \(F(g) F()\), we observe that the gradient \( F()\) admits the following form

\[ F()=_{Z}[(_{X|Z}[g(;X)]-_{Y| Z}[Y])_{}_{X|Z}[g(;X)]],\] (3)

which implies that one does not need the nested sampling technique to reduce the bias. However, the presence of product of two conditional expectations \(_{X|Z}[g(;X)]\) still causes significant challenges in developing stochastic estimators of the above gradient in the streaming setting. In this work, we overcome this challenge and develop two algorithms that are applicable to the streaming data setting avoiding the need for generating batches of samples of \(X\) from \((Z|X)\).

**Contributions.** We make the following contributions in this work.

* **Two-sample oracles:** Our first algorithm leverages the observation that if we have access to a two-sample oracle that outputs _two_ samples \(X\) and \(X^{}\) that are independent conditioned on the instrument \(Z\), we can immediately construct an unbiased stochastic gradient estimator of the gradient in (3). Based on this crucial observation, we propose the _Two-Sample One-stage Stochastic Gradient IVaR_ (TOSG-IVaR) method (Algorithm 1) that avoids explicitly having to estimate or model the relationship between \(Z\) and \(X\) thereby overcoming the "forbidden regression" problem.. Under standard statistical model assumptions, for the case when \(g\) is a linear model, we establish rates of convergence of order \(( T/T)\) for the proposed method, where \(T\) is the overall number of iterations; see Theorem 1.
* **One-sample oracles:** In the case when we do not have the aforementioned two-sample oracle, we estimate the stochastic gradient in (3) by using the streaming data to estimate one of the conditional expectations, and the corresponding prediction to estimate the other, resulting in the _One-Sample Two-stage Stochastic Gradient IVaR_ (OTSG-IVaR) method (Algorithm 2). Assuming further that the \(X\) depends linearly on the instrument \(Z\), we establish a rate of convergence of order \((1/T^{1-})\), for any \(>0\); see Theorem 2.

### Literature Review

**IVaR analysis.** Instrumental variable analysis has a long history, starting from the early works by  and . Several works considered the aforementioned two-stage procedure for IVaR; a summary could be found in the work by . Nonparametric approaches based on wavelets, splines, reproducing kernels and deep neural networks could be found, for example, in the works by . Another popular approach for IVaR is via Generalized Method of Moments (GMM); see, for example,  for an overview. Such approaches essentially reformulate the problem as a minimax problem and hence suffer from the aforementioned "forbidden regression" problem.

**Identifiability conditions for IVaR.** Several works in the literature have also focused on establishing the identifiability conditions for IVaR in the parametric and the nonparametric setting. Regardless of the procedure used, they are invariably based on certain source conditions motivated by the inverse problems literature (see, for example, ) or the related problem of completeness conditions, which posits that the conditional expectation operator is one-to-one . Semi-parametric identifiability is also considered recently in the work of . Our focus in this work is not focused on the identifiability; for the formulation (2) that we consider,  provide necessary conditions for identifiability that we adopt.

**Stochastic optimization with nested expectations.** Recently, much attention in the stochastic optimization literature has focused on optimizing a nested composition of \(T\) expectation functions. Sample average approximation algorithms in this context are considered in the works of  and . Optimal iterative stochastic optimization algorithms for the case of \(T=2\) were by derived by . For the general \(T 1\) case,  provided sub-optimal rates, whereas  derived optimal rates; see also  and  for related works under stronger assumptions, and  for similar asymptotic results. While the above works required certain independence assumptions regarding the randomness across the different compositions,  studied the case of \(T=2\) where the the randomness are generically dependent. They termed this problem setting as conditional stochastic optimization, which is the framework that the IVaR problem in (2) falls in. Compared to prior works, for e.g.,  and , in order to handle the dependency between the levels,  require mini-batches in each iteration, making their algorithm not immediately applicable to the purely streaming setting. In this work, we show that despite the problem (2) being a conditional stochastic optimization problem, mini-batches are not required due the additional favorable quadratic structure available in IVaR.

**Streaming IVaR.** analyzed streaming versions of 2SLS in the online1 and adversarial settings. Focusing on linear models,  provide preliminary asymptotic analysis assuming access to efficient _no-regret learners_, while  provide regret bounds under the strong assumption that the instrument is almost surely bounded. Furthermore, our algorithms have significantly improved per-iteration and memory complexity compared to ; see Sections A and B for details.  developed stochastic optimization algorithms for the GMM formulation and provide asymptotic analysis. Their algorithm requires access to an offline dataset for initialization and is hence not fully online. The above works (i) do not focus on avoiding the forbidden regression problem and (ii) do not view IVaR via the _conditional stochastic optimization_ lens, like we do.

## 2 Two-sample One-stage Stochastic Gradient Method for IVaR

Recall that our goal is to solve the objective function given in (2). By [12, Theorem 4], the optimal solution of (2) gives the true underlying causal relationship under the following assumption.

**Assumption 2.1**.: _(Identifiability Assumption)_

* _The conditional distribution_ \(_{Z|X}\) _is continuous in_ \(Z\) _for any value of_ \(X\)* _The function class_ \(:=\{g(;X)^{d_{}}\}\) _is correctly specified, i.e., it includes the true underlying relationship between_ \(X\) _and_ \(Y\)_._

Notice that both assumptions are standard in the IVaR literature , and makes the objective in (2) is the meaningful for IVaR. However,  resort to reformulating the objective function in (2) as a minimax optimization problem as described in Section 1. While their original motivation was to avoid two-state estimation procedure and avoid the "forbidden regression", their minimax reformulation ends up having to solve a complicated approximation of the original objective resulting in having to characterize the approximation error which is non-trivial.

**Algorithm and Analysis.** Our aim in this work is to directly solve the original problem in (2), leveraging the structure provided by the quadratic loss. Given the gradient formulation in (3), a natural way to build unbiased gradient estimator is to generate \(X\) and \(X^{}\), two independent samples of \(X\) from the conditional distributions \(_{X|Z}\), for a given realization of \(Z\) and generate one sample of \(Y\) from the conditional distribution \(_{Y|X}\). Then, an unbiased gradient estimator is

\[v()=(g(;X)-Y)_{}g(;X^{}).\] (4)

This could be plugged into the standard stochastic gradient descent algorithm, which give us the Two-sample Stochastic Gradient Method for IVR (TSG-IVaR) method illustrated in Algorithm 1. In particular, the algorithm never requires estimating (or modeling) the relationship between \(X\) and \(Z\) as needed in the two-stage procedure  and the minimax formulation based procedures . Furthermore, this viewpoint not only provides a novel algorithm for performing IV regression, but also provides a novel data collection mechanism for the practical implementation of IVaR. In addition, such a two-sample gradient method is not very restrictive when the instrumental variable \(Z\) takes value in a discrete set. In this case, to implement the two-sample oracle, it is enough simply pick two sets of samples \((X,Y,Z)\) and \((X^{},Y^{},Z)\) for which \(Z\) has repeated observations (which is possible when \(Z\) is a discrete random variable) from a pre-collected dataset.

**Assumption 2.2**.: _The tuple \((Z_{t},X_{t},X^{}_{t},Y_{t})\) is independent and identically distributed, across \(t\)._

To demonstrate the convergence rate of Algorithm 1, we first consider the case when \(g\) is a linear function, i.e., \(g(;X)=X^{}\). We make the following assumptions.

**Assumption 2.3**.: _Suppose there exists \(>0\) such that \(_{Z}_{X|Z}[X]_{X|Z}[X]^{}  I\)._

**Assumption 2.4**.: _Let \((_{1},_{2},_{3},_{4})_{+}^{4}\). For any \(Z\), \(X^{}\) and \(X\) i.i.d. generated from \(_{Z|X}\), and \(Y\) generated from \(_{Y|X}\). There exists constants \(C_{x},C_{y},C_{xx},C_{yx}>0\) such that_

\[\|X^{}X^{}-_{X|Z}[X]_{X|Z}[X]^{}\|^{2} C_{x}d_{x}^{_{1}},\] (5) \[\|YX^{}-_{Y|Z}[Y]_{X| Z}[X]\|^{2} C_{y}d_{x}^{_{2}},\] (6) \[\|_{X|Z}[X]_{X|Z}[X]^{ }-_{Z}_{X|Z}[X]_{X|Z}[X]^{ }\|^{2} C_{xx}d_{z}^{_{3}},\] (7) \[\|_{Y|Z}[Y]_{X|Z}[X]- _{Z}_{Y|Z}[Y]_{X|Z}[X]\|^{2}  C_{yx}d_{z}^{_{4}},\] (8)

_where \(\|\|\) denotes the Euclidean norm and operator norm for a vector and matrix respectively._The above assumptions are mild moment assumptions required on the involved random variables. The following result demonstrates that Assumptions 2.3 and 2.4 are naturally satisfied even under non-linear modeling assumption on (1). We defer its proof to Section D.3.

**Lemma 1**.: _Suppose there exist \(_{*}^{d_{x}},\ _{*}^{d_{x} d_{x}}\), a non-linear map \(:^{d_{x}}^{d_{x}}\), and a positive semi-definite matrix \(^{d_{z} d_{z}}\) such that_

\[_{Z}(_{*}^{}Z)(_{*} ^{}Z)^{} I,\ [\|(_{*}^{}Z)\|^{2}]= (d_{x}),\] \[Z(0,),\ X=(_{*}^{}Z)+ _{2},\ Y=_{*}^{}X+_{1},\ _{2}(0,_{ _{2}}^{2}I_{d_{x}}),\ _{1}(0,_{_{1}}^{2}),\] (9)

_where \(_{1},_{2}\) are independent of \(Z\) and_

\[[_{1}^{2}\|_{2}\|^{2}] _{_{1},_{2}}^{2}d_{x},\ [\|(_{*}^{}Z)(_{*}^{}Z)^{ }-[(_{*}^{}Z)(_{*}^{}Z)^{}]\|^{ 2}] Cd_{z}.\] (10)

_Then Assumptions 2.3 and 2.4 hold with \(_{1}=_{2}=2\) and \(_{3}=_{4}=1\). If \(\) is an identity map, then the conditions involving \(\) become \(_{*}^{}_{*} I,\ (_{*}^{} _{*})=(d_{x}),\ [\|ZZ^{}-\|^{2}] Cd_{z}\)._

The above assumption is standard in the stochastic approximation, statistics and econometrics literature. It could be further relaxed to Markovian-type dependency assumptions, following techniques in the works of ; we leave a detailed examination of the Markovian streaming setup as future work. Under the above assumptions, we have the following result demonstrating the last-iterate global convergence of Algorithm 1.

**Theorem 1**.: _Suppose Assumptions 2.3, 2.4, and 2.2 hold. In Algorithm 1, defining \(_{1}^{2} 2C_{x}d_{x}^{_{1}}+2C_{xx}d_{z}^{_{3}}\) and \(_{2}^{2} C_{y}d_{x}^{_{2}}+C_{yx}d_{z}^{_{4}}\), set \(_{t}=+3_{1}^{2}}\). Then, we have_

\[\|_{T}-_{*}\|^{2}\|_{0}-_{*}\|^{2}}{T}+\|^{2}(_{1}^{2}+_{2}^{2}) T}{^{2}T}.\]

**Proof techniques.** In the analysis of Theorem 1, the following decomposition (see (18) for the derivation) plays a crucial role:

\[_{t+1}-_{*}=A_{t}+_{t+1}B_{t},\] \[A_{t}=_{t}-_{t+1}_{Z}_{X |Z}[X]_{X|Z}[X]^{}_{t}+_{t+1}_{Z}_{Y|Z}[Y]_{X|Z}[X]-_{*},\] \[B_{t}=-X_{t}^{}X_{t}^{}-_{Z} _{X|Z}[X]_{X|Z}[X]^{}_{t}+ Y_{t}X_{t}^{}-_{Z}_{Y|Z}[Y] _{X|Z}[X],\]

where \(A_{t}\) corresponds to deterministic component, and \(B_{t}\) corresponds to the stochastic component arising due to the use of stochastic gradients. Standard assumptions on the variance of the stochastic gradient made in the stochastic optimization literature include the uniformly bounded variance assumption  and the expected smoothness condition . In the IVaR setup, such standard assumptions do not hold as \(_{t}\) potentially can be unbounded and thus the gradient estimator can be unbounded. Hence, we establish our results under natural statistical assumptions arising in the context of the IVaR problem, which form the main novelty in our analysis. Furthermore, compared to , notice that we use two samples of \(X\) from the conditional distribution \(_{X|Z}\) and achieve an \(}(1/T)\) last iterate convergence rate to the global optimal solution, which is the true underlying causal relationship under Assumption 2.1. In comparison,  only provide asymptotic convergence result to the optimal solution of an approximation problem.

**Additional discussion.** It is interesting to explore other losses beyond squared loss (for example to handle classification setting ), potentially using the Multilevel Monte Carlo (MLMC) based stochastic gradient estimators. While , develops such algorithms, the main challenge is about how to avoid mini-batches required in their work leveraging the problem structure in instrumental variable analysis. Furthermore, in the case when \(g(;X)\) is parametrized by a non-linear models, for instance, a neural network, we provide local convergence guarantees under additional stronger conditions made typically in the stochastic optimization literature.

**Assumption 2.5**.: _Let the following assumptions hold:_

* _Function_ \(F()\) _is_ \(\)_-smooth._* _The iterates_ \(\{_{t}\}_{t=1}^{T+1}\) _generated by Algorithm_ 1 _are in a compact set_ \(A\)_._
* _The random objects_ \(X|Z\) _and_ \(Y|Z\) _have bounded variance for any_ \(Z\)_, i.e., there exist_ \(>0\) _such that_ \[[\|X-[X Z]\|^{2} Z ]^{2},\;[\|Y-[Y Z ]\|^{2} Z]^{2}.\]

**Proposition 1**.: _Suppose Assumptions 2.1, 2.2, and 2.5 hold. Choosing \(_{t}=(})\), for Algorithm 1 we have_

\[_{1 t T}[\| F(_{t})\|^{2} ]=(}).\]

The proof of the proposition is immediate. Note that under Assumption 2.5, we can deduce that the unbiased gradient estimator \(v()=(g(;X)-Y)_{}g(;X^{})\) has a bounded variance since

\[(v())= (g(;X)-Y)(_{}g(;X^{ }))\] \[+(g(;X)-Y)([_{}g (;X^{})])^{2}+(_{}g(;X^{ }))([g(;X)-Y])^{2}_{v}^{2},\]

where the variance and expectation are taken conditioning on \(Z\) and \(\), and \(_{v}>0\) is a constant that only depends on \(\), function \(g\) and the compact set \(A\) in Assumption 2.5. Then one can directly follow the analysis of non-convex stochastic optimization (see, for example, [13, Theorem 2.1]) to obtain Proposition 1. Relaxing the Assumption 2.5 (typically made in the stochastic optimization literature) with more natural assumptions on the statistical model and obtaining a result as in Theorem 1 for the non-convex setting is left as future work.

## 3 One-sample Two-stage Stochastic Gradient Method for IVaR

We now examine designing streaming IVaR algorithm with access to the classical one-sample oracle, i.e., we observe a streaming set of samples \((X_{t},Y_{t},Z_{t})\) at each time point \(t\). Note that in this case, using the same \(X_{t}\) (instead of \(X_{t}^{}\)) in (4) makes the stochastic gradient estimator biased.

**Intuition.** Consider the case of linear models, i.e., \(Y=_{*}^{}X+_{1}\) with \(X=_{*}^{}Z+_{2},\) where \(_{*}^{d_{x} 1}\), and \(_{*}^{d_{x} d_{x}}\), as also considered in Lemma 1. Recall the true gradient in (3) and the stochastic gradient estimator of Algorithm 1 in (4). Since we no longer have \(X_{t}^{}\), we replace the term \(X_{t}^{}\) with the predicted mean of \(X_{t}\) given \(Z_{t}\). Suppose that \(_{*}\) is known. We specifically replace \(_{_{t}}g(_{t};X_{t}^{})=X_{t}^{}\) by \(_{|Z_{t}}[X_{t}]=_{*}^{}Z_{t}\). In such a case, indeed we have an unbiased gradient estimator:

\[_{t}[_{*}^{}Z_{t}(X_{t}^{}_{t }-Y_{t})]=_{t}[_{|Z_{t}}[X_{t}] (_{|Z_{t}}[X_{t}]^{}_{t}-_{|Z_{t }}[Y_{t}])]\] \[= _{t}[_{*}^{}Z_{t}Z_{t}^{}_{*}( _{t}-_{*})]=_{*}^{}_{Z}_{*}(_{t}- _{*})=_{}F(_{t}),\]

where \(_{t}[]\) is the conditional expectation w.r.t the filtration defined on \(\{_{1},_{1},_{2},_{2},,_{t},_{t}\}\).

In reality, \(_{*}\) is unknown beforehand. Hence, we estimate \(_{*}\) using some online procedure and replace \(_{_{t}}g(_{t};X_{t}^{})\) by \({_{t}}^{}Z_{t}\) instead of \(_{*}^{}Z_{t}\). It leads to the following updates:

\[_{t+1}=_{t}-_{t+1}_{t}^{}Z_{t}(X_{t}^{}_ {t}-Y_{t}),_{t+1}=_{t}-_{t+1}Z_{t}(Z_{t}^{}_{t }-X_{t}^{}).\] (11)

A closer inspection reveals that the updates in (11) can diverge until \(_{t}\) is close enough to \(_{*}\). It is easy to see this fact from the following expansion of \(_{t+1}-_{*}\). We have

\[_{t+1}-_{*}= _{t}(_{t}-_{*})+_{t+1}(_{t}- _{*})^{}_{ZY}+_{t+1}D_{t}_{*}+_{t+1}{_{ t}}^{}_{Z_{t}}_{*}(_{t}-_{*})\] \[+_{t+1}{_{t}}^{}_{Z_{t}}_{*}_{*}+ _{t+1}{_{t}}^{}_{Z_{t}Y_{t}}-_{t+1}{_{t}}^{}Z _{t}_{2,t}{}^{}_{t},\] (12)

where

\[_{Z_{t}}=_{Z}-Z_{t}Z_{t}^{},_{Z_{t}Y_{t}}=_{ZY}-Z_{t }Y_{t},_{t}(I-_{t+1}{_{t}}^{} _{Z}_{*}).\]

However, the matrix \({_{t}}^{}_{Z}_{*}\) may not be positive semi-definite, even if \(_{Z}\) is positive definite. Thus the negative eigenvalues associated with \({_{t}}^{}_{Z}_{*}\) might cause the \(_{t}\) iterates to first diverge, before eventually converging as \(_{t}\) gets closer to \(_{*}\). We illustrate this intuition in a simple experiment in Figure 1. To resolve this issue, we propose Algorithm 2, where we replace \(g(_{t},X_{t})=X_{t}^{}_{t}\) with \(Z_{t}^{T}_{t}_{t}\) in (11). With such a modification, in the corresponding decomposition for \(_{t+1}-_{*}\) (see (40)), we have \(_{t}=I-_{t+1}_{t}_{Z}_{t}\), where the matrix product \(_{t}_{Z}_{t}\) is always positive semi-definite. Hence, with a properly chosen stepsize \(_{t}\) we could quantify the convergence of \(_{t}\) to \(_{*}\) non-asymptotically. Nevertheless, assuming a warm-start condition on \(_{0}\), we also show the convergence of (11), in Appendix E.3 for completeness.

**Algorithm and Analysis.** Based on the intuition, we present Algorithm 2. One could interpret the algorithm as the SGD analogy of the offline 2SLS algorithm . It is also related to the framework of non-linear two-stage stochastic approximation algorithms ; albeit the updates of \(_{t}\) and \(_{t}\) are coupled since both updates use \(Z_{t}\). Furthermore, the dependency between the randomness between the two stages in the IVaR problem, makes the analysis significantly different and more challenging from the classical analysis of two-stage algorithms (see below Theorem 2 for additional details). Finally, while Algorithm 2 is designed for linear models, the intuition behind the method is also applicable to non-linear models (i.e., between \(Z\) and \(X\), and \(X\) and \(Y\)). We focus on linear models in this work in order to derive our theoretical results. A detailed treatment of the nonlinear case (for which the analysis is significantly nontrivial) is left for future work. We make the following additional assumptions for the convergence analysis of Algorithm 2.

**Assumption 3.1**.: _For some constants \(C_{z},C_{zy}>0\), we have the following bounds on the fourth moments:_

\[[\|_{Z}-ZZ^{}\|^{4}] C_{z}d_{z}^{_{ }},[\|_{ZY}-ZY\|^{4}] C_{zy} d_{z}^{_{}},:=\{_{},_{}\}.\] (15)

**Assumption 3.2**.: _There exist constants \(0<_{Z}_{Z}<\) such that \(_{Z}I_{d_{z}}_{Z}_{Z}I_{d_{z}}\)._

The above conditions are rather mild moment conditions, similar to Assumption 2.4, and could be easily verified for the linear model setting we consider.

**Assumption 3.3**.: \(\{_{t}\}_{t}\) _is within a compact set of diameter \(C_{}d_{z}^{}\) for some constants \(C_{}>0\), \( 0\)._

Figure 1: (11) can initially diverge before converging eventually, leading to a worse performance in practical settings compared to Algorithm 2. See Appendix C.2 for the experimental setup.

We emphasize that Assumption 3.3 is only for the uncoupled sequence \(_{t},\) which is an SGD sequence for solving a strongly-convex problem. It holds easily in various cases, for example by projecting the iterates onto any compact sets or a sufficiently large ball containing \(^{*}.\) It is also well-known that, without any projection operations, \(\{_{t}\}_{t}\) sequence is almost surely bounded  under our assumptions. Finally, similar assumptions routinely appear in the analysis of SGD algorithms in various related settings; see, for example, .

We now present our result on the convergence of \(\{_{t}\}_{t}\) below in Theorem 2 (see Appendix E.1 for the proof). In comparison to Theorem 1 (regarding Algorithm 1), we highlight that Theorem 2 provides an any-time guarantee, as the total number of iterations is not required in advance by Algorithm 2.

**Theorem 2**.: _Suppose Assumptions 2.3, 2.2 (without \(X_{t}^{}\)), 3.1, 3.3, and 3.2 hold. In Algorithm 2, for any \(>0\), set \(_{t}=C_{}t^{-1+/2}\) and \(_{t}=C_{}t^{-1+/2},\) where \(C_{}=\{0.5d_{x}^{-4-/2}_{Z}^{-1}C_{}^{-2 },0.5(\|_{*}\|_{Z})^{-2}\}\), and \(C_{}=^{2}d_{z}^{-1-2}/128\). Then, we have_

\[[\|_{t}-^{*}\|^{2}]=O(}).\]

**Remark 1**.: _In Theorem 2, we present the step-size choices for the fastest rate of convergence. In the proof of Theorem 2 (see Appendix E.1), we show that convergence can be guaranteed for a range of step-sizes given by \(_{t}=C_{}t^{-a}\), \(_{t}=C_{}t^{-b},\) where \(1/2<a,b<1\), \(b>2-2a\) with corresponding rate being \([\|_{t}-^{*}\|^{2}]=O(\{t^{-b(2-(1-/ 2)^{-1})},t^{-a}(2/-1)\})\). In particular, one requires \(a,b<1\) to ensure \((_{t}-_{t+1})/_{t}=o(_{t})\), and \((_{t}-_{t+1})/_{t}=o(_{t})\), as is standard in stochastic approximation literature (see, for example, )._

**Proof Techniques.** The major challenge towards the convergence analysis of \(\{_{t}\}_{t}\) lies in the interaction term \(_{t}Z_{t}Z_{t}^{}_{t}_{t}\) between \(_{t}\) and \(_{t}\) in (13). This multiplicative interaction term leads to an involved dependence between the noise in the stochastic gradient updates for the two stages. Such a dependence has not been considered in existing analysis of non-linear two time-scale algorithms . In addition,  considers the case when the noise sequence is not only independent of each other but also independent of iterate locations. Furthermore, they assumes (see their Assumption 3) that the condition in Assumption 2.3 holds for all \(\) whereas Assumption 2.3 only needs to hold for \(_{*}\), that is much milder. Similarly, many works (for example, Assumption 1 in , Assumption 2 in  and Theorem 2 in ) assume that the iterates of both stages are bounded in a compact set and consequently, and hence the variance of the stochastic gradients are also uniformly bounded.

In our setting, firstly, the stochastic gradient in (13), evaluated at \((_{t},_{t})\) is biased:

\[_{t,Z_{t}}[_{t}{}^{}_{t}(Z_{t }^{}_{t}_{t}-Y_{t})]=_{t,Z_{t}}[_{ t}{}^{}_{t}(Z_{t}^{}_{t}_{t}-Z_{t}^{} _{*}_{*})]=_{t}[_{t}{}^{}_{Z }(_{t}_{t}-_{*}_{*})]\] \[= _{t}{}^{}_{Z}_{t}(_{t}-_{*})+ _{t}{}^{}_{Z}(_{t}-_{*})_{*}_{*}^{ }_{Z}_{*}(_{t}-_{*})=_{}F(_{t}).\]

Furthermore, even under Assumption 3.3, the variance of the stochastic gradient is not (13) uniformly bounded. Overcoming these issues, in addition to the aforementioned dependence between the noise in the stochastic gradient updates for the two stages, forms the major novelty in our analysis. We proceed by noting that if \(_{*}\), \(_{Z}\), and \(_{ZY}\) were known beforehand, one conduct deterministic gradient updates, i.e., \(_{t+1}=_{t}-_{t+1}_{*}^{} (_{Z}_{*}_{t}-_{ZY})\), to obtain \(_{*}\). By standard results on gradient descent for strongly convex functions (see, for example, ), \(\{_{t}\}_{t}\) converges exponentially fast as stated in Lemma 4. Hence, it remains to show that the trajectory of \(_{t}\) converges to the trajectory of \(_{t}\). That is, defining the sequence \(_{t}:=_{t}-_{t}\), our goal is to establish the convergence rate of \([\|_{t}\|_{2}^{2}]\). We first provide an intermediate bound (see Lemma 6) and then progressively sharpen to a tighter bound (see Lemma 7). In doing so, it is also required to show that \([\|_{t}\|^{4}]\) is bounded, which we prove in Lemma 5. The proof of Lemma 5 is non-trivial and requires carefully chosen stepsizes satisfying \(_{t=1}^{}(_{t}^{2}+_{t}})<.\)

## 4 Numerical Experiments

**Experiments for Algorithm 1** (Tosg-IvaR).: We first consider the following problem, in which \((Z,X,Y)\) is generated via

\[Z(0,I_{d_{z}}),\ X=(_{*}^{}Z)+c(h+_{x }),\ Y=_{*}^{}X+c(h_{1}+_{y}),\]where \(c>0\) is a scalar to control the variance of the noise vector, and \(h_{1}\) is the first coordinate of \(h\). The noise vectors (or scalar) \(h,_{x},_{y}\) are independent of \(Z\), and we have \(h(_{d_{x}},I_{d_{x}})\), \(_{x}(0,I_{d_{x}})\),\(_{y}(0,1)\). In each iteration, one tuple \((X,X^{},Y)\) is generated and used to update \(_{t}\) according to Algorithm 1. We set \((d_{x},d_{z})\{(4,8),(8,16)\}\), \(c\{0.1,1.0\}\), and \((s)\{s,s^{2}\}\). We repeat each setting 50 times and report the curves of \([\|_{t}-_{*}\|^{2}]\) in Figure 2, where the expectation is computed as the average of \(\|_{t}-_{*}\|^{2}\) of all trials, and the shaded region represents the standard deviation. The first row and the second row correspond to \((s)=s\) and \((s)=s^{2}\) respectively. Here, \(c=0.1\) for odd columns and \(c=1.0\) for even columns. We have \((d_{x},d_{z})=(4,8)\) for the first two columns and \((d_{x},d_{z})=(8,16)\) for the last two columns. Empirically, we can observe that our Algorithm 1 performs well across all different settings.

**Experiments for Algorithm 2** (OTSG-IVaR). Next, we compare our Algorithm 2 as well as its variant and Algorithm 1 in . We write "OTSG-IVaR", "CSO - Eq. (11)" and "" to represent Algorithm 2, Algorithm 2 with the updates replaced by (11) and Algorithm 1 in  (see Appendix A). We follow simulation settings similar to :

\[Y=_{*}^{}X+, X=_{*}^{}Z+,= _{}(0,I_{d_{x}}),= e_{1}+(0, 0.25),\] (16)

where \(_{1}\) is the first coordinate of \(\), \(_{*}^{d_{x}}\) is a unit vector chosen uniformly randomly, and \(_{*}^{d_{x} d_{x}}\) where \(_{ij}=0\) for \(i j\), and \(_{ij}=1\) for \(i=j\), \(i=1,2,,d_{x}\), and \(j=1,2,,d_{z}\). Here \(\) controls the level of endogeneity in the model. We compare the performance of Algorithm 2 with (11), and O2SLS  for \(=1,4\), and \(_{}=0.5,1\). By varying \(_{}\) we control the correlation between \(X\) and \(Z\). We consider two settings \((d_{x},d_{z})=(1,1)\), and \((d_{x},d_{z})=(8,16)\). As performance metric, in Figure 3 we plot \([\|_{t}-_{*}\|^{2}]\) where the \([]\) is approximated by averaging over 50 trials, and both axes are in \(\) scale (base 10). We also show, in Figure 4, the convergence of the test Mean Squared Error (MSE) evaluated over 400 test samples to the best possible test MSE where \(_{*}\) and \(_{*}\) are known beforehand. For Figures 3 and 4, the first row and second row corresponds to \((d_{x},d_{z})=(1,1)\) and \((d_{x},d_{z})=(8,16)\) respectively, and \(_{}=0.5\) in odd columns and \(_{}=1.0\) in even columns. We have \(=1.0\) for the first two columns and \(=4.0\) for the last two columns. We can observe that O2SLS has much larger variance in different settings, while our algorithms perform consistently well in all settings. We further conduct experiments on real-world datasets provided in  and . Due to space limit, we include the numerical results in Section C.3 of the Appendix.

## 5 Conclusion

We presented streaming algorithms for least-squares IVaR based on directly solving the associated conditional stochastic optimization formulation in (2). Our algorithms have several benefits, including avoidance of mini-batches and matrix inverses. We show that the expected rates of convergences for the proposed algorithms are of order \(( T/T)\) and \((1/T^{1-})\), for any \(>0\), under the availability of two-sample and one-sample oracles, respectively. As future work, it is interesting to develop streaming inferential methods for IVaR. Leveraging related works for the vanilla SGD  to the setting of Algorithms 1 and 2, provides a concrete direction to establish Central Limit Theorems and develop limiting covariance estimation procedures.