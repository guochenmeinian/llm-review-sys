# Dual Critic Reinforcement Learning

under Partial Observability

 Jinqiu Li\({}^{1,2}\), Emmin Zhao\({}^{1,2}\), Tong Wei\({}^{3}\), Junliang Xing\({}^{3}\), Shiming Xiang\({}^{1,2}\)

\({}^{1}\)Institute of Automation, Chinese Academy of Sciences

\({}^{2}\)School of Artificial Intelligence, University of Chinese Academy of Sciences

\({}^{3}\)Department of Computer Science and Technology, Tsinghua University

{lijinqiu2021, zhaocmin2018}@ia.ac.cn, wt22@mails.tsinghua.edu.cn

jlxing@tsinghua.edu.cn, smxiang@nlpr.ia.ac.cn

Corresponding authors.

###### Abstract

Partial observability in environments poses significant challenges that impede the formation of effective policies in reinforcement learning. Prior research has shown that borrowing the complete state information can enhance sample efficiency. This strategy, however, frequently encounters unstable learning with high variance in practical applications due to the over-reliance on complete information. This paper introduces DCRL, a **Dual**Critic **R**einforcement **L**earning framework designed to adaptively harness full-state information during training to reduce variance for optimized online performance. In particular, DCRL incorporates two distinct critics: an _oracle_ critic with access to complete state information and a _standard_ critic functioning within the partially observable context. It innovates a synergistic strategy to melt the strengths of the oracle critic for efficiency improvement and the standard critic for variance reduction, featuring a novel mechanism for seamless transition and weighting between them. We theoretically prove that DCRL mitigates the learning variance while maintaining unbiasedness. Extensive experimental analyses across the Box2D and Box3D environments have verified DCRL's superior performance.

## 1 Introduction

Real-world issues commonly involve a degree of partial observability, where agents lack access to the full system state and must base decisions on partial observations. These problems are typically defined as partially observable Markov decision processes (POMDPs) . Despite the progress in reinforcement learning (RL) for addressing complex tasks , learning effective strategies in scenarios with partial observations remains challenging. Traditional RL methods in POMDP contexts often encounter impractical computations in processing the complete history, leading to suboptimal performance. Luckily, full states are accessible during training in many training scenarios. For example, in applications like autonomous driving or robot control tasks , where computational and time limitations exist, only low-cost RGB images are available for deployment. At the same time, high-precision sensors can record more accurate and

Figure 1: The WallGap environment, a procedurally generated navigation task in MiniWorld. The agentâ€™s goal (red triangle) is to reach the target (red box) within as few steps as possible under partial observability.

detailed data during training. Similarly, in card games , the private hands of other players are typically hidden during deployment but revealed during training. This distinction of separating available information during training and deployment stages has driven the adoption of an offline learning and online execution paradigm in POMDP settings [10; 11; 12; 13].

This study focuses on the asymmetric actor-critic framework [8; 14; 15], where the actor and critic rely on different inputs. The critic, serving as an auxiliary tool for training, can be transformed into an oracle critic to align with the offline learning and online execution paradigm. Specifically, the oracle critic is empowered to access the complete states while the actor remains constrained to partial observations. Using an oracle critic conditioned on the state and observation history promises to enhance performance and theoretically achieve unbiasedness . However, the practical performance of such approaches raises doubts, particularly in domains characterized by high uncertainty and extensive state spaces. For instance, in the illustrated first-person 3D navigation task depicted in Figure 1, the agent is tasked with reaching a dynamic target that varies across episodes within as few steps as possible. This task involves a first-person view observation and an aerial view state. Introducing an oracle critic incorporating state information in this complex environment may increase variance, potentially undermining learning efficiency and overall performance.

To tackle the challenges mentioned above, we argue that the indiscriminate utilization of state information is inadvisable. We introduce a Dual Critic Reinforcement Learning framework (DCRL). DCRL consists of two critics: the _oracle_ critic conditioned on the <history, state> tuple, and the _standard_ critic conditioned solely on history. It introduces a synergistic strategy to meld the strengths of the oracle critic for efficiency improvement and the standard critic for variance reduction. In summary, the main contributions of this work are as follows:

* We propose a DCRL framework to address partially observable tasks. This framework features a novel mechanism for seamless transition and weighting between the dual critics.
* We theoretically prove that DCRL mitigates learning variance while maintaining unbiasedness.
* The DCRL framework is simple to implement. While our emphasis lies on the Advantage Actor-Critic (A2C) , DCRL can also be integrated into other actor-critic architectures, such as Proximal Policy Optimization (PPO) .

We extensively validate the DCRL framework based on A2C and PPO. Experimental results conducted on both Box2D and Box3D environments confirm its effectiveness. The source code is available in the supplementary material.

## 2 Related Work

Most methods can be adapted for partial observability by training memory-based policies to condition past observations. Recurrent Neural Networks (RNNs)  are commonly used for their simplicity and strong performance. Deep Recurrent Q-Networks (DRQN)  integrates Long Short-Term Memory (LSTM)  cells into the Deep Q-Network (DQN)  architecture, which demonstrated promising results. In addition to LSTM, other memory mechanisms such as Gated Recurrent Units (GRUs) [21; 22], Transformers [23; 24], and Language Models [25; 26] have been adopted in RL algorithms for memory learning. However, POMDPs are hard to solve when relying solely on memory-based policies because the size of the history grows linearly with the horizon length.

It is crucial that in many environments, complete states are observable during the training phase. Utilizing full observable states during training has emerged as a popular paradigm in RL. We discuss prior works on the utilization of full observability in RL algorithms. Additionally, we provide further discussion about training the world model, applications in multi-agent reinforcement learning, and other double structures in Appendix B.

**Using complete states to train the critic.** This topic is closely related to our paper and has been applied in many large-scale scenarios, such as DouDizhu  and Mahjong . The critic in the actor-critic framework is a training tool not required during deployment, making its structure naturally suitable to exploit the state. This is achieved by critic asymmetry, where the actor and critic receive history and state, respectively. Asymmetric Actor-Critic  uses the critic conditioned on ground-truth states to address image-based robot control tasks. AACC  employs the critic conditioned on both states and observations to solve contextual Markov decision processes. Theoretically, using the state as the critic input is biased, whereas using the <history, state> tuple is unbiased in expectation . However, it introduces high variance in practice.

**Using complete states to train the policy.** These methods typically involve training a teacher policy using complete state information and then utilizing this policy to guide the learning of a student policy under partial observability. The forms of guidance vary, such as maintaining consistency of the Q-function , the encoder , action-distributions , and others. In addition to introducing extra loss terms to enforce consistency between the student policy and the teacher policy, the transition from the teacher policy to the student policy can also be facilitated through dropout of state information from the input [30; 31; 32]. Common issues include the imitation gap and suboptimal teacher, which can limit the potential capabilities of the student policy.

**Using complete states to learn the belief representation.** Belief state methods [1; 33] are classical in POMDPs. These methods often necessitate knowledge of the dynamics and reward functions, thus rendering them more applicable to scenarios with well-defined system dynamics. Consequently, they are typically constrained to simpler settings characterized by small state spaces, where the complexities of the environment are more tractable. Several recent studies [34; 35; 36] focus on learning belief representations by predicting future observations and rewards. VRM  utilizes a latent stochastic variable to model sequential observations. However, learning latent states that can capture long-term dependencies is challenging. Incorporating the complete states can help alleviate this issue. DouZero+  introduces auxiliary tasks for predicting states while concurrently training policies conditioned on observations and the predicted states. Believer  decouples belief state modeling from policy optimization. They first capture state features through representation learning and then train the policy conditioned on observations and the predicted states.

## 3 Preliminaries

This section introduces the background topics required to understand our work: partially observable Markov decision processes, the recurrent Advantage Actor-Critic algorithm, and the Unbiased Asymmetric Actor-Critic algorithm.

### Partially Observable Markov Decision Processes

A partially observable Markov decision process (POMDP)  is formally identified as a \(7\)-tuple, namely \(P=,,T,,R,O,\), where \(\), \(\), and \(\) represent the state space, action space, and observation space, respectively. The transition function \(T:\) is denoted as \(T(s,a,s^{})=p(s^{}|s,a)\), describing the probability of transitioning from state \(s\) to state \(s^{}\) after taking action \(a\). The agent receives observations rather than states, and the observation function \(O:\) is defined as \(O(s,a,o)\) representing the probability of observing \(o\) conditioned on state \(s\) and action \(a\). The reward function \(R:\) is expressed as \(R(s,a)\), representing the reward received by acting \(a\) in state \(s\), and \(\) is the discount factor. In POMDPs, the optimal policy may depend on the entire history of observations and actions, denoted as \(=\{h_{t}|h_{t}=(o_{0},a_{0},...o_{t-1},a_{t-1},o_{t})\}\). The belief-state \(b:\) is the probability distribution over states \(s\) given history \(h\). The history reward function is defined as \(R(h,a)=_{s|h}[R(s,a)]\). The agent aims to maximize the expected cumulative discounted rewards \([_{t=0}^{}^{t}R(s_{t},a_{t})]\) through interactions with the environment.

This paper assumes that both states \(s_{t}\) and observations \(o_{t}\) are accessible during training, while only the observations \(o_{t}\) are accessible during deployment.

### Recurrent Advantage Actor-Critic

Advantage Actor-Critic (A2C)  is primarily designed for fully observable control problems. It can be easily adapted to handle partially observable control problems by replacing all occurrences of the state \(s\) with the respective history \(h\). To clearly distinguish between different methods, we denote this method as **AC**. It trains an actor model \(:\) parameterized by \(\), and a critic model \(V:\) parameterized by \(\). The policy loss is defined as:

\[_{}^{}()=-_{t= 0}^{}Q^{}(h_{t},a_{t})_{}(a_{t}|h_{t}),\] (1)where \(Q^{}(h_{t},a_{t})\) denotes the history-action value of the policy \(\). In practice, \(Q^{}(h_{t},a_{t})\) is replaced by the n-step bootstrapped advantage to reduce variance:

\[_{}(h_{t},a_{t})=_{d=0}^{n-1}^{d}R(h_{t+d},a_{t+d})+^{n }V_{}(h_{t+n})-V_{}(h_{t}).\] (2)

Correspondingly, the policy loss is \(_{}^{}()=-_{t =0}^{}_{}(h_{t},a_{t})_{}(a_{t}|h_{t})\). In this work, the value loss is defined as \(_{}^{}()=_{t =0}^{}_{}(h_{t},a_{t})^{2}\). The entropy loss is \(_{}()=-_{t=0}^{} _{a}_{}(a_{t}|h_{t})_{}(a_{t}|h_{t}) \). The total loss is \(_{}^{}()+_{}^{}()+_{}()\), where \(\) is a weight for entropy regularization.

Unbiased Asymmetric Actor-Critic  is a variant of recurrent A2C that can exploit state information during training. It considers an oracle critic model \(V:\) parameterized by \(\) instead of the standard critic model. To clearly distinguish between different methods, we denote this method as **UAAC**. The n-step bootstrapped advantage for UAAC is defined as:

\[_{}(h_{t},s_{t},a_{t})=_{d=0}^{n-1}^{d}R(s_{t+d},a_{t+d})+ ^{n}V_{}(h_{t+n},s_{t+n})-V_{}(h_{t},s_{t}).\] (3)

Correspondingly, the policy model is trained to minimize the following objective function:

\[_{}^{}()=-_ {t=0}^{}_{}(h_{t},s_{t},a_{t})_{}(a_{t}|h_{t}) .\] (4)

The value loss is defined as \(_{}^{}()=_{t =0}^{}_{}(h_{t},s_{t},a_{t})^{2}\). Compared with the standard actor-critic method, the state \(s\) provides additional context to determine the agent's true underlying situation, which may facilitate the learning of the oracle critic. Importantly, it has been proven that \(V^{}(h,s)\) provides Monte Carlo estimates of the respective \(V^{}(h)\) for arbitrary policies, which is theoretically unbiased, i.e.,

\[V^{}(h) =_{s|h}[V^{}(h,s)],\] (5) \[Q^{}(h,a) =_{s|h}[Q^{}(h,s,a)].\] (6)

Therefore, the equality \(_{}_{}^{}()=_{ }_{}^{}()\) holds, indicating that the policy gradient remains unchanged in expectation.

## 4 Dual Critic Reinforcement Learning

Critic models that learn accurate values slowly often become a bottleneck for policy performance in many scenarios. When state information is incorporated, it may be easier to learn \(V^{}(h,s)\) with a neural network compared with learning \(V^{}(h)\), leading to faster policy learning. However, \(V^{}(h,s)\) has nonzero variance. Taking into account the variance arising from \(V^{}(h,s)\): \(_{s|h}[V^{}(h,s)]=_{s|h}\|V^{}(h,s)-V^{}( h)\|^{2}\), with a practical batch size that is not too large, the variance tends to be high, especially in high-uncertainty belief states and large state spaces. In games like DouDizhu, when the initial information collection does not accurately infer the opponents' hands, training with \(V^{}(h,s)\) incorporating complete state information increases variance, thus limiting model generalization. Conversely, using \(V^{}(h)\), which relies solely on observations, enhances robustness in such cases. _This concept is akin to replacing the reward-to-go term with the Q-value to reduce variance in the vanilla policy gradient method, as discussed in [38; 39]._

### Theories of the Dual Critic

**Definition 1**.: Define the dual value function as \(V^{}_{}(h,s)=(1-)V^{}(h,s)+ V^{}(h)\), where \(\) is a weight that balances the contributions of the \(V^{}(h,s)\) and \(V^{}(h)\), and \(\). Correspondingly, the dual Q function is defined as \(Q^{}_{}(h,s,a)=(1-)Q^{}(h,s,a)+ Q^{}(h,a)\).

**Theorem 1**.: _For arbitrary control problems and policies, \(V^{}_{}(h,s)\) is an unbiased estimate of \(V^{}(h)\) and \(Q^{}_{}(h,s,a)\) is an unbiased estimate of \(Q^{}(h,a)\)._

Proof.: Following from Equation (5), we have:

\[_{s|h}[V^{}_{}(h,s)] =_{s|h}(1-)V^{}(h,s)+ V^{}(h) \] \[=(1-)_{s|h}[V^{}(h,s)]+ V^{}(h)\] (7) \[=V^{}(h).\]

Similarly, as inferred from Equation (6), \(_{s|h}[Q^{}_{}(h,s,a)]=Q^{}(h,a)\) by replacing the \(V\) with \(Q\) using the same approach outlined above. 

Therefore, the variance of the dual value is defined as \(_{s|h}[V^{}_{}(h,s)]=_{s|h}\|V^{ }_{}(h,s)-V^{}(h)\|^{2}\), and that of Unbiased Asymmetric Actor-Critic is defined as \(_{s|h}[V^{}(h,s)]=_{s|h}\|V^{}(h,s)-V^{} (h)\|^{2}\).

**Theorem 2**.: _The variance of the dual value is smaller than that of the Unbiased Asymmetric Actor-Critic, i.e., \(_{s|h}[V^{}_{}(h,s)]_{s|h}[V^{} (h,s)]\)._

Proof.: According to the definitions and \(\), it holds that

\[_{s|h}[V^{}_{}(h,s)]& =_{s|h}(1-)V^{}(h,s)+ V^{}(h) \\ &=(1-)^{2}_{s|h}[V^{}(h,s)]\\ &_{s|h}[V^{}(h,s)].\] (8)

Similarly, \(_{s|h}[Q^{}_{}(h,s,a)]_{s|h}[Q^{ }(h,s,a)]\) by replacing the \(V\) with \(Q\) using the same approach outlined above. 

Considering the unbiasedness demonstrated above, we contemplate employing the dual Q function for policy updates. The policy gradient based on the dual Q function can be formulated as:

\[_{}^{}_{}()=-_{t}Q^{}_{}(h_{t},s_{t},a_{t})_{} _{}(a_{t}|h_{t}).\] (9)

This formulation maintains the policy gradient unchanged in expectation.

**Theorem 3**.: _The dual Q function maintains the policy gradient unchanged in expectation._

Proof.: Following Theorem 1, therefore,

\[_{}^{AC}_{}( )&=-_{t}Q^{}(h_{t},a_{t})_{ }_{}(a_{t}|h_{t})\\ &=-_{t}\,E_{h_{t},a_{t}}Q^{}(h_{t},a_{t})_{ }_{}(a_{t}|h_{t})\\ &=-_{t}_{h_{t},a_{t}}_{s_{t}|h_{t }}[Q^{}_{}(h_{t},s_{t},a_{t})|_{}_{}( a_{t}|h_{t})\\ &=-_{t}_{h_{t},s_{t},a_{t}}Q^{}_{}(h_{t},s_{t},a_{t})_{}_{}(a_{t}|h_{t})\\ &=-_{t}Q^{}_{}(h_{t},s_{t},a _{t})_{}_{}(a_{t}|h_{t})\\ &=_{}^{}_{}( ).\] (10)

Similarly, the dual Q function decreases the variance of the policy gradient according to Theorem 2.

### Learning with Dual Critics

Building upon the abovementioned theory, we incorporate the dual Q function to balance variance and efficiency. This integration introduces the Dual Critic Reinforcement Learning framework (DCRL). As shown in Figure 2, the DCRL consists of three main components: 1) a _standard_ critic network \(V(h)\) parameterized by \(\), 2) an _oracle_ critic network \(V(h,s)\) parameterized by \(\), and 3) an actor model \((a|h)\) parameterized by \(\). Inspired by the Equation (9) and Theorem 3, we propose the policy and value losses of DCRL as the following objective functions:

\[^{}_{}()=- _{t=0}^{}(1-)_{}(h_{t},s_{t},a_{t}) {log}_{}(a_{t}|h_{t})+_{}(h_{t},a_{t})_{ }(a_{t}|h_{t}),\] (11) \[^{}_{}(,)= _{t=0}^{}_{}(h_{t},a_{t})^{2}+ _{t=0}^{}_{}(h_{t},s_{t},a_{t})^{2},\] (12)

where \(_{}(h_{t},a_{t})\) and \(_{}(h_{t},s_{t},a_{t})\) follow the definitions from Equation (2) and Equation (3). The dual advantage is formulated as \(_{}(h_{t},s_{t},a_{t})=(1-)_{}(h_{t},s_{t},a_{ t})+_{}(h_{t},a_{t})\).

We propose a novel weighting mechanism to synergistically melt the two critics and thoroughly exploit the complete state information. When the received return does not exceed the agent's value estimate, the advantage is non-positive (\(_{}(h_{t},a_{t}) 0\)), \(\) is clipped to \(0\). In cases with \(_{}(h_{t},a_{t})>0\), \(\) takes effect. \(\) is a parameter associated with \(h\) but not with \(s\). Hence, this mechanism maintains the theory mentioned above. This mechanism helps stabilize training and prevent large updates in cases where the advantage is non-positive. Similar to Self-Imitation Learning , this clipping mechanism can be viewed as a form of lower-bound-soft-Q-learning, where only samples with a positive advantage provide valuable insights into the optimal soft Q-value. From an empirical perspective, this approach embodies the notion that if there is still room for policy enhancement after being updated by the oracle critic \(V(h,s)\), the standard critic \(V(h)\) should be engaged. With full-state information from the oracle critic, DCRL avoids falling into a vicious cycle of poor policy and bad value estimates. The standard critic in DCRL can effectively mitigate variance, whereas recurrent Actor-Critic methods preclude such opportunities due to entanglement in a vicious cycle. These two critics establish a mutually supportive relationship, facilitating variance reduction while effectively using full-state information. The proof regarding lower-bound-soft-Q-learning is provided in Appendix C.

In addition to the mechanism mentioned above, there is another natural way to leverage the dual-critic framework by interchanging the roles of the oracle and standard critics. Specifically, we shift the weighting factor to the forefront of the \(_{}(h_{t},s_{t},a_{t})\) term which denote as \(^{}\), and the inside term

Figure 2: Implementation of DCRL framework. DCRL innovates a synergistic strategy to melt the strengths of the oracle critic for efficiency improvement and the standard critic for variance reduction.

of the policy loss is defined as \((1-^{})_{}(h_{t},a_{t})_{}(a_{t}|h_{t})+ ^{}_{}(h_{t},s_{t},a_{t})_{}(a_{t}|h_{ t})\). \(^{}\) is clipped to \(0\) when \(_{}(h_{t},s_{t},a_{t}) 0\) and otherwise takes a positive value. \(^{}\) is a parameter associated with both \(h\) and \(s\). Unlike DCRL, this alternative technique lacks the characteristic of unbiasedness and fails to thoroughly exploit state information while deviating from the lower-bound-soft-Q-learning framework. As a result, its performance exhibits instability compared with DCRL. The experimental section provides a detailed discussion of this technique's performance.

## 5 Experiments

We conduct a series of experiments to evaluate the effectiveness of DCRL in partially observable domains. Our research focuses on the model-free setting where complete states are available during training. We compare our DCRL approach with several baselines.

**Baselines.** Recurrent Actor-Critic is a recurrent version of the standard actor-critic algorithm, namely A2C  or PPO . This baseline represents methods that do not utilize state information. Asymmetric Actor-Critic  is a representation method based on critic asymmetry. The critic uses the state as input, independent of the history. Oracle Guiding  is a representation method based on teacher policy. This approach gradually removes state information from the policy input, transitioning the teacher policy to a student policy under partial observability. The dropout probability linearly increases with training iterations until only observation remains. We adopt a 50% cutoff for all tasks. Unbiased Asymmetric Actor-Critic  is a state-of-the-art method for POMDPs. The critic uses the <history, state> tuple as input to exploit state information while introducing no bias into the training process, thus achieving superior performance. To ensure a fair comparison, we keep the main network architectures similar across all methods. We present the mean and standard deviation of results obtained from five different seeds for each environment. For a comprehensive overview of other implementation details and hyperparameters, please refer to Appendix E.

### MiniGrid

To see how useful DCRL is across various POMDP tasks, we compare various methods in Box2D environments. MiniGrid  is a procedurally generated environment with goal-oriented tasks. As shown in Figure 4, the triangular agent with a discrete action space aims to reach the goal. These tasks involve interacting with different objects and solving diverse maze maps that vary in each episode. The observation comprises a first-person view representing a \(7 7 3\) image. At the same time, the

Figure 3: Learning curves on MiniGrid. The x-axis and y-axis represent the training frames and average returns, respectively. Shaded bars illustrate the standard error. All curves are trained based on A2C over \(5\) random seeds.

state offers a fully observable perspective, with the image size varying according to the tasks. The image is compact and efficient encoding, rather than raw pixels.

All experiments are conducted based on A2C, and the results are plotted in Figure 3. Recurrent Actor-Critic struggles to learn a robust policy across most environments, primarily due to the agent's need for extensive exploration without state information. Despite leveraging states, Oracle Guiding and Asymmetric Actor-Critic performance exhibits instability, attributed to their heuristic nature and lack of theoretical guarantees. In contrast, the Unbiased Asymmetric Actor-Critic maintains stability and outperforms the mentioned methods. Nonetheless, it faces challenges in scenarios such as _LavaCrossingS9N2_ and _RedBlueDoors-8x8_. Our DCRL framework surpasses all other methods in eight environments, particularly excelling in challenging tasks. Taking _LavaCrossingS9N2_ and _Empty-16x16_ as examples, the map size of the former is smaller, but the layout is more complex. In the case of _Empty-16x16_, the states remain simple and relatively constant, making it easy to infer key information from history. Conversely, in _LavaCrossingS9N2_, objects change between episodes, leading to high uncertainty in the belief state. While leveraging states aids in precise value function learning, the variance poses challenges in policy optimization. DCRL effectively overcomes these limitations and emerges as a formidable competitor against other baseline methods.

To further validate the effectiveness of DCRL, we provide the visualization of different critic values in Appendix D.1. The visualization demonstrates that the dual value function \(V_{}(h,s)\) effectively reduces variance compared with the oracle critic. Besides, we evaluate our DCRL in \(27\) MiniGrid tasks based on A2C and PPO. The average score across all games is provided in Table 1 to demonstrate the overall performance for different methods. Our DCRL outperforms other baselines in \(26\) out of the \(27\) games. The detailed learning curves are available in Appendix D.2.

### MiniWorld

This section investigates whether DCRL benefits more complex continuous state space tasks and whether it can be applied to other Actor-Critic algorithms, such as PPO. Unlike A2C, PPO lacks a strong theoretical connection to DCRL, but we claim they can still complement each other. To empirically verify this, we implement all methods based on PPO and evaluate them on the MiniWorld domain . The observations and states are represented as \(80 60 3\) images rendered as pixels. The results depicted in Figure 5 illustrate that DCRL enhances PPO performance across all four environments. In contrast to MiniGrid, the state format in this benchmark is not a concise encoding and tends to contain redundancy and noise. Although states assist the agent in effectively discerning information about the environment, the variance introduced by noise poses a challenge to the learning process. Furthermore, it is observed that the Unbiased Asymmetric Actor-Critic performs poorer than the Recurrent Actor-Critic across all tasks. Nevertheless, DCRL converges to superior policies by synergistically

    &  &  \\   & \(1e5\) frames & \(1e6\) frames & \(1e5\) frames & \(1e6\) frames \\  Recurrent Actor-Critic & 0.32\(\)0.13 & 0.28\(\)0.09 & 0.26\(\)0.07 & 0.52\(\)0.03 \\ Asymmetric Actor-Critic & 0.26\(\)0.10 & 0.32\(\)0.14 & 0.27\(\)0.08 & 0.60\(\)0.06 \\ Oracle Guiding & 0.18\(\)0.13 & 0.27\(\)0.06 & 0.25\(\)0.10 & 0.48\(\)0.05 \\ Unbiased Asymmetric Actor-Critic & 0.31\(\)0.08 & 0.39\(\)0.09 & 0.28\(\)0.10 & 0.59\(\)0.08 \\ DCRL (Ours) & **0.63\(\)0.07** & **0.89\(\)0.01** & **0.47\(\)0.08** & **0.84\(\)0.03** \\   

Table 1: Performance of agents on MiniGrid after \(1e5\) frames (\(27\) games) and \(1e6\) frames (\(13\) games) of training. We report the mean and standard error of the performance.

Figure 4: The LavaCrossingS9N2 environment in MiniGrid. The agentâ€™s goal (red triangle) is to reach the target (green box) within as few steps as possible under partial observability.

### Ablation Studies

**Ablation analysis of components in DCRL.** We conduct detailed ablation studies to analyze how DCRL improves efficiency and enhances performance. DCRL contains two key factors: the dual-critic structure and the weighting mechanism. We replace the dual-critic structure with the single-critic structure to verify the structure's effectiveness. The Standard Critic Version and Oracle Critic Version are constructed with the following expressions for the inside terms of the policy loss: \(_{}(h_{t},a_{t})_{}(a_{t}|h_{t})+_{ }(h_{t},a_{t})_{}(a_{t}|h_{t})\) and \(_{}(h_{t},s_{t},a_{t})_{}(a_{t}|h_{t})+^{ }_{}(h_{t},s_{t},a_{t})_{}(a_{t}|h_{t})\). Next, we evaluate another weighting mechanism baseline (DCRL Interchange Version) discussed in Section 4.2, with the inside terms of the policy loss as \((1-^{})_{}(h_{t},a_{t})_{}(a_{t}|h_{t })+^{}_{}(h_{t},s_{t},a_{t})_{}(a_{t}| h_{t})\). The adjustment of \(\) and \(^{}\) follows the same way as discussed in Section 4.2. Additionally, we introduce an intuitive variant that modifies the _standard_ critic's input from history to state, referred to as the DCRL State Version. This adjustment aligns with previous works that introduce biases; however, it has the potential to enhance efficiency gains. All methods utilize the same architectures and hyperparameters as DCRL.

We select four environments from the MiniGrid domain, where state information plays a crucial role. In these environments, methods that utilize states perform significantly better than those that do not. We compare our DCRL approach with four ablation baselines, and the results are presented in Figure 6. It can be observed that DCRL converges to optimal policies faster than other methods. Intuitively, incorporating the concept of positive advantage (\(_{+}\)) can optimize the utilization of beneficial samples and expedite the training process. Consequently, single-critic structure methods integrating a \(_{+}\) term outperform those lacking it, as demonstrated by the superior performance of approaches like the Standard Critic Version compared with the Recurrent Actor-Critic. However, it is crucial that the two critics fulfill distinct and orthogonal roles within the dual-critic structure. DCRL incorporates an oracle critic that utilizes state information compared with the Standard Critic Version. The inclusion of state information provides the agents with additional context to accurately determine the environment's true state, facilitating learning an accurate value function and ultimately improving performance. In comparison to the Oracle Critic Version, DCRL reduces variance. These factors contribute to DCRL's efficiency. As for the DCRL Exchange Version, although it is also a dual-critic structure, its policy gradient is biased, and its weighting mechanism

Figure 5: Learning curves on MiniWorld. The x-axis and y-axis represent the training frames and average returns, respectively. All curves are trained based on PPO over \(5\) random seeds.

Figure 6: Ablation studies on MiniGrid to verify the two key factors of DCRL. All curves are trained based on A2C across 5 random seeds.

does not utilize state information as effectively as DCRL. Its performance only shows advantages in limited environments. It converges to suboptimal policies in _DistShift2_ and _LavaGapS6_. The DCRL State Version demonstrates commendable performance among the various DCRL variants. However, the biased characteristics of the DCRL State Version contribute to instability in its effectiveness. Notably, our DCRL achieves superior training performance in three out of four environments. These findings further highlight the significance of our DCRL framework.

**Ablation analysis of \(\) in DCRL.** Our DCRL incorporates a dynamic weighting mechanism, which can be interpreted as a form of lower-bound-soft-Q-learning, distinguishing it from conventional linear weighting methods. This mechanism substantially improves DCRL's performance while maintaining high stability concerning hyperparameters. To substantiate this claim, we implement a simplified weighting method with fixed ratios for weighting the two critics, referred to as the DCRL No Clip Version. Additionally, we conduct ablation experiments on the parameter \(\{1/5,1/3,1/2,2/3,4/5\}\). The results depicted in Figure 7 indicate that the DCRL No Clip version shows performance improvements in only some environments compared to the Unbiased Asymmetric Actor-Critic. In contrast, DCRL consistently enhances performance across all environments, underscoring the importance of the dynamic weighting mechanism. Furthermore, the stability of \(\) is notably evident. We choose \(=1/2\) for reporting results in the paper, given its consistently superior performance.

## 6 Conclusion

This paper introduces a novel reinforcement learning framework designed for partially observable tasks. The motivation behind this work is that complete state information may be accessible during training in many scenarios. However, introducing a state could potentially lead to bias or variance. The proposed DCRL method leverages two asymmetric critics to use the state to expedite training and mitigate variance in practice. We underscore the benefits of training with two critics and provide theoretical evidence supporting the unbiasedness and variance reduction achieved through our approach. Empirical results obtained across multiple tasks serve to validate the efficacy of DCRL.

**Limitations.** Our framework operates under the assumption that state information is accessible during training. However, this assumption may not always hold, as only part of the state information might be available within a broader context. It is crucial to discuss whether this limitation will impact the performance of our framework, necessitating further investigation. Furthermore, our observations suggest that the availability of complete state information can sometimes hinder performance in certain environments. This observation underscores the need for a more nuanced approach to the design and utilization of state information. Addressing these issues could lead to enhancements in the performance and applicability of our framework.

Figure 7: Ablation studies on MiniGrid to analyze the robustness of \(\) in DCRL. All curves are trained based on A2C across 5 random seeds.

Acknowledgement

This work was supported in part by the Natural Science Foundation of China under Grant No. 62222606 and 62076238.