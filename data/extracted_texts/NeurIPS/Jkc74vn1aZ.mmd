# Towards Symmetry-Aware Generation of Periodic Materials

Youzhi Luo, Chengkai Liu, Shuiwang Ji

Department of Computer Science & Engineering

Texas A&M University

College Station, TX 77843

{yzluo,liuchengkai,sji}@tamu.edu

###### Abstract

We consider the problem of generating periodic materials with deep models. While symmetry-aware molecule generation has been studied extensively, periodic materials possess different symmetries, which have not been completely captured by existing methods. In this work, we propose SyMat, a novel material generation approach that can capture physical symmetries of periodic material structures. SyMat generates atom types and lattices of materials through generating atom type sets, lattice lengths and lattice angles with a variational auto-encoder model. In addition, SyMat employs a score-based diffusion model to generate atom coordinates of materials, in which a novel symmetry-aware probabilistic model is used in the coordinate diffusion process. We show that SyMat is theoretically invariant to all symmetry transformations on materials and demonstrate that SyMat achieves promising performance on random generation and property optimization tasks. Our code is publicly available as part of the AIRS library (https://github.com/divelab/AIRS).

## 1 Introduction

Designing or synthesizing novel periodic materials with target properties is a fundamental problem in many real-world applications, such as designing new periodic materials for solar cells and batteries . For a long time, this challenging task heavily relies on either manually designing material structures based on the experience of chemical experts, or running very expensive and time-consuming density functional theory (DFT) based simulation. Recently, thanks to the progress of deep learning techniques, many studies have applied advanced deep generative models  to generate or discover novel chemical compounds, such as molecules  and proteins . However, while deep learning has been widely used in periodic material representation learning , generating novel periodic materials with deep generative models remains largely under-explored.

The major challenge of employing deep generative models to the generation of periodic materials is capturing physical symmetries of periodic material structures. Ideally, deep generative models for periodic materials should maintain invariance to symmetry transformations of periodic materials, including permutation, rotation, translation, and periodic transformations . To achieve this target, we propose SyMat, a novel symmetry-aware periodic material generation method. SyMat transforms the atom types and lattices of materials to symmetry-aware generation targets, which are generated by a variational auto-encoder model . Besides, SyMat adopts novel symmetry-aware probabilistic diffusion process to generate atom coordinates with a score-based diffusion model . Experiments show that SyMat can achieve promising performance on random generation and property optimization tasks.

**Relations with Prior Methods.** We note that several existing studies are related to our proposed SyMat, such as CDVAE . Generally, the major difference of SyMat between them lies in the capture of symmetries. We will discuss the detailed differences in Section 3.5.

## 2 Background and Related Work

### Molecule Generation

Designing or discovering novel molecules with target properties has long been a challenging problem in many chemical applications. Recently, motivated from the significant progress in deep generative learning [22; 12; 44; 13], a lot of studies have applied advanced deep generative models to this problem. Some early studies [19; 58; 41; 32; 27] consider molecules as 2D topology graphs and design graph generation models to discover novel molecules. More recently, considering the importance of 3D structures in many molecular properties, many studies have also proposed advanced generative models that can generate 3D molecular conformations either from scratch [10; 39; 31; 15; 50], or from input conditional information [33; 56; 43; 53; 54; 42; 55; 20; 28]. However, all these existing studies are designed for non-periodic molecules while materials have periodic structures, in which atoms periodically repeat themselves in 3D space (see Figure 1 for an illustration of differences between molecules and periodic materials). Hence, they cannot be directly applied to the periodic material generation problem that we study in this work.

### Periodic Material Generation

While molecule generation has been extensively studied, currently the periodic material design or generation problem remains largely under-explored. Early periodic material design methods [34; 7] only generate compositions of chemical elements in periodic materials but do not generate 3D structures. More recent studies have proposed to use variational auto-encoders (VAEs)  or generative adversarial networks (GANs)  to generate 3D structures of periodic materials. However, these methods use coordinate matrices [36; 21; 61] or voxel images [14; 6] of materials as the direct generation targets, which results in the violation of physical symmetries of periodic material structures in their captured probabilistic distributions. Also, the VAE and GAN models used by them are not powerful enough to capture the distribution of complicated 3D periodic material structures. Different from them, our method employs a more powerful score-based diffusion model  to generate 3D periodic material structures, and the model is designed to capture physical symmetries in materials.

### Score-Based Diffusion Models for 3D Structure Generation

Diffusion models are a family of deep generative models that have achieved outstanding generation performance in a variety of data modalities, such as images [38; 37], audios , and molecular conformations [55; 15; 20]. Currently, score-based diffusion models  and denoising diffusion probabilistic models  are two most commonly used diffusion models, and our method employs score-based diffusion models for 3D periodic material generation. For a given data distribution \(p()\) in the high-dimensional data space, the score-based diffusion model trains a parameterized score model \(s_{}()\) with parameters \(\) to accurately approximate the score function \(_{} p()\) from \(\). To improve the score approximation accuracy in the regions where the training data is sparse, denoising score matching [46; 44] is proposed to more effectively train \(_{}()\). Specifically, let \(\{_{t}\}_{t=1}^{T}\) be a set of positive scalars satisfying \(_{1}>_{2}>...>_{T}\), the denoising score matching method first perturbs the data point \(\) sampled from \(p()\) by a sequence of Gaussian noises with noise magnitude levels \(\{_{t}\}_{t=1}^{T}\), _i.e._, sampling \(}\) from \(p_{_{t}}(}|)=(}|, _{t}^{2})\) for every noise level \(_{t}\). The score model \(_{}()\) is optimized to predict the denoising score function \(_{}} p_{_{t}}(}|)\) from \(}\) at each noise level, where the ground truth of \(_{}} p_{_{t}}(}|)\) can be easily computed from the mathematical formula

Figure 1: An illustration of molecule (left) and periodic material (right) structures. Different from molecules, atoms in materials periodically repeat themselves infinitely in 3D space (we use a 2D visualization here for simplicity).

of \((}|,_{t}^{2})\). Formally, \(_{}()\) is optimized to minimize the following training objective \(\):

\[=_{t=1}^{T}_{t}^{2}_{}, }[||_{}(})}{_{t}}+ }-}{_{t}^{2}}||_{2}^{2}].\] (1)

As shown in Vincent , when \(_{t}\) is small enough, after \(_{}()\) is well trained with the objective in Equation (1), the output \(_{}()\) can accurately approximate the exact score function for any input \(\). New data samples can be generated by running multiple steps of the Langevin dynamics sampling algorithm  with the score functions approximated by the score model.

Several existing studies have applied score-based diffusion models to 3D molecular and material structure generation. ConfGF  is the first score-based diffusion model for 3D molecular conformation generation. It proposes a novel theoretic framework to achieve roto-translational equivariance in score functions. Based on the theoretic framework of ConfGF, DGSM  further improves the performance of ConfGF by dynamic graph score matching. Though they have achieved good performance in 3D molecules, they do not consider periodic invariance so they cannot be applied to 3D periodic materials. Recently, a novel approach CDVAE  is proposed for periodic material generation, and score-based diffusion models are used in CDVAE to generate atom coordinates in materials. However, as we discussed in Section 3.5, CDVAE fails to achieve translational invariance in calculating the denoising score function, so it does not capture all physical symmetries.

## 3 SyMat: Symmetry-Aware Generation of Periodic Materials

While a variety of deep generative models have been proposed to capture all physical symmetries in 3D molecular conformations, it remains challenging to do it for periodic materials as they have more complicated 3D periodic structures. In this section, we present SyMat, a novel periodic material generation method. In the following subsections, we will first introduce the problem of symmetry-aware material generation, then elaborate how our proposed SyMat approach achieves invariance to all symmetry transformations of periodic materials.

### Symmetry-Aware Generation

For any periodic material structure, we can consider it as periodic repetitions of one unit cell in 3D space, where any unit cell is the smallest repeatable structure of the material. Hence, for any periodic material \(\), we can describe its complete structure information with one of its unit cells and the three lattice vectors describing its periodic repeating directions. Specifically, assuming there are \(n\) atoms in any unit cell of \(\), we represent \(\) as \(=(,,)\), where \(^{n}\), \(^{3 n}\), and \(^{3 3}\) are the atom type vector, coordinate matrix, and lattice matrix, respectively. Here, the \(i\)-th element \(a_{i}\) of \(=[a_{1},...,a_{n}]\) and the \(i\)-th column vector \(_{i}\) of \(=[_{1},...,_{n}]\) denote the atom type, _i.e._, atomic number and the 3D Cartesian coordinate of the \(i\)-th atom in the unit cell, respectively. The lattice matrix \(=[_{1},_{2},_{3}]\) is formed by three lattice vectors \(_{1},_{2},_{3}\) indicating how the atoms in a unit cell periodically repeat themselves in 3D space.

In this work, we consider the problem of generating periodic material structures with generative models. Formally, we are given a dataset \(=\{_{j}\}_{j=1}^{m}\) where each periodic material data \(_{j}\) is assumed to be sampled from the distribution \(p()\). Because of the physical symmetry properties in periodic materials [59; 9], \(p()\) is restricted to be invariant to the following symmetry transformations.

* **Permutation.** For any \(=(,,)\), if we permute \(\), _i.e._, exchange elements in \(\) to obtain \(^{}\), and use the same permutation order to permute the column vectors of \(\) to obtain \(^{}\), we actually change nothing but atom orders in unit cell representations. Hence, let \(^{}=(^{},^{},)\), the probability densities of \(\) and \(^{}\) are actually the same, _i.e._, \(p()=p(^{})\).
* **Rotation and translation.** For any \(=(,,)\), we can rotate and translate its atom positions in 3D space to obtain a new material \(^{}=(,^{},^{})\), where \(^{}=+^{T}\) and \(^{}=\). Here \(^{3 3}\) is the rotation matrix satisfying \(^{T}=\), \(^{3}\) is the translation vector, and \(\) is an \(n\)-dimensional vector whose elements are all \(1\). It can be intuitively understood that rotation and translation do not change any internal structures of periodic materials, so \(\) and \(^{}\) are actually different representations of the same material, so \(p()=p(^{})\) should hold.

* **Periodic transformation.** Because every atom from a unit cell periodically repeats itself along lattice vectors in 3D space, any coordinate matrix \(^{3 n}\) has infinite number of periodically equivalent coordinate matrices. Formally, a periodically equivalent coordinate matrix \(}\) of \(\) can be obtained by periodic transformation as \(}=+\), where \(^{3 n}\) is an arbitrary integer matrix. Since \(}\) and \(\) are equivalent and the periodic transformations between them are invertible, we consider \(=(,,)\) and \(}=(,},)\) as the same material so \(p()=p(})\) should hold.

In the periodic material generation problem, our target is to learn a generative model \(p_{}()\) with parameters \(\) from the given dataset \(\) so that the model can capture the real data distribution \(p()\), and the learned generation model can generate a valid material structure \(\) with a high probability \(p_{}()\). In addition, we require the distribution \(p_{}()\) captured by the generation model to have the same symmetry-related restrictions as the real data distribution \(p()\). The main motivation of modeling symmetries comes from property optimization. A significant target of developing generative models for periodic materials is to generate novel periodic materials with desirable chemical properties (_e.g._, low energies). Notably, chemical properties are invariant to physical symmetry transformations. For instance, rotating a material structure in 3D space does not change its energy. In other words, chemical properties only depend on the 3D geometric information that is invariant to symmetry transformations (_e.g._, interatomic distances). Using symmetry-aware modeling forces generative models to only capture the distribution of these 3D geometric information, which facilitates searching materials with desirable properties in the latent space.

### An Overview of SyMat

Generally, to generate a new material \(=(,,)\), our proposed SyMat method first generates the atom type vector \(\) and lattice matrix \(\), then generates the coordinate matrix \(\) conditioned on \(\) and \(\). The probability of generating \(=(,,)\) can then be described as

\[p_{}()=p_{}()p_{}()p_{}(|,).\] (2)

Since the structures of atom types and lattices are relatively simple, we find that a VAE  model already has adequate capability to capture their distributions. Hence, we use a VAE model to generate \(\) and \(\). However, the structures of coordinates are much more complicated, so we use a powerful score-based diffusion model  for their generation. Next, we will elaborate the details of generating atom types and lattices in Section 3.3 and the details of generating coordinates in Section 3.4. An overview of the proposed SyMat method is illustrated in Figure 2.

Figure 2: Illustrations of training and generation process in our proposed SyMat method.

### Atom Type and Lattice Generation

For the generation of atom types and lattices, a natural idea is using the VAE model to directly generate and capture the distribution of \(\) and \(\). However, this fails to capture the invariance to symmetry transformations described in Section 3.1, including the permutation invariance of \(\) and rotation invariance of \(\). To tackle this issue, we transform \(\) and \(\) to items that are invariant to symmetry transformations, and make these items be the direct generation targets of the VAE model. Specifically, for \(=[a_{1},...,a_{n}]\), we can count the number of atoms for every atom type existed in \(\), and represent \(\) with an unordered \(k\)-element atom type set \(=\{(e_{1},n_{1}),...,(e_{k},n_{k})\},\) which indicates that for \(i=1,...,k\), there exist \(n_{i}\) atoms with the atom type \(e_{i}\) in \(\). We can easily find that \(\) is invariant to any permutations on \(\) so we use \(\) as the direct generation targets. Besides, for the lattice matrix \(=[_{1},_{2},_{3}]\), we do not generate the three lattice vectors \(_{1},_{2},_{3}\) directly. Instead, we use six rotation-invariant items as the generation targets, including three lattice lengths \(=[_{1},_{2},_{2}]\), where \(_{i}=||_{i}||_{2}\), and three lattice angles \(=[_{12},_{13},_{23}]\), where \(_{ij}\) is the angle between \(_{i}\) and \(_{j}\). Overall, we transform \(\) and \(\) to generation targets \(\), \(\), \(\) so that the generation process and captured distributions \(p_{}()\), \(p_{}()\) are ensured to be symmetry-aware.

The VAE model used for generating \(\), \(\), and \(\) consists of an encoder model and a decoder model. The encoder model is based on a 3D graph neural network (GNN) that takes a material \(=(,,)\) as inputs and outputs a \(d\)-dimensional latent variable \(^{}^{d}\) and an \(f\)-dimensional latent variable \(^{}^{f}\). This 3D GNN employs the symmetry-aware SphereNet  architecture so \(^{}\), \(^{}\) will not change if applying any transformations described in Section 3.1 to the input material. We will introduce more details of this 3D GNN model in Appendix B. The decoder model is composed of four multi-layer perceptrons (MLPs) including MLP\({}^{}\), MLP\({}^{k}\), MLP\({}^{n}\), MLP\({}^{}\), which are used to predict \(=\{(e_{1},n_{1}),...,(e_{k},n_{k})\}\), \(=[_{1},_{2},_{3}]\), and \(=[_{12},_{13},_{23}]\) from the latent variables \(^{}\) and \(^{}\). Specifically, let \(E\) be the number of all considered atom types and \(N\) be the largest possible number of atoms that can exist in a material, MLP\({}^{}\) predicts a vector \(_{c}^{E}\) which contains the existing probability for each of the \(E\) atom type from the input \(^{}\), and MLP\({}^{k}\) predicts the size \(k\) of the set \(\) from the input \(^{}\). The \(k\) atom types \(e_{1},...,e_{k}\) with top-\(k\) probabilities in \(_{e}\) are chosen as the atom types in \(\), and MLP\({}^{n}\) predicts the number of atoms \(n_{1},...,n_{k}\) for them, where each \(n_{i}\) is predicted from \(e_{i}\) and \(^{}\). Here, the prediction of \(_{e}\) is considered as \(E\) binary classification tasks for each of \(E\) atom types, and the prediction of \(k\) and \(n_{1},...,n_{k}\) are both considered as \(N\)-category classification tasks. Besides, MLP\({}^{}\) is used to predict lattice items \([,]=[_{1},_{2},_{3},_{12},_{13},_{23}]\) from \(^{}\), which is considered as a regression task.

We now describe the training and generation process of the VAE model. When training the VAE model on a material dataset \(\), for any material \(=(,,)\) in \(\), the encoder model first maps it to latent variable \(^{}\) and \(^{}\). Afterwards, the decoder model uses \(^{}\) and \(^{}\) to reconstruct the exact \(\), \(\), and \(\) obtained from \(\) and \(\). The VAE model is optimized to minimize the reconstruction error of \(\), \(\), \(\) together with the KL-distance between \(^{}\), \(^{}\) and the standard Gaussian distribution \((,)\). The reconstruction error losses are defined as cross entropy loss and minimum squared error loss for classification and regression tasks, respectively. After the model is trained, we can generate \(\) and \(\) by first sampling latent variables \(^{}\), \(^{}\) from \((,)\), then using the decoder to map \(^{}\), \(^{}\) to \(\), \(\), \(\). Finally, we can produce \(\) from \(=\{(e_{1},n_{1}),...,(e_{k},n_{k})\}\) as

\[=[,...,e_{1}}_{n_{1}},,...,e_{2}}_{n_{2 }},...,,...,e_{k}}_{n_{k}}],\]

and produce \(\) from \(\), \(\) by constructing three lattice vectors with lengths in \(\) and pairwise angles in \(\). The detailed procedure of producing three lattice vectors is described in Appendix B.

### Coordinate Generation

After the atom type vector \(\) and lattice matrix \(\) are generated, our method will generate the coordinate matrix \(\) conditioned on \(\) and \(\). We use a score-based diffusion model for coordinate generation. However, because the original score-based diffusion model proposed by Song and Ermon  does not consider any invariance to symmetry transformations in data distributions, we cannot directly apply its theoretic framework to coordinate generation. To overcome this limitation, we propose a novel probabilistic modeling process to calculate the score function of \(\), _i.e._, the score matrix \(_{} p(|,)\), and design the architecture and training framework of the score model toachieve invariance to all symmetry transformations of crystal materials. We will elaborate the details of our proposed coordinate generation framework in the next paragraphs.

We first elaborate the restrictions of the score matrix \(_{} p(|,)\) that is supposed to be captured by the score model. By the following Proposition 3.1 (see its proof in Appendix A.1), we can show that if the material distribution \(p()\) is invariant to all symmetry transformations described in Section 3.1, the score matrix \(_{} p(|,)\) will be invariant to translation and periodic transformations, and equivariant to permutation and rotation transformations.

**Proposition 3.1**.: _If the material distribution \(p()\) is invariant to permutation, rotation, translation, and periodic transformations described in Section 3.1, \(_{} p(|,)\) will satisfy the following properties: (1) \(_{} p(|,)\) is equivariant to permutations on \(\) and \(\); (2) \(_{+^{T}} p(+^{T}| ,)=_{} p(|,)\) holds for any \(^{3 3},^{T}=\) and \(^{3}\); (3) \(_{+} p(+|,)=_{ } p(|,)\) holds for any \(^{3 n}\)._

To satisfy all properties in Proposition 3.1, we formulate \(_{} p(|,)\) as a function of score functions of edge distances in a graph created by multi-graph method . For a periodic material \(\) with coordinate matrix \(=[_{1},...,_{n}]\) and lattice matrix \(\), multi-graph method produces an \(n\)-node undirected graph on \(\). In this graph, the node \(i\) corresponds to the \(i\)-th atom in the unit cell, and an edge is added between any two nodes \(i\), \(j\) if one of the interatomic distances between them is smaller than a pre-defined cutoff \(r\). Here, the interatomic distances between \(i\), \(j\) are the distances between their corresponding atoms in the complete infinite structure of \(\), including both the distance within the unit cell and the distances crossing the unit cell boundary. Formally, the set of all edges in the graph constructed on \(\) can be written as \(()=\{(i,j,):||_{i}+-_{j}||_{2} r,^{3},1 i,j n\}\). Note that there may exist more than one edges connecting the nodes \(i\), \(j\) if more than one interatomic distances between them is smaller than \(r\). Let \(d_{i,j,}=||_{i}+-_{j}||_{2}\) be the distance of the edge \((i,j,)\), we consider \( p(|,)\) as a function of the distances of all edges in \(()\). Denoting \(_{i}\) as the score function of \(_{i}\), then \(_{} p(|,)=[_{1},...,_{n}]\). From the chain rule of derivatives, we can calculate \(_{i}\) as

\[_{i}=_{(j,)(i)}_{d_{i,j,}} p( |,)_{_{i}}d_{i,j,}=_{(j,) (i)}s_{i,j,}_{i}+-_{j}} {d_{i,j,}},\] (3)

where the scalar \(s_{i,j,}=_{d_{i,j,}} p(|,)\) is the score function of the distance \(d_{i,j,}\) and \((i)=\{(j,):(i,j,)()\}\). With this probabilistic modeling process, \(_{} p(|,)\) can be approximated by first approximating \(s_{i,j,}\) for every edge in the multi-graph representation of \(\), then calculating each column vector of \(_{} p(|,)\) by Equation (3). By the following Proposition 3.2 (see its proof in Appendix A.2), we can show that if \(s_{i,j,}\) is invariant to all symmetry transformations described in Section 3.1 for every edge \((i,j,)\), the score matrix \(_{} p(|,)\) will satisfy all properties in Proposition 3.1.

**Proposition 3.2**.: _For \(_{} p(|,)=[_{1},...,_{n}]\) where each \(_{i}\) is calculated by Equation (3) on a multi-graph representation of \(=(,,)\), if \(s_{i,j,}\) is invariant to permutation, rotation, translation, and periodic transformations described in Section 3.1 for any edge \((i,j,)\), then the calculated \(_{} p(|,)\) will always satisfy the properties in Proposition 3.1._

In our method, we use a 3D GNN model as the score model \(_{}()\) to approximate \(_{} p(|,)\). \(_{}()\) takes the multi-graph representation of \(\) as input and outputs \(o_{i,j,}\) as the approximated \(s_{i,j,}\) at every edge \((i,j,)\) in the input graph. We use SphereNet  as the backbone architecture of \(_{}()\), which ensures that the output \(o_{i,j,}\) is always invariant to any symmetry transformation. More details about SphereNet will be introduced in Appendix B. To train the score model, we follow the most common operations in denoising score matching framework . Specifically, for a material \(=(,,)\) in the dataset, we will perturb it to multiple noisy materials by a sequence of Gaussian noises with different noise magnitude levels \(\{_{t}\}_{t=1}^{T}\), in which \(_{1}>_{2}>...>_{T}\). Let the noisy material at the \(t\)-th noise level be \(}=(,},)\), the noisy coordinate matrix \(}=[}_{1},...,}_{n}]\) is obtained by adding Gaussian noise \((0,_{t}^{2})\) to \(\). The score model \(_{}()\) is trained to predict the denoising score matrix \(_{}} p_{_{t}}(}|,,)=[}_{1},...,}_{n}]\) from \(}\). Here, each \(}_{i}\) is calculated in a similar way as in Equation (3) with the approximated distance score \(_{i,j,}=_{_{i,j,}} p_{_{t}} (}|,,)\), where \(_{i,j,}=||}_{i}+-}_{j}||_{2}\). Motivated from the strategies of existing methods [30; 42; 55], we model the distribution of \(_{i,j,}\) as a Gaussian distribution \((_{i,j,},_{t}^{2})\), where the computation process of the mean \(_{i,j,}\) and the variance \(_{t}^{2}\) is described in Appendix B. We can calculate \(_{i,j,}\) directly by taking the derivative of the mathematical formula of this Gaussian distribution. The score model \(_{}()\) is trained to minimize the difference between the output \(o_{i,j,}\) from \(_{}()\) and \(_{i,j,}\) for every edge \((i,j,)\) in \(}\) with the loss \(\):

\[=_{t=1}^{T}_{t}^{2}_{ {},}[_{(i,j,)(}) }||}}{_{t}}+_{i,j, {k}}-_{i,j,}}{_{t}^{2}}||_{2}^{2}].\]

After the score model is trained, we can use it to generate coordinate matrix \(\) from given \(\) and \(\) with annealed Langevin dynamics sampling algorithm . Specifically, we first randomly initializes a coordinate matrix \(_{0}\), then starting from \(_{0}=(,_{0},)\), we iteratively update \(_{t-1}=(,_{t-1},)\) to \(_{t}=(,_{t},)\) (\(t=1,...,T\)) with the approximated score matrix \(_{}(_{t-1})\) by running multiple Langevin dynamics sampling steps. See Algorithm 1 for the detailed coordinate generation algorithm pseudocodes.

``` Input:\(\), \(\), atom number \(n\), noise magnitudes \(\{_{t}\}_{t=1}^{T}\), step size \(\), step number \(q\), score model \(_{}()\)  Sample \(_{0}^{3 n}\) from uniform distribution \(U(0,1)\) and set \(_{0}=_{0}\) for\(t=1\)to\(T\)do \(_{t}=_{t-1}\) \(_{t}=_{t}^{2}/_{T}^{2}\) for\(j=1\)to\(q\)do \(_{t}=(,_{t},)\)  Sample \(^{3 n}\) from \((,)\)  Obtain the approximated edge distance score from \(_{}()\) which takes \(_{t-1}\) as inputs Obtain \(_{}(_{t-1})=[_{1},...,_{n}]\) where each \(_{i}\) is computed by Equation (3) with edge distance scores. \(_{t}=_{t}+_{t}_{}(_{t})+ }\) endfor  endfor  Output \(_{T}\) as the finally generated coordinate matrix ```

**Algorithm 1**Langevin Dynamics Sampling Algorithm for Coordinate Generation

### Discussions and Relations with Prior Methods

**Advantages and limitations.** In our method, the atom type vector and lattice matrix are first transformed to items that are invariant to symmetry transformations, then a VAE model is used to capture the distributions of these items. In addition, our method adopts powerful score-based diffusion models to generate atom coordinates, and a novel probabilistic modeling framework for score approximation is employed to satisfy all symmetry-related restrictions. With all these strategies, our method successfully incorporates physical symmetries of periodic materials into generative models, thereby capturing the underlying distributions of material structures more effectively. We will show these advantages through experiments in Section 4. The major limitations of our method lie in that the speed of generating atom coordinates with score-based diffusion models is slow because running thousands of Langevin dynamics sampling steps is needed, and our method cannot be applied to non-periodic materials. We leave more discussions about limitations and broader impacts in Appendix C.

**Motivations in Model Design.** The model design of our SyMat method has the following three motivations. (1) First, the structures of atom types and lattices are relatively simple and their symmetry-invariant representations (_i.e._, atom type sets, lattice lengths and angles) are low-dimensional vectors. Their distributions are simple enough to be captured by VAE models. Also, VAE models are faster than diffusion models in generation speed. Hence, we use VAE models for atom type and lattice generation. (2) Second, the structure of atom coordinates is much more complicated than atom types or lattices, so we use more powerful score-based diffusion models to generate them. Moreimportantly, using score-based diffusion models for atom coordinates enables us to trickily convert the prediction of coordinate scores to that of interatomic distance scores by the chain rule of derivatives. This strategy maintains invariance to rotation, translation and periodic transformations. We think it is hard to develop such a symmetry-aware probabilistic modeling for other generative models. Hence, we use score-based diffusion models for coordinate generation. (3) Third, SphereNet is chosen as the backbone network of our model. SphereNet is a 3D graph neural network for 3D graph representation learning. It has powerful capacities in 3D structure feature extraction because it considers complete 3D geometric information contained in pairwise distances, line angles and plane angles (torsion angles). Also, the features extracted by SphereNet are invariant to rotation, translation and periodic transformations when input 3D graphs are created by multi-graph method. Because of its powerful capacity and symmetry-aware feature extraction, we use SphereNet as the backbone network.

**Relations with prior methods.** Here we will discuss several studies that are related to our work. Some studies [42; 30] have also applied score-based diffusion models to generate atom coordinates from molecular graphs, but there are not periodic structures in 3D molecules. Differently, keeping invariant to periodic transformations is significant in periodic material generation, and our score-based diffusion model uses periodic invariant multi-graph representations of materials as inputs to satisfy this property. Besides, compared with a recently proposed periodic material generation method CDVAE , our SyMat has two major differences. (1) First, to generate the atom type vector, CDVAE generates total atom numbers and compositions (the proportion of atom numbers for every atom type to the total atom number) by a VAE model, in which compositions are vectors composed of continuous numbers. While compositions have complicated structures and are hard to predict, SyMat uses relatively simpler atom type sets as generation targets and the prediction of them can be easily converted to integer prediction or classification problems (see Section 3.3). (2) Second, in coordinate generation, CDVAE also uses the denoising score matching framework, but the denoising score matrix \(_{}} p_{_{t}}(}|,,)\) is calculated as the direct difference between \(}\) and a coordinate matrix obtained by aligning \(\), which makes \(_{}} p_{_{t}}(}|,,)\) not invariant to translations on \(}\). However, SyMat calculates it from the edge distance score functions to ensure invariance to all symmetry transformations (see Section 3.4). In addition, another two studies, PGD-VAE  and DiffCSP , are also related to our SyMat approach. PGD-VAE proposes a VAE model for periodic graph generation. However, PGD-VAE is fundamentally different from SyMat in that it only generates 2D periodic topology graphs without 3D structures, while SyMat is developed for 3D periodic material structures. PGD-VAE cannot be applied to 3D periodic materials so we do not compare SyMat with PGD-VAE in our experiments. DiffCSP proposes a novel method for generating 3D periodic material structures from their atom types. Different from SyMat, DiffCSP uses denoising diffusion models to jointly generate lattices and atom coordinates. In addition, DiffCSP does not generate atom types of periodic materials, but lattices and atom coordinates from the input atom types, so DiffCSP cannot be applied to design novel periodic materials from scratch. Hence, we do not compare SyMat with DiffCSP in our experiments as all our experiments evaluate the performance of different methods in generating novel periodic materials.

## 4 Experiments

In this section, we evaluate our proposed SyMat method in two periodic material generation tasks, including random generation and property optimization. We show that our proposed SyMat can achieve promising performance in both tasks.

### Experimental Setup

**Data.** We evaluate SyMat on three benchmark datasets curated by Xie et al. , including Perov-5 [3; 2], Carbon-24 , and MP-20 . Perov-5 is a dataset with a collection of 18,928 perovskite materials. The chemical element compositions of all materials in Perov-5 can be denoted by a general chemical formula ABX\({}_{3}\), which means that there are 3 different atom types and 5 atoms in each unit cell. The Carbon-24 dataset we used has 10,153 materials. All these material structures consist of only carbon elements and have 6 - 24 atoms in each unit cell, and the 3D structures of them are obtained by DFT simulation. MP-20 is a dataset curated from Materials Project  library. It includes 45,231 materials with various structures and compositions, and in all materials, there exist at most 20 atoms in each unit cell. For all three datasets, we split them with a ratio of 3:1:1 as training, validation, and test sets in our experiments.

**Tasks.** We evaluate the performance of SyMat in random generation and property optimization tasks. In the random generation task, SyMat generates novel periodic materials from randomly sampled latent variables and we employ a variety of validity and statistic metrics to evaluate the quality of the generated periodic materials. In the property optimization task, SyMat is evaluated by the ability of discovering novel periodic materials with good properties. Besides, to show that latent representations are informative enough to reconstruct periodic materials, we also evaluate the performance by the material reconstruction task. See Appendix D.2 for experiment results of this task.

**Baselines.** We compare SyMat with two early periodic material generation methods FTCP  and Cond-DFC-VAE , which generate material structures through generating Fourier-transformed crystal property matrices and 3D voxel images with VAE models, respectively. Note that Cond-DFC-VAE can only be used to generate cubic systems, so it is only used for Perov-5 dataset in which materials have cubic structures. In addition, we compare with an autoregressive 3D molecule generation method G-SchNet , and its variant P-G-SchNet that incorporates periodicity in G-SchNet. The latest periodic material generation method CDVAE  is also compared with our method. Note that all these baseline methods are compared with SyMat in the random generation task, but G-SchNet and P-G-SchNet are not compared in the property optimization task because they cannot produce latent representations with fixed dimensions for different periodic materials.

### Random Generation

**Metrics.** In the random generation task, we adopt seven metrics to evaluate physical and statistic properties of materials generated by our method and baseline methods. We evaluate the composition validity and structure validity, which are the percentages of generated materials with valid atom type vectors and 3D structures, respectively. Here, an atom type vector is considered as valid if its overall charge computed by SMACT package  is neutral, and following Court et al. , a 3D structure is considered as valid if the distances between any pairwise atoms is larger than 0.5A. In addition, we evaluate the similarity between the generated materials and the materials in the test set by five statistic metrics, including the earth mover's distance (EMD) between the distributions in chemical element number, density (g/cm\({}^{3}\)), and energy predicted by a GNN model. Also, we evaluate the percentage of the test set materials that cover at least one of the generated materials (COV-R), and the percentage of generated materials that cover at least one of the test set materials (COV-P). All seven metrics are evaluated on 10,000 generated periodic materials. See Appendix D.1 for more information about evaluation metrics and experimental settings in the random generation task.

    &  &  & Structure & \# Element & Density & Energy & ^{}\)} & ^{}\)} \\  & & validity\({}^{}\) & validity\({}^{}\) & EMD\({}^{}\) & EMD\({}^{}\) & & & \\   & FTCP & 54.24\% & 0.24\% & 0.6297 & 10.27 & 156.0 & 0.00\% & 0.00\% \\  & Cond-DFC-VAE & 82.95\% & 73.60\% & 0.8373 & 2.268 & 4.111 & 77.80\% & 12.38\% \\  & G-SchNet & 98.79\% & 99.92\% & 0.0368 & 1.625 & 4.746 & 0.25\% & 0.37\% \\  & P-G-SchNet & **99.13\%** & 79.63\% & 0.4552 & 0.2755 & 1.388 & 0.56\% & 0.41\% \\  & CDVAE & 98.95\% & **100.00\%** & **0.0628** & **0.1258** & **0.0264** & 99.50\% & **98.93\%** \\  & SyMat (ours) & 97.40 \% & **100.00\%** & **0.0177** & 0.1893 & 0.2364 & **99.68\%** & 98.64\% \\   & FTCP & – & 0.08\% & – & 5.206 & 19.05 & 0.00\% & 0.00\% \\  & G-SchNet & – & 99.94\% & – & 0.9427 & 1.320 & 0.00\% & 0.00\% \\  & P-G-SchNet & – & 48.39\% & – & 1.533 & 134.7 & 0.00\% & 0.00\% \\  & CDVAE & – & **100.00\%** & – & 0.1407 & **0.2850** & **100.00\%** & **99.98\%** \\  & SyMat (ours) & – & **100.00\%** & – & **0.1195** & 3.9576 & **100.00\%** & 97.59\% \\   & FTCP & 48.37\% & 1.55 & 0.7363 & 23.71 & 160.9 & 5.26\% & 0.23\% \\  & G-SchNet & 75.96\% & 99.65\% & 0.6411 & 3.034 & 42.09 & 41.68\% & 99.65\% \\   & P-G-SchNet & 76.40\% & 77.51\% & 0.6234 & 4.04 & 2.448 & 44.89\% & 99.76\% \\   & CDVAE & 86.70\% & **100.00\%** & 1.432 & 0.6875 & **0.2778** & **99.17\%** & 99.64\% \\   & SyMat (ours) & **88.26\%** & **100.00\%** & **0.5067** & **0.3805** & 0.3506 & 98.97\% & **99.97\%** \\   

Table 1: Random generation performance on Perov-5, Carbon-24, and MP-20 datasets. Here \(\) means higher metric values lead to better performance, while \(\) means the opposite. Because all materials in the Carbon-24 dataset are composed of only carbon atoms, all methods easily achieve 100% in composition validity and 0.0 in # element EMD so we do not use these two metrics. Also, Cond-DFC-VAE can only be used to Perov-5 dataset in which materials have cubic structures. **Bold** and underline numbers highlight the best and second best performance, respectively.

**Results.** The random generation performance results of all methods on three datasets are presented in Table 1. Among the total 19 metrics over three datasets in the table, our SyMat method achieves top-1 performance in 11 metrics and top-2 performance in 17 metrics. Particularly, SyMat can achieve excellent performance in composition and structure validity, which demonstrates that SyMat can accurately learn the rules of forming chemically valid and stable periodic materials so it generates chemically valid periodic materials with high chances. Overall, SyMat achieves promising performance in the random generation task, showing that SyMat is an effective approach to capture the distribution of complicated periodic material structures.

We visualize some generated periodic materials in Figure 3 of Appendix E, and use additional metrics to evaluate the diversity of the generated periodic materials in Appendix D.3. To demonstrate the effectiveness of coordinate generation module in SyMat, we conduct an ablation study using several evaluation metrics in the random generation task and present this part in Appendix D.4.

### Property Optimization

**Metrics.** In the property optimization task, we evaluate the ability of SyMat in discovering novel periodic materials with low energies. We jointly train the SyMat model with an energy prediction model that predicts the energies from the latent representations. Afterwards, we follow the evaluation procedure in  to optimize the latent representations of testing materials with 5000 gradient descent steps, decode 100 periodic materials from the optimized latent representations to periodic materials, and report the success rates (SR), _i.e._, the rate of decoded materials whose properties are in the top 5%, 10%, and 15% of the energy distribution in the dataset. We use the same evaluation procedure to baseline methods and compare them with SyMat in optimization success rates.

**Results.** The property optimization performance results of all methods on three datasets are summarized in Table 2. On three datasets, SyMat outperforms all baseline methods in optimization success rates, showing that SyMat has the highest chances to generate periodic materials with low energies. This demonstrates that SyMat models have strong capacities in discovering novel periodic materials with good properties. The good performance of SyMat in the property optimization method shows that it can be an effective tool for designing novel periodic materials with desired properties.

We visualize the changes of material structures and energies of some periodic materials after property optimization in Figure 4 of Appendix E. We also visualize the material energy distribution before and after property optimization by SyMat models in Figure 5 of Appendix E.

## 5 Conclusion

We propose SyMat, a novel deep generative model for periodic material generation. SyMat achieves invariance to physical symmetry transformations of periodic materials, including permutation, rotation, translation, and periodic transformations. In SyMat, atom types and lattices of materials are generated in the form of atom type sets, lattice lengths and lattice angles with a VAE model. Additionally, SyMat uses a score-based diffusion model based on a symmetry-aware coordinate diffusion process to generate atom coordinates. Experiments on random generation and property optimization tasks show that SyMat is a promising approach for discovering novel materials. In the future, we will study the problem of accelerating atom coordinate generation in SyMat.

    &  &  &  \\   & SR5 & SR10 & SR15 & SR5 & SR10 & SR15 & SR5 & SR10 & SR15 \\  FTCP & 0.06 & 0.11 & 0.16 & 0.00 & 0.00 & 0.00 & 0.02 & 0.04 & 0.05 \\ Cond-DFC-VAE & 0.55 & 0.64 & 0.69 & – & – & – & – & – & – \\ CDVAE & 0.52 & 0.65 & 0.79 & 0.00 & 0.06 & 0.06 & 0.78 & 0.86 & 0.90 \\ SyMat (ours) & **0.73** & **0.80** & **0.87** & **0.06** & **0.13** & **0.13** & **0.92** & **0.97** & **0.97** \\   

Table 2: Property optimization performance on Perov-5, Carbon-24, and MP-20 datasets. We report the success rate (SR), _i.e._, the rate of periodic materials that can achieve top 5%, 10%, and 15% of the property distribution in the dataset after being optimized. Cond-DFC-VAE can only be used to Perov-5 dataset in which materials have cubic structures. **Bold** and underline numbers highlight the best and second best performance, respectively.