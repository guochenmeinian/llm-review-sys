# Horospherical Decision Boundaries for Large Margin Classification in Hyperbolic Space

Xiran Fan

Department of Statistics

University of Florida

fanxiran@ufl.edu

&Chun-Hao Yang

Institute of Statistics and Data Science

National Taiwan University

chunhaoy@ntu.edu.tw

&Baba C. Vemuri

Department of CISE

University of Florida veemuri@ufl.edu

###### Abstract

Hyperbolic spaces have been quite popular in the recent past for representing hierarchically organized data. Further, several classification algorithms for data in these spaces have been proposed in the literature. These algorithms mainly use either hyperplanes or geodesics for decision boundaries in a large margin classifiers setting leading to a non-convex optimization problem. In this paper, we propose a novel large margin classifier based on horospherical decision boundaries that leads to a geodesically convex optimization problem that can be optimized using any Riemannian gradient descent technique guaranteeing a globally optimal solution. We present several experiments depicting the competitive performance of our classifier in comparison to SOTA.

## 1 Introduction

Hyperbolic space, a non-Euclidean space with constant negative curvature, has been shown  to be effective for representing hierarchically organized data. For example, authors in  showed that a tree can be embedded in a hyperbolic space with arbitrarily small distortion. The main reason for this is that a hyperbolic space can be regarded as a continuous version of trees - the volume of the space grows _exponentially_ as one moves away from the center in hyperbolic space. This matches the growth pattern of the number of nodes in a tree which grows _exponentially_ as the depth of the tree increases. Hyperbolic space embedding has been shown to be a promising approach for representing data with a (latent) hierarchical structure .

Recently, representation of data in hyperbolic space for the fundamental tasks of unsupervised and supervised learning has been popularized in various contexts, e.g., dimensionality reduction , clustering , large-margin classifier , regression , etc. Existing 'linear' classifiers in hyperbolic spaces are predominantly based on _geodesics_ i.e., using geodesics as decision boundaries. In , the decision boundary is chosen to be the intersection of the hyperboloid model and a hyperplane in the ambient space, which in this case is the Minkowski space. Then, the support vector machine (SVM) in hyperbolic space is formulated as a nonconvex optimization problem. In , authors followed the same parameterization of the hyperbolic geodesic decision plane and provided a series of algorithms to provably learn large margin classifiers in hyperbolic space. However, as pointed out by , the algorithm in  fails to converge in practice. Authors in  used the Poincare ball model and parameterized the geodesic decision plane as a hyperplane mapped using the exponential map from the _tangent space_ at some reference point. They first constructed convex hulls for each data cluster in the hyperbolic space and the reference point is then chosen to be the midpointbetween different convex hulls. Then they apply a _Euclidean_ perceptron/SVM algorithm to data lifted into the tangent space at the aforementioned reference point. Although the optimization problem in the tangent space is convex, the procedure of the tangent space approximation introduces inaccuracies and distortions. Moreover, convex hull learning is highly unstable and their implementation is only applicable to the 2-dimensional hyperbolic space.

Finally, it is worth mentioning that linear classification within hyperbolic space, which can be considered as the last layer, referred to as the hyperbolic logistic regression (LR), is a fundamental component of hyperbolic neural networks (HNNs) [16; 27]. The calculation of logits in this layer is based on the distances between samples and the geodesic decision boundary. Notably, this hyperbolic LR employs a geodesic decision boundary but is not a large-margin classifier.

### Horospherical Decision Boundaries for Classification in Hyperbolic Sapce

_Horospheres_, which are the level sets of the _Busemann function_ in hyperbolic spaces, are the analogs of Euclidean hyperplanes . Horospheres (horocycles) are contained in the Poincare ball (disk) and are tangential to the ball (disk) at an ideal point as shown in Figure 1. A collection of horospheres centered at the same ideal point are parallel to each other and the lengths of geodesic segments between two horospheres are all equal, just as the lengths of line segments between parallel hyperplanes in Euclidean space are all equal. This property of horospheres was explored by  to develop a dimensionality reduction method for data in hyperbolic space. By using horospherical projection, they are able to preserve the distance information in the original data. However, there is no literature on constructing a 'linear' classifier in hyperbolic space using horospheres as the decision boundaries although the horospheres are the hyperbolic equivalent of Euclidean hyperplanes. Therefore, it is natural to consider the use of horospheres as decision boundaries for classification in hyperbolic spaces. In this work, we propose a novel _hyperbolic large-margin classifier using horospheres as decision boundaries in the Poincare model_. We term this classifier as a _HoroSVM_. The horospheres are well-defined in the Poincare ball model. A toy example as shown in Figure 2 demonstrates the advantage of horospherical decision boundaries over geodesic decision boundaries. As the tree-structured data grows in depth, leaf nodes are embedded closer to each other within a subtree and among different subtrees. One of the classification problems in hyperbolic space is to determine whether a node belongs to a chosen subtree given the embedding. For comparison purposes, the decision boundaries of HoroSVM (Figure 2(a)) and hyperboloid SVM  (Figure 2(b)) are shown in the figure. As evident, the horospherical decision boundary perfectly separates (the root node is excluded in training) the data while the geodesic decision boundary makes several mistakes on both positive and negative samples. We present a novel formulation of the classification problem in the hyperbolic space as a geodesically convex optimization problem on a Riemannian manifold. This optimization problem can be easily solved using any Riemannian gradient descent technique guaranteeing global optimality. Gradient-based optimizations for geodesically convex problems guaranteeing global optimal solutions are the topic of investigation in optimization literature and we refer the reader to  for detailed convergence analysis of several such optimization methods. Further, we empirically validate our method on several real and synthetic data sets.

It should be noted that a horosphere decision boundary has been used in some recent works [31; 28] in constructing HNNs. For example, authors in  proposed hyperbolic neuron models using the Busemann function as a generalization of the Euclidean inner product to extract horosphere features from data. Authors in  proposed a shallow fully-connected continuous network spanned by (hyperbolic) neurons, on noncompact symmetric space (including hyperbolic space) using the Helgason-Fourier transform. Authors in  produced Euclidean features from hyperbolic embeddings via the eigenfunctions of the Laplace operator in the hyperbolic space where the eigenfunctions involve horosphere features. Note that none of the above works developed a large margin classifier using the horosphere as a decision boundary. To the best of our knowledge, our work is the first in the

Figure 1: A 2-d Poincar√© disk model \(^{2}\) and its boundary \(^{2}=^{1}\). Given an ideal point \(^{2}\), the black lines and curves are hyperbolic geodesics starting (ending) at \(\) and the red circles are horocycles centered at \(\).

literature to present a convex optimization formulation of a large-margin classifier using a horosphere decision boundary in a hyperbolic space.

The rest of this paper is organized as follows. In Section 2, we present some background on hyperbolic geometry pertinent to the work presented here. In Section 3, we present our horospherical boundary-based classification methods. Experimental results are presented in Section 4 to demonstrate the advantage of our HoroSVM over competing hyperbolic classifiers. Finally, we conclude in Section 5.

## 2 Background

In this section, we review some basic concepts of hyperbolic geometry including the generalization of the Euclidean hyperplane to the hyperbolic space namely, the horosphere.

### Hyperbolic Space and the Poincare Ball Model

There are five isometric models of the hyperbolic space: the Poincare ball model, the Lorentz model, the Klein model, the upper-half space model, and the Hemisphere model . We choose the Poincare Ball model in this paper as it is easy to visualize and the Busemann function has a nice closed-form expression in this model. Note that the decision boundary of choice in our work is the level-set of the Busemann function namely, the horosphere.

An \(n\)-dimensional Poincare Ball model, denoted by \((^{n},g_{})\), consists of all points in an open ball of radius 1, i.e., \(^{n}=\{^{n}:\|\|<1\}\), and equipped with the Riemannian metric \(g_{}()=4(1-\|\|^{2})^{-2}g_{}\), where \(\|\|\) is the Euclidean \(L_{2}\) norm, and \(g_{}\) is the Euclidean metric. The geodesic distance between points \(,^{n}\) is \(d_{}(,)=^{-1}1+2-\|^{2 }}{(1-\|\|^{2})(1-\|\|^{2})}\).

### Horospheres

Geodesics, geodesic rays, and ideal pointsThe shortest path that connects two points in the Poincare Ball model is called a _geodesic segment_. A _geodesic ray_ is a geodesic segment that can be infinitely extended in one direction. We call the endpoint at infinity of a geodesic ray an _ideal point_. For \(^{n}\), ideal points form the boundary of the ball: \(^{n}=^{n-1}=\{x^{n}:\|\|=1\}\), where \(^{n-1}\) is the \((n-1)\)-dimensional hypersphere. The hypersphere \((^{n-1},g_{})\) is a Riemannian manifold equipped with the Riemannian metric \(g_{}=4(1+\|\|^{2})^{-2}g_{}\).

Busemann function Let \(^{n}\) be an ideal point and \(_{}:[0,)^{n}\) a geodesic ray pointing \(\). The _Busemann function_ is defined as

\[b_{}()=_{t}(d(_{}(t),)-t ),^{n}.\] (1)

Figure 2: A balanced tree with depth 6 and spread 4 embedded in a 2-d Poincar√© ball model using  is depicted in the figure. The orange plus node is the root of a chosen subtree, the blue dots are positive samples (nodes of the subtree) and the red dots are negative samples. (a) depicts a HoroSVM performance on the classification of positive and negative samples/nodes along with a zoomed-in version on its right. (b) depicts the geodesic boundary from the competing method, Hyperboloid SVM , along with the zoomed-in version to its right.

In the Poincare Ball model, Eq. (1) has a closed form \(:b_{}()=-\|^{2}}{\|-\|^{2}}\).

Horospheres In \(^{n}\), a horosphere is a \((n-1)\)-dimensional sphere that is internally tangent to \(^{n}\) at an ideal point. For a given \(^{n}\), the level sets of Busemann function \(b_{}()\) in the Poincare ball model is a series of horospheres tangent at \(\). Horospheres are hyperbolic hyperplanes in the sense that the corresponding construction in Euclidean space gives a hyperplane.

Given an ideal point \(^{n}\), the function defined by \(,x_{B}:x-b_{}(x)\) is constant over horosphere tangent at \(\).1 Hence any horosphere can be parameterized with an ideal point \(\) and an offset value \(b\) of the level set.

Let \(\) denote the set of horospheres of \(^{n}\). A horosphere \(\) can be parameterized by \(0<^{+}\)2, \(^{n-1}\), and \(b\) as

\[_{,,b}:=\{^{n}|,_{}-b=0\}.\] (2)

We will use \(\) or \(\). to represent a horosphere in different parameterizations hereafter.

## 3 Horospherical Boundary-based Classification

In this section, we present the key theoretical contributions of our work namely, a horosphere-based SVM classifier that involves formulating and solving a geodesically convex optimization problem. First, we present some preliminary facts and results about the horospheres. Then, we present the optimization problems for the horospherical perceptron and SVM along with analysis.

### Point to Horosphere Distance

While the distance from the origin \(\) to a horosphere has been known for decades  (Introduction 4.1, p.31), we present a natural generalization of previous results by providing a closed-form expression for measuring the hyperbolic distance from any arbitrary point \(^{n}\) to a given horosphere \(_{,,b}\). The following remark provides this result.

**Proposition 3.1**.: _Let \(_{,,b}\) be a horosphere. The hyperbolic distance of a point \(^{n}\) to a horosphere \(_{,,b}\) is given by_

\[d_{}(,_{,,b})=, _{}-b|}{}.\] (3)

Notice that it shares a similarity to the Euclidean distance of a point to a hyperplane. Before presenting the proof for Proposition 3.1, we recall the following Fact 3.2 and Lemma 3.3 from .

**Fact 3.2**.: _Given an ideal point \(\) and a point \(^{n}\), there is a unique horosphere passing through \(\) and tangent at \(\)._

**Lemma 3.3**.: _[_31_]_ _Let \(_{}\) be the set of horocycles of \(^{n}\) tangent at \(\). Given \(\), let \(_{,}\) be the unique horosphere that passes through \((/2)\) and tangent at \(\). Note that \(_{}=_{}\{_{,}\}\). We have the following two results: (i) the hyperbolic lengths of geodesic (that pass through \(\)) segments between \(_{_{1},}\) and \(_{_{2},}\) are equal to \(|_{1}-_{2}|\); (ii) \(,x_{}=\) for any \(_{,}\)._

Figure 3 shows a 2D Poincare disk model \(^{2}\) and its boundary \(^{1}\). The point \(o\) is the origin of the disk, \(^{2}\) is a point, and \(^{1}\) is a point at infinity (an ideal point). Two geodesics ending at the same \(\) from \(\) and \(o\) respectively are shown in the figure (black solid line/curve). The circle \(_{,,b}\) is a given horocycle tangent (red solid circle) at \(\). The hyperbolic distance \(d_{}(,_{,,b})\) between \(\) and \(_{,,b}\) is identified as the distance between \(\) and \(_{}\) where \(_{}\) is the projection of \(\) to \(_{,,b}\) along the geodesic ending at \(\). Let \(^{}\) (red dashed circle) be the unique horocycle that passes through \(\) and is tangent at \(\). Note that the lengths of all geodesic segments between two horocycles are the same. That is, \(d_{}(,_{,,b})=d_{}(,_{ })=d_{}(_{0},_{0})\), where \(_{0},_{0}\) are _horocyclic projections_ of \(,_{}\) along \(^{}\) and \(_{,,b}\) respectively.

Proof of Proposition 3.1.: Given a point \(^{n}\) and an ideal point \(^{n-1}\), let \(_{}\) be a horosphere tangent at \(\) and \(^{}_{}\) be the unique horosphere that passes through \(\). Write \(,_{}=_{}\) and then \(_{0}=(_{}/2)\) is the horospherical projection of \(\) along \(_{}\). For consistency in notation, we write \(^{}\) as \(_{_{},}\). Since the horosphere \(_{,,b}\) can be reparameterized as \(_{,}\), where \(=\), the hyperbolic distance from \(\) to \(_{,,b}\) is the hyperbolic distance between \(_{_{},}\) and \(_{,}\) which is \(|_{}-|=,_{}-b|}{}\) (by Lemma 3.3). This completes the proof. 

### Horospherical Decision Boundaries

We consider classification problems in hyperbolic space of the following form: \(^{n}\) denotes the feature space and \(=\{ 1\}\) denotes the binary label space. In the following, we denote the training set by \(S\). The decision rule using a horosphere as its decision boundary can be written as the following function \(f:\) where

\[f(;,,b)=(, _{}-b).\] (4)

The positive samples are expected to lie inside a horosphere while the negative samples are expected to lie outside a horosphere. This is analogous to the linear decision boundary in Euclidean space and we will build a horospherical perceptron and a horospherical SVM based on this decision boundary.

It should be noted that in \(^{n}\) the hyperplane \(_{a,,b}=\{^{n}|a,-b=0\}\) where \(a^{+},b\), \(^{n-1}\) is the hyperplane \(_{a,-,-b}\). However, the horospheres \(_{,,b}\) and \(_{_{},-b}\) respectively represent two distinct horospheres, centered at \(\) and \(-\) respectively. Let \(^{+}=\{_{,,b}|b>0\}\) and \(^{-}=\{_{,,b}|b<0\}\). Thus, \(^{+},^{-}\) and the radius of \(^{+}\) is less than \(1/2\) and the radius of \(^{-}\) is greater than \(1/2\). In most cases of classification in hyperbolic space, the positive samples are clustered near the boundaries. Hence, we restrict ourselves to finding a horosphere \(^{+}\) that separates data, instead of searching over \(\). Intuitively, we are looking for a'small' horosphere that captures the positive samples. We are now ready to present the Horospherical Perceptron followed by the Horospherical SVM.

### Horospherical Perceptron

The loss function for the proposed horospherical perceptron is given by

\[l(,,b;,y)=(0,-y(, _{}-b))\,,(,,b)^{+} ^{n-1}^{+},\] (5)

which is zero when the instance is classified correctly and is proportional to the signed distance of the instance from the horosphere when it is misclassified. The empirical loss for a given data set \(S\) is

\[L(,,b)=_{\{,y\} S}l(,,b; ,y)\] (6)

Hence, the optimal horosphere is learned by solving the above optimization problem on the manifold \(^{+}^{n-1}^{+}\), i.e.,

\[^{*},^{*},b^{*}=_{(,,b)}L(,,b)\] (7)

To further analyze this optimization problem, we first recall some facts about geodesic convexity.

**Definition 3.4**.: (Geodesically convex sets ). Let \((,g)\) be a Riemannian manifold. A set \(\) is said to be a geodesically convex set if, for any two points \(,\), the geodesic \(_{}\) that connects them is contained in \(\).

**Definition 3.5**.: (Geodesically convex/concave functions ) Let \(\) be a geodesically convex set. A function \(f:\) is said to be a geodesically convex function if, for any \(,\) the composition \(f_{}:\) is a convex function, where \(_{}:\) is a geodesic that connects \(,\). \(f\) is said to be a geodesically concave function if \(-f\) is a geodesically convex function.

Figure 3: The relationship between horocycles, geodesic, and the horocyclic projections in \(^{2}\).

**Theorem 3.6**.: _[_30_]_ _Let \(\) be a geodesically convex set. A function \(f:\) is geodesically convex if and only if its epigraph \((f)=\{(,c)|f() c\}\) is a convex set._

Now we present the main theoretical result of this paper.

**Theorem 3.7**.: _For a given training data sample \(\{,y\} S,0<\|\|<R<1\) (the hyperbolic feature \(\) neither lie on the center nor lie on the boundary), \(l(,,b;,y)\) is a geodesically convex function on \(^{+}^{+}\) and is a geodesically concave function on \(^{+}^{+}\), where_

\[=\{^{n-1}|y^{T}}{\|\|}>0\}^{n-1},=\{^{n-1}|y^{T}}{\|\|}<0 \}^{n-1}.\] (8)

_Note that both \(\) and \(\) are geodesically convex sets._

Proof.: Let \(l(,,b;,y)=(0,-g(,,b;,y))\) where \(g(,,b;,y)=y(,_{ }-b)\). Since \((0,-a)\) is a convex function in \(a\) and \(g()\) is linear in \(\) and \(b\), we only need to show that \(g()\), as a function of \(^{n-1}\), is geodesically convex (concave). Without loss of generality, let \(=1\) and \(b=0\). Also note that \(y\) is the label of data that takes values from \(\{-1,+1\}\) which may flip the inequality. It suffices to validate results for the positive sample, i.e, \(y=1\).

With a slight abuse of notation, let \(g(;)=g(1,,0;,1)=, _{}=\|^{2}}{\|-\|^{2}}\) defined on \(=\{^{n-1}|^{T}}{ \|\|}>0\}^{n-1}\). Since \(-()\) is decreasing and convex, we only need to check \(h(;)=\|-\|^{2}\) is geodesically convex on \(\), i.e, check that the epigraph of \(h\) is a convex set. Note that \(^{T}}{\|\|}=(_{})\) for \(^{n-1}\) where \(_{}=(,)\).

\[(h) =\{(,c)|\|-\|^{2} c\}\] (9) \[=\{(,c)|^{T}}{\| \|}\|}(1+\|\|^{2}-c)\}\] \[=\{(,c)|(_{}) d(c) \}=[d(c),)&d(c) 0\\ _{d}[d(c),)&d(c)>0\]

where \(d(c)\) is a real number depending on \(c\) and \(\|\|\) and \(_{d}=\{(,c)|(_{}) d(c)\}\) is the collection of unit vectors where the angle between the vectors given the data \(\) is small i.e., restricted to a small region on the sphere. The last equality follows from the definition of \(\) and \(_{d}\): if \(d(c) 0\), then \(\{:(_{}) d(c)\}=\). Similarly, if \(d(c)>0\), \(\{:(_{}) d(c)\}=\{ ^{n-1}|(_{}) d(c)\}:=_{d(c)}\). Both \(\) and \(_{d}\) are geodesically convex sets and this completes the proof. 

The convex sets \(,\) are the hemispheres of \(^{n-1}\) separated by the hyperplane \(\{^{n}|^{T}=0\}\) (the hyperplane has \(\) as its normal vector) in its ambient space \(^{n}\). Theorem 3.7 tells us that given one data sample \((,y)\), the optimal value described in Eq. (7) exists in \(^{+}^{+}\), and it is globally optimal. For a collection of training samples \(S=\{(_{i},y_{i})\}_{i=1}^{N}\), let \(_{i}=\{^{n-1}|y_{i}^{T} }{\|_{i}\|}>0\}\). If the data are separable by a horosphere, it follows that \(_{i=1}^{N}_{i}\) is non-empty and convex. Then the loss function given \(S\) is geodesically convex on \(^{+}_{i=1}^{N}_{i}^{+}\) and the global optimum can be obtained using any gradient-based optimization. Numerically, we apply a Riemannian gradient descent method on the entire space \(^{+}^{n-1}^{+}\) since \(g(,,b;,y)\) is continuous.

### Horospherical SVM

Given a horospherical decision boundary \(_{,,b}\) parameterized by \(^{n-1},^{+}\), and \(b\), the margin \(\) is the minimal distance from training samples \(S\) to the decision boundary:

\[(,,b)=_{\{,y\} S}y f(;,,b) d_{}(,_{,,b})=_{\{,y \} S}y,_{}-b)}{}.\] (10)

The maximum margin classifier can be obtained by solving the following optimization problem:

\[_{,,b}(,,b) s.t. y ,_{}-b)}{} (,y) S.\] (11)

**Theorem 3.8**.: _The maximum margin classification problem in hyperbolic space with horosphere as its decision boundary described in Eq. (11) is equivalent to the following optimization problem:_

\[_{,,b}^{2} s.t. y( ,_{}-b) 1(,y) S.\] (12)

The proof is analogous to that in the Euclidean case . Note that the margin is unchanged if we apply the following scale transformation: \(/\) and \(b b/\). We can also build a soft-margin horospherical SVM, dubbed HoroSVM, by minimizing the following loss function:

\[l(,,b;,y)=^{2}+C_{i=1}^{|S|}(0,1-y_{ i}(,_{i}_{}-b)).\] (13)

where \(C\) is a hyperparameter that controls the tradeoff between minimizing misclassification and maximizing margin.

It is easy to see that the same result as in Theorem 3.7 holds for the loss function in Eq. (13). That is, the loss function is a geodesically convex function on one geodesically convex subset of the parameter space and a geodesically concave function on the other geodesically convex subset of the parameter space. Recall that the idea behind proving that the loss function in the horospherical perceptron, \((0,-g())\), where \(g()=y(,_{}-b)\), is geodesically convex is based on the important fact that \((0,-a)\) is a convex function in \(a\). Similarly, the same idea applies to HoroSVM, where the hinge loss is used, and the loss function becomes \(^{2}+(0,1-g())\). Note that \((0,1-a)\) is also a convex function in \(a\) and \(^{2}\) is a convex function in \(\), these facts complete the proof of the desired property for the HoroSVM, which is analogous to Theorem 3.7 for horospherical perceptron.

We can then apply any Riemannian gradient descent optimization methods for updating the parameters in HoroSVM since the problem is an optimization problem over a product space of Riemannian manifolds, \(^{+}^{n-1}^{+}\). We refer the readers to  and  for more details about optimization techniques on Riemannian manifolds.

## 4 Experiments

In this section, we present several experimental results obtained from an application of our HoroSVM to synthetic data as well as real data sets used in published literature. Our implementation is based on Pymanopt  using the Riemannian conjugate gradient method  on Intel(R) Xeon(R) CPU E5-2683 v3 @ 2.00GHz.

### Network Data Set

Here, we follow the experimental setup in , and evaluate our HoroSVM over four real-world network data sets used by : karate (2 classes, 34 nodes ), polblogs (2 classes, 1224 nodes ), polbooks3 (3 classes, 105 nodes ), and football (12 classes, 115 nodes ).

The network data is embedded in a 2D hyperbolic space using the method of . Given the hyperbolic embeddings, we compare our HoroSVM with three other competing large margin classifiers: Euclidean SVM (even though it violates the hyperbolic geometry), hyperboloid SVM , and Poincare SVM . The absence of comparison with  in this experiment is due to two reasons. First,  aims to provide a theoretical understanding of hyperbolic spaces in classification, focusing on 'linearly' separable data (data that can be separated by a geodesic). They do not address extensions to nonlinearly separable data, which limits their applicability to many practical datasets. Second, for datasets that are linearly separable in hyperbolic space, the approach in  aligns with the hyperboloid SVM when adversarial training is not applied in .

For multiclass classification, a one-verses-rest strategy is applied. We conducted a five-fold cross-validation on each data set, where we chose the hyperparameter \(C\) from \(\{1,5,10\}\) during the cross-validation procedure. Note that a more extensive search space for \(C\) may lead to potential performance improvements. The mean of the F1 score followed by the standard deviation over fivetrials are summarized in Table 1. As evident from the table, our method yields the best results on all the data sets.

HoroSVM outperformed other methods on all four data sets. The data in karate are well-separated and thus both Euclidean SVM and hyperboloid SVM performed equally well. Our method outperforms the others since the horospheres have several nice properties, the most important of which is that the Busemann function whose level sets are the horospheres is a convex function that guarantees global optimality in the optimization. Notice that the performance of Poincare SVM on karate is inferior to others by a significant amount. The reason is that the performance of Poincare SVM is sensitive to the choice of the reference point. We demonstrate our performance gain on the remaining data sets, and our method is more consistent, compared to Euclidean SVM and hyperboloid SVM, in terms of lower standard deviation, on football data set where data exhibit a larger variance/spread.

### Subtree Classification in WordNet

A task of considerable interest in hyperbolic space classification problems is to determine whether a node belongs to a given subtree in the hyperbolic embedding. We obtained hyperbolic embeddings in various dimensions using the approach in  for WordNet 4 noun hierarchy (82,115 nodes). We consider four subtrees whose roots are the following synsets: ANIMAL.N.01, GROUP.N.01, WORKER.N.01, and MAMMAL.N.01.

We split all nodes in a subtree into positive training (80%) and test (20%) nodes and applied the same process to the remaining WordNet nodes to create negative training and test sets. The average F1 scores and the standard deviations over 3 trials are shown in Table 2. The number of positive training/test samples of each data set are listed as well. We exclude Poincare SVM from the comparisons in this task. The reason being, data are highly imbalanced in this task and the positive samples are clustered near the boundary. The reference point learned in Poincare SVM will be close to the boundary where the tangent approximation of data at this reference point is highly distorted, as opposed to the original hyperbolic embeddings. It is therefore hard to locate a hyperplane in the

   Methods &  Kanate \\  &  Polblogs \\  &  Polbooks \\  & 
 Football \\  \\  Euclidean SVM & 0.95 \(\) 0.06 & 0.92 \(\) 0.02 & 0.83 \(\) 0.03 & 0.29 \(\) 0.12 \\ Hyperboloid SVM & 0.95 \(\) 0.06 & 0.92 \(\) 0.01 & 0.83 \(\) 0.03 & 0.30 \(\) 0.14 \\ Poincar√© SVM & 0.78 \(\) 0.16 & 0.92 \(\) 0.02 & 0.84 \(\) 0.03 & 0.32 \(\) 0.04 \\ HoroSVM (Ours) & **0.98 \(\) 0.04** & **0.93 \(\) 0.01** & **0.85 \(\) 0.04** & **0.34 \(\) 0.06** \\   

Table 1: F1 scores for node classification on network datasets. Boldface indicates best performance.

   Methods &  animal.n.01 \\ 3218/798 \\  &  group.n.01 \\ 6649/1727 \\  &  worker.n.01 \\ 861/254 \\  & 
 mammal.n.01 \\ 953/228 \\  \\  Hyperboloid SVM (D = 2) & 0.53 \(\) 0.07 & 0.52 \(\) 0.01 & 0.54 \(\) 0.04 & 0.39 \(\) 0.03 \\  Hyperbolic LR (D = 2) & 0.46 \(\) 0.08 & 0.52 \(\) 0.04 & 0.54 \(\) 0.07 & 0.32 \(\) 0.10 \\ Hyperbolic LR (D = 5) & 0.95 \(\) 0.03 & 0.76 \(\) 0.07 & 0.80 \(\) 0.08 & 0.78 \(\) 0.04 \\ Hyperbolic LR (D = 10) & 0.96 \(\) 0.01 & 0.86 \(\) 0.05 & 0.84 \(\) 0.04 & 0.94 \(\) 0.04 \\  Euclidean SVM (D = 2) & 0.39 \(\) 0.01 & 0.39 \(\) 0.00 & 0.32 \(\) 0.02 & 0.20 \(\) 0.01 \\ Euclidean SVM (D = 5) & 0.95 \(\) 0.00 & 0.79 \(\) 0.01 & 0.38 \(\) 0.02 & 0.44 \(\) 0.01 \\ Euclidean SVM (D = 10) & 0.97 \(\) 0.00 & 0.91 \(\) 0.00 & 0.46 \(\) 0.04 & 0.72 \(\) 0.05 \\  HoroSVM (D = 2) & **0.57 \(\) 0.07** & **0.65 \(\) 0.01** & **0.62 \(\) 0.01** & **0.42 \(\) 0.01** \\ HoroSVM (D = 5) & 0.93 \(\) 0.01 & 0.88 \(\) 0.00 & 0.82 \(\) 0.04 & 0.88 \(\) 0.01 \\ HoroSVM (D = 10) & 0.95 \(\) 0.02 & 0.91 \(\) 0.01 & 0.86 \(\) 0.01 & 0.93 \(\) 0.02 \\   

Table 2: F1 scores for subtree classification on four subtrees of WordNet. Boldface indicates the best performance on 2D embeddings of each dataset.

tangent space that separates the lifted (mapped) data. In addition, the learning of the reference point is only applicable to 2D hyperbolic space.

As well known in the Euclidean SVM literature, a vanilla (unweighted) implementation of SVM performs poorly on extremely imbalanced data, we observed the same behavior in training HoroSVM on this task. We preprocessed the data by downsampling the majority class of samples (the negative samples) to train a robust model. Note that our HoroSVM can be naturally extended to a class/instance-weighted version by assigning a class/instance weight to the penalty term \(C\) for each sample, allowing us to address more general imbalanced data. Since there is no protocol for dealing with unbalanced data in training a hyperboloid SVM, we presented the Euclidean SVM results using the same preprocessed data for reference. In addition, we presented results of hyperbolic logistic regression (LR) , which is not a large-margin classifier on this task, where the imbalanced data is handled by sampling the equal number of negative and positive nodes in each mini-batch of size 16 during training.

Now, we highlight several results in Table 2. The superior performance of hyperboloid SVM over hyperbolic LR is expected, as both methods use geodesic decision boundaries but hyperboloid SVM aims to maximize the margin. However, the training of hyperboloid SVM is highly unstable as we mentioned earlier due to the non-convex optimization process. Euclidean SVM under-performs as it does not take into account the hyperbolic geometry. Our HoroSVM exhibits a significant improvement in predicting words in a subtree, as evidenced by higher F1 scores across all the subtrees. The small number of nodes within a subtree, compared to the whole WordNet, causes the nodes to cluster near the boundary in their hyperbolic embeddings. Thus, horosphere is an ideally suited decision boundary (in comparison to the geodesic boundary in ) to isolate the subtree.

### Synthetic Data with Noisy Labels

To demonstrate the robustness of our HoroSVM, we apply it to synthetic data with noisy labels at varying levels/amounts of noise. Specifically, we generated 100 synthetic datasets by sampling from a Gaussian mixture model defined on the Poincare disk model as in . The isotropic Gaussian distribution in hyperbolic space is referred to as the _Riemannian normal_ distribution, and we used the sampling method presented in . For each dataset, we sampled two centroids from a zero-mean Riemannian normal distribution with a variance of 1.5. We then sampled 200 data points from a unit-variate Riemannian normal distribution centered at each centroid, resulting in a dataset of 400 points classified into positive and negative classes. We split the dataset into training and test sets with 100 positive/negative samples in the training set and 100 positive/negative samples in the test set. We then generated datasets with noisy labels at noise levels: \(\{0,0.05,0.1,,0.5\}\) by flipping the labels of a proportion \(\) of the training (not test) samples, with an equal number of positive and negative samples flipped. The train/test average F1 scores of each method across all datasets at varying noise levels are shown in Fig 4. We compared our HoroSVM with hyperboloid SVM, hyperbolic LR, and a two-layer HNN  (with a hidden dimension of 5). While all methods depict decreasing training F1 scores as the noise level increases, HoroSVM outperforms the others consistently throughout the training process. Hyperbolic LR and HNN exhibit the least resistance to label noise, with test F1 scores dropping (faster) with increasing noise level. Both hyperboloid SVM and HoroSVM demonstrate consistent performance across different noise levels, owing to the inherent robustness of large-margin classifiers. However, the training of hyperboloid SVM is highly unstable resulting in its inferior performance. HoroSVM demonstrates its superiority in accuracy and robustness as evidenced in the results. In addition, we present the average training times for each method on one dataset (200 samples) as follows: 6.57 seconds (Hyperboloid SVM), 3.98 seconds (Hyperbolic LR), 9.06 seconds (HNN), and 3.73 seconds (HoroSVM). Notably, HoroSVM stands out as the fastest.

Figure 4: Training (left) and test (right) F1 scores of several methods on synthetic data with noisy labels at different noise levels.

Discussion and Conclusions

In this paper, we presented a novel large margin classifier, dubbed HoroSVM, whose decision boundaries are horospheres that are the level sets of a Busemann function. We presented a novel formulation leading to the optimization of a geodesically convex loss performed using a Riemannian gradient-based method and guaranteeing a globally optimal solution. We demonstrated superior to competitive performance of the HoroSVM over SOTA large margin classifiers.

In Euclidean space, a kernel SVM is usually favored over the linear SVM due to its ability to cope with non-linearly separable data. In Hyperbolic space, the challenge lies in developing valid positive definite kernels (see  for details on validity of kernels on Riemannian manifolds). The only reported work on KSVM in hyperbolic space that we are aware of is , which uses a kernel that violates the positive definiteness property of RKHS kernels. Thus the problem of interest is primarily defining a valid family of kernels in hyperbolic space. We will address this in our future work.