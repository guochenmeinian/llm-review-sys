# Algorithmic Regularization in Tensor Optimization:

Towards a Lifted Approach in Matrix Sensing

 Ziye Ma

Department of EECS

UC Berkeley

ziyema@berkeley.edu &Javad Lavaei

Department of IEOR

UC Berkeley

lavaei@berkeley.edu &Somayeh Sojoudi

Department of EECS, ME

UC Berkeley

sojoudi@berkeley.edu

###### Abstract

Gradient descent (GD) is crucial for generalization in machine learning models, as it induces implicit regularization, promoting compact representations. In this work, we examine the role of GD in inducing implicit regularization for tensor optimization, particularly within the context of the lifted matrix sensing framework. This framework has been recently proposed to address the non-convex matrix sensing problem by transforming spurious solutions into strict saddles when optimizing over symmetric, rank-1 tensors. We show that, with sufficiently small initialization scale, GD applied to this lifted problem results in approximate rank-1 tensors and critical points with escape directions. Our findings underscore the significance of the tensor parametrization of matrix sensing, in combination with first-order methods, in achieving global optimality in such problems.

## 1 Introduction

This paper is dedicated to addressing the non-convex problem of matrix sensing, which has numerous practical applications and is rich in theoretical implications. Its canonical form can be written as:

\[ M^{n n}\] (1) \[ (M)=(M^{*})(M) r,M  0.\]

\(():^{n n}^{m}\) is a linear operating consisting of \(m\) sensing matrices \(\{A_{i}\}_{i=1}^{m}^{n n}\) where \((M)=[ A_{1},M,, A_{m},M]^{T}\). The sensing matrices and the measurements \(b=(M^{*})\) are given, while \(M^{*}\) is an unknown low-rank matrix to be recovered from the measurements. The true rank of \(M^{*}\) is bounded by \(r\), usually much smaller than the problem size \(n\). More importantly, since \(\) is linear, one can replace \(A_{i}\) with \((A_{i}+A_{i}^{})/2\) without changing \(b\), and therefore all sensing matrices can be assumed to be symmetric.

The aforementioned problem serves as an extension of both compressed sensing , which is widely applied in the field of medical imaging, and matrix completion [2; 3], which possesses an array of notable applications . Additionally, this problem emerges in a variety of real-world situations such as phase retrieval [5; 6; 7], motion detection , and power system state estimation [9; 10]. A recent study by  established that any polynomial optimization problem can be converted into a series of problems following the structure of (1), thereby underscoring the significance of investigating this specific non-convex formulation. Within the realm of contemporary machine learning, (1) holds relevance as it is equivalent to the training problem for a two-layer neural network with quadratic activations . In this context, \(m\) denotes the number of training samples, \(r\) is the size of the hidden layer, and the sensing matrices \(A_{i}=x_{i}x_{i}^{}\) are rank-1, with \(x_{i}\) representing the \(i^{th}\) datapoint.

To solve (1), an increasingly popular approach is the Burer-Monteiro (BM) factorization , in which the low-rank matrix \(M\) is factorized into \(M=XX^{}\) with \(X^{n r}\), thereby omitting theconstraint, making it amenable to simple first-order methods such as gradient descent (GD), while scaling with \((nr)\) instead of \((n^{2})\). The formulation can be formally stated as follows:

\[_{X^{n r}}f(X)\|(XX^{T})- b\|^{2}=\|(XX^{T}-ZZ^{})\|^{2}\] (2)

with \(Z^{n r}\) being any ground truth representation such that \(M^{*}=ZZ^{}\). Since (2) is a non-convex problem, it can have spurious local minima1, making it difficult to recover \(M^{*}\) in general. The pivotal concept in solving (1) and (2) to optimality is the notion of Restricted Isometry Property (RIP), which measures the proximity between \(\|(M)\|_{F}^{2}\) and \(\|M\|_{F}^{2}\), for all low-rank matrices \(M\). This proximity is captured by a constant \(_{p}\), where \(_{p}=0\) means \((M)=M\) for matrices up to rank \(p\), leading to exact isometry case, and \(_{p} 1\) implying a problematic scenario in which the proximity error is large. For a precise definition, please refer to Appendix A.3.

Conventional wisdom suggests that there is a sharp bound on the RIP constant that controls the recoverability of \(M^{*}\), with \(1/2\) being the bound for (2).  prove that if \(_{2r}<1/2\), then all local minimizers are global minimizers, and conversely if \(_{2r} 1/2\), counterexamples can be easily established. Similar bounds of \(1/3\) are also derived for general objectives , demonstrating the importance of the notion of RIP. However, more recent studies reveal that the technique of over-parametrization (by using \(X^{n r_{}}\) instead, with \(r_{}>r\)) can take the sharp RIP bound to higher values . Recently, it has also been shown that using a semidefinite programming (SDP) formulation (convex relaxation) can lead to guaranteed recovery with a larger RIP bound that approaches 1 in the transition to the high-rank regime when \(n 2r\). These works all show the efficacy of over-parametrization, shedding light on a powerful way to find the global solution of complex non-convex problems. However, all of these techniques fail to handle real-world cases with \(_{2r} 1\) in the low-rank regime. To this end, a recent work  drew on important concepts from the celebrated Lasserre's Hierarchy  and proposed a lifted framework based on tensor optimization that could convert spurious local minimizers of (2) into strict saddle points in the lifted space, for arbitrary RIP constants in the \(r=1\) case. We state this lifted problem below:

\[_{^{n l}}\|^{ l },-b^{ l}\|_{F}^{2}\] (3)

where \(\) is an \(l\)-way, \(n\)-dimensional tensor, and \(^{ l}\) and \(b^{ l}\) are tensors "lifted" from \(\) and \(b\) via tensor outer product. We defer the precise definition of tensors and their products to Section 2. The main theorem of  states that when \(r=1\), for some appropriate \(l\), the first-order points (FOP) of (2) will be converted to FOPs of (3) via lifting, and that spurious second order points (SOP) of (2) will be converted into strict saddles, under some technical conditions, provided that \(\) is symmetric, and rank-1. This rank-1 constraint on the decision variable \(\) is non-trivial, since finding the dominant rank-1 component of symmetric tensors is itself a non-convex problem in general, and requires a number of assumptions for it to be provably correct . This does not even account for the difficulties of maintaining the symmetric properties of tensors, which also has no natural guarantees. Therefore, although this lifted formulation may be promising in the pursuit of global minimum, there are still major questions to be answered. Most importantly, it is desirable to know _whether the symmetric, rank-1 condition is necessary, and if so, how to achieve it without explicit constraints?_

The necessity of the condition in question can be better understood through insights from . The authors argue that over-parametrizing non-convex optimization problems can reshape the optimization landscape, with the effect being largely independent of the cost function and primarily determined by the parametrization. This notion is consistent with , which contends that over-parametrizing vectors into tensors can transform spurious local solutions into strict saddles. However,  specifically examines the parametrization from vectors/matrices to tensors, concluding that stationary points are not generally preserved under tensor parametrization, contradicting . This implies that the symmetric, rank-1 constraints required in (3) are crucial for the conversion of spurious points.

It is essential to devise a method to encourage tensors to be near rank-1, with implicit regularization as a potential solution. There has been a recent surge in examining the implicit regularization effects in first-order optimization methods, such as gradient descent (GD) and stochastic gradient descent (SGD) , which has been well-studied in matrix sensing settings . This intriguing observation has prompted us to explore the possible presence of similar implicit regularization in tensor spaces. Our findings indicate that when applying GD to the tensor optimization problem (3), an implicit bias can be detected with sufficiently small initialization points. This finding does not directly extend from its matrix counterparts due to the intricate structures of tensors, resulting in a scarcity of useful identities and well-defined concepts for even fundamental properties such as eigenvalues. Furthermore, we show that when initialized at a symmetric tensor, the entire GD trajectory remains symmetric, completing the requirements.

In this paper, we demonstrate that over-parametrization alone does not inherently simplify non-convex problems. However, employing a suitable optimization algorithm offers a remarkably straightforward solution, as this specific algorithm implicitly constrains our search to occur within a compact representation of the over-parametrized space without necessitating manual embeddings or transformations. This insight further encourages the investigation of a (parametrization, algorithm) pair for solving non-convex problems, thereby enhancing our understanding of achieving global optimality in non-convex problems.

### Related Works

**Over-parametrization in matrix sensing**. Except for the lifting formulation (3), there are two mainstream approaches to over-parametrization in matrix sensing. The first one is done via searching over \(Y^{n r_{}}\) instead of \(X^{n r}\), and using some distance metric to minimize the distance between \((YY^{})\) and \(b\). Using an \(l_{2}\) norm,  established that if \(r_{}>r[(1+_{n})/(1-_{n})-1]^{2}/4\), with \(r r_{}<n\), then every second-order point \(^{n r_{}}\) satisfies that \(^{}=M^{*}\).  showed that even in the over-parametrized regime, noise can only finitely influence the optimization landscape.  offered similar results for an \(l_{1}\) loss under good enough RIP constant. Another popular approach to over-parametrization is to use a convex SDP formulation, which is a convex relaxation of (1) . It has been known for years that as long as \(_{2r}<1/2\), then the global optimality of the SDP formulation correspond to the ground truth \(M^{*}\). Recently  updated this bound to \(2r/(n+(n-2r)(2l-5))\), which can approach \(1\) if \(n 2r\).

**Algorithm regularization in over-parametrized matrix sensing**.  prove that the convergence to global solution via GD is agnostic of \(r_{}\), in that it only depends on initialization scale, step-size, and RIP property.  demonstrates the same effect for an \(l_{1}\) norm, and further showed that a small initialization nullifies the effect of over-parametrization. Besides these works,  refined this analysis, showing that via a sufficiently small initialization, the GD trajectory will make the solution implicitly penalize towards rank-\(r\) matrices after a small number of steps.  took it even further by showing that the GD trajectory will first make the matrix rank-\(1\), rank-\(2\), all the way to rank-\(r\), in a sequential way, thereby resembling incremental learning.

**Implicit bias in tensor learning**. The line of work  demonstrates that for a class of tensor factorization problems, as long as the initialization scale is small, the learned tensor via GD will be approximately rank-\(1\) after an appropriate number of steps. Our paper differs from this line of work in three meaningful ways: 1) The problem considered in those works are optimization problems over vectors, not tensors, and therefore the goal is to learn the structure of a known tensor, rather than learning a tensor itself; 2) Our proof relies directly on tensor algebra instead of adopting a dynamical systems perspective, providing deeper insights into tensor training dynamics while dispensing with the impractical assumption of an infinitesimal step-size.

### Main Contributions

1. We demonstrate that, beyond vector and matrix learning problems, optimization of differentiable objectives, such as the \(l_{2}\) norm, through Gradient Descent (GD) can encourage a more compact representation for tensors as decision variables. This results in tensors being approximately rank-\(1\) after a number of gradient steps. To achieve this, we employ an innovative proof technique grounded in tensor algebra and introduce a novel tensor eigenvalue concept, the variational eigenvalue (v-eigenvalue), which may hold independent significance due to its ease of use in optimization contexts.
2. We show that if a tensor is a first-order point of the lifted objective (3) and is approximately rank-\(1\), then its rank-\(1\) component can be mapped to an FOP of (2), implying that all FOPs of (3) lie in a small sphere around the lifted FOPs of (2). Furthermore, these FOPs possess an escape direction when reasonably distant from the ground truth solution, irrespective of the Restricted Isometry Property (RIP) constants.

3. We present a novel lifted framework that optimizes over symmetric tensors to accommodate the over-parametrization of matrix sensing problems with arbitrary \(r\). This approach is necessary because directly extending the work of  from \(r=1\) to higher values may lead to non-cubical and, consequently, non-symmetric tensors.

## 2 Preliminaries

Please refer to Appendix A.1 and A.2 for the notations and definitions of first-order and second-order conditions. Here, we introduce two concepts that are critical in understanding our main results.

**Definition 1** (Tensors and Products).: We define an \(l\)-way tensor as:

\[=\{a_{i_{1}i_{2} i_{l}}|1 i_{k} n_{k},1 k l\} ^{n_{1} n_{l}}\]

Moreover, if \(n_{1}==n_{l}\), then we call this tensor an \(l\)-order (or \(l\)-way), \(n\)-dimensional tensor. \(^{n l}\) is an abbreviated notion for \(n l n n\). In this work, tensors are denoted with bold letters unless specified otherwise. The tensor outer product, denoted as \(\), of 2 tensors \(\) and \(\), respectively of orders \(l\) and \(p\), is a tensor of order \(l+p\), namely \(=\) with \(c_{i_{1} i_{l}j_{1} j_{p}}=a_{i_{1} i_{l}}b_{j_{1} j_{ p}}\). We also use the shorthand \(^{ l}\) for repeated outer product of \(l\) times for arbitrary tensor/matrix/vector \(\). \(,_{i_{1},,i_{l}}\) denotes tensor inner product along dimensions \(i_{1},,i_{d}\) (with respect to the first tensor), in which we simply sum over the specified dimensions after the outer product \(\) is calculated. This means that the inner product is of \(l+p-2d\) orders. Please refer to Appendix A.3 for a more in-depth review on tensors, especially on its symmetry and rank.

**Definition 2** (Restricted Strong Smoothness (RSS) and Restricted Strong Convexity (RSC)).: The linear operator \(:^{n n}^{m}\) satisfies the \((L_{s},r)\)-RSS property and the \((_{s},r)\)-RSC property if

\[f(M)-f(N)  M-N, f(N)+}{2}\|M-N\|_{F}^{2}\] \[f(M)-f(N)  M-N, f(N)+}{2}\|M-N\|_{F} ^{2}\]

are satisfied, respectively for all \(M,N^{n}\) with \((M),(N) r\). Note that RSS and RSC provide a more expressible way to represent the RIP property, with \(_{r}=(L_{s}-_{s})/(L_{s}+_{s})\).

## 3 The Lifted Formulation for General \(r\)

A natural extension of (3) to general \(r\) requires that instead of optimizing over \(X^{n r}\), we optimize over \(^{[n r]ol}\) tensors, and simply making tensor outer products between \(\) to be inner products. However, such a tensor space is non-cubical, and subsequently not symmetric. This is the higher-dimensional analogy of non-square matrices, which lacks a number of desirable properties, as per the matrix scenario. In particular, it is necessary for our approach to optimize over a cubical, symmetric tensor space since in the next section we prove that there exists an implicit bias of the gradient descent algorithm under that setting.

In order to do so, we simply vectorize \(X^{n r}\) into \((X)^{nr}\), and optimize over the tensor space of \(^{nrol}\), which again is a cubical space. In order to convert a tensor \(^{nrol}\) back to \(^{[n r]ol}\) to use a meaningful objective, we introduce a new 3-way permutation tensor \(^{n r nr}\) that "unstacks" vectorized matrices. Specifically,

\[,(X)_{3}=X X^{n  r},n,r^{+}\]

Such \(\) can be easily constructed via filling appropriate scalar "1"s in the tensor. Via Lemma A.4, we also know that

\[^{ l},(X)^{ l}_{3*[l]}=( ,(X)_{3})^{ l}=X^{ l}\] (4)

where \([l]\) denotes the integer set \([1,,l]\), and \(c*[l]\) denotes \([c,2c,,c*l]\) for some \(c^{+}\). For notational convenience, we abbreviate \(^{ l},_{3*[l]}\) as \(()\) for any arbitrary \(z\)-dimensional tensor \(\) where \(z\) can be broken down into the product of two positive integers. Thus, using (4), we can extend (3) to a problem of general \(r\), yet still defined over a cubical tensor space:

\[_{^{nrol}}\|^{ l}, (),()_{2*[l]}-b^{  l}\|_{F}^{2}\] (5)Let us define a 3-way tensor \(^{m n n}\) so that \(_{kij}=(A_{k})_{ij}\  k[m],(i,j)[n][n]\). Define \(f^{l}():^{n 2l}\) and \(h^{l}():^{[n r] l}\) as \(f^{l}()\|^{ l},-b ^{ l}\|_{F}^{2}\) and \(h^{l}()=f^{l}(,_{2*[l]})\), with \( f^{l}()=_{}f^{l}()\) and \( h^{l}()=_{}h^{l}()\).

We prove that (5) has all the good properties detailed in  for (3). In particular, we prove that the symmetric, rank-1 FOPs of (5) have a one-to-one correspondence with those of (2), and that those FOPs that are reasonably separated from \(M^{*}\) or have a small \(r^{th}\) singular value can be converted to strict saddle points via some level of lifting. For the detailed theorems and proofs, please refer to Appendix B.

## 4 Implicit Bias of Gradient Descent in Tensor Space

In this section, we study why and how applying gradient descent to (5) will result in an implicit bias towards to rank-1 tensors. Prior to presenting the proofs, we shall elucidate the primary intuition behind how GD contributes to the implicit regularization of (2). This will aid in comprehending the impact of implicit bias on (5), as they share several crucial observations, albeit encountering greater technical hurdles. Consider the first gradient step of (2), initialized at a random point \(X_{0}^{n r_{}}= X\) with \(\|X\|_{F}^{2}=1\) and \(r_{} r\):

\[X_{1} =X_{0}- h(X_{0})=(I+[^{*} (M^{*})])X_{0}-[^{*}(X_{0}X _{0}^{})]X_{0}\] \[=(I+[^{*}(M^{*})]) X_{0}+(^{3})\]

where \(\) is the step-size. Therefore, if \(\) is chosen to be small enough, we have that

\[X_{t}(I+^{*}(M^{*}))^{t}X_{0} 0\]

Again, according to the symmetric assumptions on \(\), we can apply spectral theorem on \(^{*}(M^{*})=_{i=1}^{n}_{i}v_{i}v_{i}^{}\) for which the eigenvectors are orthogonal to each other. It follows that \(X_{t}(_{i=1}^{n}(1+_{i})^{t}v_{i}v_{i}^{} )X_{0}\).

In many papers surveyed above on making an argument of implicit bias, it is assumed that there is very strong geometric uniformity, or under the context of this paper, it means that \(L_{s}/_{s} 1\). Under this assumption, we have \(f(M) f(N)+ M-N, f(M)+\|M-N\|_{F}^{2}/2\), leading to the fact that \(^{2}f(M)=^{*} I\). This immediately gives us \(^{*}(M^{*}) M^{*}\) so that \(_{r+1},,_{n} 0\) as \(M^{*}\) is by assumption a rank-\(r\) matrix. This further implies that \(X_{t}(_{i=1}^{r}(1+_{i})^{t}v_{i}v_{i}^{} )X_{0}\), which will become a rank-\(r\) matrix, achieving the effect of implicit regularization, as \(X\) is now over-parametrized by having \(r_{} r\).

However, when tackling the implicit regularization problem in tensor space, one key deviation from the aforementioned procedure is that \(L_{s}/_{s}\) will be relatively large, as otherwise there will be no spurious solutions, even in the noisy case [14; 30], which is also the motivation for using a lifted framework in the first place. Therefore, instead of saying that \(^{*}(M^{*}) M^{*}\), we aim to show that the gap between the eigenvalues of a comparable tensor term will enlarge as we increase \(l\), making the tensor predominantly rank-1. This observation demonstrates the power of the lifting technique, while at the same time eliminates the critical dependence on a small \(L_{s}/_{s}\) factor that is in practice often unachievable due to requiring sample numbers \(m\) in the asymptotic regime .

Therefore, in order to establish an implicit regularization result for (5), there are four major steps that need to be taken:

1. Proving that a point on the GD trajectory \(_{t}\) admits a certain breakdown in the form \(_{t}=_{t},_{0}-_{t}\) for some \(_{t}\) and \(_{t}\).
2. Proving that the spectral norm (equivalence of largest singular value) of \(_{t}\) is small (scales with initialization scale \(\))
3. Proving that \(_{t},_{0}\) has a large separation between its largest and second largest eigenvalues using a tensor version of Weyl's inequality.
4. Showing that, with the above holding true, \(_{t}\) is predominantly rank-1 after some step \(t_{*}\).

Lemmas 12, 13, 2, and Theorem 1 correspond to the above four steps, respectively. The reader is referred to the lemmas and theorem for more details.

### A Primer on Tensor Algebra and Maintaining Symmetric Property

We start with the spectral norm of tensors, which resembles the operator norm of matrices .

**Definition 3**.: Given a cubic tensor \(^{n l}\), its spectral norm \(\|\|_{S}\) is defined respectively as:

\[\|\|_{S}=\{|,u^{ l}|\;\|u\|_ {2}=1,u^{n}\}\]

There are many definitions for tensor eigenvalues , and in this paper we introduce a novel variational characterization of eigenvalues that resembles the Courant-Fisher minimax definition for eigenvalues of matrices, called the v-Eigenvalue. We denote the \(i^{th}\) v-Eigenvalue of \(\) as \(_{i}^{v}()\). Note this is a new definition that is first introduced in this paper and might be of independent interest outside of the current scope.

**Definition 4** (Variational Eigenvalue of Tensors).: For a given tensor \(^{n l}\), we define its \(k^{th}\) variational eigenvalue (v-Eigenvalue) \(_{k}^{v}()\) as

\[_{k}^{v}()_{S\\ (S)=k}_{ S}, |}{\|\|_{F}^{2}}, k[n]\]

where \(S\) is a subspace of \(^{n l}\) that is spanned by a set of orthogonal, symmetric, rank-1 tensors. Its dimension denotes the number of orthogonal tensors that span this space. It is apparent from the definition that \(\|\|_{S}=_{1}^{v}()\).

Next, since most of our analysis relies on the symmetry of the underlying tensor, it is desirable to show that every tensor along the optimization trajectory of GD on (5) remains symmetric if started from a symmetric tensor. Please find its proof in Appendix C.2.

**Lemma 1**.: _If the GD trajectory of (5) \(\{_{t}\}_{t=0}^{}\) is initialized at a symmetric rank-1 tensor \(_{0}\), then \(\{_{t}\}_{t=0}^{}\) will all be symmetric._

### Main Ideas and Proof Sketch

In this subsection, we highlight the main ideas behind implicit bias in GD. Lemma 12 and 13 details the first and second step, and are deferred to Appendix C.2. The proofs to the results of this section can also be found in that appendix. The lemmas alongside with their proofs are highly technical and not particularly enlightening, therefore omitted here for simplicity. However, the most important takeaway is that for the \(t^{th}\) iterate along the GD trajectory of (5), we have the decomposition

\[_{t+1}=_{t},_{0}-_{t} }_{t}-_{t}\]

for some \(_{t}\) and \(_{t}\) such that \(\|_{t}\|_{S}=(^{3})\). This essentially means that by scaling the initialization \(_{0}\) to be small in scale, the error term \(_{t}\) can be ignored from a spectral standpoint, and scales with \(\) at a cubic rate. This will soon be proven to be useful next.

**Lemma 2**.: _Given \(_{t}\) along the GD trajectory of (5), its first two v-eigenvalues, as defined in definition 4, satisfy the relation_

\[^{v}(_{t})}{_{1}^{v}(_{t})} \|_{2}^{l}(1+_{2}^{l}(U))^{t}+\|_{t}\|_{S}/ }{|v_{1}^{}x_{0}|^{l}(1+_{1}^{l}(U))^{t}-\|_{t }\|_{S}/}=\|_{2}^{l}(1+_{2}^{l}(U))^{t}+ (^{2})}{|v_{1}^{}x_{0}|^{l}(1+_{1}^{l}(U))^{ t}-(^{2})}\] (6)

_where \(_{1}(U)\) and \(_{2}(U)\) denote the first and second singular values of \(U=_{r}^{*},M^{*}^{nr nr}\), and \(v_{1},v_{2}\) are the associated singular vectors._

Lemma 2 showcases that when \(\) is small, the ratio between the largest and second largest v-eigenvalues of \(\) is dominated by \((\|x_{0}\|_{2}^{l}(1+_{2}^{l}(U))^{t})/(|v_{1}^{}x_{0}|^{l}(1+ _{1}^{l}(U))^{t})\).

Now, if either \(\|x_{0}\|_{2}^{l}\) is large or \(|v_{1}^{}x_{0}|^{l}\) approaches 0 in value, then the ratio may be relatively large, contradicting our claim. However, this issue can be easily addressed by letting \(x_{0}=v_{1}+g^{nr}\), where \(g\) is a vector with each entry being i.i.d sampled from the Gaussian distribution \((0,)\). Note that since \(U=_{r},b_{3}\), we can calculate \(U\) and \(v_{1}\) directly. Lemma 14 in Appendix C.2 shows that with this initialization, \(|v_{1}^{}x_{0}|^{l}=(1)\) and \(\|x_{0}\|_{2}^{l}=(1)\) with high probability if we select \(=(1/nr)\). Therefore, the \(t^{th}\) iterate along the GD trajectory of (5) satisfies

\[^{v}(_{t})}{_{1}^{v}(_{t})} ^{l}(U))^{t}}{(1+_{1}^{l}(U))^{t}}\] (7)with hight probability if \(\) is small. This implies that "the level of parametrization helps with separation of eigenvalues", since increasing \(l\) will decrease ratio \(_{2}^{v}(_{t})/_{1}^{v}(_{t})\). Furthermore, regardless of the value of \(_{1}(U)\), a larger \(t\) will make this ratio exponentially smaller, proving the efficacy of algorithmic regularization of GD in tensor space.

By combining the above facts, we arrive at a major result showing how a small initialization could make the points along the GD trajectory penalize towards rank-1 as \(t\) increases

**Theorem 1**.: _Given the optimization problem (5) and its GD trajectory over some finite horizon \(T\), i.e., \(\{_{t}\}_{t=0}^{T}\) with \(_{t+1}=_{t}- h^{l}(_{t})\), where \(\) is the stepsize, then there exist \(t(,l) 1\) and \(<1\) such that_

\[^{v}(_{t})}{_{1}^{v}(_{t})} , t[t(,l),t_{T}]\] (8)

_if \(_{0}\) is initialized as \(_{0}= x_{0}^{ l}\) with a sufficiently small \(\), where \(t(,l)\) is expressed as_

\[t(,l)=(\|_{2}^{l}}{|v_{1}^{}x_ {0}|^{l}})(^{l}(U)}{1+_{2}^{l}(U )})^{-1}\] (9)

By using the initialization introduced in Lemma 14, we can improve the result of Theorem 1, which does not need \(\) to be arbitrarily small. The full details are presented in Corollary 1 in Appendix C.2, stating that as along as \(t(1/)((1+_{1}^{l}(U))/(1+ _{2}^{l}(U)))^{-1}\), \(_{t}\) will be \(\)-rank-1, as long as \(\) is chosen as a function of \(U,r,n,L_{s}\), and \(\). Note that we say a tensor \(\) is "\(\)-rank-1" if \(_{2}^{v}()/_{1}^{v}()\).

## 5 Approximate Rank-1 Tensors are Benign

Now that we have established the fact that performing gradient descent on (5) will penalize the tensor towards rank-1, it begs the question whether approximate rank-1 tensors can also escape from saddle points, which is the most important question under study in this paper. Please find the proofs to the results in this section in Appendix D.

To do so, we first introduce a _major spectral_ decomposition of symmetric tensors that is helpful.

**Proposition 1**.: _Given a symmetric tensor \(^{}\), it can be decomposed into two terms, namely a term consisting of its dominant component and another term that is orthogonal to this direction:_

\[=_{1}^{v}()w_{s}^{ l}+^{ }:=_{}+^{}, w_{s}^{n },\;\|w_{s}\|_{2}=1\] (10)

_where \(,w_{s}^{ l}=_{1}^{v}()\) and \(^{},w_{s}^{ l}=0\). Furthermore, if \(\) is a \(\)-rank-1 tensor, then \(\|^{}\|_{S}_{1}^{v}(_{t})\)._

Next, we characterize the first-order points of (5) with approximate rank-1 tensors in mind. Previously, we showed that if a given FOP of (5) is symmetric and rank-1, it has a one-to-one correspondence with FOPs of (2). However, if the FOPs of (5) are not exactly rank-1, but instead \(\)-rank-1, it is essential to understand whether they maintain the previous properties. This will be addressed below.

**Proposition 2**.: _Assume that a symmetric tensor \(^{}\) is an FOP of (5), meaning that (17a) holds. If it is a \(\)-rank-1 tensor with \((1/\|M^{*}\|_{F}^{2})\), then it admits a decomposition as_

\[=_{1}^{v}()^{ l}+^{}\]

_with \(()^{n r}\) being an FOP of (2) and \(\|^{}\|_{S}_{1}^{v}()\) by definition._

The proposition above asserts that for any given FOP of (5), if it is \(\)-rank-1 rather than being truly rank-1, it will consist of a rank-1 term representing a lifted version of an unlifted FOP, as well as a term with a small spectral norm. Referring to (58), it is possible to achieve a significantly low \(\) through a moderate number of iterations. This result, considered the cornerstone of this paper, demonstrates that the use of gradient descent with small initialization will find critical points that are lifted FOPs of (2) with added noise, maintaining a robust association between FOPs of (5) and (2). This finding also facilitates this subsequent theorem:

**Theorem 2**.: _Assume that a symmetric tensor \(}^{nrol}\) is an FOP of (5) that is \(\)-rank-1 with \((1/\|M^{*}\|_{F}^{2})\). Consider its major spectral decomposition \(}=_{S}^{ l}+}^{}\) with \(^{nr}\), then it has a rank-1 escape direction if \(=()\) satisfies the inequality_

\[\|M^{*}-^{}\|_{F}^{2}}{_{s}}_{r} (^{})(M^{*})+(r^{1/l})\] (11)

_where \(l\) is odd and large enough so that \(l>1/(1-_{2}(2))\) and \(\) is defined as_

\[=(M^{*})_{r}(^{})}{ _{s}\|M^{*}-^{}\|_{F}^{2}-(r^{1/l})}.\]

This theorem conveys the message that by running GD on (5), all critical points have escape directions as long as the point is not close to the ground truth solution. In Appendix B, we present Theorem 7 to provide sufficient conditions for the conversion to hold globally when (11) is hard to hold.

## 6 Numerical Experiments

In this section2, after we run a given algorithm on (5) to completion and obtain a final tensor \(_{T}\), we then apply tensor PCA (detailed in Appendix F) on \(_{T}\) to extract its dominant rank-1 component and recover \(X_{T}^{n r}\) such that \((_{T})_{s}=_{s}(X_{T})^{ l}\). Since \(_{T}\) will be approximately rank-1, the success of this operation is expected [23; 24]. We consider a trial to be successful if the recovered \(X_{T}\) satisfies \(\|X_{T}X_{T}^{}-M^{*}\|_{F} 0.05\). We also initialize our algorithm as per Lemma 14.

### Perturbed Matrix Completion

The perturbed matrix completion problem is introduced in , which is a noisy version of classic matrix completion problems. The \(\) operator is introduced as

\[_{}()_{ij}:=_{ij},&(i,j)\\ _{ij},&,\] (12)

where \(\) is a measurement set such that \(=\{(i,i),(i,2k),(2k,i)|\;\; i[n],k[ n/2]\}\).  has proved that each such instance has \((2^{ n/2}-2)\) spurious local minima, while it satisfies the RIP property with \(_{2r}=(1-)/(1+)\) for some sufficiently small \(\). This implies that common first-order methods fail with high probability for this class of problems. In our experiment, we apply both lifted and unlifted formulations to (12) with \(=0.01\), yielding \(_{2r} 1\). We test different values of \(n\) and \(\), using a lifted level of \(l=3\). We ran 10 trials each to calculate success rate. If unspecified in the plot, we default \(n=10\), \(=10^{-7}\). Figure 1 reveals a higher success rate for the lifted formulation across different problem sizes, with smaller problems performing better as expected (since larger problems require a higher lifting level). Success rates improve with smaller \(\), emphasizing the importance of small initialization. We employed customGD, a modified gradient descent algorithm with heuristic saddle escaping. This algorithm will deterministically escape from critical points utilizing knowledge from the proof of Theorem 4. For details please refer to Appendix F. Furthermore, to showcase the implicit penalization affects of GD, we obtained approximate measures for \(_{p}^{v}(_{t})/_{1}^{v}(_{t})\) (since exactly solving for them is NP-hard) along the trajectory, and presented the results and methods in Appendix E.

Additionally, we examine different algorithms for (5), including customGD, vanilla GD, perturbed GD (, for its ability to escape saddles), and ADAM . Figure 2 suggest that ADAM is an effective optimizer with a high success rate and rapid convergence, indicating that momentum acceleration may not hinder implicit regularization and warrants further research. Perturbed GD performed poorly, possibly due to random noise disrupting rank-1 penalization.

### Shallow Neural Network Training with Quadratic Activation

It has long been known that the matrix sensing problem (2) includes the training of two-layer neural networks (NN) with quadratic activation as a special case . In summary, the output of the neuralnetwork \(y^{m}\) with respect to \(m\) inputs \(\{d_{i}\}_{i=1}^{m}^{n}\) can be expressed as \(y_{i}=^{}q(X^{}d_{i})\), which implies \(y_{i}= d_{i}d_{i}^{},XX^{}\), where \(q()\) is the element-wise quadratic function and \(X^{n r}\) in (2) represents the weights of the neural network. Thus \(r\) represents the number of hidden neurons. In our experiment, we demonstrate that when \(m\) is small, the lifted framework (5) outperforms standard neural network training in success rate, yielding improved recovery of the true weights. We set the hidden neurons number to be \(n\) for the standard network training, thereby comparing the existing over-parametrization framework (recall Section 1.1, with \(r_{}=n\)) with the lifted one. We employ the ADAM optimizer for both methods. Table 2 showcases the success rate under various problem and sample sizes. Sampling both data and true weights \(Z^{n r}\) from an i.i.d Gaussian distribution, we calculate the observations \(y\) and attempt to recover \(Z\) using both approaches. As the number of samples increases, so does the success rate, with the lifted approach offering significantly better accuracy overall, even when the standard training has a 0% success rate.

## 7 Conclusion

Our study highlights the pivotal role of gradient descent in inducing implicit regularization within tensor optimization, specifically in the context of the lifted matrix sensing framework. We reveal that GD can lead to approximate rank-1 tensors and critical points with escape directions when initialized at an adequately small scale. This work also contributes to the usage of tensors in machine learning models, as we introduce novel concepts and techniques to cope with the intrinsic complexities of tensors.

Table 2: Success rate of NN training using (5) and original formulation. The number inside the parentheses denotes the success rate of the original formulations. \(=10^{-5}\) and \(l=3\).

Figure 1: Success rate of the lifted formulation versus the unlifted formulation against varying \(n\) and \(\). The algorithm of choice is CustomGD (details in Appendix F).

Figure 2: Performance of different algorithms applied to the lifted formulation (5).

Acknowledgement

This work was supported by grants from ARO, ONR, AFOSR, NSF, and the UC Noyce Initiative.