# Barely Random Algorithms

and Collective Metrical Task Systems

Romain Cosson

Inria, Paris

romain.cosson@inria.fr

&Laurent Massoulie

Inria, Paris

laurent.massoulie@inria.fr

###### Abstract

We consider metrical task systems on general metric spaces with \(n\) points, and show that any fully randomized algorithm can be turned into a randomized algorithm that uses only \(2 n\) random bits, and achieves the same competitive ratio up to a factor \(2\). This provides the first order-optimal _barely random_ algorithms for metrical task systems, i.e. which use a number of random bits that does not depend on the number of requests addressed to the system. We discuss implications on various aspects of online decision making such as: distributed systems, advice complexity and transaction costs, suggesting broad applicability. We put forward an equivalent view that we call _collective metrical task systems_ where \(k\) agents in a metrical task system team up, and suffer the average cost paid by each agent. Our results imply that such team can be \(O(^{2}n)\)-competitive as soon as \(k n^{2}\). In comparison, a single agent is always \((n)\)-competitive.

## 1 Introduction

Recent progress on the competitive analysis of important online problems, such as the \(k\)-server problem, metrical service systems and metrical task systems have relied on the introduction of continuous optimization methods, such as the online primal-dual framework (see e.g. the book of ), and more recently, the online mirror descent framework . By design, these methods assume that the online algorithm is provided with an infinite number of random bits. In this paper, we address the question of whether this requirement is inherent to the online problem, or specific to the methods at hand, by focusing on the influential example of metrical task systems .

To answer this question, we study the notion of barely random algorithm, introduced by  in the early days of competitive analysis of online algorithms: "We call an algorithm that uses a bounded number of random bits regardless of the number of requests _barely random_". In the case of metrical task systems, we will observe that this notion is particularly fruitful, as it connects various aspects of online decision making such as collective systems, switching costs, and advice complexity.

Metrical Task Systems (MTS) is a central problem in online algorithms and online learning  which recently attracted the interest of the community working on learning-augmented algorithms . In essence, the problem is similar to the classical learning setting of 'prediction with expert advice' , with the key difference that there is a cost associated to switching between experts. We now describe the setting of metrical task systems  in a way that highlights the role played by the source of randomness.

_Metrical Task Systems._ The problem is defined on a metric space \(=(X,d)\) where \(X\) is a finite set of cardinality \(|X|=n\). The input is a sequence of cost vectors \(c()=((t))_{t}(_{+}^{X})^{}\) and the output is a sequence of states \(()=((t))_{t} X^{}\). The cost associated to each time \(t\) is the sum of the movement cost \(d((t-1),(t))\) and the service cost \(c_{(t)}(t)\). The cost over all time stepstherefore writes as follows:

\[((),())=_{t 1}d((t-1),(t))+c_{(t) }(t).\]

The offline benchmark, denoted by \((())\), is defined as the smallest achievable cost over all possible sequences of states, i.e. \((())=_{()^{}}((),())\). An online algorithm \(\) is a method to define a time-consistent trajectory, i.e. such that the state at some time depends only on current and past information. It may use some source of randomness \(\) (seed) which is sampled from a known probability distribution \(\). Formally, the sequence of states \(_{}()\) defined by algorithm \(\) can be computed by \( t:_{}(t)=((1),,(t),)\). The algorithm \(\) is said to be \(\)-competitive, for some \(\), if it satisfies \(_{}((_{}(), {c}()))(())+\) for some fixed \(\) and for any \(()(_{+}^{X})^{}\). In this paper, we are interested in the way the competitive ratio scales with the source of randomness \(\). When \(=(\{0,1\}^{b})\), or equivalently when \(=(\{1,,2^{b}\})\), we say that the algorithm is provided with \(b\) random bits. More generally, we consider the case where \(=(\{1,,k\})\) for arbitrary \(k\). In one extreme, the case of \(k=1\) is known as the _deterministic_ variant of the problem and is well understood since the inception of metrical task systems. In the other extreme, the case of \(k=+\) (more formally, \(=(\{0,1\}^{})\)) is known as the _randomized_ variant of the problem and was solved more recently. Any other value of \(k\) defines the \(k\)_-barely random_ variant, which is the focus of this paper. For reasons that will now become apparent, we will also refer to this setting as the \(k\)_-collective_ variant.

_Collective algorithm for metrical task systems._ Consider a team of \(k\) agents that are collectively confronted to a metrical task system. We can denote the positions of the agents by \(_{1}(t),,_{k}(t) X^{k}\) and their trajectory is given by \(k\) deterministic online algorithms \(_{1},,_{k}\). The participants are collaborating, in the sense that the cost paid by team is the average cost paid by its members. It is immediate to observe that \(k\)_-collective_ setting of metrical task systems is exactly the same problem as the \(k\)_-barely random_ setting defined above. This is because, given a \(k\)-collective strategy, one can define a \(k\)-barely random algorithm by using the seed \((\{1,,k\})\) to sample uniformly at random one strategy to imitate. In the rest of the paper, we will thus use the terms _collective_ and _barely random_ indistinctively. The collective presentation reflects a variety of real-world situations, where a finite team of agent is confronted to an adversarial environment. A simple biological illustration is in foraging, e.g. when a colony of \(k\) ants is tasked to collectively gather a large amount of food (modeled by the service costs) from \(n\) locations, while limiting the collective energy spent (modeled by the movement costs) [32; 36].

### Main contributions

Our main technical result is the following,

**Theorem 1.1** (Section 3).: _For any metric space \(\) with \(n\) points, for any \(>0\), for any integer \(k n^{2}/\), if there exists a (fully) randomized MTS algorithm that is \(\)-competitive, then there exists a \(k\)-barely random MTS algorithm that is \((1+)\)-competitive._

The factor \(2\) announced in the abstract can be readily recovered from this theorem by letting \(=1\), which we can assume in the rest of this section for ease of presentation. Theorem 1.1 relies on two techniques: a new equivalence between _barely random_ algorithms and _barely fractional_ strategies for metrical task systems that is presented in Section 2 ; and a new discrete first-order method that is developed in Section 3.

In light of the \((^{2}n)\)-competitive randomized algorithm of Bubeck et al.  for metrical task systems, Theorem 1.1 has the following consequence:

**Corollary 1.2** (of Theorem 1.1).: _There is a \((^{2}n)\)-competitive algorithm for MTS that requires on \( 2 n\) random bits on any \(n\) point metric._

We provide in Section 4 a simple lower-bound that almost matches this result. We also provide a tight guarantee in the case of the uniform metric space.

**Proposition 1.3** (Section 4).: _Any \((^{2}n)\)-competitive algorithm for MTS on an \(n\) point metric requires at least \( n-( n)\) random bits. In the uniform metric space, there is a \(( n)\)-competitive algorithm that only requires \( n\) random bits._Finally, we observe that the notion of barely random algorithm is closely connected to the notion of advice complexity. Advice complexity was introduced by  to measure the information content of online problems. In our context, one could ask the following question: What amount of information about the cost sequence suffices to improve over the \(2n-1\) lower-bound on the deterministic competitive ratio of metrical task systems? Since bits of advice are at least as useful as random bits (see  for more details), we have:

**Corollary 1.4** (of Theorem 1.1).: _For any \(n\) point metric, there exists a deterministic MTS algorithm that is \((^{2}n)\)-competitive, using only \( 2 n\) bits of advice._

This is a clear improvement over the result of  which requires an advice of size that scales with the length of the cost sequence.

### Other applications

Our method is helpful in any setting where acquiring random bits is costly. In concrete implementations and real-world systems, we also expect that barely fractional configurations (which are the discrete objects manipulated in this paper) are generally much more practical to handle than fully fractional distributions (which are arbitrary real numbers).

Our results also imply that a finite team of deterministic agents can be competitive in a way no single deterministic agent could be. This echoes of the study of intelligence in multi-agent system, with concrete applications, such as dynamic power management . Consider for example a computer with three power modes (_on_, _sleep_, _off_) with a switching cost of \(1\) between _on_ and _sleep_ and another switching cost of, say, \(5\) between _sleep_ and _off_. At each time \(t\) the request is either that the computer is used and \((t)=(1,+,+)\) i.e. the computer must be in state _on_ ; or the computer is not used and \((t)=(1,0.5,0)\) i.e. the computer would rather be _off_ than _sleep_, and _sleep_ than _on_. Consider the variant of the problem, where the computer is in fact composed of \(k=9\) components (e.g. screen, CPU cores, etc.) that can each individually switch between one of the three modes (_on_, _sleep_, _off_). The energy spent by the computer is the sum of energy spent by its constituents. Since \(n=3\) and \(k>n^{2}\), our results imply that such system can enjoy the _randomized_ competitive ratio, even if the cost sequence \(()\) depends on the state of the system (_deterministic_ adversary).

We also note that our work has a flavor that is similar to learning-augmented algorithms. Learning-augmented algorithms use predictions coming from a black-box algorithm in the hope to improve over the performance of competitive algorithms when predictions are accurate. In the same spirit, our method in Section 3 uses a fully fractional distribution coming from a black-box algorithm, and tracks it via a proximal method.

### Related works

Metrical task systems is a problem introduced by Borodin et al. (1992) . This initial work resolved the deterministic competitive ratio, which is of \(2n-1\) for any metric space with \(n\) points; as well as the randomized competitive ratio for the uniform metric space, which is in \(( n)\). The randomized competitive ratio for general \(n\) point metrics remained open until Bubeck et al. (2021) proposed a \((^{2}n)\)-competitive algorithm and  obtained a matching lower-bound. These breakthroughs followed a long line of research (see e.g. [46; 10; 33; 22] and references therein).

Metrical task systems is deeply connected (both, in results and methods) to the classical online setting of "learning with expert advice", as observed by . The differences are (1) there is a (movement) cost associated to switching from one expert to another (2) the offline benchmark is the best moving strategy as opposed to the best fixed strategy (3) the goal is to obtain a multiplicative guarantee (competitive ratio) rather than an additive guarantee (regret).

The notion of barely random algorithms was introduced by  for the list update problem. In this paper, they present an algorithm that is \(1.75\)-competitive for the list update problem, using exactly \(n\) random bits, where \(n\) is the length of the list. Such algorithms are further studied in the celebrated book of . Barely random algorithms were later investigated for paging . The notion also had some echo in the literature on scheduling (see  and references therein) but it was not applied before to metrical task systems or related problems.

Advice complexity was first studied in the context of metrical task systems in . In this paper, the authors study the setting where \(b\) bits of advice are provided at each time-step to a deterministic metrical task systems algorithm, for \(b\) of order \( n\). The total amount of advice they require is therefore of order \(B=T n\), where \(T\) is the number of time-steps. One surprising consequence of our results (Corollary 1.4) is that we present a deterministic algorithm that has a competitive ratio of \((^{2}n)\) using a single advice of total size \(B=2 n\), i.e. which is independent of the number of time-steps \(T\). We note that advice complexity is connected to learning-augmented algorithms, when the advice is untrusted .

Collective algorithms originate from the literature on distributed algorithms. For example, in the problem of collective tree exploration, a team of \(k\) agents is tasked to go through all edges of some unknown tree as fast as possible . The connections observed in  between this problem and randomized algorithms for metrical service systems provided some inspiration for the present paper. We note that the interpretation of a probability distribution as a continuous swarm of infinitesimally small agents is not novel, see e.g. , and is directly connected to the so-called fractional formulation of metrical task systems. The novelty of our methods lies in the rigorous discretization of this fractional view, and leads to applications in collective and barely random algorithms. A surprising aspect of our method is that it does not rely on a tree-embedding of the metric space, but seems naturally adapted to the general setting, thanks to the very general properties coming from optimal transport, such as the Birkhoff-von Neuman theorem. The discretization also relies on a non-trivial (though concise) first-order method, and which could be of interest for future works.

Finally, Section 3 of this paper is reminiscent of first-order optimization methods. Gradient descent of a function \(f()\) is also known as the explicit Euler method, where one can write its \(t\)-th iterate as the minimizer of the sum of a first order approximation of \(f()\) at the \(t-1\)-th iterate and a quadratic cost. A closely related first-order method is the implicit Euler method where the \(t\)-th iterate is defined by,

\[(t)=_{}f()+||-(t-1)||^{2},\]

which is also known as the proximal operator . Our Equation (1) is reminiscent of this operator. One key difference is that we replace the squared norm by an optimal transport cost, and that the offline objective function \(f()\) is replaced by an online potential, like in the work function algorithm . Note that quite recently, the notion of Wasserstein proximal operator has appeared as a central object of study in the context of partial differential equations (see e.g. ). A key difference with our Equation (1) is that we consider the Wasserstein-1 metric (aka, the earthmover distance) and not the Wasserstein-2 metric.

### Notations, definitions and preliminaries

In the following, \(=(X,d)\) is a finite metric space, i.e. \(X\) is a finite set and the distance \(d\) is positive, symmetric and satisfies the triangle inequality. We denote by \(n\) the cardinality of \(X\).

We denote by \(()\) the set of all distributions on \(\). For any two such distributions \(,^{}()\), we call the optimal transport cost from \(\) to \(^{}\) and we denote by \((,^{})\) the quantity,

\[(,^{})=_{(,^{})} _{,^{}}(,^{})d(,^{})\]

where \((,^{})=\{^{}: ,_{^{}}(,^{})=x_{}\) and \(^{},_{}(,^{})=x^{}_{^{ }}\}\) is the set of couplings from \(\) to \(^{}\). Classically, \((,^{})\) can be viewed as the probability distributions on \(\) with their marginals respectively equal to \(\) and \(^{}\). The optimal transport cost (also known as the Wasserstein distance) defines a distance between probability distributions on \(\). In particular, it satisfies positivity, symmetry and the triangle inequality.

For some point \(\), we denote by \(_{}()\) the probability distribution on \(\) that has all of its mass on \(\). Note that \(_{}\) can alternatively be seen as a vector of \(^{}\). Denoting by \(\) the Kronecker product (aka the outer product) between vectors of \(^{}\), we have, for any \(,^{}\) that \(_{}_{^{}}\) is an optimal coupling from \(_{}\) to \(_{^{}}\)

For an arbitrary constant \(k\) we denote by \(_{k}()\) the set of all distributions on \(\) that only take their values in \(\{0,1/k,,1\}\). Such distributions will sometimes be called 'configurations' to distinguish them from their continuous counterparts. For any two configurations \(,^{}_{k}()\)there exists an associated optimal coupling \(\) that only takes its values in \(\{0,1/k,,1\}\), i.e. which follows the discrete formulation of optimal transport by Monge. We call such a (discrete) coupling, an optimal transport plan. The existence of this optimal transport plan be seen as a consequence of the Birkhoff-von Neumann theorem which states that the extreme points of the polytope of doubly stochastic matrices are permutation matrices . Indeed a \(k k\) doubly stochastic matrix naturally induces a coupling between two \(k\)-barely fractional configurations, with values in \(\{0,1/k,,1\}\) if it is a permutation matrix. The result then follows from the linearity of the objective.

For an integer \(k\), we denote by \((\{1,,k\})\) the uniform probability distribution over \(\{1,,k\}\). For an arbitrary distribution \(\), we denote by \(_{}()\) the expectation when the variable \(\) is sampled following \(\). All logarithms, denoted by \(()\), are in base \(2\).

Paper outlineSection 2 provides an equivalence between \(k\)-collective strategies and \(k\)-barely fractional strategies, which is used in Section 3 to prove Theorem 1.1. Section 4 provides additional discussions, including the lower-bound as well as refined guarantees for the uniform metric space. The conclusion highlights some open directions towards making further connections between online algorithms and distributed/collective systems.

## 2 Barely fractional strategies for metrical task systems

In the introduction, we gave the classical definition of metrical task systems , while highlighting the role played by the source of randomness \(\). In the literature, a variant called the _fractional_ formulation is known to be equivalent to the problem when the algorithm is allowed an infinite number of random bits (i.e. when \(=(\{0,1\}^{})\)). We start by recalling this fractional formulation and the equivalence in Section 2.1. We then introduce the notion of \(k\)_-barely fractional_ strategies and we show their relevance to the aforementioned \(k\)-barely random setting in Section 2.2. In contrast with previous results, this equivalence relies on the Birkhoff-von Neumann theorem.

### (Fully) fractional strategies for metrical task systems

_Fractional Metrical Task System._ In the fractional variant of metrical task systems, at any instant \(t\), a fractional strategy denoted by \(()\) maintains a distribution over the states, that only depends on the information available before time \(t\), i.e. \(((1),,(t))()\), which shall be denoted by \((t)\) hereafter. The cost paid by the strategy at time \(t\) is defined as the sum of a transport cost \(((t-1),(t))\) and a service cost \(_{}x_{}(t)c_{}(t)\). We denote by \(((),())\) the total cost associated to the strategy, i.e.

\[((),())=_{t 1}((t-1), (t))+_{}x_{}(t)c_{}(t).\]

The interest of this fractional formulation comes from the following reduction, which is classical in the literature (see e.g. ).

**Proposition 2.1**.: _For any fractional strategy for metrical task systems, there is a (fully) randomized algorithm that achieves the same cost, and reciprocally._

Proof.: Consider a randomized algorithm \((,)\) with \((\{0,1\}^{})\) for metrical task systems and define \(()\) at time \(t\) by setting \( X:x_{}(t)=_{}(((1),, (t),)=)\). It is clear from this definition that the service cost of the fractional strategy equals the expected service cost of the randomized algorithm. Also observe that the movement cost of the fractional strategy, which equals \(((t-1),(t))\) at time \(t\), must be less than the expected movement cost of the randomized algorithm which uses a (possibly sub-optimal) coupling between the two consecutive distributions.

Reciprocally, assume that we are given a fractional strategy \(()()^{}\). We can design a randomized algorithm \((,)\) which relies on the random seed \((\{0,1\}^{})\). Observe that we can make the seemingly stronger (but in fact equivalent, because \(\{0,1\}^{}\) is uncountable) assumption that \(=(^{})\). This reformulation allows to have access to one fresh (independent) real sampled uniformly at random from \(\) at each time-step \(t\), which we denote by \(s(t)\). We assume that at time \(t-1\), the algorithm is in some state \(((1),,(t-1),)=(t-1)\). At time \(t\), the algorithm considers the optimal transport plan \(\) associated to \(((t-1),(t))\) and samplesthe state \((t)\) following the probability distribution proportional to \((((t-1),))_{}\). This can be done by inversion sampling using only the random sample \(s(t)()\). It is clear by induction that the distribution of \(((1),,(t),)=(t)\) with this randomized algorithm follows exactly \((t)\). Further, its expected movement cost \(_{}(d((t-1),(t)))\) is exactly equal (by definition) to the transport cost \(((t-1),(t))\). 

### Barely fractional strategies for metrical task systems

_Barely Fractional Metrical Task System._ We now introduce a discretization of the fractional formulation of metrical task systems. This will define a \(k\)-barely fractional strategy \(()\). The definitions are the same as in the fully fractional variant above, except that at all times, the distribution \((t)()\) is constrained to belong to the set \(_{k}()\) of distributions taking values in \(\{0,1/k,,1\}\) (see the notations section). We now show that this formulation enjoys an equivalence with the barely random variant of metrical task systems, when the source of randomness is limited to \(=(\{1,,k\})\).

**Proposition 2.2**.: _For any \(k\)-barely fractional strategy for metrical task system, there is a \(k\)-barely random algorithm that achieves the same cost, and reciprocally._

Proof.: We assume that we are given a \(k\)-barely random algorithm \(\) and define as above the fractional strategy \(()\) at time \(t\) by \( X:x_{}(t)=_{}(((1),, (t),)=)\). It remains true (see the argument of Section 2.1) that this fractional strategy has a smaller service and movement cost than the randomized algorithm. We also observe that since \(=(\{0,1/k,,1\})\), we have \((t)_{k}()\). Therefore, \(()\) is a valid \(k\)-barely fractional strategy with a smaller cost than \(\).

The reverse reduction uses an ingredient from the theory of optimal transport: the Birkhoff-von Neumann theorem, which states that the optimal transport between \(,^{}_{k}()\) always admits an optimal coupling \(\) taking its values in \(\{0,1/k,,1\}\), that we call an optimal transport plan (see notations and preliminaries section). Given a barely fractional strategy \(()\), we define a \(k\)-collective algorithm for which the population distribution will always match \((t)_{k}()\). The result then follows from the equivalence between collective and barely random algorithms discussed in the introduction. We initially distribute the \(k\) agents following \((0)\). Now, we assume as our induction hypothesis that the team at time \(t-1\) is distributed exactly following \((t-1)\) and we show that we can deterministically redistribute the members of the team to follow \((t)\), while paying a moment cost of \(((t-1),(t))\). Using the aforementioned Birkhoff-von Neumann theorem, there exists an optimal coupling between \((t-1)_{k}()\) and \((t)_{k}()\) that takes its values in \(\{0,1/k,,1\}\). Concretely, from the collective point of view, this means that we can move the agents from distribution \((t-1)\) to distribution \((t)\) using this coupling, without having to split any agent. We use this coupling to reassign the agents deterministically to their new destination (we assume that agents have arbitrary identifiers and the ability to communicate, in order to break the possible ties). Clearly, since the coupling is optimal, the average movement cost in the collective strategy will equal the transport cost of the fractional strategy, and since the population distribution of the agents is consistent with the barely fractional configuration, the service costs are equal. 

**Remark 2.3** (Fractional metrical task systems, with fixed transaction costs).: _A straightforward illustration of the fractional variant of metrical task systems is in asset management. Consider an investor distributing its stakes on several assets via \((t)()\) where \(\) is a set of financial products such as stocks.The distance between two products is defined by the transaction cost associated to exchanging a unit value between two product (i.e. the liquidity of the products varies). The service cost corresponds to the cost of holding a poorly performing asset. The movement cost is a variable cost which is proportional to the mass that is exchanged at any round. Another type of cost that could naturally arise is a fixed transaction cost that the player should pay for converting any amount of stock \(\) into stock \(^{}\). We propose to set this cost equal to \( d(,^{})\) for some real constant \(>0\). In this setting, it becomes relevant for the player to perform transactions only if they involve a fractional mass greater than \(\). A direct consequence of our results (Theorem 1.1 and Proposition 2.2) is that adding fixed transaction cost \(\) to the fractional variant of metrical task systems has little effect on its competitive ratio, provided that \( 1/n^{2}\)._

## 3 Potential function method for barely fractional strategies

In this section we provide the proof of the main result of the paper, Theorem 1.1. The core of our method is in Algorithm 1 which provides a way to transform a (black-box) fully fractional strategy \(()\) in a \(k\)-barely fractional strategy \(()\), while only loosing a factor \(2\) in the competitive ratio provided that \(k n^{2}\) (it is then generalised to arbitrary factor \(1+\) in the proof below). Following the reductions from Section 2, this method also allows to transform a fully random algorithm into a \(k\)-barely random algorithm with similar competitive guarantees.

Note that the cost of \(()\) must be bounded by a constant times the cost of \(()\) if we hope to preserve the competitiveness of the latter. The informal reason why such guarantee is difficult to obtain is that the adversary _knows exactly_ the discretization method used by the team (by adversary, we mean the designer of the cost sequence \(()\), and by the team, we mean the swarm constituting \(()\)). For instance, the naive rounding strategy which would be \((t)_{_{k}()}((t ),)\) does not preserve competitiveness. This is because infinitesimal movements of \(()\) could induce large (order \(1/k\)) movements of \(()\). A good discretization strategy must therefore display a hysteresis phenomenon, in the sense that it does not undo a move right after that move was decided. This is precisely the idea behind our strategy in Equation (1) that employs a potential function \(D(,)\) to insure that \((t)\) remains sufficiently close to \((t)\) and an additional term in \(((t-1),(t))\) to limit the movement cost of \(()\). We note that the technique presents some similarities with first order optimization methods, which have been successful in several areas of online decision making. One key novelty is that it is applied to a discrete space \(_{k}()\).

**Input:**\((t-1)\): Previous barely fractional configuration

**Input:**\((t)\): Next fully fractional distribution

**Output:**\((t)\): Next barely fractional configuration

Solve for \(_{k}()\):

\[*{arg\,min}_{_{k}()}D( ,(t))+((t-1),),\] (1)

where \(D(,)=2(/2+1/(2n),)\), breaking ties by maximizing \(((t-1),)\).

**Theorem 3.1**.: _Consider an abritrary \(n\) point metric \(\), some real \(>0\) and an integer \(k n^{2}/\). For any fractional MTS strategy \(()\) on \(\) which is \(\)-competitive, Algorithm 1 with potential defined in (2) provides a \(k\)-barely fractional MTS strategy \(()\) on \(\) which is \((1+)\)-competitive._

Proof.: We fix an integer \(k n^{2}/\). Consider some \(\)-competitive fractional strategy \(()\). We shall define (in an online manner) a \((1+)\)-competitive \(k\)-barely fractional strategy \(()\), by performing an appropriate discretization of \(()\).

For any pair of distributions \(,()\) we call the potential between \(\) and \(\) and denote by \(D(,)\) the quantity

\[D(,)=(1+)(+,),\] (2)

where \(\) denotes the vector of \(^{}\) with all its values equal to \(1\). The correctness of this definition stems from the fact that we will always have \(/(1+)+/n(1+)()\), because \(()\). Upon arrival of request \((t)^{}_{+}\), the (fully) fractional distribution \((t)\) is computed from a black-box algorithm, and the barely fractional configuration \((t)\) is defined via Equation (1),

\[(t)*{arg\,min}_{_{k}()}D( ,(t))+((t-1),),\]

where ties are broken in favor of the configuration \(\) which maximizes \(((t-1),)\). We now aim to bound the movement and service costs of the aforedefined strategy \(()\) in terms of the movement and service costs of the black-box strategy \(()\).

_Movement Costs._ We start with the movement cost of \(()\). We decompose the change of the potential \(P(t)=D((t),(t))\) as follows,

\[P(t)-P(t-1) =D((t),(t))-D((t-1),(t-1))\] \[=D((t),(t))-D((t-1),(t))+D((t-1), (t))-D((t-1),(t-1)),\] \[-((t-1),(t))+(1+)((t-1),(t)),\]

where the first inequality \(D((t),(t))-D((t-1),(t))-((t-1),(t))\) comes from the optimality of \((t)\) in (1) and the other inequality \(D((t-1),(t))-D((t-1),(t-1))(1+)( (t-1),(t))\) is a direct application of the triangle inequality for optimal transport. We therefore have the at all times \(t 1\),

\[((t-1),(t))  P(t-1)-P(t)+(1+)((t-1),(t)).\] (3)

Taking the (telescopic) sum with (3), we obtain the desired bound on the movement cost of \(()\),

\[_{t 1}((t-1),(t)) _{t 1}P(t-1)-P(t)+(1+)((t-1), (t))\] \[ P(0)+(1+)_{t 1}((t-1),(t )),\]

where \(P(0)=D((0),(0))\) is a constant bounded by the diameter of \(\).

_Service costs._ We shall now show that at all times \(t 1\),

\[:x_{}(t)(1+)y_{}(t).\] (4)

This equation clearly implies that the service cost of \(()\) is at most \((1+)\) that of \(()\). We shall use the following equation from Lemma 3.2 which states that at any time \(t\), and for any configuration \(^{}_{k}()\) such that \(^{}(t)\),

\[D((t),(t))<D(^{},(t))+((t), ^{}).\] (5)

Assume by contradiction that (4) is not satisfied. For some \(\), we have \(x_{}(t)+>y_{}(t)+ \). By applying Lemma 3.3 to the distributions \(=(t)+1\) and \((t)\), with \(=(1+)}\), we obtain that there exists some \(^{}\) such that \(^{}=+(_{^{}}-_{})\) and satisfying \((,(t))=(,^{})+(^{},(t))\), where \((,^{})= d(,^{})\). We then consider the configuration \(^{}=(t)+(_{^{}}-_{})\), which will provide the contradiction by forming a violation of (5). First note that \(^{}_{k}()\) because \(x_{}(t) 1/k\) since \(x_{}(t)>(1+)y_{}(t) 0\). Also, by definition \(^{}(t)\). Finally, \(D((t),(t))=(1+)(,(t))=(1+ )(^{},(t))+(1+) d(,^{ })=D(^{},(t))+d(,^{})=D(^{},(t))+((t),^{})\), which provides the contradiction.

Overall, the movement and service costs of \(()\) are bounded by \((1+)\) those of \(()\) (plus a constant), thus, the \(\)-competitiveness of \(()\) implies the \((1+)\)-competitiveness of \(()\). 

**Lemma 3.2**.: _At any time \(t\), the configuration \((t)\) that is selected by Equation (1) and the associated tie-breaking rule satisfies that for any \(^{}_{k}()\) such that \(^{}(t)\),_

\[D((t),(t))<D(^{},(t))+((t), ^{}).\]

Proof.: Recall that \((t-1)\) is the configuration which immediately preceded \((t)\). Consider and some arbitrary configuration \(^{}_{k}()\). Since \((t)\) achieves the minimum of (1), we have

\[D((t),(t))+((t-1),(t)) D(^{}, (t))+((t-1),^{}).\]

Using the triangle inequality of optimal transport, we also have

\[((t-1),^{})((t-1),(t))+ {OT}((t),^{}).\]

The combination of both inequalities, proves a non-strict version of Equation (5),

\[D((t),(t)) D(^{},(t))+((t),^{}).\] (6)We now explain why this inequality is in fact strict for any \(^{}(t)\). We note that equality can be met in (6) only if equality is also met in both of the aforementioned components of the inequality. We assume that is the case for some \(^{}\) and will now show that \(^{}=(t)\). We have that,

\[D((t),(t))+((t-1),(t))=D(^{ },(t))+((t-1),^{}),\\ ((t-1),^{})=((t-1),(t))+((t),^{}).\]

By the tie-breaking rule of (1), the first inequality implies that \(((t-1),^{})((t-1),(t))\) which allows to conclude, using the second equality that \(((t),^{}) 0\), and thus that \(^{}=(t)\). This relies on the positivity of the optimal transport distance, which follows from the positivity of the distance in the original metric space \(\). 

**Lemma 3.3**.: _Let \(()\) and \(()\) be two distributions on a metric space \(\) with \(n\) points. Assume that for some real \(>0\) and some point \(\) one has \(z_{} y_{}+n\). Then, there is another distribution \(^{}()\), taking the form \(^{}=+(_{^{}}-_{})\) for some other point \(^{}\), which satisfies \((,)=(,^{})+ {OT}(^{},)\), where \((,^{})= d(,^{})\)._

Proof.: By the triangle inequality of the transport distance, for any three distributions \(,^{},()\), we have \((,)(,^{})+ (^{},)\), therefore it will suffice to show the converse inequality. We consider an optimal coupling from \(\) to \(\) denoted by \(=((_{1},_{2}))_{_{1},_{2}^{2}}\). By definition, \(z_{}-y_{}=_{_{1}}(,_{1})-(_{1 },) n\). In this sum of \(n\) terms, at least one term has to exceed \(\). This allows to define one point \(^{}\) such that \((,^{})\).

Next we consider the distribution \(^{}=+(_{^{}}-_{})\). First, observe that this distribution is well-defined, since \(z_{}\). Then, we note that \(^{}=+(_{^{}}_{^{}}- _{}_{^{}})\) defines a coupling from \(^{}\) to \(\) and thus,

\[(^{},)_{_{1},_{2}}d(_{1}, _{2})^{}(_{1},_{2})=(,)-(,^{}),\]

which finishes the proof. 

## 4 Discussion, lower-bound and open directions

### Uniform metric space

The uniform metric space is is a notoriously simple special case of metrical task systems. It is the metric space where all pairs of nodes are at the same distance \(,^{},^{} d( ,^{})=1\). The (fully) randomized competitive ratio of metrical task systems on the uniform metric space is known to lie between \(H_{n}\) and \(2H_{n}\), where \(H_{n}\) is the \(n\)-th harmonic number.

In this section, we show that \( n\) bits of randomness are sufficient to achieve a constant factor optimal competitive ratio on the uniform metric space. The proof can be seen as a direct discretization of the algorithm of , and as an application of the 'game of balls and urns' in .

**Proposition 4.1**.: _There is a \(n\)-barely random and \(2H_{n}+6\)-competitive algorithm for metrical task systems on the uniform metric space of cardinality \(n\)._

Proof.: Following , we decompose the time in discrete phases, in order to obtain a lower bound on \((())\). The \(0\)-th phase starts at \(t_{0}=0\) and for \(i\), the \(r\)-th phase begins at time \(t_{i}\) and ends right before \(t_{i+1}\) which is defined as the first instant satisfying that \(:_{t_{i} t<t_{i+1}}c_{}(t) 1\). Without loss of generality we can assume for simplicity that there always exist a state \(_{i}\) such that \(_{t_{i} t<t_{i+1}}c_{_{i}}(t)=1\) (see the continuous-time variant of metrical task systems, as in , for a justification). We denote by \(i^{*}\) the total number of phases, which only depends on the cost sequence \(()\). We observe that \((()) i^{*}\), because the cost incurred by any fixed trajectory is at least one during a given phase, and the cost of any mobile trajectory is also at least one.

The idea of  is to define a randomized algorithm that incurs a cost of at most \(2H_{n}\) in each phase, and which is thus \(2H_{n}\)-competitive. In a given phase \(i\), for any \(t[t_{i},t_{i+1})\), the strategy consists in assigning \((t)\) to be the uniform probability distribution over the states in \(\{:_{t_{i} t}c_{}() 1\}\), which are the non-saturated states. This strategy suffers a movement cost of at most \(1+1/n+1/(n-1)+1/2=H_{n}\), where \(H_{n}\) denotes the \(n\)-th harmonic number. Note that the service cost of this strategy is less or equal to its movement cost, so it is \(2H_{n}\)-competitive. Ufortunately, the strategy is not \(n\)-barely fractional, because it takes values in \(\{1/n,1/(n-1),,1\}\) which are not all multiples of \(1/n\).

We consider a simple discretization of this strategy, which does not suffers from the caveat described in Section 3. This descritization relies on the decomposition in phases which is specific to the uniform metric space. It can be seen as an application of the analysis of the 'game of balls and urns' which was used to design a collective tree exploration algorithm in . We recall the definition of the game. The game starts with \(n\) balls each located in one of \(n\) urns. In discrete rounds, an adversary picks an urn which contains a ball and the player has to move one ball in that urn to any other urn. The game ends when all urns have been chosen at least once by the adversary, and the cost of the player is the number of rounds before the end of the game, re-normalized by \(1/n\). The simple strategy for the player that consists in relocating selected balls to the least loaded urn is known to induce a cost of at most \((n)+3 H_{n}+3\). Observe that this game models exactly the movement cost a corresponding \(n\)-barely fractional strategy in a given phase (where each ball represents a probability mass of \(1/n\) and each urn represents a point of the uniform metric space). Also, since the service cost is (again) bounded by the movement cost in a given phase, the strategy is \(2H_{n}+6\)-competitive. 

### Lower-bound on the number of random bits

We now explain why \(( n)\) random bits are required to obtain an asymptotically optimal competitive ratio. We show the stronger result that a \(k\)-barely random algorithm for metrical task systems is at most \((2n-1)/k\)-competitive. Thus, a \((^{2}n)\)-competitive strategy must have \(k cst n/^{2}n\) - corresponding to a lower-bound of \( k n-( n)\) in the number of random bits.

**Proposition 4.2**.: _The competitive ratio of \(k\)-barely random algorithms for metrical task systems is at least \((2n-1)/k\)._

Proof.: Consider a barely random algorithm \((,)\), with \(=(\{1,,k\})\). The deterministic algorithm \((,1)\) is sampled with probability \(1/k\). By the \(2n-1\) lower-bound of  on the competitive ratio of deterministic algorithms for metrical task systems, there exists a sequence \(()_{+}^{}\) such that \((^{(,1)}(),( ))(2n-1)(())\). Integrating over the seed \((\{1,,k\})\), we get \(_{}((^{( ,)}(),())) (())\). 

The question of whether an order-optimal randomized competitive ratio can be achieved with \(k=O(n)\) instead of \(k n^{2}\) remains open on general metric spaces. This seems plausible for weighted star metrics, which admit a \(( n)\) competitive strategies via an algorithm working in phases . It is also possible that some metric spaces do require \(k=(n^{2})\). Demonstrating such cutoff for barely random algorithms would nicely echo the cutoff between \(( n)\) and \((^{2}n)\) that seems to appear in the competitive ratio.

### Conclusion and open directions for collective algorithms

The term 'collective algorithm' used in this paper is borrowed from the literature on distributed algorithms [34; 24]. We believe that highlighting situations in which a team of agent can be competitive/intelligent in a way that no single agent could be is an interesting research direction. As presented in this paper, such situations echo the well-studied competitive gap between randomized and deterministic algorithms for online problems . But collective algorithms come with considerations that go beyond their analogy with barely-random algorithms. For instance, one can study the competitiveness of collective algorithms under: restricted communications (such as the write-read model of  or the local model of ), synchronous movements (as discussed in ), capacity constraints (where the amount of agents at a position is limited [6; 25]) or even with agents having some degree of selfishness or maliciousness (then involving a price of anarchy  for selfish agents, or some degree of robustness to byzantine faults  for malicious agents).

AcknowledgementsThe authors thank the anonymous reviewers for their helpful comments. RC thanks Spyros Angelopoulos, Nikhil Bansal, Christian Coester and Christoph Durr for discussions. This work was supported by PRAIRIE ANR-19-P3IA-0001.