# Lossy Image Compression

with Conditional Diffusion Models

 Ruihan Yang

Department of Computer Science

University of California Irvine

ruihan.yang@uci.edu

&Stephan Mandt

Department of Computer Science

University of California Irvine

mandt@uci.edu

###### Abstract

This paper outlines an end-to-end optimized lossy image compression framework using diffusion generative models. The approach relies on the transform coding paradigm, where an image is mapped into a latent space for entropy coding and, from there, mapped back to the data space for reconstruction. In contrast to VAE-based neural compression, where the (mean) decoder is a deterministic neural network, our decoder is a conditional diffusion model. Our approach thus introduces an additional "content" latent variable on which the reverse diffusion process is conditioned and uses this variable to store information about the image. The remaining "texture" variables characterizing the diffusion process are synthesized at decoding time. We show that the model's performance can be tuned toward perceptual metrics of interest. Our extensive experiments involving multiple datasets and image quality assessment metrics show that our approach yields stronger reported FID scores than the GAN-based model, while also yielding competitive performance with VAE-based models in several distortion metrics. Furthermore, training the diffusion with \(\)-parameterization enables high-quality reconstructions in only a handful of decoding steps, greatly affecting the model's practicality. Our code is available at: https://github.com/buggyyang/CDC_compression

## 1 Introduction

With visual media vastly dominating consumer internet traffic, developing new efficient codecs for images and videos has become evermore crucial (Cisco, 2017). The past few years have shown considerable progress in deep learning-based image codecs that have outperformed classical codecs in terms of the inherent tradeoff between rate (expected file size) and distortion (quality loss) (Balle et al., 2018; Minnen et al., 2018; Minnen and Singh, 2020; Zhu et al., 2021; Yang et al., 2020; Cheng et al., 2020; Yang et al., 2023). Recent research promises even more compression gains upon optimizing for perceptual quality, i.e., increasing the tolerance for imperceivable distortion for the benefit of lower rates (Blau and Michaeli, 2019). For example, adding adversarial losses (Agustsson et al., 2019; Mentzer et al., 2020) showed good perceptual quality at low bitrates.

Most state-of-the-art learned codecs currently rely on transform coding and involve hierarchical "compressive" variational autoencoders (Balle et al., 2018; Minnen et al., 2018; Cheng et al., 2020).

Figure 1: Overview of our proposed compression architecture. A discrete “content” latent variable \(}\) contains information about the image. Upon decoding, this variable is used for conditioning a denoising diffusion process. The involved “texture” variables \(}_{1:N}\) are synthesized on the fly.

These models simultaneously transform the data into a lower dimensional latent space and use a learned prior model for entropy-coding the latent representations into short bit strings. Using either Gaussian or Laplacian decoders, these models directly optimize for low MSE/MAE distortion performance. Given the increasing focus on perceptual performance over distortion, and the fact that VAEs suffer from mode averaging behavior inducing blurriness (Zhao et al., 2017) suggest expected performance gains when replacing the Gaussian decoder with a more expressive conditional generative model.

This paper proposes to relax the typical requirement of Gaussian (or Laplacian) decoders in compression setups and presents a more expressive generative model instead: a conditional diffusion model. Diffusion models have achieved remarkable results on high-quality image generation tasks (Ho et al., 2020; Song et al., 2021, 2021). By hybridizing hierarchical compressive VAEs (Balle et al., 2018) with conditional diffusion models, we create a novel deep generative model with promising properties for perceptual image compression. This approach is related to but distinct from the recently proposed Diff-AEs (Preechakul et al., 2022), which are neither variational (as needed for entropy coding) nor tailored to the demands of image compression.

We evaluate our new compression model on four datasets and investigate a total of 16 different metrics, ranging from distortion metrics, perceptual reference metrics, and no-reference perceptual metrics. We find that the approach yields the best reported performance in FID and is otherwise comparable with the best available compression models while showing more consistent behavior across the different tasks. We also show that making the decoder more stochastic vs. deterministic offers a new possibility to steer the tradeoff between distortion and perceptual quality (Blau and Michaeli, 2019). Crucially, we find that a certain parameterization-\(\)-prediction (Salimans and Ho, 2022)-can yield high-quality reconstructions in only a handfull of diffusion steps.

In sum, our contributions are as follows:

* We propose a novel transform-coding-based lossy compression scheme using diffusion models. The approach uses an encoder to map images onto a contextual latent variable; this latent variable is then fed as context into a diffusion model for reconstructing the data. The approach can be modified to enhance several perceptual metrics of interest.
* We derive our model's loss function from a variational upper bound to the diffusion model's implicit rate-distortion function. The resulting distortion term is distinct from traditional VAEs in capturing a richer decoding distribution. Moreover, it achieves high-quality reconstructions in only a handful of denoising steps.
* We provide substantial empirical evidence that a variant of our approach is, in many cases, better than the GAN-based models in terms of perceptual quality, such as FID. Our base model also shows comparable rate-distortion performance with MSE-optimized baselines. To this end, we considered four test sets, three baseline models (Wang et al., 2022; Mentzer et al., 2020; Cheng et al., 2020), and up to sixteen image quality assessment metrics.

## 2 Related Work

Transform-coding Lossy Image CompressionThe widely-established classical codecs such as JPEG (Wallace, 1991), BPG (Bellard, 2018), WEBP (Google, 2022) have recently been challenged by end-to-end learned codecs (Balle et al., 2018; Minnen et al., 2018; Minnen and Singh, 2020; Yang et al., 2020; Cheng et al., 2020; Zhu et al., 2021; Wang et al., 2022; He et al., 2022). These methods typically draw on the non-linear transform coding paradigm as realized by hierarchical VAEs. Usually, neural codecs are optimized to simultaneously minimize rate and _distortion_ metrics, such as mean squared error or structural similarity.

In contrast to neural compression approaches targeting traditional metrics, some recent works have explored compression models to enhance _realism_(Agustsson et al., 2019; Mentzer et al., 2020; Tschannen et al., 2018; Agustsson et al., 2022; He et al., 2022). A theoretical background for these approaches was provided by Blau and Michaeli (2019); Zhang et al. (2021); in particular Blau and Michaeli (2019) discussed the existence of a fundamental tradeoff between distortion and realism, i.e., both goals can not be achieved at the same time in a given architecture. To realize this tradeoff in compression, Mentzer et al. (2020); Agustsson et al. (2022) optimized the autoencoder-basedcompression model with an additional adversarial loss, while GAN training in this context can be unstable and requires a variety of design choices.

Diffusion ModelsProbabilistic diffusion models showed impressive performance on image generation tasks, with perceptual qualities comparable to those of highly-tuned GANs while maintaining stable training (Song and Ermon, 2019; Ho et al., 2020; Song et al., 2021; Song and Ermon, 2019; Kingma et al., 2021; Yang et al., 2022; Ho et al., 2022; Saharia et al., 2022; Preechakul et al., 2022). Popular recent diffusion models include Dall-E2 (Ramesh et al., 2022) and Stable-Diffusion (Rombach et al., 2022). Some works also proposed diffusion models for compression. Hoogeboom et al. (2021) evaluated an autoregressive diffusion model (ADM) on a lossless compression task. Besides the difference between lossy and lossless compression, the model is only tested on low-resolution CIFAR-10 (Krizhevsky et al., 2009) dataset. Theis et al. (2022) used a generic unconditional diffusion model to lossily communicate Gaussian samples. Their method leverages "reverse channel coding", which is orthogonal to the usual transform-coding paradigm. While it's under active research, there is currently no practical method that can reduce its extensive computational cost without restrictive limitation (Li and El Gamal, 2018; Flamich et al., 2020, 2022; Theis and Ahmed, 2022).

## 3 Method

### Background

Denoising diffusion modelsare hierarchical latent variable models that generate data by a sequence of iterative stochastic denoising steps (Sohl-Dickstein et al., 2015; Ho et al., 2020; Song et al., 2021; Song and Ermon, 2019). These models describe a joint distribution over data \(_{0}\) and latent variables \(_{1:N}\) such that \(p_{}(_{0})= p_{}(_{0:N})d_{1:N}\). While a diffusion process (denoted by \(q\)) incrementally _destroys_ structure, its reverse process \(p_{}\)_generates_ structure. Both processes involve Markovian dynamics between a sequence of transitional steps (denoted by \(n\)), where

\[ q(_{n}|_{n-1})=( _{n}|}_{n-1},_{n});\\ p_{}(_{n-1}|_{n})=(_{n-1}|M_{}(_{n},n),_{n}).\] (1)

The variance schedule \(_{n}(0,1)\) can be either fixed or learned; besides it, the diffusion process is parameter-free. The denoising process predicts the posterior mean from the diffusion process and is parameterized by a neural network \(M_{}(_{n},n)\).

Denoising Diffusion Probabilistic Model (DDPM) (Ho et al., 2020) showed a tractable objective function for training the reverse process. A simplified version of their objective resulted in the following _noise parameterization_, where one seeks to predict the noise \(\) used to perturb a particular image \(_{0}\) from the noisy image \(_{n}\) at noise level \(n\):

\[L(,_{0})=_{n,}||-_{}( _{n}(_{0}),n)||^{2}.\] (2)

Above, \(n\{1,...,N\}\), \((,)\), \(_{n}(_{0})=}_{0}+}\), and \(_{n}=_{i=1}^{n}(1-_{i})\). At test time, data can be generated by ancestral sampling using Langevin dynamics. Alternatively, Song et al. (2021) proposed the Denoising Diffusion Implicit Model (DDIM) that follows a deterministic generation procedure after an initial stochastic draw from the prior. Our paper uses the DDIM scheme at test time, see Section 3.2 for details.

Neural image compressionseeks to outperform traditional image codecs by machine-learned models. Our approach draws on the transform-coding-based neural image compression approach (Theis et al., 2017; Balle et al., 2018; Minnen et al., 2018), where the data are non-linearly transformed into a latent space, and subsequently discretized and entropy-coded under a learned "prior". The approach shows a strong formal resemblance to VAEs and shall be reviewed in this terminology.

Let \(\) be a continuous latent variable and \(}=\) the corresponding rounded, integer vector. The VAE-based compression approach consists of a stochastic encoder \(e(|)\), a prior \(p()\), and a decoder \(p(|)\). The model is trained using the negative modified ELBO,

\[(,)=+=_{  e(|)}[- p(|)-  p()].\] (3)

The first term measures the average reconstruction of the data (distortion \(\), usually measured by MSE), while the second term measures the costs of entropy coding the latent variables under the prior (bitrate \(\)). The encoder \(e(|)=(_{}()-,_{}()+)\) is a boxed-shaped distribution that simulates rounding at training time through noise injection due to the reparameterization trick. Note its differential entropy equals zero.

Once the VAE is trained, we en/decode data using the deterministic components as \(}=()\) and \(}=(})\). We convert the continuous \(p()\) into a discrete \(P(})\) using \(P(})=_{p}(}+0.5)-_{p}(}-0.5)\), where \(_{p}\) is the cumulative distribution function of \(p()\); see (Yang et al., 2023) [Sec. 2.1.6] for details. The discrete prior is used for entropy coding \(}\)(Balle et al., 2018).

While VAE-based approaches have used simplistic (e.g., Gaussian) decoders, we show that can get significantly better results when defining the decoder \(p(|)\) as a conditional diffusion model.

### Conditional Diffusion Model for Compression

The basis of our compression approach is a new latent variable model: the diffusion variational autoencoder. This model has a "semantic" latent variable \(\) for encoding the image content, and a set of "texture" variables \(_{1:N}\) describing residual information,

\[p(_{0:N},)=p(_{0:N}|)p().\] (4)

As detailed below, the decoder will follow a denoising process conditioned on \(\). Drawing on methods described in Section 3.1, we use a neural encoder \(e(|_{0})\) to encode the image. The prior \(p()\) is a two-level hierarchical prior (commonly used in learned image compression) and is used for entropy coding \(\) after quantization (Balle et al., 2018). Next, we discuss the novel decoder model.

Decoder and training objectiveWe construct the conditional denoising diffusion model in a similar way to the non-variational diffusion autoencoder of Preechakul et al. (2022); Wang et al. (2023). In analogy to Eq. 1, we introduce a conditional denoising diffusion process for decoding the latent \(\),

\[p_{}(_{0:T}|)=p(_{N}) p_{}( _{n-1}|_{n},)=p(_{N}) (_{n-1}|M_{}(_{n},,n),_{n}).\] (5)

Since the texture latent variables \(_{1:N}\) are not compressed but synthesized at decoding time, the optimal encoder and prior should be learned jointly with the decoder's marginal likelihood \(p(_{0}|)= p(_{0:N}|)d_{1 :N}\) while targeting a certain tradeoff between rate and distortion specified by a Lagrange parameter \(\). We can upper-bound this rate-distortion (R-D) objective by invoking Jensen's inequality,

\[_{ e(|_{0})}[- p(_{0 }|)- p()]_{ e( |_{0})}[L_{}(_{0}|)-  p()],\]

where we introduced \(L_{}(_{0}|)=-_{_{1:N}  q(_{1:N}|_{0})}[_{0:N}| )}{q(_{1:N}|_{0})}]\) as the variational upper bound to the diffusion model's negative data log likelihood (Ho et al., 2020). We realize that \(L_{}(_{0}|)\) corresponds to a novel _image distortion_ metric induced by the conditional diffusion model (in analogy to how a Gaussian decoder induces the MSE distortion). This term measures the model's ability to reconstruct the image based on \(\). In contrast, \(- p()\) measures the number of bits needed to compress \(\) under the prior. As in most other works on neural image compression (Balleet al., 2018; Minnen et al., 2018; Yang et al., 2023), we use a box-shaped stochastic encoder \(e(|_{0})\) that simulates rounding by noise injection at training time.

In analogy to Eq. 2, we simplify the training objective by using the denoising score matching loss,

\[L_{}(_{0}|)_{_{0},n,}||-_{}(_{n},,}})||^{2}=_{_{0},n,} }{1-_{n}}||_{0}-_{}(_{n},,}})||^{2}\] (6)

The noise level \(n\) and \(_{n}\) are defined in Eq. 2. Instead of conditioning on \(n\), we condition the model on the pseudo-continuous variable \(}}\) which offers additional flexibility in choosing the number of denoising steps for decoding (e.g., we can use a \(N_{}\) smaller than \(N_{}\)). The right-hand-side equation describes an alternative form of the loss function, where \(_{}\) directly learns to reconstruct \(_{0}\) instead of \(\)(Salimans and Ho, 2022). We can easily derive the equivalence with \(_{}(_{n},,)=_{n }-}_{}(_{n},,)}{}}\).

Decoding processOnce the model is trained, we entropy-decode \(\) using the prior \(p()\) and conditionally decode the image \(_{0}\) using ancestral sampling. We consider two decoding schemes: a stochastic one with \(_{N}(0,^{2}I)\) (where \(>0\)) and a deterministic version with \(_{N}=\) (or \(=0\)), both following the DDIM sampling method:

\[_{n-1}=}_{}(_{n}, ,)+}_{}(_{n},,)\] (7)

Since the variables \(_{1:N}\) are not stored but generated at test time, these "texture" variables can result in variable reconstructions upon stochastic decoding (see Figure 5 for decoding with different \(\)). Algorithm 1 summarizes training and encoding/decoding.

Fast decoding using \(\)-predictionIn most applications of diffusion models, the iterative generative process is a major roadblock towards fast generation. Although various methods have been proposed to reduce the number of iterations, they often require additional post-processing methods, such as progress distillation (Salimans and Ho, 2022) and parallel denoising (Zheng et al., 2022).

Surprisingly, in our use case of diffusion models, we found that the \(\)-prediction model with _only a handfull of decoding steps_ achieves comparable compression performance to the \(\)-model with hundreds of steps, without the need of any post-processing. This can be explained by closely inspecting \(\)-prediction objective from Eq. 6 that almost looks like an autoencoder loss, with the modification that \(n\) and \(_{n}\) are given as additional inputs. When \(n\) is large, \(_{n}\) looks like pure noise and doesn't contain much information about \(_{0}\); in this case, \(\) will ignore this input and reconstruct the data based on the content latent variable \(\). In contrast, if \(n\) is small, \(_{n}\) will closely resemble \(_{0}\) and hence carry _more_ information than \(\) to reconstruct the image. This is to say that our diffusion objective inherits the properties of an autoencoder to reconstruct the data in a single iteration; however, successive decoding allows the model to refine this estimate and arrive at a reconstruction closer to the data manifold, with beneficial effects for perceptual properties.

Optional Perceptual LossWhile Eq. 6 already describes a viable loss function for our conditional diffusion compression model, we can influence the perceptual quality of the compressed images by introducing additional loss functions similar to (Mentzer et al., 2020).

First, we note that the decoded data point can be understood as a function of the low-level latent \(_{n}\), the latent code \(\), and the iteration \(n\), such that \(}_{0}=_{}(_{n},,n/N)\) or \(_{n}-}_{}(_{n}, ,n/N)}{}}\). When minimizing a perceptual metric \(d(,)\), we can therefore add a new term to the loss:

\[L_{}=_{,n,(|_{0})}[d(}_{0},_{0})]L_{}=_{(|_{0})}[L _{}(_{0}|)- p( )]\] (8)

\[L= L_{}+(1-)L_{}.\] (9)

This loss term is weighted by an additional Lagrange multiplier \([0,1)\), resulting in a three-way tradeoff between rate, distortion, and perceptual quality (Yang et al., 2023).

We stress that different variations of perceptual losses for compression have been proposed (Yang et al., 2023). While this paper uses the widely-adopted LPIPS loss (Zhang et al., 2018), other approaches add an adversarial term that seek to make the reconstructions indistinguishable from reconstructed images. In this setup, Blau and Michaeli (2019) have proven mathematically that it is impossible to simultaneously obtain abitrarily good perceptual qualities and low distortions. In this paper, we observe a similar fundamental tradeoff between perception and distortion.

## 4 Experiments

We conducted a large-scale compression evaluation involving multiple image quality metrics and test datasets. Besides metrics measuring the traditional distortion scores, we also consider metrics that can reflect perceptual quality. While some of these metrics are fixed, others are learned from data. We will refer to our approach as "Conditional Diffusion Compression" (CDC).

MetricsWe selected sixteen metrics for image quality evaluations, of which we present eight most widely-used ones in the main paper and the remaining eight in the appendix. Specifically, several more recently proposed learned metrics (Heusel et al., 2017; Zhang et al., 2018; Prashnani et al., 2018; Ding et al., 2020) capture perceptual properties/realism better than other non-learned methods; we denote these metrics as _perceptual metrics_ and the others as _distortion metrics_. It is important to note that when calculating FID, we follow Mentzer et al. (2020) by segmenting images into non-overlapping patches of \(256 256\) resolution. A brief introduction about the metrics is also available in Appendix D.

Test DataTo support our compression quality assessment, we consider the following datasets with necessary preprocessing: **1. Kodak**(Franzen, 2013): The dataset consists of 24 high-quality images at \(768 512\) resolution. **2. Tecnick**(Asuni and Giacheti, 2014): We use 100 natural images with \(600 600\) resolutions and then downsample these images to \(512 512\) resolution. **3. DIV2K**(Agustsson and Timofte, 2017): The validation set of this dataset contains 100 high-quality images. We resize the images with the shorter dimension being equal to 768px. Then, each image is center-cropped to a \(768 768\) squared shape. **4. COCO2017**(Lin et al., 2014): For this dataset, we extract all test images with resolutions higher than \(512 512\) and resize them to \(384 384\) resolution to remove compression artifacts. The resulting dataset consists of 2695 images.

Model TrainingOur model was trained using the well-established Vimeo-90k dataset (Xue et al., 2019), which includes 90,000 video clips, each containing 7-frame sequences with a resolution of \(448 256\) pixels, curated from vimeo.com. For each iteration, we randomly selected one frame from every video clip, which was then subject to random cropping to achieve a uniform resolution of \(256 256\) pixels.

Figure 2: Tradeoffs between bitrate (x-axes, in bpp) and different metrics (y-axes) for various models tested on DIV2K. We consider both perceptual (red frames) and distortion metrics (blue frames). Arrows in the plot titles indicate whether high (\(\)) or low (\(\)) values indicate a better score. CDC (proposed) in its basic version (deterministic, without finetuning to LPIPS) compares favorably in distortion metrics, while CDC with stochastic decoding and added LPIPS losses performs favorably on perceptual metrics.

The training procedure initiated with a warm-up phase, setting \(\) to \(10^{-6}\) and running the model for approximately 700,000 steps. Subsequently, we increased \(\) to align with the desired bitrates and continued training for an additional 1,000,000 steps until the model reached convergence.

For the \(\)-prediction model, our training utilized diffusion process comprising \(N_{}=20,000\) steps. Conversely, the number of diffusion steps for the \(\)-prediction model is \(N_{}=8,193\). We implemented a linear variance schedule to optimize the \(\)-prediction model, while a cosine schedule was selected for the \(\)-prediction model optimization. Throughout the training regime, we maintained a batch size of 4. The Adam optimizer (Kingma and Ba, 2014) was employed to facilitate efficient convergence. We commenced with an initial learning rate of \(lr=5 10^{-5}\), which was reduced by 20% after every 100,000 steps, ultimately clipped to a learning rate of \(lr=2 10^{-5}\).

### Baseline Comparisons

Baselines and Model VariantsWe showed two variants of our \(\)-prediction CDC model. Our first proposed model is optimized in the presence of an additive perceptual reconstruction term at \(=0.9\), which is the largest \(\)-value we chose. For this variant, we used \(_{N}(0,^{2}I)\) with \(=0.8\) to reconstruct the images. The other proposed version is the base model, trained without the additional perceptual term (\(=0\)) and using a deterministic decoding with \(_{N}=0\). As discussed below, this base version performs better in terms of distortion metrics, while the stochastic and LPIPS-informed version performs better in perceptual metrics.

We compare our method with several neural compression methods. The best reported perceptual results were obtained by **HiFiC**(Mentzer et al., 2020). This model is optimized by an adversarial network and employs additional perceptual and traditional distortion losses (LPIPS and MSE). In terms of rate-distortion performance, two VAE models are selected: **DGML**(Cheng et al., 2020) and **NSC**(Wang et al., 2022). Both are the improvements over the MSE-trained Mean-Scale Hyperprior (**MS-Hyper**) architecture (Minnen et al., 2018). For a fair comparison, we did not use the content-adaptive encoding for NSC model. For comparisons with classical codecs, we choose **BPG** as a reference.

Figure 2 illustrates the tradeoff between bitrate and image quality using the DIV2K dataset. We only employ **17** steps to decode the images with \(\)-prediction model, which is much more efficient than \(\)-prediction model that requires hundreds of steps to achieve comparable performance (see Appendix H for results on other datasets and comparison with \(\)-prediction). In the figure, dashed lines represent the baseline models, while solid lines depict our proposed CDC models. The eight shown plots present two different types of metrics, distinguished by their respective frame colors.

Figure 3: Reconstructed Kodak images (cropped images, see full images in Appendix F). \(1^{}\) row: compared to HiFiC under similar bitrate, our model retains more details around the eyes of the parrot. \(2^{}\) row: our model still gets slightly better visual reconstruction than HiFiC while using _less_ bitrate.

* **Perceptual Metrics (red)**. The red subplots depict perceptual metrics that assess the compression for realism performance. Our findings reveal that our proposed CDC model (\(=0.9\)) achieves the best performance in three out of four metrics. The closest competitor is the HiFiC baseline. Notably, HiFiC demonstrates the highest score in LPIPS but exhibits suboptimal performance in all other metrics.
* **Distortion Metrics (blue)**. The blue subfigures present distortion-based metrics. We note that the CDC model with \(=0\) produces relatively favorable results in distortion metrics, excluding PSNR. It shows on-par scores with the best baselines in FSIM, SSIM, and MS-SSIM scores, despite none of the shown models being specifically optimized for these three metrics. In contrast, "classical" neural compression models (Minnen et al., 2018; Wang et al., 2022; Cheng et al., 2020) directly target MSE distortion by minimizing an ELBO objective with Gaussian decoders, resulting in better PSNR scores.

Our proposed versions CDC (\(\)=0) and CDC (\(\)=0.9) show qualitative differences in perceptual and distortion metrics. Setting \(=0\) only optimizes a trade-off between bitrate and the diffusion loss; compared to \(=0.9\), this results in better performance in model-based distortion metrics (i.e., except PSNR). Fig. 3 qualitatively shows that the resulting decoded images show fewer over-smoothing artifacts than VAE-based codecs (Cheng et al., 2020). In contrast, CDC (\(\)=0.9) performs the best in perceptual metrics. These are often based on extracted neural network features, such as Inception or VGG (Szegedy et al., 2016; Simonyan and Zisserman, 2014), and are more susceptible to image realism. By varying \(\), we can hence control a three-way trade-off among distortion, perceptual quality, and bitrate (See Appendix E for results with other \(\) values).

Distortion vs. PerceptionOur experiments revealed the aforementioned distortion-perception tradeoff in learned compression (Blau and Michaeli, 2019). In contrast to perceptual metrics, distortions such as PSNR are very sensitive to imperceptible image translations (Wang et al., 2005). The benefit of distortions is that they carry out a direct comparison between the reconstructed and original image, albeit using a debatable metric (Dosovitskiy and Brox, 2016). The question of whether distortion or perceptual quality is more relevant may ultimately not be easily solvable; yet it is plausible that most compression gains can be expected when targeting a combination of perception/realism and distortion, rather than distortion alone (Mentzer et al., 2020; Yang et al., 2023). Especially, our method's strong performance in terms of FID, one of the most widely-adopted perceptual evaluation schemes (Ho et al., 2020; Song and Ermon, 2019; Mentzer et al., 2020; Brock et al., 2019; Song et al., 2021a,b), seems promising in this regard.

Figure 4: Compression performance with different numbers of decoding step. We use \(=0\) (deterministic decoding) to plot distortion curves and \(=1\) for perceptual quality curves.

### Ablation Studies

Influence of decoding stepsIn the previous section, we demonstrated that the CDC \(\)-prediction model can achieve decent performance with a small number of decoding steps. In Figure 4, we further investigate the compression performance of the \(\)-prediction\((=0)\) model using different decoding steps. Our findings reveal that when employing stochastic decoding, the model consistently produces better _perceptual_ results as the number of decoding steps increases. However, in the case of deterministic decoding, more decoding steps do not lead to a substantial improvement in _distortion_.

Our findings show that the \(\)-prediction model can behave similarly to a Gaussian VAE decoder. In this scenario, the latent code \(\) becomes the primary determinant of the decoding outcome, enabling the model to reconstruct the original image \(_{0}\) with a single decoding step. However, even a single decoding step has a tendency to reconstruct data closer to the data mode, only guaranteeing an acceptable distortion score. To effectively improve perceptual quality, it is crucial to incorporate more iterative decoding steps, particularly when utilizing stochastic decoding. Thus, we further explore the impact of stochastic decoding through the following ablation experiment.

Stochastic DecodingBy adjusting the noise level parameter, denoted as \(\), during the image decoding process, we can achieve different decoding outcomes. In order to investigate the impact of the noise on the decoding results, we present Figure 5, which provides both quantitative and qualitative evidence for 4 candidates \(\) values. Our findings indicate that larger values lead to improved perceptual quality and higher distortion, as evidenced by lower LPIPS and lower MS-SSIM. Values of \(\) greater than 0.8 not only increase distortion but also diminish perceptual quality. In terms of finding the optimal balance, a \(\) value of 0.8 offers the lowest LPIPS and the best qualitative outcomes as shown in Figure 5. From a qualitative standpoint, we notice that the noise introduces plausible high-frequency textures. Although these textures may not perfectly match the uncompressed ones (which is impossible), they are visually appealing when an appropriate \(\) is chosen. For additional insights into our decoding process, we provide visualizations of the decoding steps in Appendix G. These visualizations showcase how "texture" variables evolve during decoding. We observe that this phenomenon becomes particularly pronounced when employing the \(\)-prediction, as \(\)-prediction models exhibit a stronger inclination towards reconstruction.

## 5 Conclusion & Discussion

We proposed a transform-coding-based neural image compression approach using diffusion models. We use a denoising decoder to iteratively reconstruct a compressed image encoded by an ordinary neural encoder. Our loss term is derived from first principles and combines rate-distortion variational autoencoders with denoising diffusion models. We conduct quantitative and qualitative experiments to compare our method against several GAN and VAE based neural codec

Figure 5: Qualitative comparison of deterministic and stochastic decoding methods. Deterministic decoding typically results in a smoother image reconstruction. By increasing the noise \(\) used upon decoding the images, we observe more and more detail and rugged texture on the face of the sculpture. (\(=0.8\)) show the best agreement with the ground truth image. All the images share the same bpp.

promising results in terms of the rate-perception tradeoff, outperforming GAN baselines in three out of four metrics, including FID. In terms of classical distortion, our approach still performs comparable to highly-competitive baselines.

Limitations & Societal ImpactsIn our quest to enhance compression performance, further improvement can be achieved by integrating advanced techniques such as autoregressive entropy models or iterative encoding. We leave such studies for future research.

One critical societal concern associated with neural compression, particularly when prioritizing perceptual quality, is the risk of misrepresenting data in the low bitrate regime. Within this context, there is a possibility that the model may generate hallucinated lower-level details. For example, compressing a human face may lead to a misrepresentation of the person's identity, which raises important considerations regarding fairness and trustworthiness in learned compression.

## 6 Acknowledgement

The authors acknowledge support by the IARPA WRIVA program, the National Science Foundation (NSF) under the NSF CAREER Award 2047418; NSF Grants 2003237 and 2007719, the Department of Energy, Office of Science under grant DE-SC0022331, as well as gifts from Intel, Disney, and Qualcomm.