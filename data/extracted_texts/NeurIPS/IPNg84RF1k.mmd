# Towards Characterizing the First-order Query

Complexity of Learning (Approximate) Nash

Equilibria in Zero-sum Matrix Games

 Hedi Hadji

Laboratoire des signaux et systemes

Univ. Paris-Saclay, CNRS, CentraleSupelec

&Sarah Sachs, Tim van Even

Korteweg-de Vries Institute for Mathematics

University of Amsterdam

&Wouter Koolen

Centrum Wiskunde & Informatica and University of Twente

###### Abstract

In the first-order query model for zero-sum \(K K\) matrix games, players observe the expected pay-offs for all their possible actions under the randomized action played by their opponent. This classical model has received renewed interest after the discovery by Rakhlin and Sridharan that \(\)-approximate Nash equilibria can be computed efficiently from \(O( K/)\) instead of \(O( K/^{2})\) queries. Surprisingly, the optimal number of such queries, as a function of both \(\) and \(K\), is not known. We make progress on this question on two fronts. First, we fully characterise the query complexity of learning exact equilibria (\(=0\)), by showing that they require a number of queries that is linear in \(K\), which means that it is essentially as hard as querying the whole matrix, which can also be done with \(K\) queries. Second, for \(>0\), the current query complexity upper bound stands at \(O(((K)/,K))\). We argue that, unfortunately, obtaining a matching lower bound is not possible with existing techniques: we prove that no lower bound can be derived by constructing hard matrices whose entries take values in a known countable set, because such matrices can be fully identified by a single query. This rules out, for instance, reducing to an optimization problem over the hypercube by encoding it as a binary payoff matrix. We then introduce a new technique for lower bounds, which allows us to obtain lower bounds of order \((())\) for any \( 1/(cK^{4})\), where \(c\) is a constant independent of \(K\). We further discuss possible future directions to improve on our techniques in order to close the gap with the upper bounds.

## 1 Introduction

Computing the saddle point

\[_{x}_{y}f(x,y)\]

for convex-concave functions \(f:\) is of general interest throughout optimization, economics and machine learning. We study the computation of an approximate saddle point \((x_{},y_{})\), satisfying \(_{y}f(x_{},y)-_{x}f(x,y_{})  2\) for some given \( 0\). Starting with an unknown \(f\) from a known class \(\), we consider sequential learning in the first-order feedback model, where the learner gets to observe gradients of the objective. Formally, each query \((x,y)\) results in feedback \((_{x}f(x,y),_{y}f(x,y))\). We are interested in the following question:

_How many first-order queries are necessary and sufficient for a sequential learner to output an approximate saddle point for any \(f\)?_Characterizing the query complexity of learning saddle points is of theoretical interest for understanding the hardness of computing equilibria, and for certifying the optimality of upper bounds.

In this work, we restrict our attention to the special case of zero-sum matrix games, where \(\) and \(\) are finite-dimensional probability simplices and \(f\) is bilinear. For this canonical setting, the optimal query complexity is, surprisingly, unresolved. Indeed, computation algorithms are known since , up to , while lower bounds remain elusive, leaving the optimal query complexity still unknown.

Obtaining lower bounds is not only of fundamental interest in itself, but may also lead to interesting new techniques, since none of the existing proof strategies are applicable. New ideas provided here could prove useful to tackle other problems.

### Contributions

We make progress towards characterizing the first-order query complexity of approximate Nash equilibria in finite-action zero-sum games, as a function of the number of actions \(K\) and approximation level \(\). Our contributions are the following:

Lower boundsWe provide the first lower bounds on the first-order query complexity for zero-sum matrix games with bounded entries. We show that \(K/2-1\) queries are necessary to compute an exact equilibrium (Theorem 11 in Section 4), and at least \(((1/ K)/(K))\) queries are required for an \(\)-equilibrium if \( 1/K^{4}\) (Theorem 17 in Section 4). More than the concrete rates, we believe that the structure of our proof is of particular interest, and might be of use beyond this specific setting.

Upper BoundsWe show that if the game matrix has entries in a known countable set, then the learner can recover the full matrix in one single first-order query (Theorem 4 in Section 3). This result can be interpreted both as an upper bound on the query complexity for matrices on countable entry sets, and as an impossibility result, precluding the use of simple predefined sets of matrices as candidate objectives for proving lower bounds. This, together with the lack of rotational invariance of the action sets, sheds light on why this setting turns out to be surprisingly resistant to proving lower bounds using well-established techniques.

### Related Work on Lower Bounds: Lower Bounds

Below we review the literature on lower bound techniques for related problems and settings. We find that none of the existing techniques apply to our setting, for three particular reasons. They either:

* Build matrices from a set of matrices with entries lying in a finite alphabet. In Theorem 4, we show that, for game matrices with entries in a known countable set, a single first-order query suffices to infer the exact Nash equilibrium. This shows in particular that any such matrix construction cannot lead to a lower bound in the first-order model.
* Rely crucially on rotational invariance of the action set, which limits the approach to the \(_{2}\)-constrained or unconstrained cases, ruling out the probability simplex.
* Assume that the players select actions in the span of the observed gradients. This span assumption is not suited when the action set is not an \(_{2}\) ball, in which case the span of the gradients has no natural embedding into the action set; most algorithms leave the span, e.g. exponential weights.

First-order Query Complexity of Minimax OptimizationExisting lower bounds  for minmax optimization are known for finite-dimensional Euclidean spaces where \(,\) are either Euclidean balls or the whole space. Both these cases benefit from the property that the action sets are invariant under rotation, allowing for a step-by-step reduction to lower dimensional instances, as shown in the seminal work of . The notable exception of  also does not cover the case we study: they consider the computational hardness of non-convex non-concave optimisation.

In the unconstrained case with curvature, that is, if \(\) is the set of strongly convex, strongly concave functions with marginal condition numbers \(_{x}\) and \(_{y}\), the query complexity is settled to be \((_{y}}(1/))\); see  for lower bounds and  and references therein for upper bounds.

For the constrained case,  provide lower bounds for bilinear saddle-point problems. They establish a query complexity of order \((L_{f}D_{}D_{}/)\), where \(D_{}\) and \(D_{}\) are the respective diameters of the constraint sets \(\) and \(\), and \(L_{f}\) measures the Lipschitz regularity of \(f\). However, their techniques rely crucially on rotational invariance and sequentially adapted constraint sets, and they ask the open question of whether similar lower bounds can also be shown for fixed constraint sets.

Other Query ModelsThe query complexity of minimax optimization has also been studied under different feedback models. Recall that we focus on the bilinear case, where \(f:p,q pMq\) for some game matrix \(M\).  study the query complexity of (approximate) Nash equilibria of the game, i.e., (approximate) saddle points of \(f\), under a query model where the learner chooses single entries of the matrix to observe. They show, among other results, that in order to compute an \(\)-equilibrium in \(K K\) zero-sum games, the number of entries queried needs to be at least \((K K)\) when \(=(1/ K)\).  consider a setting in which the learner observes a best response to their query \((p,q)\), i.e., \(i^{*}*{argmin}(Mq)_{i}\) and \(^{*}*{argmin}-(M^{}p)_{j}\). In that setting, they show that to compute a \(1/4\)-equilibrium, at least \((/( K)^{2})\) best-response queries are necessary. Since a first-order query brings strictly more information than either a best-response query or an entry query, these lower bounds do not have direct consequences for our query model. Both of these references prove their lower bounds by building hard matrices with entries in a known finite set (e.g., \(\{0,1\}\)).

Other Lower Bounds in Saddle Point and Equilibria ComputationFor multiplayer games, strong lower bounds on the computational complexity of exact Nash equilibria have been uncovered: PPAD-hardness for computing the Nash-equilibrium in a general game, see , or in a non-convex-concave zero-sum game . Regarding query complexity,  study the single-entry query complexity for approximate correlated equilibria and Nash equilibria of games with many players. As in other references mentioned, all these bounds are built on matrices with entries in a finite set. Due to their intrinsically combinatorial nature, these techniques are less common for numerical algorithms. One of the classical methods for sample complexity lower bounds was introduced by  for first-order optimization. It was successfully extended to saddle-point problems  and recently also to unconstrained zero-sum games by . However, these techniques rely on the assumption that the next iterate is chosen in the span of the previous oracle information (cf. Definition 1 in  or Assumption 2.1.4 in ). Moreover, the game constructed by  for a Nesterov-style lower bound results in matrices with entries from a finite alphabet. For the same reason, no proof technique inspired by lower bounds via Rademacher random variables, as in , can ever work.

#### 1.2.1 Other Related Work

Upper Bounds for Finite Action Zero-Sum GamesEarly on,  show that under best-response dynamics, the average plays converge to an equilibrium. The connection to regret bounds was established by , who deduce a \(((K)/^{2})\) query complexity, by means of a construction akin to online-to-batch conversion. More recently,  obtained the first fast rates of order \((c(K)/)\), through an ingenious learning mechanism.  rediscovered the Optimistic Online Mirror Descent algorithm , and pioneered optimistic online learning regret bounds; they yield to this the day the fastest rates of \(((K)/)\) and the simplest algorithm. The instance-dependent linear-rate upper bounds of order \((M)(1/)\) by  are essentially incomparable to the worst-case \(((K)/)\); they are superior when \((M) K\), and vacuous in the typical case \((M) K\) (see the discussion below Theorem 1).

Our focus is the quality of the inferred saddle point (this optimization perspective is sometimes called _pure exploration_). Part of the literature regards the queries as actual moves made, and consequently prioritizes other objectives. In particular, many focus on studying _uncoupled dynamics_, that is, sequences of actions that separate the observations of the individual \(p\) and \(q\) players without allowing communication between the players. Another recent theme of interest is the last-iterate convergence of such dynamics, see e.g., .

Upper Bounds for Minmax OptimizationThe vast majority of the known upper bounds in minimax optimization (and more generally in variational inequality problems), outside of finite-action zero-sum games mentioned above, concern unconstrained settings . The literature on constrained settings is more sparse:  recently proved the rate of convergence of the projected extra-gradient method .  adapt interior methods to handle constraints.  propose a fast algorithm when either the action sets are strongly convex, or the objective is strongly-convex strongly-concave. Recently, non-convex-concave settings have also attracted attention, see  and references therein.

Upper Bounds for General-Sum Games and Correlated EquilibriaFor multiplayer games, uncoupled dynamics do not converge (in any sense) to Nash equilibria. However, regret-based procedures can find correlated and coarse correlated equilibria [5; 39; 35]. In particular, internal regret guarantees for individual players in general-sum multiplayer games were recently improved from the generic \((1/^{2})\) for any sequences of losses, to \(O(1/^{4/3})\) in , to \(O(1/^{6/5})\) in  and to \(O((1/)/)\) in [13; 15] (we omit the dependence on the number of actions and players). Polynomial-time methods for efficient computation of exact correlated equilibria are designed by [25; 34], using their formulation as solutions to a linear program.

## 2 Setting and Notation

General NotationGiven a set of numbers \(A\), we denote by \(_{K}(A)\) the set of \(K K\) matrices with entries in \(A\); we mainly consider the bounded-entries class \(_{K}([-1,1])\). A \(K K\) zero-sum game between a minimizing \(p\)-player (or row player) and a maximizing \(q\)-player (or column player) is represented by a matrix \(M_{K}()\); we restrict our attention to square \(K K\) games. For any pair of plays \((p,q)\), the expected loss vector of the \(p\)-player (resp. \(q\)-player) is \(Mq^{K}\) (resp. \(-M^{}p^{K}\)). The suboptimality gap at \((p,q)\) is

\[g(M,p,q)=_{j[K]}(M^{}p)_{j}-_{i[K]}(Mq)_{i}\,.\]

The gap \(g(M,p,q)\) is non-negative for any \(M,p\) and \(q\). The pair of plays \((p,q)\) is said to be an \(\)-Nash equilibrium if \(g(M,p,q) 2\); Nash equilibria are \(0\)-Nash equilibria. Most games we will consider will possess a unique Nash equilibrium \(p,q\), and this equilibrium will be fully supported, i.e., all components of \(p\) and \(q\) are positive. Fully supported equilibria in finite games are also equalizing strategies, meaning that the loss vectors are then isotropic; in finite zero-sum games, this entails that \(M^{}p=Mq=v\), where \(v\) is the game-value. We follow the notation convention to abbreviate \((x,v)=x v\) and to hide polylogarithmic terms by \(\) or \(\).

First-Order Query Model and ObjectivesThe first-order query model is an interaction protocol between a learner and a game matrix, defined as follows. Fix a time horizon \(T\), and a set of candidate matrices \(_{K}()\). Over the course of \(T\) rounds, the learner sequentially picks (queries) pairs of plays \((p_{t},q_{t})\) and observes the expected losses \((Mq_{t},-M^{}p_{t})\), where the matrix \(M\) is fixed and unknown to the learner.

We examine the number of interactions necessary to compute an approximate equilibrium. At the end of the \(T\) rounds, the learner recommends a pair \((p,q)\). Given a fixed gap level \( 0\) and a set of candidate matrices \(\), we say a strategy achieves query complexity \(T(;)\) if for any matrix \(M\), the strategy outputs a pair \(p,q\) such that \(g(M,p,q) 2\) when \(T T(;)\). (The dependence on \(\) is omitted when clear from context.) We also occasionally refer to the query complexity of recovering the full matrix, which is a different task but in the same query model. In this case, the learner recommends a full matrix and achieves query complexity \(T\) if the matrix guess is correct for any true matrix \(M\).

The topic of this paper is the study of the optimal query complexity of finding \(\)-Nash equilibria in the first-order model, for the set of matrices with bounded entries \(_{K}([-1,1])\).

## 3 Upper Bounds

In this section we collect upper bounds for the first-order query complexity of approximate Nash equilibria. These bounds are either well-established, trivial or exploit in a miraculously striking fashion the difference between learning saddle points for matrix games taking entries in a countable (e.g., \(\)) or uncountable (e.g., \([-1,1]\)) sets of values.

### Query Complexity over \(_{K}([-1,1])\): Regret and Elementary Strategies

We list some well-known results from the literature and state them in terms of first-order query complexity. The results described here are compiled in Figure 1. We use the notation \(u_{n:m}\) to denote the family \((u_{k})_{n k m}\).

\(O(^{-1} K)\) Queries from Optimistic Online LearningThe current best upper bounds on the query complexity of \(\)-equilibria for zero-sum games are derived from online learning methods. As is well-known [5, Chapter 7], if we denote by \(_{T}\) (resp. \(_{T}\)) the average of \(p_{1:T}\) (resp. \(q_{1:T}\)) then

\[Tg(M,_{T},_{T})=T_{j[K]}(M^{} _{T})_{j}-T_{i[K]}(M_{T})_{i}\\ =_{t=1}^{T} p_{t},Mq_{t}-T_{i[K]}(M _{T})_{i}+_{t=1}^{T} q_{t},-M^{}p_{t}-T _{i[K]}(-M^{}_{T})_{j}\\ _{t=1}^{T} p_{t},Mq_{t}-_{t=1}^{ T}_{i[K]}(Mq_{t})_{i}+_{t=1}^{T} q_{t},-M^{}p_{t} -_{t=1}^{T}_{i[K]}(-M^{}p_{t})_{j}\,.\]

This last term is exactly the sum of the regrets suffered by each player on their respective losses: the gap of the average plays is smaller than the sum of the average regrets over \(T\) rounds. This relationship between regret and gap provides a fruitful way to upper bound the query complexity of computing equilibria. Specifically,  observed that if players follow the Optimistic Mirror Descent strategy then the sum of the regrets stays smaller than \(( K)\); see the paragraph following Proposition 6 in the mentioned reference.

**Theorem 1** (Consequence of Rakhlin and Sridharan ).: _There exists an absolute constant \(c>0\) such that the first-order query complexity over \(_{K}([-1,1])\) is_

\[T()(c) K\,.\]

A wide stream of literature leverages the connection between regret and equilibria, and study the dynamics of pairs of learning algorithms, including the two principal flavors of optimistic online algorithms, Optimistic Mirror Descent and Optimistic Follow-the-Regularized-Leader, cf. Section 1.2.

Instance-Dependent Rates of ConvergenceMany existing bounds show rates of convergence exponential in \(T\), with instance-dependent constants1, see, e.g., . However, we show in Example 18 that for a zero-sum two-player bilinear game, these constants can be large, even on simple game matrices. If the constants are too large, the consequences on query complexity are vacuous, as they might require more than \(K\) queries to obtain non-trivial (\(<1\)) equilibria. Although these results give a very interesting analysis beyond the worst-case, they are beyond the scope of this work.

Figure 1: Upper (blue) and lower (red) bounds on the first-order query complexity of computing an \(\)-equilibrium for \(K K\) matrix games with entries in \([-1,1]\). See Sections 3 and 4 for details.

Upper Bounds for Large \(\)We conclude this section with two elementary strategies that provide equilibria with large approximation values of \( 1/2\).

**Theorem 2** (Theorem. 3.1 in ).: _For any \( 1/2\), the query complexity over \(_{K}([-1,1])\) of finding an \(\)-equilibrium is \(T() 2\)._

The following proposition is a well-known observation (see, e.g., ) that having the learner select a pair of uniform plays always gives an approximate equilibrium.

**Proposition 3**.: _For any \( 1-1/K\), the query complexity over \(_{K}([-1,1])\) of finding an \(\)-equilibrium is \(T()=0\)._

### Recovering the Matrix: Upper and Lower Bounds

In this section we show that the first-order query complexity for recovering the full game matrix (a task harder than computing an equilibrium) is between \((1)\), independent of the number of actions, and \((K)\), depending on the set of candidate matrices. An important consequence of these results is that several known standard lower bound techniques cannot be applied to provide lower bounds on the easier task of learning equilibria.

Matrix Sets with Countable AlphabetMany existing methods rely on building hard matrices with entries in a finite alphabet: we prove this cannot lead to a lower bound.

**Theorem 4**.: _Let \(\) be a countable set of at least two numbers. Then the first-order query complexity over \(_{K}()\) of recovering the full matrix is \(1\)._

This result exploits infinite precision in the feedback, and as such does not provide a reasonable algorithm that the players would use should they know that the matrix belongs to \(_{K}()\). The intent of this statement is to show that any attempt at a lower bound that builds matrices with entries in a fixed countable set (and in particular with integer entries) is doomed to fail after one query.

**Remark 5**.: _The proof of Theorem 4 does not provide an explicit algorithm. However, if the learner knows that the entries of the matrix are in a finite set \(\), an explicit strategy can be easily described. In this case, \(\) is of the form \(\{a_{1}/r,,a_{n}/r\}\) with \(a_{i}\) and \(r\). Consider a base \(b=(a_{1:n})-(a_{1:n})\) and consider a query with \(p(b^{-1},b^{-2},,b^{-K})\) (the choice for \(q\) is irrelevant here). The learner can deduce the full matrix \(M\) from the single observation \(M^{}p\). Of course, this strategy has no practical interest as soon as either \(\) or \(K\) is moderately large, since it requires arbitrary precision in the outputs._

Difficulty of Recovering the Matrix ExactlyIn the first-order query model, the learner receives \(2K\) numbers every round, so in order to fully determine an arbitrary \(K K\) matrix one needs at least \(K^{2}/(2K)=K/2\) rounds. It turns out that this bound is not tight, and we may need exactly \(K\) rounds in the worst case, because of redundancies between the \(2K\) numbers we observe per round:

**Theorem 6**.: _The first-order query complexity over \(_{K}([-1,1])\) of recovering the full matrix is \(K\)._

Intuitively, it is overkill to recover the matrix exactly to output an \(\)-Nash equilibrium. In the next section, when \( 1/K^{K}\) (in particular when \(=0\)), we show that first-order queries do not provide useful information to find an \(\)-equilibrium faster than it takes to reveal the whole matrix.

## 4 A New Lower Bound on the Query Complexity of Approximate Equilibria

We switch perspective, attempting to make the life of any learner hard. For this, we need to think about responding to queries to keep the learner unwitting.

### Overview and Notation

After \(t\) time steps, queries \(p_{1:t}\) and \(q_{1:t}\) have been made and the outputs provided to the learner are \(_{1:t}^{(q)}\) and \(_{1:t}^{(p)}\). Let us denote the set of matrices with entries in \([-1,1]\) that are consistent with the observations after \(t\) time steps by

\[_{t}=\{M_{K}([-1,1])\;|\; s[t] \,,\;M^{}p_{s}=-_{s}^{(q)} Mq_{s}=_{s}^{( p)}\};\]we sometimes refer to this as the set of candidate matrices after \(t\) rounds of observations. We omit the dependence on the sequence of queries \((p_{s},q_{s})\) and outputs \((_{s}^{(p)},_{s}^{(q)})\) to reduce clutter, as it will always be clear from the context.

We say a sequence of matrices \(M_{1:T}\) is adapted to the queries \(p_{1:T},q_{1:T}\), if it gives consistent outputs to the queries, i.e., if for all \(s t T\), \(M_{t}^{}p_{s}=M_{s}^{}p_{s}\) and \(M_{t}q_{s}=M_{s}q_{s}\); in other words, \(M_{1:T}\) is adapted if \(M_{t+1}_{t}\) for all \(t\).

Instead of defining directly the answers to the queries, we equivalently build a sequence of adapted matrices. Formally, at round \(t+1\), given \(_{t}\) and \((p_{t+1},q_{t+1})\), we select a matrix \(M_{t+1}_{t}\) and output \((_{t+1}^{(p)},_{t+1}^{(q)})=(M_{t+1}q_{t+1},-M_{t+1}^{}p_{t+1})\).

Let us fix some common technical notation that we use in the proofs, to measure distances in matrix space. For a matrix \(M_{K}()\), and for \(r,s[1,]\), we denote the operator norm of \(M\) by \(\|M\|_{r,s}=_{x^{K}:\,\|x\|_{r}=1}\|Mx\|_{s}\,.\) Recall that for \(y,z^{K}\), we have \(\|yz^{}\|_{r,s}=\|y\|_{s}\|z\|_{r^{}}\), where \(r^{}[1,]\) is such that \(1/r+1/r^{}=1\). In particular \(\|M\|_{1,}=_{i,j[K]}|M_{i,j}|\), and \(\|yz^{}\|_{1,}=\|y\|_{}\|z\|_{}\). If \(\) is a closed convex set subset of \(^{K}\), we denote by \(_{}(x)\) the orthogonal projection of \(x\) on \(\).

Common Structure of the ProofsBoth proofs of Theorems 11 and 17 follow the same template:

* Assume an \(\)-equilibrium is found after \(T\) first-order queries.
* Find a necessary condition on this equilibrium formulated as constraints on the observed losses and the sequence of queries. Precisely, we observe that under some initial assumptions on the game matrix, the all-ones vector \(\) needs to lie near the span of the outputs observed by the player, regardless of the queries and outputs.
* Ensure that this necessary condition cannot be met by any pair of mixed actions \((p,q)\) by building an appropriate adapted sequence of matrices. In our case, we ensure that the span of the losses of the \(q\)-player stays far from the all-ones vector \(\).

This proof structure is a promising way to derive the exact query complexity of (approximate) Nash equilibria. We use it to provide the first non-trivial lower bound for this setting.

The next two sections implement this template to prove query complexity lower bounds for exact \(=0\) (Theorem 11) and approximate \(>0\) (Theorem 17) equilibria. Detailed proofs are in Appendix D. While we could have deduced the final lower bound for exact equilibria directly from the approximate equilibria case, we describe the result separately to ease exposition. Indeed, the bound for the exact case contains the main ideas but is technically simpler.

### Proof: Exact Equilibrium Case

Step I: Common Equilibria are in the Span of Past QueriesWe start by defining an initial set of candidate matrices with some special properties. These properties are used to ensure that the common equilibrium is fully mixed, and therefore an equalizing strategy for both players.

**Definition 7**.: _A set of matrices \(B_{0}_{K}([-1,1])\) satisfies the assumptions \(A(0)\) if_

* _For all_ \(M B_{0}\)_, all equilibria_ \(of\)__\(M\) _are fully mixed,_
* _There exists a matrix_ \(M B_{0}\) _with non-zero value._

By Lemma 20 (App. D), any ball centered at \((1/2)I_{K}\) with small enough radius satisfies \(A(0)\), e.g.,

\[B_{0}=_{\|\|_{1,}}I_{K},}=M_{K}():M_{i,j}-_{i=j}} i,j[K]}\,.\]

The following lemma states that after \(t\) first-order queries, if at least one matrix in \(B_{0}\) is still a candidate matrix, then any common equilibrium to all candidate matrices must lie in the span of the queries. Since equilibria of matrices in \(B_{0}\) are fully mixed, and are thus equalizing strategies, this further implies that the all-ones vector \(\) must lie in the span of the outputs to the queries.

**Lemma 8**.: _Let \(B_{0}\) be a set of matrices satisfying \(A(0)\). Assume in addition that \(_{t} B_{0}\) and that \(_{t}_{K}((-1,1))\). If there exists a common Nash equilibrium \((p,q)\) to all matrices in \(_{t}\), then \(p(p_{1:t})\) and \(q(q_{1:t})\)._

**Corollary 9**.: _Under the assumptions of Lemma 8, there exists a value \(v 0\) such that_

\[v(_{1:t}^{(q)})( _{1:t}^{(p)})\,.\]Step II: Sequential constructionGiven Corollary 9, to prove a query complexity lower bound, it suffices to build the answers to the queries \(p_{1:t}\) and \(q_{1:t}\) in a way that ensures that

* the vector \(\) never belongs to the span of the observations of (say) the \(q\)-player,
* there is at least one remaining candidate matrix in \(B_{0}\), i.e., \(_{t} B_{0}\) .

For technical reasons (cf. the assumptions of Lemma 8), we also need to make sure that there is enough space left in \(_{t}\). We do so by keeping a candidate matrix \(M_{t}_{t}_{K}((-1,1))\), away from the border of the initial set of candidate matrices (i.e., with entries stricly between \(-1\) and \(1\)).

**Lemma 10**.: _Fix a time horizon \(T K/2-1\). For any sequence of queries \(p_{1:t},q_{1:t}\), there exists a sequence of matrices \(M_{1:T}\) in \(_{K}((-1,1))\) adapted to \(p_{1:T},q_{1:T}\) that defines losses \(_{1:T}^{\{q\}}\) for which, for any \(v 0\),_

\[v(_{1:T}^{(q)})\,.\]

ConclusionCombining Lemmas 8 and 10, against any learning strategy, we have built a sequence of outputs for which there is no common equilibrium to all remaining candidate matrices after \(T\) rounds, as long as \(T(K-3)/2\); this proves the following theorem.

**Theorem 11**.: _The first-order query complexity over \(_{K}([-1,1])\) of finding a Nash equilibrium is_

\[T(0) K/2-1\,.\]

The next section tackles the lower bound for approximate equilibria. Its proof follows the same template as for the exact case, although the technical complexity increases.

### Proof: Approximate Equilibria Case

Step I: Common Equilibria Are Close to the Span of QueriesIn the following, we say a probability distribution over \([K]\) is \(\)-supported if \(p(i)\) for all \(i\). We say a pair of distributions \((p,q)\) is \(\)-supported if both \(p\) and \(q\) are \(\)-supported. We start by defining a quantitative version of Definition 7 for approximate equilibria. In order to retain the property that losses at \(\)-equilibria stay close to an isotropic vector, we add a requirement on the support of the equilibria.

**Definition 12**.: _A set of matrices \(B_{,}_{K}([-1,1])\) satisfies the assumption \(A(,)\) if_

* _For all_ \(M B_{,}\)_, all_ \(\)_-equilibria of_ \(M\) _are_ \(\)_-supported,_
* _There exists a matrix_ \(M B_{,}\) _with non-zero value._

For example, by Corollary 21, the \(\|\|_{1,}\)-ball centered at \((1/2)I_{K}\) and of radius \((1/16)K^{2}\) satisfies this condition for any \( 1/(16K^{2})\) and \( 1/(2K)\).

The following proposition is a quantitative version of Lemma 8 for approximate equilibria, in which we show that any common approximate equilibrium to all matrices in \(_{t}\) needs to be close to the span of the queries.

**Lemma 13**.: _For \(,>0\), let \(B_{,}\) be a set of matrices satisfying \(A(,)\), cf. Definition 12. Assume that \(_{t} B_{,}\), and that the relative interior of \(_{t}\) contains a ball of radius \(r_{t}\) measured in \(\|\|_{1,}\)-norm. If there exits a common \(\)-Nash equilibrium \((p,q)\) sto all matrices in \(_{t}\), then_

\[\|p-_{(p_{1:t})}(p)\|}\|q-_{ (q_{1:t})}(q)\|}\,.\]

**Corollary 14**.: _Under the assumptions of Lemma 13, there exists a game matrix \(M B_{,}\) such that the value \(v\) of \(M\) satisfies \(\|v-_{(_{1:t}^{(q)})}(v )\| 4/( r_{t})\,.\)_

Step II: Construction of MatricesWe design an adapted sequence of matrices that keeps \(v\) away from the span of the observed losses.

**Lemma 15**.: _Let \(B\) be a closed ball in \(\|\|_{1,}\)-norm of radius \(r 1/2\) contained in \(_{K}([-1,1])\). Fix a time horizon \(T K/2-1\). For any sequence of queries \((p_{t},q_{t})_{t T}\), there exists a sequence of matrices \(M_{1:T}\) in \(B\) adapted to \((p_{t},q_{t})\) that defines losses \(_{1:T}^{(q)}\) for which, for any \(v 0\),_

\[\|v-_{(_{1:T}^{(q)})}(v )\|^{2} v^{2}K}{8KT^{2}}^{T+1}\,,\]

_and such that \(_{t}\) contains a ball of radius \(r/2\) in its relative interior._The proof relies on a decomposition of the squared distance of \(v\) to the span of observed losses at time \(t+1\) through a Pythagorean identity, relating it to the span at time \(t\). By carefully choosing the new matrix \(M_{t+1}\) as a function of the query \(p_{t+1},q_{t+1}\), we manage to ensure that the squared distance decreases only by a constant factor.

**Remark 16**.: _The radius of the ball inside \(_{t}\) stays constant at \(r/2\), even though \(_{t}\) gets smaller as \(t\) increases. This is made possible by choosing \(M_{t}\) very close to \(M_{t-1}\) (roughly at a distance of \(r/(KT)\) measured in \(\|\|_{1,}\)), effectively ensuring that \(M_{t}\) stays far from the boundary of \(_{K}([-1,1])\)._

Step III: ConclusionWe now combine Corollary 14 and Lemma 15 to obtain a lower bound on the best achievable gap after \(T\) rounds, which directly translates to a query complexity lower bound.

**Theorem 17**.: _In the first-order query model on \(_{K}([-1,1])\), for any algorithm the worst-case gap after \(T(K-3)/2\) time steps is at least_

\[K^{4}}K^{5/2}T} ^{T+1}\,.\]

_Therefore, the query complexity of finding an \(\)-equilibrium for any \( 1/(e\,2^{11}K^{4})\) is at least_

\[T()K^{4})}{(2^{1 1/2}K^{5/2})+(-(2^{11}K^{4}))}-1(K/2-1)\,.\]

### Potential Improvement and Discussion

There is still a wide disparity between upper and lower bounds on first-order query complexity. The lower bound Theorem 17 is most probably not tight, so let us discuss potential ways to improve it.

We believe the most promising approach for improvement is to find a different proxy for the gap. Our proof uses the distance to the span of the losses \(\|v-_{(_{t}^{(0)})}\|^{2}\) for \(v 1/(2K)\), which is convenient because it is a distance, but we need to introduce a strong restriction on the set of candidate matrices \(B_{,}\) to be able to relate it to the gap, namely the restriction to a ball around \(I_{K}\) of radius \(O(1/K^{2})\). In order to make significant progress it is therefore essential to enlarge the class of candidate matrices significantly compared to \(B_{,}\), and therefore to modify the proxy for the gap.

## 5 Discussion: Future Work and Conclusion

We study the first-order query complexity of computing approximate Nash equilibria for two-player zero-sum matrix games. We review upper bounds coming from online learning, and discuss existing lower bounds for related problems including alternative query models. Taking stock, we arrive at the surprising state of affairs that for this fundamental problem no lower bounds are known. We then offer some explanation for this current state of affairs: the first-order query model is powerful enough to identify any matrix from a fixed countable set in a single query; this rules out many techniques. We then turn to lower bounds. We design an adaptive adversary that answers incoming learning queries in such a way that the remaining consistent matrices do not share a common Nash equilibrium for as long as possible. Our approach is based on a quantity serving as a "potential function": namely the distance of the all-ones vector to the span of the observations. We discuss in detail the result, future scope and limits of our proposed technique.

As can be seen in Figure 1, we are still far from matching lower and upper bounds. The most intriguing possibility for resolution would be if it were to turn out that the upper bounds (i.e. algorithms) are improvable. Current upper bounds come from online learning regret bounds, with algorithms falling in the category of uncoupled dynamics. We would love to know if these algorithm templates are in fact optimal for query complexity.

To cycle back to our motivation of computing saddle points in general, future work could attempt to extend our lower bound technique to different constraint sets, to functions possibly exhibiting curvature, and to instance-dependent rates. Another direction would be to generalize to multi-player games and investigate the query complexity of weaker solution concepts.

Limitations and Broader ImpactThe main limit of this work is that it only partially resolves the first-order query complexity of approximate NE in finite games, calling for tighter analysis. Regarding broader impact, results are mainly theoretical and do not entail direct societal consequences.