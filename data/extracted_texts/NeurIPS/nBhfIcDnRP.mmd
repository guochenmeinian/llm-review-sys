# Efficient Graph Matching

for Correlated Stochastic Block Models

 Shuwen Chai

Northwestern University

Evanston, IL 60208

shuwenchai2027@u.northwestern.edu

&Miklos Z. Racz

Northwestern University

Evanston, IL 60208

miklos.racz@northwestern.edu

###### Abstract

We study learning problems on correlated stochastic block models with two balanced communities. Our main result gives the first efficient algorithm for graph matching in this setting. In the most interesting regime where the average degree is logarithmic in the number of vertices, this algorithm correctly matches all but a vanishing fraction of vertices with high probability, whenever the edge correlation parameter \(s\) satisfies \(s^{2}> 0.338\), where \(\) is Otter's tree-counting constant. Moreover, we extend this to an efficient algorithm for exact graph matching whenever this is information-theoretically possible, positively resolving an open problem of Racz and Sridhar (NeurIPS 2021). Our algorithm generalizes the recent breakthrough work of Mao, Wu, Xu, and Yu (STOC 2023), which is based on centered subgraph counts of a large family of trees termed chandeliers. A major technical challenge that we overcome is dealing with the additional estimation errors that are necessarily present due to the fact that, in relevant parameter regimes, the latent community partition cannot be exactly recovered from a single graph. As an application of our results, we give an efficient algorithm for exact community recovery using multiple correlated graphs in parameter regimes where it is information-theoretically impossible to do so using just a single graph.

## 1 Introduction

The proliferation of network data has highlighted the ubiquity and importance of _graph matching_ in machine learning, with applications in a variety of domains, including social networks , computational biology , and computer vision . While the graph matching task--recovering the latent node alignment between two networks--is known to be NP-hard to solve or even approximate in general , in practice it is often possible to solve it well, such as in the works cited above. This has motivated an exciting recent line of work studying average-case graph matching , focusing on correlated Erdos-Renyi random graphs . These papers culminated in recent breakthrough works which developed efficient graph matching algorithms in the constant noise regime .

However, real-world networks are not modeled well by Erdos-Renyi random graphs, which in turn has motivated a growing line of recent work studying graph matching beyond Erdos-Renyi . In particular, an important problem in this vein is to study graph matching in _correlated stochastic block models (correlated SBMs)_ (see Section 2 for definitions), since community structure is prevalent in many networks and the community recovery problem is a fundamental inference task that is often a starting point for deeper analyses. Recent work of Racz and Sridhar  determined the fundamental information-theoretic limits for exact graph matching in correlated SBMs; however, the underlying algorithm used to achieve this limit is inefficient (that is, not polynomial time). Racz and Sridhar  posed the open problem of finding an _efficient_ algorithm for (exact) graph matching whenever this is information-theoretically feasible.

Our main contribution positively resolves this open problem of Racz and Sridhar , giving the first efficient algorithm for graph matching for correlated SBMs with two balanced communities, under a condition on the correlation strength that is conjectured to be necessary. Specifically, we give an efficient algorithm that, in the most interesting regime where the average degree is logarithmic in the number of vertices, achieves almost exact recovery of the latent matching, whenever the edge correlation parameter \(s\) satisfies \(s^{2}> 0.338\), where \(\) is Otter's tree-counting constant. Moreover, we extend this to an efficient algorithm for exact graph matching whenever this is information-theoretically possible. See Section 3 and Theorem 1 for details.

In addition, our results on graph matching directly imply novel efficient algorithms and results for community recovery. Specifically, combining--in a black-box fashion--our (exact) graph matching algorithm with existing community recovery algorithms, we give an efficient algorithm for exact community recovery using multiple correlated graphs in parameter regimes where it is information-theoretically impossible to do so using just a single graph. See Section 3 and Theorem 2 for details.

Our algorithm generalizes the recent breakthrough work of Mao, Wu, Xu, and Yu , which is based on centered subgraph counts of a large family of trees termed chandeliers, to the setting of correlated SBMs. A major technical challenge that we overcome is dealing with the additional estimation errors that are necessarily present due to the fact that, in relevant parameter regimes, the latent community partition cannot be exactly recovered from a single graph, and thus the edge-indicator variables in the centered subgraph counts cannot be precisely centered. Our technical contributions highlight the interplay between graph matching and community recovery in ways that are complementary to the recent work of Gaudio, Racz, and Sridhar .

## 2 Models and problems

In this section we describe the setting of the paper by introducing the stochastic block model (SBM), correlated SBMs, and the community recovery and graph matching tasks.

The **stochastic block model (SBM)** is the canonical probabilistic generative model for a network with latent community structure. The SBM was first introduced by Holland, Laskey, and Leinhardt  and has been widely studied over the past decades . In general, an SBM may consist of a number of communities, with distinct vertices connected randomly with a probability that depends on their community memberships.

In this work, we focus on the simplest setting of the balanced two-community SBM. Given \(n_{+}\) and \(p,q\), we construct \(G(n,p,q)\) as follows. The graph \(G\) has \(n\) vertices, with vertex labels given by \(V=[n]:=\{1,2,,n\}\). Let \(_{*}=\{_{*}(i)\}_{i=1}^{n}\) be the vector of community labels, where each entry \(_{*}(i)\{-1,+1\}\) is drawn independently and uniformly at random. Then, given the community labels \(_{*}\), for any pair of vertices \(i j[n]\), edge \((i,j)\) is in \(G\) with probability \(p_{\{_{*}(i)=_{*}(j)\}}+q _{\{_{*}(i)_{*}(j)\}}\). That is, two different vertices are connected with probability \(p\) if they are from the same community and connected with probability \(q\) otherwise.

**Correlated SBMs** are multiple SBMs where the corresponding edge variables are correlated [35; 54; 34]. Specifically, we construct two correlated SBMs \((G_{1},G_{2})(n,p,q,s)\) using a natural subsampling procedure as follows. Let \(G(n,p,q)\) be a parent graph with community labels \(_{*}\). Next, given \(G\), we construct \(G_{1}\) by random sampling of the edges: each edge of \(G\) is included in \(G_{1}\) with probability \(s\), independently of everything else, and non-edges of \(G\) remain non-edges of \(G_{1}\). We then do the edge sampling independently again to obtain \(G_{2}^{}\) in the same way. The child graphs \(G_{1}\) and \(G_{2}^{}\) inherit both the vertex labels (given by \([n]\)) and the community labels \(_{*}\) from the parent graph \(G\). Finally, let \(_{*}\) be a uniformly random permutation of \([n]:=\{1,2,,n\}\) and generate \(G_{2}\) by relabeling the vertices of \(G_{2}^{}\) according to \(_{*}\) (e.g., vertex \(i\) in \(G_{2}^{}\) is relabeled as \(_{*}(i)\) in \(G_{2}\)). This last step reflects the fact that in practice often the correspondence between the two vertex sets is unknown. We denote the adjacency matrices of \(G_{1}\) and \(G_{2}\) as \(A\) and \(B\), respectively, and note that the community labels of the two graphs are \(_{*}^{A}:=_{*}\) and \(_{*}^{B}:=_{*}_{*}^{-1}\), respectively. See Figure 1 for an illustration.

Marginally, \(G_{1}\) and \(G_{2}\) are identically distributed SBMs: we have \(G_{1},G_{2}(n,ps,qs)\). Moreover, \(G_{1}\) and \(G_{2}\) are _correlated_. Specifically, for every pair of distinct vertices \(\{i,j\}\), the edge-indicator random variables \(A_{i,j}\) and \(B_{_{*}(i),_{*}(j)}\) are correlated Bernoulli random variables. A simple calculation shows that if \(_{*}(i)=_{*}(j)\), then the correlation coefficient of \(A_{i,j}\) and \(B_{_{*}(i),_{*}(j)}\) is equal to \(_{+}:=s\), whereas if \(_{*}(i)_{*}(j)\), then this correlation coefficient is \(_{-}:=s\). Our focus will be on the sparse setting where \(p,q=o(1)\) (as \(n\)), in which case both \(_{+}\) and \(_{-}\) are asymptotically \((1-o(1))s\), and hence we can regard \(s\) as the _edge correlation parameter_.

**Community recovery.** The goal of community recovery is to recover the latent community labels \(_{*}\) given some (graph) data, such as an SBM \(G\) or correlated SBMs \((G_{1},G_{2})\). There are various notions of community recovery, depending on how close an estimate is to the ground truth \(_{*}\). In this work, we focus on _exact community recovery_, defined as follows: an estimator \(}\) achieves exact community recovery if \(_{n}(|_{i=1}^{n}}(i) _{*}(i)|=1)=1\). The absolute value is present in the previous expression since we can only hope to recover the community labels up to a global sign flip; in other words, our goal is to recover the partition of the graph into two communities. A slightly weaker notion, which also appears throughout our work, is _almost exact community recovery_, which holds if \(_{n}(|_{i=1}^{n}}(i )_{*}(i)|=1-o(1))=1\); in other words, this notion tolerates a vanishing fraction of errors. Further weaker notions include partial recovery and weak recovery; since these are not the focus here, we refer to  for details.

Different parameter regimes give rise to different challenges and different notions of recovery become most relevant. In the constant average degree regime, that is, when \(p=\) and \(q=\) for some constants \(a\) and \(b\), it is impossible to recovery the communities exactly. Prior works  have characterized the information-theoretic threshold and developed efficient algorithms for partial recovery in this regime. On the other hand, if the vertices have polynomially growing degrees, that is, when \(p=n^{-a+o(1)}\) and \(q=n^{-b+o(1)}\) for some constants \(a,b[0,1)\), then community recovery is easy as long as \(_{n}|p_{n}/q_{n}-1|>0\) (see ).

In this work, we focus on the "bottleneck regime" of logarithmic average degree, which is the bare minimum for the graph to be connected, and which is when exact community recovery is most interesting. In most of the paper we assume that \(p=a\) and \(q=b\) for some positive constants \(a,b\). For an SBM with two balanced communities and these parameters, there is a sharp information-theoretic threshold for exact community recovery, which is given by \(D_{+}(a,b)=1\), where \(D_{+}(a,b):=(-)^{2}/2\) (see ). This quantity is known as the _Chernoff-Hellinger divergence_ in the general \(k\)-community SBM setting with linear size communities  and simplifies to the above form in our setting. In other words, when \(D_{+}(a,b)>1\), there exists an estimator \(}\) that is computable in polynomial-time and which achieves exact community recovery with high probability. On the other hand, when \(D_{+}(a,b)<1\), exact community recovery is impossible, in the sense that for all estimators \(}\) we have that \(_{n}(|_{i=1}^{n}}(i )_{*}(i)|=1)=0\). Moreover, when it is possible to achieve exact community recovery on a single graph, several polynomial-time algorithms have been studied by previous works (e.g., ).

**Community recovery and graph matching.** What are the information-theoretic limits for exact community recovery given two correlated SBMs \((G_{1},G_{2})(n,a,b,s)\)? This question was initiated and partially solved by Racz and Sridhar , and subsequently fully solved by Gaudio, Racz, and Sridhar . Without yet going into the details, these works highlight the importance of _graph matching_, that is, the task of recovering the latent matching \(_{*}\) given the two correlated graphs \((G_{1},G_{2})\). In brief, when \(_{*}\) can be perfectly recovered from \((G_{1},G_{2})\), then one can take the union graph \(G_{1}_{_{*}}G_{2}\) of \(G_{1}\) and \(G_{2}\), which is also an SBM, but with a larger edge density,

Figure 1: Schematic illustrating two-community correlated SBMs; see the text for details. (Figure reproduced from  with permission.)

which makes community recovery easier. This shows that exact community recovery is possible from \((G_{1},G_{2})\) even in parameter regimes where this is impossible from just a single graph \(G_{1}\) (see ).

**Graph matching.** Motivated by the above discussion, we now discuss average-case graph matching and notions of recovery. In general, suppose that \((G_{1},G_{2})\) are two correlated random graphs with \(n\) vertices each and that \(_{*}\) is the underlying latent vertex matching. The goal of graph matching is to output an estimator \(=(G_{1},G_{2})\) that is close to \(_{*}\). There are various notions of recovery depending on how close \(\) is to \(_{*}\); the two most relevant notions are the following. We say that an estimator \(\) achieves _exact graph matching_ if \(_{n}(=_{*})=1\). We say that an estimator achieves _almost exact graph matching_ if with high probability there exists a subset \(I[n]\) with \(|I|=(1-o(1))n\) such that \(|_{I}=_{*}|_{I}\), where \(|_{I}\) denotes the restriction of \(\) to \(I\). In words, almost exact graph matching allows the estimator to make a vanishing fraction of errors.

The graph matching problem has been widely studied, with applications to computer vision [13; 36], computational biology , and social networks . In particular, de-anonymizing social networks is possible with graph matching algorithms, which implies that anonymity is not equivalent to privacy . That said, studying the limits of graph matching algorithms--including potential information-computation gaps, as we shall discuss--can help guide data regulators on when to take more actions with regards to data protection, in addition to anonymity.

As discussed in the introductory paragraphs, there has been a large body of recent work on average-case graph matching, both studying correlated Erdos-Renyi random graphs [56; 14; 15; 65; 16; 23; 27; 24; 49; 5; 21; 22; 39; 40; 41; 17; 20; 18] and more general models of correlated random graphs [8; 32; 11; 54; 58; 70; 57; 25; 63; 59; 19; 67; 66; 60; 10]. In particular, Racz and Sridhar  determined the fundamental information-theoretic limits for exact graph matching in correlated SBMs: in the logarithmic average degree regime discussed above, this threshold is \(s^{2}=1\). However, this result is information-theoretic, and the authors posed the open problem of finding an _efficient_ algorithm for exact graph matching, whenever this is information-theoretically possible.

Our main contribution positively resolves this open problem, giving the first efficient algorithm for graph matching for correlated SBMs with two balanced communities. Our algorithm generalizes the recent breakthrough work of Mao, Wu, Xu, and Yu  that developed an efficient graph matching algorithm for correlated Erdos-Renyi graphs. As an application, our results imply novel efficient algorithms and results for community recovery. We now turn to describing our results.

## 3 Main results: Graph matching

Our main theorem for graph matching on correlated SBMs is that there exists a polynomial-time algorithm that can achieve exact matching if \(s^{2}>\), where \(\) is Otter's tree counting constant1.

**Theorem 1**.: _Fix constants \(a b>0\) and \(s\). Let \((G_{1},G_{2})(n,a,b,s)\). For any \(>0\), if \(s^{2}+\), then the following holds._

1. _(Almost exact matching)_ _There exists a polynomial-time algorithm that outputs a subset_ \(I[n]\) _and a mapping_ \(:I[n]\) _such that_ \(=_{*}|_{I}\) _and_ \(|I|=(1-o(1))n\) _with high probability._
2. _(Exact matching)_ _If, in addition,_ \(s^{2}(a+b)/2>1\)_, then there exists a polynomial-time algorithm that outputs a mapping_ \(\) _such that_ \(_{n}(=_{*})=1\)_._

Several remarks are now in order about the tightness of the main result, an overview of the chandelier counting algorithm when \(a=b\), and the main challenge of our analysis.

**Tightness.** This result is tight whenever \(s^{2}>\), because \(s^{2}(a+b)/2=1\) is the information-theoretic threshold of exact graph matching given two correlated SBMs \((G_{1},G_{2})\). When \(s^{2}<\), it is conjectured that an information-computation gap exists for the correlated Erdos-Renyi graphs . Specifically, by assuming that \(a=b\), it is information-theoretically possible to match correlated Erdos-Renyi graphs exactly if \(s^{2}a>1\)[14; 15; 65]. However, it is believed hard to find a polynomial-time algorithm to do this. In our model with SBMs, which is an extension from Erdos-Renyi graphs, it is also likely hard to find a polynomial-time algorithm when \(s^{2}<\).

**Signed chandelier counts.** Our theorem extends from the main theorem in Mao et al. , which proposed a polynomial-time algorithm that matches the correlated Erdos-Renyi graphs exactly. The algorithm has two main steps: First, construct signature vectors \(_{i}\) and \(_{j}\) for vertices \(i[n]\) in \(G_{1}\) and \(j[n]\) in \(G_{2}\) by the _signed subgraph counts_ of a specially designed graph class--termed _Chandeliers_--and calculate the weighted inner product of pairs of signature vectors \(_{i},_{j}\) and match vertices if the inner product value is large enough; Second, use a seeded graph matching algorithm to boost the almost exact graph matching algorithm to exact graph matching. It is natural to adapt this algorithm from correlated Erdos-Renyi graphs to correlated SBMs but the details present non-trivial challenges, as we explain below.

**Main challenge.** The main challenge on correlated SBMs is that signed subgraph counts is no longer a free lunch. Signed subgraph counts is counting the subgraphs on a centralized adjacency matrix, which is first proposed by Bubeck et al.  and later commonly used to control the variance of counting statistics. The success of the chandelier counting method relies on the sufficient separation of the two inner product distributions of true and false vertex correspondence. We want to find a way that keeps doing the adjacency matrices centralization possible. Recall that we explore the graph matching motivated by community recovery. Interestingly, the solution to this centralization problem is now the other way around--using a rough community label estimate to help the graph matching. Our main technical contributions are first showing that when there are no error occurs in the community label estimate, the signed chandelier counting can be generalized to correlated SBMs and then show that when the exact community recovery is not possible, the errors introduced in the community label estimation, which is polynomial in \(n\), are actually tolerable for the whole algorithm.

The analysis falls in two cases. If \(sD_{+}(a,b)>1\), then we can achieve exact community recovery on each of the graphs by applying the community recovery algorithm from . In addition, if \(s^{2}>1\), 2 then it suffices to look at each community individually. This is easy and follows in a black-box fashion from  (See Section 7). However, on the other side, \(s^{2}<1\), one still needs to use information the community information. Therefore, we need to go through the whole algorithm analysis again in this case. Note that the analysis would work for both regimes with no constraint on \(s^{2}<1\). We plot the black-box regime in _black_ and the non-black-box regime in _green_ in Figure 2.

The second case is even trickier. If \(sD_{+}(a,b)<1\), by the same algorithm, we can only obtain almost exact correct community labels \(}_{A}\) and \(}_{B}\) on graph \(G_{1}\) and \(G_{2}\), respectively. We perform adjacency matrix centralization based on \(}_{A}\) and \(}_{B}\) and show that the error introduced in this step is negligible

Figure 2: Phase diagram for graph matching on \((G_{1},G_{2})(n,,,s)\). The red diagonal line depicts \(a=b\), which is an Erdős–Rényi graph. _Black regions_: exact graph matching is possible and can be done efficiently for each community separately by applying the graph matching algorithm for correlated Erdős–Rényi graphs; _Green regions_: exact graph matching is possible and can be done efficiently; _Light green regions_: exact graph matching is impossible, but almost exact graph matching is possible and can be done efficiently; _Cyan regions_: exact graph matching is possible and can be done efficiently by first recovering the community labels almost exactly; _Yellow regions_: exact graph matching is impossible but almost exact graph matching can be done efficiently by first recovering the community labels almost exactly.

in the sense that the inner-product scores remains sufficiently distinguishable between true pairs (\(j=_{*}(i)\)) and fake pairs (\(j_{*}(i)\)).

## 4 Application: Community recovery

Once matching up the vertices on two correlated graphs, we can combine the information of them onto a union graph and then immediately have an application on community recovery. Our result for community detection is that there exists a polynomial-time algorithm for exact community recovery on correlated SBMs when the squared edge correlation parameter satisfies \(s^{2}>\).

**Theorem 2**.: _Fix constants \(a b>0\) and \(s\). Let \((G_{1},G_{2})(n,a,b,s)\). For any \(>0\), if_

\[s^{2}+, s^{2}()>1,(1-(1-s)^{2})D_{+}(a,b)>1,\]

_then, there exists an estimator \(}=}(G_{1},G_{2})\) that can be computed in polynomial-time such that \(_{n}(|_{i=1}^{n}}(i) _{*}(i)|=1)=1\)._

Theorem 2 is a direct application of our Theorem 1. The proof mainly follows the Theorem 3.3 in , which gives exact community recovery on the union graph of \(G_{1}\) and \(G_{2}\) regarding to the permutation \(\), \(G_{1}_{}G_{2}\). The key difference is that we substitute the maximum a posterior estimator used in the first step with the \((G_{1},G_{2})\) output by the algorithm used to prove Theorem 1. Figure 3 is a summary of the phase diagram for community recovery determined by this work along with previous works [57; 25], focusing on the exact community recovery and efficiency.

**Remark 1**.: _Consider a more general correlated SBMs with \(K\) correlated graphs \((G_{1},G_{2},,G_{K})(n,a,b,s,K)\). Theorem 1 also implies an efficient algorithm for exact community recovery above the exact graph matching threshold for \(K\) correlated SBMs when \(D_{+}(a,b)>}\) (Theorem 3.6 in )._

## 5 Algorithm and the overview of the proofs

In this section, we define a few key concepts, give a brief overview of the algorithm, and briefly discuss the proof of Theorem 1 and challenges. See Appendix C for a full version.

**Chandelier.** An \((L,M,K,R,D)\)-chandelier is a rooted tree with \(L\) branches, each of which consists of a path with \(M\) edges (\(M\)-wire), followed by a rooted tree with \(K\) edges (\(K\)-bulb); the \(K\)-bulbs are

Figure 3: Phase diagram for exact community recovery with fixed \(s\) on correlated SBMs. _Green regions_: exact community recovery is possible from \(G_{1}\) alone and can be done efficiently; _Lightgreen regions_: exact community recovery is possible from \((G_{1},G_{2})\) but impossible from \(G_{1}\) alone, exact graph matching can be done efficiently and therefore exact community recovery can be done efficiently; _Violet regions_: exact community recovery is impossible from \(G_{1}\) alone, impossible from \((G_{1},G_{2})\) if \(s^{2}()+s(1-s)D_{+}(a,b)<1\) and possible if \(s^{2}()+s(1-s)D_{+}(a,b)>1\). It is unknown whether there exists an efficient algorithm for exact community recovery in this regime.

non-isomorphic to each other, each of them has at most \(R\) automorphisms, and the maximum degree is at most \(D\). For each chandelier \(H\), let \((H)\) denote the set of bulbs of \(H\).

For a rooted tree \(T\), let \((H)\) denote the number of rooted automorphisms of \(T\) throughout this paper. We abbreviate rooted automorphism as automorphism when it is clear that we are applying it to a chandelier. The number of automorphisms of \(H\) is determined by the automorphisms of its bulbs.

Let \(\) denote the family of non-isomorphic \((L,M,K,R,D)\)-chandelier. The family size of chandelier is \(||=|}{L}\), where \((K,R,D)\) denotes the collection of unlabeled rooted trees with \(K\) edges, at most \(R\) automorphisms, and maximum degree \(D\). Otter  showed that the number of unlabeled rooted trees with \(K\) edges (and no constraint on the automorphisms and vertex degrees) is \(|(K,,)|=(+o(1))^{-K}\), where \( 0.338\). We show that under proper choices of \(R\) and \(D\), we have \(|(K,R,D)|=(+o(1))^{-K}\) in Section C.

**Algorithm overview.** Given \((G_{1},G_{2})(n,p,q,s)\). Our algorithm contains mainly three steps. Firstly, we apply the Algorithm 3 (discussed in Section D.3) by Mossel, Neeman, and Sly  to obtain almost exact community label estimates for each single graph. Secondly, we calculate the signed chandelier counting  based similarity score to give an almost exact graph matching (Algorithm 1 and Algorithm 4). Lastly, we boost the almost exact matching to exact matching by extending the seeded graph matching algorithm  on Erdos-Renyi graphs to SBMs (Algorithm 2).

**Subgraph counts.** For an arbitrary weighted adjacency matrix \(M\) of some adjacency matrix \(A\), vertex \(i[n]\), and a rooted graph \(H\), we define the _weighted subgraph counts_ on \(M\) as

\[W_{i,H}(M):=_{S(i) H}M_{S},M_{S}:=_{e E(S)}M_{e},\]

and \(S(i)\) enumerates subgraphs of the complete graph \(K_{n}\), rooted at \(i\), that are isomorphic to \(H\).

When \(M\) is the adjacency matrix itself, \(W_{i,H}(M)\) is the usual subgraph count, representing the number of subgraphs rooted at \(i\) in \(M\) that are isomorphic to \(H\). When \(M\) is the centralized adjacency matrix \(:=A-[A]\), we call \(W_{i,H}(M)\) a signed subgraph count following . However, we do not have access to \([A]\) in many cases. Specifically for SBM, we can estimate \([A]\) through estimating the community labels. We define the _approximately centralized adjacency matrix_ regarding to community label estimate \(}\), denoted as \(^{}}\), entry-wise as \(^{}}_{i,j}=A_{i,j}-p_{}[i]=}[j]}-q_{} [i]}[j]}\).

Given a family \(\) of non-isomorphic rooted graphs, we define the _subgraph count signature_ of vertex \(i\) as \(W_{i}^{}(M):=(W_{i,H}(M))_{H}\).

**Similarity score.** Given a pair of correlated SBMs (\(G_{1},G_{2}\)), we define the similarity score between vertex \(i\) on graph \(G_{1}\) and vertex \(j\) on graph \(G_{2}\) as a weighted inner product between two signatures:

\[_{ij}:= W_{i}^{}(),W_{j}^{}( ):=_{H}(H)W_{i,H}( {A})W_{j,H}().\]

When we do not have access to \(\) and \(\), we use the approximately centralized adjacency matrices \(^{}}\) and \(^{}}\). We define the similarity score in a slightly different notation:

\[^{}}_{ij}:= W_{i}^{}(^ {}_{A}}),W_{j}^{}(^{}_{B}})=_{H}(H)W_{i,H}( ^{}_{A}})W_{j,H}(^{}_{B}}).\]

**Almost exact graph matching.** The first part in the analysis is to show that by calculating this similarity score, with an appropriate thresholding strategy, we can match up \((1-o(1))n\) vertices correctly (Theorem 3). The high-level idea is to show that the similarity score distributions are well-separated between true pairs and fake pairs. We expect the similarity score having the following properties, under event \(:=\{-n^{}|V^{+}|,|V^{-}|+n ^{}\}\) (to be discussed in Section D.2):

* For true pairs \(j=(i):\) \[[^{}}_{i_{}(i)}_{} ]>0,[^{}}_{ij}_{ }]=o([^{}}_{i_{}(i)}_ {}]^{2}),\] (1)
* For fake pairs \(j(i):\) \[[^{}}_{ij}_{}]=o( [^{}}_{i_{}(i)}_{} ]),[^{}}_{ij}_{ }]=o([^{}}_{i_{}(i )}_{}]^{2}}{n^{2}}).\] (2)Precisely forming bounds for these moments constitutes the main bulk of the paper. We provide results from Proposition 1 to Proposition 6. Followed by these moment bounds, we have Theorem 3.

**Theorem 3**.: _Fix \(a b>0\) and \(s\). Let \(p=a,q=b\) and \((G_{1},G_{2})(n,p,q,s)\). For any \(>0\), suppose \(s^{2}+\). There exists positive constants \(C_{1},C_{2},C_{3},C_{4},C_{5}>0\) such that the following holds. Pick \(K,M,L,N,D\) as_

\[L=}{}, K=C_{2} n, M=K}{(ns( p q))}, R=(C_{4}K), D=C_{5}}.\] (3)

_Pick an arbitrary \(c(0,1)\) and set \(=||n^{N}^{N}_{}^{2N}\), where \(_{}^{2}:=(^{2}+_{-}^{2}}{2})\). Then, Algorithm 1 outputs a set \(I\) with size \((1-o(1))n\) and a mapping \(\) such that \(|_{I}=_{*}|_{I}\) with high probability._

**Proof challenge.** In regime \(sD_{+}(a,b)>1\), the probability of existing one vertex being classified incorrectly is vanishing for Algorithm 3. Therefore, with high probability, \(^{}_{A}}=\). If \(sD_{+}(a,b)<1\), then the recovered \(}\) contains errors (polynomial in \(n\)), which will cause some edges being centralized incorrectly and thereby affect the moments calculation.

This phenomenon poses a challenge to the algorithm analysis. We highlight some key points in the context of second moment calculation. For simplicity, we ignore event \(\) here. From definition,

\[[_{ij}^{}}] =_{H,I}(H)(I)_{S_{ 1}(i),S_{2}(j) H}_{T_{1}(i),T_{2}(j) I}_{ _{*}}[[_{S_{1}}^{}_{A}}_{S_{2}}^{ }_{B}}_{T_{1}}^{}_{A}}_{T _{2}}^{}_{B}}_{*}]]\] \[-_{_{*}}[[ _{S_{1}}^{}_{A}}_{S_{2}}^{ }_{B}}_{*}]]_{_{*}}[[_{T_{1}}^{}_{A}}_{T_{2}}^{}_{ B}}_{*}]].\]

Let us define the union graph \(U:=S_{1} S_{2} T_{1} T_{1}\)3. If \(sD_{+}(a,b)>1\), we view \(^{}}\) and \(^{}}\) as \(\) and \(\), respectively. \([_{S_{1}}^{}_{1}}_{S_{2}}_{T_{1}}_{T_{2}}_{*}] 0\) only if there exists no edge \(e E(U)\) such that it occurs only once among \((S_{1},S_{2},T_{1},T_{2})\). This is because different edges are independent and centralized conditioned on \(_{*}\).

However, in regime \(sD_{+}(a,b)<1\), \([_{S_{1}}^{}_{A}} {B}_{S_{2}}^{}_{B}}_{T_{1}}^{}_{A}}_{T_{2}}^{}_{ B}}_{*}] 0\) even when edges are not occurring multiple times as we have the expectation of \(_{e}^{}_{A}}\) can be non-zero when conditioning on \(_{*}\) and an estimate \(}_{A}\) that disagrees with \(_{*}\) on the edge type (i.e., for \(e=(u,v),_{*}(u)_{*}(v)}_{A}(u)}_{A}(v)\)). This not only causes this cross-moments calculation being more complicated, but significantly increasing the possibility of the combinations between \(S_{1},S_{2},T_{1}\), and \(T_{2}\).

The most important high-level idea to properly bound the moments is: the cross-moment conditioning on a specific \(}=(}_{A},}_{B})\) would be non-trivial if and only if _all edges occurring only once are centralized incorrectly_. Assuming there are \(z\) edges occurring once, we show that the probability that \(}\) satisfying this property is no greater than \(n^{-(a,b)-(a/b)/2)}{D}}\) for any \(>0\), by using the definition of \(\) and Lemma 8 later in Section K and Section L. It turns out that we require \(n^{-(a,b)-(a/b)/2)}{D}}\) to be \(o(n})\) for some positive constant \(C\) so that (1) and (2) are satisfied.

**Efficient algorithm.** Calculating \(_{ij}^{}}\) exactly (Algorithm 1) takes quasi-polynomial time as searching for all \(S H\) has time complexity \(n^{(N)}\). Algorithm 4 in Section F computes an approximated score in polynomial time. Specifically, we follow the color-coding-based similarity score approximation from . The basic idea is coloring the stochastic block model using \(N+1\) colors uniformly at random. Then, we only do signed counts on vertex sets that are colorful with \(N+1\) distinct colors. We show that this is an unbiased estimator of \(_{ij}^{}}\) and only potentially increase the variance by an additional constant factor in Section F. The result is stated as in Theorem 4.

**Theorem 4**.: _Theorem 3 continues to hold with the color-coding sampled estimation \(_{ij}^{}}\) in place of \(_{ij}^{}}\). Moreover, by Algorithm 4, \(\{_{ij}^{}}\}_{i,j[n]}\) can be computed in \(O(n^{C})\) for some constant \(C C()\) depending only on \(\), where \(\) is from (3)._

**Exact graph matching.** The final step of the algorithm is boosting the almost exact matching to a exact matching. The key idea is exploring the number of common neighbors.

Denote \(_{}(i,j)\) as the number of common neighbors of \(i\) and \(j\) under correspondence \(\). The high-level idea is that if \(i\) and \(j\) form a true correspondence, then for a correct partial matching \(\) on \((1-o(1))n\) vertices, with high probability, \(_{}(i,j)+q^{2}}{2}s^{2}(n+2n^{ })\) under the nice event \(\). Therefore, we match up \(i\) and \(j\) if they have more common neighbors than this threshold. Define \(h(x)=x x-x+1\). We give the following guarantee.

**Theorem 5**.: _Fix \(a b>0\) and \(s\). Let \(p=a,q=b\) and \((G_{1},G_{2})(n,p,q,s)\). Suppose \(s^{2}() 1+\) and \(s^{2}+\), for some \(>0\). Let \(\) be the unique solution in \((1,)\) to \(h()=}\). Then, the seeded matching Algorithm 2 with input \(\) and an index set \(I[n],|I|=(1-o(1))n(1-/16)n\) such that \(|_{I}=_{*}\) outputs an exact matching \(=_{*}\) in \(O(n^{3}(p+q)^{2})\) time with probability \(1-o(1)\)._

**Putting these pieces together implies Theorem 1.** From Theorem 4, we know that for \((G_{1},G_{2})(n,a,b,s)\), \(a b\), if \(s^{2}+\) for some \(>0\) then there we can match \((1-o(1))n\) vertices correctly and efficiently with high probability. Take the returned \(\) from Algorithm 4 as input of Algorithm 2, then Theorem 5 guarantees that the final output \(=_{*}\) with high probability.

## 6 Related work

Graph Matching.Correlated Erdos-Renyi graphs were first studied in  for social network de-anonymization. The information-theoretic threshold for partial matching was determined by [24; 27] and the information-theoretic threshold for exact graph matching was determined by [14; 15; 65].

Mao et al.  proposed the first efficient algorithm that achieves exact graph matching for correlated Erdos-Renyi graphs with average degree \((1+) n nq n^{( n)}\) and constant noise. This algorithm only requires a constant edge correlation (sufficiently close to \(1\)) rather than converging to \(1\), which represents a perfect correlation. Mao et al.  followed up with an improved efficient algorithm that achieves exact graph matching for any correlation \(\) satisfying \(^{2}>\) when \(nq(q+(1-q))(1+) n\). It is conjectured that for random graphs of logarithmic average degree, \(^{2}=\) is the computational threshold . Muratori and Semerjian  added a small constant constraint on the maximum vertex degree of a chandelier to improve the runtime, at the expense of having a slightly larger constant \(\) as the minimum squared correlation requirement.

In the denser regime where \(p=n^{-a+o(1)}\), \(a(0,1]\), Ding and Du  established a sharp information-theoretic threshold for matching a positive fraction of vertices. Ding and Li  also developed an efficient algorithm for exact graph matching whenever the edge correlation is non-vanishing, which goes beyond the Otter's tree counting constant.

Several recent works also go beyond correlated Erdos-Renyi graphs. Wang et al.  studied the exact graph matching with additional attribute information on vanishing edge correlation.

Closely related to our work, Yang et al.  adopted the binary tree counting algorithm  to give an efficient graph matching algorithm for correlated SBMs. However,  makes several significant assumptions (which we do not). For one, the algorithm in  assumes that the community labels are known. This is a strong assumption which may be unrealistic in practice; moreover, this precludes using graph matching as a tool for improved community recovery. In contrast, we do not assume that community labels are known; in fact, a significant part of our technical work is devoted to dealing with the errors arising from estimating the community labels. Moreover, our graph matching algorithm can be directly applied to improve community recovery, as discussed in Theorem 2 and Section 3. In addition,  makes strong assumptions on the parameters, assuming that (1) the average degree is at least \(( n)^{1.1}\), (2) the SBM has at least \(3\) communities, and (3) the correlation parameter satisfies \(s>1-_{0}\) for some unspecified (small) \(_{0}\). In contrast, our results hold in the most interesting regime of logarithmic average degree and the most natural setting of two balanced communities; moreover, our assumption on \(s\) is also weaker.

Community recovery with side informationBeyond correlated SBMs, there are some other models utilizing side information, from multiple networks [28; 62; 33; 30; 68; 71], additional covariates, or both . Multi-layer SBM is first mentioned in , which is generated as following: first, generate the community labels for all vertices and fix them for all layers; second, form edges on each layer based on the community labels. Typically, different layers in a multi-layer SBM are conditionally independent given the shared community labels. In addition, several works  also encode community membership correlated covariates onto each node. Aside from the multi-layer SBM, Braun and Sugiyama  recently studied community detection on a novel variation of SBM whose edges are attached with vectorial covariates.

## 7 Discussion and future work

Our main contribution in this paper is to give the first efficient algorithm for exact graph matching for correlated SBMs with two balanced communities, as well as a rigorous proof of its correctness (Theorem 1). We also discuss novel applications to community recovery (Theorem 2). At the same time, our work raises many interesting questions for future research, which we discuss here.

**Optimal runtime.** While our graph matching algorithm is efficient, it would be desirable to understand the optimal running time that can be achieved. Mao, Rudelson, and Tikhomirov  gave an efficient algorithm for matching correlated Erdos-Renyi graphs with runtime \(n^{2+o(1)}\); the main drawback is that this algorithm requires the correlation parameter to satisfy \(s>1-_{0}\) for some unspecified (small) \(_{0}>0\). Nonetheless, it would be interesting to generalize this algorithm to correlated SBMs and the techniques developed in our work may be useful to do so. In very recent (and concurrent) work, Muratori and Semerjian  gave faster algorithms for matching correlated Erdos-Renyi graphs by introducing a constraint on the maximum degree of a chandelier, at the expense of strengthening the condition \(s^{2}>\) to \(s^{2}>\) for some \(>\). Exploring the connections between our work and theirs, and generalizing their ideas to correlated SBMs, are of interest.

**Information-computation gap.** An important assumption throughout this work is that the correlation parameter satisfies \(s^{2}>\). We believe that this is inherently necessary and that there is no efficient algorithm (in the logarithmic average degree regime) when \(s^{2}<\). At the same time, exact graph matching is information-theoretically possible whenever \(s^{2}(a+b)/2>1\), so there is a conjectured information-computation gap. This mirrors the conjecture in  for Erdos-Renyi graphs; see also  for the low-degree hardness results on the correlation detection and  for the very recent low-degree hardness results on testing a pair of correlated stochastic block models against a pair of independent Erdos-Renyi graphs.

**Efficient exact community recovery when exact graph matching is not possible.** Gaudio, Racz, and Sridhar  determined the information-theoretic threshold for exact community recovery on correlated SBMs, in particular showing that there is a regime when this is possible even though (1) this is impossible with a single graph and also (2) exact graph matching is impossible. It remains unknown whether this can be done efficiently in this regime. We believe that this is possible, and our work is an important starting point for this question, yet additional ideas are needed to understand the subtle interplay between graph matching and community recovery in this regime.

**Sparser and denser regimes.** Our work focuses on the most interesting regime where the average degree is logarithmic in \(n\); it is worth understanding other regimes too. In particular, the chandelier counting algorithm by Mao et al.  gives almost exact graph matching whenever the average degree diverges. In our Theorem 1 we require that the average degree diverges logarithmically for the corresponding result, so that the error rate for community recovery estimate is polynomially small in \(n\). It would be interesting to overcome this technical barrier and extend the analysis to this sparser regime. Denser regimes are easier to understand. A close inspection of our analysis shows that it also works when the average degree diverges as a (small) polynomial in \(n\); in even denser regimes, the community partition can be recovered exactly and efficiently whenever \(_{n}|p_{n}/q_{n}-1|>0\) (see ) and then the graph matching algorithm in  can be applied in a black-box fashion.

**General block models.** We focused here on the simplest case of SBMs with two balanced communities. It is of great interest to develop efficient graph matching algorithms in the general block model with \(k\) communities, whenever this is possible. Recently, Yang and Chung  determined the information-theoretic threshold for exact graph matching in the \(k\)-community symmetric SBM, extending the results of Racz and Sridhar . We conjecture that substituting the community recovery algorithm used in our work with the degree-profiling algorithm by Abbe and Sandon  gives an efficient algorithm for graph matching in this more general setting, assuming again that \(s^{2}>\).