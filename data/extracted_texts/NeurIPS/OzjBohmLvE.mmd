# Achieving \(\mathcal{O}(\epsilon^{-1.5})\) Complexity in

# Achieving \((^{-1.5})\) Complexity in

Hessian/Jacobian-free Stochastic Bilevel Optimization

 Yifan Yang, Peiyao Xiao and Kaiyi Ji

Department of Computer Science and Engineering

University at Buffalo

Buffalo, NY 14260

{yyang99, peiyaoki, kaiyiji}@buffalo.edu

###### Abstract

In this paper, we revisit the bilevel optimization problem, in which the upper-level objective function is generally nonconvex and the lower-level objective function is strongly convex. Although this type of problem has been studied extensively, it still remains an open question how to achieve an \((^{-1.5})\) sample complexity in Hessian/Jacobian-free stochastic bilevel optimization without any second-order derivative computation. To fill this gap, we propose a novel Hessian/Jacobian-free bilevel optimizer named FdeHBO, which features a simple fully single-loop structure, a projection-aided finite-difference Hessian/Jacobian-vector approximation, and momentum-based updates. Theoretically, we show that FdeHBO requires \((^{-1.5})\) iterations (each using \((1)\) samples and only first-order gradient information) to find an \(\)-accurate stationary point. As far as we know, this is the first Hessian/Jacobian-free method with an \((^{-1.5})\) sample complexity for nonconvex-strongly-convex stochastic bilevel optimization.

## 1 Introduction

Bilevel optimization has drawn intensive attention due to its wide applications in meta-learning [18; 4; 50], hyperparameter optimization [18; 52; 14], reinforcement learning [35; 27], signal process [36; 16] and communication  and federated learning . In this paper, we study the following stochastic bilevel optimization problem.

\[_{x^{p}}(x) =f(x,y^{*}(x)):=_{}[f(x,y^{*}(x);)]\] \[y^{*}(x) =*{arg\,min}_{y^{q}}g(x,y):= _{}[g(x,y^{*}(x);)]\] (1)

where the upper- and lower-level objective functions \(f(x,y)\) and \(g(x,y)\) take the expectation form w.r.t. the random variables \(\) and \(\), and are jointly continuously differentiable. In this paper, we focus on the nonconvex-strongly-convex bilevel setting, where the lower-level function \(g(x,)\) is strongly convex and the upper-level function \((x)\) is nonconvex. This class of bilevel problems has been studied extensively from the theoretical perspective in recent years. Among them, [19; 30; 3; 62] proposed bilevel approaches with a double-loop structure, which update \(x\) and \(y\) in a nested manner. Single-loop bilevel algorithms have also attracted significant attention recently [27; 62; 34; 25; 9; 40; 11] due to the simple updates on all variables simultaneously. Among them, the approaches in [62; 34; 25] have been shown to achieve an \((^{-1.5})\) sample complexity, but with expensive evaluations of Hessian/Jacobian matrices or Hessian/Jacobian-vector products.

Hessian/Jacobian-free bilevel optimization has received increasing attention due to its high efficiency and feasibility in practical large-scale settings. In particular, [15; 48; 61] directly ignored thecomputation of all second-order derivatives. However, such eliminations may lead to performance degeneration [2; 13], and can vanish the hypergradient for bilevel problems with single-variable upper-level function, i.e., \((x)=f(y^{*}(x))\). [56; 23] proposed zeroth-order approaches that approximate the hypergradient using only function values. These methods do not have a convergence rate guarantee. Recently, several Hessian/Jacobian-free bilevel algorithms were proposed by [42; 57; 53; 8] by reformulating the lower-level problem into the optimality-based constraints such as \(g(x,y)_{y}g(x,y)\). However, these approaches all focus on the deterministic setting, and their extensions to the stochastic setting remain unclear. In the stochastic case,  proposed evolution strategies based bilevel method, which achieves a high sample complexity of \((p^{2}^{-2})\), where \(p\) is the problem dimension. Most recently,  proposed two fully first-order (i.e., Hessian/Jacobian-free) value-function-based stochastic bilevel optimizer named F\({}^{2}\)SA and its momentum-based version F\({}^{3}\)SA with a single-loop structure, which achieves sample complexities of \((^{-3.5})\) and \((^{-2.5})\), respectively. However, there is still a large gap of \(^{-1}\), compared to the optimal complexity of \((^{-1.5})\). Then, an important open question, as recently proposed by , is:

* Can we achieve an \((^{-1.5})\) sample/gradient complexity for nonconvex-strongly-convex bilevel optimization using only first-order gradient information?

### Our Contributions

In this paper, we provide an affirmative answer to the above question by proposing a new Hessian/Jacobian-free stochastic bilevel optimizer named FdeHBO with three main features. First, FdeHBO takes the fully single-loop structure with momentum-based updates on three variables \(y,v\) and \(x\) for optimizing the lower-level objective, the linear system (LS) of the Hessian-inverse-vector approximation, and the upper-level objective, respectively. Second, FdeHBO contains only a single matrix-vector product at each iteration, which admits a simple first-order finite-difference estimation. Third, FdeHBO involves an auxiliary projection on \(v\) updates to ensure the boundedness of the Hessian-vector approximation error, the variance on momentum-based iterates, and the smoothness of the LS loss function. Our detailed contributions are summarized below.

* Theoretically, we show that FdeHBO achieves a sample/gradient complexity of \((^{-1.5})\) and an iteration complexity of \((^{-1.5})\) to achieve an \(\)-accurate stationary point, both of which outperforms existing results by a large margin. As far as we know, this is the first-known method with an \((^{-1.5})\) sample complexity for nonconvex-strongly-convex stochastic bilevel optimization using only first-order gradient information.
* Technically, we show that the auxiliary projection can provide more accurate iterates on \(v\) in solving the LS problem without affecting the overall convergence behavior, and in addition, provide a novel characterization of the gradient estimation error and the iterative progress during the \(v\) updates, as well as the impact of the \(y\) and \(v\) updates on the momentum-based hypergradient estimation, all of which do not exist in previous studies. In addition, the finite-different approximations make the unbiased assumptions in the momentum-based gradients no longer hold, and hence a more careful analysis is required.
* As a byproduct, we further propose a fully single-loop momentum-based method named FMBO in the small-dimensional case with matrix-vector-based hypergradient computations. Differently from existing momentum-based bilevel methods with \(()\) Hessian-vector evaluations per iteration, FMBO contains only a single Hessian-vector computation per iteration with the same \((^{-1.5})\) sample complexity.

We also want to emphasize our technical differences from previous works as below.

  Algorithm & Samples & Batch size & \# of iterations & Loops per iteration \\   PZOBO-S  & \(}(p^{2}^{-3})\) & \((^{-1})\) & \(}(p^{2}^{-2})\) & 2 \\  F\({}^{2}\)SA  & \(}(^{-3.5})\) & \((1)\) & \(}(^{-3.5})\) & 1 \\  F\({}^{3}\)SA  & \(}(^{-2.5})\) & \((1)\) & \(}(^{-2.5})\) & 1 \\  FdeHBO (this paper) & \(}(^{-1.5})\) & \(}(1)\) & \(}(^{-1.5})\) & 1 \\  

Table 1: Comparison of stochastic Hessian/Jacobian-free bilevel optimization algorithms.

**Comparison to existing momentum-based methods.** Previous momentum-based methods [62; 34] solve the linear system (LS) to a high accuracy of \(()\), whereas our algorithm includes a new estimation error by the single-step momentum update on LS, and this error is also correlated with the lower-level updating error and the hypergradient estimation error. In addition, due to the finite-difference approximation, the stochastic gradients in all three updates on \(y,v,x\) are no longer unbiased. Non-trivial efforts need to be taken to deal with such challenges and derive the optimal complexity.

**Comparison to existing fully single-loop methods.** The analysis of the single-step momentum update in solving the LS requires the smoothness of the LS loss function and the boundedness of LS gradient variance, both of which may not be satisfied. To this end, we include an auxiliary projection and show it not only guarantees these crucial properties, but also, in theory, provides an improved per-iteration progress. As a comparison, existing works on fully single-loop stochastic bilevel optimization such as SOBA/SABA  and FLSA  with a new time scale to update the LS problem often assume that the iterates on \(v\) are bounded during the process. We do not require such assumptions. In addition, an \((^{-1.5})\) complexity has not been established for fully single-loop bilevel algorithms yet.

### Related Work

**Bilevel optimization methods.** Bilevel optimization, which was first introduced by , has been studied for decades. By replacing the lower-level problem with its optimality conditions, [26; 20; 54; 55] reformulated the bilevel problem to the single-level problem. Gradient-based bilevel methods have shown great promise recently, which can be divided into approximate implicit differentiation (AID) [12; 49; 41; 3] and iterative differentiation (ITD) [47; 17; 15; 52; 21] based approaches. Recently, a bunch of stochastic bilevel algorithms has been proposed via Neumann series [9; 30], recursive momentum [62; 28; 25] and variance reduction [62; 11]. Theoretically, the convergence of bilevel optimization has been analyzed by [18; 52; 45; 19; 30; 27; 3; 11]. Among them,  provides the lower complexity bounds for deterministic bilevel optimization with (strongly-)convex upper-level functions. [25; 9; 62; 34] achieved the near-optimal sample complexity with second-order derivative computations. Some works studied deterministic bilevel optimization with convex or Polyak-Lojasiewicz (PL) lower-level problems via mixed gradient aggregation [51; 46; 39], log-barrier regularization , primal-dual method  and dynamic barrier . More results and details can be found in the survey by .

**Hessian/Jacobian-free bilevel optimization.** Some Hessian/Jacobian-free bilevel optimization methods have been proposed recently by [58; 43; 15; 23; 56; 48]. Among them, FOMAML [15; 48] and MUMOMOAML  directly ignore the computation of all second-order derivatives. Several Hessian/Jacobian-free bilevel algorithms were proposed by [42; 57; 53; 8] by replacing the lower-level problem with the optimality conditions as the constraints. However, these approaches focus only on the deterministic setting. Recently, zeroth-order stochastic approaches have been proposed for the hypergradient estimation [56; 23; 58]. Theoretically,  analyzed the convergence rate for their method.  proposed fully first-order stochastic bilevel optimization algorithms based on the value-function-based lower-level problem reformulation. This paper proposes a new Hessian/Jacobian-free stochastic bilevel algorithm that for the first time achieves an \((^{-1.5})\) sample complexity.

**Momentum-based bilevel approaches.** The recursive momentum technique was first introduced by [10; 60] for minimization problems to improve the SGD-based updates in theory and in practice. This technique has been incorporated in stochastic bilevel optimization [34; 9; 24; 25; 62]. These approaches involve either Hessian-inverse matrix computations or a subloop of a number of iterations in the Hessian-inverse-vector approximation. As a comparison, our proposed method takes the simpler fully single-loop structure, and only uses the first-order gradient information.

**Finite-difference matrix-vector approximation.** The finite-difference matrix-vector estimation has been studied extensively in the problems of escaping from saddle points  (some other related works can be found therein), neural architecture search (NAS)  and meta-learning . However, such finite-different estimation can be sensitive to the selection of the smoothing constant, and may suffer from some numerical issues in practice , such as rounding errors. It is interesting but still open to developing a fully first-order stochastic bilevel optimizer without the finite-different matrix-vector estimation. We would like to leave it for future study.

## 2 Algorithms

In this section, we first describe the hypergradient computation in bilevel optimization, and then present the proposed Hessian/Jacobian-free bilevel method.

### Hypergradient Computation

One major challenge in bilevel optimization lies in computing the hypergradient \((x)\) due to the implicit and complex dependence of the lower-level minimizer \(y^{*}\) on \(x\). To see this, if \(g\) is twice differentiable, \(_{y}g\) is continuously differentiable and the Hessian \(_{yy}^{2}g(x,y^{*}(x))\) is invertible, using the implicit function theorem (IFT) [22; 5], the hypergradient \((x)\) takes the form of

\[(x)=_{x}f(x,y^{*})-_{xy}^{2}g(x,y^{*})_{yy }^{2}g(x,y^{*})^{-1}_{y}f(x,y^{*}).\] (2)

Note that the hypergradient in eq. (2) requires computing the exact solution \(y^{*}\) and the expensive Hessian inverse \([_{yy}^{2}g(x,y^{*})]^{-1}\). To approximate this hypergradient efficiently, we define the following (stochastic) hypergradient surrogates as

\[f(x,y,v)= _{x}f(x,y)-_{xy}^{2}g(x,y)v,\] \[f(x,y,v;)= _{x}f(x,y;)-_{xy}^{2}g(x,y;)v,\] (3)

where \(v^{q}\) is an auxiliary vector to approximate the Hessian-inverse-vector product in eq. (2), and \(f(x,y,v;)\) can be regarded as a stochastic version of \(f(x,y,v)\). Based on eq. (2), one needs to find an efficient estimate \(y\) of \(y^{*}\), e.g., via an iterative optimization procedure, as well as a feasible estimate \(v\) of the solution \(v^{*}=[_{yy}^{2}g(x,y)]^{-1}_{y}f(x,y)\) of a linear system (LS) (equivalently quadratic programming) whose generic loss function is given by

\[ R(x,y,v)=v^{T}_{yy}^{2}g(x,y)v-v^{T} _{y}f(x,y),\] (4)

where the gradient of \(R(x,y,v)\) w.r.t. \(v\) is given by

\[_{v}R(x,y,v)=_{yy}^{2}g(x,y)v-_{y}f(x,y).\] (5)

Similarly to eq. (2), we also define \(_{v}R(x,y,v;)=_{yy}^{2}g(x,y;)v-_{y}f(x,y;)\) over any sample \(\) as a stochastic version of \(_{v}R(x,y,v)\) in eq. (5). It can be seen from eq. (3), eq. (4) and eq. (5) that the updates on the LS system involve the Hessian- and Jacobian-vector products, which can be computationally intractable in the high-dimensional case. In the next section, we propose a novel stochastic Hessian/Jacobian-free bilevel algorithm.

### Hessian/Jacobian-free Bilevel Optimizer via Projection-aided Finite-difference Estimation

As shown in Algorithm 1, we propose a fully single-loop stochastic Hessian/Jacobian-free bilevel optimizer named FdeHBO via projection-aided finite-difference estimation. It can be seen that FdeHBO first minimizes the lower-level objective function \(g(x,y)\) w.r. \(y\) by running a single-step momentum-based update as \(y_{t+1}=y_{t}-_{t}h_{t}^{g}\), where \(_{t}\) is the stepsize and \(h_{t}^{g}\) is the momentum-based gradient estimator that takes the form of

\[h_{t}^{g}=_{t}^{g}_{y}g(x_{t},y_{t};_{t})+(1-_{t}^{g}) h_{t-1}^{g}+_{y}g(x_{t},y_{t};_{t})-_{y}g(x_{t-1},y_{t -1};_{t})\] (6)where \(_{t}^{g}\) is a tuning parameter. The next key step is to deal with the LS problem via solving the quadratic problem eq.4 as \(w_{t+1}=v_{t}-_{t}_{t}^{R}\), with the momentum-based gradient \(_{t}^{R}\) given by

\[_{t}^{R}= _{t}^{R}_{v}R(x_{t},y_{t},v_{t},_{ };_{t})+(1-_{t}^{R})h_{t-1}^{R}+_{v} R(x_{t},y_{t},v_{t},_{};_{t})\] \[-_{v}R(x_{t-1},y_{t-1},v_{t-1},_{ };_{t}),\] (7)

where \(_{v}R\) is a Hessian-free version of the LS gradient \(_{v}R\) in eq.5, given by

\[\ \ _{v}R(x_{t},y_{t},v_{t}, _{};_{t})=(x_{t},y_{t},v_{t},_{} ;_{t})-_{y}f(x_{t},y_{t};_{t}).\] (8)

Note that in the above eq.8, \((x_{t},y_{t},v_{t},_{};_{t})\) is the finite-difference estimation of the Hessian-vector product \(_{yy}^{2}g(x_{t},y_{t};_{t})v_{t}\), which takes the form of

\[(x_{t},y_{t},v_{t},_{};_{t})=g( x_{t},y_{t}+_{}v_{t};_{t})-_{y}g(x_{t},y_{t}-_{ }v_{t};_{t})}{2_{}},\] (9)

where \(_{}>0\) is a small constant. Note that in eq.9, if the iterative \(v_{t}\) is unbounded, the approximation error between \(\) and \(_{yy}^{2}g(x_{t},y_{t};_{t})v_{t}\) can be uncontrollable as well. We further prove lemma5 in appendixB that the bound of this gap relies on \(\|v_{t}\|\) and \(\) but it is independent of the dimension of \(y_{t}\). To this end, after obtaining \(w_{t+1}\), our key step in line6 introduces an auxiliary projection on a ball (which can be generalized to any convex and bounded domain) with a radius of \(r_{v}\) as

\[ v_{t+1}=w_{t+1},&\|w_{t+1}\|  r_{v};\\ w_{t+1}}{\|w_{t+1}\|},&\|w_{t+1}\|>r_{v}.\]

This auxiliary projection guarantees the boundedness of \(v_{t},t=0,...,T-1\), which serves **three** important purposes. First, it ensures the smoothness of the LS loss function \(R(x,y,v)\) in eq.5 w.r.t. all \(x,y\) and \(v\), which is crucial in the convergence analysis of the momentum-based updates. Second, the boundedness of \(v_{t}\) also ensures that the estimation variance of the stochastic LS gradient \(_{v}R(x_{t},y_{t},v_{t};_{t})\) does not explode. Third, it guarantees the error of the finite-difference Hessian-vector approximation to be sufficiently small with proper \(_{}\). We will show later that under a proper choice of the radius \(r_{v}\), this auxiliary projection provides better per-step progress, and the proposed algorithm achieves a stronger convergence performance. Finally, for the upper-level problem, the momentum-based hypergradient estimate \(_{t}^{f}\) is designed as

\[_{t}^{f}= _{t}^{f}f(x_{t},y_{t},v_{t},_{ };_{t})+(1-_{t}^{f})h_{t-1}^{f}+ f(x_{t},y_{t},v_{t},_{};_{t})\] \[-f(x_{t-1},y_{t-1},v_{t-1},_{}; _{t}),\] (10)

where \(f(x,y,v,_{};_{t})\) is the fully first-order hypergradient estimate evaluated at two consecutive iterates \((x_{t},y_{t},v_{t})\) and \((x_{t-1},y_{t-1},v_{t-1})\) is given by

\[f(x,y,v,_{};_{t})= _{x}f(x,y;_{t})-(x,y,v,_{ };_{t}),\]

and \((x,y,v,_{};_{t})\) is the finite-difference Jacobian-vector approximation given by

\[(x,y,v,_{};_{t}):=g(x,y+ _{}v;_{t})-_{x}g(x,y-_{}v; _{t})}{2_{}}.\] (11)

Note that \(_{v}R\) and \(f\) are **biased** estimators of the gradients \(_{v}R\) and \(f\), which further complicates the convergence analysis on the momentum-based updates because the conventional analysis on the recursive momentum requires the unbiased gradient estimation to ensure the variance reduction effect. By controlling the perturbation \(_{}\) properly, we will show that FdeHBO can achieve an \((^{-1.5})\) convergence and complexity performance without any second-order derivative computation.

### Extension to Small-Dimensional Case

As a byproduct of our proposed FdeHBO, we further propose a fully single-loop momentum-based bilevel optimizer (FMBO), which is more suitable in the small-dimensional case without finite-difference approximation. As shown in Algorithm2, FMBO first takes the same lower-level updateson \(y_{t}\) as in eq. (6). Then, it solves the LS problem as \(w_{t+1}=v_{t}-_{t}h_{t}^{R}\), where the momentum-based gradient estimator is given by

\[h_{t}^{R}= _{t}^{R}_{v}R(x_{t},y_{t},v_{t};_{t})+(1-_{t}^{R} )h_{t-1}^{g}+_{v}R(x_{t},y_{t},v_{t};_{t})\] \[-_{v}R(x_{t-1},y_{t-1},v_{t-1};_{t}),\] (12)

where differently from FdeHBO, we here use the precise gradient \(_{v}R\) without finite-difference approximation. Similarly to FdeHBO, we add an auxiliary projection on the \(v_{t}\) updates to ensure the LS smoothness and bounded variance. Finally, for the upper-level problem, we optimize \(x_{t}\) based on a momentum-based update as \(x_{t+1}=x_{t}-_{t}h_{t}^{f}\) with the hypergradient estimator

\[h_{t}^{f}= _{t}^{f}f(x_{t},y_{t},v_{t};_{t})+(1- _{t}^{f})(h_{t-1}^{f}+f(x_{t},y_{t},v_{t};_{t})- {}f(x_{t-1},y_{t-1},v_{t-1};_{t}))\] (13)

where \(_{t}^{f}\) is a tuning parameter. Similarly, we directly use the hypergradient estimate in eq. (3) without the finite-difference estimation. We note that compared to existing momentum-based algorithms [62; 34] that contains \(()\) steps in solving the LS problem, FMBO takes the fully single-loop structure with a single-step momentum-based acceleration on the LS updates.

## 3 Main Results

### Assumptions and Definitions

We make the following standard assumptions for the upper- and lower-level objective functions, as also adopted by [30; 9; 34]. The following assumption imposes the Lipschitz condition on the upper-level function \(f(x,y)\).

**Assumption 1**.: _For any \(x^{d_{x}}\) and \(y^{d_{y}}\), there exist positive constants \(L_{f_{x}}\), \(L_{f_{y}}\), \(C_{f_{x}}\) and \(C_{f_{y}}\) such that \(_{x}f(x,y)\) and \(_{y}f(x,y)\) are \(L_{f_{x}}\)- and \(L_{f_{y}}\)-Lipschitz continuous w.r.t. \((x,y)\), and \(\|_{x}f(x,y)\|^{2} C_{f_{x}}\), \(\|_{y}f(x,y)\|^{2} C_{f_{y}}\)._

The following assumption imposes the Lipschitz condition on the lower-level function \(g(x,y)\).

**Assumption 2**.: _For any \(x^{d_{x}}\) and \(y^{d_{y}}\), there exist positive constants \(_{g}\), \(L_{g}\), \(L_{g_{xy}}\), \(L_{g_{yy}}\), \(C_{g_{xy}},C_{g_{yy}}\) such that_

* _Function_ \(g(x,y)\) _is twice continuously differentiable;_
* _Function_ \(g(x,)\) _is_ \(_{g}\)_-strongly-convex;_
* _The derivatives_ \(_{y}g(x,y)\)_,_ \(_{xy}^{2}g(x,y)\) _and_ \(_{yy}^{2}g(x,y)\) _are_ \(L_{g}\)_-,_ \(L_{g_{xy}}\)_- and_ \(L_{g_{yy}}\)_-Lipschitz continuous w.r.t._ \((x,y)\)_;_
* \(\|_{xy}^{2}g(x,y)\|^{2} C_{g_{xy}}\) _and_ \(\|_{yy}^{2}g(x,y)\|^{2} C_{g_{yy}}\)_._

The following assumption is adopted for the stochastic functions \(f(x,y;)\) and \(g(x,y;)\).

**Assumption 3**.: _Assumptions 1 and 2 hold for \(f(x,y;)\) and \(g(x,y;)\) for \(\,\) and \(\). Moreover, we assume that there exist positive constants \(_{fx}\), \(_{y}\), \(_{g}\), \(_{g_{xy}}\) and \(_{g_{yy}}\) such that_

\[[\|_{x}f(x,y)-_{x}f(x,y;)\|^{2} ]_{f_{x}}^{2},[\|_{y}f(x,y)-_ {y}f(x,y;)\|^{2}]_{f_{y}}^{2},\] \[[\|_{y}g(x,y)-_{y}g(x,y;)\|^{2} ]_{g}^{2},[\|_{xy}^{2}g(x,y)- _{xy}^{2}g(x,y;)\|^{2}]_{g_{xy}}^{2},\] \[[\|_{yy}^{2}g(x,y)-_{yy}^{2}g(x,y; )\|^{2}]_{g_{yy}}^{2}.\]

**Definition 1**.: _We say \(\) is an \(\)-accurate stationary point of a function \((x)\) if \(\|()\|^{2}\), where \(\) is the output of an optimization algorithm._

### Convergence and Complexity Analysis of FdeHBO

We further provide the convergence analysis for the proposed Hessian/Jacobian-free FdeHBO algorithm. We first characterize several estimation properties of FdeHBO. Let \(e_{t}^{f}:=_{t}^{f}- f(x_{t},y_{t},v_{t})-(x_{t},y_{ t},v_{t})\) denote the hypergradient estimation error.

**Proposition 1**.: _Under Assumption 3, the iterates of the outer problem by Algorithm 1 satisfy_

\[\|e_{t+1}^{f}\|^{2} (1-_{t+1}^{f})^{2}+4L_{g_{xy}}r_{v}^{2}_{ }\|e_{t}^{f}\|^{2}+4(_{t+1}^{f})^{2}_{f}^{2}+ 4L_{g_{xy}}r_{v}^{2}_{}+16L_{g_{xy}}^{2}r_{v}^{4}_{ }^{2}\] \[+6(1-_{t+1}^{f})^{2}L_{F}^{2}_{t}^{2} \|_{t}^{f}\|^{2}+2L_{F}^{2}_{t}^{2}\|e_{t} ^{g}\|^{2}+\|_{y}g(x_{t},y_{t})\|^{2}\] \[+2C_{g_{xy}}_{t}^{2}\| e_{t}^{R}\|^{2}+L_{g}^{2}\|v_{t}-v_{t}^{*}\|^{2},\]

_for all \(t\{0,...,T-1\}\) with \(L_{F}^{2}=2L_{f_{x}}^{2}+L_{g_{xy}}^{2}r_{v}^{2}\)._

The hypergradient estimator error \((\|e_{t+1}^{f}\|^{2})\) contains three main components. The first term \([(1-_{t+1}^{f})^{2}+4L_{g_{xy}}r_{v}^{2}_{}]\|e_{ t}^{f}\|^{2}\) indicates the per-iteration improvement induced by the momentum-based update, the error term \(_{t}^{2}\|h_{t}^{f}\|^{2}\) is caused by the \(x_{t}\) updates, the error term \((_{t}^{2}\|e_{t}^{g}\|^{2}+\|_{y}g(x_{t},y_{ t})\|^{2})\) is caused by solving the lower-level problem, and the new error term \((_{t}^{2}\|e_{t}^{R}\|^{2}+L_{g}^{2}\|v_{t}-v_{t}^{ *}\|^{2})\) is induced by the one-step momentum update on the LS problem, which does not exist in previous momentum-based bilevel methods  that solve the LS problem to a high accuracy. Also note that the errors \(4L_{g_{xy}}r_{v}^{2}_{}\|e_{t}^{f}\|^{2}\) and \(4L_{g_{xy}}r_{v}^{2}_{}+16L_{g_{xy}}^{2}r_{v}^{4}_{ }^{2}\) are caused by the finite-difference approximation error. Fortunately, by choosing the perturbation level \(_{}\) in these two terms to be properly small, it can guarantee the descent factor \((1-_{t+1}^{f})^{2}+4L_{g_{xy}}r_{v}^{2}_{}\) to be at an order of \((1-(_{t+1}^{f}))^{2}\), and hence the momentum-based variance reduction effect is still applied.

**Proposition 2**.: _For \(\,\), define \(e_{t}^{R}:=_{t}^{R}-_{v}R(x_{t},y_{t},v_{t})\). Under Assumptions 1, 2, 3, we have_

\[\|e_{t+1}^{R}\|^{2} (1-_{t+1}^{R})^{2}(1+96L_{g}^{4}_{t}^{2})+4L_{g_ {yy}}r_{v}^{2}_{}\|e_{t}^{R}\|^{2}+4L_{g_ {yy}}r_{v}^{2}_{}+8L_{g_{yy}}^{2}r_{v}^{4}_{}^{2} \] \[+8(_{t+1}^{R})^{2}(_{g_{yy}}^{2}r_{v}^{2}+_{f_{y} }^{2})+96(1-_{t+1}^{R})^{2}L_{g}^{2}_{t}^{2}(\|e_{t} ^{R}\|^{2}+L_{g}^{2}\|v_{t}-v_{t}^{*}\|^{2})\] \[+96(1-_{t+1}^{R})^{2}L_{g_{yy}}^{2}r_{v}^{2}+L_{f_{y} }^{2}_{t}^{2}\|_{t}^{f}\|^{2}+2 _{t}^{2}(\|e_{t}^{g}\|^{2}+\|_{y}g(x_{t},y_{t})\|^ {2})\]

_for all \(t\{0,1,...,T-1\}\)._

As shown in Proposition 2, the LS gradient estimation error \(e_{t+1}^{R}\) contains an iteratively improved error component \((1-_{t+1}^{R})^{2}(1+96L_{g}^{4}_{t}^{2})+4L_{g_{yy}}r_{v}^{2} _{}\|e_{t}^{R}\|^{2}\) for the stepsize \(_{t}\) and the approximation factor \(_{}\) sufficiently small, a finite-difference approximation error \((_{})\) as well as an approximation error \((_{t}^{2}\|v_{t}-v_{t}^{*}\|^{2})\) for solving the LS problem. The next step is to upper-bound \(\|v_{t}-v_{t}^{*}\|^{2}\).

**Proposition 3**.: _Under the Assumption 1, 2, the iterates of the LS problem by Algorithm 1 satisfy_

\[\|v_{t+1} -v_{t+1}^{*}\|^{2}\] \[(1+_{t}^{})1+_{t}^{} 1-2_{t}+L_{g}^{3})_{g}}{_{g}+L_{g}}+ _{t}^{2}L_{g}^{2}\|v_{t}-v_{t}^{*}\|^{2}\] \[+(1+_{t}^{})1+^{ }}_{t}^{2}\|e_{t}^{R}\|^{2}\] \[+(1+^{}})}^{ 2}}{_{g}^{2}}+}^{2}L_{g_{yy}}^{2}}{_{g}^{4}} [_{t}^{2}\|_{t}^{f}\|^{2}+_{t}^{2} (2\|e_{t}^{g}\|^{2}+2\|_{y}g(x_{t},_for all \(t\{0,...,T-1\}\) with some \(_{t}^{}>0\) and \(_{t}^{}>0\)._

Based on the above important properties, we now provide the general convergence theorem for FdeHBO.

**Theorem 1**.: _Suppose Assumptions 1, 2, 3 and Lemma 3 are satisfied. Choose \(r_{v}}}{_{g}}\) and set_

\[_{t}=},_{t}=c_{}_{t}, _{t}=c_{}_{t},_{t}^{f}=c_{_{f}}_{t}^{2},_{t}^{R}=c_{_{R}}_{t}^{2},_{t}^{g}=c_{_{g}} _{t}^{2},\]

_and \(_{}},c_{_{R}}\}}{8(L_{g_{xy}}r_{v }^{2}(w+T-1)^{2/3})}\), where the constants \(w\), \(c_{},c_{},c_{_{f}},c_{_{R}}\) and \(c_{_{g}}\) are defined in eq. (67) in the appendix. Then, the iterates generated by Algorithm 1 satisfy_

\[\|x_{a}(T)\|^{2}} )-^{*}}{T^{2/3}}+-y^{*}(x_{0})\|^{2}}{T^{ 2/3}}+-v^{*}(x_{0},y_{0})\|^{2}}{T^{2/3}}\] \[+}+^{2}}{T^{2/3}}+^{2}}{T^{2/3}}+^{2}}{T^{2/3}}.\]

**Corollary 1**.: _Under the same setting of Theorem 1, FdeHBO requires \(}(^{-1.5})\) samples and gradient evaluations, respectively, to achieve an \(\)-accurate stationary point._

It can be seen from Corollary 1 that the proposed FdeHBO achieves an \(}(^{-1.5})\) sample complexity without any second-order derivative computation. As far as we know, this is the first Hessian/Jacobian-free stochastic bilevel optimizer with an \(}(^{-1.5})\) sample complexity.

### Convergence and Complexity Analysis of FMBO

In this section, we analyze the convergence and complexity of the simplified FMBO method.

**Theorem 2**.: _Suppose Assumptions 1, 2 and 3 are satisfied. Choose \(r_{v}}}{_{g}}\) and set parameters_

\[_{t}=},_{t}=c_{}_{t}, _{t}=c_{}_{t},\]

\[_{t}^{f}=c_{_{f}}_{t}^{2},_{t}^{R}=c_{_{R}}_{ t}^{2},_{t}^{g}=c_{_{g}}_{t}^{2}\]

_where \(w\), \(c_{},c_{},c_{_{f}},c_{_{R}}\) and \(c_{_{g}}\) are defined in eq. (33) in the appendix. The iterates generated by Algorithm 2 satisfy_

\[\|(x_{a}(T))\|^{2} })-^{*}}{T^{2/3 }}+-y^{*}(x_{0})\|^{2}}{T^{2/3}}\] \[+-v^{*}(x_{0},y_{0})\|^{2}}{T^{2/3}}+^{2}}{T^{2/3}}+^{2}}{T^{2/3}}+^{2}}{T^{2/3}} .\]

Theorem 2 shows that the proposed fully single-loop FMBO achieves a convergence rate of \(}\), which further yields the following complexity result.

**Corollary 2**.: _Under the same setting of Theorem 2, FMBO requires totally \(}(^{-1.5})\) data samples, gradient and matrix-vector evaluations, respectively, to achieve an \(\)-accurate stationary point._

Corollary 2 shows that FMBO requires a total number \(}(^{-1.5})\) of data samples, which matches the best sample complexity in [34; 62; 28]. More importantly, each iteration of FMBO contains only one Hessian-vector computation due to the simple fully single-loop implementation, whereas other momentum-based approaches require \(()\) Hessian-vector computations in a nested manner per iteration. Also, note that FMBO is the first fully single-loop bilevel optimizer that achieves the \(}(^{-1.5})\) sample complexity.

## 4 Experiments

In this section, we test the performance of the proposed FdeHBO and FMBO on two applications: hyper-representation and data hyper-cleaning, respectively.

### Hyper-representation on MNIST Dataset

We now compare the performance of our Hessian/Jacobian-free FdeHBO with the relevant Hessian/Jacobian-free methods PZOBO-S , F\({}^{2}\)SA  and F\({}^{3}\)SA . We perform the hyper-representation with the \(7\)-layer LeNet network , which aims to solve the following bilevel problem.

\[_{}L_{}():=|}_{(x_{i},y_{ i}) S_{}}L_{CE}(w^{*}()f(;x_{i}),y_{i})\] \[s.t.\ \ w^{*}()=*{arg\,min}_{w}L_{in}(,w), \ \ \ L_{in}(,w):=|}_{(,y_{i}) S_{}}L_{CE}( wf(,x_{i}),y_{i}),\]

where \(L_{CE}\) denotes the cross-entropy loss, \(S_{}\) and \(S_{}\) denote the training data and validation data, and \(f(;x_{i})\) denotes the features extracted from the data \(x_{i}\). More details of the experimental setups are specified in Appendix A.1.

As shown in Figure 1, our FdeHBO converges much faster and more stably than PZOBO-S, F\({}^{2}\)SA and F\({}^{3}\)SA, while achieving a higher training accuracy. This is consistent with our theoretical results, and validates the momentum-based approaches in reducing the variance during the entire training.

### Hyper-cleaning on MNIST Dataset

We compare the performance of our FMBO to various bilevel algorithms including AID-FP , reverse, SUSTAIN , MRBO and VRBO , BSA , stocBio , FSLA  and SOBA , on a low-dimensional data hyper-cleaning problem with a linear classifier on MNIST dataset, which takes the following formulation.

\[_{}L_{}(,w^{*})=|}_{(x_{ i},y_{i}) S_{}}L_{CE}((w^{*})^{T}x_{i},y_{i})\] \[s.t.\ \ \ w^{*}=*{arg\,min}_{w}L(,w):=|}_{(x_{i},y_{i}) S_{}}(_{i})L_{CE}(w^{T}x_{i}, y_{i})+C\|w\|^{2},\] (14)

where \(L_{CE}\) denotes the cross-entropy loss, \(S_{}\) and \(S_{}\) denote the training data and validation data, whose sizes are set to 20000 and 5000, respectively, \(=\{_{i}\}_{i S_{}}\) and \(C\) are the regularization parameters, and \(()\) is the sigmoid function. AmIGO  is not included in the figures because it performs similarly to stocBio. The experimental details can be found in Appendix A.2.

As shown in Figure 2(a), FMBO, stocBio and AID-FP converge much faster and more stable than other algorithms. Compared to stocBio and AID-FP, FMBO achieves a lower training loss. This demonstrates the effectiveness of momentum-based variance reduction in finding more accurate iterates. It can be seen from Figure 2(b) that FMBO converges faster than existing fully single-loop FSLA and SOBA algorithms with a lower training loss.

## 5 Conclusion

In this paper, we propose a novel Hessian/Jacobian-free bilevel optimizer named FdeHBO. We show that FdeHBO achieves an \((^{-1.5})\) sample complexity, which outperforms existing algorithms of the

Figure 1: Comparison on hyper-representation with the LeNet neural network. Left plot: outer loss v.s. running time; right plot: accuracy v.s. running time.

same type by a large margin. Our experiments validate the theoretical results and the effectiveness of the proposed algorithms. We anticipate that the developed analysis will shed light on developing provable Hessian/Jacobian-free bilevel optimization algorithms and the proposed algorithms may be applied to other applications such as fair machine learning.