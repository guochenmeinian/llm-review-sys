# Applying Guidance in a Limited Interval Improves Sample and Distribution Quality in Diffusion Models

Applying Guidance in a Limited Interval Improves Sample and Distribution Quality in Diffusion Models

 Tuomas Kynkaanniemi

Aalto University

&Miika Aittala

NVIDIA

&Tero Karras

NVIDIA

Samuli Laine

NVIDIA

&Timo Aila

NVIDIA

&Jaakko Lehtinen

Aalto University, NVIDIA

###### Abstract

Guidance is a crucial technique for extracting the best performance out of image-generating diffusion models. Traditionally, a constant guidance weight has been applied throughout the sampling chain of an image. We show that guidance is clearly harmful toward the beginning of the chain (high noise levels), largely unnecessary toward the end (low noise levels), and only beneficial in the middle. We thus restrict it to a specific range of noise levels, improving both the inference speed and result quality. This limited guidance interval improves the record FID in ImageNet-512 significantly, from 1.81 to 1.40. We show that it is quantitatively and qualitatively beneficial across different sampler parameters, network architectures, and datasets, including the large-scale setting of Stable Diffusion XL. We thus suggest exposing the guidance interval as a hyperparameter in all diffusion models that use guidance.

## 1 Introduction

Denoising diffusion models [17; 28; 38; 39; 40; 41; 43; 20] have enabled rapid advances in high-quality image synthesis based on text prompts and other forms of input [13; 35; 44]. They scale effortlessly to large-scale datasets [4; 5; 34], and also to other modalities such as video [8; 7; 16; 19], 3D shapes [26; 31; 33; 37], and audio [24; 32].

Diffusion models convert an initial image of pure noise to a novel generated image through repeated application of image denoising. This sampling chain typically contains dozens of steps, and in each step a little bit of the denoised result is blended into the noisy image. The sampling process first gravitates towards the mean of the training data, followed by the determination of image features in an approximate coarse-to-fine manner based on the remaining noise. This iterative process, where the image is formed little by little, offers considerable flexibility in terms of encouraging or discouraging certain kinds of behavior at each step.

Negative prompts  are a widely used concept, where the sampling process is given an additional anti-goal that is to be avoided. For example, "nudity" might be a common negative prompt in text-based image generators. At every sampling step, the denoiser is executed twice: once for the positive and once for the negative prompt, and the positive result is then extrapolated further away from the negative one based on a weight parameter. This works remarkably well in practice. Classifier-free guidance (CFG)  builds on this general concept. It uses an unconditional model (no class information or text prompts) as a negative prompt, causing the result image to align more strongly with the conditioning signal.

In practice, all large-scale image generators rely heavily on CFG. It allows a mathematically justified way of truncating the distribution of generated images [12; 18], basically trading variation for perceptually higher image quality. By convention, the same guidance weight is used in all sampling steps. We observe that this is sub-optimal because CFG behaves very differently on high, middle, and low noise levels. On high noise levels, it drastically reduces the variation in the results, basically leading them towards a handful of "template images" per prompt. On middle levels, it causes the sampling to more decisively choose some set of features, leading to crisper and perceptually more pleasing results. On low levels, it is largely unnecessary. Similar observations have been made in the Stable Diffusion community [1; 2; 21], and Muse  and Masked DiT v2  observe that making guidance weight noise level-dependent improves the results. In the context of prompt inversion, Mahajan et al.  notice that limiting the inversion to specific noise levels leads to improved result quality. However, these works do not quantify the effect on distribution metrics with the exception of Sadat et al. , whose "dynamic CFG" limits a linearly varying guidance weight to an interval of noise levels. Interestingly, they conclude that dynamic CFG leads to rather poor results, while a more complicated condition annealing scheme is required for good quantitative results.

We suggest that guidance should be simply limited to an interval of sampling steps in the middle, where the net effect is positive, without otherwise changing the guidance weight. This avoids most of the detrimental effects of guidance, while also reducing computational cost. We show that an optimal guidance interval improves the state-of-the-art FID  in ImageNet-512 from 1.81 to 1.40 and also leads to an improved visual quality. The benefits are consistent across sampler parameters, network architectures, and datasets, including Stable Diffusion XL. Code is available at https://github.com/kynkaat/guidance-interval

## 2 Background

The concepts in this and the following section are illustrated in Figure 1 using a synthetic 1D example. In this example, generation is performed by ideal analytic denoisers, avoiding all approximations that a learned denoiser might cause. While this renders classifier-free guidance strictly harmful in the scenario, the example allows us to intuitively visualize the kinds of harm it causes.

The goal of a denoising diffusion model is to draw samples from a data distribution \(p_{}()\). Let us define a series of smoothed distributions \(p(;)\), so that each individual distribution is the convolution between \(p_{}\) and a Gaussian noise distribution with standard deviation \(\). Following the EDM formulation , the evolution of a sample \( p(;)\) w.r.t. a change in \(\) is described by the ordinary differential equation (ODE):

\[/=-D_{}(;)- /,\] (1)

where \(D_{}\) is a denoiser model with parameters \(\), optimized to minimize the expected \(L_{2}\) denoising error:

\[=_{}\ _{ p_{},  p_{},(,^{2} )}\|D_{}(+;)-\|_{2}^{2}.\] (2)

Here, \(p_{}()\) is the training distribution of noise levels, which we consider to be an implementation detail of \(D_{}\). To generate a sample from the data distribution, we first draw an initial sample

Figure 1: Visualizing the effect of guidance. **(a)** The unconditional (orange) and conditional (green) PDFs. In (b) through (e), the orange unconditional density is visualized in the background. **(b)** Sample trajectories for the unconditional distribution. **(c)** Trajectories for the conditional distribution. **(d)** Trajectories for the guided distribution with \(w=6\). **(e)** The tangent vectors \(/\) at the intersection point of the three marked trajectories. The difference of the unconditional (red) and conditional (green) vectors is magnified as per Equation 4, causing the unexpected detour in low-probability areas and a mode drop. See Figure 2 for details and comparison to our approach.

\(_{0} p(;_{})\), where \(_{}\) is chosen to be large enough so that \(p(;_{})\) is approximately equal to pure Gaussian distribution and thus trivial to sample from. We then follow the ODE of Equation 1 to evolve \(_{0}\) towards \(=0\), i.e., the data distribution. Figure 0(a) illustrates the target distribution (orange). Figure 0(b) depicts the diffused target distribution over the \(\) axis and a set of sample trajectories computed by solving Equation 1 from several different initial conditions.

We can think of classifier-free guidance  as constructing a modified ODE where \(/\) is defined as a linear combination between a conditional ODE and an unconditional ODE:

\[/ = w-D_{}(|;)- /+(1-w)-D_{}(; )-/\] (3) \[= -wD_{}(|;)+(1-w)D_{ }(;)-/,\] (4)

where \(w\) is the guidance weight and \(\) is the condition information given to the denoiser \(D_{}\) (cf. Figure 0(c)). Setting \(w>1\) results in _extrapolating_ the effect of the condition with respect to the unconditional result, i.e., the sample is effectively pushed away from the unconditional result. This extrapolation can be seen [12; 18] as raising the conditional likelihood \(p(|;)\) to a power greater than one, which, intuitively, aims to concentrate the probability mass to the regions that most agree with the condition. However, as illustrated in Figure 0(d, e) and the next section, this "oversteering" may direct the trajectories away from the data distribution and cause mode drops.

Most commonly, a single denoiser model \(D_{}\) is trained to accept either conditional or unconditional input by dropping the conditioning information 10-20% of the time during training. Alternatively, we can train two separate models \(D_{_{}}(|;)\) and \(D_{_{}}(;)\). This makes it possible to reduce the capacity of the unconditional model considerably to improve the overall sampling speed .

Sampling the ODE is done by taking a number of discrete steps that bring the noise level from \(_{}\) to zero, giving rise to a sequence of images \(_{0},_{1},,_{N}\), each with its corresponding noise level \(_{i}\). Various discretization schemes and solvers have been proposed . Regardless of the specifics, the computational cost is directly proportional to the number of sampling steps \(N\).

## 3 Our method

In Figure 2, we continue to probe the downsides of CFG using the previous toy example. We observe that applying guidance at all noise levels -- as is typical -- causes the sampling trajectories to drift quite far from the the smoothed data distribution (Figure 1(b)). This is caused by the unconditional trajectories effectively repelling the guided trajectories, as discussed above, yielding badly skewed intermediate distributions. As a result, the sampler drops one of the modes (almost) entirely.

As most of the drift seems to be caused at high noise levels, we disable CFG in those sampling steps (Figure 1(c)). This correctly recovers both modes of the conditional distribution. In addition, disabling guidance at low noise levels (Figure 1(d)) has only a small effect on the resulting distribution, providing a simple way to reduce the sampling cost with minimal effect on outputs.

Although this toy example is grossly simplified, we hypothesize that broadly similar effects occur in full-scale diffusion models as well. In Section 4 we can see, e.g., image compositions becoming

Figure 2: Illustration of the detrimental effects of guidance at high \(\) in a synthetic 1D scenario. **(a)** PDFs of the unconditional (orange) and conditional (green) data distributions used in this example. **(b)** Activating guidance (weight \(w=6\)) everywhere leads to a catastrophic mode drop. The zoomed-out inset shows how guidance pushes the sampling trajectories outside the distribution during early sampling. **(c)** Disabling guidance at high \(\) resolves the issue and restores both modes. **(d)** Disabling guidance at low \(\) has little effect and can be done to reduce computational cost.

less varied due to guidance, somewhat akin to the mode dropping observed in the toy example. That behaviour is difficult to explain by local sharpening of probability distributions alone (Section 2).

### Practice

Motivated by the above observations, we propose to only apply guidance in a continuous interval of noise levels in the middle of the sampling chain and disable it elsewhere. Concretely, we redefine the ODE of Equation 4 by replacing \(w\) with a piecewise constant function:

\[/ = -w()D_{}(|;)+ 1-w()D_{}(;)-/,\] (5) \[\ \ \ w() = w&(_{},_{}]\\ 1&\] (6)

Here, \(_{}\) denotes the point in the sampling chain where we enable guidance and \(_{}\) is the point where we turn it off. In our formulation, traditional CFG is recovered by setting \(_{}=0\) and \(_{}=\).

Virtually all existing deterministic samplers can be seen as numerical Runge-Kutta solutions to the ODE of Equation 4, obtained through a number of discrete steps. While the correspondence might not be obvious in all cases, we can nevertheless characterize the steps with respect to \(\) as detailed in Appendix A. For example, in the case of Stable Diffusion XL , we have 32 steps corresponding to the transitions \(_{0}_{1},\ _{1}_{2},,\ _{31} _{32}\), where \(_{0}=14.61,\ _{1}=13.41,\ _{2}=12.28,,\ _{31}=0.03,\) and \(_{32}=0\).

The underlying assumption common to all Runge-Kutta methods is that \(/\) should be sufficiently smooth within each step. In Equation 6, however, we intentionally introduce discontinuities at \(_{}\) and \(_{}\). In order to satisfy the smoothness requirement, we must thus ensure that both transitions happen exactly at step boundaries so that the value of \(w()\) stays constant within each step. In practice, we choose to do this by rounding \(_{}\) and \(_{}\) appropriately, i.e., by setting \(_{}=_{i}\) and \(_{}=_{j}\) for some \(i<j\). Note that this leads to a seemingly high numerical precision in the values of \(_{}\) and \(_{}\), which should not be taken as an indication of extremely precise tuning.

## 4 Results

We will first evaluate and ablate our method quantitatively using ImageNet . Limiting the guidance interval leads to clearly identifiable qualitative changes in the images, which we subsequently demonstrate also in the large-scale context using Stable Diffusion XL . Please refer to Appendix B for additional results.

### Main results

We mainly evaluate our method on ImageNet at \(512 512\), using the current state-of-the-art approach EDM2  as a baseline.1 We use the small (EDM2-S) and the largest (EDM2-XXL) models as-is with the default sampling parameters: 32 deterministic steps with a 2\({}^{}\) order Heun sampler .

 
**ImageNet-512** &  &  &  &  \\   & FID & FD\({}_{}\):2 &  & Glog & FID & FD\({}_{}\):2 & FD & FD\({}_{}\):2 \\  EDM2-S  & w/ CFG  & 2.23 & 52.32 & 280 & 102 & Full & Full & 1.4 & 1.9 \\ EDM2-S  & w/ guidance interval & 1.68 & 46.25 & 280 & 102 & \((0.28,2.90]\)\((0.60,5.00)\) & 2.1 & 3.2 \\ EDM2-XXL  & w/ CFG  & 1.81 & 33.09 & 1523 & 552 & Full & Full & 1.2 & 1.7 \\ EDM2-XXL2  & w/ guidance interval & **1.40** & **29.16** & 1523 & 552 & \((0.19,1.61]\)\((0.60,5.00)\) & 2.0 & 2.9 \\ DiT-XL/2  & w/ CFG  & 3.04 & 51.97 & 675 & 525 & Full & Full & 1.5 & 2.0 \\ DiT-XL/2  & w/ guidance interval & 2.40 & 43.94 & 675 & 525 & \((0.34,1.02]\)\((0.45,1.23)\) & 2.5 & 4.0 \\  

Table 1: Quantitative results on ImageNet-512. Limiting the classifier-free guidance (CFG) to an interval improves both FID and FD\({}_{}\)v2 significantly, without altering the model complexity. The sampling cost is a bit lower due to fewer guidance evaluations. This holds for a small (S) and large (XXL) variants of the state-of-the-art EDM2 model , as well as diffusion transformers . The model complexity numbers are copied from the EDM2 paper.

Table 1 shows that our method improves FID  and the more recently proposed FD\({}_{}\) significantly. Using EDM2-S, FID improves from 2.23 to 1.68, already beating the state-of-the-art in this dataset. With EDM2-XXL, the record further improves to 1.40 and FD\({}_{}\) also improves from 33.09 to 29.16.

To find the optimal parameters for each case, we performed a full grid search over \(w\), \(_{}\), and \(_{}\). In the case of EDM2-XXL, the best FID is achieved by applying guidance at 6 of the 32 steps, corresponding to noise levels \((0.19,1.61]\), with weight \(w=2.0\). The best FD\({}_{}\) is obtained with slightly higher noise levels \((0.60,5.00]\) and a slightly higher weight \(w=2.9\).

For additional validation, we also tested our method on diffusion transformers  using the DiT-XL/2 model2 with default sampling parameters: 250 step iDDPM . Limiting the guidance interval leads to significant improvements with this model as well. The best FID results were obtained by using guidance with \(w=2.5\) in 75 of the 250 sampling steps, corresponding to the interval \((0.34,1.02]\). The best FD\({}_{}\) is again obtained with slightly higher noise levels \((0.45,1.23]\) and weight \(w=4.0\).

### Ablations

Figure 3 shows that standard classifier-free guidance is quite sensitive to the guidance weight. When the weight is too high, the output image distribution is excessively truncated, and the harm caused outside the useful interval starts to outweigh the benefits obtained within. In contrast, limiting the

Figure 4: Precision and recall curves for classifier-free guidance (orange, red) and our method (blue, green), when the guidance weight \(w\) is varied from 1.0 to 4.0 in 0.1 increments. Black points indicate the minimum and maximum guidance weights in the sweep, while colored triangles show the precision/recall tradeoffs that achieve the best FD\({}_{}\). We used the DINOv2 feature space in this plot, following the recommendation by Stein et al. . The curves represent median over three evaluations.

Figure 3: FID and FD\({}_{}\) as a function of guidance weight for classifier-free guidance (orange, red) and our method where the guidance has been limited to the stated interval (blue, green). The shaded regions indicate the min/max over three evaluations.

guidance interval allows the use of much higher guidance weight, and FID or \(_{}\) are far less sensitive to the exact choice.

Figure 4 shows precision and recall  curves for CFG and our method, evaluated with varying guidance weights in DINOv2 feature space, as suggested by Stein at al. . Compared to CFG, our method achieves better \(_{}\) primarily by improving Recall without significantly affecting Precision. This is consistent with the qualitative observation that the results are more varied.

Figure 5 probes the sensitivity of our results to the chosen guidance interval. In this test, we sweep over \(_{}\) and \(_{}\), while keeping the other interval endpoint, \(_{}\) or \(_{}\), and the guidance weight \(w\) as the optimal choices as reported in Table 1. The left side shows a sweep over \(_{}\), i.e., the highest noise level with guidance. Including too high noise levels to the guidance interval leads to truncation of the image distribution, which can be seen as an increase in FID. Furthermore, too narrow an interval (low \(_{}\)) yields sub-optimal results. For both EDM2 models the optimal choice for \(_{}\) is located at the middle noise levels. The right side shows a sweep over \(_{}\), i.e., the lowest noise level with guidance. Applying guidance at low noise levels does not bring additional benefits, compared to the middle levels. Thus, guidance can be disabled in most of the low noise levels to decrease sampling cost, an observation also made in .

To estimate the optimal guidance interval in practice, the upper and lower guidance limits can be determined separately, without the need for a two-dimensional search. This happens by first establishing the optimal upper limit by keeping the lower limit at zero. This can be done because the lower limit affects the result only weakly, and in a predictable way (Figure 5, right). Once the optimal upper limit is known, the lower limit is determined. Optionally, a bisection method can be used for accelerating both search operations. Finally, one can reduce the sample size of FID evaluation from 50k to, say, 5k, at least for an initial run, which accelerates the process by \(10\).

We have found that the optimal choice of \(_{}\) and \(_{}\) is not overly sensitive to the other sampling parameters. For example, if we halve or double the number of steps with EDM2-S, the optimal guidance interval remains unchanged. With 16 steps, our method improves FID from 2.49 to 1.84, and with 64 steps, from 2.27 to 1.70.

In an additional test, we tried applying various smooth weighting functions to the guidance weight (less guidance towards the ends of the interval), but these tests did not improve the results over the simple binary inclusion. We also tried estimating the importance of guidance at individual noise levels by enabling or disabling it at each sampling step at a time. However, these tests consistently underestimated the downsides of guidance, suggesting that they build up cumulatively over multiple consecutive steps.

### Qualitative analysis

With the rise of recent large-scale image generators, ImageNet can hardly be considered a meaningful benchmark for gauging perceptual image quality. Thus, we primarily focus on evaluating our method in the context of Stable Diffusion XL (SD-XL), but we also provide corresponding results for

Figure 5: Sensitivity of FID to the chosen guidance interval. **Left:** Sweep over \(_{}\) with optimal \(_{}\) and \(w\). **Right:** Sweep over \(_{}\) with optimal \(_{}\) and \(w\). The shaded regions indicate the min/max over three evaluations.

Figure 6: Traditional CFG vs. our method. **Left:** Low \(w\) yields diverse but fuzzy images that lack detail. **Middle:** Increasing \(w\) adds crispness, but reduces diversity and oversaturates the colors. **Right:** Our method reduces these effects while retaining the crisp look.

ImageNet using EDM2-XXL. For SD-XL, we use the official pre-trained checkpoint3 with a standard 32-step deterministic Heun sampler, where the first step corresponds to \(=14.61\).

With SD-XL, we apply guidance at 50% of the sampling steps, corresponding to noise levels \((0.28,5.42]\), with weight \(w=16\). These parameters were chosen by visual inspection. The beneficial interval is wider than in ImageNet, likely due to the more varied dataset used in the

Figure 7: Effect of guidance weight \(w\) with our method. We limit the guidance to \((0.28,5.42]\) with SD-XL (top) and to \((0.19,1.61]\) with EDM2-XXL (bottom). Higher \(w\) leads to clearer and more well-defined image details while keeping the color palette and overall composition unchanged.

Figure 8: Effect of changing the guidance interval \((_{},_{}]\) with \(w=16\). **Top:** Decreasing \(_{}\), i.e., disabling guidance at high noise levels, while keeping \(_{}=0.28\). High values lead to simplified image composition and oversaturated colors (left); low values cause the image to become increasingly convoluted (right). **Bottom:** Increasing \(_{}\), i.e., disabling guidance at low noise levels, while keeping \(_{}=5.42\). The value can be made relatively high with no noticeable impact, reducing sampling cost.

Figure 9: Effect of increasing guidance weight \(w\) with CFG vs. our method. **Left:** Increasing the guidance weight with CFG leads to changes in image composition and contrast. **Right:** With our method, increasing \(w\) improves image details but retains the overall composition and realistic colors.

training of SD-XL. Consequently, our method leads to over \(20\%\) speed-up due to a lower number of unconditional model evaluations .

Figure 6 shows a comparison between standard classifier-free guidance with low and high weights (left and middle columns) and our method with high guidance weight (right column). When the guidance weight is increased in standard CFG (middle), the composition of the image tends to change drastically, towards some limited set of per-class "templates". Furthermore, the colors saturate unnaturally as the guidance weight increases. When we limit the guidance interval (right), image diversity is preserved to a significant degree and the color saturation is also reduced, although excessively large guidance weights can still lead to over-saturation.

Figure 7 shows the effect of increasing the guidance weight with our method. With low weight, the images appear blurry, inconsistent, and lacking in detail. Increasing the weight improves the rendition of details while retaining the original image composition.

As the task of selecting the best guidance interval \((_{},_{}]\) with SD-XL is necessarily subjective, we provide a visual ablation of this choice in Figure 8. Modifying the upper limit \(_{}\), i.e., disabling guidance at high noise levels, has two distinct effects. First, it affects the overall image composition -- higher values lead to more simplified image layouts whereas low values lead to unnecessary complexity. Second, high values lead to oversaturated colors whereas lower \(_{}\) leads to a blander color scheme. Similar to EDM2 results, changing the lower limit \(_{}\) has only a modest effect -- guidance can be disabled from most of the low noise levels with no noticeable impact while improving the inference speed.

Lastly, Figure 9 compares the effects of increasing the guidance weight in standard CFG vs. our method with EDM2-XXL.

## 5 Conclusions

Classifier-free guidance is an indispensable tool for improving the results of practically all image-generating diffusion models. As our simple modification improves the results both numerically and visually, and also reduces sampling cost, we recommend exposing the guidance interval as an additional sampler parameter.

Future work could investigate whether the optimal guidance interval can be automatically derived from the ODE, and the role played by the non-idealities in the trained denoiser. A recent work by Biroli et al.  predicts from a dataset the interval where the generated images specialize to a certain class. A follow-up study could examine whether their "speciation" interval overlaps with the interval that is beneficial for guidance.