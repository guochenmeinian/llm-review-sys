# Exploiting Contextual Objects and Relations for 3D Visual Grounding

Li Yang\({}^{1}\)

Equal contribution, \({}^{}\)Corresponding author

 Chunfeng Yuan\({}^{1}\)

Equal contribution, \({}^{}\)Corresponding author

 Ziqi Zhang\({}^{1}\)

 Zhongang Qi\({}^{2}\)

 Yan Xu\({}^{3}\)

 Wei Liu\({}^{1}\)

 Ying Shan\({}^{2}\)

Bing Li\({}^{1}\)

State Key Laboratory of Multimodal Artificial Intelligence Systems (MAIS), CASIA

\({}^{2}\)ARC Lab, Tencent PCG, \({}^{3}\)The Chinese University of Hong Kong

\({}^{4}\)Education Management Information Center, Ministry of Education \({}^{5}\)Alibaba Group

\({}^{6}\)Zhejiang Linkheer Science And Technology Co., Ltd.
Existing methods for 3D visual grounding typically involve matching a large set of object proposals with the textual description. These methods either use graph networks [6; 8; 9] or transformer architectures [10; 11; 12; 13; 14] to implicitly model contextual information between object proposals while performing cross-modal fusion with the text. Despite the effectiveness, their optimization objectives mainly focus on the final matching of object proposals with the textual description, without paying special attention to the alignment with the contextual information in the text. Consequently, important contextual cues may be overlooked during target inference, resulting in less reliable results.

In contrast, humans naturally possess a remarkable ability to infer the target object based on a language description. We can easily capture the relevant contextual information in the 3D scene to reason about the target indicated by the description in a two-step manner: Firstly, we locate all the objects mentioned in the text. Then we figure out the relations between these objects and compare them with the textual description, which enables us to ultimately identify the target referred to in the description. Motivated by this, we improve 3D visual grounding by mimicking this human reasoning process. Specifically, **(1)** we explicitly detect all mentioned contextual objects in addition to the target object, focusing the network on these objects to capture contextual information for target inference. As most current datasets do not have annotations for contextual objects, we propose a pseudo-label self-generation strategy, which leverages object semantics learned at the phrase level to generate learning labels for contextual objects. **(2)** We explicitly model the contextual relations between the candidate targets and the contextual objects as features of an adjacency matrix, which initially encode various spatial relations of objects. To facilitate the learning of contextual relations, we introduce a weakly-supervised learning loss that explicitly distinguishes related and unrelated relations for the target object.

The above ideas are embodied as a novel transformer-based framework that explicitly exploits **C**ontextual **O**bjects and **RE**lations for **3D** Visual **G**rounding (CORE-3DVG). Our framework, illustrated in Figure 1(b), comprises three modular networks that divide the 3D visual grounding process into three inference steps. Firstly, a text-guided object detection network performs joint detection of both the target and contextual objects. Next, a relation matching network models the representations of their contextual relations. Finally, the target identification network pinpoints the referred object based on the modeled contextual relations.

To summarize, our contributions are threefold:

* We propose to explicitly model and learn the objects and relations mentioned in the context to focus the network on contextual information for 3D visual grounding.
* We introduce a novel framework for 3D visual grounding, dubbed CORE-3DVG, which tackles the task of 3D visual grounding through three sequential modules. Our framework first detects all mentioned objects in the scene, then models their contextual relations, and finally performs context-based target inference.
* We evaluate our method on the challenging benchmarks including Nr3D, Sr3D, and ScanRefer. Our method outperforms the previous state-of-the-art counterparts by significant margins. Extensive experiments validate the efficacy of our proposed techniques.

Figure 1: (a) Language descriptions often provide the necessary contextual information to accurately depict the target objects. (b) Our proposed framework for 3D visual grounding.

Related Work

**2D/3D Visual Grounding.** Visual grounding aims to locate target objects in 2D images or 3D point clouds based on the language input. Existing methods are generally categorized as one-stage methods [15; 16; 17; 4; 18] and two-stage methods [1; 19; 3; 20; 21; 22; 23; 24; 25; 26; 6; 7]. One-stage approaches fuse textual features with visual representations to generate target predictions in one shot. Two-stage methods follow a two-step detection and matching process: they first leverage the off-the-shelf detectors [27; 28; 29; 30] to generate object proposals, which are then matched with language input to select the best match as the estimated target.

The prevalent methods in 3D visual grounding adopt a two-stage scheme. Early works [6; 8; 9] use graph-based methods to model spatial relations among object proposals. With the rise of transformers , recent works [10; 12; 13; 14; 18] have adopted transformers for feature fusion and cross-modal fusion. Among them, SAT  incorporates 2D visual grounding to improve the performance of 3D visual grounding. Multi-view transformer  models different views in visual feature modeling.

**Context Modeling for Visual Grounding.** Modeling contextual information is important for visual grounding, especially for 3D visual grounding. While early works use graph neural networks or transformers to model contextual information, they fall short in encoding various spatial relations between objects. Recent 3DVG-transformer  and ViL3DRel  explicitly encode the objects' distances or orientations into their self-attention computation to better model 3D spatial relations. In contrast to prior works, our method focuses on the explicit learning of contextual objects and relations and exploiting this information for target inference.

## 3 Method

### Framework

Our method focuses on the learning of contextual objects and relations, and exploits such information to achieve reliable 3D visual grounding. Figure 2 illustrates the overall framework. Given a 3D scene's point cloud and a language description, we initially encode their features into \(F_{v}^{M C}\) and \(F_{l}^{L C}\), respectively, where \(M\) and \(L\) represent the number of features and \(C\) denotes the feature dimension. Based on these encoded features, 1) A text-guided object detection network first detects semantically related objects in the 3D scene, including target and contextual objects. 2) Then, we construct the spatial relation features in a pairwise manner for these detected objects and input them into the relation matching network for modeling contextual relations. 3) Finally, utilizing the modeled contextual features, the target identification network can effectively match the detected objects with the textual information to find the referred object.

#### 3.1.1 Text-Guided Object Detection Network

The object detection network, as illustrated in Figure 2(a), consists of \(N_{d}\) transformer decoder layers. The network is initiated with a set of \(K\) object queries \([o_{1},o_{2},,o_{K}]^{}^{K C}\), which are generated from the point cloud features \(F_{v}\) based on their correlation with the textual features \(F_{l}\) (see the supplementary material for more details). In each decoder layer, the initial object queries are first input to a self-attention layer to enable feature interaction between candidate objects. The queries are then passed through two cascaded cross-attention layers to gather textual and visual features successively. Next, a feed-forward network (FFN) updates the object queries. For the resulting \(K\) object queries, two FFNs are applied to predict their object bounding boxes \([_{1},_{2},,_{K}]^{}^{K  6}\) and confidence scores \([_{1},_{2},,_{K}]^{}^{K  1}\), respectively.

To avoid duplicate object detections, we employ non-maximum suppression (NMS) and retain the top \(T\) scoring detections. We represent the bounding boxes of the retained detections as \([_{1},_{2},,_{T}]^{}^{T  4}\) and their corresponding object queries as \([_{1},_{2},,_{T}]^{}^{T  C}\). These detections correspond to the most relevant objects detected for the language description, including both target and contextual objects. For the training of this detection network, we propose a pseudo-label self-generation strategy to facilitate learning of unlabeled contextual objects, which is detailed in Section 3.2.

#### 3.1.2 Relation Matching Network

The relation matching network is developed to model the target object's contextual relations that match the textual description. Specifically, for each pair of detected objects \((_{i},_{j})\), we devise multiple spatial relation features that consider different aspects, including distance & orientation, volume & dimension, and perspective (see the supplementary material for details). This results in \(T T\) spatial relation features \([r^{s}_{i,j}]_{1 i,j T}\) for the \(T\) detected objects, where \(r^{s}_{i,j}^{C_{1}}\) represents the relation feature with \(_{i}\) as the candidate target and \(_{j}\) as the contextual object. We perform linear projection on each feature \(r^{s}_{i,j}\) and its corresponding contextual object query \(_{j}\), and then concatenate them as the initial contextual relation feature:

\[r^{0}_{i,j}=(W_{1} r^{s}_{i,j},W_{2}_{j}),\] (1)

where \(W_{1}^{C/2 C_{1}}\) and \(W_{2}^{C/2 C}\) are the linear projection weights.

As depicted in Figure 2(b), the relation matching network takes the contextual relation features \([r^{0}_{i,j}]_{1 i,j T}\) as input and applies \(N_{r}\) transformer decoder layers to model contextual relations that match the textual description. To achieve this, each decoder layer contains a self-attention layer for intra-modal information interaction among relation features, a cross-attention layer on textual features for cross-modal fusion, and an FFN to transform the relation features. The relation matching network outputs the updated relation features \([r_{i,j}]_{1 i,j T}\), and we apply a two-layer FFN to generate their respective matching scores w.r.t. the textual information, denoted as \([m_{i,j}]_{1 i,j T}\). A weakly-supervised learning approach is proposed to supervise these matching scores and thereby learn the contextual relations associated with the referred object (detailed in Section 3.3).

#### 3.1.3 Target Identification Network

We propose the target identification network to find the referred object with fine-grained alignment to the textual description by leveraging the information of the detected objects and their contextual relations. As shown in Figure 2(c), with the detected objects as candidates, we input their object queries \([_{1},_{2},,_{T}]^{}^{T  C}\) into the target identification network. This network aligns the object queries with the textual features via \(N_{g}\) transformer decoder layers. Each decoder layer includes a self-attention layer and a cross-attention layer to enable intra-modal and cross-modal feature fusion, followed by an FFN layer to refine the object query representations. We take the output object queries from the last decoder layer and apply a two-layer FFN to estimate their confidence scores as the target object, denoted as \([p^{*}_{1},p^{*}_{2},,p^{*}_{T}]^{}^{T 1}\).

To exploit contextual relations for target discrimination, we propose a context-aware self-attention mechanism incorporating relation features to better model contextual information among candidate objects. Specifically, the self-attention layer contains multiple attention heads to process the input object queries. In each attention head, the object queries are first linearly projected as the query, key,

Figure 2: The overview of our framework. Our framework comprises three modular networks that divide the 3D visual grounding process into three inference steps.

and value embeddings, represented by \(Q,K,V^{T d_{k}}\), respectively (\(d_{k}\) is the dimension of the embeddings). The conventional self-attention method computes the attention of the \(i\)-th object to the \(j\)-th object by correlating their query and key embeddings, _i.e_. \(_{j}(Q(i)K(j)^{}/})\). Our self-attention mechanism extends this attention computation by considering the modeled contextual relations between objects. To accomplish this, we calculate an additional query embedding of the object queries as \(Q_{r}^{T d_{k}}\), and perform linear projection on the contextual relation features \([r_{i,j}]_{1 i,j T}\) to obtain their key and value embeddings as \(R_{k},R_{v}^{T T d_{k}}\), respectively. The attention of the \(i\)-th object to the \(j\)-th object is then computed as follows:

\[_{i,j}=_{j}}+Q_ {r}(i)R_{k}(i,j)^{}}{}}.\] (2)

The resulting self-attention matrix allows each object to focus more on the objects that have important contextual relations between them. Moreover, we aggregate the value embeddings of both the object queries and their associated relation features for attention-based feature fusion:

\[_{i}=_{j}_{i,j}(V(j)+R_{v}(i,j)).\] (3)

In this manner, each attention head of the self-attention layer achieves context-based feature aggregation, and the outputs from all attention heads are concatenated to update the input object queries. Consequently, the updated object queries can explicitly encode information about related contextual objects and relations. We incorporate the context-aware self-attention layer in each decoder layer of the target identification network, enabling a more effective comparison of modeled object queries with textual information to discern the referred object.

### Pseudo-Label Self-Generation for Contextual Object Learning

Our method starts with a text-guided detection network to detect all the objects mentioned in the textual description. However, since the contextual objects associated with the referred targets are typically unlabeled, the object detection network lacks the requisite supervision for effective training. To address this issue, we propose a pseudo-label self-generation strategy that facilitates the learning of contextual objects within the network.

As shown in Figure 2(a), we first extract the noun phrases for physical objects from the input text and divide them into the _labeled noun phrase_ (of the target object) and the _unlabeled noun phrases_ (of the other contextual objects). We input these extracted noun phrases into the object detection network along with the same initial object queries and point cloud features. For the labeled noun phrase, the network produces \(K\) detected bounding boxes \([_{1},_{2},_{K}]^{}^{K  6}\) and confidence scores \([_{1},_{2},,_{K}]^{}^{ K 1}\). Given the ground-truth bounding box of the target object as \(b_{}^{6}\), we find the best matching detection result \(\{_{},_{}\}\) (with index \(\)) as the positive sample. Then we define the following losses to supervise the detection results of the labeled noun phrase:

\[_{}&=_{}(b_{},_{}),\\ _{}&=-(_ {})-_{k}_{}(1-_{k} ),\] (4)

where the loss function \(_{}\) consists of the GIoU loss  and the L1 loss, _i.e_. \(_{}(,)=_{}_{ }(,)+_{}_{}( ,)\) (\(_{}\) and \(_{}\) are hyper-parameters to balance the two losses).

During training, based on the supervised learning for labeled noun phrases, we develop the network's ability to detect objects for various noun phrases. We thereby apply the detection network to the unlabeled noun phrases and utilize the output detection results to create pseudo labels for contextual objects. In particular, for each of the \(U\) unlabeled noun phrases, we process the detection results with NMS and select the \(H\) detections with the highest scores. We use \(b^{*}_{i,j}^{6}\) and \(p^{*}_{i,j}\) to denote the bounding box and unnormalized score of the \(j\)-th detection for the \(i\)-th unlabeled noun phrase. This gives \( H\) object detections \(\{(b^{*}_{i,j},p^{*}_{i,j})\}_{1 i U,1 j H}\) to serve as the pseudo labels for contextual objects. As shown in Figure 2(a), we combine these pseudo labels with the target's ground-truth label \(b_{}\) to supervise the network's detection results \(\{(_{i},_{i})\}\) for the entire sentence (see Section 3.1.1). Similar to DETR , we use the Hungarian algorithm to find the best matching detections for the combined labels, where \(\) and \(_{i,j}\) denote the matching indexes for the target label and each pseudo label, respectively. Then the supervision losses on the detection results are computed as:

\[_{}&=_{ }(b_{},_{})+_{i=1}^{U}_{j=1}^{H}w_{i,j}_{}(b_{i,j}^{*},_{_{i,j}}),\\ _{}&=-(_ {})-_{i=1}^{U}_{j=1}^{H}w_{i,j}(_{_{ i,j}})-_{\\ k\{_{i,j}\}}_{n}(1-_ {k}),\] (5)

where \(w_{i,j}=^{*})}{_{j=1}^{H}(p_{i,j}^{*})}(p_{i,j}^{*})\) denotes the learning weight for each pseudo label. We use \(w_{i,j}\) to encourage learning pseudo labels of higher scores under each unlabeled noun phrase while also considering the individual confidence of each pseudo label to mitigate the impact of learning unreliable pseudo labels. With Equation (5), the network learns to understand the object phrases within the input text for associated object detection. During inference, the network detects target and contextual objects based on the input text without the need to manually extract their noun phrases.

### Weakly-Supervised Contextual Relation Learning

Our relation matching network outputs a score matrix \([m_{i,j}]_{1 i,j T}\) for all pairs of \(T\) detected objects, representing the matching scores between their contextual relations and the textual description. However, since there are no explicit labels for contextual relation learning, we propose a weakly-supervised method to find the contextual relations associated with the referred object. The overall optimization objectives for contextual relation learning are:

1. For the target object, there exists at least one contextual relation with a high matching score.
2. For the related contextual object, its contextual relations should have lower matching scores when paired with objects that are not the target.

To accomplish this, we first match the \(T\) detected objects with the ground truth target \(b_{}\) and find the best matching detection as \(_{}\) (indexed by \(\)), which the model shall later infer as the detected target. Then we take the \(\)-th row from the score matrix \([m_{i,j}]_{1 i,j T}\), obtaining \([m_{,j}]_{j}\) as the contextual relation matching scores between the detected target \(_{}\) and other objects. From these scores, we find the maximum score \(m_{,}\) with column index \(=_{j}([m_{,j}]_{j})\). We thereby consider the object \(_{}\) as the most related contextual object for the target \(_{}\). Following the optimization objectives 1 and 2, we devise the following losses to supervise the matching scores of the \(\)-th row and \(\)-th column:

\[_{}&=_{ j=1\\ j}^{T}(0,\;+m_{,j}-m_{,}),\\ _{}&=_{i=1}^{T}(0,\; +m_{i,}-m_{,}),\] (6)

where the hyper-parameter \(\) defines the score margin. The losses \(_{}\) and \(_{}\) ensure that the contextual relation \(r_{,}\) (between objects \(_{}\) and \(_{}\)) has a matching score surpassing the scores of other contextual relations (with target \(_{}\) or contextual object \(_{}\)) by a margin of \(\). This encourages the network to explicitly differentiate related and unrelated contextual relations for the target object. We utilize the learned contextual relation features for target inference, as detailed in Section 3.1.3.

### Training

In addition to the previous losses for learning contextual objects and relations, we also supervise the target identification network on its estimated grounding scores \([p_{1}^{*},p_{2}^{*},,p_{T}^{*}]\) for the \(T\) candidate object detections. We take the \(\)-th detected object that best matches the ground-truth label \(b_{}\) as the positive sample, and we treat other detections as negative samples. We compute the binary cross-entropy loss on their grounding scores as follows:

\[_{}=-(p_{}^{})+_{k=1\\ k}^{T}_{n}(1-p_{k}^{}).\] (7)

We take the sum of losses for all the modular networks to train the entire model. Following the previous works [6; 7], we apply auxiliary losses to the predictions from every decoder layer of the modular networks. The overall training loss is:

\[=}_{k=1}^{N_{d}}(_{}^{ k}+_{}^{k}+_{}^{k}+_{ }^{k})+}_{k=1}^{N_{r}}(_{ }^{k}+_{}^{k})+}_{k=1 }^{N_{g}}_{}^{k},\] (8)

where the superscript \(k\) indexes the losses of predictions from multiple decoder layers.

## 4 Experiments

### Datasets

**Nr3D** is built on 3D indoor scene dataset ScanNet . It contains 41,503 human-annotated text descriptions, covering 76 object categories and 707 indoor scenes. The dataset is divided into "Easy" and "Hard" subsets depending on whether there are objects that share the same category as the target in the scene. Based on whether a specific viewpoint is required to infer the target, the dataset is divided into "View-dep." and "View-indep." subsets.

**Sr3D** contains 83,572 descriptions that are automatically generated using specific templates. Similar to the Nr3D dataset, the Sr3D dataset is divided into multiple subsets for evaluation.

**ScanRefer** provides 51,583 text descriptions of 11,046 objects in 800 3D scenes from the ScanNet. On average, there are 13.81 objects and 64.48 text descriptions per scene. The official division takes 36,665 samples as the training set and 9,508 as the test set. According to whether the target object category is unique in the scene, the dataset is divided into "Unique" and "Multiple" subsets.

### Implementation Details

We utilize the AdamW optimizer  to train our model with a batch size of 24. For visual feature encoding, we utilize the PointNet++ network  with an initial learning rate of \(10^{-3}\). The rest of the model has an initial learning rate of \(10^{-4}\), and the weight decay value is set to \(5 10^{-4}\). We employ the first three layers of the RoBERTa  to extract text features. We train our model for 120 epochs on the Nr3D dataset, 60 epochs on the Sr3D dataset, and 100 epochs on the ScanRefer dataset. The hyper-parameter \(\) in Equation 6 is set to 0.4, and we set the weight hyper-parameters \(_{}=1\) and \(_{}=5\) for the \(_{}\) loss. The numbers of decoder layers for the text-guided object detection, relation matching, and target identification networks are set to \(N_{d}=3\), \(N_{r}=2\), and \(N_{g}=3\), respectively. Following the previous work , we apply rotation data augmentation for the 3D point cloud scenes and augment supervision with detection prompts during training. We measure accuracy using Acc@0.25 for both Nr3D and Sr3D datasets, where a predicted bounding box is considered correct if its IoU with the ground truth target exceeds 0.25. For the ScanRefer dataset , we employ two metrics: Acc@0.25 and Acc@0.5.

### Comparison with State-of-the-Art Methods

Table 1 presents the comparative results of our method with the current state-of-the-art methods on the Nr3D, Sr3D, and ScanRefer datasets. Our method consistently outperforms the previous methods. For the Nr3D and Sr3D datasets, it is standard practice to use ground-truth object boxes as object proposals to infer the referred object. However, considering that ground-truth boxes are usually unavailable in practical scenarios, our model is designed to locate objects of interest using a dedicated detection network. Thus, for a fair comparison, we quote the evaluation results from BUTD-DETR , where previous methods are evaluated with detected object proposals by a pre-trained 3D object detector . The quoted results are marked with \(\) and we denote this evaluation setup as "det" in Table 1. On the Nr3D and Sr3D datasets, as shown in Table 1, our method exhibits

[MISSING_PAGE_FAIL:8]

**Pseudo-Label Self-Generation Strategy for Contextual Object Learning.** In Table 4, we investigate the pseudo-label generation strategy used for contextual object learning. First, we only employ the detection loss defined in Equation 4 to learn the objects corresponding to labeled noun phrases. The second row of Table 4 shows an overall accuracy improvement of 3.67% compared to the baseline model in the first row. This suggests that augmenting the textual diversity for object detection training also contributes to improved visual grounding. After that, we utilize the pseudo labels generated for unlabeled noun phrases to guide the learning of contextual objects. The third row of Table 4 demonstrates that this technique boosts the model's accuracy from 38.33% to 44.42% (+ 6.09%) and exhibits significant performance enhancements across all test subsets. These results further emphasize the importance of learning contextual objects, as it allows the model to effectively capture contextual information for target inference.

**Initial Spatial Relation Features.** We develop a diverse set of spatial relations between objects as initial features for modeling contextual relations. Table 5 presents an ablation study of these relation features. The first row of Table 5 shows an overall accuracy of 44.42% when the initial spatial relation features are not used. Then, we individually incorporate the relation features related to "Distance & Orientation", "Volume & Dimension", and "Perspective-related relations", improving the overall accuracy by 2.15%, 1.63%, and 3.35%, respectively. Notably, the perspective-related relation features achieves the greatest improvement, especially in the "View-dep." test subset (from 40.75% to 46.46%), highlighting its effectiveness in reasoning textual descriptions associated with specific viewpoints. Finally, combining all these relation features in the last row of Table 5 yields the highest accuracy of 47.90%.

**Weakly-Supervised Contextual Relation Learning.** In Table 6, we conduct an ablation study on the learning of contextual relations. The first two rows of Table 6 show an overall accuracy improvement of 3.48% when directly using the initial spatial relation features. However, as shown in the third row of Table 6, the relation matching network alone fails to improve performance without the inclusion of the weakly-supervised losses in Equation 6. By incorporating weakly-supervised learning of contextual relations, we achieve an overall accuracy improvement of 1.77% and observe appreciable performance advancements across all test subsets, as depicted in the last row of Table 6. These results clearly demonstrate the necessity of the weakly-supervised learning in effectively modeling contextual relations.

    Method \\  } &  Easy \\  } &  Hard \\  } &  View- \\ dep. \\  & 
 View- \\ indep. \\  & Overall \\   & 40.50 & 29.04 & 32.13 & 35.59 & 34.66 \\  & 45.05 & 31.87 & 33.17 & 40.23 & 38.33 \\  & 49.85 & 39.20 & 40.75 & 45.78 & **44.42** \\   

Table 4: The ablation study of pseudo-label self-generation strategy.

    Learning \\ context. objects \\  } &  Learning \\ context. relations \\  } &  Easy \\  } &  Hard \\  } &  View- \\ dep. \\  & 
 View- \\ indep. \\  & Overall \\   & & 40.50 & 29.04 & 32.13 & 35.59 & 34.66 \\  & \(\) & 49.85 & 39.20 & 40.75 & 45.78 & 44.42 \\  & \(\) & 43.34 & 31.55 & 38.27 & 36.98 & 37.33 \\   & \(\) & 53.91 & 45.39 & 48.19 & 50.07 & **49.57** \\   

Table 3: The ablation study of learning contextual objects and relations.

    Distance \& \\ Orientation \\  } &  Volume \& \\ Dimension \\  } &  Perspective- \\ related relations \\  } &  Easy \\  } &  Hard \\  } &  View- \\ dep. \\  } &  View- \\ indep. \\  } & Overall \\   & & & 49.85 & 39.20 & 40.75 & 45.78 & 44.42 \\  & & & 52.38 & 40.99 & 43.53 & 47.70 & 46.57 \\  & \(\) & & 51.62 & 40.70 & 42.94 & 47.20 & 46.05 \\  & & \(\) & 52.49 & 42.58 & 46.46 & 47.81 & 47.44 \\   & \(\) & \(\) & 52.55 & 43.42 & 46.85 & 48.28 & **47.90** \\   

Table 5: The ablation study of initial spatial relation features.

### Visualization

In Figure 3, we visualize the visual grounding results of our method for various descriptions and 3D scenes. We use green bounding boxes to represent the detected target objects and red bounding boxes to indicate the contextual objects that exhibit relation matching scores greater than 0.4. The results illustrate the efficacy of our method in comprehending contextual information within the text to infer the referred target object. For example, in Figure 3(a), when given the description "The lamp next to the red curtains", our model successfully locates the correct lamp and the adjacent red curtains, thereby avoiding misclassification of the lamp near the bed. This explicit utilization of contextual information enables a more reliable inference of the target object.

## 5 Conclusion

In this paper, we presented a 3D visual grounding framework that focuses on learning contextual objects and relations. The proposed framework consists of three sequential modules: text-guided object detection, relation matching, and target identification networks. The innovative techniques of pseudo-label self-generation and weakly-supervised learning facilitate the learning of contextual objects and relations. We verify the effectiveness of contextual objects and relations learning through extensive experiments and achieve leading performances on multiple benchmarks, including Nr3D, Sr3D, and ScanRefer.

Despite the remarkable performance achieved, the generalization ability of our method is still limited since our model has been only trained on datasets with limited object semantics and corpus. The performance of our algorithms could be influenced by the types of devices used to capture the point clouds and the types of 3D scenes. In the future, we plan to further dig into the generalization ability of 3D visual grounding frameworks and extend our method to more practical and realistic scenarios.

**Acknowledgements.** This work is supported by the National Key R&D Program of China (No. 2022ZD0118501), the Beijing Natural Science Foundation (JQ21017, L223003, M22005, 4224091), the Natural Science Foundation of China (Grant No. 61972397, 62222206, 62036011, 62192782, 61721004, U2033210, 62372451, 62192785, 62372082, 62202469), the Major Projects of Guangdong Education Department for Foundation Research and Applied Research (2018KZDXM066), Guangdong Provincial University Innovation Team Project (2020KCXTD045).

   Initial spatial & Relation matching & Weakly-supervised & Easy & Hard & View- & View- & Overall \\ relation features & network & learning losses & & & & & \\   & & & & 49.85 & 39.20 & 40.75 & 45.78 & 44.42 \\ ✓ & & & & 52.55 & 43.42 & 46.85 & 48.28 & 47.90 \\ ✓ & ✓ & & & 52.55 & 43.24 & 46.90 & 48.13 & 47.80 \\ ✓ & ✓ & ✓ & & 53.91 & 45.39 & 48.19 & 50.07 & **49.57** \\   

Table 6: The ablation study of contextual relation learning.

Figure 3: 3D visual grounding results with associated contextual objects and relations.