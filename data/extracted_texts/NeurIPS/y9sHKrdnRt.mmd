# MC-DiT: Contextual Enhancement via Clean-to-Clean Reconstruction for Masked Diffusion Models

Guanghao Zheng, Yuchen Liu, Wenrui Dai, Chenglin Li, Junni Zou, Hongkai Xiong

School of Electronic Information and Electrical Engineering

Shanghai Jiao Tong University

Correspondence to Wenrui Dai <daiwenrui@sjtu.edu.cn>.

###### Abstract

Diffusion Transformer (DiT) is emerging as a cutting-edge trend in the landscape of generative diffusion models for image generation. Recently, masked-reconstruction strategies have been considered to improve the efficiency and semantic consistency in training DiT but suffer from deficiency in contextual information extraction. In this paper, we provide a new insight to reveal that noisy-to-noisy masked-reconstruction harms sufficient utilization of contextual information. We further demonstrate the insight with theoretical analysis and empirical study on the mutual information between unmasked and masked patches. Guided by such insight, we propose a novel training paradigm named **MC-DiT** for fully learning contextual information via diffusion denoising at different noise variances with clean-to-clean mask-reconstruction. Moreover, to avoid model collapse, we design two complementary branches of DiT decoders for enhancing the use of noisy patches and mitigating excessive reliance on clean patches in reconstruction. Extensive experimental results on 256\(\)256 and 512\(\)512 image generation on the ImageNet dataset demonstrate that the proposed MC-DiT achieves state-of-the-art performance in unconditional and conditional image generation with enhanced convergence speed.

## 1 Introduction

Diffusion Probabilistic Models (DPMs) [19; 29; 42; 43] have emerged as front-runners in the latest advancements of image-level generative models, and surpass previous state-of-the-art generative models [10; 14]. DPMs corrupt an input image into a noise obeying the normal distribution by gradually injecting Gaussian noise and recover the image from the noise with step-by-step denoising via a pretrained network [42; 43]. U-Net  is popular in early works [37; 35] to predict noise from disrupted images for image generation. Recently, Diffusion Transformer (DiT)  has been widely considered for DPMs [19; 29; 42; 43] in conditional image generation [4; 37], video generation [16; 22; 30], and 3D generation [15; 25; 36] due to its excellent scalability and superior performance.

Different from vision transformers (ViTs) , DiT is trained to predict Gaussian noise from disrupted images at different noise levels. To achieve large-scale training, DiT suffers from slow convergence and heavy computational burden in the training process . Moreover, due to its goal of noise prediction, DiT causes semantic inconsistency in generated images, since it struggles to learn contextual information in different regions of images for noise prediction . To solve these problems, mask-reconstruction is introduced into the denoising-based training schedule for DiT [13; 49; 48]. Inspired by masked autoencoder (MAE) , DiT is trained to predict masked noisy patches from the given unmasked noisy patches. MDT  pioneers to propose the asymmetrical diffusion transformer that integrates mask-reconstruction with denoising, which employs encoders to extract features from unmasked noisy patches and a lightweight decoder to reconstruct masked patches via extracted features. MaskDiT  accelerates the training process by masking at most 50%noisy image patches. SD-DiT  introduces self-supervised discriminative objective for knowledge distillation to reduce the fuzzy relation between the mask-reconstruction and denoising. Despite superior performance over vanilla DiT, they are deficient in exploiting contextual information by neglecting different noise scales in different steps of diffusion process.

In this paper, we revisit mask-reconstruction in training DiT and reveal that **reconstructing masked noisy patches from unmasked noisy patches harms contextual information extraction**. This issue is exaggerated under large noise variances, since both unmasked and masked noisy patches are similar to standard Gaussian noise and contain little contextual information. We demonstrate this phenomenon in Figure 1(a) by evaluating the mutual information between unmasked output patches and masked patches at different noise variances for different methods. With the growth of noise variance, mutual information in noisy image patches generated by MDT  and MaskDiT  decreases sharply, while mutual information in vanilla noisy images decreases slowly. This fact suggests that the information in masked patches rarely comes from unmasked patches, and thereby, the contextual information is not sufficiently exploited. We further demonstrate this empirical finding with theoretical analysis on mutual information and the mask graph , as elaborated in Propositions 2 and 3.

To address this problem, we propose MC-DiT to reconstruct clean unmasked patches from clean masked patches rather than resort to noisy patches. Benefiting from the merit that clean-to-clean reconstruction is not influenced by the noise, the proposed MC-DiT is able to learn contextual information via the diffusion denoising process at all noise scales. Furthermore, to avoid model collapse caused by over-emphasizing clean patches but neglecting noisy patches, we design two complementary branches to enforce the model focusing more on denoising. In summary, our contributions are listed as below.

* We provide a new insight that noisy-to-noisy mask-reconstruction is insufficient in extracting contextual information. We demonstrate the insight on mask-reconstruction with theoretical analysis and empirical study on mutual information between unmasked and masked patches.
* We propose MC-DiT, a novel training paradigm with new mask-reconstruction objective, to fully exploit contextual information with clean-to-clean reconstruction. We further design two complementary branches of DiT decoders to avoid model collapse and focus on denoising.
* We evaluate the proposed MC-DiT in 256\(\)256 and 512\(\)512 image generation on the ImageNet dataset and achieve state-of-the-art FID score for DiT backbones of various scales.

## 2 Related Work

**Diffusion Probabilistic Models.** Diffusion Probabilistic Models (DPMs) [19; 42; 43] have attracted increasing attention due to their superior image generation ability compared with preceding generative models [14; 47]. Denoising diffusion probabilistic model (DDPM)  significantly advances generative models, particularly in tasks such as text-guided image synthesis. In specific, DDPM is realized as a Markov chain  that contains forward process and reverse process. In the forward process, clean images are disrupted by Gaussian noise step by step, and in the reverse process, the images are generated from the Gaussian noise with step-by-step denoising. The commonly used U-Net model  is trained to predict the Gaussian noise from noisy images. Score matching method  is introduced into diffusion models to design the forward and reverse process with elegant Stochastic Differential Equation (SDE) . EDM  analyzes the design space of diffusion models and disentangles the effects of parametrization, sampling, and training. To address the time-consuming iterative issue inherent in DPMs, several methods apply fast sampling strategy [27; 28] or latent diffusion training strategy .

**Transformers in Diffusion Models.** In DPMs, the most commonly used architecture for noise prediction is U-Net , which is a symmetric encoder-decoder framework. Recently, transformers provide a new perspective to noise prediction due to their excellent multi-modality fusion ability and remarkable scaling properties. U-ViT  integrates time embedding, image patches, and conditional patches into overall tokens and applies residual connection into transformers for consistency in generation. DiT  claims that transformers applied in DPMs realize superior performance and achieve the scaling law. Therefore, various works adopt and improve DiT into 2D image generation [34; 35], video generation [30; 16; 22], and 3D generation [15; 25; 36]. In this paper, we take the DiT as our backbone and change the input from noisy patches to clean patches.

Masked Training with Transformers.Mask-reconstruction has been broadly applied into convolutional networks and transformers . MAE  takes the mask-reconstruction to pretrain transformers and achieves stunning contextual modeling capabilities and zero-shot performance. Inspired by this method, various strategies for masked training have been introduced into transformers. For example, ConvMAE  leverages masked convolution to prevent information leakage. FreMiM  converts images into frequency domain and applies masked training for frequency information reconstruction. MultiMAE  utilizes masked training into multi-modality inputs for cross-modal fusion and generation. SdAE  improves masked autoencoder via self distillation. In summary, the mask-reconstruction training objective transfers the information from unmasked patches to masked patches, and thereby, enhances contextual semantic modeling ability.

## 3 Proposed Method

### Preliminaries

Masked AutoEncoders .Masked AutoEncoder (MAE) is a significant unsupervised pretraining paradigm in computer vision, which reconstructs masked patches from unmasked patches. Given an image \(x\), MAE first patchifies it into \(N\) patches denoted by \( R^{N c}\), where \(c\) is the channel dimension. A random binary mask \(m\{0,1\}^{N}\) is applied to obtain masked patches \(x_{1}=x[1-m] R^{N_{1} c}\) and unmasked patches \(x_{2}=x[m] R^{N_{2} c}\), \(N_{1}\) and \(N_{2}\) are the number of masked and unmasked patches. An encoder-decoder framework \(h=g f\) is then applied. The encoder \(f\) maps the unmasked patches \(x_{1}\) into latent space \(z_{1}=f(x_{1})\), while the decoder reconstructs the pixel value of masked patches \(x^{}_{2}=g(z_{1})\). The MAE is trained to ensure the reconstruction ability by minimizing the Mean Square Error (MSE) loss \(_{MAE}=_{x}_{x_{1},x_{2}|x}\|g(f(x_{1}))-x_{2} \|^{2}\). U-MAE  provides a theoretical understanding of MAE and establishes connection between MAE and contrastive learning [33; 17; 7].

**Proposition 1** (): _The lower bound of the MAE loss is_

\[_{}-_{x_{1},x_{2}}h(x_{1})^{T}h_{g}(x_{ 2})-+=_{}-+ ,\] (1)

where \(_{}\) denotes the asymmetric alignment loss in , \(\) is the fitting error, and \(h_{g}=g f_{g}\) is the pseudo autoencoder that satisfies \(_{x}\|h_{g}(x_{2})-x_{2}\|^{2}\).

U-MAE  combines Proposition 1 with the mask graph in Figure 1(b) (upper) to represent the contrastive objective in MAE. Specifically, Proposition 1 demonstrates that the MAE loss is equal

Figure 1: (a) Mutual information of different methods between generated masked patches and unmasked patches. We generate masked noisy patches from unmasked noisy patches and calculate mutual information \(I(X^{unmasked};X^{masked})\) under various noise scales. The ‘vanilla clean images’ and ‘vanilla noisy images’ denote the real clean/noisy images, which are the upper bound of the mutual information. The other lines are computed with the generated images by three strategies. (b) Mask graph  in different reconstruction targets. The left yellow ellipse denotes unmasked patches and the right green one denotes masked patches. The black arrow denotes the positive pairs to pull in.

to the contrastive loss \(_{}}\), which calculates the similarity of \(h(x_{1})\) and \(h_{g}(x_{2})\). If \(x_{1}\) and \(x_{2}\) are neighboring patches, \(_{}}\) is minimized when positive pairs (_i.e._, \(x_{1}\) and \(x_{2}\)) are pulled closer. Proposition 1 is consistent with the mask graph in Figure 1 (b), where unmasked and masked patches are considered as contrastive pairs. Thus, we employ mask graph as an effective tool to analyze the contrastive objective of MAE.

**Diffusion Probabilistic Models [19; 42; 43].** Diffusion Probabilistic Models (DPMs) emulate the diffusion process of physical atoms to convert the standard Gaussian distribution into the target distribution via differential equations. In the forward process, clean data \(x_{0} P_{data}(x_{0})\) is corrupted into Gaussian noise \(x_{T}(0,_{max}^{2}I)\) step by step via stochastic differential equation (SDE):

\[x=f(x_{t},t)t+g(t)w,\] (2)

where \(f\) is the drift coefficient, \(g\) is the diffusion coefficient, \(w\) is a standard Wiener process, and \(t\) is the time value from \(0\) to \(T\). The reverse process generates target samples using the inverse SDE:

\[x=[f(x,t)-g(t)^{2}_{x} p_{t}(x)]t+g(t),\] (3)

where \(\) is a reverse-time Wiener process. Following EDM  to set \(f(x,t)=0\) and \(g(t)=t\), the forward and reverse SDEs are reformulated as \(x=tw\) and \(x=-t_{x} p_{t}(x)t\), where \(s(x,t)=_{x} p_{t}(x)\) is the score function. To solve the reverse-time SDE, a denoising network \(D_{}(x,t)\) is trained to minimize the score matching loss:

\[_{x_{0} p_{data}(x_{0})}_{n(0,t^{2}I) }\|D_{}(x_{0}+n,t)-x_{0}\|^{2}.\] (4)

As a result, the score function is estimated by \(s(x,t)=(D_{}(x,t)-x)/t^{2}\). During training, at step \(t\), noisy images \(x_{0}+n\) are sent to the denoising network \(D_{}(x,t)\) to predict the clean images \(x_{0}\). However, directly optimizing this objective leads to poor contextual information . To solve this problem, the mask-reconstruction is applied into denoising network [13; 48; 49].

### Contextual Information in Noisy Patches Reconstruction

We first review the mask-reconstruction between noisy patches and point out that applying noisy patches reconstruction task into the training process of DiT is ineffective and leads to insufficient contextual information utilization. With the mutual information and mask graph, we propose two propositions to demonstrate this claim, where the first is for the mutual information of input-output patches and the second is for the contrastive objective of input unmasked-masked patches.

**Mutual information between input and output patches.** Besides the mutual information between masked and unmasked output patches in Figure 1(a), we consider the mutual information between input noisy patches and output (noisy and clean) patches. MaskDiT  and MDT  reconstruct masked noisy output patches from input unmasked noisy input patches, whereas SD-DiT  recovers unmasked clean output patches from masked noisy input patches, as elaborated below.

* **MaskDiT & MDT.** Noisy patches \(x_{t}\) at step \(t\) are obtained by injecting noise \(n(0,t^{2}I)\) into clean patches \(x_{0}\). Masked and unmasked noisy patches are generated from \(x_{t}\) by \(x_{t}^{1}=x_{t}[m]\) and \(x_{t}^{2}=x_{t}[1-m]\) using a random binary mask \(m\). \(x_{t}^{2}\) is reconstructed from \(x_{t}^{1}\) by minimizing the MAE loss \(_{}=_{x_{t}}_{x_{t}^{1},x_{t}^{2 }\|x_{t}}\|g(f(x_{t}^{1}))-x_{t}^{2}\|^{2}\) for the encoder \(f\) and decoder \(g\). The ability to exploit contextual information is measured by mutual information \((x_{t}^{1};x_{t}^{2})\).
* **SD-DiT.** SD-DiT extracts latent features of \(x_{t}^{1}\) and concatenates them with masked noisy patches \(x_{t}^{2}\) to predict clean patches \(x_{0}^{1}\). The MAE loss \(_{}=_{x_{t}}_{x_{t}^{1},x_{t}^{2 }\|x_{t}}\|g(f(x_{t}^{1}),x_{t}^{2})-x_{0}^{1}\|^{2}\). The ability to exploit contextual information is measured by mutual information \((x_{0}^{1};x_{t}^{2})\).

The contextual information in both two formulations is transferred from the noisy patches to noisy patches. 2 Subsequently, we analyze the contextual information utilization ability of mask-reconstruction via calculating mutual information of masked and unmasked patches.

**Proposition 2**: _Given masked and unmasked clean patches \(x_{0}^{1}\) and \(x_{0}^{2}\) and their noisy versions \(x_{t}^{1}\) and \(x_{t}^{2}\), the mutual information \((x_{t}^{1},x_{t}^{2})\), \((x_{0}^{1};x_{t}^{2})\), and \((x_{0}^{1};x_{0}^{2})\) satisfy that_

\[(x_{0}^{1};x_{t}^{2}) (x_{0}^{1};x_{0}^{2})-_{p(x_{0}^{2})} _{p(x_{t}^{2}|x_{0}^{2})}[KL(p(x_{0}^{1}|x_{0}^{2})\|p(x_{0}^{1} |x_{t}^{2}))],\] (5) \[(x_{t}^{1};x_{t}^{2}) (x_{0}^{1};x_{0}^{2})-_{p(x_{0}^{2})} _{p(x_{t}^{2}|x_{0}^{2})}[KL(p(x_{0}^{1}|x_{0}^{2})\|p(x_{0}^{1} |x_{t}^{2}))]\] \[-_{p(x_{0}^{1})}_{p(x_{t}^{ 1}|x_{0}^{1})}[KL(p(x_{t}^{2}|x_{0}^{1})\|p(x_{t}^{2}|x_{t}^{1}))].\] (6)

Proposition 2 suggests that the mutual information \((x_{0}^{1};x_{t}^{2})\) and \((x_{t}^{1};x_{t}^{2})\) are lower than the ideal mutual information \((x_{0}^{1};x_{0}^{2})\). With the growth of \(t\), the KL divergence terms in (5) and (6) increase due to larger noise perturbation on \(x_{0}^{1}\) and \(x_{0}^{2}\). Thus, the gap between \((x_{0}^{1};x_{t}^{2})\), \((x_{t}^{1};x_{t}^{2})\) and \((x_{0}^{1};x_{0}^{2})\) becomes larger and the ability to extract contextual information is degraded.

**Mask graph.** We further analyze the mask-reconstruction via contrastive objectives in mask graphs. In U-MAE , the mask-reconstruction can be transformed into a constrastive learning objective and there exists a bipartite mask graph to elaborate this transformation . The mask graph is consistent with \(_{asym}\) in Proposition 1. Note that MaskDiT, SD-DiT, and MDT share the same mask graph, since their inputs are all unmasked noisy patches and noisy masked patches. Figure 1(b) illustrates the mask graph for clean image reconstruction in MAE (top) and that for noisy patch reconstruction in MaskDiT, SD-DiT, and MDT (bottom). In Proposition 3, we prove that contrastive objective between noisy patches could interfere learning contextual information.

**Proposition 3**: _The asymmetric loss of noisy patch reconstruction and the asymmetric loss of clean patch reconstruction satisfy that_

\[_{asym-NN} =-_{p(x_{t}^{1},x_{t}^{2})}[h(x_{t}^{1})^{T}h_{g}( x_{t}^{2})]\] \[_{asym}+\{-h(x_{t}^{1})^{T} [}{ x_{0}^{2}}]^{T}n\}+\{-h_{g}(x_{0}^{2})^{T}[^{1}} ]^{T}n\},\] (7)

_where \(_{asym}\) is defined in (1) and represents contextual information. The two noise-weighted items represent contrastive objective between \(h(x_{t}^{1})\) and \([ h_{g}/ x_{0}^{2})\) (\(h_{g}(x_{0}^{2})\) and \([ h/ x_{0}^{1}]\)) weighted by the Gaussian noise \(n\)._

Proposition 3 implies that the Gaussian noise introduces two extra terms in (7) and could affect the optimization process of \(_{asym}\). Noisy patch reconstruction undermines the contrastive objective of contextual information, since larger Gaussian noise leads to more severe perturbation on \(_{asym}\).

In summary, we leverage mutual information and contrastive asymmetric loss to demonstrate that the noisy patches mask-reconstruction is sub-optimal to learn real contextual information and larger noise could have more serious impact on context information extraction. This is consistent with the results in Figure 1(a). To solve this problem, in Section 3.3, we propose MC-DiT to effectively reconstruct masked clean patches from unmasked clean patches.

### Contextual Enhancement with Masked Clean Patches

As demonstrated in Propositions 2 and 3 that **reconstructing masked noisy patches from unmasked noisy patches is insufficient for contextual information extraction**, we propose a novel method named MC-DiT to enhance contextual information extraction for DiT from the perspective of leveraging masked clean patches to reconstruct unmasked clean patches. Figure 2(a) depicts the proposed framework for MC-DiT. The clean images are disrupted by Gaussian noise \(n(0,t^{2}I)\), where \(t\) is the time step. Then the noisy images are patchedified and masked by a random binary mask \(m\). The unmasked noisy patches \(x_{t}^{1}\) are fed into the DiT encoder for feature extraction. For contextual information extraction, the masked clean patches \(x_{0}^{2}\) are concatenated with extracted feature \(z=concat(z_{1},x_{0}^{2})\), where \(z_{1}\) is the feature of \(x_{t}^{1}\). After that, the feature \(z\) is sent to DiT decoder to reconstruct clean unmasked patches \(x_{0}^{1}\), which is consistent with previous masked diffusion (,). The training objective of unmasked clean patch reconstruction is:

\[_{clean}=_{x_{0} p_{data}}_{n(0,t^{2}I)}\|(D_{}((x_{0}+n)(1-m),x_{0} m,t)-x_{0})(1-m )\|^{2}.\] (8)

By applying masked clean patches \(x_{0}^{2}\) in (8), the information in \(x_{0}^{2}\) is transferred to unmasked clean output patches \(^{1}\), which is constrained to equal \(x_{0}^{1}\). It is not disrupted by noise \(n\), since there is nonoise in \(x_{0}^{2}\) and \(x_{0}^{1}\). Moreover, as mentioned in Section 3.2, the mutual information for our MC-DiT is \((x_{0}^{1};x_{0}^{2})\), since we leverage masked clean patches to recover unmasked clean patches. According to Proposition 2, \((x_{0}^{1};x_{0}^{2})\) is much higher than \((x_{0}^{1};x_{t}^{2})\) and \((x_{t}^{1};x_{t}^{2})\) under different noise \(n\) and time steps \(t\). Thus, the mutual information learned by our MC-DiT would not decrease for different noise at different time steps and sufficient contextual information could be learned for reconstruction.

In addition, we explore the potential benefits of \(x_{0}^{2}\) by enforcing the masked output patches \(^{2}\) to match \(x_{t}^{2}\). As discussed in Section 3.1, the denoising network \(D_{}\) predicts clean images from noisy images and can be viewed as distinguishing the clean images and noise. Therefore, predicting \(x_{t}^{2}\) from \(x_{0}^{2}\) is to recognize the noise \(n\) and add to \(x_{0}^{2}\). To this end, we employ reversed constraint on masked output patches \(^{2}\), as illustrated in Figure 2(a). The training objective is

\[_{noise}=_{x_{0} p_{data}}_{n (0,t^{2}I)}\|(D_{}((x_{0}+n)(1-m),x_{0} m,t)-(x_{0 }+n)) m\|^{2}.\] (9)

### Addressing Model Collapse

Although MC-DiT can learn sufficient contextual information in theory, there exists model collapse problem in practice. The model learns a shortcut way that it only leverages masked clean patches to reconstruct unmasked clean patches and neglect the unmasked noisy patches. We further address the model collapse problem caused by only using masked clean patches to reconstruct unmasked clean patches for training. We introduce two extra EMA (Exponential Moving Average) branches of DiT decoders3 to balance the mask-reconstruction and denoising objective. As shown in Figure 2(a), given the noisy input to DiT encoder, we introduce two branches to achieve only mask-reconstruction and denoising alongside the original DiT decoder. The upper branch of DiT decoder \(D_{}\) reconstructs from the whole noisy patches and captures denoising information, while the bottom branch processes clean patches and captures contextual information \(D_{}\). Constraints on the two branches are employed in the loss function to balance the DiT decoder.

\[_{con1} =\!_{x_{0} p_{data}}_{n(0,t^{2}I)}\!\|(D_{}((x_{0}+n)(1-m),x_{0} m,t)\!-\!D_{}(x_{ 0}+n))(1\!-\!m)\|^{2},\] (10) \[_{con2} =\!_{x_{0} p_{data}}_{n(0,t^{2}I)}\!\|(D_{}((x_{0}+n)(1\!-\!m),x_{0} m,t)\!-\!D_{ }(x_{0}))(1\!-\!m)\|^{2}.\] (11)

Figure 2: Framework of the proposed MC-DiT. (a) Pre-training. MC-DiT introduces unmasked clean patches and learns sufficient contextual information by reconstructing unmasked clean patches from masked clean patches. Two complementary EMA branches are developed to avoid model collapse. (b) Finetuning. MC-DiT is trained with unmasked patches for denoising.

Here, \(D_{}\) and \(D_{}\) are two EMA DiT decoders. Therefore, the overall loss is:

\[=_{clean}+_{1}_{noise}+_{2} _{con1}+_{3}_{con2},\] (12)

where \(_{1}\), \(_{2}\) and \(_{3}\) are hyper-parameters.

**Unmasking Finetuning.** Similar to MaskDiT , although our MC-DiT captures contextual information during masking training, directly applying the pretrained model in inference leads to unsatisfactory performance, which is caused by the training-inference discrepancy. The clean patches used in training are not provided in the inference time. Thus, after training our MC-DiT, we finetune it on the unmasked scenarios for better performance, as shown in Figure 2 (b). It is worth noting that MC-DiT only needs a few iteration in the finetuning to generated semantic coherence images.

## 4 Experiments

### Implementation Details

**Model Settings.** We follow the same architecture in MaskDiT . Specifically, we first apply a pretrained variational autoencoder (VAE) from Stable Diffuion  to map the images into latent space, and then train our MC-DiT to reconstruct clean patches from noisy patches under the EDM  framework to approximate score function in the diffusion process. The pretrained VAE maps 256\(\)256\(\)3 input images to 32\(\)32\(\)4 latent features and 512\(\)512\(\)3 images to 64\(\)64\(\)4 latent features. Similar to SD-DiT, we apply DiT-S, DiT-B, and DiT-XL as our backbones.

**Training Details.** Similar to previous works [13; 48; 49], we train MC-DiT on ImageNet  with resolutions 256\(\)256\(\)3 and 512\(\)512\(\)3, respectively. Most training settings are the same as MaskDiT . We train MC-DiT for 400K to 1M iterations using the AdamW optimizer with learning rate 0.0001 and no weight decay. By default, we use 50% mask ratio and batch size 1024. \(_{1}\) and \(_{2}\) in (12) are set to 0.1 and 0.05 for more denoising reconstruction. The EMA coefficient is set to 0.999 for smoothness and no data augmentation is employed.

**Evaluation Metrics.** Following DiT , we leverage Frechet Inception Distance (FID) to measure the quality of generated images. For fair comparison, we also use ADM's Tensorflow evaluation

  Methods & FID \(\) & sFID \(\) & IS \(\) & Prec. \(\) & Rec. \(\) \\  BiGAN-deep  & 6.95 & 7.36 & 171.40 & 0.87 & 0.28 \\ StyleGAN-XL  & 2.30 & 4.02 & 265.12 & 0.78 & 0.53 \\ MaskGIT  & 6.18 & - & 182.10 & 0.80 & 0.51 \\  CDM  & 4.88 & - & 158.71 & - & - \\  ADM  & 10.94 & 6.02 & 100.98 & 0.69 & 0.63 \\ ADM-U  & 7.49 & **5.13** & 127.49 & 0.72 & 0.63 \\ LDM-8  & 15.51 & - & 79.03 & 0.65 & 0.63 \\ LDM-4  & 10.56 & - & 209.52 & **0.84** & 0.35 \\ U-ViT-H/2  & 6.58 & - & - & - & - \\ DiT-XL / 2  & 9.62 & 6.85 & 121.50 & 0.67 & **0.67** \\ MDT-XL / 2  & 6.23 & 5.23 & 143.02 & 0.71 & 0.65 \\ MaskDiT-XL / 2  & 5.69 & 10.34 & 177.99 & 0.74 & 0.60 \\ SD-DiT-XL /2  & 7.21 & 5.17 & 144.68 & 0.72 & 0.61 \\  MC-DiT-XL /2 & **4.14** & 6.96 & **309.69** & 0.83 & 0.62 \\  ADM-G  & 4.59 & 5.25 & 186.70 & 0.82 & 0.52 \\ ADM-U-G  & 3.94 & 6.14 & 215.84 & 0.83 & 0.53 \\ LDM-8-G & 7.76 & - & 103.49 & 0.71 & 0.62 \\ LDM-4-G  & 3.60 & - & 247.67 & **0.87** & 0.48 \\ U-ViT-H/2-G & 2.29 & 5.68 & 263.88 & 0.82 & 0.57 \\ DiT-XL / 2-G  & 2.27 & 4.60 & 278.24 & 0.83 & 0.57 \\ MDT-XL / 2-G  & 1.79 & **4.57** & 283.01 & 0.81 & 0.61 \\ MaskDiT-XL / 2-G  & 2.28 & 5.67 & 276.56 & 0.80 & 0.61 \\ MC-DiT-XL /2-G & **1.78** & 4.87 & **290.17** & 0.81 & **0.62** \\  

Table 1: Comparison with state-of-the-art approaches for ImageNet-256\(\)256 class conditional image generation. Bold font represents the best result. ‘-G’ means using classifier-free guidance.

suite  to compute FID-50K (FID for short), sFID , Inception Score (IS)  and Precision/Recall  as secondary metrics. More vivid images have lower FID and sFID, while their IS and Precision/Recall are higher.

### Experimental Results

We evaluate vanilla training (_i.e._, LDM , ADM , and DiT ) and masked training (_i.e._, proposed MC-Dit, MaskDiT, MDT , and SD-DiT ) using backbones of different scales for 256\(\)256 and 512\(\)512 image generation on ImageNet.

**Results on ImageNet-256\(\)256.** Table 1 shows that our MC-DiT-XL / 2 achieves the smallest FID score and the highest IS score. Compared with non-masked diffusion models, MC-DiT-XL / 2 decrease the FID score from 9.62 to 4.14. Compared with masked diffusion models, the FID score decreases from 5.69 to 4.14. With classifier-free guidance (-G), our MC-DiT-XL / 2-G achieves the best FID score of 1.78, and the highest IS score, which significantly outperforms previous works.

**Results on ImageNet-512\(\)512.** Table 2 shows that MC-DiT-XL / 2 achieves a FID of 9.30 and outperforms MaskDiT  and DiT . The IS score of MC-DiT is also the highest, indicating the effectiveness of our method. With classifier-free guidance (-G), our MC-DiT-XL / 2-G achieves the best FID score of 2.03, indicating the effectiveness of MC-DiT.

**Contextual Enhancement.** Figure 1 (a) reports the mutual information between unmasked and masked output patches with different noise, which can be viewed as the metric of contextual information consistency. Our MC-DiT decreases slowly during the noise variance becomes larger, which indicates more sufficient contextual reconstr

  Methods & FID \(\) & sFID \(\) & IS \(\) & Prec. \(\) & Rec. \(\) \\  BiGAN-deep  & 8.43 & 8.13 & 177.90 & 0.88 & 0.29 \\ StyleGAN-XL  & 2.41 & 4.06 & 267.75 & 0.77 & 0.52 \\  ADM  & 23.24 & 10.19 & 58.06 & 0.73 & 0.60 \\ ADM-U  & 9.96 & **5.62** & 121.78 & 0.75 & **0.64** \\ DiT-XL / 2  & 12.03 & 7.12 & 105.25 & 0.75 & **0.64** \\ MaskDiT-XL / 2  & 10.79 & 13.41 & 145.08 & 0.74 & 0.56 \\ MC-DiT-XL/2 & **9.30** & 6.28 & **179.58** & **0.76** & 0.53 \\  ADM-G & 7.72 & 6.57 & 172.71 & **0.87** & 0.42 \\ ADM-U-G & 3.85 & 5.86 & 221.72 & 0.84 & 0.53 \\ DiT-XL / 2-G  & 3.04 & 5.02 & 240.82 & 0.84 & 0.54 \\ MaskDiT-XL / 2-G  & 2.50 & 5.10 & 256.27 & 0.83 & 0.56 \\ MC-DiT-XL/2-G & **2.03** & **4.87** & **272.19** & 0.84 & **0.56** \\  

Table 2: Comparison with state-of-the-art approaches for ImageNet-512\(\)512 class conditional image generation. The bold font represents the best performance.

  Methods & Training Iterations & FID-50K \(\) \\  DiT-S / 2  & 400K & 68.40 \\ MDT-S / 2  & 400K & 53.46 \\ SD-DiT-S / 2  & 400K & 48.39 \\ MC-DiT-S/2 & 400K & 41.67 \\  DiT-B / 2  & 400K & 43.47 \\ MDT-B / 2  & 400K & 34.33 \\ SD-DiT-B / 2  & 400K & 28.62 \\ MC-DiT-B/2 & 400K & 18.88 \\  DiT-XL / 2  & 7000K & 9.62 \\ MaskDiT-XL / 2  & 1300K & 12.15 \\ MDT-XL / 2  & 1300K & 9.60 \\ SD-DiT-XL / 2  & 1300K & 9.01 \\ MC-DiT-XL/2 & 1300K & 7.92 \\  

Table 3: Comparison with state-of-the-art approaches ImageNet-256\(\)256 class conditional image generation at different scales and iterations. ’-S’, ’-B’, ’-XL’ means ’small’, ’base’ and largest model size, respectively and ’2’ denotes the patch size of 2 for all input patches.

**Backbones at different scales.** Table 3 evaluates FID-50K at different scales and training iterations with various backbones. Notice that MaskDiT only reports the performance of 'XL' scale. Under fixed number of training iterations, MC-DiT outperforms vanilla DiT , MDT , and SD-DiT  in FID by a large margin, _i.e._, 6.72, 9.74, and 1.09 FID reduction for DiT-S, DiT-B, and DiT-XL backbones. This fair comparison fully demonstrates the effectiveness of our method.

**Convergence speed.** In order to evaluate the convergence speed of various methods, we compare the training loss curve in Figure 3(a). We report the MSE loss (Eq. (8)) on clean patches for fairness. We train MaskDiT  and DiT  for 300K iterations due to the substantial time and GPU resource overhead and use the training curve of our MC-DiT trained for evaluations, which is trained for 400K iterations. The training loss of MC-DiT decreases faster than DiT  and MaskDiT . Figure 3(b) measures FID-50K at each step after unmasked tuning and shows that MC-DiT achieves the lowest FID-50K score.

**Generated image comparison.** Figure 4 visualizes the \(256 256\) images generated by MDT , MaskDiT and our MC-DiT. Our generated images are more realistic and have more consistent textual structure than MaskDiT and MDT. For example, images of 'hammer' generated by MaskDiT and MDT have incomplete structure, while our MC-DiT generates images with more complete structures, validating the superior contextual information extraction ability of our MC-DiT.

### Ablation Studies

For computation efficiency, we adopt '-B' in all the models for fair comparison. All the models are trained for 400K iterations with batch size 256 and mask ratio \(50\%\).

Figure 4: Comparison of \(256 256\) images generated by MDT, MaskDiT and MC-DiT. Various details are strange in images generated by MDT and MaskDiT.

Figure 3: Training loss and FID for DiT-B/2, MaskDit-B/2, and MC-DiT-B/2 during training.

**Main branch target.** We evaluate the reconstruction targets of main branch by considering three cases, _i.e._, clean patch reconstruction + noisy patch reconstruction, all clean patch reconstruction and only clean patch reconstruction. 'All clean patches' means all the patches are constrained by clean reconstruction loss. 'Only clean patches' means only unmasked patches are constrained by clean reconstruction loss, and 'Clean patches + Noisy patches' means masked patches are further constrained by noisy reconstruction loss. Table 6 shows that our model performs the best, which validates the effectiveness of noisy reconstruction loss.

**Effectiveness of two extra EMA branches.** Table 5 evaluates the influence of two EMA branches. FID decreases obviously by 2.84 using the noise branch, indicating the necessity of noisy branch to address model collapse. Further experiments can be found in appendix.

**Unmasked tuning.** Unmasked tuning (UT) can reduce the training-inference discrepancy, as demonstrated by MaskDiT and is adopted in our MC-DiT. However, we can remove unmasked tuning to reduce the complexity at little loss on FID. Table 7 shows that FID will increase by only 0.41 for MC-DiT by removing unmasked tuning.

**Hyperparameters.** We separately evaluate four values for \(_{1}\), \(_{2}\), and \(_{3}\). Table 4 shows best FID is obtained when \(_{1}=0.1\), \(_{2}=0.1\), and \(_{3}=0.05\). Note that \(_{2}\) is larger than \(_{3}\) since the denoising objective is more important than contextual information utilization.

**Mask ratio.** Figure 5 visualizes the influence of the mask ratio in \(m\). FID is smallest at the mask ratio of 50% and increases rapidly when the mask ratio is larger than 50%.

## 5 Conclusion

In this paper, we summarize the previous works that combine mask-reconstruction with DiT training and claim that reconstructing masked noisy patches from unmasked noisy patches is insufficient for contextual information extraction. To validate this claim, we analyze the mutual information and contrastive objective theoretically and experimentally. Besides, we propose a new pretraining paradigm (dubbed MD-DiT), which reconstructs unmasked clean patches from masked clean patches and guarantees the contextual information extraction. Moreover, to avoid model collapse, two extra EMA branches are applied in MC-DiT to adjust the balance between the mask-reconstruction task and denoising objective. Extensive experiments demonstrate the robustness of our method and our MC-DiT achieves the state-of-the-art performance in image generation.

**Limitations.** Despite excellent performance, the training speed and inference speed of MC-DiT still needs to be improved. We will mitigate this issue in future work by transferring the information in the encoder into the decoder, which decreases the training difficulty.

**Acknowledgment.** This work was supported in part by the National Natural Science Foundation of China under Grant 62125109, Grant T2122024, Grant 62320106003, Grant 62371288, Grant 62431017, Grant 62401357, Grant 62401366, Grant 61931023, Grant 61932022, Grant 62120106007.

  \(_{1}\) & FID & \(_{2}\) & FID & \(_{3}\) & FID \\ 
0 & 43.23 & 0.0 & 38.83 & 0.0 & 37.77 \\
0.01 & 40.99 & 0.01 & 36.15 & 0.05 & 35.20 \\
0.1 & 35.20 & 0.1 & 35.20 & 0.1 & 35.46 \\
1.0 & 38.97 & 1.0 & 37.54 & 1.0 & 36.35 \\  

Table 4: Ablation study of hyperparameters.

  Branches & FID \\  Main Branch & 22.10 \\ w Noisy Branch & 19.26 \\ w Clean Branch & 18.88 \\  

Table 5: Ablation study of the EMA branches.

  Branches & FID \\  Main Branch & 22.10 \\ w Noisy Branch & 19.26 \\ w Clean Branch & 18.88 \\  

Table 7: Ablation study of unmasking tuning.

Figure 5: Ablation study of mask ratio.

  \(_{1}\) & FID & \(_{2}\) & FID \\ 
0 & 43.23 & 0.0 & 38.83 & 0.0 & 37.77 \\
0.01 & 40.99 & 0.01 & 36.15 & 0.05 & 35.20 \\
0.1 & 35.20 & 0.1 & 35.20 & 0.1 & 35.46 \\
1.0 & 38.97 & 1.0 & 37.54 & 1.0 & 36.35 \\  

Table 6: Comparison with different targets.

[MISSING_PAGE_FAIL:11]

*  Jonathan Ho, Chitwan Saharia, William Chan, David J Fleet, Mohammad Norouzi, and Tim Salimans. Cascaded diffusion models for high fidelity image generation. _Journal of Machine Learning Research_, 23(47):1-33, 2022.
*  Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. In _Advances in Neural Information Processing Systems 35_, pages 26565-26577, 2022.
*  Dan Kondratyuk, Lijun Yu, Xiuye Gu, Jose Lezama, Jonathan Huang, Grant Schindler, Rachel Hornung, Vighnesh Birodkar, Jimmy Yan, Ming-Chang Chiu, Krishna Somandepalli, Hassan Akbari, Yair Alon, Yong Cheng, Joshua V. Dillon, Agrim Gupta, Meera Hahn, Anja Hauth, David Hendon, Alonso Martinez, David Minnen, Mikhail Sirotenko, Kihyuk Sohn, Xuan Yang, Hartwig Adam, Ming-Hsuan Yang, Irfan Essa, Huisheng Wang, David A Ross, Bryan Seybold, and Lu Jiang. VideoPoot: A large language model for zero-shot video generation. In _Proceedings of the 41st International Conference on Machine Learning_, pages 25105-25124. PMLR, 2024.
*  Alex Krizhevsky. Learning multiple layers of features from tiny images. Technical report, University of Toronto, 2009.
*  Tuomas Kynkaanniemi, Tero Karras, Samuli Laine, Jaakko Lehtinen, and Timo Aila. Improved precision and recall metric for assessing generative models. In _Advances in Neural Information Processing Systems 32_, pages 3927-3936, 2019.
*  Chen-Hsuan Lin, Jun Gao, Luming Tang, Towaki Takikawa, Xiaohui Zeng, Xun Huang, Karsten Kreis, Sanja Fidler, Ming-Yu Liu, and Tsung-Yi Lin. Magic3D: High-resolution text-to-3D content creation. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 300-309. IEEE, 2023.
*  Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep learning face attributes in the wild. In _Proceedings of the IEEE International Conference on Computer Vision_, pages 3730-3738. IEEE, 2015.
*  Cheng Lu, Yuhao Zhou, Fan Bao, Jianfei Chen, Chongxuan Li, and Jun Zhu. DPM-Solver: A fast ODE solver for diffusion probabilistic model sampling in around 10 steps. In _Advances in Neural Information Processing Systems 35_, pages 5775-5787, 2022.
*  Cheng Lu, Yuhao Zhou, Fan Bao, Jianfei Chen, Chongxuan Li, and Jun Zhu. DPM-Solver++: Fast solver for guided sampling of diffusion probabilistic models. _arXiv preprint arXiv:2211.01095_, 2022.
*  Jianjie Luo, Yehao Li, Yingwei Pan, Ting Yao, Jianlin Feng, Hongyang Chao, and Tao Mei. Semantic-conditional diffusion networks for image captioning. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 23359-23368. IEEE, 2023.
*  Xin Ma, Yaohui Wang, Gengyun Jia, Xinyuan Chen, Ziwei Liu, Yuan-Fang Li, Cunjian Chen, and Yu Qiao. Latte: Latent diffusion transformer for video generation. _arXiv preprint arXiv:2401.03048_, 2024.
*  Charlie Nash, Jacob Menick, Sander Dieleman, and Peter W Battaglia. Generating images with sparse representations. In _Proceedings of the 38th International Conference on Machine Learning_, pages 7958-7968. PMLR, 2021.
*  James R Norris. _Markov Chains_. Cambridge University Press, 1998.
*  Aaron van den Oord, Yazhe Li, and Oriol Vinyals. Representation learning with contrastive predictive coding. _arXiv preprint arXiv:1807.03748_, 2018.
*  William Peebles and Saining Xie. Scalable diffusion models with transformers. In _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pages 4195-4205. IEEE, 2023.
*  Dustin Podell, Zion English, Kyle Lacey, Andreas Blattmann, Tim Dockhorn, Jonas Muller, Joe Penna, and Robin Rombach. SDXL: Improving latent diffusion models for high-resolution image synthesis. In _The Twelfth International Conference on Learning Representations_, 2024.
*  Ben Poole, Ajay Jain, Jonathan T Barron, and Ben Mildenhall. DreamFusion: Text-to-3D using 2D diffusion. In _The Eleventh International Conference on Learning Representations_, 2023.
*  Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bjorn Ommer. High-resolution image synthesis with latent diffusion models. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 10684-10695. IEEE, 2022.
*  Olaf Ronneberger, Philipp Fischer, and Thomas Brox. U-Net: Convolutional networks for biomedical image segmentation. In _18th International Conference on Medical Image Computing and Computer-Assisted Intervention-MICCAI 2015_, pages 234-241. Springer, 2015.

*  Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, Sanjeev Satheesh, Sean Ma, Zhiheng Huang, Andrej Karpathy, Aditya Khosla, Michael Bernstein, Alexander C. Berg, and Li Fei-Fei. ImageNet large scale visual recognition challenge. _International Journal of Computer Vision_, 115:211-252, 2015.
*  Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen. Improved techniques for training GANs. In _Advances in Neural Information Processing Systems 29_, pages 2234-2242, 2016.
*  Axel Sauer, Katja Schwarz, and Andreas Geiger. StyleGAN-XL: Scaling StyleGAN to large diverse datasets. In _ACM SIGGRAPH 2022 Conference Proceedings_, pages 1-10. ACM, 2022.
*  Yang Song and Stefano Ermon. Improved techniques for training score-based generative models. In _Advances in Neural Information Processing Systems 33_, pages 12438-12448, 2020.
*  Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In _The Ninth International Conference on Learning Representations_, 2021.
*  Nicolaas G Van Kampen. Stochastic differential equations. _Physics Reports_, 24(3):171-228, 1976.
*  Wenxuan Wang, Jing Wang, Chen Chen, Jianbo Jiao, Yuanxiu Cai, Shanshan Song, and Jiangyun Li. Fremim: Fourier transform meets masked image modeling for medical image segmentation. In _Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision_, pages 7860-7870, 2024.
*  Qi Zhang, Yifei Wang, and Yisen Wang. How mask matters: Towards theoretical understandings of masked autoencoders. In _Advances in Neural Information Processing Systems 35_, pages 27127-27139, 2022.
*  Xingjian Zhen, Rudrasis Chakraborty, Liu Yang, and Vikas Singh. Flow-based generative models for learning manifold to manifold mappings. In _Proceedings of the 35th AAAI Conference on Artificial Intelligence_, pages 11042-11052. AAAI, 2021.
*  Hongkai Zheng, Weili Nie, Arash Vahdat, and Anima Anandkumar. Fast training of diffusion models with masked transformers. In _Transactions on Machine Learning Research (TMLR)_, 2024.
*  Rui Zhu, Yingwei Pan, Yehao Li, Ting Yao, Zhenglong Sun, Tao Mei, and Chang Wen Chen. SD-DiT: Unleashing the power of self-supervised discrimination in diffusion Transformer. In _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pages 8435-8445. IEEE, 2024.

Supplemental Material

### Theoretical Proof

**Proposition 2**.: _Given masked and unmasked clean patches \(x_{0}^{1}\) and \(x_{0}^{2}\) and their noisy versions \(x_{t}^{1}\) and \(x_{t}^{2}\), the mutual information \((x_{t}^{1};x_{t}^{2})\), \((x_{0}^{1};x_{t}^{2})\), and \((x_{0}^{1};x_{0}^{2})\) satisfy that_

\[(x_{0}^{1};x_{t}^{2})(x_{0}^{1};x_{0 }^{2})-_{p(x_{0}^{2})}_{p(x_{t}^{2}|x_{0}^{2})}[KL(p(x_ {0}^{1}|x_{0}^{2})||p(x_{0}^{1}|x_{t}^{2}))]\] (13) \[(x_{t}^{1};x_{t}^{2})(x_{0}^{1};x_{0 }^{2})-_{p(x_{0}^{2})}_{p(x_{t}^{2}|x_{0}^{2})}[KL(p(x_ {0}^{1}|x_{0}^{2})||p(x_{0}^{1}|x_{t}^{2}))]\] \[-_{p(x_{0}^{1})}_{p(x_{t}^{1}|x_{0}^{1})} [KL(p(x_{t}^{2}|x_{0}^{1})||p(x_{t}^{2}|x_{t}^{1}))]\] (14)

Proof.: Given the time step \(t\),masked noisy patches \(x_{t}^{2}\), masked clean patches \(x_{0}^{2}\), clean unmasked patches \(x_{0}^{1}\) and noisy unmasked patches \(x_{t}^{1}\), where \(x_{t}^{2}=x_{0}^{2}+n,x_{t}^{1}=x_{0}^{1}+n\) and \(n(0,t^{2}I)\). we derive the mutual information \((x_{0}^{1};x_{t}^{2})\) according to the definition.

\[(x_{0}^{1};x_{t}^{2}) =_{p(x_{0}^{1})}_{p(x_{t}^{1}|x_{0}^{1})} ^{1}|x_{t}^{2})}{p(x_{0}^{1})}\] (15) \[=_{p(x_{0}^{1})}_{p(x_{t}^{2}|x_{0}^{1})} (^{1}|x_{0}^{2})}{p(x_{0}^{1})}^{1}|x _{t}^{2})}{p(x_{0}^{1}|x_{0}^{2})})\] (16) \[_{p(x_{0}^{1})}_{p(x_{0}^{2}|x_{0}^{1 })}_{p(x_{t}^{2}|x_{0}^{2})}(^{1}|x_{0}^{2})} {p(x_{0}^{1})}^{1}|x_{t}^{2})}{p(x_{0}^{1}|x_{t}^{2})})\] (17) \[=_{p(x_{0}^{1})}_{p(x_{0}^{2}|x_{0}^{1})} ^{1}|x_{0}^{2})}{p(x_{0}^{1})}+_{p(x_{0}^{1},x_{0} ^{2},x_{t}^{2})}^{1}|x_{t}^{2})}{p(x_{0}^{1}|x_{0}^{2})}\] (18) \[=(x_{0}^{1};x_{0}^{2})+_{p(x_{0}^{2})} _{p(x_{t}^{2}|x_{0}^{2})}_{p(x_{0}^{1}|x_{0}^{2})} ^{1}|x_{t}^{2})}{p(x_{0}^{1}|x_{0}^{2})}\] (19) \[=(x_{0}^{1};x_{0}^{2})-_{p(x_{0}^{2})} _{p(x_{t}^{2}|x_{0}^{2})}[KL(p(x_{0}^{1}|x_{0}^{2})||p(x_{0}^{ 1}|x_{t}^{2}))]\] (20)

Thus, the mutual information between noisy masked patches and unmasked clean patches \((x_{0}^{1};x_{t}^{2})\) is less than \((x_{0}^{1};x_{0}^{2})\) due to the non-negativity of KL divergence. Moreover, during \(t\) increases, the variance of the Gaussian noise \(n\) becomes larger. As a result, noisy masked patches \(x_{t}^{2}\) are disrupted heavily from clean patches \(x_{0}^{2}\). The distribution \(p(x_{0}^{1}|x_{t}^{2})\) is very dissimilar from \(p(x_{0}^{1}|x_{0}^{2})\). Formally, the derivation of KL divergence can be written as:

\[_{p(x_{0}^{2})}_{p(x_{t}^{2}|x_{0}^{2})} _{p(x_{t}^{1}|x_{0}^{2})}[^{1}|x_{t}^{2})}{p(x _{0}^{1}|x_{0}^{2})}]\] \[=_{p(x_{0}^{2})}_{p(x_{t}^{2}|x_{0}^{2})} _{p(x_{0}^{1}|x_{0}^{2})}[^{2}|x_{0}^{1})}{p(x _{0}^{2}|x_{0}^{1})}^{2})}{p(x_{0}^{2})}]\] \[_{p(x_{0}^{2})}_{p(x_{t}^{2}|x_{0}^{2}) }_{p(x_{0}^{1}|x_{0}^{2})}[^{2}|x_{0}^{1})+p(n |x_{0}^{1})}{p(x_{0}^{2}|x_{0}^{1})}^{2})+p(n)}{p(x_{0}^{2} )}]\] \[=_{p(x_{0}^{2})}_{p(x_{t}^{2}|x_{0}^{2})} _{p(x_{0}^{1}|x_{0}^{2})}[(1+^{1})}{p(x _{0}^{2}|x_{0}^{1})})(1+^{2})}) ],\] (21)

We approximate \(p(x_{t}^{2}) p(x_{0}^{2})+p(n)\), since \(p(x_{t}^{2})\) is a Gauss distribution with mean value \(x_{0}^{2}\) and variance \(t^{2}\). As \(t\) increases, the KL divergence \(KL(p(x_{0}^{1}|x_{0}^{2})||p(x_{0}^{1}|x_{t}^{2}))\) increases and the mutual information \((x_{0}^{1};x_{t}^{2})\) achieves the larger difference with \((x_{0}^{2};x_{0}^{2})\). Thus, the mutual information \((x_{0}^{1};x_{t}^{2})\) is lower than \((x_{0}^{1};x_{0}^{2})\).

Similarly, the mutual information between noisy patches \((x_{t}^{1};x_{t}^{2})\) can be drived according to Eq. 20:

\[(x_{t}^{1};x_{t}^{2}) (x_{0}^{1};x_{t}^{2})-_{p(x_{0}^{1})} _{p(x_{t}^{1}|x_{0}^{1})}[KL(p(x_{t}^{2}|x_{0}^{1})||p(x_{t}^{2}|x_ {t}^{1}))]\] (22) \[(x_{0}^{1};x_{0}^{2})-_{p(x_{0}^{2})} _{p(x_{t}^{2}|x_{0}^{2})}[KL(p(x_{0}^{1}|x_{0}^{2})||p(x_{0}^{1}|x_ {t}^{2}))]\] \[-_{p(x_{0}^{1})}_{p(x_{t}^{1}|x_{0}^{1}) }[KL(p(x_{t}^{2}|x_{0}^{1})||p(x_{t}^{2}|x_{t}^{1}))]\] (23)

**Proposition 3**.: _The asymmetric loss of noisy patch reconstruction and the asymmetric loss of clean patch reconstruction satisfy that:_

\[_{asym-NN} =-_{p(x_{t}^{1},x_{t}^{2})}[h(x_{t}^{1})^{T}h_{g}(x_{ t}^{2})]\] \[_{asym}+\{-h(x_{t}^{1})^{T} [}{ x_{0}^{2}}]^{T}n\}+\{-h_{g}(x_{0}^{2})^{T}[^{1}} ]^{T}n\},\] (24)

_where \(_{asym}\) is defined in (1) and represents contextual information. The two noise-weighted items represent contrastive objective between \(h(x_{t}^{1})-[ h_{g}/ x_{0}^{2}]\) and \(h_{g}(x_{0}^{2})-[ h/ x_{0}^{1}]\) weighted by the Gaussian noise \(n\)._

**Proof.** According to Eq.1, the asymmetric loss can be written as:

\[_{asym-NN} =-_{p(x_{t}^{1},x_{t}^{2})}[h(x_{t}^{1})^{T}h_{g}(x_{t} ^{2})]\] (25) \[-\{h(x_{t}^{1})^{T}[h_{g}(x_{0}^{2})+ [}{ x_{0}^{2}}]^{T}n+o(x_{0}^{2}) ]\}\] (26) \[=-\{h(x_{t}^{1})^{T}h_{g}(x_{0}^{2})+h(x_{t}^{1})^ {T}[}{ x_{0}^{2}}]^{T}n\}\] (27) \[-\{[h(x_{0}^{1})+[^{1}}]^{T}n+o(x_{0}^{1})]^{T}h_{g}(x_{0}^{2})+h(x_ {t}^{1})^{T}[}{ x_{0}^{2}}]^{T}n\}\] (28) \[=-[h(x_{0}^{1})^{T}h_{g}(x_{0}^{2})]+ \{-h(x_{t}^{1})^{T}[}{ x_{0}^ {2}}]^{T}n\}+\{-h_{g}(x_{0}^{2})^{T}[^{1}}]^{T}n\}\] (29) \[=_{asym}+\{-h(x_{t}^{1})^{T}[ }{ x_{0}^{2}}]^{T}n\}+ \{-h_{g}(x_{0}^{2})^{T}[^{1}}] ^{T}n\}\] (30)

where we leverage first-order Taylor's formula in Eq. 26 and Eq. 28 to calculate \(h(x_{t}^{1})\) and \(h_{g}(x_{t}^{2})\) at \(x_{0}^{1}\) and \(x_{0}^{2}\), since \(x_{t}^{1}=x_{0}^{1}+n\) and \(x_{t}^{2}=x_{0}^{2}+n\). \(o\) denotes the the higher order infinitesimal.

### Experiment Details

**Diffusion Settings.** We leverage EDM  as our diffusion training framework, which predicts clean image patches from noisy images. For fair comparison, we use the default parameters in EDM (see  for more details). During inference, we generate conditional images from Gaussian noise via EDM-sampler . Specifically, the time steps in the reverse process are set via \(t_{i}=(t_{max}^{}+(t_{min}^{}-t_{max}^ {}))^{}\), where \(N=40\), \(=7\), \(t_{max}=80\) and \(t_{min}=0.002\). Besides, the second-order correction is applied and the generated images are the average of first-order and second-order results.

**Training Details.** We follow the LDM  and adopt a pretrained VAE to firstly map the images into the latent spaces. The weight of pretrained VAE is from Stable Diffusion . Then, we train the denoising models with these latent features. We leverage AdamW optimizer with learning rate 0.0001, batch size 256, and \(50\%\) mask ratio. As for unmasking fintuning, we slightly change some hyper-parameters with learning rate 0.00005, batch size 128, mask ratio \(0\%\). Some details can be found in Table 8.

### Supplementary Experiments

**Generalization Experiments.** We adopt the ImageNet dataset in the experiments for a fair comparison, since MaskDiT, SD-DiT and MDT are all evaluated on the ImageNet dataset. In fact, our MC-DiT can be generalized to different domains or datasets for improved image generationdue to the fact that it can extract contextual information from arbitrary images. Table 9 compares the performance of MaskDiT and MC-DiT on the CIFAR-10  and CelebA  (that collected for face anti-spoofing) datasets. Due to time limit, we train both MaskDiT and MC-DiT for 200K iterations. Experimental results show that MC-DiT outperforms MaskDiT on both datasets.

**Convergence Speed.** In Figure 3, we compare the training curve of DiT , MaskDiT  and MC-DiT and point out that the training loss of MC-DiT decreases faster than DiT  and MaskDiT . This is due to the primary focus of our analysis is the overall effectiveness of the model. The blue line can achieve a lower loss, despite similar iteration counts for flattening, highlighting the model's efficiency in reaching a more optimal solution. Besides, the loss reported in Figure 3(a) denotes the MSE loss \(_{clean}\). Thus, lower MSE loss means the generated clean patches are more similar to the ground-truth. Moreover, MC-DiT achieves lower MSE loss with the same iterations with DiT  and MaskDiT , indicating the performant model with higher convergence speed.

**Main Branch Target.** The modal collapse occurs when the main branch only considers clean-to-clean mask-reconstruction for masked clean patches but ignores the denoising of unmasked noisy patches. We propose two EMA branches to balance the two tasks for the main branch. We use the noisy EMA branch to realize noisy-to-clean mapping for denoising, and the clean EMA branch to realize clean-to-clean mapping for mask-reconstruction (mask ratio is 0%). The two EMA branches constrain the output of the main branch (minimize the MSE loss between the outputs of the main branches and EMA branches) via three hyper-parameters, which leads to the balance on the denoising task and clean-to clean mask-reconstruction task.

To verify this, we report in Table 10 the FID score of the main branch with noisy and clean patch inputted only. The result of the main branch with unmasked noisy patches only is higher than that of masked clean patches, indicating the modal collapse problem. With noisy and clean branches, the FID score of the main branches decline distinctly, validating the effectiveness of the EMA branches.

**Ablation Study of hyperparameters.** Following MaskDiT, we select 0.01, 0.1, and 1.0 as the scaling values of three hyperparameters and supplement various values for ablation study. Table 13, Table 14 and Table 15 evaluate various values of the three hyperparameters and we find that the best FID is still obtained when \(_{1}=0.1\), \(_{2}=0.1\), and \(_{3}=0.05\).

   & FID \\  Main Branch & 22.10 \\ w/ Noisy Branch & 19.26 \\ w/ Clean Branch & 18.88 \\  Main Branch (unmasked noisy patch only) & 25.72 \\ Main Branch (masked clean patch only) & 23.69 \\ Main Branch (unmasked noisy patch only) w/ Noisy Branch & 19.84 \\ Main Branch (unmasked noisy patch only) w/ Clean Branch & 19.57 \\  

Table 10: Performance comparisons with different branches.

   & MC-DiT-B/2 & MC-DiT-XL/2 & MC-DiT-XL/2 \\  Resolution & \(256 256\) & \(256 256\) & \(512 512\) \\ Training Time & 50h & 586h & 623h \\ Inference Time (50K images) & 12h & 8h & 15.2h \\ GPUs & \(2\) RTX-3090 GPUs & \(4\) V100 GPUs & \(4\) V100 GPUs \\ Batch Size & \(256 2\) & \(256 4\) & \(128 4\) \\ Memory Usage per GPU & 17GB & 20GB & 27GB \\  

Table 8: Experimental details about MC-DiT.

   &  \\  Methods & FID & Methods & FID \\  MaskDiT-B/2 & 11.52 & MaskDiT-B/2 & 7.14 \\ MC-DiT-B/2 & 9.28 & MC-DiT-B/2 & 5.36 \\  

Table 9: Performance comparison on Cifar10 and CelebA dataset of MaskDiT and MC-DiT

[MISSING_PAGE_FAIL:17]

### Generated Samples

Figure 7 visualizes some images generated by our MC-DiT with \(256 256\) resolutions. Figure 8 visualizes some images generated by our MC-DiT with \(512 512\) resolutions.

  \(_{1}\) & 0 & 0.01 & 0.03 & 0.05 & 0.07 & 0.09 & 0.1 & 0.3 & 0.5 & 0.7 & 0.9 & 1.0 \\  FID & 43.23 & 40.99 & 39.23 & 38.44 & 37.95 & 36.53 & 35.20 & 35.98 & 36.74 & 36.91 & 37.52 & 38.97 \\  

Table 13: Ablation study on \(_{1}\)

  \(_{2}\) & 0 & 0.01 & 0.03 & 0.05 & 0.07 & 0.09 & 0.1 & 0.3 & 0.5 & 0.7 & 0.9 & 1.0 \\  FID & 38.83 & 36.15 & 36.02 & 36.46 & 35.99 & 36.07 & 35.20 & 35.34 & 36.18 & 37.26 & 35.98 & 37.54 \\  

Table 15: Ablation study on \(_{3}\)

  \(_{3}\) & 0 & 0.01 & 0.03 & 0.05 & 0.07 & 0.09 & 0.1 & 0.3 & 0.5 & 0.7 & 0.9 & 1.0 \\  FID & 37.77 & 37.25 & 36.63 & 35.20 & 36.07 & 37.93 & 35.46 & 35.88 & 37.26 & 36.19 & 37.40 & 36.35 \\  

Table 15: Ablation study on \(_{3}\)

Figure 7: Visualization of \(256 256\) images generated by our MC-DiT.

Figure 8: Visualization of \(512 512\) images generated by our MC-DiT

### NeurIPS Paper Checklist

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: We clearly clarify our claim in the abstract and introduction. Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations** Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: We discuss our limitation in the conclusion section. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. 3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes]Justification: We clearly describe the theoretical results and proof in Sec 3.2 and supplementary. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes] Justification: We clearly clarify the setting and parameters of experiments in Sec 4.2. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example 1. If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. 2. If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. 3. If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). 4. We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?Answer: [No] Justification: We have provide the core file of our code in the supplementary. And the code will be released upon acceptance. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc. * The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. * At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). * Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: We describe this in details in Sec 4.1. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [No] Justification: We focused primarily on the exploratory analysis and preliminary results. Addressing statistical significance and error bars will be a priority in our future research to provide a more comprehensive evaluation of our findings. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)* The assumptions made should be given (e.g., Normally distributed errors).
* It should be clear whether the error bar is the standard deviation or the standard error of the mean.
* It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.
* For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).
* If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [No] Justification: We will report this upon acceptance. Guidelines: * The answer NA means that the paper does not include experiments. * The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. * The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute. * The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: We have adhered to all ethical guidelines and standards throughout our study. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [NA] Justification: There is no societal impact of the work performed. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.

* The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.
* The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.
* If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? Answer: [Yes] Justification: We briefly discuss this in conclusion. Guidelines: * The answer NA means that the paper poses no such risks. * Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters. * Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images. * We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licensees for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [Yes] Justification: We follow the source code of MaskDiT, which is credited properly. Guidelines: * The answer NA means that the paper does not use existing assets. * The authors should cite the original paper that produced the code package or dataset. * The authors should state which version of the asset is used and, if possible, include a URL. * The name of the license (e.g., CC-BY 4.0) should be included for each asset. * For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided. * If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset. * For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.

* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
* **New Assets*
* Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [NA] Justification: The pretrained weight and source code will be released upon acceptance. Guidelines:
* The answer NA means that the paper does not release new assets.
* Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.
* The paper should discuss whether and how consent was obtained from people whose asset is used.
* At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
* **Crowdsourcing and Research with Human Subjects*
* Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.
* According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
* **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects*
* Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines:
* The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.
* Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.
* We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.
* For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.