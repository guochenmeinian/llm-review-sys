# Seeing Beyond the Crop: Using Language Priors

for Out-of-Bounding Box Keypoint Prediction

Bavesh Balaji\({}^{1,2,3}\), Jerrin Bright\({}^{2,3}\), Yuhao Chen\({}^{2,3}\), Sirisha Rambhatla\({}^{1,3}\), John S. Zelek\({}^{2,3}\), David Anthony Clausi\({}^{2,3}\),

\({}^{1}\)Critical ML Lab, \({}^{2}\)Vision and Image Processing Lab, \({}^{3}\)University of Waterloo,

###### Abstract

Accurate estimation of human pose and the pose of interacting objects, like a hockey stick, is crucial for action recognition and performance analysis, particularly in sports. Existing methods capture the object along with the human in the bounding boxes, assuming all keypoints are visible within the bounding box. This necessitates larger bounding boxes to capture the object, introducing unnecessary visual features and hindering performance in real-world cluttered environments. We propose a simple image and text-based multimodal solution TokenCLIPose that addresses this limitation. Our approach focuses solely on human keypoints within the bounding box, treating objects as _unseen_. TokenCLIPose leverages the rich semantic representations endowed by language for inducing keypoint-specific context, even for occluded keypoints. We evaluate the performance of TokenCLIPose on a real-world ice hockey dataset, and demonstrate its generalizability through zero-shot transfer to a smaller Lacrosse dataset. Additionally, we showcase its flexibility on CrowdPPose, a popular occlusion benchmark with keypoints within the bounding box. Our method significantly improves over state-of-the-art approaches on ice hockey, Lacrosse, and CrowdPPose datasets, with gains of 4.36%, 2.35%, and 3.8%, respectively.

## 1 Introduction

The goal of 2D human pose estimation is to localize the human anatomical keypoints from an image, which is essential for scene understanding, action recognition , and human-object interaction detection . This is particularly challenging in cluttered real-world scenarios due to occlusions and other non-idealities . With the emerging applications in Virtual Reality (VR), and Augmented Reality (AR), and real-time sports analysis , there is a fundamental need to understand how objects are manipulated via human-object interaction . Often, in such scenarios, the objects that humans hold and interact with, which we define as _extensions_, can provide crucial information that aids in accurately estimating the human pose and the actions being performed .

Contemporary SOTA deep learning-based pose estimation methods predominantly follow a top-down approach: cropping each person in an image using bounding boxes before estimating their pose individually. While using existing top-down pose estimators seems intuitive for joint prediction of the humans and their extensions, this approach suffers from limitations, yielding suboptimal results as shown in Fig. 1(a).

Our key observation is: capturing the extension in the bounding box expands the field-of-view and introduces unnecessary visual features, which can be confusing to the model. A simple yet powerful fix is to confine the bounding box to capture the human body, treating the extension's keypoints as _unseen_. This approach reduces background interference, as we do not explicitly capture the extension. However, it leads to the loss of important visual information about the extension, making them unseen.

Here, a crucial question arises: _How can we effectively represent the spatial relationships of these unseen keypoints for accurate pose estimation?_

To answer this, we turn to other ways of informing the model about the unseen keypoints. Recent works have shown that using language to induce semantic context of keypoints can lead to effective feature representations . Specifically, existing works  on human pose estimation align the image features with keypoint-specific text embeddings generated from Vision Language Models (VLMs) using a contrastive loss. However, these text embeddings primarily capture local details, neglecting the crucial global relationship between lower-body and upper-body joints; In Fig. 1(b) language models encode similar joints together, while losing the global structure. Hence, explicitly imposing the image features to be close to text embeddings could be suboptimal.

Based on the observations, we present a simple yet effective solution to significantly improve reliability under dynamic real-world scenarios by leveraging language to _see beyond the bounding box_. Specifically, We utilize these text embeddings as _priors_ and initialize our learnable keypoint tokens (referred to as text tokens) using these text embeddings. By integrating the rich semantic representations of keypoint-specific text embeddings with image features, and employing a transformer to capture global dependencies, we extract superior fine-grained representations which significantly boosts the performance across the board.

We evaluate TokenCLIPose's performance on three real-world datasets containing a lot of occlusions and noise: an ice hockey dataset, a Lacrosse Dataset and the CrowdPose dataset . The ice hockey and Lacrosse datasets are first-of-their-kind datasets that we curated for predicting the pose of human extensions (the sticks). Furthermore, in order to demonstrate the flexibility of TokenCLIPose in predicting unseen keypoints that are present within the bounding box, we evaluate it on the CrowdPose dataset. TokenCLIPose outperforms existing top-down approaches by 4.36% and 3.8% on the ice hockey and CrowdPose datasets respectively. Furthermore, TokenCLIPose demonstrates superior zero-shot capabilities in predicting extension keypoints when tested on the Lacrosse dataset,

Figure 1: Difference between existing networks and our network. **(a)** Qualitative comparisons between HRNet (left) and our pose estimator (right). **(b)** t-SNE Visualization of keypoint-specific prompt embeddings. The different colours represent whether they are upper-body or lower-body joints, with red representing upper-body joints, blue representing lower-body joints and green representing the hip joints. From the figure, it is evident that while these embeddings maintain positional structure within the upper-body joints (the shoulders are placed above the elbows which are placed above the wrists, following the pose of a human standing normally) and the lower-body joints (knees placed above ankles), they fail to maintain positional structure between the upper-body and lower-body joints (elbows and wrists are placed below knees and ankles in the plot which does not follow the pose of a human being).

outperforming prior works by 2.35%. Our experiments highlight TokenCLIPose's ability to reliably predict _unseen_ keypoints.

## 2 Related Work

**2D Human Pose Estimation:** Top-down approaches in 2D pose estimation can be broadly classified into two categories: _Heatmap-based pose estimation_ has been the _de-facto_ standard approach since the introduction of stacked hourglass networks . These methods represent discrete \((x,y)\) coordinates as continuous heatmaps where each pixel indicates the likelihood of a specific joint being located at that position. Most methods [9; 12; 14; 13] rely on powerful convolutional networks to extract high-level multi-scale feature maps. While most research focuses on network architectures, a few works investigate the coordinate representation and the heatmap encoding and decoding process [21; 15]. Recently, researchers have begun exploring transformer-based architectures for pose estimation [10; 22; 11; 23]. Xu _et al._ adopt the original vision transformer  and build baselines for pose estimation, showcasing the efficacy of vision transformers. Methods including [22; 11] use CNNs as feature extractors, and utilize transformers to model the relationship between different scale features and the keypoint features respectively.

_Regression-based pose estimation_, in contrast to the dominance of heatmap-based approaches offers an alternative paradigm. Sun _et al._ leverages a convolutional backbone to extract feature maps and then utilize an integral operation to directly regress keypoint coordinates. Li _et al._ developed a novel pose regression model which aims at minimizing the distance between the predicted and underlying distribution. However, the global pooling operation used in  results in loss of spatial information that is crucial for reliable pose estimation. More recent works [27; 16; 28] include transformer-based architectures: [27; 16] use an encoder-decoder strategy and are based on DETR  and Deformable-DETR  respectively.

While heatmap-based methods have achieved high accuracy, they have some limitations: 1) These methods have a non-differentiable heatmap decoding method; 2) Heatmap representation often leads to quantization error; and 3) They are not designed to predict out-of-bounding-box keypoints. Therefore, we adopt the regression-based approach for directly estimating the coordinates of all joints, both inside and outside the bounding box.

**Occlusion-Aware Pose Estimation:** Several approaches tackle the problem of occlusions in crowded scenarios. Various methods tackle the problem by studying the relationships between multiple humans present in an image [31; 32; 33]. However, we do not compare with their works as we are interested in single-instance approaches. Park _et al._ addresses the problem of _out-of-bounding box_ keypoints by refining the bounding box before pose prediction, but this adds computational cost. Our approach, on the other hand, provides a parameter-free technique to induce spatial context for the _out-of-bounding box_ keypoints by leveraging the knowledge of VLMs.

**Vision-Language Models:** Language supervision has been shown to improve feature representations in various vision tasks, such as image classification, semantic segmentation, and pose estimation. Radford _et al._ proposed the contrastive pretraining paradigm CLIP that leverages contrastive learning to optimize a text and image encoder jointly. This work also showcased the significance of large-scale vision-language pretraining by demonstrating accurate zero-shot classification. Following CLIP, various works such as [36; 37; 38] focused on improving image classification using CLIP. Zhang _et al._ transfer the 2D pre-trained knowledge to 3D domains, thereby improving zero-shot point-cloud recognition. Rao _et al._ showcased the efficacy of CLIP pretraining on dense prediction tasks by converting the image-text matching problem to a pixel-text matching problem.

Recently, Tveet _et al._ leverage text to inpaint missing poses in a sequence in a spatiotemporally consistent manner. Guo _et al._ use pose-aware prompts to predict 3D hand meshes from images. Recent works on 2D pose estimation [18; 17] utilize joint-specific keypoints to learn richer representations. Particularly, they use a contrastive loss to align the image features extracted from a backbone to their keypoint-specific text embeddings. This, however, is suboptimal as the text embeddings do not capture global structure between human keypoints. Hence, aligning the image features to text embeddings might lead to loss of spatial information and inaccurate localization of joints. We improve this by using a transformer-based network to capture the global spatial dependencies between image and text features, thereby guiding our image features using text supervision rather than biasing them to the text prompts themselves.

## 3 Method

### Problem Formulation

Given a cropped image \(^{h w}\) of a human, generated from bounding boxes obtained through a detection network, we predict \(K_{out}\) keypoints \(}_{d}^{K_{out} 2}\) that represent the 2D poses of extensions and/or humans, along with the scale parameter \(}_{d}\) for each keypoint.

### Network Architecture

We propose an encoder-decoder architecture to estimate 2D keypoints that are _not captured_ in the bounding box. Firstly, an image encoder extracts multi-scale image features from the cropped image, which are then passed through a Multi-layer Perceptron (MLP) to generate coarse human keypoint proposals. These image features and locations are then projected onto the multimodal embedding space to form image and location tokens. The text-based keypoint encoder leverages text prompts to generate keypoint-specific text tokens. Finally, all these multimodal tokens are concatenated and passed through a transformer decoder to capture global relationships between these tokens and predict final 2D keypoints. The network is exemplified in Fig. 2.

**Image Encoder.** The cropped input image is initially passed through a pretrained CNN to extract multi-scale dense feature maps. These multi-scale feature maps are fused and projected onto a joint multimodal embedding space to form the image tokens \(_{}^{N C_{emb}}\), where \(N\) is the number of tokens and \(C_{emb}\) is the joint multimodal space dimension. Furthermore, they are processed through a MLP to generate coarse human keypoint predictions \(}_{f}^{K_{h} 2}\), and a scale parameter \(}_{f}^{K_{h} 1}\), which are optimized using the RLE process as detailed in Section 3.3.

**Text-based Keypoint Encoder.** Following image feature extraction, the keypoint encoder tackles the challenge of _unseen_ keypoints in the image. We employ language-guided keypoint representations, where text prompts encode class-related information of each keypoint. By leveraging CLIP's pretrained text encoder, we generate the text tokens \(_{}^{K_{out} C_{emb}}\) which are then concatenated with the extracted image tokens. This process indirectly injects visual context of the missing keypoints into the model, even when it's not directly visible in the cropped input image. Additionally, we incorporate the coarse human keypoint predictions \(}_{f}\) and convert them to location tokens by projecting

Figure 2: TokenCLIPose Architecture: We first incorporate an image encoder to extract multi-scale image features and coarse human keypoint locations \(}_{f}\), and project them onto a joint multimodal embedding space obtaining image tokens \(_{}\) and location tokens \(_{}\) respectively. Then, we leverage a text-based keypoint encoder to extract keypoint-specific text tokens \(_{}\) from VLMs. These multimodal tokens are fed to a transformer decoder to capture spatial dependencies between them and predict all the 2D keypoints \(}_{d}\). The coarse human keypoint predictions and the final keypoint predictions are supervised using the RLE loss.

them onto the joint multimodal space \(_{}^{K_{h} C_{emb}}\), and concatenate them with the image and text tokens. The final set of tokens fed to the decoder are denoted as \(=\{_{},_{},_{ }\}\).

**Transformer Decoder.** To predict all the keypoints precisely, the relationships between these multimodal tokens (\(\)) must be captured accurately. Therefore, we leverage the transformer decoder to understand the inherent correlations between different text, image and location tokens. Instead of treating each modality separately and utilizing a cross-attention mechanism to understand the associations between them, we treat all tokens together as a homogeneous entity and employ the standard self-attention mechanism. This approach offers a simpler way to gain a holistic view of the relationships between all keypoints, locations, and image patches. The transformer layers are followed by MLPs to estimate the final keypoint predictions \(}_{d}^{K_{out} 2}\) and the scale parameter \(}_{d}^{K_{out} 1}\). To reduce artifacts in feature maps and understand richer relationships, we employ additional register tokens as .

### Loss Function

**Distribution Learning.** Following [26; 16], we formulate the regression task as a distribution learning problem and adopt Maximum Likelihood Estimation (MLE) to effectively predict the output coordinates. We use normalizing flows to estimate the deviation in predicted and ground truth keypoint distributions. In mathematical terms, given an input image \(\), our network estimates a distribution \(P_{,}(|)\) representing the probability of the ground truth keypoint appearing at the location \(\). Here, \(\) and \(\) denote the parameters of our pose network and the flow model \(f_{}\), respectively. The flow model \(f_{}\) acts as a refinement step, iteratively transforming a preset Gaussian distribution \(}(0,)\) to capture the deviation of the predicted and ground truth distributions using the network's prediction (\(}\) and \(}\)).

Equation (1) depicts the mathematical formulation of the RLE loss, where \(Q(}_{g})\) is the preset Gaussian distribution, \(G_{}(_{g})\) is the learned distribution by the flow model, \(_{g}=(_{g}-})/}\) represents the normalized difference between ground truth and predicted keypoints, and \(s\) is a constant term.

\[_{RLE}=- Q(}_{g})- G_{}(}_{g} )- s+}\] (1)

Similar to , we supervise both the coarse predictions \((}_{f},}_{f})\) and the final predictions from the decoder \((}_{d},}_{d})\) using RLE. Hence, our final loss function is

\[=_{RLE}^{f}+_{RLE}^{d}\] (2)

where,

\[_{RLE}^{f}=- P_{_{f},_{f}}(| )_{=_{g}}\ \ \ \ _{RLE}^{d}=- P_{_{d},_{d}}(| )_{=_{g}}\]

Here, \(_{f}\) and \(_{f}\) denote the parameters of the backbone network and the flow model of the coarse keypoint predictions, and \(_{d}\) and \(_{d}\) denote the parameters of our decoder regression model and flow model of the final keypoint predictions.

## 4 Experiments

A critical challenge in evaluating pose networks for human extensions is the lack of publicly available datasets containing both the human and extension pose annotations. To address this limitation, we curate two new sports datasets, ice hockey and Lacrosse, featuring pose annotations for humans and their corresponding extensions. Experiments on these datasets demonstrate the performance of our model in estimating the pose of extension keypoints, which are not captured within the bounding box. We further evaluate the model's ability to predict unseen keypoints (due to occlusion/self-occlusion) within the bounding box using the benchmarked multi-person cluttered dataset, Crowdpose , validating the generalizability of our model.

For human pose estimation, the total keypoints (\(K_{out}\)) depend on extensions. Without extensions, \(K_{out}\) equals the number of human keypoints (\(K_{h}\)). When extensions are present, \(K_{out}\) increases to \(K_{h}\) plus the number of extension keypoints (\(K_{e}\)).

### Ice Hockey Dataset

**Dataset.** The ice hockey dataset, captured from real-world National Hockey League (NHL) videos, presents a challenging environment for pose estimation due to the inherent fast pace of the sport. Players' rapid movements often result in motion blur within frames, making it difficult to distinguish body parts. Furthermore, the nature of the game leads to frequent occlusions, especially when players obstruct each other's bodies. Adding to the complexity is the bulky equipment worn by hockey players, which can obscure keypoints. These combined challenges- motion blur, occlusion, and bulky equipment- make the ice hockey dataset a valuable resource for evaluating the robustness of the pose estimation task.

Our dataset consists of 10 video clips (30-45 seconds each, sampled at 30 fps) from various broadcast NHL videos. We utilize the CVAT tool to annotate the keypoints for multiple players and their hockey sticks in each frame. We followed the standard COCO format to annotate 17 keypoints for the human pose. Additionally, we annotate 3 keypoints for the hockey stick (butt end, heel, and toe). Finally, for each annotated frame, we create two versions of the input image: one cropped to include only the player (_standard bounding box_) and another incorporating both the player and their hockey stick (_extended bounding box_). In total, we generate \(11.66K\) pose annotations, with \(9.13K\) images from 9 clips used for training and \(2.53K\) images from the tenth clip used for testing our model's performance.

**Evaluation Metric.** We evaluate different State-Of-The-Art (SOTA) pose estimation models on our dataset using the Percentage of Correct Keypoints with head-normalization (PCKh) metric. Due to our method's use of smaller bounding box compared to the other models, achieving the same level of accuracy would result in a higher PCKh threshold for our model. To ensure a fair and direct comparison across all models, we employ the same threshold for evaluation.

**Training.** All networks are trained for 200 epochs with a batch size of 64 on a single NVIDIA GeForce RTX 4090 GPU. We employ the Adam optimizer with a learning rate of \(6 10^{-4}\) for all CNN-based architectures while the transformer-based architectures are trained using the AdamW optimizer with an initial learning rate of \(3 10^{-4}\). The weight decay is set to \(10^{-5}\) for all models. A stepLR scheduler was used to linearly reduce the learning rate from the initial value of \(10^{-5}\). Consistent with , we utilize RealNVP  as the flow model within our model.

**Results.** The results, presented in Table 1, emphasize our method's _SOTA performance_ over existing methods in robustly predicting the ice hockey player and the hockey stick keypoints, outperforming existing works by 4.36%. This is further validated by the qualitative comparisons in Fig. 5, where our model demonstrates the ability to predict semantic poses even in challenging scenarios with extreme motion blur and occlusion. These results support our hypothesis that _re-considering the extension pose estimation task as an unseen keypoint problem without explicitly capturing it in the bounding box_ reduces background noise leading to robust poses.

### Lacrosse Dataset

**Dataset.** In order to study the efficacy of TokenCLIPose's generalization capabilities in predicting the pose of extensions, we curate another small-scale Lacrosse dataset. Similar to ice hockey, it is

Figure 3: Qualitative Comparison of TokenCLIPose with HRNet-W48 on our ice hockey dataset.

characterized by motion blur and occlusions, but there are domain differences between the 2 datasets. This dataset consists of 300 pose annotations from one video sampled at 30 fps. We use the same 12 human keypoints used in the ice hockey dataset to denote the human's pose. However, we use only 2 keypoints to represent the Lacrosse stick's pose, as the blade of a Lacrosse stick is circular in nature. Hence, we disregard the 15th keypoint (stick toe) and use the other 14 keypoints to represent the pose of a Lacrosse player along with their stick.

**Zero-shot Results.** We evaluate TokenCLIPose's generalization capability by performing zero-shot transfer from our pretrained model on ice hockey to the Lacrosse dataset. Due to the difference in the shape of the head of a lacrosse and hockey stick, we predict the two keypoints corresponding to the shaft of a lacrosse stick. Furthermore, the text prompts for the two extension keypoints are also changed while keeping the model frozen. The results presented in Table 2 showcase that our model outperforms the established baselines by 2.35%, thereby demonstrating the efficacy of our proposed model for generalizable pose estimation.

### CrowdPose Dataset

**Dataset.** The CrowdPose dataset is a large-scale benchmark dataset for human pose estimation, containing \(12K\) images and \(43.4K\) labeled people in their trainval set, and \(8K\) images with \(29K\) labeled people in the test set. Following , we use the trainval set for training and test set for evaluation.

**Evaluation Metric.** We adopt standard Average Precision (AP) as our evaluation metric on the CrowdPose dataset. AP is calculated based on Object Keypoint Similarity (OKS) denoted by \(m_{OKS}\), which is defined as

\[m_{OKS}=(-_{i}^{2}/2s^{2}k_{i}^{2})(v_{i}>0)}{ _{i}(v_{i}>0)},\] (3)

where \(_{i}\) is the Euclidean distance between the \(i\)-th predicted keypoint coordinate and the corresponding ground truth, \(v_{i}\) is the visibility flag of the keypoint, \(s\) is the object scale, and \(k_{i}\) is a keypoint-specific constant.

**Training.** We employ the AdamW optimizer with an initial learning rate of \(6 10^{-4}\) and weight decay of 0.1. Following ViTPose , we apply linear warmup for the first 2000 iterations with a warmup factor of \(10^{-3}\). Furthermore, we perform gradient clipping to prevent overfitting.

  
**Method** & **Backbone** & **Input Resolution** & **Body** & **Butt End** & **Stick Heel** & **Stick Toe** & **Mean** \\  SimpleBaseline  & ResNet-50 & 256x192 & 93.59 & 69.57 & 57.19 & 52.76 & 68.83 \\ MSPN  & - & 256x192 & 93.61 & 70.30 & 59.21 & 55.69 & 69.70 \\ HR-Net  & HRNet-W48 & 256x192 & 94.90 & 71.48 & 60.29 & 55.36 & 70.44 \\ TokenPose-LD24  & HRNet-W48 & 256x192 & 95.13 & 70.96 & 60.93 & 56.27 & 70.82 \\ ViTPose  & ViT-B & 256x192 & 95.61 & 71.94 & 61.33 & 58.80 & 71.92 \\  TokenCLIPose & ResNet-50 & 256x192 & 95.81 & 74.86 & 65.79 & 65.08 & 74.92 \\ TokenCLIPose & MSPN & 256x192 & 97.17 & 75.41 & 66.70 & 66.34 & 75.53 \\ TokenCLIPose & HRNet-W48 & 256x192 & 97.37 & 75.94 & 67.82 & 66.15 & 76.28 \\ Improvement & - & - & 1.76\% \(\) & 4.00\% \(\) & 6.49\% \(\) & 7.35\% \(\) & 4.36\% \(\) \\   

Table 1: **Comparison with SOTA Methods** on our real-world ice hockey dataset (PCKh@0.5). BoldFace represents the best score. Underline represents the top score in existing works.

  
**Method** & **Backbone** & **Body** & **Butt End** & **Stick Heel** & **Mean** \\  SimpleBaseline  & ResNet-50 & 94.73 & 67.28 & 53.99 & 72.00 \\ MSPN  & - & 95.84 & 70.68 & 57.40 & 74.64 \\ HR-Net  & HRNet-W48 & 95.92 & 71.35 & 58.41 & 75.22 \\ ViTPose  & ViT-B & 95.77 & 72.85 & 60.18 & 76.26 \\  TokenCLIPose & HRNet-W48 & 97.24 & 76.60 & 65.01 & 78.61 \\ Improvement & - & 1.47\% \(\) & 3.75\% \(\) & 4.83\% \(\) & 2.35\% \(\) \\   

Table 2: **Zero-shot Comparison with SOTA Methods** on our real-world Lacrosse dataset (PCKh@0.5). BoldFace represents the best score. Underline represents the second-best score.

**Results.** Table 3 presents a comparison between established pose estimation techniques and our method. As shown in the table, TokenCLIPose outperforms all the top-down approaches by 3.8% demonstrating its efficacy in predicting unseen keypoints robustly. We also depict the qualitative results of TokenCLIPose to depict its robustness to occlusion. It is notable that even in scenarios where we only see the side-view of humans, TokenCLIPose estimates the pose reliably.

### Ablation Studies

We conduct comprehensive ablations to study the effect of our design choices and verify the impact of each module on our proposed TokenCLIPose. For consistency, all the ablations are conducted on our ice hockey dataset unless specified otherwise.

**Gains from Each Modality.** The influence of each modality on the proposed model's performance is shown in Table 4. As evidenced by a performance improvement of 3.35%, the inclusion of text tokens plays a significant role in enhancing the pose estimation accuracy. On the other hand, we find that including the location tokens do not improve the performance significantly, only by a small margin of 0.45%.

**Do we need to treat each modality heterogeneously?** We probe whether multimodal tokens need to be treated heterogeneously by testing out different attention mechanisms for our transformer decoder. As shown in Table 5, utilizing self-attention directly on all the tokens produces similar results to performing self-attention separately on image, location and text tokens, and then applying cross-attention. Therefore, it is not necessary to treat the tokens from each modality separately. We

   Prompt type & Stick Accuracy & Mean \\  No text & 63.37 & 72.93 \\ Single Prompt & 67.41 & 75.24 \\ Prompt Ensemble & 69.97 \(\) 2.56\% & 76.28 \(\) 1.04\% \\   

Table 4: **Effect of Different Modalities on the overall accuracy.**hypothesize that this could be due to all the tokens being projected to the same joint embedding space, thereby eliminating the need to process them differently.

**Impact of Text Prompts.** We investigate the influence of language on our model's efficacy on the ice hockey dataset by varying the degree and complexity of text prompts that we use. Starting from randomly initializing the text tokens instead of using CLIP embeddings, we study the effects of using single prompts and the prompt ensemble technique proposed in  for ImageNet classification. It is evident from Table 6 that incorporating text instead of randomly initializing text tokens results in a significant improvement of 2.31% in the overall accuracy. Furthermore, using prompt ensemble techniques improve the accuracy of the model by 1.04%, showcasing the importance of the quality of text prompts.

**Influence of Bounding Boxes.** We evaluate the influence of bounding box predictions on our model's performance by using ground truth bounding boxes obtained from ground truth human poses and the bounding boxes from the FasterRCNN object detector. The results are showcased in Table 7. The above table illustrates our model's robustness to the quality of bounding boxes, using ground truth bounding boxes improves the model's performance by a small margin of 2.47%.

## 5 Conclusion

In this work, we proposed TokenCLIPose, an innovative solution for robustly predicting human and _extension_ poses. Instead of explicitly modeling extensions within the bounding box, we reformulated the _extension_ pose estimation as an unseen keypoint prediction problem. We leverage the power of large pre-trained VLMs in augmenting the spatial information of unseen keypoints. We showcased that capturing relationships between multimodal tokens is more effective than aligning image features to text tokens. To evaluate the effectiveness of TokenCLIPose in predicting _extension_ keypoints, we curated real-world datasets for ice hockey and Lacrosse. We significantly outperform existing top-down methods on these datasets (by 4.36% and 2.35%, respectively). Additionally, we achieve a 3.8%

   Bounding boxes & Mean \\  Faster-RCNN  & 76.28 \\ Ground Truth & 78.75 \(\) 2.47\% \\   

Table 7: **Impact of Bounding Boxes on the overall accuracy.**

Figure 4: Qualitative Results of our TokenCLIPose on the CrowdPose dataset.

improvement over prior top-down networks on the CrowdPose dataset. This shows TokenCLIPose's flexibility to predict unseen keypoints within the bounding box as well. Future work will focus on curating and training more extensive and diverse datasets for human and extension pose estimation tasks.

## 6 Acknowledgement

This work was supported in part by Stathletes, Compute Canada, the Natural Sciences and Engineering Research Council of Canada and MITACS.