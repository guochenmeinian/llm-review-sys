# Cherry on Top: Parameter Heterogeneity and

Quantization in Large Language Models

Wanyun Cui\({}^{}\)\({}^{}\), Qianle Wang\({}^{}\)\({}^{}\)

\({}^{}\)Shanghai University of Finance and Economics

\({}^{}\)MoE Key Laboratory of Interdisciplinary Research of Computation and Economics,

Shanghai University of Finance and Economics

cui.wanyun@sufe.edu.cn, wql20000111@stu.sufe.edu.cn

Equal contribution

###### Abstract

This paper reveals the phenomenon of parameter heterogeneity in large language models (LLMs). We find that a small subset of "cherry" parameters exhibit a disproportionately large influence on model performance, while the vast majority of parameters have minimal impact. This heterogeneity is found to be prevalent across different model families, scales, and types. Motivated by this observation, we propose CherryQ, a novel quantization method that unifies the optimization of mixed-precision parameters. CherryQ identifies and preserves the critical cherry parameters in high precision while aggressively quantizing the remaining parameters to low precision. Extensive experiments demonstrate the effectiveness of CherryQ. CherryQ outperforms existing quantization approaches in terms of perplexity and downstream task performance. Notably, our 3-bit quantized Vicuna-1.5 exhibits competitive performance compared to their 16-bit counterparts.

## 1 Introduction

The rapid development of large language models (LLMs) has increased the demand of efficient deployment in various environments . However, the parameter size poses significant challenges for GPU memory requirements. Quantization, which reduces the bit-width of model parameters, has emerged as a solution to alleviate memory constraints of LLM deployment .

Low-precision parameter representation leads to quantization errors. Surprisingly, existing research has shown that LLMs exhibit a high robustness for quantization errors even for low-bit settings. For example, although 4-bit quantization can only represent 16 distinct values, even the simplest round-to-nearest strategy does not significantly degrade performance . This raises the question: _what causes LLMs to be robust to quantization_?

We explore the parameters and answer this question via **Parameter Heterogeneity**, which refers to the significant variation in the influence of quantization on different parameters. We reveal that for the vast majority (\(>99\%\)) of normal parameters, the effect of their quantization to the model are minimal and can thus be alleviated or ignored. However, there exists a small subset (\(<1\%\)) of "cherry" parameters for which the effect are substantial and hard to mitigate.

Consider Figure 0(a) as an example. We show a scatter plot of the impacts on the model loss when perturbing each individual parameter in a parameter matrix from LLaMA2-7b . The derivation of impacts is detailed in SS 3. While 99% of the parameters fall within the range of (0, 0.1), a small subset of "cherry" parameters exhibits values ranging from (5, 30), which is 50-300 times higherthan the _maximum_ value of the remaining 99% of parameters. Moreover, this phenomenon is not an isolated case. We observed similar patterns across different scales of LLMs (Figure 0(a)0(b)), different families of LLMs, including Mistral  (Figure 0(c)) and Gemma  (Figure 0(d)), and both base models and chat models (Vicuna-1.5  Figure 0(e)0(f)). The consistent presence of this phenomenon suggests that parameter heterogeneity is an inherent characteristic of LLMs.

Therefore, 99% of normal parameters explain the high robustness of LLMs to quantization errors. However, the small number of cherry parameters still leads to performance degradation under quantization. Consequently, the key to reducing quantization errors lies in addressing the quantization of cherry parameters.

The parameter heterogeneity also explains the previously discovered effectiveness of mixed-precision quantization strategies [6; 12; 17; 18]. By preserving a small proportion of parameters with high precision, the quantization performance can be effectively improved. Based on the heterogeneity, this strategy alleviates the impact of cherry parameters on model performance by maintaining their precision.

Indeed, mixed-precision strategies can effectively address the quantization error issue of cherry parameters. However, the core challenge lies in identifying cherry parameters based on specific metrics. Different metrics of parameter effects include weights [6; 13; 18], activations [17; 24], output changes , as well as the impact of parameters on model loss used in this paper. Based on the parameter heterogeneity, we argue that effective cherry parameter identification metrics should exhibit high heterogeneity, clearly distinguishing between cherry parameters and normal parameters. Accordingly, we compare three different metrics in Sec 5 and find that the impact best distinguishes cherry parameters from normal parameters. The experimental results in Sec 6.5 verify that choosing metrics with higher discriminative capability indeed leads to better performance.

Based on the above analysis, we design the CherryQ quantization algorithm, which selects cherry parameters based on the impact metric and end-to-end optimizes parameters with mixed precisions. Extensive experiments on various models and benchmarks demonstrate the effectiveness of CherryQ. It consistently yields the lowest perplexity in most settings. Notably, our 3-bit Vicuna-1.5 model

Figure 1: Scatter plot of parameter impacts in different LLMs. We randomly sampled 4096 parameters from the corresponding parameter matrix. Each point represents the impact of an individual parameter. Insets show the zoomed-in y-axis. The heterogeneity is found across different model scales (0(a)0(b)), different model families (0(c)0(d)), and both base models and chat models (0(e)0(f)).

exhibits performance on par with the 16-bit counterpart on Vicuna-bench . Our 2-bit quantization method significantly outperforms the SOTA approaches.

In summary, by systematically revealing parameter heterogeneity in LLMs, we answer the following questions:

1. _What causes the high robustness of LLMs to quantization?_ It is due to the 99% of normal parameters in parameter heterogeneity.
2. _Why is mixed-precision quantization effective?_ This strategy addresses the quantization problem of the very few cherry parameters in parameter heterogeneity.
3. _How to find the optimal mixed-parameter selection strategy?_ Based on heterogeneity that distinguishes normal parameters from cherry parameters, the impact-based metric demonstrates the highest discriminative capability.
4. _How to quantize parameters according to parameter heterogeneity?_ We propose CherryQ based on these findings. Extensive empirical results verify its effectiveness in 2-, 3-, 4-bit quantization.

## 2 Related Work

**Quantization Strategies for LLMs** Various quantization strategies have been proposed in the literature to reduce the precision of weights and activations while maintaining acceptable accuracy. These strategies can be broadly classified into post-training quantization and quantization-aware training . Post-training quantization methods, such as OBD, OBS, and GPTQ, directly quantize the pre-trained model without fine-tuning [15; 10; 9]. On the other hand, quantization-aware training methods, such as LLM-QAT , incorporate quantization operations into the training process to jointly optimize the quantized model. Some works also explore mixed-precision quantization  and adaptive quantization bins  to achieve a better trade-off between accuracy and efficiency.

**Outliers in Language Model Quantization** The idea of modeling parameter outliers in LLM quantization is not new. Exploring outliers mainly includes the perspectives of magnitude [18; 7] and activations [4; 6]. For example, from the magnitude perspective, QLoRA assumes that parameters follow a Gaussian distribution  and designs information-theoretically optimal quantized bins based on this assumption.  keeps outlier parameters in 16-bit precision. From the activation perspective,  migrates the outlier amplifier to subsequent modules through an equivalent transformation. Additionally, SqueezeLLM also measures outliers from the perspective of parameter impact . To the best of our knowledge, our work is the first to systematically reveal the outliers (heterogeneity) of parameter impact across different models, and we show a more pronounced imbalance in parameter impacts compared to magnitudes (SS 6.5). Furthermore, we propose a method to unify outlier (cherry) parameter optimization and normal parameter optimization, addressing the optimization challenges of heterogeneous parameters.

## 3 Quantifying the Impact of Parameters on Model Performance

The impact of parameters on model performance is quantified by the increase of the training loss when perturbing the parameter weight, which is widely used in post-training quantization approaches [15; 10; 9]. We adopt a second-order Taylor approximation of the training loss w.r.t. parameter perturbation. Given a parameter \(w_{i}\) and a small perturbation \(\) applied to it, such that \(w_{i} w_{i}+\), the change in the training loss can be expressed as:

\[(w_{i}+)-(w_{i})=g_{i}+_ {ii}^{2}+O(^{2})\] (1)

where \(g_{i}=[}]\) represents the expected gradient of the loss with respect to \(w_{i}\), and \(_{ii}=[L}{ w_{i}^{2}}]\) denotes the \(i\)-th value of the Hessian matrix of the loss. Since the target model is a well-converged model, we can assume that \(g_{i} 0\), simplifying the expression to:

\[(w_{i}+)-(w_{i})_{ii} ^{2}\] (2)Therefore, \(_{ii}\) quantify the impact of quantization-induced perturbations on the model's training loss. Parameters with larger values of \(_{ii}\) exhibit higher sensitivity to quantization and require careful treatment to maintain model performance. We denote \(_{ii}\) as the impact of \(w_{i}\).

**Efficient Computation** Computing \(_{ii}\) of the diagonal of Hessian matrix for each parameter is computationally expensive, particularly for large-scale models. To overcome this challenge, we propose an efficient approximation using the Fisher Information Matrix (\(\)). Since \(\) is the Hessian matrix of a negative log-likelihood loss, \(\) is equal to Fisher information matrix . For the diagonal of the Hessian matrix, we have:

\[_{ii}=_{ii}=[g_{i}^{2}]\] (3)

## 4 End-to-End Mixed-Precision Quantization

The insights gained from Figure 1 highlight the heterogeneity in model parameters. To mitigate the impact of cherry parameters on quantization, we propose to preserve their high-precision values during the quantization process. By maintaining the fidelity of these critical parameters, we ensure that the essential information they capture is not compromised.

Optimizing mixed-precision parameters in LLMs presents a unique challenge in the widely adopted Post-Training Quantization (PTQ) framework . If we do not allow the updates of the cherry parameters, the quantization will certainly lose the flexibility provided by these critical parameters. This prevents the cherry parameters from reaching their optimum. On the other hand, PTQ struggles to simultaneously optimize high-precision cherry parameters and low-precision normal parameters. This is because the cherry parameter updates during the PTQ process significantly affect the optimal values of the normal parameters. So normal parameters need to be continually updated as the cherry parameter varies. However, in PTQ, once the normal parameters are quantized, they cannot be further updated. This prevents the early-stage quantized parameters from reaching their optimal values.

To address this challenge, we propose a novel approach that end-to-end optimize the mixed-precision parameters via backpropagation. Our method leverages a quantization-aware training framework. To simultaneously optimize both the cherry parameters and normal parameters, we use two separate backpropagation strategies. The high-precision cherry parameters are updated using standard gradient descent, while the low-precision normal parameters employ the Straight-Through Estimator (STE) trick  for low-precision gradient descent. This unified backpropagation enables the end-to-end optimization of both cherry parameters and normal parameters, enhancing the overall optimization effect. We show the quantization in Algorithm 1.

```
0: Model parameters \(\), quantization function \(Quant()\), threshold \(\), learning rate \(\)
0: Quantized model parameters
1:\(\{w_{i}_{ii}>\}\)\(\) Identify cherry parameters
2:\(\)\(\) Identify normal parameters
3:for each training batch \(x\)do
4:\(L(x; Quant())\)\(\) Compute loss w.r.t. mixed-precision parameters
5:\(-}\)\(\) Standard gradient descent for cherry parameters
6:\(-(})\)\(\) Gradient approximation by STE for normal parameters
7:endfor
8:return\( Quant()\) ```

**Algorithm 1** CherryQ

## 5 Heterogeneity-based Cherry Parameter Selection

Correctly identifying cherry parameters is one of the main challenges of CherryQ quantization. Candidate metrics for parameter influences include weights [13; 18; 6], activations [17; 24], and impacts (\(_{ii}\)). We propose that an effective metric should reflect heterogeneity, specifically by differentiating the influence of cherry parameters and normal parameters of the model.

To this end, we define the heterogeneity score. In Figure 1, a small subset of parameters exhibit significantly higher impacts compared to the maximum of the majority. Inspired by this, the heterogeneity score is defined as the ratio of the _mean_ impact of the top 1% parameters to the _maximum_ impact of the bottom 99% parameters, as shown in Equation (4). A higher heterogeneity score indicates a more significant disparity in parameter importance.

\[(f)=(f(w_{i}))}{(f(w_{i}))}\] (4)

where \(f(w_{i})\) denotes the parameter influence for parameter \(w_{i}\), and \(f\) is chosen from parameter weights, activations, and impacts.

Figure 2 presents the heterogeneity scores for different metrics across various LLMs. The impact-based metric consistently shows higher heterogeneity scores compared to weights and activations. This indicates that the impact metric better distinguishes between the normal and cherry parameters, thus providing a more effective means of identifying cherry parameters. The validity of using heterogeneity scores for cherry parameter selection will be further verified in Sec 6.5, demonstrating that higher heterogeneity scores lead to better model performance.

**Data Independence** We investigate whether impact-based parameter heterogeneity exhibits data independence - that is, whether different data samples share the same cherry parameters. Applying identical cherry parameters across different samples is only valid when there is data independence. To examine data independence within the same dataset, we randomly selected five sets of 128 WikiText-2 samples. We evaluated the overlap of their cherry parameters in each pair of sample sets. To evaluate cross-dataset data independence, we performed 9 independent sampling trials, each collecting 128 samples from C4 and 128 samples from WikiText-2 to evaluate the overlap. For Vicuna, we further added Sharegpt as a data source. Table 1 presents the overlap ratios of the cherry parameters. Despite the fact that cherry parameters constitute only \(1/256\) of the total parameters, all models demonstrate significant overlap ratios. This finding suggests that the cherry parameters possess an inherent data-independent nature.

## 6 Quantization Experiments

### Implementation Details

**Parameter Representation:** Based on the observation that cherry parameters occupy a very small proportion, for each row of parameters in each parameter matrix, we consider only the top 1/256

Figure 2: Scatter distribution of heterogeneity scores for different parameter matrices in LLMs. Each point represents a parameter matrix.

parameters with the highest impact as cherry parameters and retain their FP16 precisions. For example, the parameter matrix size of LLaMA2-7B is \(4096 4096\). So we average the impact across all rows for each column and then select the top \(16\) columns with the highest average impact, resulting in \(16 4096\) parameters as cherry parameters. Furthermore, to recover the complete parameter matrix, an INT16 is required to record the indices of these \(16\) columns. Thus, the storage overhead for the column indices is minimal. For normal parameters, we employ _full range symmetric MinMax quantization_ to quantize their weights. And we adopt a widely-used parameter grouping strategy. For more details, see Sec C.

**Quantization Datasets:** For the quantization of the base LLMs, we follow  to use C4  as the training data. We selected the first four partitions of C4 and chose data with a length of \( 2048\) tokens, resulting in a total of 50k samples of 2048 tokens. For the chat LLMs, since Vicuna-1.5  is obtained by supervised fine-tuning based on ShareGPT , we also use the ShareGPT dataset for training. We used a total of 20k training samples from ShareGPT for QAT and Cherry.

**Baselines** We compare our method with various quantization methods, including QAT , GPTQ , SqueezeLLM , OmniQuant , and AWQ . For OmniQuant and AWQ, we use their results reported in . For SqueezeLLM, we use the results in its original paper . For GPTQ, its 4-bit model is obtained from the open-source 2. Due to the lack of a 3-bit GPTQ model, we quantize the model ourselves via the implementation of Auto-GPTQ 3. Since CherryQ is based on QAT, for fair comparisons, the implementation of QAT is the same as CherryQ, except that it does not handle cherry parameters.

### Effect of Base LLM Quantization

In this section, we present the main experimental results to demonstrate the effectiveness of CherryQ on LLaMA2 . We evaluate CherryQ with both perplexity and downstream tasks, comparing its performance with state-of-the-art quantization methods.

#### 6.2.1 Perplexity Results

We follow [9; 21] to evaluate the perplexity of CherryQ on two widely used corpora: C4 and WikiText-2 . We use the validation split of C4 to avoid data leakage. We show the results of 3-bit quantization using different quantization approaches in Table 2. We show the results of different model scales and different group sizes.

From the results, CherryQ consistently outperforms all other approaches across both model sizes (7B and 13B) and grouping sizes (64 and 128), achieving the lowest perplexity on both the C4 and WikiText-2 datasets. Notably, CherryQ's perplexity is significantly closer to the full-precision (FP16) baseline compared to other methods, highlighting its ability to preserve model performance after quantization.

Table 3 compares different 4-bit quantization methods. Again, CherryQ achieves the lowest perplexity scores in most settings, demonstrating its effectiveness in higher-bit quantization settings.

#### 6.2.2 Downstream Task Performance

To further validate the effectiveness on specific tasks, we evaluated the quantized models on various downstream tasks from the HuggingFace OpenLLM Leaderboard. Table 4 presents the performance comparison of different 3-bit quantization methods for LLaMA2. **CherryQ consistently outper

  
**Model** & **L2-7B** & **L2-13B** & **V-7B** & **V-13B** & **M-7B** & **G-7B** \\  Within dataset & 84 & 75 & 68 & 63 & 89 & 90 \\ Across datasets & 68 & 66 & 65 & 60 & 85 & 86 \\   

Table 1: Overlap ratio (%) of cherry parameters (top 1/256), where L2: LLaMA-2, V: Vicuna-1.5, M: Mistral, G: Gemma.

forms other methods across almost all tasks, achieving the highest average score. This showcases CherryQ's ability to maintain the model's generalization capabilities for downstream tasks.

### Effect of Chat LLM Quantization

We conducted experiments on Vicuna-1.5 . We apply 3-bit quantization with group size=128 for CherryQ and other baselines.

**Evaluation** To assess the performance of quantized open-ended chat models, we employ a pairwise comparison on the Vicuna-bench , which consists of 80 test samples. We compare the responses generated by the quantized models against those generated by the original 16-bit Vicuna-1.5. The evaluation is performed using GPT-4, which automatically classifies the quantized model's response as "win", "tie", or "lose" relative to the FP16 model's response. To get rid of the ordering effect of the evaluation, we follow  to compare the responses with both orders, resulting in 160 trials.

Figure 3 presents the results of the pairwise comparison for each quantized model against its FP16 counterpart. The results demonstrate that CherryQ consistently outperforms other quantization baselines in preserving the performance of chat models. It achieves the highest number of wins and ties against the FP16 models, while minimizing the number of losses.

Notably, **3-bit CherryQ achieves a slightly better win-tie-lose ratio over the FP16 Vicuna model**, indicating that the 3-bit quantized model performs on par with or even better than the FP16 model. As intuitively CherryQ cannot surpass the target 16 bit model, we think the result suggests that CherryQ maintains almost all its performance even at 3 bit, making GPT-4 hard to distinguish the quality of low-bit and FP16 models.

### Extreme 2-Bit Quantization

We further explore the extreme case of 2-bit quantization. Although 2-bit quantization greatly reduces memory requirements for model storage and inference, existing methods still show a significant performance gap compared to their 16-bit counterparts.

   Method & Avg. & 7B-3bit-g128 & Avg. & 7B-3bit-g64 & Avg. & 13B-3bit-g128 & Avg. & 13B-3bit-g64 \\  & bit & c4 & wiki2 & bit & c4 & wiki2 & bit & c4 & wiki2 \\  FP16 & 16 & 6.97 & 5.47 & 16 & 6.97 & 5.47 & 16 & 6.47 & 4.88 & 16 & 6.47 & 4.88 \\ QAT & 3.13 & 9.25 & 6.90 & 3.25 & 8.74 & 7.13 & 3.13 & 7.19 & 5.63 & 3.25 & 7.02 & 5.48 \\ GPTQ & 3.15 & 8.28 & 6.74 & 3.30 & 8.20 & 6.62 & 3.15 & 7.24 & 5.63 & 3.30 & 7.10 & 5.56 \\ AWQ & 3.15 & 7.84 & 6.24 & - & - & - & 3.15 & 6.94 & 5.32 & - & - & - \\ OmniQuant & 3.15 & 7.75 & 6.03 & - & - & - & 3.15 & 6.98 & 5.28 & - & - & - \\ SqueezeLLM & - & - & - & 3.24 & 7.51 & 5.96 & - & - & - & 3.24 & 6.82 & 5.23 \\
**CherryQ** & 3.17 & **7.39** & **5.93** & 3.30 & **7.34** & **5.87** & 3.17 & **6.80** & **5.26** & 3.29 & **6.76** & **5.21** \\   

Table 2: Perplexity (\(\)) of 3-bit quantization on LLaMA2 models. gX means the group size is X. The results of OmniQuant and AWQ are from .

   Method & Avg. & 7B-3bit-g128 & Avg. & 7B-3bit-g64 & Avg. & 13B-3bit-g128 \\  & bit & c4 & wiki2 & bit & c4 & wiki2 \\  FP16 & 16 & 6.97 & 5.47 & 16 & 6.47 & 4.88 \\ QAT & 4.13 & 7.29 & 5.81 & 4.13 & 6.67 & 5.12 \\ GPTQ & 4.15 & 7.30 & 5.73 & 4.15 & 6.63 & 4.97 \\ AWQ & 4.15 & 7.13 & 5.62 & 4.15 & 6.56 & 4.97 \\ OmniQuant & 4.15 & 7.12 & 5.58 & 4.15 & 6.56 & **4.95** \\
**CherryQ** & 4.17 & **7.07** & **5.58** & 4.16 & **6.56** & 4.99 \\   

Table 3: Perplexity (\(\)) of 4-bit quantization on LLaMA2 models.

**Implementation Details** To achieve high-quality 2-bit quantization, we integrated the scaling-up trick introduced in . Specifically, after identifying cherry and normal parameters, we automatically search for the optimal scale of each column of normal parameters that minimizes the output difference after quantization for each layer. The quantization function is formulated as \(Q^{}(w)=Q(w s)/s\), where \(Q()\) represents standard asymmetric quantization on the min-max grid, and \(s\) is a constant that scales up the normal parameters and remains fixed during the training process. The cherry parameters are excluded from quantization and retain their 16-bit precision throughout the grid search.

**Results** Table 6 presents the perplexities of 2-bit quantization on LLAMA2 models. Compared to existing methods such as GPTQ, AWQ, and OmniQuant, our proposed CherryQ method demonstrates superior performance across all metrics. Specifically, CherryQ achieves perplexity scores of 9.55

   Method & Hellaswag & Winogrande & ARC & TruthfulQA & GSM8K & MMLU & Average (\(\)) \\   \\  FP16 & 78.6 & 74.0 & 53.2 & 38.8 & 14.5 & 46.7 & 51.0 \\ QAT & 75.5 & 71.6 & 49.2 & 37.3 & 7.3 & 40.6 & 46.9 \\ GPTQ & 73.9 & 71.7 & 48.6 & 38.8 & 8.1 & 39.4 & 46.8 \\
**CherryQ** & **77.0** & **71.8** & **50.6** & **38.6** & **10.4** & **43.9** & **48.7** \\   \\  FP16 & 78.6 & 74.0 & 53.2 & 38.8 & 14.5 & 46.7 & 51.0 \\ QAT & 75.4 & 70.8 & 48.2 & 37.7 & 6.7 & 39.0 & 46.3 \\ GPTQ & 72.9 & 70.8 & 48.6 & 39.1 & 5.4 & 38.2 & 45.8 \\
**CherryQ** & **76.3** & **72.4** & **49.7** & **38.1** & **8.8** & **41.6** & **47.8** \\   \\  FP16 & 82.1 & 76.6 & 59.4 & 37.4 & 22.5 & 55.7 & 55.6 \\ QAT & 80.7 & 75.1 & 55.5 & **39.0** & 16.8 & 52.9 & 53.3 \\ GPTQ & 79.2 & 74.4 & 56.5 & 36.0 & 16.4 & 52.4 & 52.5 \\
**CherryQ** & **81.1** & **76.2** & **57.3** & 38.0 & **18.4** & **53.5** & **54.1** \\   \\  FP16 & 82.1 & 76.6 & 59.4 & 37.4 & 22.5 & 55.7 & 55.6 \\ QAT & 80.7 & **75.5** & 55.3 & 38.8 & 16.0 & 51.9 & 53.0 \\ GPTQ & 79.1 & 75.4 & 54.1 & 34.9 & 15.6 & 50.3 & 51.6 \\
**CherryQ** & **81.0** & 75.4 & **56.7** & **38.9** & **17.8** & **52.5** & **53.7** \\   

Table 4: Performance of different 3-bit quantization methods on Huggingface OpenLLM for LLaMA2-7B and LLaMA2-13B.

   Method & Hellaswag & Winogrande & ARC & TruthfulQA & GSM8K & MMLU & Average (\(\)) \\   \\  FP16 & 78.6 & 74.0 & 53.2 & 38.8 & 14.5 & 46.7 & 51.0 \\ QAT & 77.5 & 72.2 & **52.0** & 39.0 & 10.6 & 43.7 & 49.2 \\ GPTQ & 77.6 & 72.9 & **52.0** & 39.1 & 11.1 & 43.8 & 49.4 \\
**CherryQ** & **77.8** & **73.5** & 51.5 & **39.5** & **12.9** & **44.4** & **49.9** \\   \\  FP16 & 82.1 & 76.6 & 59.4 & 37.4 & 22.5 & 55.7 & 55.6 \\ QAT & 81.9 & 75.7 & 57.9 & **38.9** & 19.6 & 54.2 & 54.7 \\ GPTQ & 81.5 & 76.8 & 57.4 & 36.1 & 20.4 & 54.6 & 54.5 \\
**CherryQ** & **82.0** & **77.0** & **58.6** & 38.8 & **21.0** & **54.6** & **55.3** \\   

Table 5: Performance comparison of different 4-bit quantization methods for LLaMA2-7B and LLaMA2-13B models over Huggingface OpenLLM Leaderboard.

and 8.34 in the 7B-3bit-g128 and 7B-3bit-g64 settings, respectively. These results significantly outperform other methods, validating the effectiveness of CherryQ in 2-bit quantization.

### Comparison of Parameter Selection Criteria

To evaluate the effectiveness of our proposed impact-based parameter selection criterion, we conducted experiments comparing it with the criterions of parameter weights and activations. Table 7 presents the perplexity of LLaMA2-7B-3bit and LLaMA2-13B-3bit models, using both criteria for cherry parameter selection.

From the results, it is evident that the impact-based criterion consistently outperforms other criterions across all settings. These results demonstrate that our proposed impact-based criterion is a more effective measure to identify cherry parameters. The impacts identify and preserve the most critical parameters during the quantization process. These results are consistent with the analysis in Sec 5 regarding the effectiveness of heterogeneity scores in selecting cherry parameters.

   Method & Avg. & 7B-2bit-g128 & Avg. &  & Avg. &  & Avg. &  \\   & bit & c4 & wiki2 & bit & c4 & wiki2 & bit & c4 & wiki2 & bit & c4 & wiki2 \\  FP16 & 16 & 6.97 & 5.47 & 16 & 6.97 & 5.47 & 16 & 6.47 & 4.88 & 16 & 6.47 & 4.88 \\ GPTQ & 2.15 & 33.70 & 36.77 & 2.30 & 19.40 & 20.85 & 2.15 & 20.97 & 28.14 & 2.30 & 12.48 & 22.44 \\ AWQ & 2.15 & \(>10^{5}\) & \(>10^{5}\) & 2.30 & \(>10^{5}\) & \(>10^{5}\) & 2.15 & \(>10^{4}\) & \(>10^{5}\) & 2.30 & \(>10^{4}\) & \(>10^{5}\) \\ OmniQuant & 2.15 & 15.02 & 11.06 & 2.30 & 12.72 & 9.62 & 2.15 & 11.05 & 8.26 & 2.30 & 10.05 & 7.56 \\
**CherryQ** & 2.19 & **9.55** & **8.34** & 2.34 & **9.08** & **7.84** & 2.19 & **8.40** & **7.20** & 2.33 & **8.02** & **6.72** \\   

Table 6: Perplexity (\(\)) of 2-bit quantization on LLaMA2 models. The results of GPTQ, AWQ and OmniQuant are from .

   Method & LLaMA2-7B-3bit & LLaMA2-13B-3bit \\   & c4 & wiki2 & c4 & wiki2 \\  Weight-g64 & 7.93 & 6.40 & 6.91 & 5.35 \\ Activation-g64 & 7.37 & 5.89 & 6.77 & 5.22 \\
**Impact-g64** & **7.34** & **5.87** & **6.76** & **5.21** \\  Weight-g128 & 8.12 & 6.58 & 6.94 & 5.37 \\ Activation-g128 & 7.51 & 6.03 & 6.81 & 5.27 \\
**Impact-g128** & **7.39** & **5.93** & **6.80** & **5.26** \\    
   Method & LLaMA2-7B-4bit & LLaMA2-13B-4bit \\  Weight-g128 & 7.19 & 5.68 & 6.62 & 5.05 \\ Activation-g128 & 7.09 & 5.59 & 6.56 & 5.00 \\
**Impact-g128** & **7.07** & **5.58** & **6.56** & **4.99** \\   

Table 7: Perplexity (\(\)) of different parameter selection criteria.

Figure 3: Comparison of 3-bit quantized models to FP16 Vicuna-1.5. (Left) Comparisons to Vicuna-1.5-7B. (Right) Comparisons to Vicuna-1.5-13B. CherryQ even shows competitive quality compared to the 16-bit counterpart.

Conclusion

In this paper, we systematically investigated the phenomenon of parameter heterogeneity in large language models (LLMs). Our experiments on LLAMA2, Mistral, Gemma, and Vicuna models consistently demonstrated that a small subset of parameters, referred to as "cherry" parameters, play a crucial role in maintaining the model's performance, while the vast majority of parameters can be quantized to ultra-low precision without significant degradation. This finding highlights the potential of the heterogeneous nature of parameter importance.

Motivated by this observation, we proposed a novel CherryQ quantization algorithm, which uses a quantization-aware training framework for the end-to-end optimization of both cherry parameters and normal parameters. Extensive experiments demonstrate that CherryQ achieves significantly lower perplexity scores and better downstream performance.

## 8 Limitations

There are some limitations to consider. First, the method relies heavily on the accurate identification of cherry parameters, which may vary across different model architectures and training datasets. This dependency could potentially limit the generalization ability of CherryQ to new or unseen models. Second, the computational overhead required for the impact-based identification and scaling of parameters, although justified by the performance gains, may pose challenges for extremely large models or those deployed in real-time systems with stringent latency requirements.