# Unlocking the Capabilities of Thought:

A Reasoning Boundary Framework to Quantify and Optimize Chain-of-Thought

 Qiguang Chen\({}^{}\) Libo Qin\({}^{}\) Jiaqi Wang\({}^{}\) Jinxuan Zhou\({}^{}\) Wanxiang Che\({}^{}\)\({}^{}\)

\({}^{}\) Research Center for Social Computing and Information Retrieval

\({}^{}\) Harbin Institute of Technology

\({}^{}\) School of Computer Science and Engineering, Central South University

\({}^{}\) The Chinese University of Hong Kong

{qgchen,car}@ir.hit.edu.cn, lbqin@csu.edu.cn

Corresponding Author

###### Abstract

Chain-of-Thought (CoT) reasoning has emerged as a promising approach for enhancing the performance of large language models (LLMs) on complex reasoning tasks. Recently, a series of studies attempt to explain the mechanisms underlying CoT, aiming to deepen the understanding of its efficacy. Nevertheless, the existing research faces two major challenges: (1) _a lack of quantitative metrics to assess CoT capabilities_ and (2) _a dearth of guidance on optimizing CoT performance_. Motivated by this, in this work, we introduce a novel reasoning boundary framework (RBF) to address these challenges. To solve the lack of quantification, we first define a reasoning boundary (RB) to quantify the upper-bound of CoT and establish a combination law for RB, enabling a practical quantitative approach applicable to various real-world CoT tasks. To address the lack of optimization, we propose three categories of RBs. We further optimize these categories with combination laws focused on RB promotion and reasoning path optimization for CoT improvement. Through extensive experiments on 27 models and 5 tasks, the study validates the existence and rationality of the proposed framework. Furthermore, it explains the effectiveness of 10 CoT strategies and guides optimization from two perspectives. We hope this work can provide a comprehensive understanding of the boundaries and optimization strategies for reasoning in LLMs. Our code and data are available at https://github.com/LightChen233/reasoning-boundary.

## 1 Introduction

In recent years, Large Language Models (LLMs) have demonstrated increasing capabilities and applications across various tasks . Notably, advanced LLMs, such as GPT , PaLM  and LlaMa  series have demonstrated emergent capabilities, particularly like Chain-of-Thought (CoT) . This methodology enables models to verbalize step-by-step reasoning, thereby enhancing prediction accuracy by basing decisions on the logical rationale .

Recently, some research in the literature has begun to investigate the mechanism of CoT to enhance the understanding of its operational nature. To this end,  and first give a qualitative boundary conclusion through a large number of experiments on the natural language planning capability: The CoT is limited by the reasoning logic in the context demonstrations. Bi et al. (2024) investigate these boundaries on the code planning capability, by training LLMs on CoT samples of varying difficulties. It demonstrates LLMs are unable to learn or effectively manage tasks that exceed a certain complexity upper-bound. To delve deeper into potential constraints of CoT, Feng et al. (2024) develop a theoretical framework on the single-step calculation capability, suggesting that there is an upper-bound of model performance dependent on the length of input in single-step reasoning processes. Although existing research has made some progress, where the boundaries of CoT lie and how these boundaries affect the performance of CoT are still unresolved questions. Specifically, the existing work still faces two major challenges:

* **Lacking quantification metrics for CoT:** Current research primarily relies on qualitative assessments of CoT performance, which leads to the absence of quantitative metrics. It hinders the ability to objectively compare different CoT approaches and establish a definitive upper-bound for CoT capabilities.
* **Lacking optimization guidance for CoT:** While current research prioritizes understanding the mechanisms underlying CoT reasoning, there is a dearth of guidance on optimizing CoT performance. This gap hinders the transformation of CoT research into actionable strategies for enhancing model capabilities.

Motivated by this, in this work, we introduce a reasoning boundary framework (RBF) to thoroughly examine and optimize the boundaries of current LLMs. Specifically, to address the quantification challenge, we propose a new concept, named reasoning boundary (RB) to quantify the upper-bound on task-specific reasoning complexity within a model. Furthermore, to explore more practical scenarios, we present the combination law of RBs to generalize the RB for quantification in more real and complex scenarios. To address the CoT optimization challenge, we propose and analyze three reasoning boundary intervals, guiding optimization through improved RB and optimized reasoning paths based on the combination law, which achieves state-of-the-art performance in our proposed benchmark. We extensively validate the efficacy of our framework across 27 models and 5 tasks: arithmetic computing, mathematical reasoning, multi-hop question answering, and multilingual mathematical reasoning.

Our main contributions are as follows:

* To the best of our knowledge, this is the first work to propose a reasoning boundary framework (RBF) to quantify the upper-bound of CoT. Furthermore, we establish the combination law of RB as the weighted harmonic mean of fundamental RBs to address practical CoT tasks.
* To solve the lack of CoT optimization, we define three categories of RBs. Based on the combination law and the nature of these RBs, we effectively improve the existing CoT strategies by RB promotion and reasoning path optimization.
* We validate the existence and rationality of our framework on 27 models and 5 CoT tasks. Furthermore, we explain the optimal performance from two optimization perspectives in numerous CoT strategies. We consider both optimal perspectives and propose a minimum acceptable reasoning path (MARP) prompting to achieve state-of-the-art performance.

## 2 Quantification Methodology

### Reasoning Boundary

In order to quantify the capacity for complex reasoning in LLMs, we introduce an upper-bound concept termed reasoning boundary (RB), which formally defines the degree of ease that an LLM can handle within a specific reasoning process. In simpler terms, as shown in Figure 1 (a), RB reflects the limit beyond which a model's accuracy significantly degrades. Mathematically, RB is defined for a model \(m\) and a task \(t\) as the maximum of problem difficulty \(d\) at which the model's accuracy reaches a predefined threshold \(K_{1}\):

\[_{Acc=K_{1}}(t|m)=_{d}\{d|Acc(t|d,m) K_{1}\},\] (1)

where \(Acc(t|d,m)\) represents the accuracy of the model's accuracy on task \(t\) with difficulty \(d\). Difficulty can be measured by factors like the number of reasoning steps or computational complexity. For brevity, we denote RB as \((t|m)\) in subsequent sections.

**Conclusion:** The reasoning boundary for a model is defined by its ability to achieve a specific accuracy for a given task difficulty.

### Combination Law of Reasoning Boundary

In practical scenarios, models often require the integration of multiple capabilities to address a single task effectively. To quantify how a large language model can be boosted by the cooperation of multiple capabilities through the CoT mechanism, we introduce the _"Combination Law of RB"_, giving a concrete formula of the upper-bound of the CoT. The law estimates the unified reasoning boundary \(_{=K_{1}}(t_{1},t_{2},,t_{n}|m)\) for \(n\) tasks within a model \(m\), which is formulated as:

\[_{=K_{1}}(t_{1},t_{2},,t_{n}|m)^{n}}{_{=K_{1}}(t_{i}|m)-b_{i}}},\] (2)

where \(_{=K_{1}}(t_{i}|m)\) denotes the reasoning boundary of model \(m\) for task \(t_{i}\). \(N_{i}\), and \(b_{i}\) are scaling factors, which are only affected by the related task. As shown in Figure 1 (b), Equation (2) provides a mathematical formula to estimate the combined RBs from the independent ones, enabling deeper insights into model behavior for intricate tasks. See Appendix A for detailed mathematical analysis.

Furthermore, the combination law for reasoning boundary demonstrates favorable theoretical properties, with broad applicability across diverse scenarios and flexibility in accommodating various boundary segmentation methods. For detailed practical application, please refer to Appendix B.

**Conclusion:** The combination law of reasoning boundary satisfies the weighted harmonic average of each basic reasoning boundary.

### Categories of Reasoning Boundary

Furthermore, in order to guide the optimization of CoT and more convenient expression, as shown in Figure 1 (c), we define the following three categories of RBs based on their empirical accuracy:

**Completely Feasible Reasoning Boundary:** We define that the part with an accuracy greater than 90% is a completely feasible reasoning boundary (\(=_{ 90\%}(t_{1},t_{2},,t_{n}|m)\)), which means that LLMs can effectively grasp the performance of this part.

**Completely Infeasible Reasoning Boundary:** We believe that the part with an accuracy less than 10% is a completely infeasible reasoning boundary (\(=_{ 10\%}(t_{1},t_{2},,t_{n}|m)\)), which means that the model can never effectively grasp the performance of this part.

**Partially Feasible Reasoning Boundary:** We define the RB in the rest part except \(\) and \(\) as a partially feasible reasoning boundary (\(=_{10\%<90\%}(t_{1},t_{2},,t_{n}|m)\)), which requires the model to repeat thinking or more clear information to solve the problem.

Figure 1: Overview of the introduced concepts.

We analyze the nature of these three categories of RB in detail (in Section 4.3), and further utilize the combination law to optimize these three reasoning boundaries (in Section 5), so as to provide effective suggestions and guidance to support future CoT optimization.

## 3 Experimental Setup

Benchmark SettingsTo assess the reasoning boundaries of LLMs, we require a dataset rich in RB. This necessitates tasks with evenly distributed complexities and reasoning steps that challenge the models' upper-bounds. To meet these requirements, we introduce BigGSM, a new dataset offering greater calculation complexity and longer reasoning chains. The detailed construction process for BigGSM is provided in Appendix C.

Model SettingsExcept for model expansion experiments, all experiments are conducted on GPT-3.5-Turbo. Following the setting of Wei et al. (2022), in our CoT experiment, all multi-step reasoning tasks utilize three manually constructed demonstrations. In addition, for all the experiments, top-p is selected from \(\{0.95,1\}\). Temperature is selected from \(\) and serves as the main error variable.

## 4 Empirical Analysis of Reasoning Boundary

### Existence Verification for Reasoning Boundary

In this study, we investigate the hypothesis that an LLM exhibits varying levels of reasoning boundary across various tasks. To this end, we will verify whether the model has widespread reasoning boundary in various tasks in the following three tasks:

Basic Arithmetic CalculationFirst, to investigate the existence of RB, we first examine basic arithmetic operations (including addition, subtraction, multiplication, and division). As illustrated in Figure 2 (a), the results reveal significant performance variations across three distinct regions. For multiplication, accuracy surpasses 90% for results up to \(2.2e5\). Conversely, accuracy falls below 10% for products exceeding \(2e6\). Similar presences of varying RBs are observed for other operations, which verifies the existence of reasoning boundary in basic arithmetic calculation tasks. Further results and implementation details are provided in Appendix D.

Nature Language PlanningWe further investigate RB in natural language planning tasks for mathematical reasoning. We prompt the model to generate plans and assess their accuracy through manual evaluation. There is a strong correlation between the number of reasoning steps and LLMs' performance in Figure 2 (b). When the model meets the question with fewer than 2 reasoning steps, accuracy surpasses 90%. Conversely, when reasoning steps exceed 4, accuracy falls below 10%. This finding suggests that there are also three different RB categories in natural language planning tasks.

Code PlanningFor further extensive exploration, we further prompt LLMs by PAL (Gao et al., 2023) to generate code-format plans and evaluate them by manual annotation. As shown in Figure 2 (c), the code planning task is similar to natural language planning, which is also an obvious division

Figure 2: Existence Verification for Reasoning Boundary. Figures (b, c) present evaluations performed on BigGSM, where the reasoning paths are manually analyzed to identify the specific steps at which errors occur, without considering whether the final conclusions are correct.

and different categories of RBs. Notably, since code planning utilizes code for clearer logic and reduced expression complexity, its planning accuracy surpasses that of natural language planning.

### Combination Law Verification on Different Tasks

Combination Law in Complex Arithmetic CalculationBuilding on the proof of Equation (13), we hypothesize that the combination law for RB in the complex arithmetic calculation is the harmonic average of the arithmetic calculation RB and calculation planning RB. To verify this, we designed an experiment focusing on formulas containing addition, subtraction, and multiplication, like "\((1+2)*3-4\)". Since addition and subtraction complexities are assumed to be around \(1e15\) (as shown in Figure 13), the arithmetic calculation RB primarily depends on the multiplication RB and calculation planning RB. Therefore, as shown in Figure 3 (a), there are two obvious RB lines, namely \(_{Acc=90\%}\) and \(_{Acc=10\%}\), which are completely consistent with the combination law of these basic RB based on the Equation (2). Besides, these two lines also clearly divide the RBs into three categories.

Combination Law in Mathematical ReasoningInspired by Tan (2023); Xiao and Liu (2024), we posit that the natural language mathematical CoT task is determined by two sub-tasks: step planning task and step calculation task for global logic planning and local mathematical calculation. Furthermore, each model output step requires a single basic operation, resulting in a step calculation boundary close to the maximum number of multiplications, denoted by \((c)(m)\). Formally, with step planning RB denoted by (\((p)\)) and the step calculation RB by (\((c)\)), then the combined RB satisfies the following law:

\[^{}(c,p)=}{((c)-b_{1})} +}{((p)-b_{2})}}.\] (3)

As illustrated in Figure 3 (b), the actual performance distribution of RB (including \(_{Acc=90\%}\) and \(_{Acc=10\%}\)) in natural language mathematical reasoning task fully aligns with the proposed combination law in Equation (3). Additionally, there are also obviously three RBs in Figure 3 (b).

Combination Law in Multi-hop ReasoningBeyond the realm of mathematics, we further extend our exploration of the combination law to the field of multi-hop question answering. Specifically, we validate our law on HotpotQA (Yang et al., 2018), where we define the reasoning boundary as the combination of global hop-planning RB and local knowledge entity reasoning RB. As shown in Figure 3 (c), \(_{Acc=90\%}\) and \(_{Acc=10\%}\) also satisfy the weighted harmonic mean of these two sub-reasoning boundaries. It is also proved that, in addition to math-related tasks, multi-hop question answering also satisfies our proposed combined law and also exhibits three distinct RBs. We will describe in detail how to calculate the combination law on multi-hop reasoning in Appendix E.

### Nature Analysis for different Reasoning Boundary

According to the definition of different RBs, we have divided the problem into three parts for LLMs. In this section, we will verify whether the defined RB adheres to the intrinsic nature of the model itself. We will discuss the natures of these RBs in detail:

CFRB **means complete mastery of the model even without demonstration.** According to the definition, we assume that a question within CFRB implies a comprehensive understanding of the

Figure 3: Combination law verification of RB on different tasks. More verification results on other tasks are shown in Figure 12.

associated issue for a certain LLM. To verify this, following Zhang et al. (2022) and Wei et al. (2022), we formulate a mathematical request and generate chain-of-thought rationale and answer through zero-shot prompting without any demonstration. As shown in Figure 4 (a), it still achieves 29.2% improvement in CFRB on generating the correct rationale compared to other RBs. This also proves that the model can indeed master tasks well on the questions in CFRB.

PFRB **means moderate confidence in its solution and needs consensus building process.** To gauge the level of performance and confidence, we draw parallels to human decision-making, where moderate confidence often necessitates multiple times of consensus building. Inspired by this, we investigate it on Self-Consistency (Wang et al., 2022), which integrates results from various reasoning answers to reach a conclusive answer. Figure 4 (b) demonstrates that as the integration of reasoning paths increases, the accuracy improves significantly within PFRB compared with other RBs. This suggests that within PFRB, the LLM exhibits moderate confidence in solving problems, which needs multiple consensus building.

CIRB **exhibits poor reasoning performance even with consensus building.** As illustrated in Figure 4 (a), questions in CIRB display extremely low accuracy (around 9.5%). And the model shows consistently poor performance and no improvement on Self-consistency in this boundary in Figure 4. It signifies that the model exhibits poor reasoning performance.

**LLM has self-awareness of its own RBs.** In parallel, a natural question arises: _Is the model capable of discerning its inherent RBs?_ To investigate this, we employ the Synthetic-CoT (Shao et al., 2023) to prompt LLM to generate CoT data. As depicted in Figure 4 (c), the results demonstrated that there are over 65% of generated samples within CFRB, which achieves a much higher percentage and performance than other RBs. This suggests that LLMs possess an intrinsic understanding of their RBs and constraints to generate the task they grasp, indicative of a potential for self-assessment.

**Takeaways:** (1) Reasoning boundary (RB) and the combination law of RB are both widespread across a series of tasks. (2) Different categories of RB can reflect the corresponding performance, and the model can also have a self-understanding of its own RB.

## 5 RB-based CoT Optimization

### How can we improve CoT by optimizing RB?

Based on our framework, the reasoning boundary limits the performance of the model. The simplest approach to improve CoT is to optimize the step calculation RB \((c)\) to promote the value of RB. Specifically, Tool-Usage (Paranjape et al., 2023) and Program-of-Thought (PoT) (Chen et al., 2024) have shown significant success in CoT optimization. We explain the rationale behind their effectiveness, why PoT consistently outperforms direct Tool Usage (Yao et al., 2023; Chen et al., 2023), and take them as examples to demonstrate how to improve CoT by promoting RB.

Figure 4: Nature analysis at different reasoning boundaries. For Figure (c), all demosntrations in CIRB are special value points obtained by calculation methods similar to \(25000 1000\). In fact, no real CIRB demosntrations are obtained.

**Tool Usage can boost the value of RB for an LLM.** When the model uses tools , we can simply think that the model can perform calculations with infinite precision, so that the RB of mathematical calculations tends to infinity, viz \((c)+\). It is obvious that the combined RB of the model can be calculated as:

\[^{}(c,p)=_{(c)+}(c)-b_{1})}+}{((p)-b_{2})}=(p)-b_{2}}{N_{2}}.\] (4)

Easy to get, \(^{}(c,p)>^{}(c,p)\), this shows that Tool Usage can improve the boundary of reasoning. This explains why Tool Usage can have better performance than vanilla CoT (as shown in Table 1). Furthermore, as shown in Figure 5, the distribution of theoretical RB and the actual one almost perfectly coincide. This also demonstrates the reliability and applicability of our theory.

**Program-of-Thought can further enhance the value of LLM's RB.** Equation (4) reveals that an LLM's RB hinges entirely on its planning capability. Since natural language can be verbose, it hinders the planning capability of LLM . PoT  offers a clearer representation of logic using code, allowing for clearer planning (as shown in Figure 2 (b, c)). This leads to finer-grained planning reasoning \(^{*}(p)>(p)\). Then the PoT reasoning boundary \(^{}(c,p)>^{}(c,p)\), aligning with the observed performance gains of PoT over Tool Usage (see Table 1). Furthermore, Figure 5 visually demonstrates that PoT's theoretical and practical reasoning boundaries consistently outperform Tool Usage. This reinforces the theoretical advantage of PoT and its empirical effectiveness.

### How can we improve CoT based on a certain RB?

Enhancing RB is crucial for optimizing CoT, but requires changes to the model or its reasoning architecture to be effective. Therefore, we need to consider how to optimize the reasoning path so that the difficulty satisfies the RB (\(d^{*}=_{Acc=K_{1}}\)) instead of the original RB (\(d=_{Acc=K_{2}}\)), where \(K_{2}<K_{1}\). According to Equation (3), \(\) is affected by both arithmetical RB and planning RB. Given \(\), we consider optimizing reasoning ability from the following two strategies as examples 2:

**Complex CoT (CCoT):** By increasing the boundary of planning to reduce the pressure of single-step calculation, reduce the arithmetical RB, and then get smaller \(d\); However, it introduces more planning steps, which adds the planning pressure. As shown in Figure 6, the model performance first increases and then decreases with the increasing number of CCoT steps.

**Least-to-Most (LtM):** By dividing multiple sub-questions to reduce the pressure of local planning within a sub-question, reduce the boundary of local planning, and then get smaller \(d\). However, even though it can release local planning pressure (as demonstrated in Figure 7), this approach simultaneously intensifies global planning pressure by generating an excessive number of sub-questions (as depicted in Figure 15).

**Limitation:** (1) CCoT needs to keep balance in the number of reasoning steps and calculation pressure. (2) Although the pressure of local planning has been reduced, LtM has not effectively reduced the pressure of global planning, nor the pressure of optimization calculations.

    &  \\   & Acc. (\(\)) & Input Token (\(\)) & Output Token (\(\)) \\  CoT & 57.00 \(_{0.93}\) & 780.43 & 96.76 \(_{3.22}\) \\   \\  Tool Usage & 71.64 \(_{0.66}\) & 688.43 & 129.53 \(_{3.82}\) \\ PoT & 78.25 \(_{1.09}\) & 657.43 & 78.25 \(_{1.09}\) \\   \\  Least-to-most & 58.25 \(_{3.28}\) & 679.59 & 176.09 \(_{15.22}\) \\ Complex-CoT & 59.78 \(_{0.60}\) & 111.43 & 131.82 \(_{1.91}\) \\  CoT+MRP & 64.37 \(_{2.24}\) & 614.43 & 95.12 \(_{0.77}\) \\ PoT+MRP & **80.55 \(_{2.40}\)** & **576.43** & **76.34** & 12.84 \\   

Table 1: Main experimental results on GPT-3.5-Turbo. Results on different benchmarks are shown in Table 2.

Figure 5: Analysis of the impact of Tool Usage and PoT on reasoning boundary \((c,p)\).

Minimum acceptable reasoning paths prompting can further achieve better CoT within a specific RB.To address the aforementioned two issues, we proposed Minimum Acceptable Reasoning Paths (MARP). Our first objective is to alleviate the computational burden of the model. We achieve this by introducing instructions that set an upper limit on its single-step computational capacity, thereby optimizing the boundary of its computational reasoning. Secondly, we aim to enhance the model's acceptability. Within the calculation and planning boundary, we increase the amount of computation performed in each step in demonstrations as much as possible while simultaneously reducing the number of global planning steps, which effectively mitigates planning pressure. As shown in Table 1, MARP demonstrably improves model performance and effectively reduces the token consumption. By maximizing operations per step, MARP leads to a more streamlined and efficient problem-solving process. Detailed descriptions of this strategy are shown in Appendix G.3.

**Takeaways:** (1) Tool-Usage and PoT can be utilized to optimize CoT by the calculation and planning reasoning boundary optimization. (2) MARP can well lessen planning and calculation pressure by problem optimization in certain RB (3) Users can effectively optimize CoT performance by optimizing the reasoning boundary and the problem.

## 6 Expansion Verification & Exploration

RB can be extended to various models.To extend our mechanism's applicability, we verify the mechanism on 25 diverse models (details in Table 3). As shown in Figure 8 (a), we observe a positive correlation between reasoning boundary and model accuracy on mathematical benchmarks.

Moreover, the models that use mathematical data such as MathInstruct for SFT, often have interesting outliers that are different from the general LLMs' area, but they also satisfy a positive correlation with our RBs (as shown in Figure 8 (b)), which helps determine if the model underwent mathematically targeted training.

However, as shown in Figure 8 (c), we find some interesting phenomena. For example, the main difference between the current open-source model and the closed-source model is still CFRB. Except for the closed source model, the CFRB of all models is 0. It shows the potential and the direction of the model optimization. Furthermore, a scaling law of RB can also emerge (as shown in Figure 9): reasoning boundary increased with model parameter count and data quality.

**RB can be extended to more tasks.** To assess the RB in more tasks, we evaluate them on a multilingual mathematical reasoning task. Inspired by Qin et al. (2024), we hypothesize that multilingual RB, assessed through direct answer accuracy across different languages, mathematical computation RB, represented by the maximum product result, and reasoning planning RB, indicated by the planning steps, are orthogonal dimensions of performance. We propose that these RBs can be effectively combined using a weighted harmonic mean. As illustrated in Figure 10 confirms that the combined RB maintains the expected three different RBs. Detailed implementation description is shown in Appendix I.

## 7 Related Work

In this section, we review recent literature related to Chain-of-Thought (CoT) prompting, focusing on theoretical and empirical investigations. Madaan et al. (2023); Wang et al. (2023); Saparov and He (2023); He-Yueya et al. (2023); Zhang et al. (2024); Wang et al. (2024) and Prystawski et al. (2024) qualitatively show that the LLMs learn the reasoning chain based on the demonstrations in the context. Besides, Lampinen et al. (2022) and Tan (2023) find a causal link between generated intermediate steps and the final answers during a series of qualitative experiments. Wang et al. (2023); Hanna et al. (2024) and Dutta et al. (2024) study neural substructure within the LLMs, embodying CoT reasoning from a white-box mechanism perspective, demonstrating that LLMs deploy multiple parallel answer generation paths internally.

Recently, a large amount of work has demonstrated the upper-bounds and limitations of LLM in various CoT tasks (Qin et al., 2023; Imani et al., 2023; Huang et al., 2024; Sprague et al., 2024). Bi et al. (2024) investigate these bounds on planning capability in code generation by training LLM on CoT samples of varying difficulties. Their findings suggest that LLMs have a limited capacity to learn or manage tasks exceeding a certain complexity threshold. Further understanding of the CoT upper-bound, Merrill and Sabharwal (2023); Li et al. (2023) and Feng et al. (2024) analyze single-step arithmetic capability, which suggests an upper bound on model performance related to input length in single-step reasoning processes.

Despite advancements in CoT explanation for LLMs, significant challenges remain, including the absence of quantifiable metrics for CoT's upper-bounds and the deficiency in optimization guidelines.

To tackle this, we propose a reasoning boundaries framework (RBF) to systematically quantify and optimize various CoT approaches. This framework offers a transferable and user-friendly methodology to enhance model performance from a mechanistic perspective. We anticipate that it will furnish systematic insights for ongoing research and inform future developments in the field.

## 8 Discussion

Discussion on the Boundaries ImprovementsFurthermore, in order to better understand the best existing LLMs, we utilize RBF to test the current most advanced GPT-series models. As shown in Figure 11, all reasoning boundaries improve a lot compared to the last version which also achieves performance enhancement. Notably, the CFRB increases slightly compared with the improvement of CIRB between GPT-3.5 and GPT-4o. But o1 significantly improves the CFRB. Furthermore, as shown in Figure 14 in Appendix, o1 shows extremely significant improvements on CFRB, which is almost three times of other models. We attribute it to the fact that the advanced Reinforce-Learning and Inference Scaling strategies play a key role in improving this part of the ability compared with the normal improvements in CFRB, which might trigger more in-depth research.

Broader impacts.Our framework is the first work to quantify the reasoning upper-bound of LLMs. This enables the explanation for a huge part of the valid CoT framework. We hope that our work can provide new insights and more systematic guidance for future interpretability analysis of CoT. For social impact, this work may have a certain impact on the controllable and explainable AGI.

Limitations & Future.Due to the cost and time constraints, this work does not discuss the complex relationships such as causal conditions among the basic RBs. In addition, evaluating the robustness and applicability of CoT reasoning boundaries-related techniques in dynamic scenarios will be crucial for future research.

## 9 Conclusion

This study introduces a novel reasoning boundaries framework (RBF) to quantify and optimize the limitations of LLMs in CoT tasks. Specifically, we propose the concept of reasoning boundaries (RBs) and the combination law of RBs in more complex scenarios for quantitative metrics. We further introduce three categories of RB for CoT optimizations. The framework is validated through extensive experiments across 27 models and 5 tasks. Furthermore, we improve the CoT in both RB and question optimization perspectives to achieve state-of-the-art performance in BigGSM. We hope that this framework paves the way for further research on understanding and enhancing LLMs' reasoning capabilities.