# On the Minimax Regret for Online Learning

with Feedback Graphs

 Khaled Eldowa

Universita degli Studi di Milano, Milan, Italy

khaled.eldowa@unimi.it

&Emmanuel Esposito

Universita degli Studi di Milano, Milan, Italy

& Istituto Italiano di Tecnologia, Genoa, Italy

emmanuel@emmanuelesposito.it

&Tommaso Cesari

University of Ottawa, Ottawa, Canada

tcesari@uottawa.ca

&Nicolo Cesa-Bianchi

Universita degli Studi di Milano, Milan, Italy

& Politecnico di Milano, Milan, Italy

nicolo.cesa-bianchi@unimi.it

Equal contribution.

###### Abstract

In this work, we improve on the upper and lower bounds for the regret of online learning with strongly observable undirected feedback graphs. The best known upper bound for this problem is \(\), where \(K\) is the number of actions, \(\) is the independence number of the graph, and \(T\) is the time horizon. The \(\) factor is known to be necessary when \(=1\) (the experts case). On the other hand, when \(=K\) (the bandits case), the minimax rate is known to be \(\), and a lower bound \(\) is known to hold for any \(\). Our improved upper bound \(\) holds for any \(\) and matches the lower bounds for bandits and experts, while interpolating intermediate cases. To prove this result, we use FTRL with \(q\)-Tsallis entropy for a carefully chosen value of \(q[1/2,1)\) that varies with \(\). The analysis of this algorithm requires a new bound on the variance term in the regret. We also show how to extend our techniques to time-varying graphs, without requiring prior knowledge of their independence numbers. Our upper bound is complemented by an improved \(\) lower bound for all \(>1\), whose analysis relies on a novel reduction to multitask learning. This shows that a logarithmic factor is necessary as soon as \(<K\).

## 1 Introduction

Feedback graphs  provide an elegant interpolation between two popular online learning models: multiarmed bandits and prediction with expert advice. When learning with an undirected feedback graph \(G\) over \(K\) actions, the online algorithm observes not only the loss of the action chosen in each round, but also the loss of the actions that are adjacent to it in the graph. Two important special cases of this setting are: prediction with expert advice (when \(G\) is a clique) and \(K\)-armed bandits (when \(G\) has no edges). When losses are generated adversarially, the regret in the feedback graph setting with strong observability has been shown to scale with the independence number \(\) of \(G\). Intuitively, denser graphs, which correspond to smaller independence numbers, provide more feedback to the learner, thus enabling a better control on regret. More specifically, the best known upper and lower bounds on the regret after \(T\) rounds are \(\) and \(\)[3; 4]. It has been known for three decades that this upper bound is tight for \(=1\) (the experts case, [9; 10]). When \(=K\)(the bandits case), the lower bound \(\)--which has also been known for nearly three decades --was matched by a corresponding upper bound \(\) only in 2009 . These results show that in feedback graphs, the logarithmic factor \(\) is necessary (at least) for the \(=1\) case, while it must vanish from the minimax regret as \(\) grows from \(1\) to \(K\), but the current bounds fail to capture this fact. In this work, we prove new upper and lower regret bounds that for the first time account for this vanishing logarithmic factor.

To prove our new upper bound, we use the standard FTRL algorithm run with the \(q\)-Tsallis entropy regularizer (\(q\)-FTRL for short). It is well-known  that for \(q=\) this algorithm (run with appropriate loss estimates) achieves regret \(\) when \(=K\) (bandits case), while for \(q 1^{-}\) the same algorithm (without loss estimates) recovers the bound \(\) when \(=1\) (experts case). When \(G\) contains all self-loops, we show in Theorem 1 that, if \(q\) is chosen as a certain function \(q(,K)\), then \(q(,K)\)-FTRL, run with standard importance-weighted loss estimates, achieves regret \(\). This is a strict improvement over the previous bound, and matches the lower bounds for bandits and experts while interpolating the intermediate cases. This interpolation is reflected by our choice of \(q\), which goes from \(\) to \(1\) as \(\) ranges from \(1\) to \(K\). The main technical hurdle in proving this result is an extension to arbitrary values of \(q,1\) of a standard result--see, e.g., [29, Lemma 3]--that bounds in terms of \(\) the variance term in the regret of \(q\)-FTRL. In Theorem 2, using a modified loss estimate, this result is extended to any strongly observable undirected graph , a class of feedback graphs in which some of the actions do not reveal their loss when played. In Theorem 3, we show via a doubling trick that our new upper bound can also be obtained (up to constant factors) without the need of knowing (or computing) \(\). As the resulting algorithm is oblivious to \(\), our analysis also applies to arbitrary sequences of graphs \(G_{t}\), where \(K\) is constant but the independence number \(_{t}\) of \(G_{t}\) can change over time, and the algorithm observes \(G_{t}\) only after choosing an action (the so-called uninformed case). In this setting, the analysis of the doubling trick is complicated by the non-trivial dependence of the regret on the sequence of \(_{t}\).

We also improve on the \(\) lower bound by proving a new \(K}\) lower bound for all \(>1\). This is the first result showing the necessity--outside the experts case--of a logarithmic factor in the minimax regret for all \(<K\). Our proof uses a stochastic adversary generating both losses and feedback graphs via i.i.d. draws from a joint distribution. This sequence of losses and feedback graphs can be used to define a hard instance of the multi-task bandits problem, a variant of the combinatorial bandits framework . We then prove our result by adapting known lower bounding techniques for multi-task bandits . Note that for values of \(\) bounded away from \(2\) and \(K\), the logarithmic factor \(_{}K\) in the lower bound is smaller than the corresponding factor \(1+(K/)\) in the upper bound. Closing this gap remains an open problem.

### Additional related work

Several previous works have used the \(q\)-Tsallis regularizer with \(q\) tuned to specific values other than \(\) and \(1\). For example, in [35, Section 4], \(q\) is chosen as a function of \(K\) to prove a regret bound of \(}\) for any strongly observable directed feedback graph, which shaves off a \( T\) factor compared to previous works. This bound is worse than the corresponding bounds for undirected graphs because the directed setting is harder. Specific choices of \(q\) have been considered to improve the regret in settings of online learning with standard bandit feedback. For example, the choice \(q=\) was used in  to improve the analysis of regret in bandits with decoupled exploration and exploitation. Regret bounds for arbitrary choices of \(q\) are derived in  for a best-of-both-worlds analysis of bandits, though \(q=\) remains the optimal choice. The \(\)-Tsallis entropy and the Shannon entropy (\(q=1\)) regularizers have been combined before in different ways to obtain best-of-both-worlds guarantees for the graph feedback problem . The idea of using values of \(q(,1)\) for feedback graphs is quite natural and has been brought up before, e.g., in , but achieving an improved dependence on the graph structure by picking a suitable value of \(q\) has not been, to the best of our knowledge, successfully pursued before. On the other hand, an approach based on a similar use of the \(q\)-Tsallis regularizer has been employed by  for the problem of multiarmed bandits with sparse losses to achieve a \(\) regret bound, where \(s\) is the maximum number of nonzero losses at any round.

Our lower bound is reminiscent of the \(N}\) lower bound proved in  for the problem of bandits with expert advice (with \(N K\) being the number of experts); see also  and . Inthat problem, at each time step, experts suggest distributions over actions to the learner, whose regret is computed against the best expert in hindsight. Although the two settings are different, the variant of the multitask bandit problem that our lower bound construction simulates is the same as the one used in the proof of [17, Theorem 7].

## 2 Problem Setting

For any integer \(n 1\), let \([n]=\{1,,n\}\). We consider the following game played over \(T\) rounds between a learner with action set \(V=[K]\) and the environment. At the beginning of the game, the environment secretly selects a sequence of losses \((_{t})_{t[T]}\), where \(_{t} V\),2 and a sequence of undirected graphs \((G_{t})_{t[T]}\) over the set of actions \(V\), that is, \(G_{t}=(V,E_{t})\). At any time \(t\), the learner selects an arm \(I_{t}\) (possibly at random), then pays loss \(_{t}(I_{t})\) and observes the feedback graph \(G_{t}\) and all losses \(_{t}(i)\) of neighbouring actions \(i N_{G_{t}}(I_{t})\), where \(N_{G_{t}}(i)=\{j V\,:\,(i,j) E_{t}\}\) (see Online Protocol 1). In this work, we only focus on strongly observable graphs . An undirected graph \(G\) is strongly observable if for every \(i V\), at least one of the following holds: \(i N_{G}(i)\) or \(i N_{G}(j)\) for all \(j i\).

The performance of the learner is measured by the regret

\[R_{T}=[_{t=1}^{T}_{t}(I_{t})]-_{i[K]} _{t=1}^{T}_{t}(i).\]

where the expectation is over the learner's internal randomization.

**Online Protocol 1** Online learning with feedback graphs

**environment:** (hidden) losses \(_{t} V\) and graphs \(G_{t}=(V,E_{t})\), for all \(t=1,,T\)

**for**\(t=1,,T\)**do**

The learner picks an action \(I_{t} V\) (possibly at random)

The learner incurs loss \(_{t}(I_{t})\)

The learner observes losses \(i,_{t}(i):i N_{G_{t}}(I_{t})}\) and graph \(G_{t}\)

**end for**

We denote by \(_{K}\) the simplex \(p^{K}: p_{1}=1}\). For any graph \(G\), we define its independence number as the cardinality of the largest set of nodes such that no two nodes are neighbors, and denote it by \((G)\). For simplicity, we use \(N_{t}\) to denote the neighbourhood \(N_{G_{t}}\) in the graph \(G_{t}\) and we use \(_{t}\) to denote the independence number \((G_{t})\) of \(G_{t}\) at time \(t\).

## 3 FTRL with Tsallis Entropy for Undirected Feedback Graphs

As a building block, in this section, we focus on the case when all the feedback graphs \(G_{1},,G_{T}\) have the same independence number \(_{1}==_{T}=\), whereas the general case is treated in the next section. For simplicity, we start with the assumption that all nodes have self-loops: \((i,i) E_{t}\) for all \(i V\) and all \(t\). We later lift this requirement and show that the regret guarantees that we provide can be extended to general strongly observable undirected feedback graphs, only at the cost of a constant multiplicative factor.

The algorithm we analyze is \(q\)-FTRL (described in Algorithm 1), which is an instance of the follow the regularized leader (FTRL) framework--see, e.g., [30, Chapter 7]--with the (negative) \(q\)-Tsallis entropy

\[_{q}(x)=(1-_{i V}x(i)^{q}) x _{K},\]

as the regularizer, whose parameter \(q(0,1)\) can be tuned according to our needs. Since we do not observe all the losses in a given round, the algorithm makes use of unbiased estimates for the losses. When all self-loops are present, we define the estimated losses in the following standard manner. Let\(I_{t}\) be the action picked at round \(t\), which is drawn from the distribution \(p_{t}_{K}\) maintained by the algorithm, the loss estimate for an action \(i V\) at round \(t\) is given by

\[_{t}(i)=(i)}{P_{t}(i)}\{I_{t} N_{t}(i) \},\] (1)

where \(P_{t}(i)=I_{t} N_{t}(i)=_{j N_{t}(i)}p_{t}(j)\). This estimate is unbiased in the sense that \(_{t}_{t}(i)=_{t}(i)\) for all \(t[T]\) and all \(i V\), where we denote \(_{t}[]=[ I_{1},,I_{t- 1}]\).

``` input:\(q(0,1)\), \(>0\) initialization:\(p_{1}(i) 1/K\) for all \(i=1,,K\) for\(t=1,,T\)do  Select action \(I_{t} p_{t}\) and incur loss \(_{t}(I_{t})\)  Observe losses \((i,_{t}(i)):i N_{t}(I_{t})}\) and graph \(G_{t}\)  Construct a loss estimate \(_{t}\)\(\) e.g., (1) or (6)  Let \(p_{t+1}_{p_{K}}_{s=1}^{t}_{s},p+_{q}(p)\) endfor ```

**Algorithm 1**\(q\)-FTRL for undirected feedback graphs

A key part of the standard regret analysis of \(q\)-FTRL (see, e.g., the proof of Lemma 3 in Appendix A) is handling the variance term, which, with the choice of estimator given in (1), takes the following form

\[B_{t}(q)=_{i V}(i)^{2-q}}{P_{t}(i)}.\] (2)

By Holder's inequality, this term can be immediately upper bounded by

\[B_{t}(q)_{i V}p_{t}(i)^{1-q}(_{i V}p_{t}(i))^ {1-q}(_{i V}1^{1/q})^{q}=K^{q},\]

while previous results on the regret analysis of multiarmed bandits with graph feedback  would give

\[B_{t}(q)_{i V}(i)}{P_{t}(i)}.\]

However, the former result would only recover a \(()\) regret bound (regardless of \(\)) with the best choice of \(q=1/2\), which could be trivially achieved by ignoring side-observations of the losses, whereas the latter bound would only manage to achieve a \(()\) regret bound, incurring the extra \(\) factor for all values of \(\). Other results in the literature (e.g., see ) do not bring an improvement in this setting when bounding the \(B_{t}(q)\) term and, hence, do not suffice for achieving the desired regret bound. The following lemma provides a novel and improved bound on quantities of the same form as \(B_{t}(q)\) in terms of the independence number \(_{t}=\) of the undirected graph \(G_{t}\).

**Lemma 1**.: _Let \(G=(V,E)\) be any undirected graph with \(|V|=K\) vertices and independence number \((G)=\). Let \(b\), \(p_{K}\) and consider any nonempty subset \(U\{v V:v N_{G}(v)\}\). Then,_

\[_{v U}}{_{u N_{G}(v)}p(u)}^{1-b}.\]

Proof.: First of all, observe that we can restrict ourselves to the subgraph \(G[U]\) induced by \(U\), i.e., the graph \(G[U]=(U,E(U U))\). This is because the neighbourhoods in this graph are such that \(N_{G[U]}(v) N_{G}(v)\) for all \(v U\), and its independence number is \((G[U])(G)\). Hence, it suffices to prove the claimed inequality for any undirected graph \(G=(V,E)\) with all self-loops, any \(p^{K}\) such that \(\|p\|_{1} 1\), and the choice \(U=V\). We assume this in what follows without loss of generality.

For any subgraph \(H G\) with vertices \(V(H) V\), denote the quantity we want to upper bound by

\[Q(H)=_{v V(H)}}{_{u N_{G}(v)}p(u)}.\]

Our aim is thus to provide an upper bound to \(Q(G)\).

Consider a greedy algorithm that incrementally constructs a subset of vertices in the following way: at each step, it selects a vertex \(v\) that maximizes \(p(v)^{b}/_{u N_{G}(v)}p(u)\), it adds \(v\) to the solution, and it removes \(v\) from \(G\) together with its neighbourhood \(N_{G}(v)\). This step is iterated on the remaining graph until no vertex is left.

Let \(S=\{v_{1},,v_{s}\} V\) be the solution returned by the above greedy algorithm on \(G\). Also let \(G_{1},,G_{s+1}\) be the sequence of graphs induced by the operations of the algorithm, where \(G_{1}=G\) and \(G_{s+1}\) is the empty graph, and let \(N_{r}(v)=N_{G_{r}}(v)\) for \(v V(G_{r})\). At every step \(r[s]\) of the greedy algorithm, the contribution to \(Q(G)\) of the removed vertices \(N_{r}(v_{r})\) amounts to

\[Q(G_{r})-Q(G_{r+1})=_{v N_{r}(v_{r})}}{ _{u N_{1}(v)}p(u)} _{v N_{r}(v_{r})}p(v))^{b}}{_{u N_ {1}(v_{r})}p(u)}\] \[(v_{r})}p(v)}{_{u N_{1}(v_{r})}p (u)}p(v_{r})^{b}=p(v_{r})^{b},\]

where the last inequality is due to the fact that \(N_{i}(v) N_{j}(v)\) for all \(i j\) and \(v V_{i}\). Therefore, we can observe that

\[Q(G)=_{r=1}^{s}Q(G_{r})-Q(G_{r+1})_{v S}p(v)^{b }.\]

The solution \(S\) is an independent set of \(G\) by construction. Consider now any independent set \(A V\) of \(G\). We have that

\[_{v A}p(v)^{b} _{x_{K}}_{v A}x(v)^{b}=|A|_{x _{K}}_{v A}}{|A|}\] \[|A|_{x_{K}}_{v A}x (v)^{b}|A|^{1-b}^{1-b},\] (3)

where the second inequality follows by Jensen's inequality and the fact that \(b\). 

Observe that this upper bound is tight for general probability distributions \(p_{K}\) over the vertices \(V\) of any strongly observable undirected graph \(G\) (containing at least one self-loop), as it is exactly achieved by the distribution \(p^{}_{K}\) defined as \(p^{}(i)=i S\}\) for some maximum independent set \(S V\) of \(G\). Using this lemma, the following theorem provides our improved upper bound under the simplifying assumptions we made thus far.

**Theorem 1**.: _Let \(G_{1},,G_{T}\) be a sequence of undirected feedback graphs, where each \(G_{t}\) contains all self-loops and has independence number \(_{t}=\) for some common value \([K]\). If Algorithm 1 is run with input_

\[q=1++4}+2} [1/2,1)=}{T(1-q)^{q}}},\]

_and loss estimates (1), then its regret satisfies \(R_{T} 2\)._

Proof.: One can verify that for any \(i V\), the loss estimate \(_{t}(i)\) defined in (1) satisfies \(}_{t}_{t}(i)^{2} 1/P_{t}(i)\). Hence, using also that \(}_{t}_{t}(i)=_{t}(i)\), Lemma 2 in Appendix A implies that

\[R_{T} }{(1-q)}+_{t=1}^{T} }_{i V}(i)^{2-q}}{P_{t}(i)} \] (4) \[}{(1-q)}+^{q}T,\] (5)where the second inequality follows by Lemma 1 with \(b=1-q\) since all actions \(i V\) are such that \(i N_{G}(i)\). Our choices for \(q\) and \(\) allow us to further upper bound the right-hand side of (5) by

\[^{q}}{q(1-q)}}T =( K)-+4})\!(2++4})}\] \[ +4})} 2+4}}\] \[ 2.\]

The regret bound achieved in the above theorem achieves the optimal regret bound for the experts setting (i.e., \(=1\)) and the bandits setting (i.e., \(=K\)) simultaneously. Moreover, it interpolates the intermediate cases for \(\) ranging between \(1\) and \(K\), introducing the multiplicative logarithmic factor only for graphs with independence number strictly smaller than \(K\). We remark that the chosen values of \(q\) and \(\) do in fact minimize the right-hand side of (5). Note that we relied on the knowledge of \(\) to tune the parameter \(q\). This is undesirable in general. We will show how to lift this requirement in Section 4. The same comment applies to Theorem 2, below.

We now show how to achieve the improved regret bound of Theorem 1 in the case of strongly observable undirected feedback graphs where some self-loops may be missing; i.e., there may be actions \(i V\) such that \(i N_{G}(i)\). Using the loss estimator defined in (1) may lead to a large variance term due to the presence of actions without self-loops. One approach to deal with this--see, e.g.,  or --is to suitably alter the loss estimates of these actions.

Define \(S_{t}=\{i V:i N_{t}(i)\}\) as the subset of actions without self-loops in the feedback graph \(G_{t}\) at each time step \(t[T]\). The idea is that we need to carefully handle some action \(i S_{t}\) only in the case when the probability \(p_{t}(i)\) of choosing \(i\) at round \(t\) is sufficiently large, say, larger than \(1/2\). Define the set of such actions as \(J_{t}=\{i S_{t}:p_{t}(i)>1/2\}\) and observe that \(|J_{t}| 1\). Similarly to , define new loss estimates

\[_{t}(i)=(i)}{P_{t}(i)}\{I _{t} N_{t}(i)\}&i V J_{t}\\ (i)-1}{P_{t}(i)}\{I_{t} N_{t}(i)\}+1& i J_{t}\] (6)

for which it still holds that \(_{t}\![_{t}]=_{t}\) and that \(_{t}\![_{t}(i)^{2}] 1/P_{t}(i)\) for all \(i J_{t}\). This change, along with the use of Lemma 1 for the actions in \(V S_{t}\), suffices in order to prove the following regret bound (see Appendix B for the proof) when the feedback graphs do not necessarily contain self-loops for all actions.

**Theorem 2**.: _Let \(G_{1},,G_{T}\) be a sequence of strongly observable undirected feedback graphs, where each \(G_{t}\) has independence number \(_{t}=\) for some common value \([K]\). If Algorithm 1 is run with input_

\[q=\!(1++4}+2} )[1/2,1)=} {T(1-q)^{q}}},\]

_and loss estimates (6), then its regret satisfies \(R_{T} 6\)._

## 4 Adapting to Arbitrary Sequences of Graphs

In the previous section, we assumed for simplicity that all the graphs have the same independence number. This independence number was then used to tune \(q\), the parameter of the Tsallis entropy regularizer used by the algorithm. In this section, we show how to extend our approach to the case when the independence numbers of the graphs are neither the same nor known a-priori by the learner. Had these independence numbers been known a-priori, one approach is to set \(q\) as in Theorem 2 but using the average independence number

\[_{T}=_{t=1}^{T}_{t}.\]Doing so would allow us to achieve a \(^{T}_{t}(1+(K/_{T}))}\) regret bound. We now show that we can still recover a bound of the same order without prior knowledge of \(_{T}\). For round \(t\) and any fixed \(q\), define

\[H_{t}(q)=_{i V S_{t}}(i)^{2-q}}{P_{t}(i)}.\]

We know from Lemma 1 that \(H_{t}(q)_{t}^{q}\). Thus, we can leverage these observations and use a doubling trick (similar in principle to ) to guess the value of \(_{T}\). This approach is outlined in Algorithm 2. Starting with \(r=0\) and \(T_{r}=1\), the idea is to instantiate Algorithm 1 at time-step \(T_{r}\) with \(q\) and \(\) set as in Theorem 2 but with \(2^{r}\) replacing the independence number. Then, at \(t T_{r}\), we increment \(r\) and restart Algorithm 1 only if

\[_{s=T_{r}}^{t}H_{s}(q_{r})^{1/q_{r}}>2^{r+1},\]

since (again thanks to Lemma 1) the left-hand side of the above inequality is always upper bounded by \(_{T}\). The following theorem shows that this approach essentially enjoys the same regret bound of Theorem 2 up to an additive \(_{2}_{T}\) term.

``` input: Time horizon \(T\) define: For each \(r\{0,,_{2}K\}\), \[q_{r}=1+)}{)^{2}+4}+2} _{r}=K^{1-q_{r}}}{11T(1-q_{r}) (2^{r})^{q_{r}}}}\] initialization:\(T_{0} 1\), \(r 0\), instantiate Algorithm 1 with \(q=q_{0}\), \(=_{0}\), and loss estimates (6) for\(t=1,,T\)do  Perform one step of the current instance of Algorithm 1 if\(_{s=T_{r}}^{t}H_{s}(q_{r})^{1/q_{r}}>2^{r+1}\)then \(r r+1\) \(T_{r} t+1\)  Restart Algorithm 1 with \(q=q_{r}\), \(=_{r}\), and loss estimates (6) endif endfor ```

**Algorithm 2**\(q\)-FTRL for an arbitrary sequence of strongly observable undirected graphs

**Theorem 3**.: _Let \(C=4e^{+}{ 2}}\). Then, the regret of Algorithm 2 satisfies_

\[R_{T} C^{T}_{t}2+\!_{T}}}+_{2}_{T}.\]

Proof sketch.: For simplicity, we sketch here the proof for the case when in every round \(t\), all the nodes have self-loops; hence, \(H_{t}(q)=B_{t}(q)\). See the full proof in Appendix C, which treats the general case in a similar manner. Let \(n=_{2}_{T}\) and assume without loss of generality that \(_{T}>1\). Since Lemma 1 implies that for any \(r\) and \(t\), \(B_{t}(q_{r})_{t}^{q_{r}}\), we have as a consequence that for any \(t T_{r}\),

\[_{s=T_{r}}^{t}B_{s}(q_{r})^{1/q_{r}}_{s=T_{r }}^{t}_{s}_{T} 2^{n}.\]

Hence, the maximum value of \(r\) that the algorithm can reach is \(n-1\). In doing so, we will execute \(n\) instances of Algorithm 1, each corresponding to a value of \(r\{0,,n-1\}\). For every such \(r\), we upper bound the instantaneous regret at step \(T_{r+1}-1\) (the step when the restarting condition is satisfied) by \(1\), hence the added \(_{2}_{T}\) term in the regret bound. For the rest of the interval; namely, for \(t[T_{r},T_{r+1}-2]\), we have via (4) that the regret of Algorithm 1 is bounded by

\[}}{_{r}(1-q_{r})}+}{2q_{r}}}_{t=T_{r}}^{T_{r+1}-2}B_{t}(q_{r}).\] (7)Define \(T_{r:r+1}=T_{r+1}-T_{r}-1\), and notice that

\[_{t=T_{r}}^{T_{r+1}-2}B_{t}(q_{r})  T_{r:r+1}}_{t=T_{r}}^{T_{r+1}-2 }B_{t}(q_{r})^{1/q_{r}}^{q_{r}}\] \[ T_{r:r+1}}2^{r+1}^{q_{r}}  2T2^{r}^{q_{r}},\]

where the first inequality follows due to Jensen's inequality since \(q_{r}(0,1)\), and the second follows from the restarting condition of Algorithm 2. After, plugging this back into (7), we can simply use the definitions of \(_{r}\) and \(q_{r}\) and bound the resulting expression in a similar manner to the proof of Theorem 1. Overall, we get that

\[R_{T} 4_{r=0}^{n-1}\!(e^{2}K2^{-r})}+ _{2}_{T},\]

from which the theorem follows by using Lemma 4 in Appendix A, which shows, roughly speaking, that the sum on the right-hand side is of the same order as its last term. 

Although Algorithm 2 requires knowledge of the time horizon, this can be dealt with by applying a standard doubling trick on \(T\) at the cost of a larger constant factor. It is also noteworthy that the bound we obtained is of the form \(_{T}(1+(K/_{T}))}\) and not \(_{t}(1+(K/_{t}))}\). Although both coincide with the bound of Theorem 2 when \(_{t}\) is the same for all time steps, the latter is smaller via the concavity of \(x(1+(K/x))\) in \(x\). It is not clear, however, whether there is a tuning of \(q(0,1)\) that can achieve the second bound (even with prior knowledge of the entire sequence \(_{1},,_{T}\) of independence numbers).

## 5 An Improved Lower Bound via Multitask Learning

In this section we provide a new lower bound on the minimax regret showing that, apart from the bandits case, a logarithmic factor is indeed necessary in general. When the graph is fixed over time, it is known that a lower bound of order \(\) holds for any value of \(\). Whereas for the experts case (\(=1\)), the minimax regret is of order3\(\). The following theorem provides, for the first time, a lower bound that interpolates between the two aforementioned bounds for the intermediate values of \(\).

**Theorem 4**.: _Pick any \(K 2\) and any \(\) such that \(2 K\). Then, for any algorithm and for all \(TK}{4(4/3)}\), there exists a sequence of losses and feedback graphs \(G_{1},,G_{T}\) such that \((G_{t})=\) for all \(t=1,,T\) and_

\[R_{T}}K}.\]

In essence, the proof of this theorem (see Appendix D) constructs a sequence of feedback graphs and losses that is equivalent to a hard instance of the multitask bandit problem (MTB) , an important special case of combinatorial bandits with a convenient structure for proving lower bounds . We consider a variant of MTB in which, at the beginning of each round, the decision-maker selects an arm to play in each one of \(M\) stochastic bandit games. Subsequently, the decision-maker only observes (and suffers) the loss of the arm played in a single randomly selected game. For proving the lower bound, we use a class of stationary stochastic adversaries (i.e., environments), each generating graphs and losses in a manner that simulates an MTB instance.

Fix \(2 K=|V|\) and assume for simplicity that \(M=_{}K\) is an integer. We now construct an instance of online learning with time-varying feedback graphs \(G_{t}=(V,E_{t})\) with \((G_{t})=\) that is equivalent to an MTB instance with \(M\) bandit games each containing \(\) "base actions". Since \(K=^{M}\), we can uniquely identify each action in \(V\) with a vector \(a=a(1),,a(M)\) in \([]^{M}\). The action \(a_{t} V\) chosen by the learner at round \(t\) is equivalent to a choice of base actions \(a_{t}(1),,a_{t}(M)\) in the \(M\) games. The feedback graph at every round is sampled uniformly at random from a set of \(M\) undirected graphs \(\{G^{i}\}_{i=1}^{M}\), where \(G^{i}=(V,E^{i})\) is such that \((a,a^{}) E^{i}\) if and only if \(a(i)=a^{}(i)\). This means (see Figure 1) that each graph \(G^{i}\) consists of \(\) isolated cliques \(\{C_{i,j}\}_{j=1}^{}\) such that an action \(a\) belongs to clique \(C_{i,j}\) if and only if \(a(i)=j\). Clearly, the independence number of any such graph is \(\). Drawing feedback graph \(G_{t}=G^{i}\) corresponds to the activation of game \(i\) in the MTB instance. Hence, choosing \(a_{t} V\) with feedback graph \(G_{t}=G^{i}\) is equivalent to playing base action \(a_{t}(i)\) in game \(i\) in the MTB. As for the losses, we enforce that, given a feedback graph \(G_{t}\), all actions that belong to the same clique of the feedback graph are assigned the same loss. Namely, if \(G_{t}=G^{i}\) and \(a(i)=a^{}(i)=j\), then \(_{t}(a)=_{t}(a^{})\), which can be seen as the loss \(_{t}(j)\) assigned to base action \(j\) in game \(G^{i}\). To choose the distribution of the losses for the base actions, we apply the classic needle-in-a-haystack approach of  over the \(M\) games. More precisely, we construct a different environment for each action \(a V\) in such a way that the distribution of the losses in each MTB game slightly favors (with a difference of a small \(>0\)) the base action corresponding to \(a\) in that game. The proof then proceeds similarly to, for example, the proof of Theorem 5 in  or Theorem 7 in .

While both our upper and lower bounds achieve the desired goal of interpolating between the minimax rates of experts and bandits, the logarithmic factors in the two bounds are not exactly matching. In particular, if we compare \(1+_{2}(K/)\) and \(_{}K\), we can see that although they coincide at \(=2\) and \(=K\), the former is larger for intermediate values. It is reasonable to believe that the upper bound is of the correct order, seeing as it arose naturally as a result of choosing the best parameter for the Tsallis entropy regularizer, whereas achieving the extra logarithmic term in the lower bound required a somewhat contrived construction.

## 6 Conclusions and Future Work

In this work, we have shown that a proper tuning of the \(q\)-FTRL algorithm allows one to achieve a \(\) regret for the problem of online learning with undirected strongly observable feedback graphs. Our bound interpolates between the minimax regret rates of the bandits and the experts problems, the two extremes of the strongly observable graph feedback spectrum.

Figure 1: This figure shows an example of the multi-task bandit construction used to prove the lower bound. Here, \(K=8\) and \(=2\); thus, the number of games is \(M=3\). Each action is identified by a tuple of three numbers, each corresponding to a choice of one out of a pair of “base actions” in each game. Each of the three graphs in the figure corresponds to a game, such that two actions share an edge if and only if they choose the same base action in the corresponding game. At every round, a graph is randomly drawn, and all actions belonging to the same clique suffer the same loss.

Furthermore, we have shown that an analogous bound can be achieved when the graphs vary over time, and without requiring any prior knowledge on the graphs. These results are complemented by our new lower bound of \(\), which holds for \( 2\) and shows the necessity of a logarithmic factor in the minimax regret except for the bandits case. While our results provide the tightest characterization to date of the minimax rate for this setting, closing the small remaining gap (likely on the lower bound side) is an interesting problem. After the submission of this manuscript, a subsequent work  showed a lower bound for fixed feedback graphs composed of disjoint cliques that would imply worst-case optimality (up to constant factors) of our proposed algorithm for each pair of \(K\) and \(\)--see Appendix E for a more detailed comparison with results therein. Extending our results to the case of directed strongly observable feedback graphs is a considerably harder task--see Appendix F for a preliminary discussion. Better understanding this more general setting is an interesting future direction.