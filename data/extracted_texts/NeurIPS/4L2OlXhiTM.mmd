# FIRAL: An Active Learning Algorithm for

Multinomial Logistic Regression

Youguang Chen &George Biros

Oden Institute for Computational Engineering and Sciences

The University of Texas at Austin

###### Abstract

We investigate theory and algorithms for pool-based active learning for multiclass classification using multinomial logistic regression. Using finite sample analysis, we prove that the Fisher Information Ratio (FIR) lower and upper bounds the excess risk. Based on our theoretical analysis, we propose an active learning algorithm that employs regret minimization to minimize the FIR. To verify our derived excess risk bounds, we conduct experiments on synthetic datasets. Furthermore, we compare FIRAL with five other methods and found that our scheme outperforms them: it consistently produces the smallest classification error in the multiclass logistic regression setting, as demonstrated through experiments on MNIST, CIFAR-10, and 50-class ImageNet.

## 1 Introduction

Active learning is of interest in applications with large pools of unlabeled data for which labeling is expensive. In pool active learning, we're given a set of unlabeled points \(U\), an initial set of labeled points \(S_{0}\), and a budget of new points \(b\), our goal is to algorithmically select \(b\) new points to label in order to minimize the log-likelihood error over the unlabeled points. Equivalently instead of selecting points directly, we seek to find a probability density function that we can use to sample the \(b\) points. Informally (precise formulation in SS 2), let \(x\) denote a data point and \(p(x)\) denote the distribution density of unlabeled points. Let \(q(x)\) be the sampling distribution we will use to select the new \(b\) points for labeling. We will choose \(q(x)\) in order to minimize the generalization error (or excess risk) of the classifier over \(p(x)\). Our theory is classifier specific: it assumes multinomial logistic regression with parameters \(\). The expectations of the Hessian--with respect to \(\)--of the classifier loss function over \(p(x)\) and \(q(x)\) distributions are denoted by \(_{p}\) and \(_{q}\) respectively. Using finite sample analysis, our first result (Theorem 3 in SS 3) is to show that the unlabeled data excess risk is bounded below and above by the _Fisher information ratio_\((_{q}{}^{-1}_{p})\), subject to the assumption of \(p\) being a sub-Gaussian distribution. Our second result (Theorem 4 in SS 4) is to propose and analyze a point selection algorithm based on regret minimization that allows us to bound the generalization error.

There is a large body of work on various active learning methods based on uncertainty estimation (), sample diversity (), Bayesian inference ( ), and many others (). Here we just discuss the papers closest to our scheme. Zhang and Oles  claimed without proof that FIR is asymptotically proportional to the log-likelihood error of unlabeled data. Sourati et al.  proved that FIR is an upper bound of the expected variance of the asymptotic distribution of the log-likelihood error. Chaudhuri et al.  proved non-asymptotic results indicating that FIR is closely related to the expected log-likelihood error of an Maximum Likelihood Estimation-based classifier in bounded domain. In this work, we use finite sample analysis to establish FIR-based bounds for the excess risk in the case of multinomial logistic regression with sub-Gaussian assumption for the point distributions.

Algorithmically finding points to minimize FIR is an NP-hard combinatorial optimization problem. There have been several approximate algorithms proposed for this problem. Hoi et al.  studied the binary classification problem and approximated the FIR using a submodular function and then used a greedy optimization algorithm. Chaudhuri et al.  proposed an algorithm that first solves a relaxed continuous convex optimization problem, followed by randomly sampling from the weights. Although they derived a performance guarantee for their approach, it needs a substantial number of samples to approach near-optimal performance solely through random sampling from the weights, and no numerical experiments results were provided using such approach. Ash et al.  adopted a forward greedy algorithm to initially select an excess of points and then utilized a backward greedy algorithm to remove surplus points. But such approach has no performance guarantee. Hence, there is still a need for computationally efficient algorithms that can optimize FIR in a multi-class classification context while providing provable guarantees.

Our proposed algorithm, FIRAL, offers a locally near-optimal performance guarantee in terms of selecting points to optimize FIR. In our algorithm we have two steps: first we solve a continuous convex relaxation of the original problem in which we find selection weights for all points in \(U\). Then given these weights, we select \(b\) points for labeling by a regret minimization approach. This two-step scheme is inspired by Allen-Zhu et al.  where a similar approach was used selecting points for linear regression. Extending this approach to active learning for multinomial logistic regression has two main challenges. Firstly, we need to incorporate the information from previously selected points in each new round of active learning. Additionally, while the original approach selects features of individual points, in logistic regression, we need to select a Fisher information matrix (\(_{q}\)), which complicates the computation and derivation of theoretical performance guarantees. In Section 4, we present our approach in addressing these challenges.

Our Contributions.In SS 3 we prove that FIR is a lower and upper bound of the excess risk for multinomial logistic regression under sub-Gaussian assumptions. In SS 4 we detail our FIR Active Learning algorithm (FIRAL) and prove it selects \(b\) points that lead to a bound to the excess risk. In SS 5 we evaluate our analysis empirically on synthetic and real world datasets: MNIST, CIFAR-10, and ImageNet using a subset of 50 classes. We compare FIRAL with several other methods for pool-based active learning.

## 2 Problem Formulation

We denote a labeled sample as a pair \((x,y)\), where \(x^{d}\) is a data point, \(y\{1,2,,c\}\) is its label, and \(c\) is the number of classes. Let \(^{(c-1) d}\) be the parameters of a \(c\)-class logistic regression classifier. Given \(x\) and \(\), the likelihood of the label \(y\) is defined by

\[p(y|x,)=^{}x)}{1+_{t[c-1]} (_{t}^{}x)},& y[c-1]\\ (_{t}^{}x)},& y=c.\] (1)

We use the negative log-likelihood as the loss function: \(_{(x,y)}()- p(y|x,)\). To simplify notation we define \(=d(c-1)\). We derive standard expressions for the gradient \(_{(x,y)}()^{(c-1) d}\) and Hessian \(^{2}_{(x,y)}()^{}\) in the Appendix B.1 (Proposition 23). We assume there exists \(_{*}\) such that \(p(y|x)=p(y|x,_{*})\). Then, given \(p(x)\), the joint \((x,y)\) distribution is given by

\[_{p}(x,y)=p(y|x,_{*})p(x).\] (2)

Then, the expected loss at \(\) is defined by

\[L_{p}()_{(x,y)_{p}}[_{(x,y)}()]= _{x p(x)}\,_{y p(y|x,_{*})}[_{(x,y)}( )].\] (3)

The excess risk of \(p(x)\) at \(\) is defined as \(R_{p}()=L_{p}()-L_{p}(_{*})\). Note that \(R_{p}() 0\).

Notation:The inner product between two matrices is \(=(^{})\). For a matrix \(^{m n}\), let \(\|\|\) be the spectral norm of \(\), let \(()^{mn}\) be the vectorization of \(\) by stacking all rows together, i.e. \(()=(_{1}^{},,_{m}^{})^ {}\) where \(_{i}\) is \(i\)-th row of \(\). Given a positive definite matrix \(^{d d}\), we define norm \(\|\|_{}\) for \(x^{d}\) by \(\|x\|_{}=x}\). For integer \(k 1\), we denote by \(_{k}\) the \(k\)-by-\(k\) identity matrix. For any point distribution \(p(x)\) we define \(_{p}_{x p(x)}[xx^{}]\) to be its covariance matrix, \(_{p}()^{2}L_{p}()\) be the Hessian matrix of \(L_{p}()\), define \(_{p}_{p}(_{*})\).

Active learning.Let \(U=\{x_{i}\}_{i=1}^{m}\), be the set of unlabeled points and \(S_{0}\) be the set of \(n_{0}\) initially labeled samples. In particular, we denote the set of points in \(S_{0}\) as \(X_{0}\). Let \(_{0}\) be the solution of training a classifier with \(S_{0}\), i.e., \(_{0}_{}}_{(x,y) S_{0}}_{(x,y) }()\). We select a set of \(b\) points \(X U\), query their labels \(y p(y|x,_{*})\), \( x X\), and train a new classifier \(_{n}_{}_{(x,y) S}_{(x,y)}()\), where \(S\) is the set of \(S_{0}\) with new labeled points and \(n=n_{0}+b\).

Our goal is to optimize the selection of \(X\) so that we can minimize the excess risk on the original unlabeled set \(U\), i.e. \(L_{p}(_{n})-L_{p}(_{*})\). In this context, we define two problems:

Problem 1: Given \(X\) or equivalently \(q(x)\), can we bound \(L_{p}(_{n})-L_{p}(_{*})\)?

Problem 2: Can we construct an efficient algorithm for finding \(X\) that minimizes \(L_{p}(_{n})-L_{p}(_{*})\)?

## 3 Excess Risk Bounds

In this section, we develop our theory to address Problem 1. Our plan is to endow \(p(x)\) and \(q(x)\) with certain properties (sub-Gaussianity or finite support) and derive FIR bounds for \(L_{p}(_{n})-L_{p}(_{*})\). Let \(_{n}\) be the empirical risk minimizer (ERM) obtained from \(n\) i.i.d. samples drawn from \(_{q}(x,y)\):

\[_{n}*{arg\,min}_{}_{i=1}^{n}_{( x_{i},y_{i})}(), i[n],(x_{i},y_{i})}}{{}}_{q}(x,y).\] (4)

We assume that both \(p(x)\) and \(q(x)\) are sub-Gaussian distributions. Appendix A.1 gives a brief review of definitions and basic properties of sub-Gaussian random variables (vector). We define the \(_{2}\)-norm of a sub-Gaussian random variable \(x\) as \(\|x\|_{_{2}}\{t>0:(x^{2}/t^{2}) 2\}\). For a sub-Gaussian random vector \(x^{d}\), \(\|x\|_{_{2}}=\{\|u^{}x\|_{_{2}}:\|u\|_{2} 1\}\). We formalize our assumption for \(p(x)\) and \(q(x)\) in Assumption 1. Based on this assumption, we can derive some properties for the gradient and Hessian of \(_{(x,y)}()\) shown inLemma 2 (proof can be found in Appendix D). We present the results for \(q\) (thus the subscript in the \(K\) constants); exactly the same results, with different constants hold for \(p\).

**Assumption 1**.: _Let \(q(x)\) be a sub-Gaussian distribution for \(x^{b}\), we assume that \(_{q}\) is positive definite. We assume that there exists \(r 1\) such that for any \(_{r}(_{*})=\{:\|-_{*}\|_{2,}  r\}\), \(_{q}()\) is positive definite, where \(\|\|_{2,}\) denotes the maximum row norm of a matrix._

**Lemma 2**.: _If Assumption 1 holds for \(q(x)\), then for \((x,y)_{q}(x,y)\):_

1. _There exists_ \(K_{0,q}>0\) _s.t._ \(\|_{q}^{-1/2}x\|_{_{2}} K_{0,q}\)_._
2. _There exists_ \(K_{1,q}>0\) _s.t._ \(\|_{q}^{-1/2}(_{(x,y)}(_{*}))\|_{_{2}}  K_{1,q}\)_._
3. _There exists_ \(K_{2,q}(r)>0\) _s.t. for any_ \(\) _in the ball_ \(_{r}(_{*})=\{:\|-_{*}\|_{2,} r\}\)_,_ \[_{u^{-1}}\|u^{}_{q}()^{-1/2}^ {2}_{(x,y)}()_{q}()^{-1/2}u\|_{_{1}} K_{2,q}( r),\] (5) _where_ \(^{-1}\) _is the unit sphere in_ \(^{}\)_, norm_ \(\|\|_{_{1}}\) _is the norm defined for a sub-exponential random variable_ \(z\) _by_ \(\|z\|_{_{1}}=\{t>0:(|z|/t) 2\}\)_._

Our main result of this section is Theorem 3. Under the sample bound given by Eq. (6), we derive high probability bounds for the excess risk in Eq. (7). Details and the proof of Theorem 3 can be found in Appendix C.

**Theorem 3**.: _Suppose Assumption 1 holds for both \(p(x)\) and \(q(x)\). Let \(\) and \(>0\) be constants such that \(_{p}_{q}\) and \(_{c-1}_{p}_{p}(_{*})\) hold. There exit constants \(C_{1},C_{2}\) and \(C_{3}>0\), such that for any \((0,1)\), whenever_

\[n\{C_{1}(ed/),\ C_{2} +}(e/)\},\] (6)_where \( d(c-1)\), we have with probability at least \(1-\),_

\[+-1}{^{2}}\ _{q}^{-1}_{p}}{n} [L_{p}(_{n})]-L_{p}--1}{ ^{2}}\ _{q}^{-1}_{p}}{n}.\] (7)

_Here \({ H}_{p}={ H}_{p}(_{*})\) and \({ H}_{q}={ H}_{q}(_{*})\); and \(\) is the expectation over \(\{y_{i} p(y_{i}|x_{i},_{*})\}_{i=1}^{n}\). Furthermore,_

\[=C_{3}+}( e/)/n}.\] (8)

From Eq. (7), we observe that FIR \(({ H}_{q}^{-1}_{p})\) appears in both the lower and upper bounds for \(R(_{n})\). In other words, it is essential for controlling the excess risk. To the right we show how the prefactors \(--1}{^{2}}\) and \(+-1}{^{2}}\) change as a function of \(\). Constants \(C_{1},C_{2}\) and \(C_{3}\) depend on constants defined in Lemma 2 for both \(p(x)\) and \(q(x)\). In Appendix D, we derive bounds for \(K_{1,p}\) and \(K_{2,p}(r)\) in Proposition 35. For a Gaussian design \(x(0,{ V}_{p})\), we derive bounds for \(\), \(K_{0,p}\), \(K_{1,p}\) and \(K_{2,p}(r)\) in Proposition 37.

Bounded domain.If the domain of \(x\) is bounded, Chaudhuri et al. provided lower and upper bounds for the excess risk of \(p(x)\) (Lemma 1 in ). Their conclusion is similar to ours, namely that FIR is crucial in controlling the excess risk of \(p(x)\). It is worth noting that when the domain is bounded, both \(p(x)\) and \(q(x)\) are always sub-Gaussian. Thus, our assumption is more general. For the sake of completeness, we provide a detailed derivation of the excess risk bounds for \(p(x)\) in Theorem 40 when \(x\) is bounded with Assumption 38.

## 4 Active Learning via Minimizing Fisher Information Ratio

We now discuss the FIRAL algorithm that addresses Problem 2. We can use the theoretical analysis derived in the previous section to guide us for the point selection. Let \(p(x)\) be the empirical distribution on unlabeled pool \(U\) with \(|U|=m\), and \(q\) the distribution for the \(n=n_{0}+b\) labeled points. Eq. (7) inspires us to select points to label such that we can minimize the FIR \({ H}_{q}^{-1}_{p}\), where \({ H}_{q}={ H}_{q}(_{*})\), \({ H}_{p}={ H}_{p}(_{*})\). However, we cannot directly use this as \(_{*}\) is unknown. Instead, we will use \(_{0}\), the solution by training the classifier with the initial labeled set \(S_{0}\).1 That is, we will find \(q\) by minimizing \({ H}_{q}(_{0})^{-1}_{p}(_{0})\).

In SS 4.1, we formalize our optimization objective in Eq. (13). Solving Eq. (13) exactly is NP-hard . Inspired by , we approximate the solution in two steps: _(1) we solve a continuous convex optimization problem in Eq. (14) (SS 4.2), (2) and use the results in a regret minimization algorithm to select points by Eq. (19) (SS 4.3)._ In Algorithm 1 we summarize the scheme.

We state theoretical guarantees for the algorithm in SS 4.4, where we prove that it achieves \((1+)\)-approximation of the optimal objective value in Eq.(13) with sample complexity \(b=(/^{2})\), as stated in Theorem 10. Finally, we obtain the excess risk bound for unlabeled points \(U\) by accounting for the fact that we use \(_{0}\) instead of \(_{*}\) in the objective function. The overall result is summarized in the following theorem.

**Theorem 4**.: _Suppose that Assumption 1 holds. Let \((0,1)\), \((0,1)\), and \(b\) the number of points to label. Then with probability at least \(1-\), the \(_{n}\)--computed by fitting a multinomial logistic regression classifier on the labeled points selected using FIRAL (Algorithm 1) with learning rate \(=8}/\), \(b 32/^{2}+16}/^{2}\), and \(n=n_{0}+b\) satisfying Eq. (6)--results in_

\[[L_{p}(_{n})]-L_{p}(_{*})(1+)\ 2e^{2_{0}}\ }-_{n}-1}{_{n}^{2}}\ }{n}.\] (9)

_Here OPT is the minimal \({ H}_{q}^{-1}_{p}\), attained by selecting the best \(b\) points from \(U\); \(\) is the expectation over \(\{y_{i} p(y_{i}|x_{i},_{*})\}_{i=1}^{n}\); and \(_{0}\) and \(_{n}\) are constants._

Figure 1: _FIR prefactors in Eq. (7)._

### Optimization objective

First we define the precise expression for \(_{q}(_{0})^{-1}_{p}(_{0})\). We define the Fisher information matrix \((x,)=^{2}_{(x,y)}()\). By Eq. (40) in Proposition 23 (Appendix B), we find that for multinomial logistic regression

\[(x,)=[((x,))-(x, )(x,)^{}](xx^{}),\] (10)

where \(\) represents the matrix Kronecker product, \((x,)\) is a \((c-1)\)-dimensional vector whose \(k\)-th component is \(_{k}(x,)=p(y=k|x,)\). In Eq. (10) we can see that the Hessian of \(_{(x,y)}()\) does not depend on the class label \(y\). Following our previous definitions, \(_{p}(_{0})=^{2}L_{p}(_{0})=_{x U }(x,_{0})\) and \(_{q}(_{0})=^{2}L_{q}(_{0})=_{x X _{0} X}(x,_{0})\). For notational simplicity we also define

\[(x)(x,_{0})+_ {x^{} X_{0}}(x^{},_{0})\] (11) \[(z)_{i[m]}z_{i}(x_{i}), z_{i}.\] (12)

Then minimizing \(_{q}(_{0})^{-1}_{p}(_{0})\) is equivalent to

\[_{z\{0,1\}^{m}\\ \|z\|_{1}=b}f(z) f(z) (z)^{-1}_{p}(_{0}).\] (13)

We define \(z_{*}\) be the optimal solution of Eq. (13) and \(f_{*} f(z_{*})\). In the following, with some abuse of notation, we will consider \(f\) being a function of either a vector \(z\) or a positive semidefinite matrix \(f()\), depending on the context. Lemma 5 lists key properties of \(f\) when viewed as a matrix function; we use them in SS 4.2 to prove the optimality of FIRAL.

**Lemma 5**.: \(f:\{^{}: \}\) _defined in Eq. (13) satisfies the following properties:_

1. _convex:_ \(f(+(1-)) f()+(1- )f()\) _for all_ \(\) _and_ \(,_{++}^{}\)__
2. _monotonically non-increasing: if_ \(\) _then_ \(f() f()\)_,_
3. _reciprocally linear: if_ \(t>0\) _then_ \(f(t))=t^{-1}f()\)_._

### Relaxed problem

As a first step in solving Eq. (13) we relax the constraint \(z\{0,1\}^{m}\) to \(z^{m}\). Then we obtain the following convex programming problem:

\[z_{}=*{arg\,min}_{z^{m}\\ \|z\|_{1}=b}f((z)).\] (14)

Since both the objective function and the constraint set are convex, conventional convex programming algorithm can be used to solve Eq. (14). We choose to use a mirror descent algorithm in our implementation (outlined in the Appendix, Algorithm 2). Since the integrality constraint is a subset of the relaxed constraint we obtain the following result.

**Proposition 6**.: \(f(z_{}) f_{*}\)_._

In what follows, we use matrices \(_{}\) and \(}(x_{i})\) (\(i[m]\)) defined by

\[_{}(z_{})}(x_{i})_{}^{-1/2} (x_{i})_{}^{-1/2}, i[m].\] (15)

### Solving Sparsification problem via Regret Minimization

Goal of sparsification.Now we introduce our method of sparsifying \(z_{}\) (optimal solution to Eq. (14)) into a valid integer solution to Eq. (13). To do so, we use an online optimization algorithm in which we select one point at a time in sequence until we have \(b\) points. Notice that alternative techniques like thresholding \(z_{}\) could be used but it was unclear to us how to provide error estimates for such a scheme. Instead, we use an alternative scheme that we describe below.

Let \(i_{t}[m]\) be the point index selected at step \(t[b]\). We can observe that if \(_{}_{t[b]}}(x_{i_{t}})\) for some \(>0\), then \(_{t[b]}(x_{i_{t}})_{}\). By Lemma 5-Item (3) and Proposition 6, we obtain the following result.

**Proposition 7**.: _Given \((0,1)\), we have_

\[_{}_{t[b]}}(x_{i_{t}})  f_{t[b]}(x_{i_{t}}) ^{-1}f_{*}.\] (16)

From Eq. (16), a larger \(\) value indicates that \(f\) is closer to \(f_{*}\). Therefore, our objective is to choose points in such a way that \(_{}_{t[b]}}(x_{i_{t}})\) is maximized.

Lower bound minimum eigenvalue via Follow-The-Regularized-Leader (FTRL).We apply FTRL, which is a popular method for online optimization , to our problem because it can yield a lower bound for \(_{}_{t[b]}}(x_{i_{t}})\) in our setting. FTRL takes \(b\) steps to finish. At each step \(t[b]\), for a fixed learning rate \(>0\), we generate a matrix \(_{t}\) defined by

\[_{1}=}_{}, _{t}=_{t}_{}+_{l=1}^{t-1} }(x_{i_{t}})^{-2}(t 2).\] (17)

Here \(_{t}\) is the unique constant such that \((_{t})=1\). Using Eq. (17) we can guarantee a lower bound for \(_{}_{s[t]}}(x_{i_{t}})\), which is formalized below:

**Proposition 8**.: _Given \(A_{l}\), \(l[b]\), defined by Eq. (17) and for all \(t[b]\)_

\[_{}_{l=1}^{t}}(x_{i_{l}}) -}}{}+_{l=1}^{t}\,_{l}^{1/2}-_{l}^{-1/2}+ }(x_{i_{l}})^{-1}.\] (18)

Point selection via maximizing the lower bound in Eq. (18).Now we discuss our choice of point selection at each time step based on Eq. (18). Recall that our sparsification goal is to make \(_{}(_{s=1}^{t}}(x_{i_{s}})\) as large as possible. Since Eq. (18) provides a lower bound for such minimum eigenvalue, we can choose \(i_{t}[m]\) to maximize the lower bound, which is equivalent to choose

\[i_{t}*{arg\,min}_{i[m]}[_{t }^{-1/2}+}(x_{i})^{-1}].\] (19)

Solving Eq. (19) directly can become computationally expensive when the dimension \(d\), number of classes \(c\), and the pool size \(n\) are large. This is due to the fact that the matrix \(_{t}^{-1/2}+}(x_{i})^{ }\) (where \(=d(c-1)\)), requiring \(n\) eigendecompositions of a \(\) matrix to obtain the solution. Fortunately, we can reduce this complexity _without losing accuracy_. First, by Eq. (10) and Eq. (11), we have for any \(i[m]\),

\[(x_{i})=_{x X_{0}}(x, _{0})}_{}+((x_{i}, _{0}))-(x_{i},_{0})(x_{i},_{0})^{} }_{_{i}_{i} _{i}^{}}(x_{i}x_{i}^{}),\] (20)

where \(_{i}_{i}_{i}^{}\) is the eigendecomposition of \(((x_{i},_{0}))-(x_{i},_{0}) (x_{i},_{0})^{}\). Define matrix \(_{i}_{i}_{i}^{1/2}\), then \(}(x_{i})=+(_{i}_{i}^{} )(x_{i}x_{i}^{})\). Substitute this into Eq. (15), we have a new expression for transformed Fisher information matrix \(}(x_{i})\):

\[}(x_{i})=_{})^{-1/2} (_{})^{-1/2}}_{ }}+_{})^{-1/2}(_{i} x _{i})}_{}_{i}}(_{i} x_{i})^{ }(_{})^{-1/2}=}+}_{i}}_{i}^{}.\] (21)

Now define \(_{t}^{}\) s.t. \(_{t}^{-1/2}=_{t}^{-1/2}+}\). By Eq. (21), we have \(_{t}^{-1/2}+}(x_{i})=_{t}^{-1/2}+ }_{i}}_{i}^{}\). Applying Woodbury's matrix identity, we have

\[(_{t}^{-1/2}+}(x_{i}))^{-1}=_{t}^ {1/2}-_{t}^{1/2}}_{i}(_{c-1}+ }_{i}^{}_{t}^{1/2}}_{i})^ {-1}}_{i}^{}_{t}^{1/2}.\] (22)Now our point selection objective Eq. (19) is equivalent to

\[i_{t}*{arg\,max}_{i[m]}(_{c-1}+ }_{i}^{}_{t}^{1/2}}_{i })^{-1}}_{i}^{}_{t}}_{i}.\] (23)

Since \((_{c-1}+}_{i}^{}_{t}^{1/2} }_{i})^{(c-1)(c-1)}\), solving Eq. (23) is faster than solving Eq. (19). We summarize FIRAL for selecting \(b\) points in Algorithm 1.

``` Input: sample budget \(b\), unlabeled pool \(U=\{x_{i}\}_{i[m]}\), labeled set \(S_{0}\), initial ERM \(_{0}\) Output: selected points \(X\)
1:\(X\)
2:\(z_{}\) solution of Eq. (14), \(_{}_{i=1}^{n}z_{*,i}(x_{i})\)# continuous convex relaxation
3:\(_{i}_{i}_{i}^{}\) eigendecomposition of \(((x_{i},_{0}))-(x_{i},_{0}) (x_{i},_{0})^{}, i[m]\)
4:\(}_{i}_{}^{-1/2}x_{i} (_{i}_{i}^{1/2})\), \( i[m]\)
5:\(}\) defined in Eq. (21), \(_{1}^{-1/2}}}_{ },_{1}^{1/2}(_{1}^{-1/2}+ })^{-1}\)
6:for\(t=1\) to \(b\)do
7:\(i_{t}\) solution of Eq. (23), \(X X\{x_{i_{t}}\}\)
8:\(^{}\) eigendecomposition of \(_{s=1}^{t}}(x_{i_{s}})=_{s=1}^{t}( }+}_{i_{s}}}_{ i_{s}}^{})\)
9: find \(_{t+1}\) s.t. \(_{j[]}(_{t+1}+_{j})^{-2}=1\)
10:\(_{t+1}^{-1/2}(_{t+1}_{ }+)^{}\), \(_{t+1}^{1/2}(_{t+1}^{-1/2}+})^{-1}\)
11:endfor ```

**Algorithm 1** FIRAL(\(b\), \(U\), \(S_{0}\), \(_{0}\))

Connection to regret minimization.Our algorithm is derived as the solution of a regret minimization problem in the adversarial linear bandits setting. We give a brief introduction in Appendix F.3. Readers who are interested in this topic can refer to Part VI of . In our case the action matrix is constrained to \(\{^{}:  0,()=1\}\) and is chosen by Eq. (17); the loss matrix is constrained to the set of the transformed Fisher information matrices \(\{}(x_{i})\}_{i=1}^{m}\) and is chosen by minimizing Eq. (23).

Algorithm complexity.Our algorithm has two steps: convex relaxation (line 2 in Algorithm 1) and sparsification (lines 3-11). Let \(T_{}()\) be the complexity of eigendecomposition of a \(\)-dimensional symmetric positive definite matrix. Given an unlabeled point pool \(U\) with \(m=|U|\), the complexity of solving the convex relaxation problem by mirror descent (Algorithm 2) is \(m^{2} m+T_{}()  m\), where we assume that the number of iterations is \(( m)\) according to Theorem 42. Given sample budget \(b\), the complexity of solving the sparsification problem is \(T_{}()b+T_{}(c-1)bm \).

### Performance guarantee

We intend to lower bound \(_{}_{t[b]}}(x_{i_{t}})\) through lower bounding the right hand side of (18). First, since our point selection algorithm selects point \(x_{i}\) at each step to maximize \([_{t}^{1/2}-(_{t}^{-1/2}+ }(x_{i}))^{-1}]\), we establish a lower bound for this term at each step, as demonstrated in Proposition 9.

**Proposition 9**.: _At each step \(t[b]\), we have_

\[_{i[m]}[_{t}^{1/2}-( _{t}^{-1/2}+}(x_{i}))^{-1}]}{b+}}.\] (24)

The derivation is elaborated in Appendix F.4. We remark that there is a similar lower bound derived for the optimal design setting in  (Lemma 3.2), where a rank-1 matrix \(_{i_{t}}_{i_{t}}^{}\) (\(i_{t}[m]\) and \(_{i_{t}}^{d}\)) is selected at each step. In contrast, in our active learning setting, the selected matrix \(}(x_{i_{t}})\) possesses a minimum rank of \(c-1\) and can even be a full-rank matrix, contingent upon the labeled points from prior rounds. The distinction between the characteristics of the matrices significantly complicates the derivation of such a general lower bound.

By connecting the observations obtained in this section, we can show that our algorithm can achieve \((1+)\)-approximation of the optimal objective with sample size \((/^{2})\). We conclude our results in Theorem 10.

**Theorem 10**.: _Given \((0,1)\), let \(=8}/\), whenever \(b 32/^{2}+16}/^{2}\), denote the instance index selected by Algorithm 1 at step \(t\) by \(i_{t}[m]\), then the algorithm is near-optimal: \(f_{t[b]}(x_{i_{t}})(1+)f_{*}\), where \(f\) is the objective function defined in Eq. (13) and \(f_{*}\) is its optimal value._

The excess risk upper bound for unlabeled points can be obtained using our algorithm in Theorem 4 by combining Theorem 3 and Theorem 10 while considering the impact of using \(_{0}\) as an approximation for \(_{*}\). We present the proof in Appendix F.6. Comparing Eq.(9) to Eq.(7), we observe a factor of \(2(1+)e^{2_{0}}\) degradation in the upper bound. The \((1+)\)-term comes from our algorithm, while the \(2e^{2_{0}}\)-term comes from the use of \(_{0}\) instead of \(_{*}\). This observation suggests that, given a total budget of points to label \(b\) we should consider an iterative approach consisting of \(r\) active learning rounds. At each round \(k\) we label a new batch of size \(b/r\) points and we obtain a new estimate \(_{k}\) that can be used to approximate \(_{*}\). The prefactor containing \(_{0}\) will becomes \(_{k}\) and reduces \(_{k}\) converges to \(_{*}\). The simplest solution would be to use \(r=b\) but this can be computationally expensive. In our tests, we use this batched approach and choose \(b/r\) to be a small multiple of \(c\).

## 5 Numerical Experiments

Synthetic datasets.We use synthetic datasets to demonstrate the excess risk bounds Eq. (7) derived in Theorem 3. We choose \(p(x)(,_{p})\), where \(_{p}=100_{d}\) and \(d=8\). We explore different numbers of classes denoted by \(c\{2,3,5,8\}\). We define the ground truth parameter \(_{*}\) in such a way that the points generated from \(p(x)\) are nearly equally distributed across the \(c\) classes. In Fig. 4 (Appendix G.1), we plot the first two coordinates of the points draw from \(p(x)\), where each point is colored by its class id.

We conduct tests using two different types of \(q(x)\) based on operations applied to \(p(x)\): _dilation_ and _translation_. For the dilation, \(q(x)\ (,_{q}_{p})\), where \(_{q}^{+}\). We vary \(_{q}\) within so that FIR \((_{q}{}^{-1}_{p})\) is in \([0.2,10]\), where \(=d(c-1)\). For translation, \(q(x)(_{q},_{p})\), where \(=(1/,1/,0,,0)\) and \(_{q}^{+}\). We examine various \(_{q}\) values that ensures \(_{q}{}^{-1}_{p}[,10]\). For each \(c\{2,3,5,8\}\), \(q(x)\) and \(n\{1600,3200\}\), we i.i.d. draw \(n\) samples from \(_{q}(x)\) and obtain \(_{n}\) defined by Eq. (4) using these samples. We estimate excess risk \(L_{p}(_{n})-L_{p}(_{*})\) by averaging the log-likelihood error on \(5 10^{4}\) i.i.d. points sampled from \(p(x)\).

Fig. 2 displays the excess risk plotted against FIR for both dilation tests (left two plots) and translation tests (right two plots). It is evident that FIR plays a crucial role in controlling the excess risk. In the case of dilation tests, we observe an almost linear convergence rate with respect to FIR. In the translation tests, we observe a faster-than-linear convergence rate, which can be explained by examining the upper bound of Eq. (7). As FIR decreases, \(\) also decreases according to the right plot of Fig. 6). By Proposition 37, in our scenario, we have \(K_{1,q}(100+_{q})^{3/4}\). In Appendix C,

Figure 2: _Synthetic experiments: excess risk of \(p(x)\) as a function of the FIR (\(_{q}{}^{-1}_{p}\)) in dilation and translation tests._

it is stated that \(C_{3}=(K_{0,p}K_{1,q}K_{2,p})\). As a result, as FIR decreases, both \(C_{3}\) and \(\) decrease, leading to a decrease in \(\) (as indicated by Eq. (63)). Referring to Fig. 1, the prefactor of the FIR term in the upper bound decreases as \(\) decreases. Consequently, the upper bound of Eq. (7) indicates a faster-than-linear convergence rate with respect to the FIR term in the case of translation. We perform similar tests on multivariate Laplace distribution and t-distribution, and the results are consistent with our observations on Gaussian tests. Further details of synthetic experiments are given in Appendix G.1.

Real-world datasets.We demonstrate the effectiveness of our active learning algorithm using three real-world datasets: MNIST , CIFAR-10 , and ImageNet . In the case of ImageNet, we randomly choose 50 classes for our experiments. First we use unsupervised learning to extract features and then apply active learning to the feature space, that is, we do **not** use any label information in our pre-processing. For MNIST, we calculate the normalized Laplacian of the training data and use the spectral subspace of the 20 smallest eigenvalues. For CIFAR-10 and ImageNet-50, we use a contrastive learning SimCLR model ; then we compute the normalized nearest-neighbor Laplacian and select the subspace of the 20 smallest eigenvalues; For ImageNet-50 we select the subspace of the 40 smallest eigenvalues. For each dataset, we initialize the labeled data \(S_{0}\) by randomly selecting one sample from each class. Further details about tuning hyperparameter \(\) and data pre-processing are given in Appendix G.2.

We compare our algorithm FIRAL with five methods: (1) Random selection, (2) K-means where \(k=b\), (3) Entropy: select top-\(b\) points that minimize \(_{c}p(y=c|x) p(y=c|x)\) (where \(c\) is the class with the highest probability), (4) Var Ratios: select top-\(b\) points that minimize \(p(y=c|x)\) (where \(c\) is the class with the highest probability), (5) BAIT : solving the same objective as our method, select \(2b\) points and then delete \(b\) points, both in greedy way. Random and K-means are non-deterministic, we run each test 20 times. The other methods are deterministic and the only randomness is related to \(S_{0}\). We performed several runs varying \(S_{0}\) randomly and there is no significant variability in the results, so for clarity we only present one representative run. We present the classification accuracy on \(U\) in the upper row of Fig. 3. We can observe that our method consistently outperforms other methods across all experiments. K-means, one of the most popular methods due to each simplicity significantly underperformed FIRAL. It is worth noting that the random selection method serves as a strong baseline in the experiments of ImageNet-50, where our method initially outperforms Random but shows only a marginal improvement in later rounds. But random selection underperforms in CIFAR-10. In the lower row of Fig. 3, we show the images selected in the first round on ImageNet-50 for BAIT and FIRAL. Images selected in other methods

Figure 3: _Active learning results for MNIST (left), CIFAR-10 (center) and ImageNet-50 (right). Black dashed lines in the upper row plots are the classification accuracy using all points in \(U\) and their labels. The lower row shows 50 images that are selected in the first round of the active learning process for the ImageNet-50 dataset._

and other datasets can be found in Appendix G.2. One way to qualitatively compare the two methods is to check the diversity of the samples: in the 50-sample example BAIT samples only 21/50 classes; FIRAL samples 37/50 classes. This could explain the significant loss of performance of BAIT in the small sample size regime.

## 6 Conclusions

We presented FIRAL, a new algorithm designed for the pool-based active learning problem in the context of multinomial logistic regression. We provide the performance guarantee of our algorithm by deriving a excess risk bound for the unlabeled data. We validate the effectiveness of our analysis and algorithm using experiments on synthetic and real-world datasets. The algorithm scales linearly in the size of the pool and cubically on the dimensionality and number of classes--due to the eigenvalue solves. The experiments show clear benefits, especially in terms of robustness of performance across datasets, in the low-sample regime (a few examples per class).

One limitation of our algorithm is the reliance of a hyperparameter, \(\), derived from the learning rate in the FTRL algorithm. There are a large body of work in online optimization about the adaptive FTRL algorithm (e.g., ), which eliminates the need for such hyperparameter. In our future work, we will investigate the integration of adaptive FTRL and evaluate its impact on the overall performance of FIRAL. By exploring this avenue, we aim to enhance the flexibility and efficiency of our algorithm. Another parameter is the number of rounds to use in batch mode, but this we have just set to a small multiple of the number of classes. Other extensions include more complex classifiers and combination with semi-supervised learning techniques.

## 7 Acknowledgements

This material is based upon work supported by NSF award OAC 2204226; by the U.S. Department of Energy, Office of Science, Office of Advanced Scientific Computing Research, Applied Mathematics program, Mathematical Multifaceted Integrated Capability Centers (MMICCS) program, under award number DE-SC0023171; and by the U.S. National Institute on Aging under award number R21AG074276-01. Any opinions, findings, and conclusions or recommendations expressed herein are those of the authors and do not necessarily reflect the views of the DOE, NIH, and NSF. Computing time on the Texas Advanced Computing Centers Stampede system was provided by an allocation from TACC and the NSF.