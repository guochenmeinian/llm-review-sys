# The Rank-Reduced Kalman Filter: Approximate Dynamical-Low-Rank Filtering In High Dimensions

Jonathan Schmidt

Tubingen AI Center, University of Tubingen

jonathan.schmidt@uni-tuebingen.de

&Philipp Hennig

Tubingen AI Center, University of Tubingen

philipp.hennig@uni-tuebingen.de

Jorg Nick

University of Tubingen

nick@na.uni-tuebingen.de

&Filip Tronarp

Lund University

filip.tronarp@matstat.lu.se

###### Abstract

Inference and simulation in the context of high-dimensional dynamical systems remain computationally challenging problems. Some form of dimensionality reduction is required to make the problem tractable in general. In this paper, we propose a novel approximate Gaussian filtering and smoothing method which propagates low-rank approximations of the covariance matrices. This is accomplished by projecting the Lyapunov equations associated with the prediction step to a manifold of low-rank matrices, which are then solved by a recently developed, numerically stable, dynamical low-rank integrator. Meanwhile, the update steps are made tractable by noting that the covariance update only transforms the column space of the covariance matrix, which is low-rank by construction. The algorithm differentiates itself from existing ensemble-based approaches in that the low-rank approximations of the covariance matrices are deterministic, rather than stochastic. Crucially, this enables the method to reproduce the exact Kalman filter as the low-rank dimension approaches the true dimensionality of the problem. Our method reduces computational complexity from cubic (for the Kalman filter) to _quadratic_ in the state-space size in the worst-case, and can achieve _linear_ complexity if the state-space model satisfies certain criteria. Through a set of experiments in classical data-assimilation and spatio-temporal regression, we show that the proposed method consistently outperforms the ensemble-based methods in terms of error in the mean and covariance with respect to the exact Kalman filter. This comes at no additional cost in terms of asymptotic computational complexity.

## 1 Introduction

Spatio-temporal dynamical systems have always played an important role in the applied sciences, such as climate science, numerical weather prediction, or geophysics. In precisely these settings, one is often faced with massive amounts of data to be processed. At the same time the interactions are of such complex nature that it is imperative to include a notion of uncertainty in the model and in its outputs. Both these requirements have a reputation as being computationally expensive. Hence, sensible approximations are indispensable at a certain scale.

Concretely, we consider state-space models of the form

\[(t) =(t)\,t+\,(t), \] \[(t_{l})(t_{l}) ((t_{l}),), l=1,,N \]where \(^{n}\) is the latent state, \(^{m}\) is the measurement process, and \(\) is a standard Wiener process in \(^{q}\). Equation (1a) defines the prior dynamics model via a linear time-invariant (LTI) stochastic differential equation (SDE) with drift matrix \(^{n n}\) and dispersion matrix \(^{n q}\). The linear Gaussian observation model Eq. (1b) is specified via the measurement matrix \(^{m n}\) and measurement-noise covariance \(^{m m}\), where possible time-dependency has been omitted from the notation. While the probabilistic state-estimation problem may in principle be solved in closed form using the Kalman filter (KF) and smoother , we will consider the case where the state dimension \(n\) and measurement dimension \(m\) are very large, making the covariance recursion computationally prohibitive in practice. Such settings include spatio-temporal Gaussian process regression , and data assimilation applications such as meteorology and oceanography , numerical weather forecasting , geoscience , inverse problems , and brain imaging . While the Gaussian process (GP) literature offers many ways of tractable, approximate inference, approaches based on approximations of the underlying kernel function are not amenable to the present problem setting. Without a kernel to approximate, the problem is often solved by ensemble methods, which stochastically propagate low-rank approximations to the covariances in the filtering recursion. This stochasticity introduces unfavorable properties in these methods. To avert this shortcoming, we propose a novel low-rank filtering recursion, which is fully deterministic.

ContributionsThis text develops a method for efficient, approximate Gaussian filtering, including smoothing and marginal likelihood computation. The method employs the standard predict/correct formulation of the filtering problem, and can in principle be thought of as a square-root implementation of a Kalman filter, in that it represents all covariance matrices as their left square-root factors . However, instead of square matrix square roots, the covariances are approximated by \((n r)\)-dimensional low-rank factors, where \(r n\). We propose an approximate low-rank prediction-correction loop, together with the computation of the backwards Markov process representing the smoothing posterior, all while preserving this low-rank structure throughout time.

Crucial to this work are (i) the use of dynamic-low-rank approximation (DLRA)  to solve Lyapunov equations on the manifold of rank-\(r\) matrices in the prediction step and (ii) an efficient correction scheme that updates only the low-dimensional column space of the predicted covariance factor, which introduces no additional approximation error. The computational complexity of the proposed filter is asymptotically equal to those of the widely-used ensemble Kalman filters.

The method offers a deterministic alternative to existing ensemble methods. In particular, it recovers the exact Kalman filter estimate both in the full-rank limit \(r=n\) and if the problem is in fact of rank \(r<n\). The latter is demonstrated in Fig. 1, in which a problem with \(n=1000\) state dimensions and a true rank of 7 is approximated with \(r=3,7,11\). As soon as \(r\) exceeds the true rank of the problem, the residual subspace dimensions collapse. The method will be detailed in Section 3 and evaluated on the basis of various experiments in Section 4. All source code is publicly available on GitHub.1,2

Figure 1: _Rank-\(r\) approximations to the true KF covariance (left) for increasing \(r\). The considered problemâ€™s true rank is \(r^{*}=7\) by construction, the state-dimension is \(n=1000\). The respective low-rank factors are shown above and left of their outer product. For \(r r^{*}\), the KF estimate is recovered. For \(r>r^{*}\), the excess columns of the low-rank factor collapse (rightmost plot)._

Related workThe state estimation problem defined by Eq. (1) amounts to linear Gaussian state estimation and can be computed in closed form by Kalman filtering and smoothing. A modern overview can be found in Sarkka and Solin . While the exact filtering and smoothing recursions scale linearly with the number of time points \(N\), they scale cubically in the state dimension \(n\) and the measurement dimension \(m\), making their use computationally infeasible in many high-dimensional problems. A widely-used approximate filtering technique used to circumvent this computational burden are ensemble Kalman filters (EnKF) [11; 12; 13; 26; 32; 6]. The ensemble is a set of \(r\) randomly sampled state vectors of dimension \(n\), which parametrize the mean and covariance via sample statistics. It is processed successively in a prediction-correction loop similar to the KF. The mean-centered ensemble can be regarded as a low-rank square-root factor of the sample covariance matrix. In Section 4 we compare our method to the standard version of the EnKF and the ensemble transform Kalman filter , which is categorized as an ensemble-square-root filter .

In so far as it aims for computationally tractable Gaussian process regression, the proposed method is related to approaches using the Nystrom method , inducing point methods [38; 44; 22], random Fourier features , and doubly-sparse variational Gaussian processes .

The literature offers more contributions related to the present work under the broader context of low-rank and dimensionality-reduction methods. Loiseau et al. , Netto and Mili , Vijayashankar et al.  approach low-rank modelling of dynamical systems based on measured data, whereas Farrell and Ioannou  are concerned with low-rank approximations of a given model based on classical theory on linear time-invariant systems. Cressie et al.  develop a tractable hierarchical Bayesian model to approximate high-dimensional spatio-temporal dynamics in a reduced latent space and condition on measurements by transporting the low-dimensional diffusive process to the full space by a projection that is assumed to be known. In those cases, once a low rank model is obtained for the phenomena under study, state estimation becomes computationally tractable, due to the reduced size of the resulting model. These works build upon the assumption that the state of the system evolves approximately in a low-dimensional manifold, whereas our method works under the assumption that the _error_ in the state estimate evolves approximately in a low-dimensional manifold.

## 2 Background

Throughout this work, for a function \(x(t)\) and a grid \((t_{1},..,t_{N})\) we use the abbreviated notation \(x(t_{l})=x_{l}\) and \((x(t_{a}),...x(t_{b}))=x_{a:b}\). The task of interest is computing the filtering densities \(p(x_{l} y_{1:l})\) and smoothing densities \(p(x_{l} y_{1:N})\) for \(l=1,,N\). LTI SDEs of the form in Eq. (1a) admit an equivalent discrete formulation in terms of linear Gaussian transition densities of the form

\[_{l}_{l-1}(_{l}_{l-1}, _{l}). \]

The transition matrix \((t)^{n n}\) and process-noise covariance matrix \((t)^{n n}\) solve the matrix differential equations \((t)=(t)\) and

\[}(t)=(t)+(t)^{*}+ ^{*}, \]

in the interval \([t_{l-1},t_{l})\) with initial conditions \((t_{l-1})=\) and \((t_{l-1})=0\), respectively . Equation (3) is known as a _Lyapunov equation_, and will be of special importance in this work.

### Square-root filtering

For numerically stable filtering and smoothing, all covariance matrices involved can be represented by matrix square roots (e.g. Cholesky factors). This is known as square-root filtering/smoothing . Let \((_{1}_{2})\) denote a wide block matrix in \(^{d_{1}(d_{2}+d_{3})}\), where \(_{1}^{d_{1} d_{2}}\) and \(_{2}^{d_{1} d_{3}}\) are some matrices. Given the filtering covariance at time \(t_{l-1}\) as \(_{l-1}=_{l-1}^{}{{2}}}_{l-1}^{}{{2} }}\) a square-root factorization of the predicted covariance \(_{l}=_{l}^{}{{2}}}_{l}^{}{{2}}}\) is given by

\[_{l}=_{l}_{l-1}_{l}^{*}+_{l}=(_{l}_{ l-1}^{}{{2}}}_{l}^{}{{2}}})( _{l}_{l-1}^{}{{2}}}_{l}^{}{{2 }}})^{*}, \]

and, hence, \((_{l}_{l-1}^{}{{2}}}_{l}^{ }{{2}}})\) is a matrix square-root of \(_{l}\). Similarly, the correction step can be carried out entirely on square-root factors. For more details, see Grewal and Andrews .

### Dynamical low-rank approximation

Consider an initial value problem with a matrix-valued flow field \(F:^{u v}^{u v}\)

\[}(t)=F(t,(t)),(t_{0})=_{0}, \]

where \(u\) and \(v\) are potentially very large. Dynamic low-rank approximation (DLRA) methods [27; 8] efficiently compute low-rank factorizations \((t)=(t)(t)^{*}(t)(t)\) of Eq. (5) by solving

\[}(t)=_{r}[(t)] F(t,(t)), (t_{0})=_{0}_{0}_{0}^{*}, \]

instead. The matrices \(_{0}^{u r}\), \(_{0}^{r r}\), and \(_{0}^{v r}\) are an initial low-rank factorization of \((t_{0})(t_{0})\). \(_{r}[(t)]\) denotes the projection operator onto the tangent space at \((t)\), where \((t)\) lies in the manifold of rank-\(r\) matrices. In the present work, we leverage this technique to obtain a low-rank factor \(^{}{{2}}}\) of the process-noise covariance at the next prediction location. Thus, we avoid much of the computational cost in the prediction step, otherwise caused by solving the full Lyapunov equation for \(\) in Eq. (3), for example using matrix-fraction decomposition [40; 3]. Concretely, let \(F()=+^{*}+^{*}\). Then, an approximate low-rank process-noise covariance matrix associated with the prediction step is obtained by integrating

\[}(t)=_{r}[(t)] F((t)), (t_{l-1})=_{0}_{0}^{2}_{0}^{*}=0 \]

from \(t_{l-1}\) to \(t_{l}\). At the start of the filtering recursion \(t_{0}\), an initial low-rank factorization is constructed with a random orthogonal matrix \(_{0}\) and \(_{0}=0\). For all subsequent steps the propagated orthogonal basis \((t_{l})\) can be reused. In this work, all mentions of dynamic low-rank integration always refer to the recently developed, numerically stable basis update & Galerkin (BUG) integrator , whose error bounds are independent of small singular values. More details are given in Appendix C.

## 3 Rank-reduced Kalman filtering

In this section, a method for approximate inference in Eq. (1) is developed. The idea is to approximate the full filtering/smoothing covariance matrices of the latent state by an eigendecomposition truncated at the \(r\)-th largest eigenvalue. The main challenge is to thereby attain linear computational scaling in \(n\) and \(m\) under appropriate assumptions on the state-space model. Before proceeding with the filtering and smoothing recursions, it is instructive to examine inference in a static low-rank model.

### Efficient inference in static models of low rank

Consider the following latent variable model

\[(,^{}{{2}}}^{}{{2 }}}),(,), \]

where \(^{}{{2}}}^{n r}\) is of full column rank, \(r n\), and \(^{m m}\). Representing the latent state \(\) as

\[=+^{}{{2}}}, (0,_{r r}), \]

reduces the problem to inference in the following model

\[(0,_{r r}), (+^{}{{2}}} ,). \]

An efficient inference scheme is given by the following proposition, which is proved in Appendix A.1.

**Proposition 1**.: _Let \(\) and \(\) be two random variables governed by Eq. (10). Assume \(r m\) and consider the following singular value decomposition \((^{}{{2}}}^{}{{2}}})^{*}= ^{*}\), where \(,^{r r}\) and \(^{m r}\). Then, defining the whitened residual \(=^{}{{2}}}(-)\), we get_

\[ (,^{}{{2}}}( ^{2}^{*}+)^{}{{2}}}), \] \[ ((+^{2})^{-1} ^{*},(+^{2})^{-1}^ {*}). \]

_Furthermore, let \(||\) denote the matrix determinant. The marginal log-likelihood of \(\) is given by_

\[(;,^{ }{{2}}}(^{2}^{*}+)^{}{{2}}}) =- 2-|^{}{{2}}}|- _{k=1}^{r}(1+_{kk}^{2}) \] \[-\|\|^{2}+^{*} (^{2}+)^{-1}^{*}.\]The below corollary follows from the deterministic relationship between \(z\) and \(x\) given by Eq. (9).

**Corollary 1**.: _Let \(y\) and \(x\) be two random variables governed by the model Eq. (8) and \(r m\). Then_

\[x y(+,), \]

_where_

\[=^{}{{2}}}(+^{2})^{-1} ^{*},=^{}{{2}}}(+ ^{2})^{-1}^{*}^{}{{2}}}. \]

_Moreover, a square-root of \(\) is readily obtained by_

\[^{}{{2}}}=^{}{{2}}}(+ ^{2})^{-}{{2}}}. \]

### The rank-reduced filtering recursion

In this section, a low-rank prediction-correction recursion is developed for the purpose of obtaining the filtering densities and the logarithm of the marginal likelihood.

The prediction equationsSuppose the filtering distribution at time \(t_{l-1}\) is given by

\[p(x_{l-1} y_{1:l-1})=(x_{l-1};_{l-1},_{l-1}^{ {{1}}{{2}}}_{l-1}^{}{{2}}}), \]

where \(_{l-1}^{}{{2}}}^{n r}\). We begin by detailing how to compute a low-rank factor \(_{l}^{}{{2}}}\) of the predicted covariance. First compute the truncated singular value decomposition (SVD)

\[(_{l}_{l-1}^{}{{2}}}_{l}^{ {{1}}{{2}}})}_{l}}_{l}}_{l}^{*} \]

of the square-root factor (cf. Section 2.1), with \(}_{l}^{n r}\), \(}_{l}^{r r}\), and \(}_{l}^{r r}\). This can be done in an optimal way by computing the full SVD and truncating it at the \(r\)-th largest singular value in \((nr^{2})\). The process-noise covariance factor \(_{l}^{}{{2}}}^{n r}\) in Eq. (17) is computed using DLRA as described in Section 2.2. The rank-reduced predicted moments at time \(t_{l}\) are thus given as

\[_{l}^{-} =_{l}_{l-1}^{n}, \] \[_{l}^{}{{2}}} =}_{l}}_{l}^{n  r}. \]

The update equationsThe low-rank update equations follow from Proposition 1 and Corollary 1:

\[_{l} =_{l}^{-}+_{l}_{l}^{n}, \] \[_{l}^{}{{2}}} =_{l}^{}{{2}}}_{l}(+_{l}^{2})^{-}{{2}}}^{n r}, \]

with the whitened residual \(_{l}=^{-}{{2}}}(y_{l}-_{l}^{-})\) and

\[(^{-}{{2}}}_{l}^{}{{2}}})^{* }=_{l}_{l}_{l}^{*},_{l}=_{l} ^{}{{2}}}_{l}(+_{l}^{2})^{-1} _{l}_{l}^{*}, \]

for \(_{l},_{l}^{r r}\) and \(_{l}^{m r}\). The marginal predictive log-likelihood of \(y_{l}\) is given by

\[ p(y_{l} y_{1:l-1}) =- 2-|^{}{{2}}}|- _{k=1}^{r}((_{l})_{kk}^{2}+1) \] \[-_{l}\|^{2}}{2}+_{l} ^{*}_{l}_{l}(_{l}^{2}+)^{-1}_{l}_{l}^{*}_{l}.\]

Corollary 1--and by extension, the above filtering recursion--is only valid when \(r m\), which is exactly the intended usecase for the proposed method. For settings in which \(m<r n\) the correction step follows the square-root correction of a Kalman filter and is detailed in Appendix B.

### Time complexity of the rank-reduced filtering recursion

This section analyzes the computational complexity of the proposed method. In the worst case, the method scales quadratically in the state dimension \(n\) and measurement dimension \(m\). Under favorable conditions, which are met in many real-world applications, the rank-reduced Kalman filter obtains a computational complexity of \(O(nr^{2})\) as stated by Proposition 2, which is proven in Appendix A.2. We begin by specifying a set of assumptions for Proposition 2.

**Assumption 1**.: _The maps \(\), \(\), and \(^{*}\) can be evaluated in \((n)\)._

Assumption 1 is fulfilled naturally in many dynamical systems, in which local operators introduce sparsity into the dynamics, as, e.g., in finite-difference approximations of spatial differential operators. Another example is Kronecker structure in the system matrices arising in spatio-temporal GP regression by assuming the covariance function is separated into a product over the respective spatial and temporal components [35; 39; 20; 42].

**Assumption 2**.: _The map \(\) can be evaluated in \((m)\)._

**Assumption 3**.: _The map \(^{-}{{2}}}\) and the log-determinant \(|^{}{{2}}}|\) can be evaluated in \((m)\)._

Throughout this work, we refer to the situation in which Assumption 1 or 2 do not apply as the "worst case". Assumption 3 is taken for granted as the measurement-noise covariance \(\) is often a diagonal matrix, which implies that sensor errors are uncorrelated. This is not only realistic but also commonly imposed in modelling. The above assumptions allow the following proposition.

**Proposition 2**.: _Given Assumptions 1 to 3, the proposed method approximates the filtering densities and the marginal likelihood at a cost of \((nr^{2}+mr^{2}+r^{3})\)._

The below corollary follows from the book-keeping in the proof of Proposition 2 in Appendix A.2.

**Corollary 2**.: _When Assumption 1 or Assumption 2 are not satisfied, the worst-case complexity of the proposed low-rank filtering recursion is \((n^{2}r+nm+m^{2}r)\)._

Overall, the proposed filtering recursions achieve the same asymptotic complexity as the existing ensemble methods under the same set of assumptions. However, our method is entirely deterministic.

### The rank-reduced smoothing recursion

It remains to obtain a recursion for the smoothing densities, which can be shown to be computationally tractable given that the filtering recursion is tractable. The smoothing densities are denoted by

\[p(_{l} y_{1:N})=(_{l};_{l},_{l}), _{N}=_{N},\;_{N}=_{N}. \]

It can be shown that the posterior process has a backward Markov representation , hence the smoothing marginals may be obtained by

\[p(_{l} y_{1:N})= b_{l,l+1}(_{l}_{l+1 })p(_{l+1}_{1:N})\,_{l+1}, \]

where we call \(b_{l,l+1}\) the _backwards kernel_. Consequently, the problem consists of approximating \(b_{l,l+1}\) such that the marginalization Eq. (25) may be implemented in a computationally frugal manner.

Approximating the backwards kernelFor the linear Gaussian case, the backward kernel 

\[b_{l,l+1}(_{l}_{l+1})=(_{l}; _{l}_{l+1}+_{l},_{l}), \]

is parametrized by the _smoothing gain_\(_{l}^{n n}\), the shift vector \(_{l}^{n}\), and the covariance of the backwards kernel \(_{l}^{n n}\). Let \(()^{+}\) denote the Moore-Penrose pseudoinverse. Then

\[_{l}=_{l}_{l+1}^{*}_{l+1}^{+},_{l}=_ {l}-_{l}_{l+1}^{-},_{l}=(-_{l }_{l+1})_{l}(-_{l}_{l+1})^{*}+_{ l}_{l+1}_{l}^{*}. \]

In the low-rank setting, the backwards kernel is efficiently approximated given the results from above. The approximate smoothing gain is a product of a tall, a small quadratic, and a wide matrix:

\[_{l}_{l}^{}{{2}}}^ {}{{2}}}_{l+1}^{*}(_{l+1}^{}{{2}}} )^{+}}_{=:_{l}^{n n}}(_{l+1}^{}{{2}}})^{+}. \]

During filtering, \(_{l}\) is saved alongside the low-rank factors of the prediction and filtering covariances. We proceed to compute a low-rank representation of the backwards-transition covariance. Consider the following singular value decomposition, truncated at the \(r\)-th largest singular value,

\[((-_{l}_{l+1})_{l}^{}{{2}}} _{l}_{l+1}^{}{{2}}}) }_{l}}_{l}}_{l}^{*}, \]where \(}_{l}^{n r}\), \(}_{l}^{r r}\) diagonal, \(}_{l}^{r r}\), and \(_{l}\) as given in Eq. (28). Then a rank-\(r\) factor of \(_{l}\) is given as

\[_{l}^{}{{2}}}=}_{l}}_{l}^{n r}. \]

As for filtering, in the worst case, the cost for low-rank smoothing scales quadratically with the state dimension \(n\). The following proposition, which is proved in Appendix A.3, states that this can be further reduced to linear complexity in \(n\), given the assumptions on the dynamics model are satisfied.

**Proposition 3**.: _Given Assumption 1, computing the smoothing density \(p(_{l}_{1:N})\) costs \((nr^{2}+r^{3})\)._

Finally, it is useful to mention that realizations of the backwards process are posterior samples.

## 4 Experiments

This section evaluates the proposed method in different experimental settings. The chosen measure of quality is the distance of the approximate low-rank moments to the exact KF. We measure the mean deviations with the root-mean-squared error (RMSE) and the covariance deviations with the time-averaged relative Frobenius distances. The presented rank-reduced Kalman filter (RRKF) is compared to the ensemble Kalman filter (EnKF) and the ensemble transform Kalman filter (ETKF). All EnKF and ETKF results are given in sample statistics over 20 runs. Section 4.1 shows that for a truly low-rank system, our method recovers the KF estimate up to numerical error as soon as \(r\) exceeds the true rank of the problem. Section 4.2 tests the method on a spatio-temporal GP regression problem with real data. After Section 4.3 evaluates the approximation quality for increasingly low-rank systems in a controlled experimental environment, Section 4.4 verifies the stated asymptotic cost of the method. Finally, a large-scale spatio-temporal regression problem is solved in Section 4.5. In all experiments, we compute the stationary mean and a low-rank factorization of the stationary covariance matrix of the prior and condition the stationary moments on the first measurement in the respective time-series dataset. More details on the experimental setups are given in Appendix D.

### Linear advection model

The proposed algorithm is evaluated in a standard data-assimilation setup in which linear-advection dynamics with periodic boundary conditions are assimilated to a set of simulated data. The setup follows the description in Sakov and Oke  and the experimental details are additionally detailed in Appendix D. This problem has rank 51 by construction. Figure 1(a) shows how the exact KF estimate is recovered by our method for \(r=51\), while the ensemble methods converge according to a Monte-Carlo rate. This is particularly clear for the covariance estimate (Fig. 1(a), **B**.).

### London air-quality regression

This experiment uses hourly data from the London air-quality network  between January 2019 and April 2019, which amounts to measurements at \(72\) spatial locations and 2159 points in time. The

Figure 2: _Performance of the low-rank filters on two different settings._ In the truly low-rank linear advection problem (a), the RRKF achieves the optimal estimate (\(\)) when \(r\) exceeds the true rank of the problem. For the spatio-temporal air-quality regression (b), our method is consistently better.

data used, together with its processing (except the train-test split), is the same as in the corresponding experiment by Hamelijnck et al. . The model is a spatio-temporal Matern-\(_{2}\) process with prior hyperparameters that maximize the marginal log likelihood. Figure 2b shows that--compared to the ensemble methods--our algorithm is consistently closer to the KF estimate and recovers it at \(r=n\).

### Spatio-temporal Matern process with varying spatial lengthscale

Consider a spatio-temporal Gaussian process \((t)(0,k_{t} k_{x})\) with covariance structure that is separable in time and space. Let both \(k_{t}\) and \(k_{x}\) be of the Matern family with characteristic spatial and temporal lengthscales \(_{t},_{x}\) and output scales \(_{t}^{2},_{x}^{2}\). Spatio-temporal Matern processes can be translated to the formulation in Eq. (1a), as detailed, for instance, by Solin . This setting allows for varying the "low-rankness" by the choice of \(_{x}\): the larger \(_{x}\), the more information about a spatial point is prescribed by its surroundings. As \(_{x}\) approaches zero, the spatial kernel matrix gets more and more diagonal, encoding spatially independent states, and causing a barely decaying spectrum. The spectrum for large \(_{x}\) decays rapidly, making low-rank approximations more accurate for small \(r\).

In the experiment, we consider a spatial domain \(^{2}\), which is subsampled at a uniformly-spaced grid with \(_{x}=0.1\) (\(n=21 21=441\)). Noisy observations of the full state trajectory, are drawn from a realization of the prior process. Figure 3 demonstrates that, for increasing spatial lengthscales, all methods converge faster to the true KF estimate. Crucially, however, our method is consistently closer to the optimal estimate and recovers it for \(r=n\).

Figure 4: _Best-case and worst-case asymptotic complexities of the low-rank filters._ When all Assumptions 1 to 3 are satisfied (**A.**), the elapsed time grows linearly with the state dimension \(n\). If parts of the assumptions are not met (**B.**), the cost scales quadratically with the respective dimension.

Figure 3: _How does the rate of spectral decay influence the low-rank approximation?_ The larger the spatial length scale of a spatio-temporal Matern model, the faster the spectrum decays and the faster all methods converge to the KF estimate. The first and second row compare the mean estimates and the covariance estimates, respectively. The RRKF estimate is consistently closer and recovers the KF estimate (\(\)) at \(r=n\). The cumulative spectrum of the final-step KF covariance is shown in grey.

### Runtime

To demonstrate the asymptotic computational complexities given in Section 3.3, we investigate the runtimes on two different settings: The first fulfills both Assumptions 1 and 2, whereas the second only fulfills Assumption 2, which means that the cost of prediction is quadratic in the state dimension. Both problems are solved on a temporal grid of size \(N=100\) with the measurement dimension fixed at \(m=100\) and the low-rank dimension fixed at \(r=5\).

The problem from Section 4.1 serves as the best-case setting. The noise-free linear-advection dynamics amount to multiplication of the state with a circulant matrix, which is implemented efficiently using fast Fourier transform. The measurement operator amounts to array indexing. As subplot **A.** in Fig. 4 confirms, the computational cost grows linearly with the state dimension. As a worst-case example we employ a spatio-temporal Matern process with a dense spatial kernel matrix (cf. Section 4.3). In this case, we expect the computation time to scale quadratically with the state dimension because \(^{*}\) is dense. This is verified by the right plot in Fig. 4 (**B.**).

### Large-scale spatio-temporal GP regression on rainfall data

As a final experiment, a spatio-temporal GP regression problem is solved on a large gridded analysis data set measuring rainfall in Australia. The data is provided by the Australian Water Availability Project (AWAP) . The number of spatial data points is \(n=30\,911\), which rules out the cubic-in-\(n\) Kalman filter. The smoothing posterior is computed at \(N=40\) time points, from 25 January, 2023 through 5 March, 2023. The total number of observations is thus \(n N=1\,236\,440\). The spatio-temporal prior Matern model is selected by maximizing the marginal log-likelihood of a lower-resolution data set. A set of \(6160\) spatial points is excluded from the data during filtering and smoothing in order to evaluate spatial interpolation performance. Thus, the measurement dimension is \(m=n-6160=24751\). Figure 5 shows the low-rank approximation to the GP posterior with \(r=1000\) low-rank dimensions. The non-observed spatial locations are framed in the horizontal-"S" shape. At measurement locations, the data is described well by the model, while a slight smoothing-out effect can be observed due to the high-frequency features of the model being truncated. At the evaluation points the interpolation aligns with the expectations regarding the simple Matern model.

Figure 5: Rainfall in Australia. A spatio-temporal GP regression problem with \(n=30\,911\) state dimensions, solved with the RRKF with \(r=1000\). The columns are three different days in the time series. The rows show the data, mean estimate, and Z-scores, respectively.

The Z-score map shows \(-y_{l}}{_{l}}\), where \(_{l}\) and \(_{l}\) denote the smoothing mean and marginal standard deviation and \(y_{l}\) the data point, at time \(t_{l}\). This highlights badly calibrated uncertainty estimates, wherever the model under-/overestimates the data and is divided by a small standard deviation, in blue/red. The Z-score distribution receives further attention in Appendix E. All in all, the RRKF achieves high-quality approximate estimates while compressing the state by a factor of \( 30\).

## 5 Limitations

The main limitation of the proposed approximate probabilistic inference scheme is that the truncation to \(r\) dimensions cuts away covariance information, which is not accounted for. As a result, confidence _grows_ as \(r\) shrinks, while estimates should arguably get more uncertain instead with increased compression. In existing low-rank filters, this issue is often counteracted manually by inflating the covariance matrices, on a per-application basis (6, Section 4.4) and calls for a more principled treatment. Finding a way to keep track of that residual uncertainty information is beyond the scope of this paper. It remains unclear how to preserve the stated asymptotic complexities while doing so.

Further, all results herein are stated for linear dynamics and observation models. Extensions to non-linear models could include linearization of the according transitions, or cubature methods .

## 6 Conclusion

By building upon well-established knowledge about optimal compression, we have proposed an algorithm providing a principled way to balance approximation accuracy against computational cost in high-dimensional state estimation. It combines simple (truncated) singular value decompositions with recent numerical low-rank integrators of large matrix differential equations. We have offered both theoretical and empirical arguments for why it is desirable to use a deterministic algorithm when approximating large-scale probabilistic state-estimation problems.