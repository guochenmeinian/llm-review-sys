# Zeroth-Order Methods for Nondifferentiable, Nonconvex, and Hierarchical Federated Optimization

Yuyang Qiu

Dept. of Industrial and Systems Engg.

Rutgers University

yuyang.qiu@rutgers.edu

&Uday V. Shanbhag

Dept. of Industrial and Manufacturing Engg.

Pennsylvania State University

udaybag@psu.edu

&Farzad Yousefian

Dept. of Industrial and Systems Engg.

Rutgers University

farzad.yousefian@rutgers.edu

###### Abstract

Federated learning (FL) has emerged as an enabling framework for communication-efficient decentralized training. We study three broadly applicable problem classes in FL: (i) Nondifferentiable nonconvex federated optimization; (ii) Federated bilevel optimization; (iii) Federated minimax problems. Notably, in an implicit sense, both (ii) and (iii) are instances of (i). However, the hierarchical problems in (ii) and (iii) are often complicated by the absence of a closed-form expression for the implicit objective function. Unfortunately, research on these problems has been limited and afflicted by reliance on strong assumptions, including the need for differentiability and L-smoothness of the implicit function. We address this shortcoming by making the following contributions. In (i), by leveraging convolution-based smoothing and Clarke's subdifferential calculus, we devise a randomized smoothing-enabled zeroth-order FL method and derive communication and iteration complexity guarantees for computing an approximate Clarke stationary point. To contend with (ii) and (iii), we devise a unified randomized implicit zeroth-order FL framework, equipped with explicit communication and iteration complexities. Importantly, our method utilizes delays during local steps to skip making calls to the inexact lower-level FL oracle. This results in significant reduction in communication overhead when addressing hierarchical problems. We empirically validate the theory on nonsmooth and hierarchical ML problems.

## 1 Introduction

Federated learning (FL) has recently emerged as a promising enabling framework for learning predictive models from a multitude of distributed, privacy-sensitive, and possibly, heterogeneous datasets. This is accomplished through the use of efficiently devised periodic communications between a central server and a collection of clients. The FL algorithmic framework allows for addressing several key obstacles in the development and implementation of standard machine learning methods in a distributed and parallel manner. For instance, the conventional parallel stochastic gradient descent (SGD) method requires the exchange of information among the computing nodes at every single time step, resulting in excessive communication overhead. In contrast, FL methods including FedAvg  and Local SGD  overcome this onerous communication bottleneck by provably attaining the linear speedup of parallel SGD by using a significantly fewer communication rounds [18; 54; 24; 7]. These guarantees have been further complemented by recent efforts [26;38] where the presence of both data heterogeneity (i.e., variability of local datasets) and device heterogeneity (i.e., variability of edge devices in computational power, memory, and bandwidth) have been addressed. Despite recent advances, much needs to be understood about designing communication-efficient decentralized methods for resolving three broadly applicable problem classes, each of which is presented next.

(a) _Nondifferentiable nonconvex locally constrained FL_. Consider the prototypical FL setting:

\[_{x}\{\,f(x)_{i=1}^{m}_{_{ i}_{i}}[\,_{i}(x,_{i})\,]\,|\,x\,\,X\,\,_{i=1}^ {m}X_{i}\,\},\] ( **FL \[{}_{nn}\]**)

where \(f\) is a nonsmooth nonconvex function and is associated with a group of \(m\) clients indexed by \(i[\,m\,]\{1,,m\}\), \(_{i}\) denotes the local dataset, \(_{i}:^{n}_{i}\) is the local loss function, and \(X_{i}^{n}\) is an easy-to-project local constraint set. Notably, local datasets may vary across clients, allowing for data heterogeneity. We also consider client-specific local sets to induce personalization.

(b) _Nondifferentiable nonconvex bilevel FL_. Overlaying a bilevel term in (**FL\({}_{nn}\)**) leads to

\[_{x\,\,X\,\,_{i=1}^{m}X_{i}}\{f(x)\,\,y(x) \,_{y^{n}}_{i=1}^{m}_{_{i}_{i}}[_{i}(x,y,_{i})]\},\] ( **FL \[{}_{bl}\]**)

where \(f()_{i=1}^{m}_{_{i} _{i}}[\,_{i}(,y(),_{i})\,]\) denotes the implicit objective function and \(y():^{n}^{}\) is a single-valued map returning the unique solution to the lower-level problem at \(x\).

(c) _Nondifferentiable nonconvex minimax FL_. Finally, we consider the minimax setting, defined as

\[_{x X\,\,_{i=1}^{m}X_{i}}_{y^{}} _{i=1}^{m}_{_{i}_{i}}[\,_{i}(x,y,_{i})\,].\] ( **FL \[{}_{mm}\]**)

where we assume that \(y(x)_{y^{}}_{i=1}^{m} _{_{i}}_{i}}[\,_{i}(x,y,_{i})]\) is unique for all \(x\). Let \(f()_{i=1}^{m}_{_{i} _{i}}[\,_{i}(,y(),_{i})\,]\) denote the implicit objective function. Indeed, problem (**FL \[{}_{bl}\]**) subsumes this minimax formulation when we choose \[_{i}:=-_{i}\] and \[}_{i}:=_{i}.\]

Notably, in an implicit sense, both (b) and (c) are instances of problem (a). However, these hierarchical problems are often complicated by the absence of a closed-form expression for the implicit objective, denoted by \(f()\). Indeed, \(f()\) is often nonsmooth, nonconvex, and unavailable. As such, the absence of both zeroth and first-order information of \(f()\) in problems (b) and (c) makes the design and analysis of FL methods for these problems more challenging than that for (a).

**Gaps.** To the best of our knowledge, there are no known efficient FL algorithms that can contend with both **nonsmoothness** and **nonconvexity** in an unstructured sense. Generalizations that can accommodate either a **bilevel** or a **minimax** structure also remain unaddressed in FL.

**Goal.**_To develop a unified FL framework accommodating nondifferentiable nonconvex settings with extensions allowing for bilevel or minimax interactions_. We now describe the proposed framework.

### A Smoothed Sampled Zeroth-order Framework

We consider a smoothed framework for contending with constrained, nonsmooth, and nonconvex regimes. Specifically, given that \(f\) is an expectation-valued function and \(X\) is a closed and convex set, both of which are defined in (**FL\({}_{nn}\)**), a smoothed unconstrained approximation is given as follows.

\[\{ &\,_{i=1}^{m} _{_{i}}[\,_{i}(x,_{i})\,]\\ &\,x\,\,_{i=1}^{m}X_{i}.\} \{\,_{i=1}^{m}[\,_{_{i}}[\,_{i}(x,_{i})\,]+_{X_{i}}(x)}_{}]\,\}\] ( **FL \[{}_{nn}^{}\]**)

If \(f\) is as defined in (**FL\({}_{nn}\)**) and \(d(x)\,\,_{i=1}^{m}_{X_{i}}(x)\), then **f** and its smoothing \(^{}\) are defined as

\[(x)\,\,f(x)+d(x)^{}(x)\, \,f^{}(x)+d^{}(x),\] (1) \[f^{}(x)\,\,_{i=1}^{m}[\, _{u_{i}\,\,}[\,_{_{i}}[\,_{i}(x+  u_{i},_{i})\,]]]d^{}(x)\,\,_{i=1}^{m}_{X_{i}}^{ }(x).\](i) _Clarke-stationarity_. Consider the original problem (**FL\({}_{nn}\)**). Under the assumption that the objective of (**FL\({}_{nn}\)**) is Lipschitz continuous, then Clarke-stationarity of \(x\) w.r.t. (**FL\({}_{nn}\)**) requires that \(x\) satisfies \(0\,\, f(x)+_{_{i=1}^{m}X_{i}}(x)\), where \( f(x)\) represents the Clarke generalized gradient  of \(f\) at \(x\). However, a negative result has been provided regarding the efficient computability of an \(\)-stationary solution in nonsmooth nonconvex regimes . Consequently, we focus on the smoothed counterpart (**FL\({}_{nn}^{}\)**), a smooth nonconvex problem. In fact, under suitable conditions, it can be shown that stationary point of (**FL\({}_{nn}^{}\)**) is a \(2\)-Clarke stationary point of the original problem, i.e.

\[[\,0\,\,^{}(x)\,]\,\,\,[\,0\,\,_{ 2}(x)\,],\] (2)

where \(_{2}(x)\) represents the \(2\)-Clarke generalized gradient of \(\) at \(x\).

(ii) _Meta-scheme for efficient resolution of (**FL\({}_{nn}^{}\)**). We develop zeroth-order stochastic gradient schemes for resolving (**FL\({}_{nn}^{}\)**). This requires a zeroth-order gradient estimator for \(f^{}(x)\), denoted by \(_{i=1}^{m}g_{i}^{}(x,_{i},v_{i})\) where \(v_{i}\,\,\) for \(i\,\,[m]\) and \(\) denotes the surface of the unit ball. Note that the Moreau smoothing of the indicator function of \(X_{i}\), denoted by \(_{X_{i}}^{}(x)\), admits a gradient, defined as \(_{x}_{X_{i}}^{}(x)=(x-_{X_{i}}(x ))\), where \(_{X_{i}}(x)*{arg\,min}_{y X_{i}}\|y-x \|^{2}\). The resulting _meta-scheme_ is defined next.

\[x_{k+1}\,=\,x_{k}-(_{i=1}^{m}(g_{i}^{}(x_ {k},_{i,k},v_{i,k})+(x_{k}-_{X_{i}}(x_{k}) ))),\,k 0.\] (**Meta-ZO**)

(iii) _Inexact implicit generalizations for (_**FL\({}_{bl}\)**) and (**FL\({}_{mm}\)**). In addressing the bilevel problem, unlike in (**FL\({}_{nn}\)**), the clients in (**FL\({}_{bl}\)**) may not have access to the exact evaluation of the implicit local objective \(_{i}(,y(),_{i})\). This makes a direct extension of FL schemes challenging. This is because the evaluation of the implicit local function necessitates exact resolution of the lower-level problem. We address this challenge by developing _inexact_ implicit variants of the zeroth-order scheme, where clients compute only an \(\)-approximation of \(y(x)\), denoted by \(y_{}(x)\) in a federated fashion. This inexact framework, described next, is crucial in addressing hierarchy in bilevel FL formulations. Let \(f_{i}^{}()\) denote the smoothed implicit local function. We estimate \(_{x}f_{i}^{}(x)\) by approximating the expectation by sampling in \((a.1)\), as follows, while in \((a.2)\), we replace \(y(x)\) by an inexact form \(y_{}(x)\). This leads to the introduction of \(g_{i}^{,}(x,,v)\) as captured below.

\[_{x}f_{i}^{}(x)=_{_{i},v}[g_{i}^{} (x,_{i},v)]}_{}}{{ }}^{}(x,_{i,k},v_{T_{r}})}_{y(x)}}{{ }}g_{i}^{,}(x,_{i,k},v_{T_{r}}),\]

where \(k\) is the local time index, \(T_{r}\) is the global time index of communication round \(r\) (\(k T_{r}\)), and \(g_{i}^{,}(x,,v)(_{i}(x+v,y_ {}(x+v),)-_{i}(x,y_{}(x,))\) denotes an inexact implicit zeroth-order gradient. Note that at each round of communication at the upper level, \(y_{}(x)\) can be computed using calls to a standard FL method, e.g., FedAvg, in the lower level. Notably, such calls to an FL oracle should be made only at the global step to preserve the communication efficiency of the scheme. It follows that \(g_{i}^{,}(x,_{i,k},v_{T_{r}})=_{x}f_{i}^{}(x)+ _{i,}\) where the approximation error \(_{i,}\) is a possibly biased random variable. This bias can be then controlled by carefully by updating the accuracy level \(\) at each communication round, as we will address in this work.

### Contributions

Our goal lies in extending (**Meta-ZO**) to federated nonsmooth nonconvex optimization and then provide generalizations to bilevel and minimax regimes. In each instance, we intend to provide iteration and communication-complexity bounds for computing an \(\)-accurate \(\)-Clarke stationary point of the original problem. Accordingly, we make the following contributions.

(i) _FL for nondifferentiable nonconvex problems._ To address (**FL\({}_{nn}\)**) with heterogeneous datasets, we develop a Randomized Zeroth-Order Locally-Projected Federated Averaging method (FedRZO\({}_{}\)). We derive iteration complexity of \((})\) and communication complexity of \((m^{3/4}K^{3/4})\) for computing an approximate Clarke stationary point. Such guarantees appear to be new in the context of resolving nondifferentiable nonconvex FL problems, e.g. in training of ReLU neural networks (see Table 2). This is distinct from existing zeroth-order methods, including FedZO , that rely on differentiability and \(L\)-smoothness of the local loss functions.

(ii) _Federated bilevel optimization._ In addressing (**FL\({}_{bl}\)**), we develop FedRZO\({}_{}\), an inexact implicit extension of FedRZO\({}_{}\). By skipping local calls to the lower-level FL oracle, FedRZO\({}_{}\) is a novel communication-efficient FL scheme with single-timescale local steps, resulting in significant reduction in communication overhead. Table 1 summarizes the communication complexity of this scheme. In all cases, we assume heterogeneous data at the upper level. In the lower level, depending on which conventional FL scheme is employed, we obtain the communication complexity accordingly.

(iii) _Federated minimax optimization._ FedRZQb1 can be employed for addressing (**FL\({}_{mm}\)**) where \(_{i}:=-_{i}\). As such, the complexity results in (ii) hold for solving (nondifferentiable nonconvex)-(strongly concave) FL minimax problems. Such results are new for this class of FL problems.

**Remark 1**.: There has been recent progress in addressing bilevel and minimax problems in FL, including Local SGDA and FedNest [48; 43]. Our work in (ii) and (iii) has two main distinctions with existing FL methods, described as follows. (1) We do not require the differentiability and \(L\)-smoothness of the implicit objective function. This assumption may fail to hold, e.g., in constrained hierarchical FL problems. (2) The existing FL methods for bilevel and minimax problems assume that the lower-level problem is unconstrained. In fact, even in centralized regimes, addressing hierarchical problems where the lower-level constraints depend on \(x\) have remained challenging. For example, consider the problem \(_{x[-1,1]}\,_{y[-1,1],\ x+y 0}\,x^{2}+y\) that admits a unique solution \((x^{*},y^{*})=(0.5,-0.5)\). Now consider a reversal of min and max in this problem, i.e., \(_{y[-1,1]}\,_{x[-1,1],\ x+y 0}\,x^{2}+y\), admitting the unique solution \((x^{*},y^{*})=(-1,1)\). As a consequence, the well-known primal-dual gradient methods, that have been extensively employed for addressing minimax problems with independent constraint sets, may fail to converge to a saddle-point in minimax problems with coupling constrains. Our proposed algorithmic framework allows for accommodating these challenging problems in FL.

## 2 Related work

**(i) Nondifferentiable nonconvex optimization.** Nonsmooth and nonconvex optimization has been studied extensively with convergence guarantees to Clarke-stationary points via gradient sampling [1; 2] and difference-of-convex approaches . Most complexity and rate guarantees necessitate smoothness of the nonconvex term [14; 51; 8; 9; 28] or convexity of the nonsmooth term , while only a few results truly consider nonsmooth nonconvex objective function [32; 4; 42]. **(ii) Nondifferentiable nonconvex federated learning.** The research on FL was initially motivated by decentralized neural networks where local functions are nondifferentiable and nonconvex . Nevertheless, theoretical guarantees that emerged after FedAvg required either nonsmooth convex or smooth nonconvex local costs, under either iid [46; 58; 50; 47] or non-iid datasets [30; 26], while provable guarantees for FL methods under nonconvexity [58; 53; 19] require \(L\)-smoothness of local functions. Unfortunately, these assumptions do not hold either for ReLU neural networks or risk-averse learning and necessitate the use of Clarke calculus . Moreover, existing work on zeroth-order FL methods in convex  and nonconvex settings  rely on the smoothness properties of the objective function. However, there appear to be no provably convergent FL schemes with complexity guarantees for computing approximate Clarke stationary points of nondifferentiable nonconvex problems. **(iii) Federated bilevel optimization.** Hyperparameter tuning  and its federated counterpart  is a crucial, and yet, computationally complex integrant of machine learning (ML) pipeline. Bilevel models

  Ref. & Nonconvexs & Metric & Rate & Comm. rounds & Assumption \\ 
 & Smooth & \(\|_{x}f(x)\|^{2}\) & \((}{K})\) & \((m^{3/4}K^{3/4})\) & Bounded gradients, \\ 
 & Smooth & \(\|_{x}f(x)\|^{2}\) & \((}{K})\) & \((m^{3/2}K^{1/2})\) & \(L\)-smooth functions \\ 
 & Smooth, FL-cond & \(f(x)-f^{*}\) & \((}{K})\) & \((m^{1/3}K^{1/3})\) & L-smooth functions, PL-condition \\ 
**This work** & Nonsmooth & \(\|_{x}}^{}()\|^{2}\) & \((}{K})\) & \((K^{3/4}})\) & Lipschitz functions \\  

Table 2: Comparison of our scheme with other FL schemes for nonconvex settingswhere the lower-level is a parameterized training model while the upper-level requires selecting the best configuration for the unknown hyperparameters [15; 22; 49]. Solving such hierarchical problems is challenging because of nondifferentiable nonconvex terms and absence of an analytical form for the implicit objective. These challenges exacerbate the development of provable guarantees for privacy-aware and communication-efficient schemes. **(iv) Federated minimax optimization**. Minimax optimization has assumed relevance in adversarial learning [17; 40; 44] and fairness in ML , amongst other efforts. Recently, FL was extended to distributed minimax problems [36; 10; 43], but relatively little exists in nonconvex-strongly concave settings [48; 43].

## 3 A Zeroth-order FL Framework for Nondifferentiable Nonconvex Settings

In this section, we introduce our framework for (**FL\({}_{nn}\)**), where we impose the following assumption.

**Assumption 1**.: Consider problem (**FL\({}_{nn}\)**). The following hold.

(i) The function \(f_{i}\) is Lipschitz continuous with parameter \(L_{0}>0\) for all \(i[m]\).

(ii) For any \(i[m]\), client \(i\) has access to a zeroth-order oracle \(_{i}(x,_{i})\) satisfying the following for every \(x\) in an almost-sure sense:

(ii-a) \([_{i}(x,_{i}) x]=f_{i}(x)\); (ii-b) There exists \(>0\) such that \([|_{i}(x,_{i})-f_{i}(x)|^{2} x]^{2}\).

(iii) The set \(X_{i}\) is nonempty, closed, and convex for all \(i[m]\). In addition, the following _bounded set-dissimilarity_ condition holds for all \(x^{n}\) and some scalars \(B_{1}\) and \(B_{2}\).

\[_{i=1}^{m}^{2}(x,X_{i}) B_{1}^{2}+B_{2}^{2}\ \|x-_{i=1}^{m}_{X_{i}}(x)\|^{2}.\] (3)

We note that the bounded set-dissimilarity condition is naturally analogous to the so-called _bounded gradient-dissimilarity_ condition that has been employed in the literature, e.g., in . In particular, when the bounded gradient-dissimilarity condition is stated for the Moreau smoothing of the indicator function of \(X_{i}\), denoted by \(_{X_{i}}^{}(x)\), we reach to (3). Notably, condition (3) holds for the generated iterates by the algorithm when, for example, the iterates remain bounded.

**Nonsmooth unconstrained reformulation.** Consider an unconstrained reformulation of (**FL\({}_{nn}\)**) given by \(_{x^{n}}\ (x)\) (see (1)), where the nonsmoothness of \(\) arises from that of \(f\) and the local indicator functions \(_{X_{i}}\). The minimization of \(\) is challenging, as noted by recent findings on nonsmooth analysis where it is shown  that for a suitable class of nonsmooth functions, computing an \(\)-stationary point, i.e., a point \(\) for which \((0_{n},())\), is impossible in finite time.

**Approximate Clarke stationarity.** To circumvent this challenge, as a weakening of \(\)-stationarity, a notion of \((,)\)-stationarity is introduced  for a vector \(\) when \((0_{n},_{}())\), where the set

\[_{}(x)\{: (y),\|x-y\|\}\]

denotes the \(\)-Clark generalized gradient of \(\) at \(x\); i.e. if \(x\) is \((,)\)-stationary, then there exists a convex combination of gradients in a \(\)-neighborhood of \(x\) that has a norm of at most \(\).

This discussion naturally leads to the following key question: _Can we devise provably convergent FL methods for computing approximate Clarke stationary points of minimization of \(\)?_ The aim of this section is to provide an affirmative answer to this question by proposing a zeroth-order FL method that employs smoothing. To contend with the nonsmoothness, we employ the Moreau-smoothed variant of \(_{X}(x)\), where \(X_{i=1}^{m}X_{i}\), and a randomized smoothed variant of \(f\), as shown next.

**Randomized smoothing of loss function.** To smoothen the loss function \(f\), we employ a _randomized smoothing_ approach where the smoothing parameter is maintained as sufficiently small. This framework is rooted in the seminal work by Steklov , leading to progress in both convex [27; 52; 11] and nonconvex  regimes. We consider a smoothing of \(f\), given by \(f^{}\) defined as \(f^{}(x)_{u}[f(x+ u)]\), where \(u\) is a random vector in the unit ball \(\), defined as \(\{u^{n}\ |\ \|u\| 1\}\). Further, we let \(\) denote the surface of the ball \(\), i.e., \(\{v^{n}\ |\ \|v\|=1\}\) and \(\) and \(\) denote a ball with radius \(\) and its surface, respectively.

**Lemma 1** (Randomized spherical smoothing).: Let \(h:^{n}\) be a given continuous function and define \(h^{}(x)_{u}[h(x+ u)].\) Then, the following hold.

(i) \(h^{}\) is continuously differentiable and \( h^{}(x)=()_{v}[h(x+ v)]\) for any \(x^{n}\).

Suppose \(h\) is Lipschitz continuous with parameter \(L_{0}>0\). Then, the following statements hold.

(ii) \(|h^{}(x)-h^{}(y)| L_{0}\|x-y\|\) for all \(x,y^{n}\); (iii) \(|h^{}(x)-h(x)| L_{0}\) for all \(x^{n}\); (iv) \(\| h^{}(x)- h^{}(y)\|n}{}\|x-y\|\) for all \(x,y^{n}\). \(\)

The discussion leads to the consideration of the following smoothed federated problem.

**Definition 1** (Unconstrained smoothed approximate problem).: Given \(>0\), consider an unconstrained smoothed problem given as

\[_{x^{n}}\ ^{}(x)\{_{i=1}^{m}_{i}^{}(x)\},_{i}^{}(x)_{_{i},u_{i}}[ _{i}(x+ u_{i},_{i})]+^{2} (x,X_{i}).\] (4)

```
1:input: Server chooses a random initial point \(_{0} X\), stepsize \(\), smoothing parameter \(\), synchronization indices \(T_{0}:=0\) and \(T_{r} 1\), where \(r 1\) is the communication round index
2:for\(r=0,1,\)do
3: Server broadcasts \(_{r}\) to all clients: \(x_{i,T_{r}}:=_{r},\  i[m]\)
4:for\(k=T_{r},,T_{r+1}-1\)do in parallel by clients
5: Client \(i\) generates the random replicates \(_{i,k}_{i}\) and \(v_{i,k}\)
6:\(g_{i,k}^{}:=}(_{i}(x_{i,k}+v_{i,k},_{i, k})-_{i}(x_{i,k},_{i,k}))v_{i,k}\)
7: Client \(i\) does a local update as \(x_{i,k+1}:=x_{i,k}-(g_{i,k}^{}+(x_{i,k}- _{X_{i}}(x_{i,k})))\)
8:endfor
9: Server receives \(x_{i,T_{r+1}}\) from all clients and aggregates, i.e., \(_{r+1}:=_{i=1}^{m}x_{i,T_{r+1}}\)
10:endfor ```

**Algorithm 1** Randomized Zeroth-Order Locally-Projected Federated Averaging (FedRZOnn)

To address (4), we propose FedRZOnn given by Algorithm 1. Here, client \(i\) employs a zeroth-order stochastic gradient of the form \(g_{i,k}^{}}(_{i}(x_{i,k}+v_{i,k}, _{i,k})-_{i}(x_{i,k},_{i,k}))v_{i,k}\), augmented by the gradient of the Moreau smoothed function. The random sample \(v_{i,k}\) is locally generated by each client \(i\), allowing for randomized smoothing. This is indeed in view of Lemma 1 (i) that facilitates the development of a randomized zeroth-order gradient.

We define \(_{k}^{m}x_{i,k}}{m}\) as an auxiliary sequence to denote the averaged iterates of the clients.

**Definition 2**.: Consider Algorithm 1. Let \(H>0\) denote an upper bound on the number of local steps per round, i.e., \(H_{r=0,1,}|T_{r+1}-T_{r}|\). Throughout, we assume that \(H\) is finite.

**Proposition 1**.: Consider Algorithm 1. Let Assumption 1 hold.

(i) **[Error bound]** Suppose \(\{n},,B_ {2}(L_{0}n+1)H}\}\). Let \(k^{*}\) denote an integer drawn uniformly at random from \(\{0,,K\}\) and \(^{,*}_{x}^{}(x)\). Then,

\[[\|^{}(_{k^{*}})\|^{2}] [^{}(_{k})-^ {,*})}{(K+1)}+n^{3}}{ n}(} {^{2}}+L_{0}^{2})\] \[+^{2}(L_{0}n+1)^{2}}{^{2}}(^{2}+2B_{1}^{2}}{^{2}}+(3+4B_{2}^{2})L_{0}^{2}n^{2}).\]

(ii) **[Iteration complexity]** Let \(:=}\) and \(H:=}}\) where \(>0\). Let \(>0\) be an arbitrary scalar and \(K_{}\) denote the number of iterations such that \([\| f^{}(_{k^{*}})\|^{2}]\). Then, the iteration complexity is \(K_{}:=((n^{3}^{2}}{^{2}}+^{3}n^{3}}{}+^{2}n^{4}^{2}}{^{4}}+^{2}n^{2} B_{1}^{2}}{^{4}}+^{2}L_{0}^{4}n^{4}}{^{2}})^{2} }).\)

(iii) **[Communication complexity]** Suppose \(K_{} m^{3}\). Then, the number of communication rounds to achieve the accuracy level in (ii) is \(R:=((mK_{})^{3/4})\).

We now formally relate the original nonsmooth problem and its smoothed counterpart.

**Proposition 2**.: Consider problem (4) and let Assumption 1 hold.

(i) Assume that \(X_{i}=^{n}\) for all \(i[m]\). Then, for any \(>0\), we have \( f^{}(x)_{2}f(x)\).

(ii) Assume that the sets \(X_{i}\) are identical for all \(i[m]\). Let \(>0\) be an arbitrary scalar. If \(^{}(x)=0\) and \(\}}\), then \(0_{n}_{}(f+_{X})(x)\).

## 4 Extensions to Bilevel and Minimax FL

### Nondifferentiable nonconvex bilevel FL

In this section, we consider the federated bilevel optimization problem defined earlier as (\(_{bl}\)). We consider the following smoothed implicit problem.

**Definition 3** (Unconstrained smoothed implicit problem).: Given \(>0\), consider an unconstrained smoothed implicit problem given as

\[_{x^{n}}\ ^{}(x)\{_{i= 1}^{m}(_{_{i},u}[_{i}(x+ u,y (x+ u),_{i})]+^{2}(x,X_{i})) \}.\] (5)

**Assumption 2**.: Consider problem (\(_{bl}\)). Let the following assumptions hold.

(i) For all \(i[m]\), \(_{i}(,y,_{i})\) is \(L^{f}_{0,x}(_{i})\)-Lipschitz for any \(y\) and \(_{i}(x,,_{i})\) is \(L^{f}_{0,y}(_{i})\)-Lipschitz for any \(x\), where \(L^{f}_{0,x}_{i=1,,m}[(L^{f}_{0,x}(_{i})) ^{2}]}<\) and \(L^{f}_{0,y}_{i=1,,m}[(L^{f}_{0,y}(_{i}) )^{2}]}<\).

(ii) For all \(i[m]\), for any \(x\), \(h_{i}(x,)\) is \(L^{h}_{1,y}\)-smooth and \(_{h}\)-strongly convex. Further, for any \(y\), the map \(_{y}h_{i}(,y)\) is Lipschitz continuous with parameter \(L^{ h}_{0,x}\).

(iii) The sets \(X_{i}\), for \(i[m]\), satisfy Assumption 1 (iii).

The outline of FedRZO\({}_{}\) is presented in Algorithm 2. We make the following remarks: (i) At each global step, the server makes two calls to a lower-level FL oracle to inexactly compute \(y(_{r}+v_{T_{r}})\) and \(y(_{r})\). These lower-level FL calls are performed by the same clients, on the lower-level FL problem. (ii) The inexactness error is carefully controlled by terminating the lower-level FL oracle after \((r)\) number of iterations, where \(r\) denotes the upper-level communication round index. (iii) FedRZO\({}_{}\) skips the calls to the lower-level FL oracle during the local steps. To accommodate this, unlike in FedRZO\({}_{}\), here we employ a global randomized smoothing denoted by \(v_{T_{r}}\) during the communication round \(r\) in the upper level.

```
1:input: Server chooses a random \(_{0} X\), stepsize \(\), smoothing parameter \(\), synchronization indices \(T_{0}:=0\) and \(T_{r} 1\), where \(r 1\) is the upper-level communication round index
2:for\(r=0,1,\)do
3: Server generates a random replicate \(v_{T_{r}}\)
4: Server calls FedAvg to receive \(y_{_{r}}(_{r}+v_{T_{r}})\) and \(y_{_{r}}(_{r})\), denoting the inexact evaluations of \(y(_{r}+v_{T_{r}})\) and \(y(_{r})\), respectively.
5: Server broadcasts \(_{r}\), \(_{r}+v_{T_{r}}\), \(y_{_{r}}(_{r})\), and \(y_{_{r}}(_{r}+v_{T_{r}})\) to all clients; \(x_{i,T_{r}}:=_{r},\  i\)
6:for\(k=T_{r},,T_{r+1}-1\)do in parallel by clients
7: Client \(i\) generates the random replicates \(_{i,k}_{i}\)
8:\(g^{,_{r}}_{i,k}:=}(_{i}(x_{i,k}+v_{T_{r}},y_{_{r}}(_{r}+v_{T_{r}}),_{i,k})-_ {i}(x_{i,k},y_{_{r}}(_{r}),_{i,k}))v_{T_{r}}\)
9: Client \(i\) does a local update as \(x_{i,k+1}:=x_{i,k}-(g^{,_{r}}_{i,k}+ (x_{i,k}-_{X_{i}}(x_{i,k})))\)
10:endfor
11: Server receives \(x_{i,T_{r+1}}\) from all clients and aggregates, i.e., \(_{r+1}:=_{i=1}^{m}x_{i,T_{r+1}}\)
12:endfor ```

**Algorithm 2** Randomized Implicit Zeroth-Order Federated Averaging (FedRZO\({}_{}\))

**Theorem 1** (FedRZO\({}_{}\) when using an arbitrary inexact FL method for lower-level).: Consider Algorithm 2. Let Assumption 2 hold, \(k^{*}\) be chosen uniformly at random from \(0,,K:=T_{R}-1\), and \(\{},4B_{2}},4B_{2}}\}^{-1}}{4H},}_{}n+1)}\}\). Let \(_{r}\) denote the inexactness in obtaining the lower-level solution, i.e., \([\|y_{_{r}}(x)-y(x)\|^{2} x]_{r}\) for \(x_{r=0}^{R}\{_{r},_{r}+v_{T_{r}}\}\).

(i) **[Error bound]** We have

\[[\|^{}(_{k^{*}})\|^{2}]  8( K)^{-1}([^{}(x_{0}) ]-^{,*})+}{m}+8H^{2}^{2} \{_{2},_{3}\}_{5}\] \[+8(H^{2}^{2}\{_{2},_{3}\}_ {4}+_{3})H^{R-1}_{r}}{K},\]

where \(_{1}:=^{}n+1)n^{2}}{2}(L_{0}^{})^{ 2},\;_{2}:=^{}n+1)^{2}}{8^{2}},_{3}:= (^{_{h}}}{_{h}})^{2}}{^{2 }}(L_{0,y}^{f})^{2},\)

\[_{4}:=}{^{2}}(L_{0,y}^{f})^{2},\;\;_{5 }:=^{2}}{^{2}}+(96B_{2}^{2}+1)(L_{0}^{})^{2}n^{2}.\]

(ii) **[Iteration complexity]** Let \(:=}\) and \(H:=}}\) where \(>0\). Let \(>0\) be an arbitrary scalar and \(K_{}\) denote the number of iterations such that \([\|^{}(_{k^{*}})\|^{2}]\). Also, suppose we employ an FL method in the lower level that achieves a sublinear convergence rate with a linear speedup in terms of the number of clients, i.e., \(_{r}:=}(_{r}}})\) where \(_{r}\) denotes the number of communication rounds performed in the lower-level FL method when it is called in round \(r\) of FedRZO\({}_{}\) and \(_{_{r}}\) denotes the number of iterations performed in the lower-level FL scheme to do \(_{r}\) rounds of upper-level communication. Further, suppose \(_{_{r}}:=}(m^{-1}(r+1)^{})\). Then, the iteration complexity of FedRZO\({}_{}\) (upper level) is \(K_{}:=}((_{1}^{2}+\{_{2}, _{3}\}^{2}_{5}^{2}+\{_{2},_{3}\}^{2}_{4}^{2 }+_{3}^{2})\,}).\)

(iii) **[Communication complexity]** Suppose \(K_{} m^{3}\). Then, the number of communication rounds in FedRZO\({}_{}\) (upper-level only) to achieve the accuracy level in (ii) is \(R:=((mK_{})^{3/4})\).

**Remark 2**.: (i) Importantly, Theorem 1 is equipped with explicit communication complexity \(R:=((mK_{})^{3/4})\), matching that of single-level nonsmooth nonconvex problems in Proposition 1. This implies that as long as the lower-level FL oracle has a rate of \(_{r}:=}(_{r}}})\), the inexactness does not affect the communication complexity bounds of the method in the upper level.

(ii) As noted in the assumptions, in the upper level, we allow for heterogeneity. To elaborate on overall communication complexity of FedRZO\({}_{}\), we provide detailed complexity results in Table 1 for three cases, where we employ Local SGD , FedAC , and LFD  for the lower-level scheme. All these schemes meet the linear speedup condition in Theorem 1. Notably, among these schemes, the last scheme allows for the presence of heterogeneity. As an example, we present in Algorithm 3, the outline of FedAvg, if employed in step 4 of Algorithm 2.

```
1:input:\(x\), \(r\), server chooses a random initial point \(_{0}:=y_{0,r}^{}\), \(a_{r}:=\{m,4_{h},r\}+1\) where \(_{h}:=^{h}}{_{h}}\), \(:=a_{r}}\), \(_{_{r}}:=2a_{r}(a_{r})\), and \(:=_{_{r}}}{m}\)
2:for\(=0,1,,_{r}-1\)do
3: Server broadcasts \(_{}\) to all agents: \(y_{i,_{r}}:=_{},\; i\)
4:for\(t=_{},,_{+1}-1\)do in parallel by agents
5: Agent \(i\) does a local update as \(y_{i,t+1}:=y_{i,t}-_{y}h_{i}(x,y_{i,t},_{i,t})\)
6: Agent \(i\) sends \(x_{i,T_{r+1}}\) to the server
7:endfor
8: Server aggregates, i.e., \(_{+1}:=_{i=1}^{m}y_{i,T_{+1}}\)
9:endfor ```

**Algorithm 3** FedAvg \((x,r,y_{0,r},m,,,_{})\) for lower level

(iii) We use \(L_{0}^{}(_{i})\) to denote the Lipschitz continuity constant of the random local implicit function \(_{i}(x,y(x),_{i})\), and let \(L_{0}^{}_{i=1,,m}[(L_{0}^{}(_{i}))^{2}]}<\). As shown in supplementary material, \(L_{0}^{}(_{i})\) can be obtained explicitly in terms of problem parameters.

**Remark 3**.: A technical challenge in designing Algorithm 2 is that an inexact evaluation of \(y(x)\) must be avoided during the local steps. This is because we consider bilevel problems of the form (**FL\({}_{bl}\)**)where both levels are distributed. Because of this, the inexact evaluation of \(y(x)\) by each client in the local step in the upper level would require significant communications that is undesirable in the FL framework. We carefully address this challenge by introducing **delayed inexact computation** of \(y(x)\). In step 8 of Algorithm 2, we note how \(y_{}\) is evaluated at \(_{r}+v_{T_{r}}\) which is a different than the vector used by the client, i.e., \(x_{i,k}+v_{T_{r}}\). At each communication round in the upper level, we only compute \(y(x)\) inexactly twice in the global step and then use this delayed information in the local steps. This delayed inexact computation of \(y\) renders a challenge in the convergence analysis which makes the design and analysis of Algorithm 2 a non-trivial extension of Algorithm 1.

### Nondifferentiable nonconvex-strongly concave minimax FL

Next, we consider the decentralized federated minimax problem of the form (\(_{mm}\)) introduced earlier. This problem is indeed a zero-sum game and can be viewed as an instance of the non-zero sum game (\(_{bl}\)) where \(_{i}:=-_{i}\).

**Corollary 1**.: Consider Algorithm 2 for solving (\(_{mm}\)). Let Assumption 2 hold for \(_{i}:=-_{i}\) and \(_{i}:=}_{i}\). Then, all the results in Theorem 1 hold true.

## 5 Experiments

We present three sets of experiments to validate the performance of the proposed algorithms. In Section 5.1, we implement Algorithm 1 on ReLU neural networks (NNs) and compare it with some recent FL methods. In Sections 5.2 and 5.3 we implement Algorithm 2 on federated hyperparameter learning and a minimax formulation in FL. Throughout, we use the MNIST dataset. Additional experiments on a higher dimensional dataset (i.e., Cifar-10) are presented in supplementary material.

### Federated training of ReLU NNs.

We implement FedRZOnn for federated training in a single-layer ReLU NN with \(N_{1}\) neurons. This is a nondifferentiable nonconvex optimization problem, aligning with (\(_{nn}\)) and taking the form \(_{x:=(Z,w)}_{i=1}^{m}_{_{i}}(v_{i,}-_{q=1}^{N_{1}}w_{q}(Z_{,q}U_{i,}))^{2}+ (\|Z\|_{F}^{2}+\|w\|^{2}),\) where \(m\) denotes the number of clients, \(Z^{N_{1} N_{0}}\), \(w^{N_{1}}\), \(N_{0}\) is the feature dimension, \(U_{i,}^{N_{0}}\) and \(v_{i,}\{-1,1\}\) are the \(\)th input and output training sample of client \(i\), respectively, \((x):=\{0,x\}\), and \(\) is the regularization parameter.

**Setup.** We distribute the training dataset among \(m:=5\) clients and implement FedRZOnn for the FL training with \(N_{1}:=4\) neurons under three different settings for the smoothing parameter, \(\{0.1,0.01,0.001\}\), \(:=10^{-5}\), and \(:=0.01\). We study the performance of the method under different number of local steps with \(H\{1,5,10,20\}\).

**Results and insights.** Figure 1 presents the first set of numerics for FedRZOnn under the aforementioned settings. In terms of communication rounds, we observe that the performance of the method improves by using a larger number of local steps. In fact, in the case where \(H:=1\), FedRZOnn is equivalent to a parallel zeroth-order SGD that employs communication among clients at each iteration, resulting in a poor performance, motivating the need for the FL framework. In terms of \(\), while we observe robustness of the scheme in terms of the original loss function, we also note a slight improvement in the empirical speed of convergence in early steps, as \(\) increases. This is indeed aligned with the dependence of convergence bound in Proposition 1 on \(\).

Figure 1: Performance of FedRZOnn on a single-layer ReLU NN in terms of communication rounds for different no. of local steps and different values of the smoothing parameter \(\). FedRZOnn benefits from larger number of local steps and shows robustness with respect to the choice of \(\).

**Comparison with other FL methods.** While we are unaware of other FL methods for addressing nondifferentiable nonconvex problems, we compare FedRZO\({}_{ nn}\) with other FL methods including FedAvg , FedProx , FedMSPP , and Scaffhew  when applied on a NN with a smooth rectifier. Details of these experiments are provided in the supplementary material.

**5.2 Federated hyperparameter learning.** To validate FedRZO\({}_{ b1}\), we consider the following FL hyperparameter learning problem for binary classification using logistic loss.

\[_{x X,\;y^{n}} f(x,y)_{i=1}^{m}_{ _{i}}(1+(-v_{i,}U_{i,}^{T}y))\] subject to \[y_{y^{n}} h(x,y)_{i=1}^{m}(_{ _{i}}(1+(-v_{i,}U_{i,}^{T}y) )+x_{i}}{2}),\]

where \(m\) is number of clients, \(x\) denotes the regularization parameter for client \(i\), \(U_{i,}^{n}\) and \(v_{i,}\{-1,1\}\) are the \(\)th input and output testing sample of client \(i\), respectively, \(U_{i,^{}}^{n}\) and \(v_{i,^{}}\{-1,1\}\) are the \(^{}\)th input and output training sample of client \(i\), respectively. The constraint set \(X\) is considered as \(X:=\{x^{m} x_{m}\}\), where \(>0\). This problem is an instance of (**FL\({}_{bl}\)**), where the lower-level problem is \(_{2}\)-regularized and the regularization parameter is a decision variable of the upper-level FL problem. The convergence results are presented in Fig. 2 (left).

**5.3 Fair classification learning.** Here, we study the convergence of FedRZO\({}_{ b1}\) in minimax FL. We consider solving an FL minimax formulation of the fair classification problem  of the form

\[_{x^{n}}_{y^{c}} _{i=1}^{m}_{c=1}^{C}_{_{i,c }}(v_{i,}-_{q=1}^{N_{1}}w_{q}(Z_{,q}U_{i,}))^{2}- \|y\|^{2},\]

where \(c\) denotes the class index and \(_{i,c}\) denotes the a portion of local dataset associated with client \(i\) that is comprised of class \(c\) samples. The loss function follows the same formulation in Section 5.1, where an ReLU neural network is employed. This problem is nondifferentiable and nonconvex-strongly concave, fitting well with the assumptions in our work in addressing minimax FL problems. The performance of our algorithm is presented in Figure 2 (right).

## 6 Concluding Remarks

Federated learning has assumed growing relevance in ML. However, most practical problems are characterized by the presence of local objectives, jointly afflicted by nonconvexity and nondifferentiability, precluding resolution by most FL schemes, which can cope with nonconvexity in only smooth settings. We resolve this gap via a zeroth-order communication-efficient FL framework that can contend with both nondifferentiability and nonsmoothness with rate and complexity guarantees for computing approximate Clarke-stationary points. Extensions to nonconvex bilevel and nonconvex-strongly concave minimax settings are developed via inexact generalizations.

## 7 Acknowledgments

We acknowledge the funding support from the U.S. Department of Energy under grant #DE-SC0023303, and the U.S. Office of Naval Research under grants #N00014-22-1-2757 and #N00014-22-1-2589. We also would like to thank the four anonymous referees for their constructive suggestions.

Figure 2: (Left) Convergence of FedRZO\({}_{ b1}\) in hyperparameter FL for \(_{2}\) regularized logistic loss, where we plot the loss function on test data for different values of local steps with \(95\%\) CIs. (Right) Convergence of FedRZO\({}_{ b1}\) in minimax FL, where we present test results in solving a nondifferentiable nonconvex-strongly concave FL minimax formulation of the fair classification problem .