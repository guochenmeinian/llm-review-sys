# Generalized Protein Pocket Generation with Prior-Informed Flow Matching

Zaixi Zhang\({}^{1,2}\), Marinka Zitnik\({}^{3}\)1, Qi Liu\({}^{1,2}\),

1: School of Computer Science and Technology, University of Science and Technology of China

2:State Key Laboratory of Cognitive Intelligence, Hefei, Anhui, China

3:Harvard University

zaixi@mail.ustc.edu.cn, marinka@hms.harvard.edu, qiliuql@ustc.edu.cn

Marinka Zitnik and Qi Liu are the corresponding authors.

###### Abstract

Designing ligand-binding proteins, such as enzymes and biosensors, is essential in bioengineering and protein biology. One critical step in this process involves designing protein pockets, the protein interface binding with the ligand. Current approaches to pocket generation often suffer from time-intensive physical computations or template-based methods, as well as compromised generation quality due to the overlooking of domain knowledge. To tackle these challenges, we propose PocketFlow, a generative model that incorporates protein-ligand interaction priors based on flow matching. During training, PocketFlow learns to model key types of protein-ligand interactions, such as hydrogen bonds. In the sampling, PocketFlow leverages multi-granularity guidance (overall binding affinity and interaction geometry constraints) to facilitate generating high-affinity and valid pockets. Extensive experiments show that PocketFlow outperforms baselines on multiple benchmarks, e.g., achieving an average improvement of 1.29 in Vina Score and 0.05 in scRMSD. Moreover, modeling interactions make PocketFlow a generalized generative model across multiple ligand modalities, including small molecules, peptides, and RNA.

## 1 Introduction

Proteins are the fundamental building blocks of living organisms, often interacting with ligands (e.g., small molecules, nucleic acids, and peptides) to execute their functions. Recently, computational methods have played critical roles in designing functional proteins binding with ligands with broad applications in bio-engineering and therapeutics . For example, Polizzi et al.,  leverage template-matching methods to design de novo proteins binding with the drug apixaban ; Yeh et al.,  use deep learning methods to generate efficient light-emitting enzyme luciferase with selective substrate catalysis capabilities. To design such ligand-binding proteins, an essential step is to design protein pockets, the protein interface interacting with binding ligands . However, the complexity of ligand-protein interactions, the variability of protein sidechains, and sequence-structure relationships pose great challenges for pocket design .

Traditional methods for pocket design mainly focus on physics modeling or template-matching . However, the involved physical energy calculation or substructure enumeration could be quite time-consuming. Recent advancements in pocket design have benefited a lot from deep learning-based approaches . However, these innovative approaches often overlook essential domain knowledge, such as the protein-ligand interactions and the geometric constraints governing them. Though they can efficiently generate many candidates, further screening/optimization is required to get valid and high-affinity pockets. Moreover, most methods are restricted to small molecule ligands, omitting other important ligand types such as nucleic acids  and peptides .

To tackle the aforementioned challenges, we propose PocketFlow, a protein-ligand interaction prior-informed flow matching model for protein pocket generation. Firstly, we define conditional flows for diverse data modalities in the protein-ligand complex including backbone frames, sidechain torsions, and residue/interaction types. We choose flow matching as the generative framework because of its efficiency and flexibility [17; 13; 57; 57]. Furthermore, PocketFlow explicitly learns the dominant protein-ligand interaction types including hydrogen bonds , salt bridges , hydrophobic interactions , and \(-\) stacking , which are crucial for strong binding stability and affinity of protein-ligand pairs . In the sampling process, binding affinity and interaction geometry guidance are adopted to encourage generating pockets with high affinity and validity. Specifically, we leverage a lightweight binding affinity predictor to predict the affinity of the generated complex and apply distance and angle constraints to promote desirable protein-ligand interactions. To circumvent the non-differentiability issues associated with residue type sampling, we employ a novel sidechain ensemble method for interaction geometry calculations. Extensive experiments show that PocketFlow provides a generalized framework for high-quality protein pocket generation across various ligand modalities (small molecules, RNA, peptides, etc.,). The code is provided at https://github.com/zaixizhang/PocketFlow. Our main contributions are summarized as:

* **Generalized tasks:** Our study broadens the scope of protein pocket generation tasks to include various ligand modalities such as small molecules, nucleic acids, and peptides.
* **Novel method:** PocketFlow combines the recent progress of flow-matching-based generative models and physical/chemical interaction priors (affinity guidance and interaction geometry guidance) to generate protein pockets with enhanced affinity and structural validity.
* **Strong performance:** PocketFlow outperforms existing methods on various benchmarks of pocket generation, producing an average improvement of 1.29 in Vina score and 0.05 in scRMSD. Further interaction analysis highlights the model's ability to foster beneficial protein-ligand interactions, e.g., an average of 4.12 hydrogen bonds, while markedly reducing steric clashes (an average of 1.21 in generated pockets v.s. 4.59 in the test set).

## 2 Related Works

### Generative Models for Protein Generation

Recent advancements in deep generative models have significantly advanced the field of _de novo_ protein structure generation, enabling researchers to create proteins with specific desired properties [81; 37; 84; 86; 13; 95; 94; 91]. For example, RFDiffusion  employs denoising diffusion probabilistic models  in conjunction with RoseTTAFold  for _de novo_ protein structure generation. It achieved notable success by generating proteins validated in wet lab experiments. Chroma  leverages a similar diffusion process with efficient neural architecture for molecular systems that enables long-range reasoning with sub-quadratic scaling. It also demonstrates strong capabilities to satisfy constraints including symmetries, substructure, shape, semantics, and simple natural-language prompts. Recently, models leveraging flow matching frameworks have shown promising results on protein generation [86; 13; 85; 40; 53]. For example, FoldFlow  proposed a series of flow-matching-based generative models for protein backbones with improved training stability and efficiency than diffusion-based models. FrameFlow [84; 85] further shows sampling efficiency and achieves success on motif-scaffolding tasks with flow matching. However, these protein generation methods are not directly applicable to protein pocket generation that requires protein-ligand interaction modeling.

### Protein Pocket Generation

Protein pockets are the protein interface where the ligand binds to the protein and pocket design is a critical task for bioengineering [68; 39; 12; 28]. Traditional methods for pocket design focus on physics modeling or template-matching [12; 28; 65; 19; 62; 93]. For example, PocketOptimizer  predicts mutations in protein pockets to increase binding affinity based on physical energy calculation, which may bring a large time burden. The recent progress in protein pocket design has been facilitated by deep generative models [73; 92; 83; 93; 48]. For instance, FAIR  co-designs pocket structures and sequences using a two-stage coarse-to-fine refinement approach. RFDiffusion All-Atom  extends RFDiffusion for joint modeling of protein and ligand structure to generate ligand-binding protein and further leverages ProteinMPNN/LigandMPNN for sequence design. However, deep-learning methods lacking physical/chemical prior guidance may be less accurate and generalizable. In PocketFlow, we aim to design prior-guided pocket generative models.

## 3 Preliminaries

### Notations and Problem Formulation

**Notations.** As shown in Figure 1(a), we model protein-ligand complex as \(=\{,\}\) consisting of protein \(\) and ligand \(\) (small molecule as an example). Protein \(\) is composed of a sequence of residues (amino acids) with residue types denoted \(^{(i)}^{20}\). Consistent with [92; 87], the protein pocket \(\) is defined as the subset of residues closest to the ligand atoms under a threshold \(\) (e.g., 3.5 A). In a residue, the backbone structure (consisting of \(C_{}\), \(N\), \(C\), \(O\)) is parameterized with \(C_{}\) position \(^{(i)}^{3}\) and a frame orientation matrix \(^{(i)} SO(3)\) following [43; 84]. The sidechain is parameterized with maximal 4 torsion angles \(^{(i)}=\{^{i1},^{i2},^{i3},^{i4}\}[0,2)^{4}\). Given these key parameters, the full atom protein structure can be derived with the ideal frame coordinates and the sidechain bond length/angles . The protein-ligand interaction type for each residue is marked as \(I^{(i)}^{5}\) (Hydrogen bond, Salt bridge, Hydrophobic, \(\)-\(\) stacking, no interaction). A pocket with \(N_{r}\) residues can be compactly represented as \(=\{^{(i)},^{(i)},^{(i)},^{(i)},I^{(i)} \}_{i=1}^{N_{r}}\). As for the ligand, we use a generalized atom-level representation that accommodates various modalities including small molecules, peptides, and RNA. The atom types and bonding information between atoms are given and PocketFlow predicts the \(N_{l}\) ligand atom coordinates (also denoted as \(^{(i)}\) for conciseness).

**Problem Formulation.** PocketFlow co-designs residue types and 3D structures of the protein pocket conditioned on the ligand (could be small molecules, nucleic acids, peptides, etc.) and protein scaffold (the other parts of protein besides the pocket region, i.e., \(\)). The ligand structure \(\) is also predicted. Formally, PocketFlow aims to learn a conditional generative model \(p_{}(,|)\).

### Preliminaries on Flow Matching

Flow matching (FM)  is a simulation-free method for learning continuous normalizing flows (CNFs)  that generates data by integrating an ordinary differential equation (ODE) over a learned vector field. Here, we first give an overview of Riemannian flow matching . On a manifold \(\), the CNF \(_{t}()\) is defined by integrating along a time-dependent vector field \(u_{t}(x)_{x}\) where \(_{x}\) denotes the tangent space of the manifold at \(x\): \(_{t}(x)=u_{t}(_{t}(x)),_{0}(x)=x,t\). The flow transforms a simple distribution \(p_{0}\) towards the data distribution \(p_{1}\). In FM, the target is to learn a neural network \(v_{}(x,t)\) that approximates \(u_{t}(x)\), while the vanilla regression loss: \(_{FM}()=_{t,p_{t}(x)}\|v_{ }(x,t)-u_{t}(x)\|_{g}^{2}\) is hard to compute in practice. Here, \(\) is the uniform distribution between 0 and 1, and \(\|\|_{g}^{2}\) is the norm induced by the Riemannian

Figure 1: (a) Parameterization of protein-ligand complex. (b) Illustration of PocketFlow forward process. The affinity and interaction geometry guidance are proposed to improve affinity and structural validity. The red/blue lines denote the unconditional/guidance paths respectively.

metric \(g\). Instead, it is tractable to define conditional vector field \(u_{t}(x|x_{1})\) and obtain the conditional FM objective: \(_{CFM}()=_{t,p_{1}(x_{1}),p_{t}(x |x_{1})}\|v_{}(x,t)-u_{t}(x|x_{1})\|_{g}^{2}\). It has been proved that \(_{}_{FM}()=_{}_{CFM}()\)[57; 17]. In the inference, ODE solvers are applied to solve the ODE, e.g., \(x_{1}=(x_{0},v_{},0,1)\) where \(x_{0}\) is the initialized data and \(x_{1}\) is the generated data.

## 4 PocketFlow

PocketFlow is an interaction prior-informed flow-matching model for pocket design. In this section, we first define PocketFlow for different components in the protein-ligand complex (backbone in Sec. 4.1, sidechain in Sec. 4.2, and residue/interaction types in Sec.4.3). Then we show the prior-informed training and sampling in Sec. 4.4 and 4.5.

### PocketFlow on SE(3)

As introduced in Sec. 3.1, each residue frame can be parameterized by a rigid transformation \(T=(^{(i)},^{(i)})\) within SE(3) space. The backbone with \(N_{r}\) residues can thus be described by a set of transformations \([T^{(1)},,T^{(N_{r})}]\) belonging to SE(3)\({}^{N_{r}}\) and constitutes a product space. The following deduction focuses on a single frame but can be generalized to the whole protein backbone. The \(C_{a}\) coordinates \(^{(i)}\) are initialized with linear interpolation and extrapolation based on the coordinates of neighboring scaffold residues following . The prior distribution of \(^{(i)}\) is chosen as the uniform distribution on \((3)\). Following previous works [17; 84], the conditional flow for \(^{(i)}\) and \(^{(i)}\) are defined as \(^{(i)}_{t}=(1-t)^{(i)}_{0}+t^{(i)}_{1}\) and \(^{(i)}_{t}=_{^{(i)}_{0}}(t_{^{(i)}_{0}}(^{(i) }_{1}))\) respectively, which are geodesic paths in \(^{3}\) and \((3)\). The exponential map \(_{_{0}}\) can be computed using Rodrigues' formula and the logarithmic map \(_{_{0}}\) is similarly easy to compute with its Lie algebra \((3)\). The loss function of PocketFlow on SE(3) is the summation of the two losses below:

\[_{coord}()=_{t,p_{1}(_{1}),p_{0}(_{0} ),p_{t}(_{t}|_{0},_{1})}+N_{l}}_{i=1}^{N_{ r}+N_{l}}\|v^{(i)}_{}(^{(i)}_{t},t)-^{(i)}_{1}+^{(i)}_{0 }\|_{2}^{2},\] (1)

\[_{ori}()=_{t,p_{1}(_{1}),p_{0}(_{0}),p_ {t}(_{t}|_{0},_{1})}}_{i=1}^{N_{r}}\|v ^{(i)}_{}(^{(i)}_{t},t)-^{(i)}_{1}}(^{(i) }_{1})}{1-t}\|_{(3)}^{2},\] (2)

where we additionally consider \(N_{l}\) ligand atom coordinates in \(_{coord}()\), for which we use Gaussian distribution at the center of ligand mass as the prior distribution.

### PocketFlow on Torus

As described in Sec. 3.1, the sidechain conformation of each residue can be represented as maximally four torsion angles \(^{(i)}=\{^{i1},^{i2},^{i3},^{i4}\}[0,2)^{4}\). In a pocket with \(N_{r}\) residues, the sidechain torsion angles form a hypertorus \(^{4N_{r}}\), which is the quotient space \(^{4N_{r}}/2^{4N_{r}}\) with the equivalence relation: \(=(^{1},,^{4N_{r}})(^{1}+2,,^{4N_{r}} )(^{1},,^{4N_{r}}+2)\)[41; 90]. Following , the prior distribution is chosen as a uniform distribution over \(^{4N_{r}}\). We regard the torsion angles as mutually independent and use interpolation paths as: \(_{t}=(1-t)_{0}+t(^{}_{1}-_{0})\) where \(^{}_{1}=(_{1}-_{0}+)(2)-+_{0}\). The loss for the torsion angles is defined as:

\[_{tor}()=_{t,p_{1}(_{1}),p_{0}(_{0 }),p_{t}(_{t}|_{0},_{1})}}_{i=1}^{ N_{r}}\|v^{(i)}_{}(^{(i)}_{t},t)-^{(i)}_{1}+ ^{(i)}_{0}\|_{2}^{2}.\] (3)

### PocketFlow on Residue Types and Interaction Types

Each residue is assigned a probability vector with 20 dimensions: \(^{(i)}^{20}\). The prior distribution is set as the uniform distribution and the conditional flow is defined as the Euclidean interpolation between \(_{0}\) and \(_{1}\) (one hot vector indicating residue type). \(_{t}\) is a probability vector because its summation over all types equals 1. We leverage the cross-entropy loss \((,)\) following [53; 73; 16]:

\[_{res}=_{t(0,1),p_{1}(_{1}),p_{0}(_{0}),p_{t}(|_{0},_{1})}_{i=1}^{N_{r}}( ^{(i)}_{t}+(1-t)v^{(i)}_{}(^{(i)}_{t},t),^{(i)}_{1} ),\] (4)which measures the difference between the true probability and the inferred one \(}_{1}^{(i)}=_{t}^{(i)}+(1-t)v_{}^{(i)}(_{t}^{(i)},t)\). We also note the recent progress of the sequential flow matching methods [74; 16], which can be seamlessly integrated into PocketFlow and are left for future works.

It has been shown that modeling **Protein-ligand interactions** explicitly in biomolecular generative models can effectively enhance the generalizability [89; 97]. We used the protein-ligand interaction profiler (PLIP)  to detect and annotate the protein-ligand interactions for each residue by analyzing their binding structure. Following , 4 dominant interactions are considered including salt bridges, \(\)-\(\) stacking, hydrogen bonds, and hydrophobic interactions. For simplicity, if a residue has more than one interaction, we take the one with the highest rank, which considers both the contribution to the binding affinity and the frequencies (see Appendix. B). Similar to residue types, interactions are modeled as category data: \(I=\{I^{(i)}\}_{i=1}^{N_{r}}\). Besides the 4 interaction types, we also consider an unknown/none type. Similar to Equ. 4, we have the interaction loss:

\[_{inter}=_{t(0,1),p_{1}(I_{1}),p_{0}(I_{ 0}),p_{t}(I|I_{0},I_{1})}_{i=1}^{N_{r}}(I_{t}^{(i)}+(1-t)v_{ }^{(i)}(I_{t}^{(i)},t),I_{1}^{(i)}).\] (5)

### Model Training

**Network Architecture.** To design the binding protein pocket \(=\{^{(i)},^{(i)},^{(i)},^{(i)},I^{(i)}\}_ {i=1}^{N_{r}}\) and update the binding ligand coordinates \(\{^{(i)}\}_{i=1}^{N_{l}}\), we utilize an architecture modified from the FrameDiff  which incorporates Invariant Point Attention (IPA) from AF2  to encode spatial features combined with transformer layers  to encode sequence-level features. To achieve a unified representation of both protein residues and ligand atoms, we follow the approach used in RoseTTAFold All-Atom , where each ligand atom is treated as an individual residue. Initial representations are based on atom element type embeddings, and the frame orientations are set as identity matrices. To further model the covalent bonding information (single bond, double bond, triple bond, or aromatic bond), we also add the bond embeddings to the 2D track. We use additional MLPs based on the residue embeddings to predict the residue types, interaction types, and sidechain torsion angles. Instead of directly predicting the vector field, we let the model predict the final structure at \(t=1\) and interpolate to obtain the vector field. More details are introduced in the Appendix. C.

**Overall Training Loss.** The overall training loss of PocketFlow is the summation of Equ. 1, 2, 3, 4, and 5. To fully utilize the protein-ligand context information, we use the whole protein-ligand complex structure at \(t\), i.e., \(_{t}=_{t}_{t}\) as the inputs of \(v_{}(,t)\).

**Equivariance.** Following [84; 53], we perform all training and sampling within the zero center of mass (CoM) subspace by subtracting the CoM of the scaffold from the initialized structure. PocketFlow has the ideal SE(3)-equivariance property of geometric generative models:

**Theorem 1**.: _Denote the SE(3)-transformation as \(T_{g}\), PocketFlow \(p_{}(,|)\) is SE(3) equivariant i.e., \(p_{}(T_{g}(,)|T_{g}())=p_{}(,|)\), where \(\) denotes the designed pocket, \(\) is the binding ligand, and \(\) is the protein scaffold._

The main idea is that the SE(3)-invariant prior and SE(3)-equivariant neural network lead to an SE(3)-equivariant generative process of PocketFlow. We give the full proof in the Appendix. D.

### Pocket Sampling with Prior Guidance

To improve the binding affinity and structural validity of the generated protein pocket, we proposed a novel domain-knowledge-guided sampling scheme. Generally, we use classifier-guided sampling  and consider overall binding affinity guidance and interaction geometry guidance. To encourage the generated protein-ligand complex to satisfy a specific condition \(y\), we apply the Bayes rule [23; 30]:

\[_{_{t}} p(_{t}|y)=_{_{t}}  p(_{t})+_{_{t}} p(y|_{t}),\] (6)

where \(_{_{t}} p(_{t})\) is the unconditional vector field \(v_{}(_{t},t)\) and \(_{_{t}} p(y|_{t})\) is the guidance term to constrain the generated complex in a specific condition \(y\).

**Binding Affinity Guidance.** To generate protein pockets with higher binding affinity to the target ligand, we train a separate lightweight affinity predictor for guidance (More details of the predictor in Appendix. E.1). Specifically, the data points in the training set are annotated 1 if their affinity is higher than the average score of the dataset, otherwise 0 . Because the intermediate structure is noisy, we take the expected structure at \(t=1\), i.e., \(}_{1}(_{t})\) from the model output and feed it into the predictor. Then we have the classifier-guided velocity field \(_{}(_{t},t)\):

\[_{}(_{t},t)=v_{}(_{t},t)- _{_{t}} p_{}(v_{b}=1|}_{1}( _{t})),\] (7)

where we add a scaling factor \(>0\) that controls the gradient strength. \(p_{}\) is the affinity predictor and \(v_{b}\{0,1\}\) is the binary label of binding affinity.

**Interaction Geometry Guidance.** Inspired by [97; 89], we considered 4 dominant non-covalent interaction types in PocketFlow, including salt bridges, \(\)-\(\) stacking, hydrogen bonds, and hydrophobic interactions. The local geometries need to satisfy a series of distance/angle constraints to form strong interactions . For example, for hydrogen bonds, the distances between donor and acceptor atoms need to be less than 4.1 A and larger than 2 A to reduce steric clashes . The following inequality is a necessary condition for residues in \(}_{1}(_{t})\) with predicted interaction label \(_{1}\) as hydrogen bond:

\[l_{}_{i_{hbond}^{(k)},j}\| ^{(i)}-^{(j)}\|_{2} l_{},\] (8)

where \(l_{}\) and \(l_{}\) are distance constraints; \(_{hbond}^{(k)}\) denote the \(k\)-th residue in the set of residues with predicted hydrogen bonds. With a little abuse of notations, \(^{(i)}\) and \(^{(j)}\) denote the candidate atom coordinates in the residue and ligand respectively. The distance guidance can be derived as:

\[-_{_{t}}_{k=1}^{|_{hbond}^{(k)}|}[_{ 1}(0,d^{(k)}-l_{})+_{2}(0,l_{} -d^{(k)})],\] (9)

where \(d^{(k)}=_{i_{hbond}^{(k)},j}\| ^{(i)}-^{(j)}\|_{2}\) and \(_{1},_{2}>0\) are constant coefficients that control the strength of guidance. The detailed deduction is included in the Appendix. E.2. Besides the distance constraint, the hydrogen bond needs to satisfy the acceptor/donor angle constraint , e.g., the donor/acceptor angle needs to be larger than 100\({}^{}\). The angle guidance is presented as follows:

\[-_{3}_{_{t}}_{k=1}^{|_{hbond}^{(k)}|} (0,_{}-^{(k)}),\] (10)

where \(^{(k)}=_{i_{hbond}^{(k)},j} (^{(i)},^{(j)})\) and \((,)\) calculates the acceptor/donor angle in Figure. 4. \(_{3}>0\) is the guidance coefficient. The guidance for the other interactions is discussed in Appendix. E. We note that the residue type/side chain structure of the pocket is not determined during the sampling. Directly sampling from the residue type distribution makes the model not differentiable . We propose the **Sidechain Ensemble** for the interaction geometry calculation, i.e., the weighted sum of geometric guidance with respect to residue types (Figure. 6).

**Sampling.** With the initialized data, the sampling process is the integration of the ODE \(_{t}}{dt}=v_{}(_{t},t)\) from \(t=0\) to \(t=1\) with an Euler solver . \(,_{1},_{2},\) and \(_{3}\) are set as 1 in the default setting. To apply the guidance, we use \(_{}\) which is \(v_{}\) plus guidance terms (Equ. 7, 9, and 10):

\[_{t+ t}^{(i)} =(_{t}^{(i)}+_{}( _{t}^{(i)},t) t);\] (11) \[_{t+ t}^{(i)} =_{t}^{(i)}+_{}(_{t}^ {(i)},t) t;_{t+ t}^{(i)}=_{t}^{(i )}(_{}(_{t}^{(i)},t) t);\] (12) \[_{t+ t}^{(i)} =(_{t}^{(i)}+_{}( _{t}^{(i)},t) t); I_{t+ t}^{(i)}=(I_{t}^{(i)}+_{}(I_{t}^{(i)},t) t);\] (13)

where \( t\) is the time step; \(v_{}(;t)\) denotes the subcomponent of the vector field for different variables. \(()\) means normalizing the vector to a probability vector such that the summation is 1, and \(()\) means regularizing the torsion angles by \(()=(+)(2)-\).

## 5 Experiments

### Experimental Settings

**Datasets.** Following previous works [29; 71; 92] we consider two widely used protein-small molecule binding datasets for experimental evaluations: **CrossDocked** dataset  is generated through cross-docking and is split with mmseqs2  at 30\(\%\) sequence identity, leading to train/val/test set of 100k/100/100 complexes. **Binding MOAD** dataset  contains experimentally determined protein-small molecule complexes and is split based on the proteins' enzyme commission number , resulting in 40k protein-small molecule pairs for training, 100 pairs for validation, and 100 pairs for testing. To test the generalizability of PocketFlow to other ligand modalities, we further consider **PPDBench**, which contains 133 non-redundant complexes of protein-peptides and **PDBBind RNA**, which contains 56 protein-RNA pairs by filtering the PDBBind nucleic acid subset. More details of data preprocessing are included in the Appendix. A. Considering the distance ranges of protein-ligand interactions , we redesign all the protein residues that contain atoms within 3.5 A of any binding ligand atoms, i.e., the pocket area. The number of designed residues is set the same as the reference pocket. We sample 100 pockets for each complex in the test set for evaluation.

**Baselines and Implementation.** PocketFlow is compared with four state-of-the-art representative baseline methods. **DEPACT** is a template-matching method  for pocket design by searching and grafting residues. **dyMEAN** and **FAIR** are deep-learning methods based on equivariant translation and iterative refinement. **RFDiffusionAA** is the latest version of RFDiffusion , which can directly generate protein pocket structures conditioned on the ligand. Different from the sequence-structure co-design scheme in dyMEAN and FAIR, the residue types and sidechain structures in RFDiffusionAA are determined with LigandMPNN  in a post-hoc manner.

For experiments on PPDBench and PDBBind RNA, we pretrain PocketFlow and baseline models on the combination of the CrossDocked and Binding MOAD dataset, in which we carefully eliminate all complexes with the same PDB IDs to avoid potential data leakage. Then we represent the peptide and RNA similar to small molecules (atom coordinates/types and covalent bonds) and input to PocketFlow for sampling without fine-tuning. For simplicity, the structure of peptide/RNA is set fixed. All the baselines are run on the same Tesla A100 GPU.

**Performance Metrics.** We employ the following metrics to comprehensively evaluate the validity of the generated pocket sequence and structure. Amino Acid Recovery (**AAR**) is defined as the overlapping ratio between the predicted and ground truth residue types. In bioengineering, mutating too many residues may lead to instability or failure to fold . Therefore, a larger AAR is more favorable. **scRMSD** refers to self-consistency Root Mean Squared Deviation between the generated and the predicted pocket's backbone atoms to reflect structural validity. Following established pipelines

    &  &  \\   & AAR (\(\)) & scRMSD (\(\)) & Vina (\(\)) & AAR (\(\)) & scRMSD (\(\)) & Vina (\(\)) \\  Test set & - & 0.65 & -7.016 & - & 0.67 & -8.076 \\ DEPACT & 31.52\(\)3.26\% & 0.73\(\)0.06 & -6.632\(\)0.18 & 35.30\(\)2.19\% & 0.77\(\)0.08 & -7.571\(\)0.15 \\ dyMEAN & 38.71\(\)2.16\% & 0.79\(\)0.09 & -6.855\(\)0.06 & 41.22\(\)1.40\% & 0.80\(\)0.12 & -7.675\(\)0.09 \\ FAIR & 40.16\(\)1.71\% & 0.76\(\)0.03 & -7.015\(\)0.12 & 43.68\(\)0.92\% & 0.72\(\)0.04 & -7.930\(\)0.15 \\ RFDiffusionAA & 50.85\(\)1.85\% & 0.68\(\)0.07 & -7.012\(\)0.09 & 49.09\(\)2.49\% & 0.70\(\)0.04 & -8.020\(\)0.11 \\  PocketFlow & **52.19\(\)1.34\%** & 0.67\(\)0.04 & **-8.236\(\)0.16** & **54.30\(\)1.70\%** & 0.68\(\)0.03 & **-9.370\(\)0.24** \\ w/o At Guide & 50.94\(\)1.37\% & **0.65\(\)0.04** & -7.375\(\)0.10 & 51.43\(\)1.52\% & **0.644\(\)0.04** & -8.380\(\)0.19 \\ w/o Geo Guide & 49.80\(\)1.41\% & 0.68\(\)0.03 & -8.120\(\)1.04 & 53.49\(\)1.53\% & 0.71\(\)0.05 & -9.197\(\)0.22 \\ w/o Geo \& Aff Guide & 48.50\(\)1.66\% & 0.71\(\)0.06 & -7.135\(\)0.13 & 49.71\(\)1.68\% & 0.69\(\)0.03 & -8.241\(\)0.18 \\ w/o Inter Learning & 50.72\(\)1.20\% & 0.66\(\)0.03 & -7.968\(\)0.15 & 52.25\(\)1.74\% & 0.68\(\)0.05 & -9.031\(\)0.17 \\   

Table 1: Evaluation of different models on **small-molecule-binding** protein pocket design. We report the average and standard deviation values across three independent runs. We highlight the best two results with **bold text** and underlined text, respectively.

Figure 2: Case studies of small-molecule-binding protein pocket design. We show the reference and designed structures/sequences of two protein pockets from the CrossDocked (PDB ID: 1NJE) and Binding MOAD (PDB ID: 2PQL) datasets respectively.

[77; 54], for each generated protein structure, eight sequences are firstly derived by ProteinMPNN  and the folded to structures with ESMFold . we report the minimum scRMSD for the predicted structures. To measure the binding affinity for protein-small molecule pairs, we calculate **Vina Score** with AutoDock Vina  following [64; 92]. For protein-peptide and protein-RNA pairs, we calculate **Rosetta \( G\)** and **Rosetta-Vienna RNP-\( G\)** respectively that measure the binding affinity change. The unit is kcal/mol and a lower Vina score/\( G\) indicates higher affinity.

### Small-molecule-binding Pocket Design

Table 1 shows the results of different methods on the CrossDocked and Binding MOAD dataset for small-molecule-binding pocket design. We can observe that PocketFlow overperforms baseline models with a clear margin on AAR, scRMSD, and Vina scores, demonstrating the strong ability of PocketFlow to design pockets with high validity and affinity. The average improvements over the RFDiffusionAA on AAR, scRMSD, and Vina Score are 3.3\(\%\), 0.05, and 1.29 respectively. PocketFlow also predicts more aligned sidechain angles with ground truth as evidenced in Table. 5. Compared with baselines, PocketFlow enjoys the advantage of powerful flow-matching architecture and effective physical/chemical prior guidance. Different from the post-hoc manner of deriving sequences in RFDiffusionAA , the co-design scheme also encourages sequence-structure consistency. We also compare the _generation efficiency_ of different models in Figure. 7. Considering the pocket quality improvement brought by PocketFlow, the time overhead is acceptable.

We also perform ablation studies in Table. 1, where w/o Aff Guide, w/o Geo Guide, and w/o Geo \(\&\) Aff Guide indicate generating pockets without Affinity Guidance, Interaction Geometry Guidance, and all Guidance respectively. In w/o Inter Learning, we retrain a model without learning interaction types and generate pockets without Interaction Geometry Guidance as well. We can observe that the Affinity and Geometry Guidance indeed play critical roles in enhancing binding affinity and structural validity. For example, the Vina score drops to -7.135 without guidance from -8.236 on the CrossDocked dataset. We also note Affinity Guidance may have slight side effects on scRMSD and we need to balance the strength of unconditional and guidance terms (more results in Appendix. F).

    &  &  \\   & AAR (\(\)) & scRMSD (\(\)) & \( G\) (\(\)) & AAR (\(\)) & scRMSD (\(\)) & \( G\) (\(\)) \\  Test set & - & 0.64 & - & - & 0.59 & - \\ dyMEAN & 26.29\(\)1.05\% & 0.71\(\)0.05 & -0.23\(\)0.04 & 25.90\(\)1.22\% & 0.71\(\)0.04 & -0.18\(\)0.03 \\ FAIR & 32.53\(\)0.89\% & 0.86\(\)0.04 & 0.05\(\)0.07 & 24.90\(\)0.92\% & 0.80\(\)0.05 & 0.13\(\)0.05 \\ RFDiffusionAA & 46.85\(\)1.45\% & **0.65\(\)0.96** & -0.62\(\)0.05 & **44.69\(\)1.90\%** & **0.65\(\)0.03** & -0.45\(\)0.07 \\  PocketFlow & **48.19\(\)1.34\%** & 0.67\(\)0.04 & **-1.06\(\)0.04** & 44.34\(\)1.16\% & 0.69\(\)0.01 & **-0.78\(\)0.07** \\ w/o Aff Guide & 47.78\(\)1.18\% & 0.70\(\)0.02 & -0.47\(\)0.10 & 42.15\(\)1.56\% & 0.68\(\)0.04 & -0.35\(\)0.11 \\ w/o Geo Guide & 47.30\(\)1.94\% & 0.72\(\)0.05 & -0.96\(\)0.08 & 41.73\(\)2.34\% & 0.77\(\)0.09 & -0.65\(\)0.15 \\ w/o Geo \& Aff Guide & 44.63\(\)1.79\% & 0.78\(\)0.05 & -0.31\(\)0.05 & 39.70\(\)1.24\% & 0.78\(\)0.06 & -0.26\(\)0.08 \\ w/o Inter Learning & 36.41\(\)1.38\% & 0.74\(\)0.06 & -0.34\(\)0.05 & 36.27\(\)1.47\% & 0.82\(\)0.13 & -0.23\(\)0.06 \\   

Table 2: Evaluation of different approaches on the **peptide** and **RNA** datasets. DEPACT is not reported here because it is specially designed for small molecules. dyMEAN, FAIR, and PocketFlow are pretrained on protein-small molecule datasets and we use the checkpoint of RFDiffusionAA .

Figure 3: Case studies of peptide/RNA-binding protein pocket design. We show the reference and designed structures/sequences of two protein pockets from PPDBBench (PDB ID: 1NQ7) and PDBBind RNA (PDB ID: 5DNO) datasets respectively. The ligand structures (orange) are set fixed.

### Generalization to Other Ligand Domains

Besides small molecules, the binding of protein with other ligand modalities such as peptides and nucleic acids play critical roles in biomedicine [82; 8]. However, the available dataset size compared with small molecules-protein complexes is quite limited (e.g., \(\) 100 in PPDBench v.s. over 100k in CrossDocked). Here, we explore whether the pretrained PocketFlow on the combination of CrossDocked and Binding MOAD can generalize to peptide and RNA-binding pocket design in Table. 2. The peptide and RNA ligands are represented as molecules (atoms and covalent bonds) to fit into the pretrained models. We have observed that PocketFlow achieves performance comparable to the state-of-the-art baseline, RFDiffusionAA, with prior guidance significantly enhancing its generalizability. Our hypothesis is that the protein-ligand interactions and fundamental physical laws learned by PocketFlow are applicable universally across various biomolecular domains [89; 97]. By explicitly incorporating physical and chemical priors into the generative model, PocketFlow not only aligns with these universal principles but also gains a marked advantage of generalizability.

### Interaction Analysis and Case Studies

We adopt PLIP  and posecheck  to detect the protein-ligand interactions in the generated pockets. In Table. 3, we show the average number of steric clashes, hydrogen bond donors, acceptors, and hydrophobic interactions (without redocking). We observe that PocketFlow can generate pockets with fewer clashes and more favorable interactions. For example, the average steric clashes for RFDiffusionAA and PocketFlow are 3.58 and 1.21 respectively. The average number of Hydrogen Bonds for RFDiffusionAA and PocketFlow are 3.76 and 4.12 respectively. These improvements can be attributed to the model's affinity/geometry guidance and its enhanced modeling of pocket/ligand flexibility, both of which promote the formation of advantageous protein-ligand interactions while minimizing clashes. Some interaction types such as \(\)-\(\) stacking in PocketFlow are a little less than the reference, which may be due to the low frequency of these interactions in the dataset.

Figure. 2 and 3 show examples of the generated pockets for small molecules, peptides, and RNA. PocketFlow recovers most residue types and changes several key residues to achieve higher binding affinity. The overall structure of the pocket, including the sidechains, is generally well-maintained.

### Limitations and Broader Impacts

While PocketFlow is a powerful generative method for pocket generation, we find the following limitations for further improvement. First, PocketFlow is only trained on protein-small molecule datasets in the paper. In the future, incorporating protein-peptides/nucleic acids/metal datasets, even the generated data from AlphaFold3  would be promising directions. Second, the integration of pretrained protein language models  and structure models  could significantly enhance PocketFlow's performance. Additionally, wet lab experiments to verify PocketFlow's efficacy are planned. Potential negative impacts may include the misuse of PocketFlow for creating harmful biomolecules . Rigorous oversight and screening access to the model should be considered.

## 6 Conclusion

In this paper, we proposed PocketFlow, a protein-ligand interaction prior-informed flow matching model for protein pocket generation. We define multimodal flow matching for protein backbone

  Methods & Clash (\(\)) & HB (\(\)) & Salt (\(\)) & Hydro (\(\)) & \(\)-\(\) (\(\)) \\  Test set & 4.59 & 3.89 & 0.26 & 5.89 & **0.32** \\ DEPACT & 6.72 & 3.10 & 0.14 & 5.70 & 0.16 \\ dJMEAN & 4.65 & 3.07 & 0.17 & 5.85 & 0.20 \\ FAIR & 4.90 & 3.30 & 0.18 & 5.47 & 0.15 \\ RFDiffusionAA & 3.58 & 3.76 & 0.22 & 5.65 & 0.31 \\ PocketFlow & **1.21** & **4.12** & **0.27** & **6.03** & 0.28 \\  

Table 3: Interaction analysis of the generated protein pockets on the CrossDocked dataset. We measure the average number of steric clashes (**Clash**), hydrogen bonds (**HB**), salt bridges (**Salt**), hydrophobic interactions (**Hydro**), and \(\)-\(\) stacking (\(-\)) per protein-ligand complex. More results on the variants of PocketFlow are included in Appendix F.

frames, sidechain torsion angles, and residue/interaction types to appropriately represent the protein-ligand complex. The binding affinity and interaction geometry guidance effectively improve the validity and affinity of the generated pockets. Moreover, PocketFlow offers a unified framework covering small-molecule, nucleic acids, and peptides-binding protein pocket generation.

## 7 Acknowledgements

This research was supported by grants from the National Natural Science Foundation of China (Grant No. 623B2095) and the Fundamental Research Funds for the Central Universities.