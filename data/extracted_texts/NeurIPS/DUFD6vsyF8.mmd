# Federated Natural Policy Gradient and Actor Critic Methods for Multi-task Reinforcement Learning

Tong Yang

CMU

Shicong Cen

CMU

Yuting Wei

UPenn

Yuxin Chen

UPenn

Yuejie Chi

CMU

Department of Electrical and Computer Engineering, Carnegie Mellon University; email: shi.cong@andrew.cmu.edu. Department of Statistics and Data Science, Wharton School, University of Pennsylvania; email: ytwei@wharton.upenn.edu. Department of Statistics and Data Science, Wharton School, University of Pennsylvania; email: yuxinc@wharton.upenn.edu. Department of Electrical and Computer Engineering, Carnegie Mellon University; email: yuejiechi@cmu.edu.

###### Abstract

Federated reinforcement learning (RL) enables collaborative decision making of multiple distributed agents without sharing local data trajectories. In this work, we consider a multi-task setting, in which each agent has its own private reward function corresponding to different tasks, while sharing the same transition kernel of the environment. Focusing on infinite-horizon Markov decision processes, the goal is to learn a globally optimal policy that maximizes the sum of the discounted total rewards of all the agents in a decentralized manner, where each agent only communicates with its neighbors over some prescribed graph topology. We develop federated vanilla and entropy-regularized natural policy gradient (NPG) methods in the tabular setting under softmax parameterization, where gradient tracking is applied to estimate the global Q-function to mitigate the impact of imperfect information sharing. We establish non-asymptotic global convergence guarantees under exact policy evaluation, where the rates are nearly independent of the size of the state-action space and illuminate the impacts of network size and connectivity, and further establish its robustness against inexact policy evaluation. We further propose a federated natural actor critic (NAC) method for multi-task RL with function approximation and stochastic policy evaluation, and establish its finite-time sample complexity taking the errors of function approximation into account. To the best of our knowledge, this is the first time that near dimension-free global convergence is established for federated multi-task RL using policy optimization.

## 1 Introduction

Federated reinforcement learning (FRL) is an emerging paradigm that combines the advantages of federated learning (FL) and reinforcement learning (RL) , allowing multiple agents to learn a shared policy from local experiences, without exposing their private data to a central server nor other agents. FRL is poised to enable collaborative and efficient decision making in scenarios where data is distributed, heterogeneous, and sensitive, which arise frequently in applications such as edge computing, smart cities, and healthcare , to name just a few. As has been observed , decentralized training can lead to performance improvements in FL by avoiding communication congestions at busy nodes such as the server, especially under high-latency scenarios. This motivates us to design algorithms for the _fully decentralized_ setting, ascenario where the agents can only communicate with their local neighbors over a prescribed network topology.6

In this work, we study the problem of _federated multi-task RL_, where each agent collects its own reward -- possibly unknown to other agents -- corresponding to the local task at hand, while having access to the same dynamics (i.e., transition kernel) of the environment. The collective goal is to learn a shared policy that maximizes the total rewards accumulated from all the agents; in other words, one seeks a policy that performs well in terms of overall benefits, rather than biasing towards any individual task, achieving the Pareto frontier in a multi-objective context. There is no shortage of application scenarios where federated multi-task RL becomes highly relevant. For instance, in healthcare , different hospitals may be interested in finding an optimal treatment for all patients without disclosing private data, where the effectiveness of the treatment can vary across different hospitals due to demographical differences. See Appendix B.1 for more application scenarios of our setting.

Nonetheless, despite the promise, provably efficient algorithms for federated multi-task RL remain substantially under-explored, especially in the fully decentralized setting. The heterogeneity of local tasks leads to a higher degree of disagreements between the global value function and local value functions of individual agents. Due to the lack of global information sharing, care needs to be taken to judiciously balance the use of neighboring information (to facilitate consensus) and local data (to facilitate learning) when updating the policy. To the best of our knowledge, very few algorithms are currently available to find the global optimal policy with non-asymptotic convergence guarantees even for tabular infinite-horizon Markov decision processes.

Motivated by the connection with decentralized optimization, it is tempting to take a policy optimization perspective to tackle this challenge. Policy gradient (PG) methods, which seek to learn the policy of interest via first-order optimization methods, play an eminent role in RL due to their simplicity and scalability. In particular, natural policy gradient (NPG) methods  are among the most popular variants of PG methods, underpinning default methods used in practice such as trust region policy optimization (TRPO)  and proximal policy optimization (PPO) . On the theoretical side, it has also been established recently that the NPG method enjoys fast global convergence to the optimal policy in an almost dimension-free manner , where the iteration complexity is nearly independent of the size of the state-action space. These benefits can be translated to their sample-based counterparts such as the natural actor critic (NAC) method , where the policies are evaluated via stochastic samples. It is natural to ask:

_Can we develop **federated** NPG and NAC methods with **non-asymptotic global convergence** guarantees for multi-task RL in the fully decentralized setting?_

### Our contributions

Focusing on infinite-horizon Markov decision processes (MDPs), we provide an affirmative answer to the above question, by developing federated NPG (FedNPG) methods for solving both the vanilla and entropy-regularized multi-task RL problems with finite-time global convergence guarantees. While entropy regularization is often incorporated as an effective strategy to encourage exploration during policy learning, solving the entropy-regularized RL problem is of interest in its own right, as the optimal regularized policy possesses desirable robust properties with respect to reward perturbations . Due to the multiplicative update nature of NPG methods under softmax parameterization, it is more convenient to work with the logarithms of local policies in the decentralized setting. In each iteration of the proposed FedNPG method, the logarithms of local policies are updated by a weighted linear combination of two terms (up to normalization): a gossip mixing  of the logarithms of neighboring local policies, and a local estimate of the global Q-function tracked via the technique of dynamic average consensus , a prevalent idea in decentralized optimization that allows for the use of large constant learning rates  to accelerate convergence. We further develop sample-efficient federated NAC (FedNAC) methods that allow for both stochastic policy evaluation and function approximation. Our contributions are as follows.

* We propose FedNPG methods for both the vanilla and entropy-regularized multi-task RL problems, where each agent only communicates with its neighbors and performs local computation using its own reward or task information.

is set as \(=_{1}=((1-)^{2}||}{ TN})^{1/3}\); for entropy-regularized FedNPG, the learning rate satisfies \(0<<_{0}=((1-)^{2}}{ N })\).
* Assuming access to exact policy evaluation, we establish that the average iterate of vanilla FedNPG converges globally at a rate of \((1/T^{2/3})\) in terms of the sub-optimality gap for the multi-task RL problem, and that the last iterate of entropy-regularized FedNPG converges globally at a linear rate to the regularized optimal policy. Our convergence theory highlights the impacts of all salient problem parameters (see Table 1 for details), such as the size and connectivity of the communication network. In particular, the iteration complexities of FedNPG are again almost independent of the size of the state-action space, which recover prior results on the centralized NPG methods when the network is fully connected.
* We further demonstrate the stability of the proposed FedNPG methods when policy evaluations are only available in an inexact manner. To be specific, we prove that their convergence rates remain unchanged as long as the approximation errors are sufficiently small in the \(_{}\) sense.
* We go beyond the tabular setting and black-box policy evaluation by proposing FedNAC-- a federated actor critic method for multi-task RL with function approximation and stochastic policy evaluation -- and establish a finite-sample sample complexity on the order of \((1/^{7/2})\) for each agent in terms of the expected sub-optimality gap for the fully decentralized setting.

To the best of our knowledge, the proposed federated NPG and NAC methods are the first policy optimization methods for multi-task RL that achieve near dimension-free global convergence guarantees in terms of iteration and sample complexities, allowing for fully decentralized communication without any need to share local reward/task information. We conduct numerical experiments in a multi-task GridWorld environment to corroborate the efficacy of the proposed methods (see Appendix H). We defer the readers to Appendix A for more related work, and Appendix B.2 for additional discussions on our theoretical contributions.

**Notation.** Boldface small and capital letters denote vectors and matrices, respectively. Sets are denoted with curly capital letters, e.g., \(\), \(\). We let \((^{d},\|\|)\) denote the \(d\)-dimensional real coordinate space equipped with norm \(\|\|\). The \(_{p}\)-norm of \(\) is denoted by \(\|\|_{p}\), where \(1 p\), and the spectral norm and the Frobenius norm of a matrix \(\) are denoted by \(\|\|_{2}\) and \(\|\|_{}\), resp. We let \([N]\) denote \(\{1,,N\}\), use \(_{N}\) to represent the all-one vector of length \(N\), and denote by \(\) a vector or a matrix consisting of all \(0\)'s. We allow the application of functions such as \(()\) and \(()\) to vectors or matrices, with the understanding that they are applied in an element-wise manner.

## 2 Model and backgrounds

**Markov decision processes.** We consider an infinite-horizon discounted Markov decision process (MDP) denoted by \(=(,,P,r,)\), where \(\) and \(\) denote the state space and the action space, respectively, \([0,1)\) indicates the discount factor, \(P:()\) is the transition kernel, and \(r:\) stands for the reward function. To be more specific, for each state-action pair \((s,a)\) and any state \(s^{}\), we denote by \(P(s^{}|s,a)\) the transition probability from state

   setting & algorithms & iteration complexity & optimality criteria \\   & NPG  & \((}+|}{})\) & \(V^{}-V^{^{(0)}}\) \\   & FedNPG (ours) & \((||}{(1-)^{}}+})\) & \(_{t=0}^{T-1}(V^{}-V^{^{(0)}})\) \\   & NPG  & \((())\) & \(V^{}_{}-V^{^{(0)}}_{}\) \\   & FedNPG (ours) & \((\{,( )\}.\) & \(V^{}_{}-V^{^{(0)}}_{}\) \\   

Table 1: Iteration complexities of NPG and FedNPG (ours) methods to reach \(\)-accuracy of the vanilla and entropy-regularized problems, where we assume exact gradient evaluation, and only keep the dominant terms w.r.t. \(\). The policy estimates in the \(t\)-iteration are \(^{(t)}\) and \(^{(t)}\) for NPG and FedNPG, respectively, where \(T\) is the number of iterations. Here, \(N\) is the number of agents, \( 1\) is the regularization parameter, \(\) is the spectral radius of the network, \([0,1)\) is the discount factor, \(||\) is the size of the action space, and \(>0\) is the learning rate. The iteration complexities of FedNPG reduce to their centralized counterparts when \(=0\). For vanilla FedNPG, the learning rate is set as \(=_{1}=((1-)^{2}| |}{TN})^{1/3}\); for entropy-regularized FedNPG, the learning rate satisfies \(0<<_{0}=((1-)^{2}}{  N})\).

\(s\) to state \(s^{}\) when action \(a\) is taken, and \(r(s,a)\) the instantaneous reward received in state \(s\) when action \(a\) is taken. Furthermore, a policy \(:()\) specifies an action selection rule, where \((a|s)\) specifies the probability of taking action \(a\) in state \(s\) for each \((s,a)\).

For any given policy \(\), we denote by \(V^{}:\) the corresponding value function, which is the expected discounted cumulative reward with an initial state \(s_{0}=s\), given by

\[ s: V^{}(s)[_{t=0}^{ }^{t}r(s_{t},a_{t})|s_{0}=s], \]

where the randomness is over the trajectory generated following the policy \(a_{t}(|s_{t})\) and the MDP dynamic \(s_{t+1} P(|s_{t},a_{t})\). We also overload the notation \(V^{}()\) to indicate the expected value function of policy \(\) when the initial state follows a distribution \(\) over \(\), namely, \(V^{}()_{s}[V^{}(s)]\). Similarly, the Q-function \(Q^{}:\) of policy \(\) is defined by

\[Q^{}(s,a)[_{t=0}^{}^{t}r(s_{t},a_{ t})|s_{0}=s,a_{0}=a] \]

for all \((s,a)\), which measures the expected discounted cumulative reward with an initial state \(s_{0}=s\) and an initial action \(a_{0}=a\), with expectation taken over the randomness of the trajectory. The optimal policy \(^{}\) refers to the policy that maximizes the value function \(V^{}(s)\) for all states \(s\), which is guaranteed to exist . The corresponding optimal value function and Q-function are denoted as \(V^{}\) and \(Q^{}\), respectively.

**Entropy-regularized RL.** Entropy regularization  is a popular technique in practice that encourages stochasticity of the policy to promote exploration, as well as robustness against reward uncertainties. Mathematically, this can be viewed as adjusting the instantaneous reward based the current policy in use as

\[(s,a):\ r_{}(s,a) r(s,a)- (a|s)\,, \]

where \( 0\) denotes the regularization parameter. Typically, \(\) should be too large to outweigh the actual rewards; for ease of presentation, we assume \(\{1,\,|}\}\). Equivalently, this amounts to the entropy-regularized (also known as "soft") value function, defined as

\[ s: V^{}_{}(s) V^{}(s)+ (s,), \]

where

\[(s,)[_{t=0}^{}-^{t} (a_{t}|s_{t})s_{0}=s]. \]

Analogously, for all \((s,a)\), the regularized (or soft) Q-function \(Q^{}_{}\) of policy \(\) is related to the soft value function \(V^{}_{}(s)\) as

\[Q^{}_{}(s,a) =r(s,a)+_{s^{} P(|s,a)}[V^{ }_{}(s^{})]\,, \] \[V^{}_{}(s) =_{a(|s)}[-(a|s)+Q^{}_{ }(s,a)]\,. \]

The optimal regularized policy, the optimal regularized value function, and the Q-function are denoted by \(^{}_{}\), \(V^{}_{}\), and \(Q^{}_{}\), respectively.

**Natural policy gradient methods.** Natural policy gradient (NPG) methods lie at the heart of policy optimization, serving as the backbone of popular heuristics such as TRPO  and PPO . Instead of directly optimizing the policy over the probability simplex, one often adopts the softmax parameterization, which parameterizes the policy as \(_{}()\) or

\[_{}(a|s)}(s,a^{})} \]

for any \(\): \(\) and \((s,a)\).

In the tabular setting, the update rule of vanilla NPG at the \(t\)-th iteration can be concisely represented as

\[^{(t+1)}(a|s)^{(t)}(a|s)((s,a)}{1- }), \]Turning to the regularized problem, we note that the update rule of entropy-regularized NPG becomes

\[^{(t+1)}(a|s)(^{(t)}(a|s))^{1-}( ^{(t)}(s,a)}{1-}), \]

where \((0,]\) is the learning rate, and \(Q_{}^{(t)}=Q_{}^{^{(t)}}\) is the soft Q-function of policy \(^{(t)}\).

## 3 Federated NPG methods for multi-task RL

In this paper, we consider the federated multi-task RL setting, where a set of agents learn collaboratively a single policy that maximizes its average performance over all the tasks using only local computation and communication.

**Multi-task RL.** Each agent \(n[N]\) has its own private reward function \(r_{n}(s,a)\) -- corresponding to different tasks -- while sharing the same transition kernel of the environment. The goal is to collectively learn a single policy \(\) that maximizes the global value function given by \(V^{}(s)=_{n=1}^{N}V_{n}^{}(s)\), where \(V_{n}^{}\) is the value function of agent \(n[N]\), defined by

\[V_{n}^{}(s)[_{t=0}^{}^{t}r_{n}(s_{ t},a_{t})|s_{0}=s].\]

Clearly, the global value function corresponds to using the average reward of all agents \(r(s,a)=_{n=1}^{N}r_{n}(s,a)\). The global Q-function \(Q^{}(s,a)\) and the agent Q-functions \(Q_{n}^{}(s,a)\) can be defined in a similar manner obeying \(Q^{}(s,a)=_{n=1}^{N}Q_{n}^{}(s,a)\).

In parallel, we are interested in the entropy-regularized setting, where each agent \(n[N]\) is equipped with a regularized reward function given by \(r_{,n}(s,a) r_{n}(s,a)-(a|s)\). And we define similarly the regularized value functions as

\[V_{,n}^{}(s)[_{t=0}^{}^{t}r_{ ,n}(s_{t},a_{t})|s_{0}=s]\]

for all \(n[N]\) and \(V_{}^{}(s)=_{n=1}^{N}V_{,n}^{}(s)\), \( s\). The soft Q-function of agent \(n\) is given by

\[Q_{,n}^{}(s,a)=r_{n}(s,a)+_{s^{} P(|s,a)} [V_{,n}^{}(s^{})]\,, \]

and the global soft Q-function is given by \(Q_{}^{}(s,a)=_{n=1}^{N}Q_{,n}^{}(s,a)\).

**Federated policy optimization in the fully decentralized setting.** We consider a federated setting with fully decentralized communication, that is, all the agents are synchronized to perform information exchange over some prescribed network topology denoted by an undirected weighted graph \(([N],E)\). Here, \(E\) stands for the edge set of the graph with \(N\) nodes -- each corresponding to an agent -- and two agents can communicate with each other if and only if there is an edge connecting them. The information sharing over the graph is best described by a mixing matrix , denoted by \(=[w_{ij}]^{N N}\), where \(w_{ij}\) is a positive number if \((i,j) E\) and 0 otherwise. We also make the following standard assumptions on the mixing matrix.

**Assumption 3.1** (double stochasticity).: The mixing matrix \(=[w_{ij}]^{N N}\) is symmetric (i.e., \(^{}=\)) and doubly stochastic (i.e., \(_{N}=_{N}\), \(_{N}^{}=_{N}^{}\)).

The following standard metric measures how fast information propagates over the graph.

**Definition 3.2** (spectral radius).: The spectral radius of \(\) is given as \(\|-_{N}_{N}^{}\|_{2}[0,1)\).

The spectral radius \(\) determines how fast information propagate over the network. For instance, in a fully-connected network, we can achieve \(=0\) by setting \(=_{N}_{N}^{}\). For control of \(1/(1-)\) regarding different graphs, we refer the readers to . In an Erdos-Renyi random graph, as long as the graph is connected, one has with high probability \( 1\). Another immediate consequence is that for any \(^{N}\), letting \(=_{N}^{}\) be its average, we have

\[\|-_{N}\|_{2}\|-_{N}\|_{2}\,, \]

where the consensus error contracts by a factor of \(\).

### Proposed federated NPG algorithms

Assuming softmax parameterization, the problem can be formulated as decentralized optimization,

\[_{}\ V^{_{}}(s)=_{n=1}^{N}V_{n}^{_{}}(s), \] \[_{}\ V_{}^{_{}}(s) =_{n=1}^{N}V_{,n}^{_{}}(s), \]

where \(_{}()\) subject to communication constraints. Motivated by the success of NPG methods, we aim to develop federated NPG methods to achieve our goal. For notational convenience, let \(^{(t)}(_{1}^{(t)},,_{N}^{(t)}) ^{}\) be the collection of policy estimates at all agents in the \(t\)-th iteration. Let

\[^{(t)}(_{n=1}^{N}_{n}^{(t)}), \]

which satisfies that \(^{(t)}(a|s)(_{n=1}^{N}_{n}^{(t)}(a|s)) ^{1/N}\) for each \((s,a)\). Therefore, \(^{(t)}\) could be seen as the normalized geometric mean of \(\{_{n}^{(t)}\}_{n[N]}\). Define the collection of Q-function estimates as \(^{(t)}(Q_{1}^{_{1}^{(t)}},,Q_{N}^{_{ N}^{(t)}})^{}\) and \(_{}^{(t)}(Q_{,1}^{_{t}^{(t)}},,Q_ {,N}^{_{N}^{(t)}})^{}\). We shall often abuse the notation and treat \(^{(t)}\), \(_{}^{(t)}\) as matrices in \(^{N||||}\), and treat \(^{(t)}(a|s)\), \(_{}^{(t)}(a|s)\) as vectors in \(^{N}\), for all \((s,a)\).

```
1:Input: learning rate \(>0\), iteration number \(T_{+}\), mixing matrix \(^{N N}\).
2:Initialize:\(^{(0)},^{(0)}=^{(0)}\).
3:for\(t=0,1, T-1\)do
4: Update the policy for each \((s,a)\): \[^{(t+1)}(a|s)=^{ (t)}(a|s)+^{(t)}(s,a)- ^{(t)}(s)\,,\] (15) where \(^{(t)}(s)=_{a^{}} ^{(t)}(a^{}|s)+^{(t)}(s,a^{})}\).
5: Evaluate \(^{(t+1)}\).
6: Update the global Q-function estimate for each \((s,a)\): \[^{(t+1)}(s,a)=^{(t)}(s,a)+ ^{(t+1)}(s,a)-^{(t)}(s,a)}_{}\,.\] (16)
7:endfor
```

**Algorithm 1** Federated NPG (FedNPG)

**Vanilla federated NPG methods.** To motivate the algorithm development, observe that the NPG method (cf. (8)) applied to (12) adopts the update rule \(^{(t+1)}(a|s)^{(t)}(a|s)(^{N}Q_{n}^{ _{}^{(t)}}(s,a)}{N(1-)})^{}\) for all \((s,a)\). Two challenges arise when executing this update rule: the policy estimates are maintained locally without consensus, and the global Q-function are unavailable in the decentralized setting. To address these challenges, we apply the idea of dynamic average consensus , where each agent maintains its own estimate \(T_{n}^{(t)}(s,a)\) of the global Q-function, which are collected as vector \(^{(t)}=(T_{1}^{(t)},,T_{N}^{(t)})^{}\). At each iteration, each agent updates its policy estimates based on its neighbors' information via gossip mixing, in addition to a correction term that tracks the difference \(Q_{n}^{_{}^{(t+1)}}(s,a)-Q_{n}^{_{}^{(t)}}(s,a)\) of the local Q-functions between consecutive policy updates. Note that the mixing is applied linearly to the logarithms of local policies, which translates into a multiplicative mixing of the local policies. Algorithm 1 summarizes the detailed procedure of the proposed algorithm written in a compact matrix form, which we dub as federated NPG (FedNPG). Note that the agents do not need to share their reward functions withothers, and agent \(n[N]\) will only be responsible to evaluate the local policy \(_{n}^{(t)}\) using the local reward \(r_{n}\).

**Entropy-regularized federated NPG methods.** Moving onto the entropy regularized case, we adopt similar algorithmic ideas to decentralize (9), and propose the federated NPG (FedNPG) method with entropy regularization, summarized in Algorithm 2 (see Appendix C.1). Clearly, the entropy-regularized FedNPG method reduces to vanilla FedNPG in the absence of the regularization (i.e., when \(=0\)).

### Theoretical guarantees

**Global convergence of FedNPG with exact policy evaluation.** We begin with the global convergence of FedNPG (cf. Algorithm 1), stated in the following theorem. The formal statement and proof can be found in Appendix D.3, and see Appendix B.2 for discussions on the technical challenges.

**Theorem 3.3** (Global sublinear convergence of exact FedNPG (informal)).: _Suppose \(_{n}^{(0)},n[N]\) are set as the uniform distribution. Then when \(T||^{4}}{(1-)^{4}}\) and \(=((1-)^{2}||}{32TN^{ 2}})^{1/3}\), we have_

\[_{t=0}^{T-1}(V^{}()-V^{^{(t)}}( )) (d_{}^{^{*}})}{(1-)T}+^{2/3}}{(1-)^{3}(1-)^{2/3}}(|}{T })^{2/3}\,. \] \[\|_{n}^{(t)}-^{(t)}\|_{} ^{1/3}}{(1-)(1-)^{1/3}} (|}{T})^{1/3}. \]

Theorem 3.3 characterizes the average-iterate convergence of the average policy \(^{(t)}\) (cf. (14)) across the agents, which depends logarithmically on the size of the action space, and independently on the size of the state space. Theorem 3.3 indicates that in the server-client setting with \(=0\), the convergence rate of FedNPG recovers the \((1/T)\) rate, matching that of the centralized NPG established in ; on the other end, in the decentralized setting where \(>0\), FedNPG slows down and eventually converges at the slower \((1/T^{2/3})\) rate.

We state the iteration complexity in Corollary 3.4.

**Corollary 3.4** (Iteration complexity of exact FedNPG).: _To reach \(_{t=0}^{T-1}(V^{}()-V^{^{(t)}}())\), the iteration complexity of FedNPG is at most \((((1-)^{ 3/2}}+}{(1-)^{4}})||+ {1}{(1-)^{2}})\)._

**Global convergence of FedNPG with inexact policy evaluation.** In practice, the policies need to be evaluated using samples collected by the agents, where the Q-functions are only estimated approximately. We are interested in gauging how the approximation error impacts the performance of FedNPG, as demonstrated in the following theorem. The formal statement, detailed discussions, and proof of this result is given in Appendix D.4.

**Theorem 3.5** (Global sublinear convergence of inexact FedNPG (informal)).: _Suppose that an estimate \(q_{n}^{_{n}^{(t)}}\) are used in replace of \(Q_{n}^{_{n}^{(t)}}\) in Algorithm 1. Under the assumptions of Theorem 3.3, when \(T||^{4}}{(1-)^{4}}\) and \(=((1-)^{2}||}{32TN^{ 2}})^{1/3}\), we have_

\[_{t=0}^{T-1}(V^{}()-V^{ ^{(t)}}()) (d_{}^{^{*}})}{(1-)T}+^{2/3}}{(1-)^{3}(1-)^{2/3}}( |}{T})^{2/3}\] \[+}_{n[N],t[T]}\|Q_{n}^{ _{n}^{(t)}}-q_{n}^{_{n}^{(t)}}\|_{}\,. \]

Equipped with existing sample complexity bounds on policy evaluation, e.g. using a simulator as in , this immediate leads to the sample complexity per state-action pair at each agent to find an \(\)-optimal policy is at most

\[}(}{(1-)^{11.5}(1-) ^{3.5}}) \]for sufficiently small \(\).

**Global convergence of entropy-regularized FedNPG with exact policy evaluation.** Next, we present our global convergence guarantee of entropy-regularized FedNPG with exact policy evaluation (cf. Algorithm 2).

**Theorem 3.6** (Global linear convergence of exact entropy-regularized FedNPG (informal)).: _For any \((0,1)\) and \(0< 1\), there exists \(_{0}=\{,((1-)^{2}}{^{2}N})\}\), such that if \(0<_{0}\), then we have_

\[\|_{}^{(t)}-Q_{}^{}\|_{} 2  C_{1}()^{t}\|_{}^{}-^{(t)}\|_{}}{}()^{t}\,, \]

_where \(_{}^{(t)}:=Q_{}^{^{(t)}}\), \(()\{1-,\}<1\), and \(C_{1}\) is some problem-dependent constant. Furthermore, the consensus error satisfies_

\[ n[N]:\|_{n}^{(t)}-^{(t)}\| _{} 2C_{1}()^{t}. \]

The exact expressions of \(C_{1}\) and \(_{0}\) are specified in Appendix D.1. Theorem 3.6 confirms that entropy-regularized FedNPG converges at a linear rate to the optimal regularized policy, which is almost independent of the size of the state-action space, highlighting the positive role of entropy regularization in federated policy optimization. When the network is fully connected, i.e. \(=0\), the iteration complexity of entropy-regularized FedNPG reduces to \(\), matching that of the centralized entropy-regularized NPG established in . When the network is less connected, one needs to be more conservative in the choice of learning rates, leading to a higher iteration complexity, as described in the following corollary.

**Corollary 3.7** (Iteration complexity of exact entropy-regularized FedNPG).: _To reach \(\|_{}^{}-^{(t)}\|_{}\), the iteration complexity of entropy-regularized FedNPG is at most_

\[}(\{, \}) \]

_up to logarithmic factors. Especially, when \(=_{0}\), the best iteration complexity becomes \(}((}{(1-)^{}(1- )^{2}^{2}}+))\)._

**Global convergence of entropy-regularized FedNPG with inexact policy evaluation.** Last but not the least, we present the informal convergence results of entropy-regularized FedNPG with inexact policy evaluation, whose formal version can be found in Appendix D.2.

**Theorem 3.8** (Global linear convergence of inexact entropy-regularized FedNPG (informal)).: _Suppose that an estimate \(q_{,n}^{^{(t)}}\) are used in replace of \(Q_{,n}^{^{(t)}}\) in Algorithm 2. Under the assumptions of Theorem 3.6, we have_

\[\|_{}^{(t)}-Q_{}^{}\|_{} 2 C_{1}()^{t}+C_{2}_{q}\,,\| _{}^{}-^{(t)}\|_{} {}C_{1}()^{t}+C_{2}_{q}\,, \]

_where \(_{}^{(t)}:=Q_{}^{^{(t)}}\), \(_{q}_{n[N],t[T]}\|Q_{,n}^{^{(t)}}-q_ {,n}^{^{(t)}}\|_{}\), \(()\{1-,\}<1\), and \(C_{1}\), \(C_{2}\) are problem-dependent constants._

## 4 Federated NAC with function approximation and stochastic evaluation

In this section, motivated by the design and analysis of FedNPG, we go beyond the tabular setting and exact policy evaluation, by proposing a federated natural actor-critic (FedNAC) method with function approximation and stochastic policy evaluation. Specifically, we consider the policy with function approximation under softmax parameterization is of the following form:

\[f_{}(a|s)=(s,a))}{_{a^{}}(^{}(s,a^{}))}, \]

for all \((s,a)\) and \(^{p}\), where \(:^{p}\) is a known feature map. We assume \(\) is bounded over \(\), i.e., there exists \(C_{}>0\) such that \(\|(s,a)\|_{2} C_{}\) holds for all \((s,a)\).

Following , given any \(^{p}\), \(Q:\) and probability distribution \(()\) over the state-action space, we define the _function approximation error_\((,Q,)\) as follows:

\[(,Q,)_{(s,a)}[(^{ }(s,a)-Q(s,a))^{2}]. \]

By searching for \(\) that minimizes \((,Q,)\), it approximates \(Q(s,a)\) using the feature map \(\) with respect to the distribution \(\).

**Algorithm design.** Let us now discuss the high-level design of FedNAC, which is presented in Algorithm 3, with more details provided in Appendix C.2. At the \(t\)-th iteration (\(t=0,,T-1\)), denote the actor (concerning the policies) parameters of all agents as \(^{(t)}=(^{(t)}_{1},,^{(t)}_{N})^{}^{N p}\), and the critic parameters of all agents as \(^{(t)}=(^{(t)}_{1},,^{(t)}_{N})^{}^{N  p}\) (concerning the local Q-values) and \(^{(t)}=(^{(t)}_{1},,^{(t)}_{N})^{}^{N  p}\) (concerning the global Q-values).

* First, the critic parameter \(^{(t)}_{n}\) is locally updated at each agent by aiming to minimize \((,Q^{(t)}_{n},^{(t)}_{n})\) (cf. (25)) with gradient descent, where \(Q^{(t)}_{n}\) is the local Q-function of the local policy \(f_{^{(t)}_{n}}\), and \(^{(t)}_{n}\) is the state-action visitation distribution induced by the local policy \(f_{^{(t)}_{n}}\) and an initial state-action distribution \(\) (determined from the data sampling mechanism, cf. (30)). However, since \(Q^{(t)}_{n}\) is not directly available, it needs to be estimated from samples. Therefore, the critic update takes \(K\) steps of stochastic gradient descent with critic learning rate \(\), given by \[}_{k+1}=}_{k}- }_{k}^{}(s_{k},a_{k})-_{}(s_{k},a_{k})(s_{k},a_{k}),\] for \(k=0,,K-1\), where \((s_{k},a_{k})\) is sampled on the local policy \(f_{^{(t)}_{n}}\), and \(_{}(s_{k},a_{k})\) is a careful estimate of the Q-value using a trajectory with expected length \(1/(1-)\) (see Algorithm 5 in Appendix C.2 adopted from [2, Lemma 4]), and \(}_{0}=\) for simplicity. The final critic is updated as \(^{(t)}_{n}=_{k=1}^{K}}_{k}\). The total sample complexity of the critic update per iteration is then on the order of \(K/(1-)\).
* Next, the critic parameter \(^{(t)}_{n}\) for estimating the global Q-function can then be estimated by averaging with the neighbors with the Q-tracking term, given by \(^{(t)}=(^{(t-1)}+^{(t)}-^{(t-1)}).\)
* Finally, the actor parameter \(^{(t)}_{n}\) can be updated via averaging with the neighbors along with the policy gradient informed by \(^{(t)}_{n}\), given by \(^{(t+1)}=(^{(t)}+^{(t)}),\) where \(\) is the learning rate of the actor.

Note that the sample complexity of FedNAC is on the order of \(KT/(1-)\). An important aspect of the FedNAC method is that the policy is updated using trajectory data collected via executing the learned policy, which is closer to practice and more challenging to learn than using the generative model.

**Theoretical guarantees.** We first state the assumptions that are needed to guarantee the convergence of Algorithm 3, which are all commonly used in the literature, e.g., . To begin, we require the covariance matrix of the feature map induced by the initial state-action distribution \(\) satisfies the following assumption to guarantee the convergence of the critic.

**Assumption 4.1** (PSD of the covariance matrix of the feature map).: There exists \(>0\) such that \(_{(s,a)}[(s,a)^{}(s,a)]=_{} \).

We also need to ensure that the Q-values can be well approximated by the linear function approximation using feature map \((s,a)\), which is captured next.

**Assumption 4.2** (Bounded approximation error).: For each \(n[N]\), there exists \(^{n}_{} 0\) such that for all \(t\), it holds that \([(^{(t)}_{,n},Q^{(t)}_{n},^{(t)}_{ n})]^{n}_{}\), where \(^{(t)}_{,n}_{}(^{(t)}_{,n},Q^{(t)}_{n},^{(t)}_{n})\).

We denote the average approximation error as \(_{}=_{n=1}^{N}^{n}_{ }\). Similar as , we need the following assumption that bounds the transfer errors due to distribution shifts.

**Assumption 4.3** (Bounded transfer error).: There exists \(C_{}>0\) such that for all \(n[N]\) and \(t\), it holds that \(_{(s,a)_{}^{(0)}}[((s,a)}{_{}^{(0)}(s,a)})^{2}] C_{}\), where \(h^{}(s,a)\) is the state-action visitation distribution induced by any policy \(\) from initial state distribution \(\).

Note that if we choose \((s,a)>0\) for all \((s,a)\), then Assumption 4.3 is guaranteed to hold true (see Lemma E.4 in Appendix E). We are now ready to state the convergence guarantee, whose formal version and proof could be found in Appendix E.

**Theorem 4.4** (Convergence rate of Algorithm 3 (informal)).: _Let \(_{1}^{(0)}==_{N}^{(0)}\) in FedNAC. Denoting \(}^{(t)}_{n=1}^{N}_{n}^{(t)}\), and \(^{(t)} f_{^{(t)}}\) as the average policy. Then under Assumption 3.1, 4.1, 4.2 and 4.3, with appropriately chosen learning rates \(\) and \(\), as long as the number of actor iterations satisfies_

\[T\{(1-)^{17/4}(1-)^ {3/2}},,}{^{3/4}( 1-)^{3/8}(1-)^{7/8}N^{3/8}},}{(1-)^{2}(1- )^{6}}\}\]

_and the number of critic iterations satisfies \(K=(^{2}})\), it holds that_

\[V^{}()-_{t=0}^{T-1}V^{f^{(t)}}() +_{approx}}{1-}. \]

In the server-client setting when \(=0\), to reach (26), it suffices to choose \(T=()\) and \(K=(^{2}})\), leading to a total sample complexity of \(KT/(1-)=(^{3}})\) per agent, and \(T=()\) rounds of communication. The sample complexity matches that of (centralized) Q-NPG established in  with a single agent. On the other end, in the fully decentralized setting when \(\) is not close to \(0\), FedNAC requires \((^{7/2}(1-)^{3/2}})\) samples for each agent and \(((1-)^{17/4}(1-)^{3/2}})\) rounds of communication to reach (26), for sufficiently small \(\). Encouragingly, the dependency on the accuracy level \(\) -- the dominating factor -- in the sample complexity matches that of FedNPG given in (19) when assuming access to the generative model, which allows query of arbitrary state-action pairs. In contrast, FedNAC only collects on-policy samples, and therefore is much more challenging to guarantee its convergence.

## 5 Conclusions

This work proposes the first provably efficient federated NPG (FedNPG) methods for solving vanilla and entropy-regularized multi-task RL problems in the fully decentralized setting. The established finite-time global convergence guarantees are almost independent of the size of the state-action space up to some logarithmic factor, and illuminate the impacts of the size and connectivity of the network. Furthermore, the proposed FedNPG methods are provably robust vis-a-vis inexactness of local policy evaluations. Last but not least, we also propose FedNAC, which can be viewed as an extension of FedNPG with function approximation and stochastic policy evaluation, and establish its finite-time sample complexity. Future directions include generalizing the framework of federated policy optimization to allow personalized policy learning in a shared environment.