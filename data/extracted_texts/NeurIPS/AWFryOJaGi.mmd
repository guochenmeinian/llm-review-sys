# Lambda: Learning Matchable Prior For Entity Alignment with Unlabeled Dangling Cases

Hang Yin, Liyao Xiang

Shanghai Jiao Tong University

Shanghai, China

{yinhang_SJTU, xiangliyao08}@sjtu.edu.cn

&Dong Ding

Shanghai Jiao Tong University

Shanghai, China

18916162516@sjtu.edu.cn

&Yuheng He, Yihan Wu, Pengzhi Chu, Xinbing Wang

Shanghai Jiao Tong University

Shanghai, China

{heyuheng, caracalla, pzchu, xwang8}@sjtu.edu.cn

&Chenghu Zhou

Chinese Academy of Sciences

Beijing, China

zhouchsjtu@gmail.com

Corresponding author: Liyao Xiang, xiangliyao08@sjtu.edu.cn.

###### Abstract

We investigate the entity alignment (EA) problem with unlabeled dangling cases, meaning that partial entities have no counterparts in the other knowledge graph (KG), yet these entities are unlabeled. The problem arises when the source and target graphs are of different scales, and it is much cheaper to label the matchable pairs than the dangling entities. To address this challenge, we propose the framework _Lambda_ for dangling detection and entity alignment. Lambda features a GNN-based encoder called KEESA with a spectral contrastive learning loss for EA and a positive-unlabeled learning algorithm called iPULE for dangling detection. Our dangling detection module offers theoretical guarantees of unbiasedness, uniform deviation bounds, and convergence. Experimental results demonstrate that each component contributes to overall performances that are superior to baselines, even when baselines additionally exploit 30% of dangling entities labeled for training.

## 1 Introduction

Entity alignment is a problem that seeks entities referring to the same real-world identity across different knowledge graphs (KGs), and is widely deployed in fields such as knowledge fusion, question-answering, web mining, etc. To address the issue, embedding-based methods have been proposed to capture entity similarity in the embedding space through translation-based  or graph neural network (GNN)-based  models. Particularly, if the entities do not have counterparts on another KG, the entities are referred to as _dangling entities_, as shown in Fig. 1.

In many real-world scenarios, the labels for the dangling entities on KGs are often missing, as those labels are much harder to acquire. For example, in KG plagiarism detection, it is relatively easy to align entity pairs that both exist in KGs, but one would have to traverse all possible pairs to conclude an entity is not paired. Hence _EA with unlabeled dangling entities_ is a hard but realistic problem. The problem even worsens in EA on KGs of different scales where the dangling entities take a large proportion of all nodes.

Despite that many works have been investigating the EA problem with dangling entities, few have focused on EA with unlabeled dangling cases. We list closely related works in Table 1. The work of  extends the conventional EA methods MTransE  and AliNet  to the case with danglingentities, and thus require a portion of labeled dangling entities for training. Based on their works, MHP  has improved performance with additional knowledge, i.e., the high-order proximities information for alignment. Both UED  and SoTead  are unsupervised schemes that rely on side information such as entity name/attribute as global alignment information. Different from prior works, we consider a stricter case where neither side information nor any labeled dangling entities are known, as side information often leads to name-bias  while labels for dangling entities are hard to obtain.

The EA with unlabeled dangling entities faces unique challenges: _first,_ the unlabeled dangling entities would cause erroneous information to propagate through neighborhood aggregation if applying conventional GNN-based embedding methods, negatively affecting the dangling detection and alignment of matchable entities. _Second,_ the absence of labeled dangling entities makes its feature distribution non-observable, requiring the model to distinguish potential dangling entities while learning the representation of matchable entities. Hence the EA problem has to be solved with mere positive (matchable entities with labels) and unlabeled samples, yet without any prior knowledge of the distribution of the nodes.

We tackle the first challenge by proposing a novel GNN-based EA framework. To eliminate the 'pollution' of dangling entities, the adaptive dangling indicator has been applied globally for selective aggregation. Relation projection attention is designed to combine both entity and relation information for a more comprehensive representation. The designed spectral contrastive learning loss disentangles the matchable entities from dangling ones while portraying a unified embedding space for entity alignment.

As to the second challenge, we first derive an unbiased risk estimator and a tighter uniform deviation bound for the positive-unlabeled (PU) learning loss. However, such an estimator still requires prior knowledge of the proportion of positive entities among all nodes. Thus we develop an iterative strategy to estimate such prior knowledge while training the classifier with a PU learning loss. The prior estimation could also be seen as dangling entity detection; if too few entities are determined to be matchable, one can stop all subsequent procedures and decide the two KGs cannot be aligned.

Our framework Lambda is provided in Fig. 2 where there are two phases corresponding to two trained models -- dangling detection and entity alignment. Both phases share one GNN-based encoder and the spectral contrastive learning loss. The dangling detection additionally uses a positive-unlabeled learning loss. The GNN-based encoder contains both the intra-graph and the cross-graph representation learning modules. After the dangling detection, the estimated proportion of matchable entities is figured for judging whether two KGs could be aligned. Only aligned KGs are sent for EA model training, and then only first-phase predicted matchable entity embeddings are obtained from the EA model for inference. Finally, we select pairs of entities that are mutually nearest by their embeddings as aligned pairs.

Highlights of our contributions are as follows: we raise the challenging problem of EA with unlabeled dangling entities for the first time. To resolve the issue, we propose the framework Lambda featured by a GNN-based encoder called KEESA with spectral contrastive learning for EA and a positive-unlabeled learning algorithm for dangling detection called iPULE. We provide a theoretical analysis of PU learning on the unbiasedness, uniform deviation bound, and convergence. Experiments on a variety of real-world datasets have demonstrated our alignment performance is superior to baselines, even the baselines with 30% labeled dangling entities. Our code is available on github2.

   Method & Side Info & Dangling Labels \\ 
 w/ MTransE & ✗ & ✓ \\
 w/ AliNet & ✗ & ✓ \\ UED  & ✓ & ✗ \\ SoTead  & ✓ & ✗ \\ MHP  & ✗ & ✓ + high-order info \\ Our Work & ✗ & ✗ \\   

Table 1: Different EA models with dangling cases.

Figure 1: Examples of dangling entities.

## 2 Preliminaries and Related Work

### Entity Alignment

Embedding-based entity alignment methods have evolved rapidly and are gradually becoming the mainstream approach of EA in recent years due to their flexibility and effectiveness , which aim to encode KGs into low-dimensional embedding space to capture the similarities of entities [18; 10]. It could be divided into translation-based [24; 42; 20] and GNN-based [41; 37; 27; 26; 35].

Previous EA methods mostly assume a one-to-one correspondence between two KGs, but such an assumption does not always hold and thus leads to a performance drop in real-world cases . Notably, Sun _et al._ as a pioneering work modeled it upon a supervised setting, i.e., a small set of aligned entities and labeled dangling entities. On this basis, MHP  employed more dangling information concerning high-order proximities in both training and inference. UED  and SoTead  propose an unsupervised translation-based method for joint entity alignment and dangling entity detection without labeled dangling entities, while the practical problem of matching cost is ignored.

### Positive-Unabled Learning

Let \(X^{d},d,\,\,\,Y\{ 1\}\) be the input and output random variables. We also define \(p(x,y)\) to be the _joint probability density of \((X,Y)\)_, \(p_{}(x)=p(x y=+1)\), \(p_{}(x)=p(x y=-1)\) to be the _P (Positive) and N (Negative) marginals (a.k.a., class-conditional densities)_, and \(p_{}(x)\) be the _U (Unlabeled) marginal_. The _class-prior probability_ is expressed as \(_{p}=p(y=+1)\), which is assumed to be known throughout the paper, and can be estimated from known datasets .

The PU learning problem setting is as follows: the positive and unlabeled data are sampled independently from \(p_{}(x)\) and \(p_{}(x)\) as \(_{}=\{x_{i}^{}\}_{i=1}^{}} p_ {}(x)\) and \(_{}=\{x_{i}^{}\}_{i=1}^{}} p _{}(x)\), and a classifier is trained from \(_{}\) and \(_{}\), in contrast to learning a classifier telling negative samples apart from positive ones. The general assumption of the previous work is to let the unlabeled distribution be equal to the overall data distribution, i.e., \(p_{}(x)=p(x)\) since \(p_{}(x)\) cannot be obtained, but the assumption hardly holds in many real-world scenarios, for example transductive learning, making methods in [13; 30] infeasible.

## 3 Selective Aggregation with Spectral Contrastive Learning

**Notation:** Source and target KG \(G_{s}=(E_{s},R_{s},T_{s})\), \(G_{t}=(E_{t},R_{t},T_{t})\) stored in triples \(<\)entity, relation, entity\(>\): entities \(E\), relations \(R\), and triples \(T E R E\), \(E_{s}=D_{s} M_{s},E_{t}=D_{t} M_{t}\)

Figure 2: The illustration of our framework.

where \(D\) denotes dangling and \(M\) denotes matchable. A set of pre-aligned anchor node pairs are \(S=\{(u,v)|u M_{s},v M_{t},u v\}\). (see appendix A for more details).

We start by introducing the KEESA (**KG** Entity **E**ncoder with **S**elective **A**ggregation).

### KG Entity Encoder with Selective Aggregation

**Adaptive Dangling Indicator & Relation Projection Attention.** Real-world EA tasks often involve graphs with dangling distortion . Conventional GNN aggregation will 'pollute' matchable entities' embeddings with dangling. However, a hard dangling indicator for the entity is over-confident as only approximate results can be obtained without labels. Incorrect indicators may lead to inappropriate aggregation and thus destruction of the KG structure. Instead, we apply a learnable scalar weight \(r_{e_{j}}\) for each \(e_{i}\)'s neighboring message:

\[_{e_{i}}^{l+1}=(_{e_{j}_{e_{i}}\{e_{i} \}}})}_{}_{i,j}W^{l+1}_{e_{j}}^{l} ),\] (1)

where \(\) serves to normalize \(r_{e_{j}}\) to the range of \([-1,1]\). The initialization of \(r_{e_{j}}\) is critical, please see the implementation details for more.

As compressed feature of \(e_{j} r_{e_{j}}\) is a plain scalar, we link relation \(r_{k}\)'s embedding \(_{r_{k}}\) to the associated entity \(e_{j}\) by \(_{r_{k}}^{ e_{j}}\) for capturing more comprehensive attention. A matrix \(W_{r}^{d d}\) with an orthogonal regularizer \(L_{o}\) is applied to \(_{r_{k}}\) to perform projection while preserving its norm for better convergence:

\[_{r_{k}}^{ e_{j}}=r_{e_{j}}W_{r}_{r_{k}} L _{o}=\|W_{r}^{}W_{r}-I_{d d}\|_{2}^{2}.\]

The attention coefficient is obtained by the following equation, where \(^{}\) is the attention vector:

\[_{ijk}^{l}=^{}_{r_{k}}^{ e_{j}})}{_{e _{m}_{e_{i}},<e_{i},r_{n},e_{m}>_{s} T_{t}} (^{}_{r_{n}}^{ e_{m}})}\] (2)

**Intra- & Cross-Graph Representation Learning.** Based on the above, we can express the embedding of \(e_{i}\) at the \((l+1)\)-th layer \(_{e_{i}}^{l+1}\) as Eq. 1, where \(W^{l+1}\) is specified as \(W^{l+1}=I_{d d}-2_{r_{k}}_{r_{k}}^{}\) by the triplet \(<e_{i},r_{k},e_{j}>\) inclusive relation embedding \(_{r_{k}}\). We adopt the \(()\) as the activation function. The Householder transformation \(W^{l+1}\) is applied on the last layer embedding \(_{e_{i}}^{l}\) to restore the useful relative positions of KG entities at each layer recursively.

Overall, the _intra-graph representation_\(_{e_{i}}\) of \(e_{i}\) is obtained by concatenating embeddings from all layers. Its _cross-graph representation_\(_{e_{i}}^{proxy}\) can be described by \(_{e_{i}}\) and proxy \(_{j}\), where the latter is generated by _Proxy Matching Attention Layer_ to align the embeddings across two graphs. With \(S_{p}\) representing the set of proxy vectors, and \(()\) denoting the cosine similarity, we have:

\[_{e_{i}}=[_{e_{i}}^{0}\|_{e_{i}}^{1}\|...\|_{e_{i}}^{ l}]_{e_{i}}^{proxy}=_{_{j} S_{p}}(_{e_{i}},_{j}))}{_{_{k} S_{p}}((_{e_{i}},_{k}))}(_{e_{i}}-_{j}).\]

Finally, we employ a gating mechanism  to integrate both intra-graph representation \(_{e_{i}}\) and cross-graph representation \(_{e_{i}}^{proxy}\) into \(_{e_{i}}^{f}\):

\[_{e_{i}}=(_{g}_{e_{i}}^{proxy}+), _{e_{i}}^{f}=[(_{e_{i}}_{e_{i}}+(1-_{e_{i}})_{e_{i}}^{proxy})||r_{e_{i}}],\]

where \(_{g}\) and \(\) are the gate weight and gate bias, respectively. The learnable weight of \(e_{i}\) is also attached to the embedding. It is worth noticing that for each entity on either \(G_{s}\) or \(G_{t}\), they are encoded by one shared KEESA with below spectral contrastive learning for a unified representation space.

### Spectral Contrastive Learning

In this part, we propose the spectral contrastive learning loss \(_{}\) with high-quality negative sample mining, which serves both tasks (entity alignment and dangling detection) at the same time.

Specifically, given a pre-aligned matchable entity \(e_{i}_{p}\), let there be a paired positive sample entity \(e^{i}_{+}_{p}\), such that \((e_{i},e^{i}_{+}) S\), and \(N\) sampled entity \(\{e^{i}_{j}\}^{N}\) as negative samples \((e_{i},e^{i}_{j}) S\). The spectral contrastive learning loss is one specific form of alignment loss \(H()\):

\[_{}=_{e_{i}_{p}} [1+_{j}^{N}(\;H(e_{i},e^{i}_{+},e^{i}_{j}))].\] (3)

**Unified Representation for Entity Alignment.** We expect a unified feature space where the distance between aligned anchor node pairs is as close as possible, while the unaligned is on the contrary. To satisfy this intuition, we introduce an alignment loss:

\[H(e_{i},e^{i}_{+},e^{i}_{j})=[(e_{i},e^{i}_{j})-(e_{i},e^{ i}_{+})+]_{+},\] (4)

where \([x]_{+}\) represents \((0,x)\) and \(()\) indicates \(L_{2}\)-norm distance between the embeddings. A soft margin \(\) is involved to discourage trivial solutions, e.g., \((e_{i},e^{i}_{j})=(e_{i},e^{i}_{+})=0\).

**Discrimination for Dangling Detection.** For our proposed dangling detection, the vital task is to discriminate the dangling from the matchable ones with unlabeled dangling entities. Hence unsupervised method of spectral clustering is exploited to separate two types of entities. We design the loss function according to Lemma 1 to achieve its equivalent effect.

**Lemma 1**.: _Given one positive sample \(p^{+}\) for \(q\), and \(N\) negative samples \(\{p^{-}_{j}\}^{N}\) (node set: \(\{q,p^{+}\}\{p^{-}_{j}\}^{N}\)), employing the following loss function is equivalent to conducting spectral clustering on similarity graph \(\) with the temperature hyper-parameter \(\):_

\[(q,p^{+},\{p^{-}\}^{N})=-(q,p^ {+}))}{(\;(q,p^{+}))+_{j}^{N}(\;(q,p^{-}_{j}))}.\] (5)

The equivalence has been discussed in previous studies [40; 1; 6; 32]. Regarding our proposed problem, the positive samples are the corresponding pairs whereas the negative samples are those sampled unaligned pairs. The equivalence is derived as follows:

\[(q,p^{+},\{p^{-}\}^{N}) =(q,p^{+}))+_{j}^{N}( (q,p^{-}_{j}))}{(\;(q,p^{+}))}\] \[=[1+^{N}(\;(q,p^{-}_{j}))} {(\;(q,p^{+}))}]\] \[=[1+_{j}^{N}(\;(q,p^{-}_{j})- \;(q,p^{+}))].\]

The spectral contrastive learning loss could be obtained by replacing the exponent term with Eq. 4.

**Remark.** In the alignment loss function, we observe that dangling entities are only in the negative samples, and the entities in the positive samples are all matchable. Such a stark asymmetry provides an advantage in distinguishing between dangling and matchable entities.

We also prove that \(_{}\) (Eq. 3) can promote model learning by Lemma 2 (see appendix B for proof).

**Lemma 2**.: _The loss \(_{}\) can mine high-quality negative samples, which we show has an equivalent effect to truncated uniform negative sampling (TUNS) in ._

Minimizing the spectral contrastive loss of Eq. (3) maps matchable and dangling entities into a unified but distinguishable feature space for improved entity alignment while facilitating dangling detection. In practice, we adopt the loss normalization trick  on \(H()\) to speed up training.

## 4 Iterative Positive-Unlabeled Learning for Dangling Detection

We expect to avoid any additional computational overhead for EA if few entities are matchable for the source and target KG. Thus, we address a more challenging problem in EA: given partial pre-alignedmatchable entities as positive samples (i.e., \(_{p}\)), how to jointly predict the proportion of matchable entities in the unlabeled nodes (i.e., \(^{}_{}\)) and identify those entities? If \(^{}_{}\) could be predicted, it could serve as an indicator whether we should proceed to EA. We propose to address the problem by PU learning.

**Unbiased Risk Estimator.** First, we propose a new unbiased estimation for PU learning without any constraint (i.e., \(p_{}(x)=p(x)\) in ) on unlabeled samples distribution \(p_{}(x)\) concerning the overall distribution \(p(x)\). Assuming that \(_{}\) and \(^{}_{}\) are known (estimation strategy would be given later), we have:

**Theorem 1**.: _Suppose that \(g:^{d}\) is a binary classifier, and \(:\{ 1\}\) is the loss function by which \((t,y)\) means the loss incurred by predicting an output \(t\) when the ground truth is \(y\). \(_{}(g)\) is the **unbiased risk estimator** of \(R(g)\):_

\[_{}(g)=_{}^{+}_{}(g)+}}{^{}_{}}[^{-}_{}(g)-^{}_{}^{-}_{}(g)],\] (6)

_where \(_{}=p(y=-1)\) and \(^{}_{}=p_{}(y=-1)\) are estimable class priors given \(_{}\) and \(^{}_{}\), \(R^{+}_{}(g)=_{X p_{}(x)}[(g(X),+1)]\) and \(R^{-}_{n}(g)=_{X p_{}(x)}[(g(X),-1)]\) (see appendix C for proof)._

By our proof, \(_{}(g)\) is an unbiased risk bound for the PU learning. More importantly, the bound provided by Thm. 2 is a tighter uniform deviation bound than the classic _Non-negative Risk Estimator_:

**Theorem 2**.: _Let \((R)\) denote the uniform deviation bound of risk estimator \(R\), and Non-negative Risk Estimator be \(}_{}(g)\), then: \((_{}(g))<(}_{}(g))\)(see appendix D for proof)._

**Positive Unlabeled Loss Function.** Since it is evident that all negative samples exist in unlabeled data, we have \(}}{^{}_{}}<1\) and thus we apply a hyper-parameter \(=}_{}}{_{}}\) to scale \(_{}^{+}_{}(g)\) equivalently and \(()\) to restrict the estimated \(_{}R^{-}_{}(g) 0\). The PU learning loss function is formulated as:

\[_{}=_{}^{+}_{}(g)+ \{0,^{-}_{}(g)-^{}_{}^{ -}_{}(g)\},\]

We specify the corresponding risk function using cross-entropy losses as below:

\[^{+}_{}(g)=_{p}|}_{e_{i} _{p}}_{i}(+1),^{-}_{}(g)=_{u}|}_{e_{i}_{u}}_{i}(-1), ^{-}_{}(g)=_{p}|}_{e_{i}_{p}} _{i}(-1)\]

where the output logit for \(e_{i} E_{s} E_{t}\), being labeled as a state \(u\{+1,-1\}\), is \(_{i}(u)=softmax((h^{f}_{e_{i}}))\), based on KEESA output \(h^{f}_{e_{i}}\). Hence each term in the final loss can be calculated or estimated without the negative labels.

**Iterative PU Learning with Prior Estimator** How could we estimate prior \(_{}\) and \(^{}_{}\)? Inspired by , we introduce a hidden variable in the model as well as an iterative approach. We adopt a variational approximation strategy and a warm-up phase to tackle the cold start problem, as shown in Alg. 1. First, we estimate and fix the class prior \(_{}\) and \(^{}_{}\) by the ratio of the anchor points in the training set. \(_{}\) is optimized together with \(_{}\) for a discriminative embedding space in the warm-up phase. Finally, we minimize \(_{}\) to update the class prior and the model parameters alternately till convergence.

The convergence guarantee is provided in Thm. 3, which mostly follows the convergence of EM algorithm. We collect the proof in appendix E.

**Theorem 3**.: _Given the assumptions of marginalization in Eq. 16 and Eq. 17, the objective function of \(-_{}\) is the same as the expectation function Q of Eq. 13 where the loss function is the cross entropy function \(CE(_{i},_{i})=-_{i}(+1)_{i}(+1)-_{i}(-1) _{i}(-1)\) on the **preference condition**: \(_{j}|}_{i}(+1)}{_{j}(-1)}_{i}|}_{i}(+1)}{_{i}(-1)}\)._

The iterative process of our method is a special case of the EM algorithm. We hold the same assumptions as the EM algorithm and we further assume the training of \(f\) is able to find the globally optimal \(\). Although the assumptions seem to be too strict, the algorithm typically converges in practice as we verified in the experimental section.

```
0:\(G_{s}\) and \(G_{t}\) are treated as one input graph \(G=(,)\), positive-node set \(=_{p}\), unlabeled-node set \(=_{u}\), classifier \(f\) with initial parameters \(_{0}\), KESA \((G,)\) with initial parameters \(_{0}\) and warm-up epoch \(N\). \(\) represents training loss.
0: Model parameters \(,\) and estimated prior \(_{}\) and \(_{}^{}\)
1:\(l\), \(_{}^{}_{}|}{||+||}\), \(i 0\), \(=_{0}\); //Initial value
2:\(_{}+(1-) _{}\); //Loss of warm-up
3:repeat
4:\((G,)\); //Entity embedding matrix \(\)
5:\(,*{arg\,min}_{,}( ;,,,)\); //Optimize \(()\) and \(f\) jointly
6:\(l(;,,,)\);
7:until N epochs is over //Warm-up phase to solve cold start
8:\(_{}\);
9:repeat
10:\((G,)\), \(_{i} f(,i;)\) for all \(i\);
11:\(_{}^{}||^{-1}_{i }[_{i}(+1)>0.5]\), \(_{}|+|| _{}^{}}{||+||}\); //E step
12:\(l^{} l\), \(l(;,,,)\);
13:\(,*{arg\,max}_{,}-( ;,,,)\); //M step
14:until\(|l^{}-l|\) converge OR \(_{}\) converge
15:return ```

**Algorithm 1** iPULE (iterative **PU Learning with Prior Estimator**)

## 5 Experiments

Our method is evaluated on datasets GA16K, DBP2.0, and GA-DBP15K. DBP2.0 and GA-DBP15K are used for the verification of iPULE. To address incomparability caused by inconsistent metrics, we adopt the GA16K dataset to enable compromised comparison of the Dangling-Entities-Unaware EA method. We further compare our method with dangling aware baselines on DBP2.0. _Statistics of experimental dataset_ in appendix F, and _additional experiment_ in appendix G.

**Datasets.** The training/test sets for each dataset are generated using a fixed random seed. For entity alignment, 30% of matchable entity pairs constitute the training set, while the remaining form the test set. For dangling entity detection, we did not utilize any labeled dangling entity data, in contrast to prior work which labels an extra 30% of the dangling entities for training [33; 19].

**Baselines.** Since our work does not take advantage of any side information, we emphasize its comparison with the previous methods purely depending on graph structures. These works majorly incorporate two types:

_Dangling-Entities-Unaware._ We include advanced entity alignment methods in recent years: GCN-Align , RSNs , MuGNN , KECG . Methods with bootstrapping to generate semi-supervised structure data are also adopted: BootEA , TransEdge , MRAEA , AliNet , and Dual-AMN .

_Dangling-Entities-Aware._ To the best of our knowledge, the method of  is the most fairly comparable baseline which is based on MTransE  and AliNet . Because MHP  over-emphasized more use of labeled dangling data like high-order similarity information which is also based on the above two methods, while SoTead  and UED  utilize additional side-information. SoTead  and UED  can only execute the degraded version on DBP2.0 cause no side-information is available on that. We exclude them from baselines for our methods.  introduces three techniques to address the dangling entity issue: nearest neighbor (NN) classification, marginal ranking (MR), and background ranking (BR).

**Implementation Detail.** We use the Keras framework for developing our approach. Our experiments are conducted on a workstation with an NVIDIA Tesla A100 GPU, and 80GB memory.

By default, the embedding dimension is set to 128 with the depth of GNN set to 2 and a dropout rate of 0.3. A total of 64 proxy vectors are used and margin \(\) = 1. RMSprop optimizer is adopted with a learning rate of 0.005 and batch size of 5120. \(\) is set to be 30. \(\) is set as 1e-3 for all datasets. CSLS  is adopted as the distance metric for alignment. As we found, the \(\) function changes rapidly in the region close to \(0\) but stays stable in the region beyond \([-3,3]\). Hence we initialize the \(r_{e_{j}}\) to \(1\) to prevent gradients oscillation or near-zero gradients.

### Experiments of iPULE Convergence and Class Prior Estimation

DBP2.0 \(_{}\) between 20%-50% contains more entities to be aligned, trained by pre-aligned 9%-15% nodes then judged by iPULE as aligned KGs. GA-DBP15K \(_{}\) between 10%-25% are treated as unaligned KGs ignoring the pre-aligned part, trained by all pre-aligned 10%-25% nodes. We get accurate estimation and convergence results as shown in Fig. 3. As iPULE progresses, the estimated class prior gradually approaches the true value as the first row for GA-DBP15K and the second for DBP2.0. \(_{}^{u}=0\) for GA-DBP15K while DBP2.0's are given by red dotted line respectively. The \(_{}\) for GA-DBP15K is stably consistent as pre-aligned proportion due to accurate estimation of its \(_{}^{u}\). As common in PU learning , iPULE treats more nodes as positive when \(_{} 50\%\) in FR-EN.

### Experiments Unaware of Dangling Entities

We show the experiments on baselines without considering dangling entities in this section.

**Dangling-Entities-Unaware Baselines Comparison.** The direct comparison between our method and the dangling-entities-unaware baselines is unavailable due to inconsistent metrics used. Hence, we adopt the GA16K dataset as a compromise and do not remove any detected dangling entities for entity alignment. Thus the ranking list \(S\) in Hits@K only contains (matchable) entities in the source graph since GA16K only contains dangling entities in the target KG. In Tab. 2, Dual-AMN demonstrates a competitive performance but is inferior to ours at Hits@1. MRAEA performs similarly to Dual-AMN since the latter is built on the former. TransEdge performs poorly since the method adopts semi-supervised bootstrapping to mine anchor entities iteratively. The presence of dangling entities could lead to false anchors and spread of error. Meanwhile, it is also a relation-centric approach that suffers from insufficient relation information on GA16K. Other baselines exhibit up-to-par performance but our method delivers consistently superior or state-of-the-art Hits@Ks.

### Experiments Aware of Dangling Entities

We provide a comparison of dangling detection and entity alignment with baselines aware of dangling.

**Dangling Entities Detection Performance.** We test our method's dangling detection performance compared with baselines aware of dangling entities. The results on DBP2.0 in the consolidated setting are reported in Tab. 12. Note that the comparison is unfair as we don't use \(30\%\) of the labeled

Figure 3: Prior estimation GA-DBP15K and DBP2.0. (loss convergence in appendix F).

dangling entities as the baselines. Nevertheless, our approach maintains SOTA performance across all six datasets, excelling in almost every metric except for a slightly inferior precision.

**Dangling-Entities-Aware Baselines Comparison.** Tab. 4 reports the entity alignment performance comparison in the consolidated setting on DBP2.0. The precision, recall, and F1 scores are computed according to Eq. (19), (20), (21) in **Metric** part of appendix F, respectively. We test the entity alignment performance of our method in comparison with baselines that are aware of dangling entities. Our method still maintains almost state-of-the-art performance, but there is still a slightly inferior precision problem. It makes us wonder about the reasons behind it.

**How does our method work?** To understand why our method works and its precision slightly suffers, we visualized all entity embeddings of GA16K in Fig. 4. As shown above, matchable entities are denoted as red and green in source and target KG respectively, while dangling as blue. The distribution of three types of entity in Fig. 4(a) suggests our method maps all nodes into a unified embedding space where matchable entities exhibit considerable overlap and are appropriately aligned (shown in Fig. 4(b)). Fig. 4(c)(d) depicts that a part of the dangling entities is intertwined with the matchable ones, suggesting that this part resides at the decision boundary and easily leads to false positives which explain the lesser precision of our method.

    &  &  &  &  &  &  \\   & Prec. & Rec. & F1 & Prec. & Rec. & F1 & Prec. & Rec. & F1 & Prec. & Rec. & F1 & Prec. & Rec. & F1 \\    } & NNC &.121 &.193 &.149 &.085 &.138 &.105 &.113 &.146 &.127 &.067 &.208 &.101 &.126 &.148 &.136 &.086 &.161 &.112 \\  & MR &.207 &.299 &.245 &.159 &.320 &.213 &.231 &.321 &.269 &.178 &.340 &.234 &.195 &.190 &.193 &.160 &.200 &.178 \\  & BR &.203 &.286 &.238 &.155 &.308 &.207 &.223 &.306 &.258 &.170 &.321 &.222 &.183 &.181 &.182 &.164 &.200 &.180 \\    & NNC &.164 &.215 &.186 &.118 &.207 &.150 &.180 &.238 &.205 &.101 &.167 &.125 &.185 &.189 &.187 &.135 &.140 &.138 \\  & MR &.302 &.349 &.324 &.231 &.362 &.282 &.313 &.367 &.338 &.227 &.366 &.280 &.260 &.220 &.228 &.213 &.224 &.218 \\  & BR & **.312** &.362 &.335 & **.241** &.376 &.294 &.314 &.363 &.336 & **.251** &.358 &.295 & **.265** &.208 &.233 & **.231** &.213 &.222 \\   & Ours &.279 & **.447** & **.344** & **.219** & **.489** & **.303** & **.324** & **.409** & **.362** &.234 & **.460** & **.310** &.234 & **.320** & **.271** & **.192** & **.363** & **.251** \\   

Table 4: Entity alignment results on DBP2.0 in the consolidated setting.

Figure 4: Visualization of entity representations Table 2: Performance comparison with dangling-learned by our method on GA16K dataset.

    & \)} \\  & & H@1 & H@10 & H@50 \\  BootEA & 13.95 & 37.25 & 49.08 \\ TransEdge & 0.03 & 0.12 & 0.14 \\ MRAEA & 63.97 & 76.64 & 81.06 \\ GCN-Align & 29.48 & 45.64 & 57.15 \\ RSNs & 9.40 & 42.70 & 46.70 \\ MuGNN & 62.17 & 76.25 & 80.87 \\ KECG & 44.18 & 57.73 & 63.41 \\ AliNet & 48.53 & 67.72 & 74.50 \\ Dual-AMN & 64.49 & **80.55** & **84.67** \\ Ours & **67.59** & 80.33 & 84.35 \\   

Table 3: Dangling detection results on DBP2.0 in the consolidated setting.

### Ablation Studies and Varying Anchor Nodes

We conduct ablation studies to show each module's impact, and similarly pre-aligned entities' impact.

**Ablation Studies** The impact of adaptive dangling indicator and relation projection attention in our method are investigated. We denote the counterpart removing \(r_{e_{i}}\) as \(w/o\ r_{e_{i}}\), and replacing \(_{r_{k}}^{ e_{j}}\) with the original \(_{r_{k}}\) as \(w/o\ _{r_{k}}^{ e_{j}}\). Fig. 5 gives the ablation study results on DBP2.0, where 'Ours' represents an all-inclusive model. We observe that the \(_{r_{k}}^{ e_{j}}\) has a more substantial impact than \(r_{e_{i}}\) to the alignment performance. As to why the \(r_{e_{i}}\) has a minor impact on the alignment, we consider it may be attributed to the lower degrees of dangling entities on DBP2.0. The degrees of dangling entities are generally lower than that of matchable ones, indicating that the dangling is more isolated in the graph and thus has less impact on matchable nodes in the neighborhood aggregation.

**Varying Anchor Nodes.** Pre-aligned entities may be far scarce in reality. The sensitivity of our method to the proportion variation of anchor nodes is investigated. As the proportion increases, the alignment performance enhances as provided in Fig. 6.

Notably, even with an anchor ratio as low as 5%, our alignment accuracy still well exceeds 30% on most datasets except for FR-EN and EN-FR. Cause they contain twice as many entities and triples as ZH-EN and JA-EN, which introduces intricate dependencies among entities and thus greater challenges in alignment. Moreover, a larger graph may require a higher dimension of representations to learn, but the embedding dimension is restricted to merely 96 due to the out-of-memory problem.

## 6 Conclusion

We found that previous EA methods suffer from great performance decline if dangling entities are considered. Our goal is to address the EA problem with unlabeled dangling entities. A novel framework Lambda for detecting dangling entities and then pairing alignment is proposed. The core idea is to perform selective aggregation with spectral contrastive learning and to adopt theoretically guaranteed PU learning to relieve the dependence on the labeled dangling entities. Experimental results on multiple representative datasets demonstrate the effectiveness of our proposed approach. This work also has important implications for real-world applications, such as EA of different scales, KG plagiarism detection, etc.

Figure 5: The ablation study of entity alignment performance in the consolidated setting on DBP2.0.

Figure 6: The entity alignment performance on varying pre-aligned anchor nodes ratios on DBP2.0.