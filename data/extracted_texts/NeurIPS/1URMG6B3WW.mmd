# KrwEmd: Revising the Imperfect Recall Abstraction from Forgetting Everything

Anonymous Author(s)

Affiliation

Address

email

###### Abstract

A recent research has shown that an extreme interpretation of imperfect recall abstraction - completely forgetting all past information - has led to excessive abstraction issues. Currently, there are no hand abstraction algorithms that effectively integrate historical information. This paper aims to develop the first such algorithm. Initially, we introduce the KRWI abstraction for Texas Hold'em-style games, which categorizes hands based on K-recall winrate features that incorporate historical information. Statistical results indicate that, in terms of the number of distinct infosets identified, KRWI significantly outperforms POI, an abstraction that identifies the most abstracted infosets that forget all historical information. Following this, we introduce the KrwEmd algorithm, the first hand abstraction algorithm to effectively use historical information by combining K-recall win rate features and earth mover's distance for hand classification. Experimental studies conducted in the Numeral211 Hold'em environment show that under identical abstracted infoset sizes, KrwEmd not only surpasses POI but also outperforms state-of-the-art hand abstraction algorithms such as Ehs and PaEmd. These findings suggest that incorporating historical information can significantly enhance the performance of hand abstraction algorithms, positioning KrwEmd as a promising approach for advancing strategic computation in large-scale adversarial games.

## 1 Introduction

Imperfect recall abstraction has proven to be very important for solving large-scale computational games, significantly reducing computational complexity. Recently, AI using imperfect recall abstraction has developed better-than-human strategies for Texas Hold'em testbed--even when using limited computational resources [23; 7; 8].

The task of hand abstraction in Texas Hold'em aims to reduce computational overhead by applying the same strategy to similar hands. In an imperfect recall setting [29; 20], the hand abstraction in the later phase does not strict depend on the results of the hand abstraction in the earlier phase. However, the term **imperfect recall** is often interpreted in an extreme manner in practice. Researchers typically understand it as completely forgetting all past information--in other words, considering only future information--and design abstraction algorithms based on this understanding [16; 17; 19; 15; 14]. There are two major factors that mainly affect the results of abstraction for each phase: the number of clustering centers (i.e. centroids), which can be set man

Figure 1: In a 4-phase game hand abstraction task, the current goal is to classify hands A and B.

ually, and the number of distinct features that are used to categorize hands at each phase. Recent research  has found that constructing hand features solely based on future information can lead to excessive abstraction. For example, as shown in the Figure 1, two hands: A and B constructed with only future information can have the same hand features. As the game progresses, the rate of feature repetition among different hands gradually increases, while the distribution of distinct hand features assumes a spindle-shaped pattern. Additionally, constructing hand features with historical information in addition to the future may differentiate two hands sharing the same future information and hence makes more features available for clustering as well as enhances the performance of hand abstraction.

However, there still remain two unsolved issues. First, Fu et al.  have introduced a K-recall outcome feature, which incorporates historical information. This feature can only identify if elements are identical or not, but it lacks the capability to discern the extent of differences between features. Therefore, it is difficult to adjust the number of clusters appropriately, which makes it challenging to construct an effective hand abstraction algorithm that integrates historical information. Second, due to the inability to modify the number of clusters, Fu et al.  only compared the performance between the maximum clusters cases of integration of historical information (KROI) and no integration at all (POI). In this condition, although KROI significantly outperforms POI, the comparison is inconclusive because KROI recognizes more abstracted infosets than POI. Thus, it does not prove that the performance of abstraction algorithms that integrate historical information is necessarily superior under the condition of having the same number of abstracted infosets.

This paper introduces a framework for constructing hand features based on winrates, with the K-recall winrate feature being the most crucial one. Based on this, we developed the K-recall winrate isomorphism (KRWI), an abstraction that integrates historical information. Across the same game phases, KRWI identifies slightly fewer hand features than KROI but significantly more than POI. Importantly, the K-recall winrate feature is capable of discerning the extent of differences between features. Therefore, by combining the earth mover's distance with the K-recall winrate feature, we developed the first hand abstraction algorithm that integrates historical information, named KrwEmd, and designed an efficient computational method. We validated our approach in the Numeral211 game environment, where KrwEmd demonstrated superior performance to POI under the same infosets conditions. Additionally, in clustering settings, KrwEmd also outperformed the Ehs and PaEmd algorithms, with PaEmd being the current state-of-the-art hand abstraction algorithm.

## 2 Background and Notation

Generally, Texas Hold'em-style poker games are modeled as imperfect information games. However, for the task of hand abstraction, games with ordered signals [18; 12] offer a better theoretical tool. The game with ordered signals is a subclass of imperfect information games in that they further subdivide the nodes (also called histories, states, or trajectories) in imperfect information games into mutually independent signals and public nodes. This allows for each aspect to be studied in isolation. Under this framework, the hand abstraction task in Texas Hold'em-style games is modeled as signal abstraction.

In a game with ordered signals \(=},,,,,,,,,,O,, ,\), there is a set of players \(}=\{c,pub\}\), which includes not only the main participants \(=\{1,,N\}\) but also a special nature player \(c\) who controls the randomness and an observer player \(pub\) who can see everything but doesn't take any actions. The game progresses through a series of public nodes \(=\). Some of these public nodes are terminal public nodes \(\) where the game ends and outcomes are determined, while the others are non-terminal public nodes \(\). Among the non-terminal public nodes, some are where players make decisions within the action space \(\), and the remaining are chance public nodes where the nature player reveals signals, with the special action \(Reveal\) within \(\).

At every non-terminal public node, \(:c\) (i.e., \(\{c\}\)) specifies which player is responsible for making an action, and \(: 2^{}\) confines the possible actions they can take. When the nature player makes a move, it reveals signals \(\) that carry information relevant to the game. These signals are then observed by all players except \(c\), \(O()=(O_{1}(),,O_{N}(),O_{pub}())\), though what they can see might differ.

The progression from one public node to another is clearly defined \(:\), ensuring that the game's structure is sequential and predictable. Similarly, the signals are revealed according to a probability distribution \(:()\), which specifies the likelihood of the next signal given the current one. We use \(^{}\) to indicate that \(\) is a predecessor of \(^{}\), and \(^{}\) to indicate that \(\) is a predecessor of \(^{}\). Each phase of the game is the number of times nature player has revealed signals, denoted by \(:^{+}\). \(=\{()\}\) represents the phases that a game with ordered signals may go through. Since the root is a chance public node, we have \(=1\).

At the end of the game, players receive their payoffs based on the signals and the terminal public node, represented by \(=(_{1},,_{N})\), where \(_{i}:\). Additionally, each player's survival status is determined at these terminal public nodes, denoted by \(=(_{1},,_{N})\), where \(_{i}:\{true,false\}\). The signals possess a partial order within their subset, terminal signals \(\), indicated by \(:\{true,false\}\). It is required that for any terminal signal \(\) and terminal public nodes \(\{^{}_{i}(^{} )=_{j}(^{})=true\}\), if \((,i,j)=true\), then \(_{i}(,)_{j}(,)\).

Players make decisions based on their observations of signals and the current non-terminal public node. A player may have the same observation for different signals, forming a signal infoset for signals they cannot distinguish. For a player \(i\), the signal infoset for a signal \(\) is denoted as \(_{i}()=\{^{} O_{i}()=O_{i}( ^{}) O_{pub}()=O_{pub}(^{})\}\). Specifically, for the nature player, \(_{c}()=\{^{} O_{pub}(^{})= O_{pub}()\}\). We abuse the notation \(_{i}\) to represent a signal infoset, where for any player \(i\), \(_{i}\) is a partition of \(\), representing the collection of player \(i\)'s signal infosets. \(_{i}^{(1)},,_{i}^{(||)}\) are the collections of player \(i\)'s signal infosets for each phase, and they form a partition of \(_{i}\). In games with ordered signals, the signals describe all private information. The signal infoset, combined with public nodes, can be transformed into the infoset of an imperfect information game. Fu et al.  detailed this transformation process.

The game with ordered signals model allows us to study the issue of signal abstraction independently. For this purpose, we introduce a signal (infoset) abstraction profile, \(=(_{1},,_{N})\), where for each player \(i\), \(_{i}\) is a partition of \(\) called the signal (infoset) abstraction. Any \(_{i}\) then is said to be an abstracted signal infoset for player \(i\), and it can be further divided into several signal infosets within \(_{i}\). These finer signal infosets collectively form a partition of \(\). In general, two signal abstractions cannot be directly compared in terms of performance, but in a few specific cases there does exist a special relationship between them, which is called refinement. Consider two abstractions \(_{i}\) and \(_{i}\). If \(_{i}\), there exists one or more abstracted signal infosets in \(_{i}\) such that the union of these forms a partition of \(\), then we said that \(_{i}\) refines \(_{i}\), symbolically \(_{i}_{i}\). The signal abstracted game \(^{}\) was derived by substituting \(_{i}\) with \(_{i}\) across all \(\).

Perfect/imperfect recall originally describes a property of imperfect information games, indicating that players do not need to remember all the information they have observed throughout the game. Since games with ordered signals are a subset of imperfect information games, we derived the concept of signal perfect/imperfect recall from them. A player \(i\) in a game \(\) is said to have signal perfect recall if, for any \(_{1}^{},_{2}^{}^{}\), any predecessor \(_{1}\) of \(_{1}^{}\) has a corresponding predecessor \(_{2}\) of \(_{2}^{}\) such that \(_{2}(_{1})\). If all players have signal perfect recall, the game \(\) is said to have signal perfect recall. For a game \(\) with signal perfect recall, if \(_{i}\) is the signal abstraction of player \(i\), let \((_{i},_{-i})\) denote the signal abstraction profile where player \(i\) adopts the signal abstraction \(_{i}\) while other players do not do abstraction. If \(^{(_{i},_{-i})}\) retains signal perfect recall, then \(_{i}\) is considered a signal abstraction with perfect recall; otherwise, it is an signal abstraction with imperfect recall.

In games with ordered signals, the strategy \(_{i}\) for player \(i\) maps from a non-terminal public node and a signal infoset to a probability distribution over actions, with the strategy profile denoted as \(=(_{1},,_{N})\). When all players adopt the strategy profile \(\), the expected sum of future rewards, also known as expected value, for player \(i\) at public node \(\) and signal \(\) is denoted as \(v_{i}^{}(,)\), and the expected value for the entire game is denoted as \(v_{i}()\). A Nash equilibrium is a strategy profile where no player can obtain a higher expected value by changing their strategy. Formally, \(^{*}\) is a Nash equilibrium if for every player \(i\), \(v_{i}(^{*})=_{_{i}}v_{i}(_{i},_{-i}^{*})\), where \(_{-i}\) denotes the strategies of all players except \(i\). In two-player zero-sum scenarios, the exploitability of \(\) is denoted as \(()=^{}}v_{i}(_{1}^{},_{2})+_ {_{2}^{}}v_{i}(_{1},_{2}^{})}{2}\).

Related Work

Our research focuses on hand abstraction techniques in AI systems for Texas Hold'em-style games (i.e. the signal abstraction in games with ordered signals), building on the initial works of Shi and Littman  and Billings et al. . These seminal works introduced the concept of game abstraction, which aims to simplify games while preserving essential characteristics. The researchers started by manually forming hand buckets as a result of their expertise with game-playing strategy. The first automated hand abstraction was that of Gilpin and Sandholm . Later, a model of games with ordered signals was given for Texas Hold'em by Gilpin and Sandholm ; lossless isomorphism (LI) was developed with signal rotation. Despite the elegance of LI, its low compression rates hinder its application in large-scale games, whereas lossy abstraction shows potential for such application. An expectation-based clustering method was proposed by Gilpin and Sandholm  in their work, and a histogram-based clustering method was introduced by Gilpin et al. . The former is known as Ehs, while the latter is referred to as the potential-aware method. Subsequent studies by Gilpin and Sandholm  and Johanson et al.  compared Ehs and potential-aware methods, concluding that the latter holds an advantage in large-scale games. Johanson et al.  also introduced the use of earth mover's distance1 (EMD) in potential-aware methods. Ganzfried and Sandholm  introduced a more efficient approximation algorithm for earth mover's distance in potential-aware methods (PaEmd). Brown et al.  further applied PaEmd to distributed environments for solving large-scale imperfect-information games. This paradigm has found success in Texas Hold'em AI systems and is considered state-of-the-art in hand abstraction. Very recently, Fu et al.  proposed several novel tools, such as abstraction resolution and common refinement. They introduced two signal abstraction: one is the potential outcome isomorphism (POI), which identifies the maximum number of abstracted signal infosets considering future information only; The other is the K-recall outcome isomorphism (KROI), which identifies the maximum number of abstracted signal infosets considering historical information. They emphasized that current imperfect recall signal abstraction algorithms, which consider only future information, are prone to excessive abstraction. However, they did not provide practical signal abstraction algorithms.

Other abstraction techniques for decision-making problems include action abstraction  and general imperfect recall abstraction  in extensive-form games, as well as state abstraction and action abstraction in reinforcement learning .

## 4 Winrate Isomorphism

The first contribution of this paper is an isomorphism framework of winrate-based features, including the potential winrate isomorphism (PWI) and the k-recall winrate Isomorphism (KRWI). Compared with outcome-based features, winrate-based features offer a streamlined approach, focusing exclusively on the distribution of loss, draw, and win outcomes of signals emanating from a signal infoset (and its predecessors) as it evolves towards the terminal signals. Winrate-based features are numerical vectors of consistent length. In this section, an identical Winrate-based feature uniquely determines an abstracted signal infoset. It is worth noting that the similarity of Winrate-based features reflects the similarity among signal infosets, allowing for clustering based on these features (see Section 5).

Both PWI and KRWI share the similar isomorphism construction process for player \(i\) in phase \(r\), as illustrated in algorithm 1. The difference lies only in the construction operator for the winrate-based features, Feature, used in lines 5 and 12. The isomorphism construction process starts by iterating through all signal infosets of \(_{i}^{(r)}\) and collecting their features. Next, these features are deduplicated and stored in lexicographical order within set \(_{i}^{(r)}\), which is implemented as a vector data structure. Within \(_{i}^{(r)}\), the index of a feature serves as an identifier for an abstracted signal infoset. Then, by utilizing a hash table \(_{i}^{(r)}\), we can identify an abstracted signal infoset's identifier based on its feature. In the final step, we traverse \(_{i}^{(r)}\) again, associating the identifier of a signal infoset with the identifier of its corresponding abstracted signal infoset, and this relationship is recorded in \(_{i}^{(r)}\), an isomorphism map. The function \(Index_{i}(r,)\) is a domain-specific mapping that assigns a unique identifier to each signal infoset at phase \(r\), within the numeric range of 0 to \(|_{i}^{(r)}|-1\). InTexas Hold'em-style games, one optional approach for implementing this function is through lossless isomorphism .

### Potential Winrate Isomorphism

Potential winrate isomorphism (PWI) is a signal abstraction that classify signal infosets based on its potential winrate features. These features focus on the distribution of a player's winrate over terminal signals after passing through a given signal infoset, without considering the history of how the player reached the signal infoset. Specifically, for player \(i\) in phase \(r\), the potential winrate feature associated with \(_{i}^{(r)}\) is defined as

\[pf_{i}^{(r)}()=(pf_{i}^{(r),0}(),pf_{i}^{(r),1}(),,pf_{i}^{(r),N}()),\] (1)

where

* \(pf_{i}^{(r),0}()\) denotes the probability that player \(i\) ranks lower than least one other player in the terminal signals, after passing through \(\).
* \(pf_{i}^{(r),l}()\), for \(l>0\), denotes the probability that player \(i\) ranks no lower than any other player and ranks higher than exactly \(l-1\) other players in the terminal signals, after passing through \(\).

In the terminal phase, the winrate feature is calculated by directly statisticing the game outcomes for players in the given signal infoset. Moreover, in the non-terminal phases, we use a recursive approach to simplify the computation of the winrate feature, thereby avoiding the need to enumerate every signal infoset down to the terminal phase. The recursive formula is

\[pf_{i}^{(r),l}()=_{^{(r+1)} _{i}^{(r+1)}\\ ^{(r+1)}}pf_{i}^{(r+1),l}(^ {(r+1)})Pr\{^{(r+1)}|\}\] (2)The PWI algorithm is derived from the POI algorithm , and the details of the PWI algorithm are elaborated in Appendix A.1. Both algorithms use the potential winrate feature to distinguish between different abstracted signal infosets in the terminal phase. However, unlike POI, PWI also uses the potential winrate feature in non-terminal phases to identify different abstracted signal infoset classes, while POI relies on the potential outcome feature (which captures the distribution of the abstracted signal infoset class for future signal infoset). In non-terminal phases, the potential winrate feature is a simplified version of the potential outcome feature. Unsurprisingly, PWI also results in excessive abstraction similar to POI. As shown in Table 2, in heads-up limit hold'em (HULHE) and heads-up no-limit hold'em (HUNL), the number of abstracted signal infosets identifiable by lossless isomorphism increases with each phase, indicating that the game becomes increasingly complex. However, the number of abstracted signal infosets identifiable by PWI and POI first increases and then decreases, showing a spindle-shaped pattern. And we observed that when only future information is considered, winrate-based features may lead to greater information loss compared to outcome-based features. For instance, in the River phase, the number of abstracted signal infosets identified by PWI is only 79.16% of that identified by POI.

### K-Recall Winrate Isomorphism

As Fu et al.  mentioned, supplementing historical information can enhance the ability of signal abstraction to identify abstracted signal infosets. Inspired by KROI's construction approach, we developed the k-recall winrate isomorphism (KRWI). The key difference is that instead of using k-recall outcome features to distinguish between different signal infosets, KRWI utilizes k-recall winrate features.

In a game with signal perfect recall, all signals within the signal infoset \(\) have their predecessors at phase \(r^{}\), which belong to the identical signal infoset \(^{}\). For player \(i\) at phase \(r\), the signal infoset \(_{i}^{(r)}\) has a \(k\)-recall winrate feature (\(k<r\)) represented as a numerical array with a dimension of \((k+1)(N+1)\):

\[rf_{i}^{(r,k)}()=(pf_{i}^{(r)}();pf_{i}^{(r-1)}(); ;pf_{i}^{(r-k)}())\] (3)

When \(r^{}\) is less than \(r\), \(pf_{i}^{(r^{})}()\) denotes the potential winrate feature for the predecessor signal infoset \(^{}\) of \(\) at phase \(r^{}\). Since we have stored all the potential winrate features of \(_{i}^{(r)}\) through \(_{i}^{(r)},_{i}^{(r)}\) and assigned them unique identifiers in Algorithm A1. To save storage space and facilitate retrieval, what we actually store is

\[rf_{i}^{(r,k)}()=(_{i}^{(r)}[],_{i} ^{(r-1)}[],,_{i}^{(r-k)}[))\] (4)

\(_{i}^{(r^{})}[]\) is the identifier for the potential winrate feature of the predecessor \(^{}\) of \(\) in the \(r^{}\) phase, \(r^{} r\). For algorithm details, please refer to Appendix A.2.

Just as the potential winrate feature is a simplified version of the potential outcome feature, the k-recall winrate feature is a simplified version of the k-recall outcome feature. Table 1 shows the number of signal infosets that KRWI and KROI can identify and their ratio in HUNL&HULHE. We were pleasantly surprised to find that while the ratio of PWI to POI resolution can drop below 80%,

    & Preflop &  &  &  \\  Recall & 0 & 0 & 1 & 0 & 1 & 2 & 0 & 1 & 2 & 3 \\ KRWI & 169 & 1028325 & 1124105024 & 34815952 & 37629309 & 20687 & 31117469 & 52989063 & 577366243 \\ KROI & 100 & 1137132 & 1241210 & 2337912 & 38938975 & 42040233 & 20687 & 39792212 & 586622784 & 638585633 \\ W/O (\%) & 100.0 & 90.43 & 90.51 & 79.16 & 89.49 & 89.58 & 100.0 & 83.23 & 90.33 & 90.41 \\   

Table 1: The number of abstracted signal infosets identified by KRWI, and KROI in each phase and \(k\) of HUNL&HUNL, with W/O indicating the ratio identified by PWI and POI.

Figure 2: The number of abstracted signal infosets identified by LI, PWI, and POI in each phase of HUNL&HUNL&HUNL, with W/O indicating the ratio identified by PWI and POI.

when \(k\) is set to its maximum value, i.e. \(r-1\), the ratio of KRWI to KROI resolution can reach nearly 90% at a minimum, with most of the information preserved. Also, we can easily observe that the number of abstracted signal infosets identified by KRWI is much higher than that identified by POI.

## 5 K-Recall Winrate Abstraction with Earth Mover's Distance

Fu et al.  introduced potential and k-recall outcome features, referred to as outcome-based features, to distinguish different abstracted signal infosets. In the previous section, we developed potential and k-recall winrate features, termed winrate-based features, for the same purpose. In these two methods, Each unique feature corresponds to a single abstracted signal infoset. Intuitively, we can infer that feature similarity might reflect the similarity among abstracted signal infosets, enabling further abstraction and compression for application in large-scale games. However, assessing similarity with outcome-based features is challenging because the identification code indicates only the category, without reflecting the degree of similarity. In contrast, winrate-based features represent winrates, which are inherently comparable, allowing for an easy definition of distances between them.

For the signal information sets \(,^{}\) of player \(i\) at phase \(r\), we can define the distance of their k-recall winrate feature as

\[d(rf_{i}^{(r,k)}(),rf_{i}^{(r,k)}(^{}))=_{j=0}^{ k}w_{j}(pf_{i}^{(r-j)}(),pf_{i}^{(r-j)}(^{ }))\] (5)

Among Equation (5), Emd is the operator used to calculate the earth mover's distance (EMD) . The EMD calculates the distance between two histograms using optimal transport theory. Since it requires solving linear programming equations, the computational complexity of the EMD is sensitive to the dimensionality of the histograms, and approximate algorithms are usually used for larger-scale problems. However, the dimensionality of winrate-based features is small, with a dimension of 3 in a two-player scenario, so we attempt to use a fast algorithm for accurately computing the EMD . \(w_{0},,w_{k}\) are hyperparameters used to control the importance of EMD at each phase \(r,,r-k\). We use the KMeans++ algorithm , combined with the distance of their k-recall winrate feature, to cluster the abstracted signal infosets of KRWI. We named this algorithm KrwEmd.

Although calculating EMD on small-dimensional histograms is already very fast, clustering actual Texas Hold'em still faces a significant computation. For example, for the River phase of HUNL&HULHE, the clustering input size of the KRWI abstracted signal infoset is approximately \(5.8 10^{8}\). When we set the number of centroids to 20000, a single Kmeans++ iteration takes about 19000 core hours on a computer with a 2.40GHz clock frequency, which is a significant time cost. Therefore, we need to find ways to reduce this time cost. We have developed an accelerated algorithm, please refer to Appendix A.3 for details.

## 6 Experimental Setup

We conducted experiments on the Numeral211 Hold'em  testbed. Numeral211 is a two-player three-phase Taxes Hold'em-style game with more complex hand systems than the Leduc Hold'em  and Rhode Island Hold'em  test environments, making it suitable for studying hand abstraction issues. Detailed rules are included in Appendix B. Table 3 shows the number of abstracted signal infosets recognized by KRWI and KROI, along with lossless isomorphism, in Numeral211 Hold'em.

Let \(=(_{1},_{2})\) be the signal abstraction we would like to assess. We will test the strength of the signal abstraction by measuring exploitability of the approximate equilibrium derived using the

Figure 3: The number of abstracted signal infosets identified by LI, PWI, and POI in each phase of HUNL&HUNLE, with W/O indicating the ratio identified by PWI and POI.

CSMCCFR algorithm [30; 22] in different abstracted signal infosest scales. We gauge the performance over exploitability. For doing that, we consider both symmetric and asymmetric abstraction scenarios.

In this symmetric abstraction setting, we measure the exploitability of approximate equilibrium that is yielded when both the players in the game employ signal abstraction in the original game. However, it may lead to the abstraction pathology . To avoid such problems, we illustrate the theoretical performance of the signal abstraction under evaluation through asymmetric abstraction. The approximate equilibrium in the signal abstracted games \(^{(_{1},_{2})}\) and \(^{(_{1},_{2})}\) is obtained to obtain \(^{*,1}\) and \(^{*,2}\), respectively. Finally, we concat the two strategies to get \(^{}=(_{1}^{*,1},_{2}^{*,2})\) and check the exploitability of \(^{}\).

## 7 Experiment

Firstly, we provide an evaluation of the performance of KRWI (2-RWI) compared with KROI (2-ROI) and POI (0-ROI) approaches and lossless isomorphism. We keep the most abstracted signal infosest identified under the full abstraction setting. Note that POI is the common refinement of existing signal abstraction algorithms that only consider future information. And, since previous works cannot control the number of abstracted infosest, they cannot justify their performance in that considering historical information in signal abstraction was better than that in signal abstraction with the same number of abstracted infosest. To investigate this issue, we included KrwEmd and set the clustering scale to be consistent with POI. Note here, that 2-RWI and 2-ROI share the same capability of infosest recognition in Preflop and Flop, while POI is only a little bit worse than 2-RWI and 2-ROI in Flop. Thus, we can directly allow clustering of KrwEmd abstraction use the abstracted signal infosets identified by POI in Preflop and Flop, and only perform clustering in River. Here, we design four sets of hyper-parameters: \((w_{0},w_{1},w_{2})\), i.e., exponentially decreasing: \((16,4,1)\), linearly decreasing: \((7,5,3)\), constant: \((1,1,1)\), and increasing: \((3,5,7)\) in the importance of historical information. We only show the result of best- and worst-performing parameters (to make the figure neat). The full figures appear in the Appendix C. Figure 3(a) shows the result of symmetric abstraction, while Figure 4(b) shows the result of asymmetric abstraction. We observed that both symmetric and asymmetric abstractions maintained consistent abstraction performance without abstraction pathologies. As expected, overfitting was observed in the symmetric abstraction scenario while in the asymmetric scenario overfitting was significant only for POI. The performance difference between 2-RWI and 2-ROI is small, which means that under the full abstraction setting, using simple winrate-based features instead of complex outcome-based features can achieve nearly the same performance. Even with the worst parameter configuration (increasing importance), KrwEmd with the same number of abstracted signal inforsets as POI still outperforms POI.

Figure 4: Full abstraction setting experiment, trained for \(5.5 10^{10}\) iterations.

Next, we compared the performance of KrwEmd with the currently applied signal abstraction algorithms Ehs and PaEmd. It should be noted that POI is the common refinement both for Ehs and PaEmd, meaning that the maximum number of abstracted signal infosets they can recognize will not exceed that of POI. Thus, we set a compression rate that is 10 times lower than that of POI, while not performing abstraction for Preflop. The final number of abstracted infosets is set to \((100,225,396)\). To exclude the influence of random events on performance, we generated 3 sets of abstractions for Ehs and PaEmd each. KrwEmd used hyperparameters \((w_{3,0},w_{3,1},w_{3,2};w_{2,0},w_{2,1})\) in Flop and River, which are exponentially decreasing \((16,4,1;4,1)\), linearly decreasing \((7,5,3;5,3)\), constant \((1,1,1;1,1)\), and increasing \((3,5,7;5,7)\) in the importance of historical information. Additionally, since PaEmd uses approximate EMD calculations, its approximate distance is asymmetric, making it difficult for the algorithm to converge. We truncated after 1000 iterations on a single core, with an average cost of 1427.7s, while Ehs and KrwEmd both achieved convergent clustering results, requiring an average of 12.3 and 96.7 iterations, with average time costs of 11.2s and 341.4s, respectively.

Figure 4(a) shows the results of symmetric abstraction experiments, while Figure 4(b) shows the results of asymmetric abstraction experiments. We observed that both symmetric and asymmetric abstractions maintained consistent abstraction performance, similar to the full abstraction scenario, without significant abstraction pathologies. The experimental results show that KrwEmd's performance is far superior to that of Ehs and PaEmd under all parameter settings. Our experiments also confirmed that, despite PaEmd's convergence issues, it is indeed a more effective abstraction algorithm than Ehs. Additionally, we further validated that the importance of historical information decreases progressively from bottom to top, although this time the best-performing parameter was exponentially decreasing rather than linearly decreasing as in the previous experiment.

These two experiments validate that considering historical information is indeed more effective than considering future information only in signal abstraction even in imperfect recall setting.

## 8 Conclusion

This research introduces the first imperfect recall signal abstraction algorithm that considers historical information. This algorithm has the ability to adjust the scale of the abstracted signal infosets. Based on this, we fully verified that the imperfect recall signal abstraction and abstraction algorithms considering historical information is superior to that only considering future information. Therefore, the KrwEmd algorithm has replaced the PaEmd algorithm and become the SOTA in this field. Based on the KrwEmd algorithm, we are expected to build a stronger Texas Hold'em AI.

Figure 5: Performance comparison of KrwEmd versus other imperfect recall signal abstraction algorithms considering only future information, trained for \(3.7 10^{10}\) iterations.