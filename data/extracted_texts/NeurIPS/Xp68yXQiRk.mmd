# SQ Lower Bounds for Non-Gaussian Component Analysis with Weaker Assumptions

Ilias Diakonikolas

University of Wisconsin-Madison

ilias@cs.wisc.edu

&Daniel M. Kane

University of California, San Diego

dakane@cs.ucsd.edu

&Lisheng Ren

University of Wisconsin-Madison

lren29@wisc.edu

&Yuxin Sun

University of Wisconsin-Madison

yxsun@cs.wisc.edu

###### Abstract

We study the complexity of Non-Gaussian Component Analysis (NGCA) in the Statistical Query (SQ) model. Prior work developed a general methodology to prove SQ lower bounds for this task that have been applicable to a wide range of contexts. In particular, it was known that for any univariate distribution \(A\) satisfying certain conditions, distinguishing between a standard multivariate Gaussian and a distribution that behaves like \(A\) in a random hidden direction and like a standard Gaussian in the orthogonal complement, is SQ-hard. The required conditions were that (1) \(A\) matches many low-order moments with the standard univariate Gaussian, and (2) the chi-squared norm of \(A\) with respect to the standard Gaussian is finite. While the moment-matching condition is necessary for hardness, the chi-squared condition was only required for technical reasons. In this work, we establish that the latter condition is indeed not necessary. In particular, we prove near-optimal SQ lower bounds for NGCA under the moment-matching condition only. Our result naturally generalizes to the setting of a hidden subspace. Leveraging our general SQ lower bound, we obtain near-optimal SQ lower bounds for a range of concrete estimation tasks where existing techniques provide sub-optimal or even vacuous guarantees.

## 1 Introduction

Non-Gaussian Component Analysis (NGCA) is a statistical estimation task first considered in the signal processing literature . As the name suggests, the objective is to find a non-gaussian direction (or, more generally, low-dimensional subspace) in a high-dimensional dataset. Since its introduction, the NGCA problem has been studied in a range of works from an algorithmic standpoint; see  and references therein. Here we explore this problem from a hardness perspective in the Statistical Query (SQ) model. Before we motivate and state our results, we require basic background on the SQ model.

SQ ModelSQ algorithms are a class of algorithms that are allowed to query expectations of bounded functions on the underlying distribution through the SQ oracle rather than directly access samples. The model was introduced by Kearns  as a natural restriction of the PAC model  in the context of learning Boolean functions. Since then, the SQ model has been extensively studied in a range of settings, including unsupervised learning . The class of SQ algorithms is broad and captures a range of known algorithmic techniques in machine learning including spectral techniques, moment and tensor methods, local search (e.g., EM), and many others (see, e.g.,  and references therein).

**Definition 1.1** (SQ Model).: Let \(D\) be a distribution on \(^{n}\). A _statistical query_ is a bounded function \(q:^{n}[-1,1]\). We define \(()\) to be the oracle that given any such query \(q\), outputs a value \(v\) such that \(|v-_{ D}[q()]|\), where \(>0\) is the _tolerance_ parameter of the query. A _statistical query (SQ) algorithm_ is an algorithm whose objective is to learn some information about an unknown distribution \(D\) by making adaptive calls to the corresponding \(()\) oracle.

The following family of high-dimensional distributions forms the basis for the definition of the NGCA problem.

**Definition 1.2** (Hidden-Subspace Distribution).: For a distribution \(A\) supported on \(^{m}\) and a matrix \(^{n m}\) with \(^{}=_{m}\), we define the distribution \(_{}^{A}\) supported on \(^{n}\) such that it is distributed according to \(A\) in the subspace \((_{1},,_{m})\) and is an independent standard Gaussian in the orthogonal directions, where \(_{1},,_{m}\) denote the column vectors of \(\). In particular, if \(A\) is a continuous distribution with probability density function \(A()\), then \(_{}^{A}\) is the distribution over \(^{n}\) with probability density function

\[_{}^{A}()=A(_{1}, ,,_{m},)(-\|- ^{}\|_{2}^{2}/2)/(2)^{(n-m)/2}\.\]

That is, \(_{}^{A}\) is the product distribution whose orthogonal projection onto the subspace of \(\) is \(A\), and onto the subspace perpendicular to \(\) is the standard \((n-m)\)-dimensional normal distribution. An important special case of the above definition considers to \(m=1\) (i.e., the case when the hidden subspace is a hidden direction); for this setting, we will use the notation \(_{}^{A}\) for such a distribution, where \(A\) is a one-dimensional distribution and \(^{n}\) is a unit vector.

Since we are focusing on establishing hardness, we will consider the following hypothesis testing version of NGCA (since the learning/search version typically reduces to the testing problem). We use \(_{n}\) to denote the standard \(n\)-dimensional Gaussian distribution \((0,_{n})\). We use \(U(_{n,m})\) to denote the uniform distribution over the set of all orthogonal matrices \(^{n m}\); namely, this is the distribution obtained by taking \(^{}\), where \(^{n n}\) is a random rotation matrix and \(^{}^{n m}\) is an arbitrary orthogonal matrix.

**Definition 1.3** (Hypothesis Testing Version of NGCA).: Let \(n>m 1\) be integers. For a distribution \(A\) supported on \(^{m}\), one is given access to a distribution \(D\) such that either:

* \(H_{0}\): \(D=_{n}\),
* \(H_{1}\): \(D\) is given by \(_{}^{A}\), where \( U(_{n,m})\).

The goal is to distinguish between these two cases \(H_{0}\) and \(H_{1}\).

For the special case that \(m=1\) (i.e., for a univariate distribution \(A\)), prior work  established SQ-hardness of NGCA1 under the following condition:

**Condition 1.4**.: _Let \(d_{+}\). The distribution \(A\) on \(\) is such that (i) the first \(d\) moments of \(A\) agree with the first \(d\) moments of \((0,1)\), and (ii) the chi-squared distance \(^{2}(A,)\) is finite, where the chi-squared distance for two distributions (with probability density functions) \(P,Q:^{n}_{+}\) is defined as \(^{2}(P,Q)}}{{=}}_{ ^{n}}P()^{2}/Q()d-1\)._

Specifically, the main result of  shows that any SQ algorithm that solves the testing version of NGCA requires either \(2^{n^{(1)}}\) many SQ queries or at least one query with accuracy

\[n^{-(d)}(A,(0,1))}.\]

It is worth noting that subsequent works (see  and ) generalized this result so that it only requires that (i) \(A\)_approximately_ matches moments with the standard Gaussian, and (ii) \(A\) is a low-dimensional distribution embedded in a hidden low-dimensional subspace, instead of a one-dimensional distribution.

The starting point of our investigation is a key technical limitation of this line of work. Specifically, if \(^{2}(A,(0,1))\) is very large (or infinite), e.g., if \(A\) has constant probability mass on a discrete set, the aforementioned SQ lower bound of  can be very weak (or even vacuous). It is thus natural to ask if the finite chi-squared assumption is in fact necessary for the corresponding SQ lower bounds to hold.

A concrete motivation to answer this question comes from the applications of a generic SQ lower bound for NGCA to various learning problems. The SQ-hardness of NGCA can be used to obtain similar hardness for a number of well-studied learning problems that superficially appear very different. These include learning mixture models , robust mean/covariance estimation , robust linear regression , learning halfspaces and other natural concepts with adversarial or semi-random label noise , list-decodable mean estimation and linear regression , learning simple neural networks , and even learning simple generative models . In several of these applications, the requirement of bounded chi-squared distance is somewhat problematic, in some cases leading to quantitatively sub-optimal results. Moreover, in certain applications, this restriction leads to vacuous guarantees.

### Our Results

#### 1.1.1 Main Result

Our main result is a qualitatively near-optimal (up to the constant factor in the exponent) SQ lower bound for the NGCA problem, assuming only the moment-matching condition (i.e., without the chi-squared distance restriction). Informally, we essentially show that in order to solve the NGCA in \(n\) dimensions with an \(m\)-dimensional distribution \(A\) that (approximately) matches moments with the standard Gaussian up to degree \(d\), any SQ algorithm will either require one query with accuracy \(O_{m,d}(n^{-(d)})\) or exponential in \(n\) many queries.

Formally, we establish the following theorem.

**Theorem 1.5** (Main SQ Lower Bound Result).: _Let \((0,1)\) and \(n,m,d\) with \(d\) even and \(m,d n^{}\). Let \(_{+}\) and \(A\) be a distribution on \(^{m}\) such that for any polynomial \(f:^{m}\) of degree at most \(d\) and \(_{_{m}}[f()^{2}]=1\), the following holds: \([_{ A}[f()]-_{ _{m}}[f()]]\). Let \(0<c<(1-)/8\) and \(n\) be at least a sufficiently large constant depending on \(c\). Then any SQ algorithm solving the \(n\)-dimensional NGCA problem (as in Definition 1.3) with \(2/3\) success probability requires either (i) a query of tolerance \(O_{m,d}(n^{-((1-)/8-c)d})+(1+o(1))\), or (ii) \(2^{n^{(c)}}\) many queries._

A few comments regarding the parameters are in order here. We first note that the constant in \(O_{m,d}(n^{-((1-)/8-c)d})\) is roughly the size of the Binomial coefficient \(\). Furthermore, we would like to point out that for most applications we will have \(m,d<1/(n)\). Therefore, the parameters \(\) and \(c\) can be taken to be arbitrarily close to \(0\). So, informally, our lower bound on the query accuracy can be roughly thought of as \(n^{-d/8}\).

For all the applications given in this paper, the above theorem will be applied for the special case that \(m=1\); namely, the case that the hidden subspace is a hidden direction and \(A\) is a univariate distribution.

Relation to LLL-based Algorithms for NGCAConsider the special case of the NGCA problem corresponding to \(m=1\) where \(A\) is a _discrete_ distribution that matches its first \(d\) moments with the standard Gaussian. Theorem 1.5 implies that any SQ algorithm for this version of the problem either uses a query with accuracy \(n^{-(d)}\) or exponential many queries. On the other hand, recent works gave polynomial-time algorithms for this problem with sample complexity \(O(n)\), regardless of the degree \(d\). It is worth noting that the existence of these algorithms does not contradict our SQ lower bound, as these algorithms are based on the LLL-method for lattice basis reduction that is not captured by the SQ framework. An an implication, it follows that LLL-based methods surpass any efficient SQ algorithm for these settings of NGCA. A similar observation was previously made in  for the special case that the discrete distribution \(A\) is supported on \(\{0, 1\}\); consequently,  could only obtain a quadratic separation. Finally, we note that this limitation of SQ algorithms is also shared by two other prominent restricted families of algorithms (namely, SoS algorithms and low-degree polynomial tests).

#### 1.1.2 Applications

We believe that Theorem 1.5 is interesting in its own right, as it elucidates the SQ complexity of a natural and well-studied statistical problem. Here we discuss concrete applications to some natural statistical tasks. We note that the SQ lower bound in the prior work  cannot give optimal (or even nontrivial) lower bounds for these applications.

List-decodable Gaussian Mean EstimationOne can leverage our result to obtain a sharper SQ lower bound for the task of list-decodable Gaussian mean estimation. In this task, the algorithm is given as input points from \(^{n}\) where an \(<1/2\) fraction of the points are drawn from an unknown mean and identity covariance Gaussian \((,)\), and the remaining points are arbitrary. The goal of the algorithm is to output a list of \(O(1/)\) many hypothesis vectors at least one of which is close to \(\) in \(_{2}\)-norm with probability at least \(2/3\).  established the following SQ lower bound for this problem (see also  for a different exposition).

**Fact 1.6** ().: _For each \(d_{+}\) and \(c(0,1/2)\), there exists \(c_{d}>0\) such that for any \(>0\) sufficiently small the following holds. Any SQ algorithm that is given access to a \((1-)\)-corrupted Gaussian \((,)\) in \(n>d^{3/c}\) dimensions and returns a list of hypotheses such that with probability at least \(2/3\) one of the hypotheses is within \(_{2}\)-distance \(c_{d}^{-1/d}\) of the true mean \(\), does one of the following: (i) Uses queries with error tolerance at most \((O(^{-2/d}))(n)^{-(d+1)(1/4-c/2)}\). (ii) Uses at least \(((n^{c}))\) many queries. (iii) Returns a list of at least \(((n))\) many hypotheses._

The above statement is obtained using the framework of  by considering the distribution testing problem between \((,)\) and \(_{}^{A}\), where \(A\) is the one-dimensional moment-matching distribution of the following form.

**Fact 1.7** (, see Lemma 8.21 in ).: _For \(d_{+}\), there exists a distribution \(A=(,1)+(1-)E\), for some distribution \(E\) and \(=10c_{d}^{-1/d}\), such that the first \(d\) moments of \(A\) agree with those of \((0,1)\). Furthermore, the probability density function of \(E\) can be taken to be pointwise at most twice the pdf of the standard Gaussian._

We note that \(^{2}(A,)=O((^{2}))\), and this results in the \((O(^{-2/d}))\) term in the error tolerance of Fact 1.6. Consequently, if \((n)^{-d/2}\), the error tolerance is greater than one and Fact 1.6 fails to give a non-trivial bound. It is worth noting that the setting of "small \(\)" (e.g., \(\) is sub-constant in the dimension) is of significant interest in various applications, including in mean estimation. A concrete application is in the related crowd-sourcing setting of  dealing with this parameter regime.

We can circumvent this technical problem by combining our main result (Theorem 1.5) with Fact 1.7 to obtain the following sharper SQ lower bound (see Appendix C for the proof).

**Theorem 1.8** (SQ Lower Bound for List-Decoding the Mean).: _Let \((0,1)\) and \(n,d\) with \(d\) be even and \(d n^{}\). Let \(c>0\) and \(n\) be at least a sufficiently large constant depending on \(c\). There exists \(c_{d}>0\) such that for any \(>0\) sufficiently small the following holds. Any SQ algorithm that is given access to a \((1-)\)-corrupted Gaussian \((,)\) in \(n\) dimensions and returns a list of hypotheses such that with probability at least \(2/3\) one of the hypotheses is within \(_{2}\)-distance \(c_{d}^{-1/d}\) of the true mean \(\), does one of the following: (i) Uses queries with error tolerance at most \(O_{d}(n^{-((1-)/8-c)d})\). (ii) Uses at least \(2^{n^{(c)}}\) many queries. (iii) Returns a list of at least \(((n))\) many hypotheses._

Anti-concentration DetectionAnti-concentration (AC) detection is the following hypothesis testing problem: given access to an unknown distribution \(D\) over \(^{n}\), where the input distribution \(D\) is promised to satisfy either (i) \(D\) is the standard Gaussian; or (ii) \(D\) has at least \(<1\) of its probability mass residing inside a dimension \((n-1)\) subspace \(V^{n}\). The goal is to distinguish between the two cases with success probability \(2/3\).

In order to use our main result to derive an SQ lower bound for this task, we require the following lemma on univariate moment-matching (see Appendix C for the proof).

**Lemma 1.9**.: _Let \(D_{0}\) denote the distribution that outputs \(0\) with probability \(1\). For \(d_{+}\), there exists \(_{d}(0,1)\) and a univariate distribution \(A=_{d}D_{0}+(1-_{d})E\) for some distribution \(E\), such that the first \(d\) moments of \(A\) agree with those of \((0,1)\). Furthermore, the pdf of \(E\) can be taken to be pointwise at most twice the pdf of the standard Gaussian._

Using the above lemma and our main result, we can deduce the following SQ lower bound on the anti-concentration detection problem (see Appendix C for the proof).

**Theorem 1.10** (SQ Lower Bound for AC Detection).: _For any \((0,1/2)\), any SQ algorithm that has access to a \(n\)-dimensional distribution that is either (i) the standard Gaussian; or (ii) a distribution that has at least \(<1\) probability mass in a (n-1)-dimensional subspace \(V^{n}\), and distinguishes the two cases with success probability at least \(2/3\), either requires a query with error at most \(n^{-_{}(1)}\), or uses at least \(2^{n^{(1)}}\) many queries._

Learning Periodic FunctionsAnother application is for the well-studied problem of learning _periodic_ functions, see, e.g.,  and , which is closely related to the continuous Learning with Errors (cLWE) problem . In the task of learning periodic functions, the algorithm is given sample access to a distribution \(D\) of \((,y)\) over \(^{n}\). The distribution \(D\) is such that \((0,_{n})\) and \(y=(2((,)+))\) with noise \((0,^{2})\). This implies that \(y\) is a periodic function of \(\) along the direction of \(\) with a small amount of noise. While the frequency and noise scale parameters \(,_{+}\) are known to the algorithm, the parameter \(^{n-1}\) is unknown; the goal of the algorithm is to output a hypothesis \(h:^{n}\) such that \(_{ D}[(h()-y)^{2}]\) is minimized.

In order to use our main theorem to derive an SQ lower bound for this problem, we need to show that for any \(t[-1,1]\), \(D\) conditioned on \(y=t\) approximately matches moments with \((0,_{n})\). To this end, we introduce the following definition and fact of discrete Gaussian measure from .

**Definition 1.11**.: For \(s_{+}\) and \(\), let \(G_{s,}\) denote the measure of the "\(s\)-spaced discrete Gaussian distribution". In particular, for each \(n\), \(G_{s,}\) assigns mass \(sg(ns+)\) to the point \(ns+\), where \(g\) is the pdf function of \((0,1)\).

Note that although \(G_{s,}\) is not a probability measure (as the total measure is not one), it can be thought of as a probability distribution since the total measure is close to one for small \(\). To see this, we introduce the following fact.

**Fact 1.12** (Lemma 3.12 from ).: _For all \(k\), \(s>0\) and all \(\), we have that \(|_{t(0,1)}[t^{k}]-_{t G_{s,}}[t ^{k}]|=k!O(s)^{k}(-(1/s^{2}))\)._

Using the above fact, we are now ready to prove our SQ lower bound for learning periodic functions (see Appendix C for the proof).

**Theorem 1.13** (SQ Lower Bound for Learning Periodic Functions).: _Let \(c>0\) and \(n\) be at least a sufficiently large constant depending on \(c\). Let \(D\) be the distribution of \((,y)\) over \(^{n}\) that is generated by \((0,_{n})\) and \(y=(2((,)+))\) with noise \((0,^{2})\). Let \(>n^{c}\), \(\) be known and \(\) be unknown to the algorithm. Then any SQ algorithm that has access to the distribution \(D\) and returns a hypothesis \(h:^{n}\) such that \(_{(,y) D}[(h()-y)^{2}]=o(1)\), either requires a query with error at most \((-n^{c^{}})\) for \(c^{}<(2c,1/10)\), or uses at least \(2^{n^{(1)}}\) many queries._

### Technical Overview

We start by noting that we cannot use the standard SQ dimension argument  to prove our result, due to the unbounded chi-squared norm. To handle this issue, we need to revisit the underlying ideas of that proof. In particular, we will show that for any bounded query function \(f:^{n}[-1,1]\), with high probability over some \( U(_{n,m})\), it holds that \(|_{_{n}}[f()]-_{ }[f()]|\) will be small. This allows an adversarial oracle to return \(_{_{n}}[f()]\) to every query \(f\) regardless of which case we are in, unless the algorithm is lucky enough (or uses high accuracy) to find an \(f\) that causes \(|_{_{n}}[f()]-_{}[f()]|\) to be at least \(\).

Our approach for calculating \(_{}[f()]\) will be via Fourier analysis. In particular, using the Fourier decomposition of \(f\), we can write \(f()=_{k=0}^{}_{k},_{k}()\), where \(_{k}()\) is theproperly normalized degree-\(k\) Hermite polynomial tensor and \(_{k}\) is the degree-\(k\) Fourier coefficients of \(f\). Taking the inner product with the distribution \(_{}^{A}\) involves computing the expectation of \(_{_{}^{A}}[_{k}()]\), which can be seen to be \(^{ k}_{k},_{k}\), where \(_{k}=_{ A}[_{k}()]\). Thus, we obtain (at least morally speaking) that

\[_{_{}^{A}}[f()]=_{k= 0}^{}^{ k}_{k},_{k} _{k=0}^{}|_{k},(^{})^{  k}_{k}|_{k=0}^{}\|_{k}\|_{2} \|(^{})^{ k}_{k}\|_{2}.\] (1)

The \(k=0\) term of the above sum will be exactly \(_{0}=_{_{}}[f()]\). By the moment-matching condition, the \(k=1\) through \(k=d\) terms will be very small. Finally, we need to argue that the higher degree terms are small with high probability. To achieve this, we provide a non-trivial upper bound for \(_{ U(_{n,m})}[\|(^{})^{  k}_{k}\|_{2}^{2}]\). Combining with the fact that \(_{k=0}^{}\|_{k}\|_{2}^{2}=\|f\|_{2}^{2} 1\), this allows us to prove high probability bounds on each term, and thus their sum.

Furthermore, if we want higher probability estimates of the terms with small \(k\), we can instead bound \(_{ U(_{n,m})}[\|(^{})^{  k}_{k}\|_{2}^{2a}]\) for some integer \(a\). Unfortunately, there are non-trivial technical issues with the above approach, arising from issues with (1). To begin with, as no assumptions other than moment-matching (for a few low-degree moments) were made on \(A\), it is not guaranteed that \(_{k}\) is finite for larger values of \(k\). To address this issue, we will truncate the distribution \(A\). In particular, we pick a parameter \(B\) (which will be determined carefully), and define \(A^{}\) to be \(A\) conditioned on the value in the ball \(^{m}(B)\). Due to the higher-moment bounds, we can show that \(A\) and \(A^{}\) are close in total variation distance, and thus that \(_{_{}^{A^{}}}[f()]\) is close to \(_{_{}^{A^{}}}[f()]\) for any bounded \(f\).

Furthermore, using the higher moment bounds, we can show that \(A^{}\)_nearly_ matches the low-degree moments of \(_{m}\). The second issue arises with the interchange of summations used to derive (1). In particular, although \(f()=_{k=0}^{}_{k},_{k}()\), it does not necessarily follow that we can interchange the infinite sum on the right-hand-side with taking the expectation over \(_{}^{A}\). To fix this issue, we split \(f\) into two parts \(f^{}\) (consisting of its low-degree Fourier components) and \(f^{>}\). We note that (1) _does_ hold for \(f^{}\), as the summation there will be finite, and we can use the above argument to bound \(_{_{}}[f()]-_ {_{}^{A}}[f^{}()]\) with high probability. To bound \(|_{_{}^{A}}[f^{>}()]|\), we note that by taking \(\) large, we can make \(\|f^{>}\|_{2}<\) for some exponentially small \(>0\). We then bound \(_{ U(_{n,m})}[_{ _{}^{A}}[f^{>}]]]=_{}[|f^{>}|]\), where \(\) is the average over \(\) of \(_{}^{A}\) (note that everything here is non-negative, so there is no issue with the interchange of integrals). Thus, we can bound the desired quantity by noting that \(\|f^{>}\|_{2}\) is small and that the chi-squared norm of \(\) with respect to the standard Gaussian \(_{n}\) is bounded.

## 2 Preliminaries

We will use lowercase boldface letters for vectors and capitalized boldface letters for matrices and tensors. We use \(^{n-1}=\{^{n}:\|\|_{2}=1\}\) to denote the \(n\)-dimensional unit sphere. For vectors \(,^{n}\), we use \(,\) to denote the standard inner product. For \(^{n}\), we use \(\|\|_{k}=_{i=1}^{n}_{i}^{k}^{1/k}\) to denote the \(^{k}\)-norm of \(\). For tensors, we will consider a \(k\)-tensor to be an element in \((^{n})^{ k}^{n^{k}}\). This can be thought of as a vector with \(n^{k}\) coordinates. We will use \(_{i_{1},,i_{k}}\) to denote the coordinate of a \(k\)-tensor \(\) indexed by the \(k\)-tuple \((i_{1},,i_{k})\). By abuse of notation, we will sometimes also use this to denote the entire tensor. The inner product and \(^{k}\)-norm of \(k\)-tensor are defined by thinking of the tensor as vectors with \(n^{k}\) coordinates and then use the definition of inner product and \(^{k}\)-norm of vectors. For a vector \(^{n}\), we denote by \(^{ k}\) to be a vector (linear object) in \(^{n^{k}}\). For a matrix \(^{n m}\), we denote by \(\|\|_{2},\|\|_{F}\) to be the operator norm and Frobenius norm respectively. In addition, we denote by \(^{ k}\) to be a matrix (linear operator) mapping \(^{n^{k}}\) to \(^{m^{k}}\). We use \(\) to denote the indicator function of a set, specifically \((t S)=1\) if \(t S\) and \(0\) otherwise. We will use \(:\) to denote the gamma function \((z)=_{0}^{}t^{z-1}e^{-t}dt\). We use \(B:\) to denote the beta function \(B(z_{1},z_{2})=(z_{1})(z_{2})/(z_{1}+z_{2})\). We use \(_{k}^{2}\) to denote the chi-squared distribution with \(k\) degrees of freedom. We use \((,)\) to denote the Beta distribution with parameters \(\) and \(\).

For a distribution \(D\), we use \(_{D}[S]\) to denote the probability of an event \(S\). For a continuous distribution \(D\) over \(^{n}\), we sometimes use \(D\) for both the distribution itself and its probability density function. For two distributions \(D_{1},D_{2}\) over a probability space \(\), let \(d_{}(D_{1},D_{2})=_{S}|_{D_{1}}(S)- _{D_{2}}(S)|\) denote the total variation distance between \(D_{1}\) and \(D_{2}\). For two continuous distribution \(D_{1},D_{2}\) over \(^{n}\), we use \(^{2}(D_{1},D_{2})=_{^{n}}D_{1}()^{2}/D_{2}( )d-1\) to denote the chi-square norm of \(D_{1}\) w.r.t. \(D_{2}\). For a subset \(S^{n}\) with finite measure or finite surface measure, we use \(U(S)\) to denote the uniform distribution over \(S\) (w.r.t. Lebesgue measure for the valumn/surface area of \(S\)).

Basics of Hermite Polynomials

**Definition 2.1** (Normalized Hermite Polynomial).: For \(k\), we define the \(k\)-th _probabilist's_ Hermite polynomials \(_{k}:\) as \(_{k}(t)=(-1)^{k}e^{t^{2}/2}}{dt^{k}}e^{-t^{2}/2}\). We define the \(k\)-th _normalized_ Hermite polynomial \(h_{k}:\) as \(h_{k}(t)=_{k}(t)/\).

Furthermore, we will use multivariate Hermite polynomials in the form of Hermite tensors (as the entries in the Hermite tensors are rescaled multivariate Hermite polynomials). We define the _Hermite tensor_ as follows.

**Definition 2.2** (Hermite Tensor).: For \(k\) and \(^{n}\), we define the \(k\)-th Hermite tensor as

\[(_{k}())_{i_{1},i_{2},,i_{k}}=} _{\\ }_{\{a,b\} P}(- _{i_{a},i_{b}})_{\{c\} P}_{i_{c}}\;.\]

We denote by \(L^{2}(^{n},_{n})\) the function space of all functions \(f:^{n}\) such that \(_{_{n}}[f^{2}()]<\). For functions \(f,g L^{2}(^{n},_{n})\), we use \( f,g_{_{n}}=_{_{n }}[f()g()]\) to denote their inner product. We use \(\|f\|_{2}=_{n}}}\) to denote its \(L^{2}\)-norm. For a function \(f:^{n}\) and \(\), we use \(f^{}\) to denote \(f^{}()=_{k=0}^{}_{k},_{k }()\), where \(_{k}=_{_{n}}[f() _{k}()]\), which is the degree-\(\) approximation of \(f\). We use \(f^{>}=f-f^{}\) to denote its residue. We remark that normalized Hermite polynomials (resp. Hermite tensors) form a complete orthogonal system for the inner product space \(L^{2}(,)\) (resp. \(L^{2}(^{n},_{n})\)). This implies that for \(f L^{2}(^{n},_{n})\), \(_{}\|f^{>}\|_{2}=0\). We also remark that both our definition of Hermite polynomial and Hermite tensor are "normalized". In the sense that for Hermite polynomials, \(\|h_{k}\|_{2}=1\). For Hermite tensors, given any symmetric tensor \(A\), we have \(\|,_{k}()\|_{2}^{2}= ,\). The following claim states that for any orthonormal transformation \(\), the Hermite tensor \(_{k}()\) can be written as applying the linear transformation \(^{ k}\) on the Hermite tensor \(_{k}()\). The proof is deferred to Appendix A.

**Claim 2.3**.: _Let \(1 m<n\). Let \(^{m n}\) with \(^{}=_{m}\). It holds that \(_{k}()=^{ k}_{k}( ),^{n}\)._

## 3 SQ-Hardness of NGCA: Proof of Theorem 1.5

The main idea of the proof is the following. Suppose that the algorithm only asks queries with tolerance \(\), and let \(f\) be an arbitrary query function that the algorithm selects. The key ingredient is to show that \(|_{_{}^{}}[f() ]-_{_{n}}[f()]|\) with high probability over \( U(_{n,m})\). If this holds, then when the algorithm queries \(f\), if the input is from the alternative hypothesis, with high probability, \(_{_{n}}[f()]\) is a valid answer for the query. Therefore, when the algorithm queries \(f\), regardless of whether the input is from the alternative or null hypothesis, the oracle can just return \(_{_{n}}[f()]\). Then the algorithm will not observe any difference between the two cases with any small number of queries. Thus, it is impossible to distinguish the two cases with high probability. To prove the desired bound, we introduce the following proposition.

**Proposition 3.1**.: _Let \((0,1)\) and \(n,m,d\) with \(d\) be even and \(m,d n^{}\). Let \(_{+}\) and \(A\) be a distribution on \(^{m}\) such that for any polynomial \(f:^{m}\) of degree at most \(d\) and \(_{_{m}}[f()]=1\),_

\[|_{ A}[f()]-_{ _{m}}[f()]|\;.\]_Let \(0<c<(1-)/8\) and \(n\) is at least a sufficiently large constant depending on \(c\), then, for any function \(f:^{n}[-1,1]\), it holds_

\[*{}_{ U(_{n,m})}[| *{}_{_{}^{A}}[f( )]-*{}_{_{n}}[f( )]|()}{()} )n^{-(-c)d}+(1+o(1))] 2^{-n^{ (c)}}\.\]

Assuming Proposition 3.1, the proof of our main theorem is quite simple.

Proof for Theorem 1.5.: Suppose there is an SQ algorithm \(\) using \(q<2^{n^{(c)}}\) many queries of accuracy \(()n^{-((1-)/8-c)d }+(1+o(1))\) and succeeds with at least \(2/3\) probability. We prove by contradiction that such an \(\) cannot exist. Suppose the input distribution is \(_{n}\), and the SQ oracle always answers \(*{}_{_{n}}[f()]\) for any query \(f\). Then the assumption on \(\) implies that it answers "null hypothesis" with probability \(>2/3\). Now consider the case that the input distribution is \(_{}^{A}\) and \( U(_{n,m})\). Suppose the SQ oracle still always answers \(*{}_{_{n}}[f()]\) for any query \(f\). Let \(f_{1},,f_{q}\) be the queries the algorithm asks, where \(q=2^{n^{(c)}}\). By Proposition 3.1 and a union bound, we have

\[*{}_{ U(_{n,m})}[ i [q],\ |*{}_{_{}^{A}}[f_{i} ()]-*{}_{_{n}}[f_{ i}()]|]=o(1)\.\]

Therefore, with probability \(1-o(1)\), the answers given by the oracle are valid. From our assumption on \(\), the algorithm needs to answer "alternative hypothesis" with probability at least \((1-o(1))\). But since the oracle always answers \(*{}_{_{n}}[f()]\) (which is the same as the above discussed null hypothesis case), we know the algorithm will return "null hypothesis" with probability \(>2/3\). This gives a contradiction and completes the proof. 

The rest of this section is devoted to the proof of Proposition 3.1.

### Fourier Analysis using Hermite Polynomials

The main idea of Proposition 3.1 is to analyze \(*{}_{_{}^{A}}[f( )]\) through Fourier analysis using Hermite polynomials. Before we do the analysis, we will first truncate the distribution \(A\) inside \(^{m}(B)\) which is the \(_{2}\)-norm unit ball in \(m\)-dimension with radius \(B\) for some \(B_{+}\) to be specified. Namely, we will consider the truncated distribution \(A^{}\) defined as the distribution of \( A\) conditioned on \(^{m}(B)\). The following lemma shows that given any \(m\)-dimensional distribution \(A\) that approximately matches the first \(d\) moment tensor with the Gaussian, the truncated distribution \(A^{}\) is close to \(A\) in both the total variation distance and the first \(d\) moment tensors.

**Lemma 3.2**.: _Let \(n,m,d\) with \(d\) be even. Let \(A\) be a distribution on \(^{m}\) such that for any polynomial \(f\) of degree at most \(d\) and \(*{}_{_{m}}[f()^{2}]=1\),_

\[|*{}_{ A}[f()]-*{ }_{_{m}}[f()]| 2\.\]

_Let \(B_{+}\) such that \(B^{d} c_{1}(2^{d/2}})\) where \(c_{1}\) is at least a sufficiently large universal constant and let \(A^{}\) be the truncated distribution defined as the distribution of \( A\) conditioned on \(^{m}(B)\). Then \(d_{}(A,A^{})=O(2^{d/2}})B^{-d}\), Furthermore, any \(k\) and \(k<d\),_

\[\|*{}_{ A^{}}[_{k}( )]-*{}_{_{m}}[ _{k}()]\|_{2}=2^{O(k)}(2^{d/2}})B^{-(d-k)}+\.\]

The proof of Lemma 3.2 is deferred to Appendix B.

Since \(d_{}(A,A^{}) O(2^{d/2}})B^{-d}\) and \(f\) is bounded in \([-1,1]\), it follows that

\[|*{}_{_{}^{A^{}}}[f()]-*{}_{ _{}^{A}}[f()]|  2d_{}(_{}^{A^{}}, _{}^{A^{}})=2d_{}(A,A^{})\] \[=O((2^{d/2}} )B^{-d})\.\]Therefore, if suffices for us to analyze \(_{^{^{}}_{}}[f( )]\) instead of \(_{^{^{}}_{}}[f( )]\). Furthermore, the property that \(A^{}\) is bounded inside \(^{m}(B)\) will be convenient in the Fourier analysis later. We introduce the following lemma which decomposes \(_{^{^{}}_{}}[f( )]\) using Hermite analysis. The proof is deferred to Appendix B.

**Lemma 3.3** (Fourier decomposition Lemma).: _Let \(A^{}\) be any distribution supported on \(^{m}\), \(^{n m}\) and \(^{}=_{m}\). Then for any \(\), \(_{^{^{}}_{}}[f( )]=_{k=0}^{}^{ k}_{k}, _{k}+_{^{^{ }}_{}}[f^{>}()]\), where \(_{k}=_{ A^{}}[_{k}()]\) and \(_{k}=_{_{n}}[f() _{k}()]\)._

**Remark 3.4**.: Ideally, in Lemma 3.3, we would like to have \(_{^{^{}}_{}}[f( )]=_{k=0}^{}^{ k}_{k}, _{k}\). However, since we do not assume that \(^{2}(A^{},_{m})<\), this convergence may not hold.

Recall that our goal is to show that \(|_{^{^{}}_{}}[f( )]-_{_{n}}[f()]|\) is small with high probability. Observe that \(_{_{n}}[f()]=_{0}\) which is the first term in the summation of \(_{k=0}^{}^{ k}_{k},_{k}\) (since \(_{0}=1\)). Therefore, given Lemma 3.3, it suffices to show that \(|_{k=1}^{}^{ k}_{k},_{k} |\) and \(|_{^{^{}}_{}}[f^{ }()]|\) are both small with high probability. We ignore the \(|_{^{^{}}_{}}[f^{ }()]|\) part for now as this is mostly a technical issue. To bound \(|_{k=1}^{}^{ k}_{k},_{k}|\), it suffices to analyze \(_{k=1}^{}|^{ k}_{k},_{k} |\) by looking at each term \(|^{ k}_{k},_{k}|=| _{k},(^{})^{ k}_{k}| \|_{k}\|_{2}\|(^{})^{ k}_{k}\|_ {2}\). To show that the summation is small, given we need to prove that (with high probability):

1. \(\|_{k}\|_{2}\) does not grow too fast w.r.t \(k\);
2. \(\|(^{})^{ k}_{k}\|_{2}\) decays very fast w.r.t \(k\) (is small with high probability w.r.t the randomness of \(\)).

\(\|_{k}\|_{2}\) does not grow too fast:We will use slightly different arguments depending on the size of \(k\). We consider three cases : \(k<m\), \(m k n^{(1-)/4}\), and \(k n^{(1-)/4}\) (the value in the exponent will deviate by a small quantity to make the proof go through). For \(k<m\), \(\|_{k}\|_{2}\) grows slowly by the approximate moment-matching property of \(A^{}\). For \(m k n^{(1-)/4}\), we require the following fact:

**Fact 3.5**.: _Let \(_{k}\) be the \(k\)-th Hermite tensor for \(m\)-dimension. Suppose \(\|\|_{2}^{2} m\), then \(\|_{k}()\|_{2}=2^{O(k)}(\|\|_{2}^{k},1)\)._

We provide the proof of Fact 3.5 in Appendix B. For \(k>n^{(1-)/4}\), we can show that \(\|_{k}\|_{2}\) does not grow too fast by the following asymptotic bound on Hermite tensors.

**Fact 3.6**.: _Let \(_{k}\) be the \(k\)-th Hermite tensor for \(m\)-dimension, then \(\|_{k}()\|_{2} 2^{O(m)}^{1/2}(\| \|_{2}^{2}/4)\)._

We provide the proof of Fact 3.6 in Appendix B.

\(\|(^{})^{ k}_{k}\|_{2}\) decays very fast:We show that \(|^{ k},_{k}|\) is small with high probability by bounding its \(a\)-th moment for some even \(a\). Notice that since \(\|_{k}\|_{2}\|f\|_{2} 1\), we can then combine it with the following lemma. We defer its proof to Appendix B.

**Lemma 3.7**.: _Let \(k_{+}\), \(a_{+}\) be even, \(^{n^{k}}\) and \(m_{+}\) satisfy \(m<n\). Then, we have_

\[_{ U(_{n,m})}[\|(^{})^{  k}\|_{2}^{a}]_{ U(_{n,m })}[\|^{}\|_{2}^{ak/2}]\|\|_{2 }^{a}\.\]

Roughly speaking, this is just the \(ak/2\)-th moment of the correlation between a random subspace and a random direction, which can be upper bounded by the following lemma and corollary (see Appendix B for the proofs).

**Lemma 3.8**.: _For any even \(k\), and \(^{n-1}\), \(_{^{} U(_{n,m})}[\| \|_{2}^{k}]=()()}{()()})\)._

[MISSING_PAGE_FAIL:10]

and \(^{2}(D,_{n})\) is at most a constant only depending on \(n\) (independent of the choice of the one dimensional distribution \(A\)).

**Lemma 3.11**.: _Let \(A\) be any distribution supported on \(^{m}(n)\) for \(n\) which is at least a sufficiently large universal constant. Let \(D=_{ U(_{n,m})}[^{}_{ }]\). Then, \(D\) is a continuous distribution and \(^{2}(D,_{n})=O_{n}(1)\)._

Roughly speaking, the proof of the lemma follows by noting that the average over \(\) of \(^{}_{}\) is spherically symmetric. We defer its proof to Appendix B.2. Using this lemma, we can write

\[_{ U(_{n,m})} _{^{^{}}_{}}[f^ {>}()] _{ U(_{n,m})} _{^{^{}}_{}} |f^{>}()|=_{ D} |f^{>}()|\] \[=_{_{n}}[)}{_{n}()}\ |f^{>}()|](D,_{n})}\ \|f^{>}\|_{2},\]

where the first equality holds due to Fubini's theorem. Furthermore, since \(^{2}(D,_{n})=O_{n}(1)\), there is a function \(:\) such that \(1+^{2}(D,_{n})(n)\). Therefore, we have that

\[_{ U(_{n,m})}_{ ^{^{}}_{}}[f^{>}( )](D,_{n})}\ \|f^{>}\|_{2} (n)\|f^{>}\|_{2}\.\]

We can take \(=_{f}(n)\) (\(\) only depends on the query function \(f\) and dimension \(n\)) to be a sufficiently large function such that \(\|f^{>}\|_{2}(}{(n)})()n^{- d}\). Then we get

\[_{ U(_{n,m})}_{ ^{^{}}_{}}[f^{>}( )](n)\|f^{>}\|_{2} e^{-n}( )n^{- d}\.\]

This gives the tail bound \(_{ U(_{n,m})}_{ ^{^{}}_{}}[f^{>}( )]()n^{-  d} e^{-n}\).

Using the above upper bounds, we have

\[_{^{^{ }}_{}}[f()]-_{_{n}}[f( )] _{k=1}^{}_{k},(^{ })^{ k}_{k}+|_{ ^{^{}}_{}}[f^{>}()]|\] \[=2()n^{- d}+(1 +o(1))\,\]

except with probability \(2^{-n^{(1)}}\). As we have argued at the beginning of the proof,

\[|_{^{}_{}}[f()]-_{^{^{}}_{}}[ f()]| 2()n^{- d}\.\]

Therefore,

\[|_{^{}_{}}[f()]-_{_{n}}[f()]| 3( )n^{- d}+(1+o(1))\,\]

except with probability \(2^{-n^{(1)}}<2^{-n^{(c)}}\) given \(c=O(1)\).

In the end, notice that the above argument is still true if we take \(^{}>\) such that \((1-)/8-^{}=\). Using the above argument for \(^{}\) and given \(n\) is a sufficiently large constant depending \((1-)/8-=2((1-)/8-^{})\), we get

\[|_{^{}_{}}[f()]-_{_{n}}[f()]|( {(d/2+m/2)}{(m/2)})n^{- d}+(1+o(1))\,\]

except with probability \(2^{-n^{((1-)/8-^{})}}=2^{-n^{(c)}}\). Replacing \(\) with \((1-)/8-c\) completes the proof.