# Procedure to compute RDM-RSA similarity scores:

Equivalence between representational similarity analysis, centered kernel alignment, and canonical correlations analysis

Alex H. Williams

Center for Neural Science, New York University

Center for Computational Neuroscience, Flatiron Institute

alex.h.williams@nyu.edu

###### Abstract

Centered kernel alignment (CKA) and representational similarity analysis (RSA) of dissimilarity matrices are two popular methods for comparing neural systems in terms of representational geometry. Although they follow a conceptually similar approach, typical implementations of CKA and RSA tend to result in numerically different outcomes. Here, I show that these two approaches are largely equivalent once one incorporates a mean-centering step into RSA. This equivalence holds for both linear and nonlinear variants of these methods. These connections are simple to derive, but appear to have been thus far overlooked in the context of comparing neural representations. By unifying these measures, this paper hopes to simplify a complex and fragmented literature on this subject.

## 1 Introduction

Representational similarity analysis (RSA) is a decades-old framework for comparing neural response patterns across systems. It was developed in the cognitive science and computational neuroscience communities, within which it remains a very popular technique [25; 17; 24; 13]. While the RSA framework is quite general, most practical applications involve the construction of _representational dissimilarity matrices_ (RDMs). For an experiment where neural responses are measured across \(M\) conditions, an RDM is a symmetric \(M M\) matrix that captures response dissimilarities across all unique condition pairs. Similarity between networks is quantified by similarity in their RDMs (e.g. by cosine similarity or Pearson correlation). I refer to this class of methods as RDM-RSA.

RDM-RSA bears a close resemblance to centered kernel alignment (CKA), a more recently developed framework for comparing neural representations [6; 23]. CKA is massively popular within the deep learning community, garnering over 1250 citations as of the time of this writing. In place of RDMs, CKA constructs \(M M\) kernel matrices that capture neural response similarities through a positive definite kernel function. CKA quantifies similarity between networks as similarity in their kernel matrices, in exact analogy to how RSA quantifies similarity between RDMs.

To what extent are these methods quantifying the same thing? Here, I document several connections:

* First, a popular variant of RDM-RSA is to use squared Euclidean distance to construct RDMs and then use cosine similarity to compare RDMs . I show that if one applies a centering operation before comparing the RDMs, the result is identical to linear CKA, which is the most popular variant of CKA.
* It is also popular to construct RDMs with Mahalanobis distance . Here, I show that incorporating the centering operation on RDMs leads to a connection with canonical correlations analysis (CCA). Specifically, under a particular choice of covariance matrix, the centered Mahalanobis RSA score equals the mean squared canonical correlation--a quantity sometimes called _Yanai's generalized coefficient of determination_[31; 47].
* Finally, I comment on nonlinear extensions of CKA and RSA. In CKA, this is achieved by using nonlinear kernel functions , while a nonlinear extension of RDM-RSA was recently introduced by Lin and Kriegeskorte . I point out a simple way to construct an RDM using a nonlinear kernel function. Here again, RSA on the centered RDM yields the same result as CKA. This new approach conceptually mirrors that of Lin and Kriegeskorte . Thus, nonlinear variants of CKA and RSA are also quite similar. Moreover, I note that performing RSA on centered Euclidean RDMs (instead of squared Euclidean RDMs) is equivalent to a form of nonlinear CKA.

These relationships are straightforward to derive, but I have not seen them laid out explicitly in the context of comparing neural representations. Kornblith et al.  documented a relationship between linear CKA and CCA, which will be leveraged as part of point 2 above. Additionally, Diedrichsen et al.  describe a relationship between linear CKA and RSA with _whitened_ RDMs in the presence of independent and identically distributed measurement noise. The relationships between RSA and CKA I describe here are more basic--in fact, my exposition will treat neural responses as noise-free. Finally, Sejdinovic et al.  characterize the equivalence of kernel-based and distance-based hypothesis tests for variable independence. Similar results also appear in the context of multidimensional scaling algorithms  and broader mathematical literature . However, it is easy for practitioners to overlook this prior literature because _(a)_ existing papers are focused on distinct motivating applications, and because _(b)_ many presentations assume an audience with strong mathematical background. I therefore believe there is utility in digesting and interpreting these results in plain terms to the neuroscience and interpretable AI communities.

## 2 Background

### Summary of RDM-RSA

RSA is motivated by decades-old concepts from psychology and philosophy. In particular, Shepard and Chipman  posited that similar external objects (e.g. a square and rectangle) are mapped onto mental representations that are also, in some sense, close together--more so than mental representations of dissimilar external objects (e.g. a square and a cat). Or, as Edelman  succinctly put it, _"Representation is representation of similarities."_

RDM-RSA is a quantitative framework that enables practitioners to concretely apply these concepts to neural data analysis . Formally, given \(M\) stimulus conditions and \(N\)-dimensional neural response vectors \(_{1},,_{M}^{N_{X}}\), the first step of RDM-RSA is to compute an _\(M M\) representational dissimilarity matrix (RDM)_. For example, if the squared Euclidean distance is used to compare neural responses, the elements of the RDM will be given by: \(^{X}_{ij}=\|_{i}-_{j}\|_{2}^{2}\). Then, given responses from a second system, a second RDM, \(^{Y}_{ij}=\|_{i}-_{j}\|_{2}^{2}\), is computed from neural responses \(_{1},,_{M}^{N_{Y}}\) across the same \(M\) stimulus conditions. Finally, similarity between the RDMs is quantified by, for example, computing the Spearman or Pearson correlation between the upper triangular elements of \(^{X}\) and \(^{Y}\). The overall workflow can be summarized as follows:* Given neural responses, \(_{1},,_{M}^{N_{X}}\) and \(_{1},,_{M}^{N_{Y}}\).
* Specify distance functions, \(d^{X}\) and \(d^{Y}\).
* Specify an RDM comparison function, \(s:^{M M}^{M M}_{+}\).
* Compute RDMs, \(^{X}_{ij}=d^{X}(_{i},_{j})\) and \(^{Y}_{ij}=d^{Y}(_{i},_{j})\).
* Finally, compute the RDM similarity \(S(^{X},^{Y})\).

Throughout this paper we will use cosine similarity to compare RDMs. Thus we define:

\[S(,)=[]}{\|\|_{F}\|\|_{F}}=()^{}()}{ ()_{2}() _{2}}\] (1)as the comparison function between any two symmetric matrices \(^{M M}\) and \(^{M M}\).

### Summary of CKA

In machine learning, there has been a swell of recent interest on the topic of comparing neural representations across networks. Popular approaches include centered kernel alignment (CKA; [6; 23]), canonical correlations analysis (CCA; ), and Procrustes shape distance [9; 46].

Of these approaches, CKA is most obviously similar to RDM-RSA. In fact, one can consider CKA to be a special case of RSA that involves computing and comparing _representational similarity matrices_ (RSMs) instead of RDMs. However, both historically and in current practice, RSMs are used considerably less frequently than RDMs by cognitive neuroscientists and psychologists. Thus, I have focused the narrative of this paper on RDM-RSA to construct a foil of CKA.

Before describing the procedure for computing CKA, two definitions must be introduced. First, a **positive definite kernel** function is, informally, a similarity function that, when applied pairwise to a set of \(M\) neural response patterns, is guaranteed to produce a symmetric \(M M\) matrix with nonnegative eigenvalues (i.e. a positive semidefinite matrix). Positive definite kernels are fundamental to modern machine learning theory, and a more deep and formal treatment is provided, for example, by . We will use \(k^{X}\) and \(k^{Y}\) to denote positive definite kernels, and we will see that these functions play an analogous role to the distance/dissimilarity functions \(d^{X}\) and \(d^{Y}\) in RDM-RSA.

Next, the \(M M\)**centering matrix** as is a matrix given by \(=-^{}\) where \(^{M}\) is a vector full of ones. The reader can verify that multiplying any \(M N\) matrix on the left by \(\) results produces another \(M N\) matrix whose columns sum to zero. Furthermore, for a symmetric matrix \(^{M M}\) the centered matrix \(\) has rows and columns that sum to zero. Moreover, \(_{ij}[]_{ij}=0\).

With these definitions in hand, we are ready to state the procedure for computing CKA scores.

**Procedure to compute CKA similarity scores:**

* Given neural responses, \(_{1},,_{M}^{N_{X}}\) and \(_{1},,_{M}^{N_{Y}}\).
* Specify positive definite kernel functions, \(k^{X}\) and \(k^{Y}\).
* Compute kernel matrices, \(^{X}_{ij}=k^{X}(_{i},_{j})\) and \(^{Y}_{ij}=k^{Y}(_{i},_{j})\).
* Compute _centered_ cosine similarity, \(S(^{X},^{Y})\).

The kernel matrices \(^{X}\) and \(^{X}\) in CKA are analogous to the RDMs \(^{X}\) and \(^{Y}\). Furthermore, the kernel matrices are guaranteed to be positive semidefinite (i.e. be symmetric with nonnegative eigenvalues)--this guarantee comes from our definition of positive definite kernel functions, given above. The _centered_ kernel matrices \(^{X}\) and \(^{Y}\) are also positive semidefinite because: _(a)_ the centering matrix, \(\), is positive semidefinite, and _(b)_ positive semidefinite matrices are closed under matrix multiplication.

It may not be entirely obvious to some readers why the entries of \(^{X}\) and \(^{Y}\) should be interpreted as _similarity scores_ between neural population responses. This is due to a result called Mercer's theorem which states, in essence, that any positive definite kernel can be interpreted as an inner product on some feature space (see  for a more rigorous introduction). Inner products are a measure of similarity--they increase as the angle between vectors decreases (i.e. as the vectors become more aligned with each other).

To summarize, there are two major differences between RDM-RSA and CKA. First, in place of RDMs, CKA uses _kernel matrices_\(^{X}_{ij}\) and \(^{Y}_{ij}\) which can be interpreted as \(M M\) representational similarity (instead of dissimilarity) matrices. Second, to quantify similarity between kernel matrices, CKA computes the cosine similarity between _centered_ kernel matrices. This centering step is typically absent in implementations of RSA, which will turn out to be critical.

### Summary of CCA

Canonical correlation analysis (CCA) is a classical multivariate analysis method that identifies a sequence of maximally correlated one-dimensional projections from a pair of datasets . When applying CCA to neural representations, \(_{1},,_{M}^{N_{X}}\) and \(_{1},,_{M}^{N_{Y}}\) as introduced above, the outcome of CCA will be a sequence of \(N\)_canonical correlation coefficients_\(1_{1}_{2}_{N} 0\) where \(N=(N_{X},N_{Y})\). The canonical correlations are defined as the solutions to sequence of optimization problems. The top coefficient, \(_{1}\), is given by:

\[,}{}& _{i}^{}(_{i}-})^{}(_{i}- })\\ &_{i}(^{}(_{i}- }))^{2}=_{i}(^{}(_{i}-}))^{2}=1\] (2)

where \(^{N_{X}}\), \(^{N_{Y}}\) parameterize linear projections, \(}=_{i}_{i}\) denotes the mean neural response for the first system, and \(}=_{i}_{i}\) denotes the mean neural response of the second system. Subsequent canonical correlation coefficients are found by solving the same optimization problem subject to an appropriate orthogonality constraint on the projection vectors. See Eaton  for more detailed background.

Larger canonical correlation coefficients indicate greater alignment between neural representations, and past work in both machine learning [30; 27] and neuroscience [41; 14] has used CCA as a framework for comparing representations across neural systems. The average canonical correlation, \(_{i}_{i}\), and the average squared canonical correlation, \(_{i}_{i}^{2}\), can be used to summarize the overall similarity between two multivariate datasets [47; 30; 46].

Superficially, CCA does not ressemble RSA or CKA. But it turns out that they can be related by a simple change of variables. Specifically, let \(_{X}\) and \(_{Y}\) denote the \(N_{X} N_{X}\) and \(N_{Y} N_{Y}\) covariance matrices across the \(M\) stimulus conditions within each neural system:

\[_{X}=_{i}(_{i}-})(_{i}- {})^{}_{Y}=_{i}(_{i}-})(_{i}-})^{}\] (3)

Then we define a linearly transformed set of responses as:

\[}_{i}=_{X}^{-1/2}_{i} }_{i}=_{Y}^{-1/2}_{i}\] (4)

for \(i=1,,M\). It is common to refer to this change of variables as a _whitening transformation_ (see e.g. ). Note that the whitening transformation assumes that \(_{X}\) and \(_{Y}\) are invertible; it is possible to incorporate regularization into this change of variables and achieve similar results.

The following lemma states that performing linear CKA on the transformed variables yields \(_{i}_{i}^{2}\) as a similarity measure. This was previously noted by Kornblith et al. ; the lemma below is only a slight reformulation of the statement in their paper.

**Lemma 1**.: _When using linear kernel matrices on whitened neural responses, \(_{ij}^{X}=}_{i}^{}}_{j}\) and \(_{ij}^{Y}=}_{i}^{}}_{j}\), the CKA similarity score is equal to the average squared canonical correlation coefficient between \(\{_{1},,_{M}\}\) and \(\{_{1},,_{M}\}\). That is,_

\[S(^{X},^{Y})=_{i}_{i}^{2}\] (5)

We will make use of this relationship in section 3.2 to show that performing RSA with centered squared Mahalanobis RDMs also yields \(_{i}_{i}^{2}\) as a measure of network similarity.

## 3 Results

It is clear that RDM-RSA and CKA are conceptually similar methods, but do they yield quantitatively similar outcomes? I now document several instances where they coincide _exactly_. All of these are special instances of the following result, stated formally below as proposition 1.

**Proposition 1**.: _Let \(k^{X}\) and \(k^{Y}\) be positive definite kernel functions associated with kernel matrices:_

\[^{X}_{ij}=k^{X}(_{i},_{j})^{Y}_{ ij}=k^{Y}(_{i},_{j})\] (6)

_Further, let \(^{X}\) and \(^{Y}\) be RDMs defined in terms of this kernel function:_

\[^{X}_{ij}=^{X}_{ii}+^{X}_{jj}-2^{X}_{ij}^{Y}_{ij}=^{Y}_{ii}+^{Y}_{jj}-2^{Y}_{ij}\] (7)

_Then, the centered cosine similarity scores between these matrices agree:_

\[S(^{X},^{Y})=S(^{X}, {C}^{Y})\] (8)

This result follows from straightforward algebraic manipulations. A step-by-step derivation is provided in appendix A. As mentioned in section 1, equivalences between distance metrics and kernels are already established in the broader literature [34; 4; 37], but they appear to be overlooked, or at least underappreciated, within the context of comparing neural representational geometry.

The rest of this section discusses three specific cases of interest. In each, proposition 1 is used to show a near equivalence between a popular form of RDM-RSA and CKA or CCA.

### Equivalence of Linear CKA and Squared Euclidean RDM-RSA

We first consider RDMs that are constructed using the squared Euclidean distance:

\[^{X}_{ij}=\|_{i}-_{j}\|_{2}^{2}^ {Y}_{ij}=\|_{i}-_{j}\|_{2}^{2}\] (9)

Since \(\|_{i}-_{j}\|_{2}^{2}=_{i}^{}_{i}+_{j}^{ }_{j}-2_{i}^{}_{j}\), we see that eq. (7) implies that the corresponding kernel matrices are given by:

\[^{X}_{ij}=_{i}^{}_{j}^{Y}_{ ij}=_{i}^{}_{j}\] (10)

The kernel function associated with these matrices is called the _linear kernel_, and the CKA score between linear kernel matrices is called _linear CKA_. Proposition 1 implies that performing RSA on the centered RDMs in eq. (9) is an equivalent to performing CKA on the kernel matrices in eq. (10).

We remark that this choice of distance (squared Euclidean) and kernel function (linear) are among the most popular variants of RDM-RSA and CKA, respectively. As of this writing, the squared Euclidean distance is currently the default option for constructing an RDM in the rsatoolbox Python package . Furthermore, recent work has leveraged the mathematical tractability of squared Euclidean RDMs to establish statistical inference frameworks for RSA [36; 8]. Similarly, the predominant form of CKA within the deep learning community uses linear kernels eq. (10). Indeed, the paper popularizing CKA advocated explicitly for using linear kernels as a default choice . Given the popularity of these two methods, it is somewhat surprising that their near equivalence has not been previously documented.

### Equivalence of CCA and Mahalanobis RDM-RSA

Next, we consider RDMs that are constructed by the squared Mahalanobis distance. Formally, let \(_{X}^{N N}\) and \(_{Y}^{N N}\) be two arbitrary positive definite matrices and define:

\[^{X}_{ij}=(_{i}-_{j})^{}^{-1}_{X}(_{i}-_{j})^{Y}_{ij}=(_{i}-_{j})^{}^ {-1}_{Y}(_{i}-_{j}).\] (11)

as two RDMs. To achieve the desired relation in eq. (7), we choose the kernel matrices to be:

\[^{X}_{ij}=_{i}^{}^{-1}_{X}_{j} ^{Y}_{ij}=_{i}^{}^{-1}_{Y}_{j}\] (12)

Proposition 1 implies that performing RSA on the centered RDMs in eq. (11) is an equivalent to performing CKA on the kernel matrices in eq. (12) for any choice of \(_{X}\) and \(_{Y}\).

Moreover, notice that the kernel matrices in eq. (12) can be interpreted as linear kernel matrices under the change of variables \(}_{i}=^{-1/2}_{X}_{i}\) and \(}_{i}=^{-1/2}_{Y}_{i}\). This change of variables corresponds to a whitening transformation when we choose, \(_{X}=_{X}\) and \(_{Y}=_{Y}\) using definitions from eq. (3). Thus, by lemma 1, the CKA score computed from the kernel matrices in eq. (12) is equal to the average squared canonical correlation coefficient. Therefore, by proposition 1, the cosine similarity RSA score computed from the centered RDMs in eq. (11) is also equal to this quantity.

The squared Mahalanobis distance is a popular method for constructing RDMs. It is supported by the rsatoolbox package  and discussed in multiple recent papers [45; 8; 36]. We must mention, however, a key difference between these works and our above analysis with respect to CCA. Typically, Mahalanobis RDMs are motivated by choosing \(_{X}\) to be the covariance of "noise" in the neural response. To follow this motivation, \(_{X}\) and \(_{Y}\) are often set to the covariance matrices computed from residuals of a simple model . The choice of \(_{X}=_{X}\) and \(_{Y}=_{Y}\) was made to elucidate a connection to CCA. This does not capture "noise" per se, as it applies equally well to a complete noiseless, deterministic system (e.g. a feedforward deep network). The choice of \(_{X}=_{X}\) and \(_{Y}=_{Y}\) is nonetheless similar in the sense that one could replace the average neural responses, \(}\) and \(}\) in eq. (3), with a condition-specific model prediction.

### Equivalence of Nonlinear CKA and Topological RSA 

One of the nice features of CKA is that it nicely extends to nonlinear kernel functions. For example, the standard radial basis function (RBF) kernel (also known as the squared exponential kernel) is a positive definite kernel with a tuneable bandwidth parameter, \(\). Using this function leads to the nonlinear kernel matrices:

\[_{ij}^{X}=(-_{i}-_{j}\|_{2}^{2}}{2_{X }^{2}})_{ij}^{Y}=(- _{i}-_{j}\|_{2}^{2}}{2_{Y}^{2}})\] (13)

where we have allowed for the possibility of separating tuning different bandwidth parameters, \(_{X}\) and \(_{Y}\), for each network. Kornblith et al.  briefly commented on using this approach to compute nonlinear CKA similarity scores, but only a few works have seriously followed up on this possibility .

A practitioner may be interested in using nonlinear CKA to achieve a similarity measure between neural representations that have dissimilar _shapes_ but have similar topological features. More precisely, nonlinear CKA using RBF kernel matrices will characterize neural representations as similar when short-range distances between neural responses are preserved, but long-range distances

Figure 1: Nonlinear extensions of CKA and RSA. _(a-b)_ Toy example of neural responses in \(N_{X}=N_{Y}=2\) dimensional space. Different colors correspond to matched stimulus conditions across the two point clouds. _(c-d)_ Linear kernel matrices computed from the representations in panels (a) and (b). The network similarity is 0.595 according to linear CKA. _(e-f)_ Nonlinear kernel matrices using RBF kernel functions with a bandwidth parameters of \(=0.3\). The kernel matrices look more similar and indeed the network similarity score is higher, 0.982, according to this nonlinear extension of CKA. _(g)_ Lin and Kriegeskorte  proposed a nonlinear extension of RSA in which RDMs are transformed elementwise by a monotonically increasing piecewise linear function. _(h)_ When we translate the nonlinear CKA procedure in panels (e-f) into an equivalent RDM-RSA procedure according to proposition 1, we observe that the nonlinear RBF kernel induces a similar “geo-topological transform” on the Euclidean distances between neural responses. The shape of this transform is modulated by the bandwidth parameter, \(\), plotted as different colors.

are potentially quite different. This results in a similarity measure that is mostly insensitive to continuous deformations that do not change the topology such as bending. A toy example where nonlinear CKA succeeds at capturing topological similarities, but linear CKA fails to do so, is shown in Figure 0(a)-f. The idea of developing metrics that capture topological (and not geometric) similarity between neural representations has garnered recent interest within the community, but requires more research to be fully fleshed out and understood .

Interestingly, Lin and Kriegeskorte  recently proposed a nonlinear extension to RDM-RSA that involves applying an monotonic and saturating transform to the elements of an RDM (see Figure 0(g)). They show that this results in similarity measures that are sensitive to topological features of the neural representation. It is easy to see that this procedure is closely related to nonlinear CKA. In particular, the form of the squared exponential kernel means that \(_{ii}^{X}=1\) and \(_{ii}^{Y}=1\) for all \(i=1,,M\). Thus, by eq. (7), the nonlinear RDMs associated with the RBF kernel take the form:

\[_{ij}^{X}=2-2_{ij}^{X}_{ij}^{Y}=2-2_{ij}^{Y}\] (14)

Inspecting these expressions carefully, we realize that \(_{ij}^{X}\) and \(_{ij}^{Y}\) are saturating, monotonically increasing functions of the squared Euclidean distances, \(\|_{i}-_{j}\|_{2}^{2}\) and \(\|_{i}-_{j}\|_{2}^{2}\) respectively. The bandwidth parameter \(^{2}\) controls the steepness of these nonlinear functions, as shown in Figure 0(h).

In summary, a nonlinear kernel can be used to construct a RDM using eq. (7). This construction of an RDM via a nonlinear kernel can be viewed as applying an elementwise nonlinearity to a squared Euclidean RDM (as in eq. 14 for the case of a RBF kernel). By proposition 1, the centered cosine similarity between nonlinearly transformed RDMs will be equivalent to performing nonlinear CKA. Qualitatively, this approach resembles the topological RSA method introduced by Lin and Kriegeskorte .

### RSA on Euclidean RDMs is also a form of nonlinear CKA

Equation (7) shows how we can use a positive definite kernel function to create a notion of distance for which RDM-RSA (with centering and cosine similarity comparison) is equivalent to CKA. It is also possible to go on in the other direction--i.e. we can use a distance function1 to define a positive definite kernel. For instance, consider the possibility of constructing RDMs using a fractional Euclidean distance:

\[_{ij}^{X}=\|_{i}-_{j}\|_{2}^{q} _{ij}^{Y}=\|_{i}-_{j}\|_{2}^{q}\] (15)

where \(0<q 2\) is a user-defined hyperparameter. Of course, when \(q=2\) we recover the squared Euclidean distance, for which RDM-RSA is equivalent to linear CKA. However, the choice of \(q=1\) (i.e. the classic Euclidean distance) is also popular within the RSA literature and it may not be immediately clear how to map this onto a form of CKA.

It turns out that computing the centered RDM-RSA score with the distance matrices in eq. (15) is equivalent to performing CKA on the following kernel matrices (see, e.g., Example 15 in ):

\[_{ij}^{X}=(\|_{i}\|_{2}^{q}+\|_{i}\|_{2}^{ q}-\|_{i}-_{j}\|_{2}^{q})\ \ \ \ \ \ _{ij}^{Y}=(\|_{i}\|_{2}^{q}+\|_{i}\|_{2}^{ q}-\|_{i}-_{j}\|_{2}^{q})\] (16)

Indeed, it is easy to verify that eqs. (15) and (16) satisfy the relationship in eq. (7), which is the main requirement of proposition 1. It is less obvious that the expressions in eq. (16) define positive definite kernels, but it can be shown that they correspond to the covariance function of fractional Brownian motion , which is positive definite. This reduces to classical Brownian motion (or a Wiener process) when \(q=1\), which is a popular choice within RSA literature.

Interestingly, tuning the parameter \(0<q 2\) can result in a family of nonlinear similarity scores similar to the nonlinear RBF kernel with different bandwidth parameters, \(\), that was discussed above in section 3.3. To show this, Figure 2 revisits the toy example shown in Figure 0(a)-b, using fractional Euclidean distance RDMs in place of RBF kernel matrices. Figure 1(a) visualizes the raw RDMs, \(^{X}\) and \(^{Y}\), for various values of \(q\). Qualitatively, we see that these RDMs appear more similar as \(q\) decreases. A similar trend is seen in the centered RDMs, shown in Figure 1(b).

Intuitively, the fractional exponent \(q\) applies an elementwise nonlinearity to the squared Euclidean RDM matrices (Figure 2c), which is similar to the RBF-RDM transform previously highlighted in Figure 2h. In the limit that \(q 0\), the nonlinearity is a step function, equal to one everywhere except zero. Because of this step function behavior, the cosine similarity between centered RDMs will equal one in the limit that \(q 0\) because every RDM will have zeros along the diagonal and ones on the off diagonals. On the other extreme, when \(q=2\), we recover squared Euclidean RDMs, and the resulting RDM-RSA score after centering will be equal to linear CKA. Intermediate values of \(q\) will smoothly interpolate between these outcomes, as shown in Figure 2d.

In summary, this section has shown a new interpretation of RSA with Euclidean RDMs (\(q=1\)) as a form of nonlinear CKA with a kernel function defined by Brownian motion or Wiener process. More generally, one can choose any value of \(0<q<2\), which can be interepreted as a form of nonlinear CKA with a kernel related to fractional Brownian motion. When \(q=2\), we recover linear CKA or squared Euclidean RDM-RSA with centering.

## 4 Importance and Interpretation of Centering

We have seen that the key difference between CKA and commonly used RDM-RSA methods is the presence of the centering operation, \(\) for a symmetric matrix \(\). Beyond deriving an equivalence between CKA and RDM-RSA, are there desirable reasons for this centering operation?

There is a simple justification for centering in the case of linear CKA. Specifically, consider translating the neural responses, \(}_{i}=_{i}+\) and \(}_{i}=_{i}+\) for some arbitrary vectors \(^{N_{X}}\) and \(^{N_{Y}}\). Translating the responses in this manner is akin to choosing a different origin for the coordinate system defining neural responses. It is easy to show that the linear CKA score computed on \(}_{1},}_{M}\) and \(}_{1},}_{M}\) is invariant to the value of \(\) and \(\), while the _uncentered_ cosine similarity is sensitive and can be made arbitrarily close to one. Thus, the centering operation on kernel matrices is necessary if one desires a translation-invariant measure of representational similarity. Readers seeking further intuition should take a closer look at Cortes et al. , who originally introduced the CKA score, and who argue that the centering step is "critical" at length in their paper.

Figure 2: RSA on Euclidean RDMs is a form of nonlinear CKA. _(a)_ RDMs computed from the toy example in Figure 1a-b using fractional Euclidean distance, eq. (15), for various choices of \(0<q 2\). _(b)_ Centered RDM matrices from panel \(a\). By proposition 1, these centered RDMs are equal to negative two times the centered kernel matrices given in eq. (16). _(c)_ The hyperparameter \(q\) can be interpreted as applying an elementwise, monotonically increasing function to the squared Euclidean RDM (similar to the distance induced by the RBF kernel in Figure 1h). _(d)_ The cosine similarity between \(^{X}\) and \(^{Y}\), which is equivalent to the CKA score on the kernel matrices in eq. (16), is plotted as a function of \(q\). When \(q=2\), this converges to the linear CKA score (shown as black dashed line). Smaller values of \(q\) result in higher similarity scores, emphasizing topological similarity between the response patterns in Figure 1a-b.

The intuition behind centering RDMs is different. Unlike linear kernel matrices, the elements of RDMs are already invariant to the translations. That is, \(\|}_{i}-}_{j}\|_{2}^{2}=\|_{i}-_{j} \|_{2}^{2}\) for any transformation of the form \(}_{i}=_{i}+\). On the other hand, because distances are nonnegative, the cosine similarity between uncentered RDMs can be inflated above zero. Incorporating the centering operation results in matrices with positive and negative entries, which intuitively can be "more orthogonal" resulting in cosine similarity scores closer to zero. Figure 3 illustrates this intuition in a simple toy example. Briefly, two neural systems are defined in \(N=2\) dimensions across \(M=3\) stimulus conditions (fig. (a)a). The centered RSA and linear CKA scores are essentially zero, indicating that the two neural systems are maximally dissimilar; however, the uncentered RDM-RSA score is roughly \(1/3\) (fig. (b)b). In fact, these two triangular point configurations (visualized in fig. (c)c) are maximally different shapes, as shown for example in . Thus, in this setting where \(M=3\) conditions and \(N=2\) neural dimensions, uncentered RDM-RSA can only output a similarity score on the interval \([1/3,1]\). Once centering is incorporated, the resulting score, equivalent to CKA, is normalized to lie on \(\).

Applying the centering operation to distance matrices appears to have deeper importance in other contexts. For example, the distance covariance statistic [43; 42], which can be used to test for independence among random variables, is computed from centered distance matrices. One can show that removing the centering step is undesirable--the resulting statistic can fail to detect dependencies among random variables, effectively resulting in false negatives when hypothesis testing for independence. A concrete example of this failure is described in .

Centering is also included in distance covariance analysis , a method that leverages the distance covariance framework for dimensionality reduction. Kernel principal components analysis (kernel PCA) is a similar method to achieve nonlinear dimensionality reduction, and this too typically includes a centering step (see , appendix B). Intuitively, PCA fits a hyperplane passing through the origin to approximate high-dimensional data. Centering around the origin is therefore a sensible and important preprocessing step for this analysis.

Figure 3: Intuition for centering operation on RDMs. **(a)** Explicit example of \(M=3\) neural response vectors in \(N=2\) dimensions. This toy example is illustrated for the rest of this figure. **(b)** Similarity scores for uncentered squared Euclidean RSA (uc-RSA), squared Euclidean RSA with centering (c-RSA), and linear CKA on the example activations given in panel \(a\). Note that c-RSA and CKA give the same numeric value, as expected. Further, CKA and c-RSA are essentially zero, meaning that the two neural representations are “maximally dissimilar.” **(c)** The top panel shows the 2D response vectors for the first system, \(\{_{1},_{2},_{3}\}\). The bottom panel shows the 2D response vectors for the second system, \(\{_{1},_{2},_{3}\}\). Red, green, and blue dots respectively denote the response on the first condition (\(_{1}\) and \(_{1}\)), response on the second condition (\(_{2}\) and \(_{2}\)), and response on the third condition (\(_{3}\) and \(_{3}\)). **(d)** The \(3 3\) squared Euclidean RDMs associated with the two point configurations in panel \(c\). **(e)** The same RDMs in panel \(d\) after the centering operation. Negative entries are colored in blue and positive entries are colored in red.

The centering operation is also applied to squared Euclidean distance matrices in the context of multidimensional scaling . Here, the problem is to reconstruct a set of points, \(_{1},,_{M}\), that are consistent with a given pairwise distance matrix, \(^{X}\). There are of course many solutions to this problem--any valid configuration of points can be freely rotated, reflected, and translated. If the configuration generating the squared distance matrix spans the full space, then one can perform an eigendecomposition of \(^{X}\) to obtain a solution. Specifically, one obtains \(^{X}=^{}\) where \(\) is a matrix with orthogonal columns (scaled eigenvectors). The rows of \(\) are taken as \(M\) points in an \(N_{X}\)-dimensional space, and one can show that they indeed recover the appropriate pairwise Euclidean distance scores. Of course, \(^{}\) is a linear kernel matrix, which is the core insight highlighted in this paper. Gower  remarks that the origin of the configuration will be the centroid of the points (i.e. a centered kernel matrix).

## 5 Conclusion

The contribution of this paper is to document some precise equivalences between two popular frameworks for quantifying representational similarity between neural systems: CKA and RDM-RSA. This was done by exploiting one-to-one relationships between positive kernel functions and distance functions that are already well-established in mathematical literature, tracing back to work by Schoenberg  (for more background, see ). Closely related work has highlighted similar equivalences within in the context of statistical tests for independence . Nonetheless, to my best knowledge, the relationship between CKA and RDM-RSA has not been explicitly spelled out in prior work and is not widely understood by researchers in this area.

Indeed, while conceptual similarities between CKA and RDM-RSA are often acknowledged, they are mostly treated as being distinct methods (e.g. in ). Moreover, CKA and RDM-RSA are preferred by different research communities in machine learning and cognitive neuroscience for historical reasons. By illustrating deeper mathematical connections, I hope to encourage more exchanges and cross-citations between these communities. For example, Cortes et al.  provide a detailed theoretical analysis of CKA including results on bounds on how many sampled stimuli, \(M\), are needed to achieve good estimates. Our analysis shows that these results can be immediately applied to RSA with centered squared Euclidean RDMs. Likewise, our results may also enable statistical frameworks developed for RDM-RSA (e.g. ) to be adapted and applied to CKA-based analysis.

More broadly, the literature on comparing neural representations is complex and federated. A recent review by Klabunde et al.  catalogues over thirty methods for quantifying similarity. It is difficult for practitioners to choose among this large menu of options, many of which give different numerical outputs . Cases where methods are truly identical ought to be widely appreciated and highlighted. Harvey et al.  previously showed that the Procrustes shape distances (advocated by ) are equivalent to the normalized Bures similarity score (advocated in ) up to a monotonic transformation. This paper adds to this list by documenting several additional examples where RSA on centered RDMs coincides with linear CKA, CCA, and nonlinear CKA.

The analyses detailed in this paper focus on deterministic (i.e. noise-free) and static (i.e. non-dynamical) neural representations. This is a limitation, and there is growing interest within the literature to characterize the stochastic  and dynamical  aspects of neural representations. Future work that connects these emerging methodologies to CKA and RSA-based analyses would be of great interest.