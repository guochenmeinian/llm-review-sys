# Probabilistic Exponential Integrators

Nathanael Bosch

Tubingen AI Center, University of Tubingen

nathanael.bosch@uni-tuebingen.de Philipp Hennig

Tubingen AI Center, University of Tubingen

philipp.hennig@uni-tuebingen.de Filip Tronarp

Lund University

filip.tronarp@matstat.lu.se

###### Abstract

Probabilistic solvers provide a flexible and efficient framework for simulation, uncertainty quantification, and inference in dynamical systems. However, like standard solvers, they suffer performance penalties for certain _stiff_ systems, where small steps are required not for reasons of numerical accuracy but for the sake of stability. This issue is greatly alleviated in semi-linear problems by the _probabilistic exponential integrators_ developed in this paper. By including the fast, linear dynamics in the prior, we arrive at a class of probabilistic integrators with favorable properties. Namely, they are proven to be L-stable, and in a certain case reduce to a classic exponential integrator--with the added benefit of providing a probabilistic account of the numerical error. The method is also generalized to arbitrary non-linear systems by imposing piece-wise semi-linearity on the prior via Jacobians of the vector field at the previous estimates, resulting in _probabilistic exponential Rosenbrock methods_. We evaluate the proposed methods on multiple stiff differential equations and demonstrate their improved stability and efficiency over established probabilistic solvers. The present contribution thus expands the range of problems that can be effectively tackled within probabilistic numerics.

## 1 Introduction

Dynamical systems appear throughout science and engineering, and their accurate and efficient simulation is a key component in many scientific problems. There has also been a surge of interest in the intersection with machine learning, both regarding the usage of machine learning methods to model and solve differential equations , and in a dynamical systems perspective on machine learning methods themselves . This paper focuses on the numerical simulation of dynamical systems within the framework of _probabilistic numerics_, which treats the numerical solvers themselves as probabilistic inference methods . In particular, we expand the range of problems that can be tackled within this framework and introduce a new class of stable probabilistic numerical methods for stiff ordinary differential equations (ODEs).

Stiff equations are problems for which certain implicit methods perform much better than explicit ones . But implicit methods come with increased computational complexity per step, as they typically require solving a system of equations. _Exponential integrators_ are an alternative class of methods for efficiently solving large stiff problems . They are based on the observation that, if the ODE has a semi-linear structure, the linear part can be solved exactly and only the non-linear part needs to be numerically approximated. The resulting methods are formulated in an explicit manner and do not require solving a system of equations, while achieving similar or better stability than implicit methods. However, such methods have not yet been formulated probabilistically.

In this paper we develop _probabilistic exponential integrators_, a new class of probabilistic numerical solvers for stiff semi-linear ODEs. We build on the _ODE filters_ which have emerged as an efficient and flexible class of probabilistic numerical methods for general ODEs . They have known convergence rates , which have also been demonstrated empirically , they are applicable to a wide range of numerical differential equation problems , their probabilistic output can be integrated into larger inference problems , and they can be formulated parallel-in-time . But while it has been shown that the choice of underlying Gauss-Markov prior does influence the resulting ODE solver , there has not yet been strong evidence for the utility of priors other than the well-established integrated Wiener process. Probabilistic exponential integrators provide this evidence: in the probabilistic numerics framework, "solving the linear part of the ODE exactly" corresponds to an appropriate choice of prior.

ContributionsOur main contribution is the development of probabilistic exponential integrators, a new class of stable probabilistic solvers for stiff semi-linear ODEs. We demonstrate the close link of these methods to classic exponential integrators in Proposition 1, provide an equivalence result to a classic exponential integrator in Proposition 2, and prove their L-stability in Proposition 3. To enable a numerically stable implementation, we present a quadrature-based approach to directly compute square-roots of the process noise covariance in Section 3.2. Finally, in Section 3.6 we also propose probabilistic exponential Rosenbrock methods for problems in which semi-linearity is not known a priori. We evaluate all proposed methods on multiple stiff problems and demonstrate the improved stability and efficiency of the probabilistic exponential integrators over existing probabilistic solvers.

## 2 Numerical ODE solutions as Bayesian state estimation

Let us first consider an initial value problem with some general non-linear ODE, of the form

\[(t) =f(y(t),t), t[0,T],\] (1a) \[y(0) =y_{0},\] (1b)

with vector field \(f:^{d}^{d}\), initial value \(y_{0}^{d}\), and time span \([0,T]\). Probabilistic numerical ODE solvers aim to compute a posterior distribution over the ODE solution \(y(t)\) such that it satisfies the ODE on a discrete set of points \(=\{t_{n}\}_{n=0}^{N}[0,T]\), that is

\[p(y(t)\ \ y(0)=y_{0},\{(t_{n})=f(y(t_{n}),t_{n})\}_{n=0}^{N} ).\] (2)

We call this quantity, and approximations thereof, a _probabilistic numerical ODE solution_. Probabilistic numerical ODE solvers thus compute not just a single point estimate of the ODE solution, but a posterior distribution which provides a structured estimate of the numerical approximation error.

In the following, we briefly recapitulate the probabilistic ODE filter framework of Schober et al.  and Tronarp et al.  and define the prior, data model, and approximate inference scheme. In Section 3 we build on these foundations to derive the proposed probabilistic exponential integrator.

Figure 1: _Probabilistic numerical ODE solvers with different stability properties. Left_: The explicit EK0 solver with a 3-times integrated Wiener process prior is unstable and diverges from the true solution. _Center_: The semi-implicit EK1 with the same prior does not diverge even though it uses a larger step size, due to it being A-stable, but it exhibits oscillations in the initial phase of the solution. _Right_: The proposed exponential integrator is L-stable and thus does not exhibit any oscillations.

### Gauss-Markov prior

_A priori_, we model \(y(t)\) with a Gauss-Markov process, defined by a stochastic differential equation

\[Y(t)=AY(t)\,t+ B\,W(t), Y(0)=Y_{0},\] (3)

with state \(Y(t)^{d(q+1)}\), model matrices \(A^{d(q+1) d(q+1)},B^{d(q+1) d}\), diffusion scaling \(\), and smoothness \(q\). More precisely, \(A\) and \(B\) are chosen such that the state is structured as \(Y(t)=[Y^{(0)}(t),,Y^{(q)}(t)]\), and then \(Y^{(i)}(t)\) models the \(i\)-th derivative of \(y(t)\). The initial value \(Y_{0}^{d(q+1)}\) must be chosen such that it enforces the initial condition, that is, \(Y^{(0)}(0)=y_{0}\).

One concrete example of such a Gauss-Markov process that is commonly used in the context of probabilistic numerical ODE solvers is the \(q\)-times Integrated Wiener process, with model matrices

\[A_{(d,q)}=0&I_{d}&&0\\ &&&\\ 0&0&&I_{d}\\ 0&0&&0, B_{(d,q)}=0\\ \\ 0\\ I_{d}.\] (4)

Alternatives include the class of Matern processes and the integrated Ornstein-Uhlenbeck process --the latter plays a central role in this paper and will be discussed in detail later.

\(Y(t)\) satisfies linear Gaussian transition densities of the form 

\[Y(t+h) Y(t)((h)Y(t),^{2}Q(h)),\] (5)

with transition matrices \((h)\) and \(Q(h)\) given by

\[(h)=(Ah), Q(h)=_{0}^{h}(h-)BB^{} ^{}(h-)\,.\] (6)

These quantities can be computed with a matrix fraction decomposition . For \(q\)-times integrated Wiener process priors, closed-form expressions for the transition matrices are available .

### Information operator

The likelihood, or data model, of a probabilistic ODE solver relates the uninformed prior to the actual ODE solution of interest with an _information operator_\(\), defined as

\[[Y](t) E_{1}Y(t)-f(E_{0}Y(t),t),\] (7)

where \(E_{i}^{d d(q+1)}\) are selection matrices such that \(E_{i}Y(t)=Y^{(i)}(t)\). \([Y]\) then captures how well \(Y\) solves the given ODE problem. In particular, \(\) maps the true ODE solution \(y\) to the zero function, i.e. \([y] 0\). Conversely, if \([y](t)=0\) holds for all \(t[0,T]\) then \(y\) solves the given ODE. Unfortunately, it is in general infeasible to solve an ODE exactly and enforce \([Y](t)=0\) everywhere, which is why numerical ODE solvers typically discretize the time interval and take discrete steps. This leads to the data model used in most probabilistic ODE solvers :

\[[Y](t_{n})=E_{1}Y(t_{n})-f(E_{0}Y(t_{n}),t_{n})=0, t _{n}[0,T].\] (8)

Note that this specific information operator is closely linked to the IVP considered in Eq. (1a). By defining a (slightly) different data model we can also formulate probabilistic numerical IVP solvers for higher-order ODEs or differential-algebraic equations, or encode additional information such as conservation laws or noisy trajectory observations .

### Approximate Gaussian inference

The resulting inference problem is described by a Gauss-Markov prior and a Dirac likelihood

\[Y(t_{n+1}) Y(t_{n}) (_{n}Y(t_{n}),^{2}Q_{n}),\] (9a) \[Z_{n} Y(t_{n}) (E_{1}Y(t_{n})-f(E_{0}Y(t_{n}),t_{n}) ),\] (9b)

with \(_{n}(t_{n+1}-t_{n})\), \(Q_{n} Q(t_{n+1}-t_{n})\), initial value \(Y(0)=Y_{0}\), discrete time grid \(\{t_{n}\}_{n=0}^{N}\), and zero-valued data \(Z_{n}=0\) for all \(n\). The solution of the resulting non-linear Gauss-Markov regression problem can then be efficiently approximated with Bayesian filtering and smoothing techniques . Notable examples that have been used to construct probabilistic numerical ODE solvers include quadrature filters, the unscented Kalman filter, the iterated extended Kalman smoother, or particle filters . Here, we focus on the well-established extended Kalman filter (EKF). We briefly discuss the EKF for the given state estimation problem in the following.

PredictionGiven a Gaussian state estimate \(Y(t_{n-1})(_{n-1},_{n-1})\) and the linear conditional distribution as in Eq. (9a), the marginal distribution \(Y(t_{n})(_{n}^{-},_{n}^{-})\) is also Gaussian, with

\[_{n}^{-} =_{n-1}_{n-1},\] (10a) \[_{n}^{-} =_{n-1}_{n-1}_{n-1}^{}+^{2}Q_{n-1}.\] (10b)

LinearizationTo efficiently compute a tractable approximation of the true posterior, the EKF linearizes the information operator \(\) around the predicted mean \(_{n}^{-}\), i.e. \([Y](t_{n}) H_{n}Y(t_{n})+b_{n}\),

\[H_{n} =E_{1}-F_{y}E_{0},\] (11a) \[b_{n} =F_{y}E_{0}_{n}^{-}-f(E_{0}_{n}^{-},t_{n}).\] (11b)

An exact linearization with Jacobian \(F_{y}=_{y}f(E_{0}_{n}^{-},t_{n})\) leads to a semi-implicit probabilistic ODE solver, which we call the EK1. Other choices include the zero matrix \(F_{y}=0\), which results in the explicit EK0 solver [40; 21], or a diagonal Jacobian approximation (the DiagonalEK1) which combines some stability benefits of the EK1 with the lower computational cost of the EK0.

Correction stepIn the linearized observation model, the posterior distribution of \(Y(t_{n})\) given the datum \(Z_{n}\) is again Gaussian. Its posterior mean and covariance \((_{n},_{n})\) are given by

\[S_{n} =H_{n}_{n}^{-}H_{n}^{},\] (12a) \[K_{n} =_{n}^{-}H_{n}^{}S_{n}^{-1},\] (12b) \[_{n} =_{n}^{-}-K_{n}(E_{1}_{n}^{-}-f(E_{0}_{n}^{-},t_{n} )),\] (12c) \[_{n} =(I-K_{n}H_{n})_{n}^{-}.\] (12d)

This is also known as the _update_ step of the EKF.

SmoothingTo condition the state estimates on all data, the EKF can be followed by a smoothing pass. Starting with \(_{N}^{S}_{N}\) and \(_{N}^{S}_{n}\), it consists of the following backwards recursion:

\[G_{n} =_{n}_{n}^{}(_{n+1}^{-})^{-1},\] (13a) \[_{n}^{S} =_{n}+G_{n}(_{n+1}^{S}-_{n+1}^{-}),\] (13b) \[_{n}^{S} =_{n}+G_{n}(_{n+1}^{S}-_{n+1}^{-})G_{n}^{}.\] (13c)

ResultThe above computations result in a _probabilistic numerical ODE solution_ with marginals

\[p(Y(t_{i})\ |\ \{E_{1}Y(t_{n})-f(E_{0}Y(t_{n}),t_{n} )=0\}_{n=0}^{N})(_{i}^{S},_ {i}^{S}),\] (14)

which, by construction of the state \(Y\), also contains estimates for the ODE solution as \(y(t)=E_{0}Y(t)\). Since the EKF-based probabilistic solver does not compute only the marginals in Eq. (14), but a full posterior distribution for the continuous object \(y(t)\), it can be evaluated for times \(t\) (also known as "dense output" in the context of ODE solvers); it can produce joint samples from this posterior; and it can be used as a Gauss-Markov prior for subsequent inference tasks [40; 2; 47].

### Practical considerations and implementation details

To improve numerical stability and preserve positive-semidefiniteness of the computed covariance matrices, probabilistic ODE solvers typically operate on square-roots of covariance matrices, defined by a matrix decomposition of the form \(M=^{}\). For example, the Cholesky factor is one possible square-root of a positive definite matrix. But in general, the algorithm does not require the square-roots to be upper- or lower-triangular, or even square. Additionally, we compute the exact initial state \(Y_{0}\) from the IVP using Taylor-mode automatic differentiation [9; 26], we compute smoothing estimates with preconditioning , and we calibrate uncertainties globally with a quasi-maximum likelihood approach [45; 2].

## 3 Probabilistic exponential integrators

In the remainder of the paper, unless otherwise stated, we focus on IVPs with a semi-linear vector-field

\[(t)=f(y(t),t)=Ly(t)+N(y(t),t).\] (15)

Assuming \(N\) admits a Taylor series expansion around \(t\), the variation of constants formula provides a formal expression of the solution at time \(t+h\):

\[y(t+h)=(Lh)y(t)+_{k=0}^{}h^{k+1}_{0}^{1}(Lh(1- ))}{k!}\,^{k}}{ t^{k}}N(y(t),t).\] (16)

This observation is the starting point for the development of _exponential integrators_. By further defining the so-called \(\)-functions

\[_{k}(z)=_{0}^{1}(z(1-))}{(k-1)!}\,,\] (17)

the above identity of the ODE solution simplifies to

\[y(t+h)=(Lh)y(t)+_{k=0}^{}h^{k+1}_{k+1}(Lh)^{k}}{t^{k}}N(y(t),t).\] (18)

In this section we develop a class of _probabilistic exponential integrators_. This is achieved by defining an appropriate class of priors that absorbs the partial linearity, which leads to the integrated Ornstein-Uhlenbeck processes. Proposition 1 below directly relates this choice of prior to the classical exponential integrators. Proposition 2 demonstrates a direct equivalence between the predictor-corrector form exponential trapezoidal rule and the once integrated Ornstein-Uhlenbeck process. Furthermore, the favorable stability properties of classical exponential integrators is retained for the probabilistic counterparts as shown in Proposition 3.

### The integrated Ornstein-Uhlenbeck process

In Section 2.1 we highlighted the choice of the \(q\)-times integrated Wiener process prior, which essentially corresponds to modeling the \((q-1)\)-th derivative of the right-hand side \(f\) with a Wiener process. Here we follow a similar motivation, but only for the non-linear part \(N\). Differentiating both sides of Eq. (15) \(q-1\) times with respect to \(t\) yields

\[^{q-1}}{t^{q-1}}(t)=L^{q-1}} {t^{q-1}}y(t)+^{q-1}}{t^{q-1}}N(y(t),t).\] (19)

Then, modeling \(^{q-1}}{t^{q-1}}N(y(t),t)\) as a Wiener process and relating the result to \(y(t)\) gives

\[y^{(i)}(t) =y^{(i+1)}(t)\,t,\] (20a) \[y^{(q)}(t) =Ly^{(q)}(t)\,t+ I_{d}\,W^{(q)}(t).\] (20b)

This process is also known as the \(q\)-times integrated Ornstein-Uhlenbeck process (IOUP), with rate parameter \(L\) and diffusion parameter \(\). It can be equivalently stated with the previously introduced notation (Section 2.1), by defining a state \(Y(t)\), as the solution of a linear time-invariant (LTI) SDE as in Eq. (3), with system matrices

\[A_{(d,q)}=0&I_{d}&&0\\ &&&\\ 0&0&&I_{d}\\ 0&0&&L, B_{(d,q)}=0\\ \\ 0\\ I_{d}.\] (21)

_Remark 1_ (The mean of the IOUP process solves the linear part of the ODE exactly).: By taking the expectation of Eq. (20b) and by linearity of integration, we can see that the mean of the IOUP satisfies

\[^{(0)}(t)=L^{(0)}(t),^{(0)}(0)=y_{0}.\] (22)

This is in line with the motivation of exponential integrators: the linear part of the ODE is solved exactly, and we only need to approximate the non-linear part. Figure 2 visualizes this idea.

### The transition parameters of the integrated Ornstein-Uhlenbeck process

Since the process \(Y(t)\) is defined as the solution of a linear time-invariant SDE, it satisfies discrete transition densities \(p(Y(t+h) Y(t))=((h)Y(t),^{2}Q(h))\). The following result shows that the transition parameters are intimately connected with the \(\)-functions defined in Eq. (17).

**Proposition 1**.: _The transition matrix of a \(q\)-times integrated Ornstein-Uhlenbeck process satisfies_

\[(h)=A_{(d,q-1)}h&_{12 }(h)\\ 0&(Lh),_{12}(h) h^{q}_{q}(Lh)\\ h^{q-1}_{q-1}(Lh)\\ \\ h_{1}(Lh).\] (23)

Proof in Appendix A. Although Proposition 1 indicates that \((h)\) may be computed more efficiently than by calling a matrix-exponential on a \(d(q+1) d(q+1)\) matrix, this is known to be numerically less stable . We therefore compute \((h)\) with the standard matrix-exponential formulation.

Directly computing square-roots of the process noise covarianceNumerically stable probabilistic ODE solvers require a square-root, \(\), of the process noise covariance rather than the full matrix, \(Q(h)\). For IWP priors this can be computed from the closed-form representation of \(Q(h)\) via an appropriately preconditioned Cholesky factorization . However, for IOUP priors we have not found an analogous method that works reliably. Therefore, we compute \(\) directly with numerical quadrature. More specifically, given a quadrature rule with nodes \(_{i}[0,h]\) and positive weights \(w_{i}>0\), the integral for \(Q(h)\) given in Eq. (6) is approximated by

\[Q(h)_{i=1}^{m}w_{i}(A(h-_{i}))BB^{}(A^{}(h- _{i}))=:_{i=1}^{m}M_{i},\] (24)

with square-roots \(}=}(A(h-_{i}))B\) of the summands, which is well-defined since \(w_{i}>0\). We can thus compute a square-root representation of the sum with a QR-decomposition

\[X R=([}^{-}} ]^{}).\] (25)

We obtain \(Q(h) R^{}R\), and therefore an approximate square-root factor is given by \( R^{}\). Similar ideas have previously been employed for time integration of Riccati equations . We use this quadrature-trick for all IOUP methods, with Gauss-Legendre quadrature on \(m=q\) nodes.

### Linearization and correction

The information operator of the probabilistic exponential integrator is defined exactly as in Section 2.2. But since we now assume a semi-linear vector-field \(f\), we have an additional option for the linearization: instead of choosing the exact \(F_{y}=_{y}f\) (EX1) or the zero-matrix \(F_{y}=0\) (EX0), a cheap approximate Jacobian is given by the linear part \(F_{y}=L\). We denote this approach by EKL. This is chosen as the default for the probabilistic exponential integrator. Note that the EKL approach can also be combined with an IWP prior, which will be serve as an additional baseline in the Section 4.

Figure 2: _Damped oscillator dynamics and priors with different degrees of encoded information. Left:_ Once-integrated Wiener process, a popular prior for probabilistic ODE solvers. _Center_: Once-integrated Ornstein–Uhlenbeck process (IOUP) with rate parameter chosen to encode the known linearity of the ODE. Right: IOUP with both the ODE information and a specified initial value and derivative. This is the kind of prior used in the probabilistic exponential integrator.

### Equivalence to the classic exponential trapezoidal rule in predict-evaluate-correct mode

Now that the probabilistic exponential integrator has been defined, we can establish an equivalence result to a classic exponential integrator, similarly to the closely-related equivalence statement by Schober et al. [40, Proposition 1] for the non-exponential case.

**Proposition 2** (Equivalence to the PEC exponential trapezoidal rule).: _The mean estimate of the probabilistic exponential integrator with a once-integrated Ornstein-Uhlenbeck prior with rate parameter \(L\) is equivalent to the classic exponential trapezoidal rule in predict-evaluate-correct mode, with the predictor being the exponential Euler method. That is, it is equivalent to the scheme_

\[_{n+1} =_{0}(Lh)y_{n}+h_{1}(Lh)N(_{n}),\] (26a) \[y_{n+1} =_{0}(Lh)y_{n}+h_{1}(Lh)N(_{n})+h^{2} _{2}(Lh)_{n+1})-N(_{n})}{h},\] (26b)

_where Eq._26a _corresponds to a prediction step with the exponential Euler method, and Eq._26b _corresponds to a correction step with the exponential trapezoidal rule._

The proof is given in Appendix B. This equivalence result provides another theoretical justification for the proposed probabilistic exponential integrator. But note that the result only holds for the mean, while the probabilistic solver computes additional quantities in order to track the solution uncertainty, namely covariances. These are not provided by a classic exponential integrator.

### L-stability of the probabilistic exponential integrator

When solving stiff ODEs, the actual efficiency of a numerical method often depends on its stability. One such property is _A-stability_: It guarantees that the numerical solution of a decaying ODE will also decay, independently of the chosen step size. In contrast, explicit methods typically only decay for sufficiently small steps. In the context of probabilistic ODE solvers, the \(\) is considered to be explicit, but the \(\) with IWP prior has been shown to be A-stable . Here, we show that the probabilistic exponential integrator satisfies the stronger _L-stability_: the numerical solution not only decays, but it decays _fast_, i.e. it goes to zero as the step size goes to infinity. Figure1 visualizes the different probabilistic solver stabilities. For formal definitions, see for example [27, Section 8.6].

**Proposition 3** (L-stability).: _The probabilistic exponential integrator is L-stable._

The full proof is given in Appendix C. The property essentially follows from Remark1 which stated that the IOUP solves linear ODEs exactly. This implies fast decay and gives L-stability.

### Probabilistic exponential Rosenbrock-type methods

We conclude with a short excursion into exponential Rosenbrock methods : Given a non-linear ODE \((t)=f(y(t),t)\), exponential Rosenbrock methods perform a continuous linearization of the right-hand side \(f\) around the numerical ODE solution and essentially solve a sequence of IVPs

\[(t) =J_{n}y(t)+(f(y(t),t)-J_{n}y(t)), t[t_{n},t_{n +1}],\] (27a) \[y(t_{n}) =y_{n},\] (27b)

where \(J_{n}\) is the Jacobian of \(f\) at the numerical solution estimate \((t_{n})\). This approach enables exponential integrators for problems where the right-hand side \(f\) is not semi-linear. Furthermore, by automatically linearizing along the numerical solution the linearization can be more accurate, the Lipschitz-constant of the non-linear remainder becomes smaller, and the resulting solvers can thus be more efficient than their globally linearized counterparts .

This can also be done in the probabilistic setting: By linearizing the ODE right-hand side \(f\) at each step of the solver around the filtering mean \(E_{0}_{n}\), we (locally) obtain a semi-linear problem. Then, updating the rate parameter of the integrated Ornstein-Uhlenbeck process at each step of the numerical solver results in _probabilistic exponential Rosenbrock-type methods_. As before, the linearization of the information operator can be done with any of the \(\), \(\), or \(\). But since here the prediction relies on exact local linearization, we will by default also use an exact \(\) linearization. The resulting solver and its stability and efficiency will be evaluated in the following experiments.

Experiments

In this section we investigate the utility and performance of the proposed probabilistic exponential integrators and compare it to standard non-exponential probabilistic solvers on multiple ODEs. All methods are implemented in the Julia programming language , with special care being taken to implement the solvers in a numerically stable manner, that is, with exact state initialization, preconditioned state transitions, and a square-root implementation . Reference solutions are computed with the DifferentialEquations.jl package . All experiments run on a single, consumer-level CPU. Code for the implementation and experiments is publicly available on GitHub.1

### Logistic equation with varying degrees of non-linearity

We start with a simple one-dimensional initial value problem: a logistic model with negative growth rate parameter \(r=-1\) and carrying capacity \(K_{+}\), of the form

\[(t) =-y(t)+y(t)^{2}, t,\] (28a) \[y(0) =1.\] (28b)

The non-linearity of this problem can be directly controlled through the parameter \(K\). Therefore, this test problem lets us investigate the IOUP's capability to leverage known linearity in the ODE.

We compare the proposed exponential integrator to all introduced IWP-based solvers, with different linearization strategies: EKO approximates \(_{y}f 0\) (and is thus explicit), EKL approximates \(_{y}f-1\), and EKL linearizes with the correct Jacobian \(_{y}f\). The results for four different values of \(K\) are shown in Fig. 3. The explicit solver shows the largest error of all compared solvers, likely due to its lacking stability. On the other hand, the proposed exponential integrator behaves as expected: the IOUP prior is most beneficial for larger values of \(K\), and as the non-linearity becomes more pronounced the performance of the IOUP approaches that of the IWP-based solver. Though for large step sizes, the IOUP outperforms the IWP prior even for the most non-linear case with \(K=10\).

### Burger's equation

Here, we consider Burger's equation, which is a semi-linear partial differential equation (PDE)

\[_{t}u(x,t)=D_{x}^{2}u(x,t)-u(x,t)_{x}u(x,t), x , t,\] (29)

with diffusion coefficient \(D_{+}\). We transform the problem into a semi-linear ODE with the method of lines [29; 38], and discretize the spatial domain on \(250\) equidistant points and approximate the differential operators with finite differences. The full IVP specification, including all domains, initial and boundary conditions, and additional information on the discretization, is given in Appendix D.

The results shown in Fig. 4 demonstrate the different stability properties of the solvers: The explicit EK0 with IWP prior is unable to solve the IVP for any of the step sizes due to its insufficient stability, and even the A-stable EK1 and the more approximate EKL require small enough steps \( t<10^{-1}\). On the other hand, both exponential integrators are able to compute meaningful solutions for a larger range of step sizes. They both achieve lower errors for most settings than their non-exponential

Figure 3: _The IOUP prior is more beneficial with increasing linearity of the ODE._ In all three examples, the IOUP-based exponential integrator achieves lower error while requiring fewer steps than the IWP-based solvers. This effect is more pronounced for the more linear ODEs.

counterparts. The second diagram in Fig. 4 compares the achieved error to the number of vector-field evaluations and points out a trade-off between both exponential methods: Since the Rosenbrock method additionally computes two Jacobians (with automatic differentiation) per step, it needs to evaluate the vector-field more often than the non-Rosenbrock method. Thus, for expensive-to-evaluate vector fields the standard probabilistic exponential integrator might be preferable.

### Reaction-diffusion model

Finally, we consider a discretized reaction-diffusion model given by a semi-linear PDE

\[_{t}u(x,t)=D_{x}^{2}u(x,t)+R(u(x,t)), x, t [0,T],\] (30)

where \(D_{+}\) is the diffusion coefficient and \(R(u)=u(1-u)\) is a logistic reaction term . A finite-difference discretization of the spatial domain transforms this PDE into an IVP with semi-linear ODE. The full problem specification is provided in Appendix D.

Figure 5 shows the results. We again observe the improved stability of the exponential integrator variants by their lower error for large step sizes, and they outperform the IWP-based methods on all settings. The runtime-evaluation in Fig. 5 also visualizes another drawback of the Rosenbrock-type method: Since the problem is re-linearized at each step, the IOUP also needs to be re-discretized and thus a matrix exponential needs to be computed. In comparison, the non-Rosenbrock method only discretizes the IOUP prior once at the start of the solve. This advantage makes the non-Rosenbrock probabilistic exponential integrator the most performant solver in this experiment.

## 5 Limitations

The probabilistic exponential integrator shares many properties of both classic exponential integrators and of other filtering-based probabilistic solvers. This also brings some challenges.

Figure 4: _Benchmarking probabilistic ODE solvers on Burger’s equation._ Exponential and non-exponential probabilistic solvers are compared on Burger’s equation (a) in two work-precision diagrams (b). Both exponential integrators with IOUP prior achieve lower errors than the existing IWP-based solvers, in particular for large steps. This indicates their stronger stability properties.

Figure 5: _Benchmarking probabilistic ODE solvers on a reaction-diffusion model._ Exponential and non-exponential probabilistic solvers are compared on a reaction-diffusion model (a) in two work-precision diagrams (b). The proposed exponential integrators with IOUP prior achieve lower errors per step size than the existing IWP-based methods. The runtime comparison shows the increased cost of the Rosenbrock-type (RB) method, while the non-Rosenbrock probabilistic exponential integrator performs best in this comparison.

Cost of computing matrix exponentialsThe IOUP prior is more expensive to discretize than the IWP as it requires computing a matrix exponential. This trade-off is well-known also in the context of classic exponential integrators. One approach to reduce computational cost is to compute the matrix exponential only approximately , for example with Krylov-subspace methods [13; 17]. Extending these techniques to the probabilistic solver setting thus poses an interesting direction for future work.

Cubic scaling in the ODE dimensionThe probabilistic exponential integrator shares the complexity most (semi-)implicit ODE solvers: while being linear in the number of time steps, it scales cubically in the ODE dimension. By exploiting structure in the Jacobian and in the prior, some filtering-based ODE solvers have been formulated with linear scaling in the ODE dimension . But this approach does not directly extend to the IOUP-prior. Nevertheless, exploiting known structure could be particularly relevant to construct solvers for specific ODEs, such as certain discretized PDEs.

## 6 Conclusion

We have presented probabilistic exponential integrators, a new class of probabilistic solvers for stiff semi-linear ODEs. By incorporating the fast, linear dynamics directly into the prior of the solver, the method essentially solves the linear part exactly, in a similar manner as classic exponential integrators. We also extended the proposed method to general non-linear systems via iterative re-linearization and presented probabilistic exponential Rosenbrock-type methods. Both methods have been shown both theoretically and empirically to be more stable than their non-exponential probabilistic counterparts. This work further expands the toolbox of probabilistic numerics and opens up new possibilities for accurate and efficient probabilistic simulation and inference in stiff dynamical systems.