# Learning to Understand:

Identifying Interactions via the Mobius Transform

Justin Singh Kang

UC Berkeley

justin_kang@berkeley.edu

&Yigit Efe Erginbas

UC Berkeley

erginbas@berkeley.edu

&Landon Butler

UC Berkeley

landonb@berkeley.edu

&Ramtin Pedarsani

UC Santa Barbara

ramtin@ece.ucsb.edu

&Kannan Ramchandran

UC Berkeley

kannanr@berkeley.edu

###### Abstract

One of the key challenges in machine learning is to find interpretable representations of learned functions. The Mobius transform is essential for this purpose, as its coefficients correspond to unique _importance scores_ for _sets of input variables_. This transform is closely related to widely used game-theoretic notions of importance like the _Shapley_ and _Bhanzaf value_, but it also captures crucial higher-order interactions. Although computing the Mobius Transform of a function with \(n\) inputs involves \(2^{n}\) coefficients, it becomes tractable when the function is _sparse_ and of _low degree_ as we show is the case for many real-world functions. Under these conditions, the complexity of the transform computation is significantly reduced. When there are \(K\) non-zero coefficients, our algorithm recovers the Mobius transform in \(O(Kn)\) samples and \(O(Kn^{2})\) time asymptotically under certain assumptions, the first non-adaptive algorithm to do so. We also uncover a surprising connection between group testing and the Mobius transform. For functions where all interactions involve at most \(t\) inputs, we use group testing results to compute the Mobius transform with \(O(Kt n)\) sample complexity and \(O(K(n))\) time. A robust version of this algorithm withstands noise and maintains this complexity. This marks the first \(n\) sub-linear query complexity, noise-tolerant algorithm for the Mobius transform. In several examples, we observe that representations generated via sparse Mobius transform are up to twice as faithful to the original function, as compared to Shapley and Banzhaf values, while using the same number of terms.

## 1 Introduction

As machine learning models become increasingly complex, our ability to interpret them has not kept pace. A natural question to ask is: What is the most fundamental interpretable representation of the functions we learn? The Shapley value , a concept from cooperative game theory, has become a popular way to interpret model predictions  by assigning importance scores to individual inputs such as features, data samples or tokens. This value represents the weighted average marginal contribution of an input, quantifying the change in the function's output when that input is included. Recent research has expanded the scope of interpretability to encompass sets of inputs , capturing the collective influence of input combinations and their synergies on model predictions. Central to this advancement is the Mobius Transform , a mathematical transformation that projects functions onto a fundamental interpretable basis known in game theory as the _unanimity function basis_.

The Mobius transform has a more powerful and nuanced explanation capability than the Shapley value. Consider a sentiment analysis model (BERT  fine-tuned on the IMDB dataset ) explainedusing both Shapley values and the Mobius transform as depicted in Fig. 1. The model's objective is to classify the sentiment of the review as positive or negative. The Mobius transform assigns a score to all word subsets within a sentence. For instance, in the sentence "Her acting never fails to impress" each subset of words is evaluated--positive interactions receive positive scores, and negative interactions, negative scores. Summing these scores yields the overall sentiment \(+0.98\). This granular analysis reveals the model's understanding of linguistic constructs like double negatives, as seen in the interaction between _never_ and _fails_, and the inherent positivity of words like _impress_. When the word _never_ is masked, interactions involving never are excluded, shifting the sentiment negatively to \(-0.96\).

This level of detail is not readily available with the Shapley value, which assigns scores to individual words without considering their interplay. The value of the Mobius transform is apparent, but given its complex structure, is it possible to compute efficiently?

In general, to compute a Mobius transform over \(n\) features requires \(2^{n}\) inferences (masking over all \(2^{n}\) subsets of features), as well as \(n2^{n}\) time using a divide-and-conquer approach similar to that of the Fast Fourier Transform (FFT) algorithm. GPT-4 currently supports in the range of \(8000\) words-per-prompt, and context length will continue to grow with new architectures . Running inference \(2^{8000}\) times is not even close to possible, and even if you could, \(2^{8000}\) coefficients are hardly interpretable! In Fig. 1 we see that many coefficients are _insignificant_. This is typical. The solution to the computational problem is to just focus on computing the largest Mobius interactions and ignore the small ones. Is this possible in a systematic way? Yes--assuming that only \(K\) Mobius coefficients (which \(K\) values are significant is unknown) are non-zero, our algorithm enables us to intelligently query the model to significantly reduce the number of samples of that are required to \(O(Kn)\) with \(O(Kn^{2})\) time. We also explore the regime where the non-zero interactions occur between at most \(t\) inputs, with \(t n\), showing that only \(O(Kt(n))\) samples are required in \(O(K(n))\) time. We also have a robust algorithm that allows for some noise in the sampling process, effectively relaxing the constraint that the insignificant coefficients are exactly zero while maintaining the same complexities.

Defining the Mobius TransformWe define a value function for a model with \(n\) inputs across subsets \(S[n]\) denoted as \(f(S)\). The construction of this function varies based on the model: in Fig. 1, words not in \(S\) might be masked or omitted. In other cases, we might take a conditional expectation over words not in \(S\). To facilitate later discussion on group testing, we express the function as \(f:_{2}^{n}\), where \(f(S)=f()\) with \(S=\{i:m_{i}=1\}\). The relationship between \(f:_{2}^{n}\)

Figure 1: The movie review “Her acting never fails to impress” is passed into a BERT language model fine-tuned to do sentiment analysis . Presented are \(1^{st}\), \(2^{nd}\) and \(3^{rd}\) order Möbius coefficients, with positive interactions in green and negative in red computed via (1). The coefficients explain how groups of words influence BERT’s perception of sentiment. For instance, while _never_ and _fails_ have strong negative sentiments individually, when combined, they impose a profound positive sentiment. In the second row, the word _never_ is deleted, resulting in a large change in sentiment. In contrast, the Shapley values of each word \(()\), presented at the bottom of the figure, are less informative.

and its Mobius transform \(F:_{2}^{n}\) is characterized by the forward and inverse transforms:

\[ f()=_{}F(),  F()=_{}(-1)^{ ^{}(-)}f(),\] (1)

where \(\) means that \(k_{i} m_{i}\)\( i\). This transform acts as a bridge, connecting various importance metrics, which can be expressed as projections onto a subset of the Mobius basis. The Shapley value \((i)\) and Banzhaf value \((i)\) for feature \(i\) is elegantly represented within this framework:

\[(i)=_{:k_{i}=1}|}F(), (i)=_{:k_{i}=1}|-1}}F( ).\] (2)

These relationships are foundational to the definition of the Shapley and Bhanzaf values themselves. The left equality appears as Eq. 10 in Lloyd Shapley's original report from 1952  where the concept of Shapley value was first introduced and is central to his derivation of a closed-form expression.

### Related Works and Applications

This work is inspired by the literature on sparse Fourier transforms, which began with [10; 11; 12]. The sparse Boolean Fourier (Hadamard) transform [13; 14] is most relevant.

**Group Testing** This manuscript establishes a strong connection between the interaction identification problem and group testing . Group testing was first described by Dorfman , who noted that when testing soldiers for syphilis, pooling blood samples from many soldiers, and testing the pooled blood samples reduced the total number of tests needed.  is the first work to exploit group testing in a feature selection/importance problem, using a group testing matrix in their algorithm.  also mentions group testing in relation to Shapley values.

**Mobius Transform** Mobius transforms  have been studied in the pseudo-Boolean (set) function literature, and dates back to at least .  develops a framework for computing sparse transforms of pseudo-Boolean functions. They do not directly consider the Mobius transform as we define it, but one can apply their algorithm to compute a \(K\) sparse transform in \(O(nK)\)_adaptive_ samples and \(O(K^{2}n)\) time. In the sparse and noiseless setting, our algorithm improves on this by being fully non-adaptive and having lower time complexity in most non-trivial settings.  does not consider the important low degree setting and does not consider robustness to noise (approximate sparsity), which are critical aspects of this work. In , the authors show that a classifier satisfying certain properties can be well represented by a sparse and low degree Mobius transform.

**Explainability** proposes model explanation via pseudo-Boolean functions approximated by Shapley values, effectively utilizing only first-order Mobius coefficients. Constructing these functions, [22; 23; 24; 25] especially for generative models with complex outputs [26; 27; 28], is an ongoing research area.  presents the Taylor-Shapley interaction index (STII), scoring interactions up to size \(t\). For sets smaller than \(t\), STII are exactly Mobius coefficients.  introduces the Faithful Shapley Interaction index (FSI), which computes scores via projection onto up to \(t^{th}\) order Mobius coefficients.  develops methods for computing FSI, STII, and other interaction indices. The relationship between the Mobius transform, FSI, STII, Shapley value, and Banzhaf value is detailed in Appendix A.

**Data Valuation** In data valuation  the goal is to assign an importance score to data, either to determine a fair price  or to curate a more efficient dataset . A feature of this problem is the high cost of getting a sample since we need to determine the accuracy of our model when trained on different subsets of data, making sample complexity of critical importance. [32; 33] try to approximate this by looking at the accuracy of partially trained models, though this introduces sampling noise.

### Main Contributions

Our algorithm and proofs are deeply _interdisciplinary_, and the contributions of this paper are theoretical. We use modern ideas spanning across signal processing, algebra, coding and information theory, and group testing to address the important problem of interpretability at the forefront of machine learning. The main contributions of this manuscript are:

* For a function with \(K\) non-zero Mobius coefficients chosen uniformly at random, the Sparse Mobius Transform (SMT) algorithm exactly recovers the transform \(F\) in \(O(Kn)\) samples and \(O(Kn^{2})\) time in the limit as \(n\) with \(K\) growing at most as \(2^{n}\) with \(\).

* We develop a formal connection with _group testing_ and present a variant of SMT that works when all non-zero interactions are low order. If the maximum order of interaction is \(t=(n^{})\) where \(<0.409\) then we can compute the Mobius transform in \(O(Kt(n))\) samples in \(O(K(n))\) time with error going to zero as \(n\) with growing \(K\).
* Using robust group testing, we develop an algorithm that, under certain assumptions, computes the Mobius transform in \(O(Kt(n))\) samples, with vanishing error as \(n\) with growing \(K\).

In addition to our asymptotic analysis, we provide synthetic and real-world experiments that verify that our algorithm performs well even in the finite \(n\) regime. Furthermore, our results are _non-adaptive_ meaning that all samples can be computed in parallel. Code has been made publicly available 1.

NotationLowercase boldface \(\) and uppercase boldface \(\) denote vectors and matrices respectively. \(\) means that \(x_{i} y_{i}\  i\). Multiplication is always standard real field multiplication, but **addition between two elements in \(_{2}\) should be interpreted as a logical OR \(\)**. We define subtraction, of \(-\) for \(\) by standard real field subtraction. \(}\) corresponds to bit-wise negation for Boolean \(\), and \(\) represents an element-wise multiplication.

## 2 Understanding Assumptions: Sparsity and Low Degree

Computing the forward transform (1) typically requires sampling all \(2^{n}\) input combinations, an infeasible task, even for modest \(n\). For an arbitrary \(f\), one cannot do any better. In fact, the same is true of the Shapley value, yet, computational tools like SHAP  exist because practical functions of interest are _not arbitrary_. To help understand this, we define _faithfulness_ for an explanation model \(\):

\[R^{2}=1-\|-f\|^{2}/\|f\|^{2},\| f\|^{2}=_{_{2}^{n}}f()^{2}.\] (3)

Note that this corresponds to the standard definition of \(R^{2}\) in statistics when \(f\) is zero-mean, and we generally define \(f\) such that this is the case. A good explanation model should have a high \(R^{2}\)

Figure 2: These plots are strong indicators that sparsity and low degree assumptions are worthy of consideration. We consider three different learning tasks. The left-most plot shows results from an XGBoost  model used for breast cancer diagnosis. The middle plot shows results from word-level sentiment analysis task using a BERT model  like in Fig. 1. The right-most plot shows results from a multiple choice question and answer task also using a BERT model . Error bars represent standard deviation over 10 different instances. Details for each setting are in Appendix B. In all cases, the number of features \(n 20\), for which it is possible to perform the full Möbius transform. On the top row, we plot achievable faithfulness \(R^{2}\) as a function of sparsity. We observe that in _all_ cases, faithfulness approaching \(1\) requires only a few thousand Möbius coefficients, motivating our sparsity assumption. The bottom row of plots considers achievable faithfulness vs. degree, i.e., what \(R^{2}\) can be achieved using only Möbius coefficients \(\) up to a given degree. Here we observe that in nearly all cases, low degree coefficients suffice to get quite small \(R^{2}\), motivating our low degree assumption.

a succinct representation, and most importantly, be easily computed. For the Mobius transform, we aim to learn coefficients \(()\) efficiently and construct \(\) using the inverse transform (1). With no restrictions on \(()\) we can achieve \(R^{2}=1\), but this fails to meet our simplicity criterion. Fortunately, many real-world functions are _sparse_--only a few \(()\) coefficients need to be non-zero to yield \(R^{2} 1\). Fig. 2 considers three machine learning models for breast cancer diagnosis, sentiment analysis, and question answering respectively. In all three cases, we find that we only need a small number of Mobius coefficients to achieve \(R^{2} 1\). Furthermore, real-world functions are _low degree_, such that those small number of non-zero coefficients satisfy \(|| t\) for some small \(t\). This results in a much more compact representation and as we shall see, also enables efficient computation.

Fig. 2 validates our assumption for the deep-learning models mentioned above. Prior research , have presented empirical and theoretical evidence that sparsity and low degree properties are common in well-trained models. Further investigation of the spectral properties of explanation functions could be a promising avenue for future research. Our formal statements of assumptions are given below:

**Assumption 2.1**.: (\(K\) Uniform Interactions) \(f:_{2}^{n}\) has a Mobius transform of the following form: \(_{1},,_{K}\) are sampled uniformly at random from \(_{2}^{n}\), and have \(F(_{i}) 0,\  i[K]\), but \(F()=0\) for all other \(_{2}^{n}\).

**Assumption 2.2**.: (\(K\)\(t\)-Degree Interactions) \(f:_{2}^{n}\) has a Mobius transform of the following form: \(_{1},,_{K}\) are sampled uniformly from \(\{:|| t,_{2}^{n}\}\), and have \(F(_{i}) 0,\  i[K]\), but \(F()=0\) other \(_{2}^{n}\).

**Assumption Limitations** By assuming that the non-zero coefficients are uncorrelated and uniformly distributed, we aim to understand the _fundamental difficulty_ in learning a sparse Mobius transform. Correlation between non-zero coefficients means identifying one coefficient would tell us information about the locations of the others, which can be further exploited. The existence of a scheme that works well under the uniform setting suggests that it is possible to solve the problem where correlations between interactions exist. We also consider _exact_ sparsity in our assumptions. In practice, these "zero" coefficients may instead have some small magnitude. We investigate this in Section 4.

## 3 Algorithm Overview

### Subsampling and Aliasing

First we perform functional _subsampling_: For some \(b<n\) we construct \(u\) according to

\[u()=f(_{}),\ \ _{2}^{b},\ \ _{}_{2}^{n},\] (4)

where we have the freedom to choose \(_{}\). Critically, the Mobius transform of \(u\), denoted \(U\), is related to \(F\) via the well-known signal processing phenomenon of _aliasing_:

\[U()=_{()}F(),\] (5)

where \(()\) corresponds to an _aliasing set_ determined by \(_{}\). Fig. 3 shows this subsampling procedure on a "sparsified" version of our sentiment analysis example using different \(_{}\). Our goal is to choose \(_{}\) such that the non-zero values of \(F()\) are uniformly spread across the aliasing sets, since that makes them easier to recover. If only a single \(\) with non-zero \(F()\) ends up in an aliasing set \(()\), we call it a _singleton_. In Fig. 3, our first subsampling generated two singletons, while our second one generated only one. Maximizing the number of singletons is one of our goals since we can ultimately use those singletons to construct the Mobius transform. In this work, we have determined two different subsampling procedures that perform well under our two assumptions:

[MISSING_PAGE_FAIL:6]

\(c=1,,C\). Each time, we get different aliasing sets \(_{c}()\) resulting in different singletons, and thus find different \(\) with non-zero \(F()\). While this approach works, a better approach is to combine this idea with _message passing_ to use known non-zero indices and values \((,F())\) to resolve these multitoms and turn them into singletons. The type of message passing algorithm we use is called _graph peeling_. The aliasing structure can be represented as a bipartite graph. Each \(U_{c}()\) is a _check node_, and each non-zero coefficient \(F()\) is a _variable node_. The variable node \(F()\) is connected to the check node \(U_{c}()\) if \(_{c}=\). Fig. 4 constructs this bipartite graph for the aliasing in Fig. 3. Note that \(U_{1}(11)=F(_{2})+F(_{4})\) is a multiton; however, in the other sub-sampling group \(U_{2}(01)=F(_{4})\) is a singleton. Once we resolve \(U_{2}(01)\), we can simply subtract \(F(_{4})\) from \(U_{1}(11)\), allowing us to create a new singleton, and extract \(F(_{2})\). The remaining values of \(F\) both appear as singletons in the first sampling group, so we can resolve all \(4\) non-zero interactions \(F\) with only \(8\) (7 unique) samples. Peeling algorithms were popularized in information and coding theory for decoding fountain codes  and have since been applied to variety of applications in communications  and signal processing [13; 40]. They can be analyzed using density evolution theory , which we also use as part of our proof.

## 4 Singleton Detection and Identification

We have discussed how to subsample efficiently to maximize singletons and how to use message passing to recover as many coefficients as possible. Now we discuss (1) how to identify singletons and (2) how to determine the \(^{*}\) corresponding to the singleton. The following result is key:

**Lemma 4.1**.: _Consider \(_{2}^{b n}\), and \(f:_{2}^{n}\), and some \(_{2}^{n}\). If \(U\) is the Mobius transform of \(u\), and \(F\) is the Mobius transform of \(f\) we have:_

\[u()=f(^{}+})\ \ U()=_{} =}F().\] (6)

The proof can be found in Appendix C.4. The form of (6) allows us to shrink the aliasing set in a controlled way. Define \(_{c,0}:=_{n}\), and \(_{c}_{2}^{P n}\) for some \(P>0\). The \(i^{}\) row of \(_{c}\) is denoted \(_{c,p}\), \(p=1,P\). Using these vectors, we construct \(C(P+1)\) different subsampled functions \(u_{c,p}\):

\[u_{c,p}()=f(_{c}^{} +_{c,p}}),\ _{2}^{b}.\] (7)

We compute the Mobius transform of each \(u_{c,p}\) denoted by \(U_{c,p}\) and construct a vector-valued function \(_{c}():=[U_{c,0}(),,U_{c,P}()]^{ }\). The goal of singleton detection is to identify when \(_{c}()\) reduces to a single term, and for what value \(\) that term corresponds to. To do so, we define the \(()\):

1. \((_{c}())=_{Z}\) denotes a _zeroton_, for which there does not exist \(F() 0\) s.t. \(=\).
2. \((_{c}())=_{S}( ,F())\) denotes a _singleton_ with only one \(\) with \(F() 0\) s.t. \(=\).
3. \((_{c}())=_{M}\) denotes a _multiton_ with more than one \(\) with \(F() 0\) s.t. \(=\).

To describe our type estimation rule, we define the following ratios between elements of \(_{c}()\):

\[y_{c,p}:=1-()}{U_{c,0}()},\ \ p=1,,P,\] (8)

and construct the vector \(_{c}:=[y_{c,1},,y_{c,P}]^{}\). Then, our estimate for the type is given by

\[(_{c}()):= _{Z},&_{c}()=\\ _{M},&_{c}\{0,1\}^{P}\\ _{S}(,F()),&_{c}\{0,1\}^{P}.\] (9)

By considering the definition of \(_{c}\) it is possible to show that if \((_{c}())=_{S}( ^{*},F(^{*}))\), then \(_{c}=_{c}^{*}\). When we have a singleton taking \(_{c}=\), and thus \(P=n\) suffices to recover \(^{*}\). So long as the non-zero coefficients, \(F()\) are not chosen in an adversarial way, this choice of \(_{c}\) also ensures that \((_{c}())= (_{c}())\). For the purposes of our formal proof, we will assume that non-zero \(F()\) are drawn from an absolutely continuous joint distribution. We can't do better if we don't have any extra information about \(^{*}\), but we can if we know \(|^{*}| t\) as we show below. Going back to our example in Fig. 3, with \(_{c}=\) we use a total of \(8 7=56\) samples as opposed to \(2^{6}=64\). While this improvement is modest at this scale, for larger problems the improvement is dramatic.

Singleton Identification in the Low Degree SettingLet's say we want to determine the singleton from \(U_{1}(10)\) in Fig. 3, and we know \(|^{*}| 1\). By exploiting group testing, it is possible to design \(_{c}\) with fewer rows, and thus fewer overall measurements:

The matrix product \(_{c}^{*}\) has a different output for each \(|| 1\). In this case, the result \(\) corresponds to the binary index of the location of the \(1\). It requires \(P=3\), rather than the \(P=6\) for \(_{c}=\). If all non-zero \(F()\) had satisfied \(|| 1\), we could use this matrix for our example in Fig. 3. However, we only have \(|| 3\) for non-zero \(F()\) in this example, so \(_{c}\) as in (5) does not suffice. In the case of general \(|| t\),  says that for any scaling of \(t\) with \(n\), there exists a group testing design \(_{c}\) with \(P=O(t(n))\) that can recover \(^{*}\) in the limit as \(n\) with vanishing error in \((n)\) time. If we also assume that \(F()\) are \((_{c}())\) has vanishing error (see Appendix C.7.2).

Extension to Noisy SettingWe now relax the assumption that most of the coefficients are _exactly_ zero. To do this, we assume each subsampled Mobius coefficient is corrupted by noise:

\[U_{c,p}()=_{_{p}}_{ _{c}=}F()+Z_{c,p}(),\] (10)

where \(Z_{c,p}()(0,^{2})\). There are two main changes that must be made compared to the noiseless case. First, we must place an assumption on the magnitude of non-zero coefficients \(|F(_{i})|\), such that the signal-to-noise ratio (SNR) remains fixed. Secondly, the matrix \(_{c}\) must be modified. It now consists of two parts: \(_{c}=[_{c}^{1};_{c}^{2}]\). We design \(_{c}^{2}_{2}^{P_{2} n}\) as a standard noise robust Bernoulli group testing matrix with \(P_{2}=O(t(n))\) tests, which suffices for _singleton identification_ under any fixed SNR . However, unlike the noiseless case, the samples from the rows of \(_{c}^{2}\) are not enough to ensure a vanishing error for _singleton detection_ in the \(()\) procedure. To solve this, we design \(_{c}^{1}_{2}^{P_{1} n}\) as a Bernoulli group testing matrix with a different parameter. In Appendix C.7.4, we show this modified version of \(()\) has vanishing error if \(P_{1}=O(t(n))\).

## 5 Results

Now that we have discussed all components of the algorithm, we present our theoretical guarantees:

**Theorem 5.1**.: _(Recovery with \(K\) Uniform Interactions) Let \(f\) satisfy Assumption 2.1 for some \(K=O(2^{n})\) with \(\) and let the non-zero coefficients of \(F\) be drawn from an absolutely continuous distribution. For \(\{_{c}\}_{c=1}^{C}\) chosen as in Lemma C.3 with \(b=O((K))\), \(C=3\) and \(_{c}=\), Algorithm 1 exactly computes the transform \(F\) in \(O(Kn)\) samples and \(O(Kn^{2})\) time complexity with probability at least \(1-O(1/K)\)._

**Theorem 5.2**.: _(Noise-Robust Recovery with \(K\)\(t\)-Degree Interactions) Let \(f\) satisfy Assumption 2.2 for \(K=O((n))\) and \(t=(n^{})\) with \( 0.409\). Assume either:_

1. _The non-zero coefficients of_ \(F\) _are drawn from an arbitrary continuous distribution, or_
2. \(U_{c,p}\) _is corrupted by noise as in (_10_) and let non-zero coefficients satisfy_ \(|F()|=\)_._

_Then, for \(\{_{c}\}_{c=1}^{C}\) chosen as in Lemma C.4 with \(b=O((K))\), \(C=3\), and \(_{c}\) chosen as a suitable group testing matrix, Algorithm 1 exactly computes the transform \(F\) in \(O(Kt(n))\) samples and \(O(K(n))\) time complexity with probability at least \(1-O(1/K)\) in both the noiseless case (1) and noisy case (2)._

Figure 5: We use group testing  to identify the singleton \(_{1}\), which corresponds to the first-order term “never”. By designing the masking patterns with the help of group testing, we can efficiently recover interactions with \(O(t(n))\) extra measurements.

The proof of Theorem 5.1 and 5.2 is provided in Appendix C.5. It combines results from all of the parts of the algorithm we have discussed: aliasing, singleton detection and graph peeling. The requirement \(|F()|=\) is only due to limitations of group testing theory. In practice, we observe that a lower bound on the magnitude suffices. In addition to our theoretical results, we also conduct numerical experiments on synthetic and real word models, which are discussed below.

### Synthetic Simulations

We tested SMT's efficacy on functions satisfying Assumption 2.1 and 2.2, setting non-zero \(F()\) uniformly in \([-1,1]\). SMT is implemented as in Algorithm 1, with group testing decoding via linear programming (see Appendix F.2). Fig. 5(a) is a phase transition plot that shows the percent of cases where SMT achieves \(R^{2}=1\) with fixed \(K=100\) at different sample complexities and values of \(n\). We _vastly outperform_ the naive approach: when \(n=1000\), we get perfect reconstruction with only \(10^{-294}\) percent of total samples! Furthermore, the number of samples necessary to achieve perfect reconstruction scales linearly in \(n\) as predicted. Fig. 5(b) assesses SMT under noise for various values

Figure 6: (a) Perfect reconstruction against \(n\) and sample complexity under Assumption 2.1. Holding \(C=3\), we scale \(b\) to increase the sample complexity. We observe that the number of samples required to achieve perfect reconstruction is scaling linearly in \(n\) as predicted. Results are plotted across 5 runs for each choice of \(b\) and \(n\). (b) Plot of the noise-robust version of our algorithm. For various values of \(t\), we set \(n=500\) and \(K=500\), using a group testing matrix with \(P=1000\). We plot the performance of our algorithm against SNR, measured in terms of the \(R^{2}\). Error bands represent the standard deviation over \(10\) runs. (c) Runtime comparison of SMT, SHAP-IQ , and \(t=5\) order FSI via LASSO . All are computing the Möbius transform in the setting where all non-zero interactions are order \(t\), \(K=10\). SMT easily outperforms both, while the other methods quickly become intractable. Error bands represent standard deviation over \(10\) runs.

Figure 7: Since our ultimate goal is compact, meaningful and computable representations, we compare representations generated from SMT (Algorithm 1) with other popular explanation models. We plot \(R^{2}\) (faithfulness) vs. the number of terms used in the representation (sparsity). For Shapley and Banzhaf values, to generate an \(r\)-sparse representation, we use the top \(r\) magnitude values. For SMT and Faith-Banzhaf, we do a slightly more sophisticated refinement procedure. First order Faith-Banzhaf is included because it is the first-order metric that maximizes \(R^{2}\). As observed in the breast cancer and sentiment analysis tasks, SMT can achieve better \(R^{2}\) than other approaches by utilizing higher-order interactions. In the sentence-level multiple choice dataset, we observe less of a difference, since in those cases the entire answer to a question is usually contained in a single sentence, thus higher-order interactions provide little advantage. Error bands represent the standard deviation over \(10\) instances.

of \(t\), plotting \(R^{2}\) against SNR with \(K=500\), \(n=500\), and \(P=1000\). Fig. 6c plots the runtime for SMT and competing methods. Test functions \(f\) have \(K=10\) non-zero Mobius coefficients at locations that satisfy \(||=5\) (restricted to equality due to limitations in the SHAP-IQ code at the time of running). We compare against SHAP-IQ  configured to compute \(5^{}\) order FSI, as well as the method of  which computes \(5^{}\) order FSI via LASSO. As shown in Appendix A, the \(t^{}\) order FSI are exactly the \(t^{}\) order Mobius coefficients for our chosen \(f\). This figure exemplifies that SMT is the sole feasible method for identifying interactions on the scale of \(n 100\). Additional simulations and discussion can be found in Appendix E.

### Real-World Models

Our objective is a computable, faithful, and compact representation of real-world machine-learned functions. Fig. 7 addresses this goal head-on, by plotting \(R^{2}\) against the number of terms used in the representation (sparsity) for SMT and other popular model explanation approaches. We consider three different tasks: The first is an XGboost model for breast cancer diagnosis, and the other two are transformer-based BERT models for the tasks of sentiment analysis and multiple choice question answering respectively. Appendix B discusses the setup in great detail. For Shapley and Banzhaf values, to generate an \(r\)-sparse representation, we use the top \(r\) magnitude values. For SMT and Faith-Banzhaf, we do a slightly more sophisticated refinement procedure using LASSO , described in the Appendix. We observe that for the breast cancer and sentiment analysis tasks, SMT can generate representations that, with the same number of terms, achieve a much higher \(R^{2}\). This is done by identifying interactions between inputs that are important to the model output. Interestingly, in the case of the multiple choice model, there is less of a difference between the Faith-Banzhaf Indices and the SMT representations. This is likely because in the corresponding dataset, answers to the questions are usually contained in single sentences, making interactions less important.

## 6 Conclusion

Identifying interactions between inputs is an important open research question in machine learning, with applications to explainability, data valuation, and many other problems. We approached this problem by studying the Mobius transform, which is a representation over the fundamental interaction basis. We introduced several new tools to the problem of identifying interactions. The use of ideas from sparse signal processing and group testing has allowed SMT to operate in regimes where all other methods fail due to computational burden. Our theoretical results guarantee asymptotic exact reconstruction and are complemented by numerical simulations that show SMT performs well with finite parameters and also under a noisy model.

LimitationsOur assumption of independently sampled interactions was made for information-theoretic hardness and may not hold in some settings where correlated interactions exist. For instance, in the sentiment problem in Fig. 1, words with strong \(2^{}\) order interactions are likely to appear together in important \(3^{}\) order interactions. In such settings, correlation is exploitable, so a more specific algorithm can likely exploit this correlation and eliminate this assumption. Another limitation is that we have focused on taking a sparse Mobius _transform_ in this work. In practice, we may be more interested in taking a sparse _projection_ onto a subset of low-order terms. For unitary transforms, projection can be achieved by truncation, however, with non-orthogonal transforms like the Mobius Transform, projection is not straightforward. This is an important distinction, because there can be functions which are well-approximated by a sparse low degree Mobius projection, but do not have a sparse transform.

Future WorkApplying SMT to real-world tasks like understanding protein language models , LLM chatbots  or diffusion models  would be insightful. Working with large and complicated models will likely require further improvements to robustness--both in terms of dealing with noise from small but non-zero interactions and dealing with potential correlations between interactions. Some interesting ideas in this direction could be using more standard statistical ideas like in  or considering concepts from adaptive group testing. Finally, due to the connection with the Shapley or Banzhaf values (2), methods for computing the Mobius transform can also be used for computing these values by first computing the Mobius transform and then using (2).

[MISSING_PAGE_FAIL:11]

*  C. Wendler, A. Amrollahi, B. Seifert, A. Krause, and M. Puschel, "Learning set functions that are sparse in non-orthogonal Fourier bases," in _AAAI Conference on Artificial Intelligence_, vol. 35, 2021, pp. 10 283-10 292.
*  Q. Ren, J. Gao, W. Shen, and Q. Zhang, "Where we have arrived in proving the emergence of sparse interaction primitives in DNNs," in _International Conference on Learning Representations_, 2024. [Online]. Available: https://openreview.net/forum?id=3pWSL8My6B
*  K. Aas, M. Jullum, and A. Loland, "Explaining individual predictions when features are dependent: More accurate approximations to Shapley values," _Artificial Intelligence_, vol. 298, p. 103502, 2021.
*  H. Chen, J. D. Janizek, S. Lundberg, and S.-I. Lee, "True to the model or true to the data?" 2020. [Online]. Available: https://arxiv.org/pdf/2006.16234
*  D. Janzing, L. Minorics, and P. Blobaum, "Feature relevance quantification in explainable AI: A causal problem," in _International Conference on Artificial Intelligence and Statistics_, 2020, pp. 2907-2916.
*  J. Ren, Z. Zhou, Q. Chen, and Q. Zhang, "Can we faithfully represent absence states to compute shapley values on a DNN?" in _International Conference on Learning Representations_, 2023. [Online]. Available: https://openreview.net/forum?id=YY8tP7bW6Kt
*  J. Enouen, H. Nakhost, S. Ebrahimi, S. O. Arik, Y. Liu, and T. Pfister, "TextGenSHAP: Scalable post-hoc explanations in text generation with long documents," 2023. [Online]. Available: https://arxiv.org/pdf/2312.01279
*  V. Miglani, A. Yang, A. Markosyan, D. Garcia-Olano, and N. Kokhlikyan, "Using Captum to explain generative language models," in _Workshop for Natural Language Processing Open Source Software (NLP-OSS 2023)_, Singapore, Dec. 2023, pp. 165-173. [Online]. Available: https://aclanthology.org/2023.nlposs-1.19
*  L. M. Paes, D. Wei, H. J. Do, H. Strobelt, R. Luss, A. Dhurandhar, M. Nagireddy, K. N. Ramamurthy, P. Sattigeri, W. Geyer _et al._, "Multi-level explanations for generative language models," 2024. [Online]. Available: https://arxiv.org/pdf/2403.14459
*  F. Fumagalli, M. Muschalik, P. Kolpaczki, E. Hullermeier, and B. E. Hammer, "SHAP-IQ: Unified approximation of any-order shapley interactions," in _Conference on Neural Information Processing Systems_, 2023. [Online]. Available: https://openreview.net/forum?id=IEMLNF4gK4
*  J. S. Kang, R. Pedarsani, and K. Ramchandran, "The fair value of data under heterogeneous privacy constraints in federated learning," _Transactions on Machine Learning Research_, 2024. [Online]. Available: https://openreview.net/forum?id=ynG5Ak/7n7Q
*  J. T. Wang and R. Jia, "Data Banzhaf: A robust data valuation framework for machine learning," in _International Conference on Artificial Intelligence and Statistics_, vol. 206, 25-27 Apr 2023, pp. 6388-6421. [Online]. Available: https://proceedings.mlr.press/v206/wang23e.html
*  A. Ghorbani and J. Zou, "Data Shapley: Equitable valuation of data for machine learning," in _International Conference on Machine Learning_, vol. 97, 09-15 Jun 2019, pp. 2242-2251. [Online]. Available: https://proceedings.mlr.press/v97/gphorani19c.html
*  A. Ghorbani, M. Kim, and J. Zou, "A distributional framework for data valuation," in _International Conference on Machine Learning_, vol. 119, 13-18 Jul 2020, pp. 3535-3544. [Online]. Available: https://proceedings.mlr.press/v119/gphorani20a.html
*  T. Chen and C. Guestrin, "XGBoost: A scalable tree boosting system," in _ACM SIGKDD International Conference on Knowledge Discovery and Data Mining_, San Francisco, 2016, pp. 785-794. [Online]. Available: http://doi.acm.org/10.1145/2939672.2939785
*  A. Barbosa, "Roberta large fine tuned on race," 2021. [Online]. Available: https://huggingface.co/LIAMF-USP/roberta-large-finetuned-race/tree/main
*  Q. Ren, Y. Xu, J. Zhang, Y. Xin, D. Liu, and Q. Zhang, "Towards the dynamics of a DNN learning symbolic interactions," 2024. [Online]. Available: https://arxiv.org/pdf/2407.19198
*  T. M. Cover, _Elements of Information Theory_. John Wiley & Sons, 1999.
*  M. Luby, "LT codes," in _IEEE Symposium on Foundations of Computer Science_, 2002, pp. 271-280.

*  K. R. Narayanan and H. D. Pfister, "Iterative collision resolution for slotted aloha: An optimal uncoordinated transmission policy," in _International Symposium on Turbo Codes and Iterative Information Processing (ISTC)_, 2012, pp. 136-139.
*  Y. E. Erginbas, J. Kang, A. Aghazadeh, and K. Ramchandran, "Efficiently computing sparse fourier transforms of q-ary functions," in _IEEE International Symposium on Information Theory (ISIT)_, 2023, pp. 513-518.
*  S.-Y. Chung, T. Richardson, and R. Urbanke, "Analysis of sum-product decoding of low-density parity-check codes using a gaussian approximation," _IEEE Transactions on Information Theory_, vol. 47, no. 2, pp. 657-670, 2001.
*  W. H. Bay, J. Scarlett, and E. Price, "Optimal non-adaptive probabilistic group testing in general sparsity regimes," _Information and Inference: A Journal of the IMA_, vol. 11, no. 3, pp. 1037-1053, 02 2022. [Online]. Available: https://doi.org/10.1093/imaiai/iaab020
*  J. Scarlett and O. Johnson, "Noisy non-adaptive group testing: A (near-)definite defectives approach," _IEEE Transactions on Information Theory_, vol. 66, no. 6, pp. 3775-3797, 2020.
*  R. Tibshirani, "Regression shrinkage and selection via the lasso," _Journal of the Royal Statistical Society Series B: Statistical Methodology_, vol. 58, no. 1, pp. 267-288, 1996.
*  Z. Lin, H. Akin, R. Rao, B. Hie, Z. Zhu, W. Lu, N. Smetanin, R. Verkuil, O. Kabeli, Y. Shmueli, A. dos Santos Costa, M. Fazel-Zarandi, T. Sercu, S. Candido, and A. Rives, "Evolutionary-scale prediction of atomic-level protein structure with a language model," _Science_, vol. 379, no. 6637, pp. 1123-1130, 2023. [Online]. Available: https://www.science.org/doi/abs/10.1126/science.ade2574
*  OpenAI, "GPT-4 technical report," 2023.
*  D. Kingma, T. Salimans, B. Poole, and J. Ho, "Variational diffusion models," in _Advances in Neural Information Processing Systems_, vol. 34, 2021, pp. 21 696-21 707.
*  P. L. Hammer and R. Holzman, "Approximations of pseudo-boolean functions; applications to game theory," _Zeitschrift fur Operations Research_, vol. 36, no. 1, pp. 3-21, 1992. [Online]. Available: https://doi.org/10.1007/BF01541028
*  W. Wolberg, O. Mangasarian, N. Street, and W. Street, "Breast Cancer Wisconsin (Diagnostic)," UCI Machine Learning Repository, 1995, DOI: https://doi.org/10.24432/C5DW2B.
*  D. Q. Nguyen, T. Vu, and A. T. Nguyen, "BERTweet: A pre-trained language model for English Tweets," in _Conference on Empirical Methods in Natural Language Processing: System Demonstrations_, 2020, pp. 9-14.
*  A. L. Maas, R. E. Daly, P. T. Pham, D. Huang, A. Y. Ng, and C. Potts, "Learning word vectors for sentiment analysis," in _Annual Meeting of the Association for Computational Linguistics: Human Language Technologies_. Portland, Oregon, USA: Association for Computational Linguistics, June 2011, pp. 142-150. [Online]. Available: http://www.aclweb.org/anthology/P11-1015
*  G. Lai, Q. Xie, H. Liu, Y. Yang, and E. Hovy, "RACE: Large-scale ReAding comprehension dataset from examinations," in _Conference on Empirical Methods in Natural Language Processing_, Copenhagen, Denmark, Sep. 2017, pp. 785-794. [Online]. Available: https://aclanthology.org/D17-1082
*  A. Coja-Oghlan, O. Gebhard, M. Hahn-Klimroth, and P. Loick, "Information-theoretic and algorithmic thresholds for group testing," _IEEE Transactions on Information Theory_, vol. 66, no. 12, pp. 7911-7928, 2020.
*  C. L. Chan, S. Jaggi, V. Saligrama, and S. Agnihotri, "Non-adaptive group testing: Explicit bounds and novel algorithms," _IEEE Transactions on Information Theory_, vol. 60, no. 5, pp. 3019-3035, 2014.

Relationship between Mobius Transform and Other Importance Metrics

We begin with some notation. We define the Mobius basis function (which are all possible products of inputs) as:

\[b_{}():=_{i:k_{i}=1}m_{i}.\] (11)

Now we define the following sub-spaces of pseudo-Boolean function in terms of the linear span of Mobius basis functions:

\[_{t}:=\{b_{}():|| t\}.\] (12)

Now we define the projection operator \(_{}(f,)\), as the projection of the function \(f\) onto the function space \(\) with respect to the measure \(\). If \(g()=_{}(f,)\), we write its decomposition as \(g()=_{_{2}^{n}}c(f,,, )b_{}()\). Note that linear independence implies the uniqueness of this representation.

Shapley ValueThe Shapley values \((i)\) of the inputs \(m_{i},i=1,,n\) with respect to the function \(f\) are :

\[(i)=c(f,_{1},,_{i})=_{:k _{i}=1}|}F(),\] (13)

where \(\) is the Shapley kernel. \((i)=F(_{i})\) when \(f\) is a linear function.

Banzhaf IndexThe Banzhaf index \((i)\) of the inputs \(m_{i},i=1,,n\) with respect to the function \(f\) are :

\[(i)=c(f,_{1},,_{i})=_{:k_{i} =1}|-1}}F(),\] (14)

where \(\) is the uniform measure. \((i)=F(_{i})\) when \(f\) is a linear function.

Faith Shapley Interaction IndexThe \(t^{}\) order Faith Shapley interaction index \(_{t}()\) for \(|| t\) is

\[_{t}()=c(f,_{t},,)=F()+(-1)^{t-||}|}{t+||}|} _{>\\ ||>t}F(),\] (15)

where \(\) is the Shapley kernel. \(_{t}()=F()\) when \(f\) is a \(t^{}\) order function, i.e., \(F()=0\) when \(||>t\).

Faith Banzhaf Interaction IndexThe \(t^{}\) order Faith Shapley interaction index \(_{t}()\) for \(|| t\) is

\[_{t}()=c(f,_{t},,)=F() +(-1)^{t-||}_{>\\ ||>t}|-||}}|-||-1}{t-||}F(),\] (16)

where \(\) is the uniform measure. \(_{t}(i)=F()\) when \(f\) is a \(t^{}\) order function, i.e., \(F()=0\) when \(||>t\).

Shapley-Taylor Interaction IndexThe \(t^{th}\) order Shapley-Taylor Interaction Index \(_{t}()\) is:

\[_{t}()=F()&||<t\\ c(f-f^{t-1},_{t}-_{t-1},,)&||=t,, f^{t-1}()=_{ \\ ||<t}F(),\] (17)

where \(\) is the Shapley kernel. Explicitly, it can be shown that:

\[c(f-f^{t-1},_{t}-_{t-1},,)=_{ ^{}}^{}|}{t}^{-1}F( ^{})||=t.\] (18)

As a consequence of the above, we have \(_{t}()=_{t}()=F()\) when \(f\) is a \(t^{th}\) order function, i.e., \(F()=0\) for \(||>t\).

Experiment Details

Let \(f\) be the real-world function we wish to explain. In subsections B.1, B.2, and B.3, we describe how we formed these functions for the tasks of breast cancer diagnosis, sentiment analysis, and multiple choice answering respectively. For our experiments, we plot the \(R^{2}\) (faithfulness) for a variety of explanation models \(\), measured through:

\[R^{2}=1--f\|_{2}^{2}}{\|f-\|_ {2}^{2}}.\]

where we use the notation \(\|f\|_{2}^{2}=_{_{2}^{n}}f()^{2}\).

In Figure 2, we consider settings where \(n 20\), such that we can run optimization procedures to find faithful approximations that are **sparse** and **low degree**.

**Achievable Low Degree:** To find the best approximation \(\) of up to degree \(t\), we solve the following quadratic programming problem:

\[_{,} \|-f\|_{2}^{2}\] (19) \[()=_{,|| t}_{},.\] (20)

**Achievable Sparsity:** On the other hand, we cannot efficiently find the optimal faithful \(K\)-sparse approximation due to the problem's combinatorial nature. Instead, informed by the strong faithfulness of low degree approximations, we employ the following heuristic to obtain some sparse approximation.

Let \(_{K}_{2}^{n}\) be a set containing the first \(K\) coordinates with the lowest degree, where ties are randomly broken. With this set, we solve the following quadratic programming problem:

\[_{,} \|-f\|_{2}^{2}\] (21) \[()=_{,_{K}}_{},.\] (22)

In Figure 7, we consider the four explanation models described below.

**Shapley Values:** We approximate Shapley values by iterating through permutations of the inputs . For an efficient implementation of the algorithm, we use the SHAP Python package . To measure the faithfulness captured by Shapley values at some sparsity level \(r\), we consider approximations that only include the top-\(r\) Shapley values by magnitude.

**Banzhaf Values:** We approximate Banzhaf values using the _Maximum Sample Reuse Monte Carlo_ procedure described in . To measure the faithfulness captured by Banzhaf values at some sparsity level \(r\), we consider approximations that only include the top-\(r\) Banzhaf values by magnitude.

**Faith-Banzhaf Indices:** We calculate Faith-Banzhaf indices using the regression formulation described in . To measure the faithfulness captured by sparse approximations of Faith-Banzhaf indices, we modify the regression problem by adding an \(_{1}\) penalty on the values of the Faith-Banzhaf indices. We vary the penalty coefficient to obtain different levels of sparsity.

**SMT:** We run SMT (Algorithm 1) to obtain a sparse Mobius representation \(\) with support \(()\). Then, we fine-tune the values of the coefficients by solving the following regression problem over a uniformly sampled set of points \(_{2}^{n}\):

\[_{,} _{}(()-f()) ^{2}\] \[()=_{,()}_{},.\]To measure the faithfulness captured by sparse approximations, we modify the regression problem by adding an \(_{1}\) penalty on the values of the Mobius coefficients. Then, we vary the penalty coefficient \(\) to obtain different levels of sparsity:

\[_{,} _{}(()-f() )^{2}+_{()}|_{}|\] s.t. \[()=_{, ()}_{},.\]

### XGBoost for Breast Cancer Diagnosis

We train an XGBoost model for classification using the Wisconsin Breast Cancer dataset . This dataset contains the mean, standard deviation, and largest value of ten measurements, resulting in thirty features. For Figure 2, we use only the mean and standard deviation, resulting in twenty features. For Figure 2, we use the first ten data points in the training set and for Figure 7, we present the aggregated results over the first twenty.

To explain the XGBoost model \(h\) (the probability associated with a positive classification) on each data point \(x\), we use an interventional expected value formulation: we freeze some of the features and take an expectation over all data points by infilling the remaining features. Formally,

\[f()=[h(X)|(X_{}=x_{})]\]

where we use the notation \(x_{}=\{x_{i}:m_{i}=1\}\).

### BERT for Sentiment Analysis

We employ the sentiment analysis model from , which is built upon BERTweet , a RoBERTa model trained on English tweets. We take movie reviews from the IMDb Movie Reviews dataset . For a particular review, we define its function as a mapping from maskings of words (using the [UNK] token) to the model's logit value associated to the correct sentiment classification.

For Figure 2, we use the first ten sentences in the dataset with 17, 18, or 19 words, where words separated through spaces in the review. Below, we include the reviews and their low degree and sparse approximations calculated with equations 20 and 22 respectively.

In Figure 7, we take a random sampling of reviews, with number of words spanning from 17 to 38. The reviews we used, alongside their word counts and sentiment, are included below:

### BERT for Multiple Choice

For multiple choice answering, we use a RoBERTa model  fine-tuned on RACE : a large-scale reading comprehension dataset. This dataset contains over 28,000 passages, each containingcorresponding multiple-choice questions. For our experiments, we found the first ten passages with 15 sentences, and took their first multiple-choice question.

To construct the function, we consider sentence-level maskings of the passages using the [PAD] token. We pass the masked passage, alongside the multiple choice question into the RoBERTa model, and measure the logit value of the question's correct answer.

## Appendix C Missing Proofs

### Boolean Arithmetic

Table 1 the addition and multiplication table for arithmetic between \(x,y_{2}\). We also note that \(_{2}\) is typically used to refer to the integer ring modulo \(2\). The arithmetic we are describing here is actually that of a _monoid_. Since the audience for this paper is people interested in machine learning, we continue to use \(_{2}\) since it is commonly used to simply refer to the set \(\{0,1\}\).

### Discussion of Aliasing of the Mobius Transform

When a function has many small or zero Mobius coefficients (interactions), our goal is to subsample (4) in such a way that the aliasing causes the non-zero coefficients to end up in different aliasing sets (5) (as opposed to all of them being aliased together, making them more difficult to reconstruct). Lemma C.1 is a key tool that we will use in this work to design subsampling patterns that result in good aliasing patterns.

**Lemma C.1**.: _Consider \(_{2}^{b n}\), \(b<n\) and \(f:_{2}^{n}\). Let_

\[u()=f(^{}} ),\ _{2}^{b}.\] (23)

_If \(U\) is the Mobius transform of \(u\), and \(F\) is the Mobius transform of \(f\) we have:_

\[U()=_{=}F().\] (24)

This lemma is a powerful tool, allowing us to control the aliasing sets through the matrix \(\). The proof can be found in Appendix C.3, and is straightforward, given the relationship between \(u\) and

    \\  \(+\) & \(x=1\) & \(x=0\) \\  \(y=1\) & 1 & 1 \\ \(y=0\) & 1 & 0 \\        \\  \(\) & \(x=1\) & \(x=0\) \\  \(y=1\) & 1 & 0 \\ \(y=0\) & 0 & 0 \\    
    \\  \(-\) & \(x=1\) & \(x=0\) \\  \(y=1\) & 0 & 1 \\ \(y=0\) & N/A & 0 \\   

Table 1: Addition, Multiplication and Subtraction table for Boolean arithmetic in this paper. Subtraction is for \(y-x\).

\(f\). Understanding why we choose this relationship, however, is more complicated. Underlying this choice is the algebraic theory of _monoids_ and abstract algebra.

As we have mentioned, our ultimate goal is to design \(\) to sufficiently "spread out" the non-zero indices among the aliasing sets. Below, we define a simple and useful construction for \(\).

**Definition C.2**.: Consider \(\{i_{1},,i_{b}\}=I[n]\), with \(|I|=b\), and \(_{2}^{b n}\). Let \(_{i}\) correspond to the \(i^{}\) row of \(\), given by \(_{i}=_{i_{j}}\), the length \(n\) unit vector in coordinate \(i_{j}\). Then if we subsample according to (23) we have:

\[U()=_{\ :\ k_{i}=j_{i}\  i I}F().\] (25)

which happens to result in aliasing sets \(()=\{:k_{i}=j_{i}\  i I\}\) all of equal size \(2^{b}\). The above choice \(\) actually induces a rather simple sampling procedure when we follow (23). For instance if \(I=[b]\), we have:

\[u()=f([};_{n-b}] ),\] (26)

In other words, in this case, we construct samples by freezing \(n-b\) of the inputs to \(1\) and then varying the remaining \(b\) inputs across all the \(2^{b}\) possible options. In the case where the non-zero Mobius interactions are chosen uniformly at random, this construction does a good job at spacing them out across the various aliasing sets. The following result formalizes this.

**Lemma C.3**.: _(Uniform interactions) Let \(_{1},,_{K}\) be sampled uniformly at random from \(_{2}^{n}\), where \(F(_{i}) 0,\  i[K]\), but \(F()=0\) for all other \(_{2}^{n}\). Construct disjoint sets \(I_{c}[n]\) for \(c=1,,C\), and the corresponding matrix \(_{c}\) according to Definition C.2. Let \(_{c}()\) correspond to the aliasing sets after sampling with respect to matrix \(_{c}\). Now define:_

\[_{i}_{c}():= _{i}^{c}.\] (27)

_Then if \(b=O((K))\), \(K=O(2^{n/C})\), in the limit as \(n\) with \(C=O(1)\), \(_{i}^{c}\) are mutually independent and uniformly distributed over \(_{2}^{b}\)._

The proof is given in Appendix C.6.1, and follows directly from the form of the aliasing sets \(_{c}()\). Corollary C.3 means that using \(\) as constructed in Definition C.2 ensures that we all \(\) with \(F() 0\) are uniformly distributed over the aliasing sets, which maximizes the number of singletons. This result, however, hinges on the fact that the non-zero coefficients are uniformly distributed. We are also interested in the case where the non-zero coefficients are all low degree. In order to induce a uniform distribution in this case, we need to exploit a _group testing_ matrix.

**Lemma C.4**.: _(low degree interactions) Let \(_{1},,_{K}\) be sampled uniformly at random from \(\{:|| t,_{2}^{n}\}\), where \(F(_{i}) 0,\  i[K]\), but \(F()=0\) for all other \(_{2}^{n}\). By constructing \(C\) matrices \(_{c},c=1,,C\) from rows of a near constant column weight group testing matrix, and sampling as in (23), if \(t=(n^{})\) for \(<0.409\), and \(b=O((K))\), \(K=O(n^{t})\), in the limit as \(n\), \(_{i}^{c}\) as defined in (27) are mutually independent and uniformly distributed over \(_{2}^{b}\)._

The proof is given in Appendix C.6.2. It relies on an information theoretic argument, exploiting a result from optimal group testing .

### Proof of Lemma c.1

Proof.: Taking the Mobius transform of \(u\) gives us:\[U() = _{}(-1)^{^{T}(-)}u()\] (28) \[= _{}(-1)^{^{T}( -)}f(_{i:_{i}=0}}_{i})\] \[= _{}(-1)^{^{T}( -)}_{_{i:_{i}=0} }_{i}}F()\] \[= _{_{2}^{n}}(-1)^{^{T} (-)}\{ \}_{}_{2}^{n}}F() \{_{i:_{i}=0}}_{i}\}\] \[= _{_{2}^{n}}F()(_{ _{2}^{b}}(-1)^{^{T}(- )}\{\} \{_{i:_{i}=0}}_{i}\})\] \[= _{_{2}^{n}}F()I()\]

Now let's just focus on the term in the parenthesis for now, which we have called \(I()\).

**Case 1: \(=\)**

\[I() = _{}(-1)^{^{T}( -)}\{_{i: _{i}=0}}_{i}\}\] (29)

First note that under this condition, \(=_{i:_{i}=0} }_{i}\). To see this, note that \(k_{j}=0}_{j}\). Since this holds for all \(j\) such that \(k_{j}=0\), we have the previously mentioned implication.

Conversely, if \(_{j}<k_{j}\) (this means \(_{j}=0\) AND \(k_{j}=1\)) for some \(j\), then \(\) and \(_{j}\) must overlap. Thus,

\[\{}_{j}\}=0 \{_{i:_{i}=0}}_{ i}\}=0\]

We can split \(I()\) into two parts, the part where \(=\) and the part where \(<\):

\[I() = \{_{i:_{i}=0} }_{i}\}+_{<}(-1)^{ ^{T}(-)}\{ _{i:_{i}=0}}_{i}\}( =)\] (30) \[= 1+_{<}0\] (31) \[= 1\] (32)

**Case 2: \(\)** Let \(=^{}\). This case itself will be broken into two parts. First let's say there is some \(j\) such that \(k_{j}=0\) and \(k_{j}^{}=1\). Since \(k_{j}^{}=1\) we know that \(\{}_{j}\}=0\). Furthermore, since \(\{:\}\) we have \(_{j}=0\). Then by a similar argument to our previous one, we have \(\{_{i:_{i}=0}}_{i }\}=0\)\(\). It follows immediately that \(I()=0\) in this case.

Finally, we have the case where \(^{}<\). First, if there is a coordinate \(j\) such that \(0=_{j}<k_{j}^{}=1\), we know that \(\{}_{j}\}=0\) so we have \(\{_{i:_{i}=0}}_{i }\}=0\)\(\) s.t. \( j,_{j}<k_{j}^{}\). The only \(\) that remain are those such that \(^{}\). It is easy to see that this is a sufficient condition for \(\{_{i:_{i}=0}}_{i }\}=1\).

\[I() = _{}(-1)^{^{T}(-)}\{_{i:_{i}=0} }_{i}\}\] (33) \[= _{^{}}(-1)^ {^{T}(-)}\] (34) \[= 0\]Where the final sum is zero because exactly half of the \(\) have even and odd parity respectively.

Thus, the subsampling pattern becomes:

\[U()=_{=}F().\]

### Proof of Section 4

\[U() = _{}(-1)^{1^{T}(-)}u ()\] \[= _{}(-1)^{1^{T}(-)} f((_{i:_{i}=0}}_{i}) })\] \[= _{}(-1)^{1^{T}(-)} _{_{i:_{i}=0}}_{i}}F( )\{}\}\] \[= _{_{2}^{n}}(-1)^{1^{T}(-)}\{\}_{_{2} ^{n}}F()\{_{i:_{i}=0} }_{i}\}\{}\}\] \[= _{_{2}^{n}}F() \{}\}I()\] \[= _{=\\ }}F()\]

### Proof of Main Theorems

**Theorem 5.1**.: _(Recovery with \(K\) Uniform Interactions) Let \(f\) satisfy Assumption 2.1 for some \(K=O(2^{n})\) with \(\) and let the non-zero coefficients of \(F\) be drawn from an absolutely continuous distribution. For \(\{_{c}\}_{c=1}^{C}\) chosen as in Lemma C.3 with \(b=O((K))\), \(C=3\) and \(_{c}=\), Algorithm 1 exactly computes the transform \(F\) in \(O(Kn)\) samples and \(O(Kn^{2})\) time complexity with probability at least \(1-O(1/K)\)._

**Theorem 5.2**.: _(Noise-Robust Recovery with \(K\)\(t\)-Degree Interactions) Let \(f\) satisfy Assumption 2.2 for \(K=O((n))\) and \(t=(n^{})\) with \( 0.409\). Assume either:_

1. _The non-zero coefficients of_ \(F\) _are drawn from an arbitrary continuous distribution, or_
2. \(U_{c,p}\) _is corrupted by noise as in (_10_) and let non-zero coefficients satisfy_ \(|F()|=\)_._

_Then, for \(\{_{c}\}_{c=1}^{C}\) chosen as in Lemma C.4 with \(b=O((K))\), \(C=3\), and \(_{c}\) chosen as a suitable group testing matrix, Algorithm 1 exactly computes the transform \(F\) in \(O(Kt(n))\) samples and \(O(K(n))\) time complexity with probability at least \(1-O(1/K)\) in both the noiseless case (1) and noisy case (2)._

Proof.: The first step for proving both Theorem 5.1 and Theorem 5.2 is to show that Algorithm 1 can successfully recover all Mobius coefficients with probability \(1-O(1/K)\) under the assumption that we have access to a \((_{c}())\) function that can output the type \((_{c}())\) for any aliasing set \(_{c}()\). Under this assumption, we use density evolution proof techniques to obtain Theorem C.5 and conclude both theorems.

Then, to remove this assumption, we need to show that we can process each aliasing set \(_{c}()\)correctly, meaning that each bin is correctly identified as a zeroton, singleton, or multiton. Define \(\) as the error event where the detector makes a mistake in \(O(K)\) peeling iterations. If the error probability satisfies \(() O(1/K)\), the probability of failure of the algorithm satisfies

\[_{F} =( F|^{})( ^{})+( F|)( )\] \[( F|^{})+ ()\] \[=O(1/K).\]

In the following, we describe how we achieve \(() O(1/K)\) under different scenarios.

In the case of uniformly distributed interactions without noise, singleton identification and detection can be performed without error as described in Section C.7.1. In the case of interactions with low degree and without noise, singleton identification and detection can be performed with vanishing error as described in Section C.7.2. Lastly, we can perform noisy singleton identification and detection with vanishing error for low degree interactions as described in Section C.7.2.

### Density Evolution Proofs

The density evolution proof is generally separated into two parts.

* We show that with high probability, nearly all of the variable nodes will be resolved.
* We show that with high probability, the graph is a good _expander_, which ensures that if only a small number are unresolved, the remaining variable nodes will be resolved.

Whether the decoding succeeds or fails depends entirely on the graph (or rather distribution over graphs) that is induced by the algorithm. The graph ensemble is parameterized as \((,\{_{c}\}_{c[C]})\). \(\) is the support distribution. The set of non-zero Mobius coefficients \(\{:[f]() 0\}\) is drawn from this distribution. In , using the arguments above it is shown that if the following conditions hold, the peeling message passing successfully resolves all variable nodes:

1. In the limit as \(n\) asymptotic check-node degree distribution from an edge perspective converges to that of independent an identically distributed Poisson distribution (shifted by 1).
2. The variable nodes have a constant degree \(C 3\) (This is needed for the expander property).
3. The number of check nodes \(b\) in each of the \(C\) sampling group is such that \(2^{b}=O(K)\).

**Theorem C.5** ().: _If the above three conditions hold, the peeling decoder recovers all Mobius coefficients with probability \(1-O(1/K)\)._

In the following section, we show that for suitable choice of sampling matrix, these conditions are satisfied, both in the case of uniformly distributed and low degree Mobius coefficients.

#### c.6.1 Uniform Distribution

In order to satisfy the conditions for the case of a uniform distribution of we use the matrix in Corollary C.3. We select \(C=3\) different \(I_{1},I_{2},I_{3}\) such that \(I_{i} I_{j}=\ \  i j\{1,2,3\}\). Note that this satisfies condition (2) above. Furthermore, we let \(k\) scale as \(O(2^{n})\). In order to satisfy condition (3), we must have \(<\), since each \(I_{i}\) can consist of at most \(\) of all the coordinates.

We now introduce some notation. Let \(_{j}()\) represent the _hash function_, that maps a frequency \(\) to a check node index \(\) in each subsampling group \(j=1,,C\), i.e., \(_{j}()=_{j}\). Per our assumption, we have \(K\) non-zero variable notes \(^{(1)},,^{(K)}\) chosen uniformly at random. Technically, we are sampling without replacement, however, since \(} 0\), the probability of selecting a previously selected \(^{(i)}\) vanishes. Going forward in this subsection, we will assume that each \(_{i}\) is sampled with replacement for a more brief solution. A more careful analysis that deals with sampling with replacement before taking limits yields an identical result.

First, let's consider the marginal distribution of \(_{j}(^{(i)})\) for some arbitrary \(j[C]\) and \(i[K]\). Assuming sampling with replacement, we have:

\[(_{j}(^{(i)})=)=( _{I_{j}}^{(i)}=)=_{m I_{j}}(r_{m}^{(i)}=k_{m} )=}.\] (35)

Thus, we have established that the our approach induces a uniform marginal distribution over the \(2^{b}\) check nodes. Next, we consider the independence of our bins. By assuming sampling with replacement, we can immediately factor our probability mass function.

\[(_{i,j}_{j}(^{(i)})=^{(i,j)} )=_{i}(_{j}_{j}(^{(i)})= ^{(i,j)})\] (36)

Furthermore, since we carefully chose the \(I_{i}\) such that they are pairwise disjoint, we have

\[(_{j}_{j}(^{(i)})=^ {(i,j)})=(_{j}_{I_{j}}^{(i)}=^{(i,j )})=_{j}(_{I_{j}}^{(i)}=^{(i,j)} )=\\ _{j}(_{j}(^{(i)})=^{( i,j)}),\] (37)

establishing independence. Let's define an inverse load factor \(=}{K}\). From a edge perspective, sampling with replacement with independent uniformly distributed gives us:

\[_{j}=j(})^{j}(1-})^{k-j},\] (38)

For fixed \(\), asymptotically as \(K\) this converges to:

\[_{j}e^{-1/}}{(j-1)!}.\] (39)

#### c.6.2 Low Degree Distribution

For this proof, we take an entirely different approach to the uniform case. We instead exploit the results of Theorem F.1, which is about asymptotically exactly optimal group testing, and then make an information-theoretic argument. Let \(^{n}\) be a group testing matrix (constructed either by an i.i.d. Bernoulli design or a constant column weight design using the parameters required for the given \(n\)). We don't explicitly write the dependence of \(^{n}\) on \(t\), since by invoking Theorem F.1, we assume some implicit relationship where \(t=(n^{})\) for \(\) satisfying the theorem conditions. Now consider some \(_{n}\) chosen uniformly at random from the \(\) weight \(t\) binary vectors. Note that in this work we actually use what is known as the "i.i.d prior" as opposed to the "combinatorial prior" that we have just defined. As noted in , these are actually equivalent, so we can arbitrarily choose to work with one, and the result holds for the other as well. We define:

\[^{n}=^{n}^{n}.\] (40)

Furthermore, we define the decoding function \(_{n}()\), which represents the deterministic procedure that successfully recovers \(\) with vanishing error probability. We have the following bounds on the entropy of \(_{n}\):

\[H(^{n}) = H(Y_{1}^{n})+H(Y_{2}^{n} Y_{1}^{n})++H(Y_{T}^{n} Y _{1}^{n},,Y_{T-1}^{n})\] (41) \[ T,\] (42)

where we have used the fact that binary random variables have a maximum entropy of \(1\). Furthermore, by the properties of entropy we also have \(H(^{n}) H((^{n},^{n}) ^{n})\). Dividing through by \(T\), we have:

\[(^{n},^{n})^{n}))}{T} ^{n})}{T} 1.\] (43)Let \(_{n}(^{n},^{n}))=^{n}+_{n}( ^{n},^{n})\). It is known (see ) that \((_{n}(^{n},^{n}) 0)=O((T)e^{-T})\). Thus, we can bound the left-hand side as:

\[(^{n},^{n}) ^{n})}{T} = ^{n}+_{n}(^{n},^{n})^{n})}{T}\] (44) \[ ^{n})-H(_{n}(^{n}, ^{n})^{n})}{T}\] (45) \[ ^{n})-H(_{n}(^{n}, ^{n}))}{T},\] (46)

Where in (45) we have used the bound \(H(A+B) H(A)-H(B)\) and the fact that \(^{n}\) and \(^{n}\) are independent, and in (46) we have used the fact that conditioning only decreases entropy. By the continuity of entropy and Theorem F.1, we have that:

\[_{n}^{n})-H(_{n}(^{n}, ^{n}))}{T}=_{n}}{T}-_{n }_{n}(^{n},^{n}))}{T}=1-0=1.\] (47)

This establishes that:

\[_{n}_{i=1}^{T(n)}H(Y_{i}^{n}_{1:(i-1)}^{n})=1.\] (48)

Unfortunately, this does not immediately imply that _all_ of the summands have a limit of \(1\), however, it does mean that the fraction of total summands that are less than one goes to zero (it grows as \(o(T(n))\)). Let \(G\) correspond to the set containing all the indicies \(i\) of the summands that are equal to \(1\). By using the fact that conditioning only reduces entropy, we have

\[_{n}H(Y_{i}^{n}_{S_{i}}^{n})=1,\ \ S_{i}=\{j<i,j G\},\] (49)

Now we define the countable sequence of random variables:

\[}=_{n}Y_{i}^{n},\ i.\] (50)

By continuity of entropy, and the above limit and definition, we have:

\[H(}_{S_{i}})=1,\] (51)

Noting that conditioning only decreases entropy, we immediately have that \(}()\). Now consider some arbitrary finite set \(S^{*} G\). We will now prove that \(\{},i S^{*}\}\) is mutually independent.

Proof.: Let \(i_{1}<i_{2}<<i_{|S^{*}|}\) be an ordered indexing of the elements of \(S^{*}\). Furthermore, let \(Q_{j}=\{i_{q} 1 q j\}\). Assume the set \(\{},i Q_{j}\}\) is mutually independent, and use the notation \(_{Q_{j}}\) to represent a vector containing all of these entries. We have:

\[H(Y_{i_{j+1}},_{Q_{j}})=H(_{Q_{j}})+H(Y_{i_{j+1}} _{Q_{j}}).\] (52)

However, by using the fact that conditioning only decreases entropy we have:

\[1=H(Y_{i_{j+1}}_{S_{j+1}}) H(Y_{i_{j+1}}_{Q_{j }}) H(Y_{i_{j+1}}) 1,\] (53)

thus,

\[H(Y_{i_{j+1}}_{Q_{j}})=H(Y_{i_{j+1}})=1.\] (54)

This leads to the following chain of implications:

\[H(Y_{i_{j+1}},_{Q_{j}})=H(_{Q_{j}})+H(Y_{i_{j+1}}) Y_{ i_{j+1}}_{Q_{j}}.\] (55)

From this, and the initial inductive assumption, we can conclude that \(\{},i Q_{j+1}\}\) is mutually independent. The base case of \(j=1\) follows from the fact that a set containing just one single random variable is mutually independent. Since \(Q_{|S^{*}|}=S^{*}\) the proof is complete. 

Now let \(L(n)=|G[n]|\) we know \(L=(T(n))\), which follows from the stronger result that \(_{n}=1\). Take \(b\) By leveraging the above results, we can select our subsampling matrices \(\{_{i}\}_{i=1}^{C}\) from suitable rows of \(_{n}\). Let \(S_{1}^{(n)},,S_{C}^{(n)} G[n]\), \(|S_{i}^{(n)}|=b\) and \(S_{i}^{(n)} S_{j}^{(n)}=\). Then take

\[_{i}(n)=_{S_{i},:}^{n}.\] (56)

Due to the independence result proved above, the asymptotic degree distribution is:

\[_{j}e^{-1/}}{(j-1)!}.\] (57)

### Singleton Detection and Identification

In this section, we prove the main results about singleton detection and identification. For the noiseless case, we introduce another assumption:

**Assumption C.6**.: (No Cancellation) Suppose the non-zero values \(F(_{1})\),..., \(F(_{K})\) are sampled from a joint distribution \(\) that satisfies the following condition:

\[_{i S}F(_{i}) 0,; S[K]\,;S.\] (58)

This assumption is quite mild, and there are many classes of \(\) that satisfy this assumption.

**Lemma C.7**.: _Any absolutely continuous \(\) satisfies Assumption C.6 a.s.._

Proof.: For simplicity let \(\) represent a \(K\) dimensional random vector containing \(F(_{i})\) at index \(i\). Let the set \((S,)=\{:_{i S}F(_{i})=\}\). Since \(\) is absolutely continuous, a density \(p\) exists such that:

\[((S,))=_{(S,)}dp.\] (59)

However, \(((S,))=K-|S|\). Thus for \(S\), \((S,)\) has Lebesgue measure zero, thus

\[(_{i S}F(_{i})=0)=( (S,0))=_{(S,0)}dp=0.\] (60)

#### c.7.1 Uniform Interactions Singleton Identification and Detection without Noise

For singleton identification, we observe that in the case of a singleton, \(_{c}=^{*}\), thus, in the case of a singleton \(^{*}\) can be recovered. We still need to show that the \(\) function correctly identifies the type. We separate the proof into three parts:

1. Prove \((_{c}())=_{Z}(_{c}())=_{Z}\).
2. Prove \((_{c}())=_{S}(_{c}())=_{S}\).
3. Prove \((_{c}())=_{M}(_{c}())=_{M}\).

Consider the subsampling group \(_{c}()\) for some fixed \(c,\). We first consider the case where \(||\) is not restricted, and denote the set of non-zero indices \(_{1},,_{K}\) as \(\).

Proof of (1)Let \((_{c}())=_{Z}\), and for contradiction's sake assume \((_{c}())_{Z}\).

\[(_{c}())=_{Z}_{ _{p}}_{_{c}= }F()=0\  p,\] (61)

Since \((_{c}())_{Z}\), we have that \(\{:_{c}=\}\). Thus, if we consider the above implication for the case of \(p=0\) and noting that \(_{0}=\), we have:

\[(_{c}())=_{Z}_{ \{:_{c}=\}}F()=0\] (62)

But considering the no cancellation condition, this is impossible, thus proving (1).

Proof of (2)Note that the converse of (1) is true (the proof is immediate). Thus, proving \((_{c}())=_{S}( (_{c}())=_{M})\) is the same as proving (2). We will again use the method of contradiction, and assume \((_{c}())=_{S}\) and \((_{c}())=_{M}\).

\[(_{c}())=_{S} U_{c,p}( )\{0,U_{c,0}()\}\  p>1.\] (63)

Note that by our assumption, \(U_{c,0}() 0\). By our assumption that \((_{c}())=_{M}\), we must have \(|\{:_{c}=\} | 2\). Choose \(_{1},_{2}\{:_{c} =\}\). Given our choice of\( p^{*}>1\) s.t. only *one* of \({ k}_{1}\) or \({ k}_{2}_{p^{*}}\). Without loss of generality we will assume \({ k}_{2}}_{p^{*}}\) and \({ k}_{1}_{p^{*}}\). Now, define the following sets:

\[{ J}_{0} = { N}\{{ k}:{ H}_{c}{ k}={ j}\}\] (64) \[{ J}_{p^{*}} = { N}\{{ k}:{ H}_{c}{ k}={ j}\;{ k}_{p^{*}}\}\] (65)

We know \({ k}_{2}_{p^{*}}\) and \({ k}_{1}_{0}_{p^{*}}\), thus \(|{ J}_{p^{*}}| 1\) and \(|{ J}_{0}_{p^{*}}| 1\). With this, we can show that the implication above cannot be satisfied.

Case 1:\(U_{c,p^{*}}({ j})=0\).

\[U_{c,p^{*}}({ j})=0_{{ k}_{p}^{*}}F({ k})=0.\] (66)

Since \({ J}_{p}^{*}\) is not empty, from our distributional assumption, the above sum cannot be \(0\).

Case 2:\(U_{c,p^{*}}=U_{c,0}({ j})\).

\[U_{c,0}({ j})-U_{c,p^{*}}({ j})=0_{{ k}_{0} _{p}^{*}}F({ k})=0.\] (67)

Since \({ J}_{0}_{p}^{*}\) is not empty, from our distributional assumption, the above sum cannot be \(0\). This implies that \({ Type}({ U}_{c}({ j}))={ H}_{M}\) must be false, thus proving (2).

Proof of (3):Since we have a converse for (1), a converse for (2) suffices to prove (3). The converse follows below:

\[{ Type}({ U}_{c}({ j}))={ H}_{S}^{*} { s.t. }U_{c,p}\{0,F({ k}^{*})\},\; p.\] (68)

Since \(F({ k}^{*}) 0\), we have \(U_{c,0}({ j}) 0\) and all entries of \({ U}_{c}({ j})\) are either \(F({ k}^{*})\) or \(0\). Thus, \({ Detect}({ U}_{c}({ j}))={ H}_{S}\).

#### c.7.2 Low Degree Singleton Identification and Detection without Noise

Here we include a sketch of the argument for the noiseless part of Theorem 2, which focuses on the case \(|{ k}| t\) (the rest of Theorem 2 is unchanged).

(1) \({ Prove}\;{ Detect}({ U}_{c}({ j}))={ H}_{Z}({ U}_{c}({ j}))={ H}_{Z}\).

(2+3) \({ Prove}\;{ Pr}({ Detect}({ U}_{c}({ j}))={ Type}({ U }_{c}({ j}))) 1\).

Proof of (1)The proof is identical to above.

Proof of (2+3)The proof is the same, with one notable exception. In the low degree case, \(p^{*}\) may not always exist. In this case, we can simply rely on the result of . Since \({ Pr}(^{*}) n^{-}\), we correctly recover each \({ k}^{*}\) in the limit, meaning we must have \({ Pr}({ D}_{c}{ k}_{1}_{c}{ k}_{2}) 1\) (this is equivalent to the existence of \(p^{*}\)). Thus, by the same argument this implies that \({ Detect}\;({ U}_{c}({ j}))\) has vanishing error in the limit. The complete argument requires us to union bound over all of the singleton identifications success, but since \(T\) is linear in \(\), so long as \(K={ poly}(n)\), constant \(\) suffices for vanishing error.

#### c.7.3 Singleton Identification in i.i.d. Spectral Noise

In this section, we discuss how to ensure that we can detect the true non-zero index \({ r}^{*}\) from the delayed samples, under the i.i.d. noise assumption. We first discuss the delay matrix itself, \({ D}}_{2}^{P_{1} n}\). As in the noiseless case, we want to choose this matrix to be a group testing matrix. For the purposes of theory, we will choose \({ D}\) such that each element is drawn i.i.d. as \({ Bern}()\) for some \(=(1)\). We denote the \(i^{th}\) row of \({ D}\) as \({ d}_{i}\). Each group test is derived from one of the delayed samples. Under the i.i.d. spectral noise model, this means each sample has the form:

\[U_{i}({ k}) = _{_{ r}={ k}\\ { r}_{i}}F({ r})+Z_{i}({ k})\] (69) \[= F({ r}^{*}){}\{{ r}^{*}_{i} \}+Z_{i}({ k}),\] (70)where \(Z_{i}()(0,^{2})\). Essentially, we can view this as a hypothesis testing problem, where we have one sample \(X\), and hypothesis and the alternative are:

\[H_{0}:X=Z H_{1}:X=F(^{*})+Z,\ \ Z(0,^{2})\]

Furthermore, lets say the magnitude of \(|F[]|=\) is known. We construct a threshold test:

\[(X)=\{|X|>\}\] (71)

With such a test, we can compute the cross-over probabilities:

\[p_{01}=_{H_{0}}(|X|>)=2Q(/),\] (72)

\[p_{10}=_{H_{1}}(|X|<)=((-)/)-((--)/ ).\] (73)

For the sake of simplicity, we will make the choice to choose \(\) such that \(p_{10}=p_{01}\). In that case, we can numerically solve for the cross-over probability which is fixed for a given signal-to-noise ratio.

Now we can use , to prove our desired result. let \(q\) be the resulting cross-over probability for a given \(/\). The probability that all of our Singleton identifications succeed can computed by a union bound on \(P_{e}=(}) n^{-}\). If \(K=(n)\), a constant \(\) suffices us to drive the union bound to zero.

**Lemma C.8**.: _For any fixed SNR, taking \(_{c}\) such that each element is \(()\), and \(t=(n^{})\) for \((0,1)\), taking \(P_{1}=O(t(n))\) suffices to ensure that we can achieve error of bin identification failure with probability of error \(O(1/K^{3})\)._

#### c.7.4 Singleton Detection in i.i.d. Spectral Noise

We note that the general flow of this proof follows , but there are several fundamental differences that make this proof overall quite different. We define \(_{b}\) as the error event where a bin \(\) is decoded wrongly, and then using a union bound over different bins and different iterations, the probability of the algorithm making a mistake in bin identification satisfies

\[() (_{b})\]

The number of bins is at most \( K\) for some constant \(\) and the number of iterations is at most \(CK\) (at least one edge is peeled off at each iteration in the worst case). Hence, \(() CK^{2}(_{b})\). In order to satisfy \(() O(1/K)\), we need to show that \((_{b}) O(1/K^{3})\).

We already showed in Lemma C.8 that we can achieve singleton identification under noise with vanishing error \(O(1/K^{3})\) with a delay matrix \(_{2}^{P_{1} n}\).

To achieve type detection, we construct another pair of delay matrices \(^{1}_{2}^{P_{2} n}\) and \(^{2}_{2}^{P_{2} n}\). We will choose \(^{1}\) and \(^{2}\) such that each element is drawn i.i.d. as \(((1/2)^{1/t})\). We denote

Figure 14: Symmetric cross-over probability induced by hypothesis testing problem for noisy singleton identification/detection.

the \(i^{th}\) row of \(^{1}\) as \(^{1}_{i}\) and denote the \(i^{th}\) row of \(^{2}\) as \(^{2}_{i}\). Then, with these delay matrices, we can obtain observations of the form

\[U^{1}_{i}()=_{=\\ ^{1}_{i}}F()+Z_{i}()\] \[U^{2}_{i}()=_{= \\ ^{2}_{i}}F()+Z_{i}().\]

Note that we can represent these observations as

\[^{1} =^{1}+^{1}\] \[^{2} =^{2}+^{2}\]

with \(^{1},^{2}(0,^{2})\), a \(\) vector with entries \(F()\) for coefficients in the set and binary signature matrices \(^{1},^{2}\) with entries indicating the subsets of coefficients included in each sum.

Then, we subtract these observations to obtain a single observation \(=^{1}-^{2}\) which can be written as

\[=+\]

with \((0,2^{2})\) and \(=^{1}-^{2}\). This construction allows us to show that the columns of \(\) are sufficiently incoherent and hence we can correctly perform identification.

**Lemma C.9**.: _For any fixed SNR, taking \(^{1}_{c}\) and \(^{2}_{c}\) such that each element is \(((1/2)^{1/t})\), and \(t=(n^{})\) for \((0,1/2)\) and taking \(P_{2}=O(t(n))\) suffices to ensure that the probability \((_{b})\) for an arbitrary bin can be upper bounded as \((_{b}) O(1/K^{3})\)._

Proof.: In the following, we prove that \((_{b}) O(1/K^{3})\) holds using the observation model. We consider separate cases where the bin in consideration is fixed as a zeroton, singleton, or multiton.

The error probability \((_{b})\) for an arbitrary bin can be upper bounded as

\[(_{b}) _{\{_{Z},_{M}\}} (_{S}(,F()))\] \[+_{\{_{Z},_{M}\}}( _{S}(},()) )\] \[+(_{S}(},() )_{S}(,F()))\]

above, each of these events should be read as:

1. \(\{_{S}(,F())\}\): missed verification in which the singleton verification fails when the ground truth is in fact a singleton.
2. \(\{_{S}(},()) \}\): false verification in which the singleton verification is passed when the ground truth is not a singleton.
3. \(\{_{S}(},()) _{S}(,F())\}\): crossed verification in which a singleton with a wrong index-value pair passes the singleton verification when the ground truth is another singleton pair.

We can upper-bound each of these error terms using Propositions C.10, C.11, and C.12. Note that all upper-bound terms decay exponentially with \(P_{2}\) except for the term \((}) O(1/K^{3})\).

We use Theorem F.3 to show that we can achieve \((}) O(1/K^{3})\) if we choose \(P_{1}=O(t n)\). Since all other error probabilities decay exponentially with \(P_{2}\), it is clear that if \(P_{2}\) is chosen as \(P_{2}=O(t n)\), the error probability can be bounded as \((_{b}) O(1/K^{3})\).

**Proposition C.10** (False Verification Rate).: _For \(0<<\), the false verification rate for each bin hypothesis satisfies:_

\[(_{S}(},(}))_{Z})  e^{-}{2}(-1)^{2}},\] \[(_{S}(},(}))_{M})  e^{-^{2}}{4(1+4)}}+K^{2}e^{- (1-}{^{2}})^{2}P_{2}},\]

_where \(P_{2}\) is the number of the random offsets._

Proof.: The probability of detecting a zeroton as a singleton can be upper-bounded by the probability of a zeroton failing the zeroton verification. This means

\[(_{S}(},(}))_{Z}) (}\|\|^{2}(1+)^{ 2})\] \[ e^{-}{4}(-1)^{2}},\]

by noting that \((0,^{2})\) and applying Lemma C.13.

On the other hand, given some multiton observation \(=+\), the probability of detecting it as a singleton with index-value pair \((},(}))\) can be written as

\[(_{S}(},(}))_{M})=(}\| -(})_{}} \|^{2}(1+)^{2})=\\ (}\|+\|^{2} (1+)^{2}),\]

where \(:=(-(}) _{}})\) and \(:=\). Then, we can upper bound this probability as

\[(}\|+\|^{2}(1+ )^{2}\|^{2}}{P_{2}} 2^{2} )+(\|^{2}}{P_{2}} 2^{2}).\]

To upper bound the first term, we use Lemma C.13. Note that the first term is conditioned on the event \(\|\|^{2}/P_{2} 2^{2}\), thus the normalized non-centrality parameter satisfies \(_{0} 2\). As a result, we can use Lemma C.13 by letting \(_{2}=(1+)^{2}\). Then, the first term is upper bounded by \(\{-(P_{2}^{2})/(4(1+4))\}\). To analyze the second term, we let \(=-(}) _{}}\) and write \(=\). Denoting its support as \(:=()\), we can further write \(=_{}_{ }\) where \(_{}\) is the sub-matrix of \(\) consisting of the columns in \(\) and \(_{}\) is the sub-vector consisting of the elements in \(\). Then, we consider two scenarios:

* The multiton size is a constant, i.e., \(||=L=O(1)\). In this case, we have \[_{}(_{}^{}_{})\| _{}\|^{2}\|_{} {}_{}\|^{2}\] Using \(\|_{}\|^{2} L^{2}\), the probability can be bounded as \[(\|^{2}}{P_{2}} 2^{2}) (_{}(}_{}^{} _{})}{L^{2}})\] On the other hand, using Lemma C.14 with the selection \(=1/2\) and \(=-}{L^{2}}\), we have \[(\|^{2}}{P_{2}} 2^{2}) 2L^{2}e^{- }{2(1+2L)^{2}}-}{L^{2}} ^{2}}.\] which holds as long as \(<L^{2}/(4^{2})=\).
* The multiton size grows asymptotically with respect to \(K\), i.e., \(||=L=(1)\). As a result, the vector of random variables \(=_{}_{}\) becomes asymptotically Gaussian due to the central limit theorem with zero mean and a covariance \[[^{}]=L^{2}\]Therefore, by Lemma C.13, we have

\[(\|^{2}}{P_{2}} 2^{2}) e^{- }{2}(1-}{L^{2}})}\]

which holds as long as \(<L^{2}/^{2}=L\).

By combining the results from both cases, there exists some absolute constant \(>0\) such that

\[(\|^{2}}{P_{2}} 2^{2}) K^{2}e^ {-(1-}{^{2}})^{2}P_{2}}\]

as long as \(<^{2}/(4^{2})=\). 

**Proposition C.11** (Missed Verification Rate).: _For \(0<<\), the missed verification rate for each bin hypothesis satisfies_

\[(_{Z} _{S}(,F[]))  e^{-}{4}/^{2}-)^{2}}{1+2 ^{2}/^{2}}}\] \[(_{M} _{S}(,F[]))  e^{-}{4}(-1)^{2}}+2e^{-}{2^{2}}P_{2}}+2(})\]

_where \(P_{2}\) is the number of the random offsets._

Proof.: The probability of detecting a singleton as a zeroton can be upper bounded by the probability of a singleton passing the zeroton verification. Hence, by noting that \((0,^{2})\) and applying Lemma C.13,

\[(_{Z} _{S}(,F[]))\] \[(}\|F[_{}+\|^{2}(1+)^{2})\] \[ e^{-}{4}/^{2}-)^{2}}{1+2 ^{2}/^{2}}}.\]

which holds as long as \(<^{2}/^{2}=\).

On the other hand, the probability of detecting a singleton as a multiton can be written as the probability of failing the singleton verification step for some index-value pair \((},[}])\). Hence, we can write

\[(_{M}_{S}(,F[])) =(}\|-[}]_{}}\|^{2}(1+)^ {2})\] \[(}\|-[ }]_{}}\|^{2}(1+ )^{2}[}]=F[] }=)\] \[+([}] F[]}).\]

Then, using Lemma C.13, the first term is upper-bounded as

\[(}\|-[}]_{}}\|^{2}(1+)^ {2}[}]=F[]}=) }\|\|^{2}(1+)^ {2}\] \[ e^{-}{4}(-1)^{2}}.\]

On the other hand, the second term can be bounded as

\[([}] F[] }) ([}] F[])+ (})\] \[=([}] F[] })(})\] \[+([}] F[] |}=)(}=)\] \[([}] F[]| }=)+2(} )\]The first term is the error probability of a BPSK signal with amplitude \(\), and it can be bounded as

\[([}] F[]|}= ) 2e^{-}{2^{2}}P_{2}}\]

**Proposition C.12** (Crossed Verification Rate).: _For \(0<<\), the crossed verification rate for each bin hypothesis satisfies_

\[(_{S}(},[}]) _{S}(,F[])) e^{- ^{2}}{4(1+4)}}+Ke^{-(1-}{^{2}} )^{2}P_{2}}+K^{2}e^{-(1-}{^{2}} )^{2}P_{2}^{2}/t}.\]

_where \(P_{2}\) is the number of the random offsets._

Proof.: This error event can only occur if a singleton with index-value pair \((,F[])\) passes the singleton verification step for some index-value pair \((},[}])\) such that \(}\). Hence,

\[(_{S}(},[}])_{S}(,F[]))\] \[(}\|F[]_{ }-[}]_{}}+\|^{2}(1+)^{2})\] \[=(}\|+\|^{2}(1+)^{2})\] \[=(}\|+\|^{2}(1+)^{2}\|\|^{2} 2 ^{2})\] \[+(\|\|^{2} 2 ^{2})\]

where \(\) is a \(2\)-sparse vector with non-zero entries from \(\{,-\}\). Using Lemma C.13, the first term is upper-bounded as

\[(}\|+\|^{2}(1+ )^{2}\|\|^{2} 2^{2} ) e^{-^{2}}{4(1+4)}}.\]

By Lemma C.14, the second term is upper bounded as

\[(\|\|^{2} 2^{2}) 8e^{- }{50}(-}{L^{2}})^{2}}\]

which holds as long as \(<^{2}/(2^{2})=\).

**Lemma C.13** (Non-central Tail Bounds (Lemma 11 in )).: _Given any \(^{P}\) and a Gaussian vector \((0,^{2})\), the following tail bounds hold:_

\[(\|+\|^{2}_{1})  e^{-(/^{2}-1}-})^{2}}\] \[(\|+\|^{2}_{2})  e^{--_{2}/^{2} )^{2}}{1+2_{0}}}\]

_for any \(_{1}\) and \(_{2}\) that satisfy \(_{1}^{2}(1+_{0})_{2}\) where_

\[_{0}:=\|^{2}}{P^{2}}\]

_is the normalized non-centrality parameter._

**Lemma C.14**.: _Suppose \(=(1)\), \(=(1)\), and \(t=(n^{})\) for some \((0,1/2)\). Then, there exists some \(n_{0}\) such that for all \(n n_{0}\), we have_

\[(_{}(}_{}^{} _{}) 2(1-)-(2L+1)) 2L^{2} (-}{2}P_{2}).\]Proof.: For any \(\) sampled uniformly from vectors up to degree \(t\), the probability that it will have degree \(0 k t\) can be written as

\[(||=k)=}{_{k=1}^{t}}\]

We know that the entries of \(_{}\) are given as \((_{}^{1})_{i}=\{}_{i}^{1}\}\) and \((_{}^{2})_{i}=\{}_{i}^{2}\}\). Therefore,

\[((_{}^{1})_{i}=1) =(d_{ij}^{1}=0, j())\] \[=_{k=1}^{t}(d_{ij}^{1}=0, j( )|||=k)(||=k)\] \[=^{t}^{k/t}}{_{k=1}^{t} }.\] \[=:g(t,n)\]

With \(=(1)\) and \(t=(n^{})\) for \((0,1/2)\), we can show that \(_{n}g(t,n)=\). Therefore, there exists some \(n_{0}\) such that \(|((_{}^{1})_{i}=1)-|\) for all \(n n_{0}\). For the rest of the proof, let \(g=((_{}^{1})_{i}=1)\) and assume \(|g-|\).

Then, recalling \((_{})_{i}=(_{}^{1})_{i}-(_ {}^{2})_{i}\), the distribution for each entry of \(_{}\) can be written as

\[((_{})_{i}=1)=((_{ })_{i}=-1)=g(1-g).\]

Hence, using Hoeffding's inequality, we obtain

\[(}_{}^{}_{ } 2(1-)-)(}_{ }^{}_{} 2g(1-g)-) (-}{2}P_{2}).\]

Furthermore, the conditional probability of another vector \(\) being included in test \(i\) is given by

\[((_{}^{1})_{i}=1|(_{}^{1})_{i}=1,||=k) =(d_{ij}=0, j() ()|||=k)\] \[=_{=0}^{t}(^{1/t})^{}(1-)^{}()^{t-}\] \[=(+(1-)^{1/t})^{t}\] \[=:f(t,n,k).\]

With \(=(1)\) and \(t=(n^{})\) for \((0,1)\), for any \(k t\), we can show that \(_{n}f(t,n,k)=\). Therefore, there exists some \(n_{0}\) such that \(|((_{}^{1})_{i}=1|(_{}^{1})_{ i}=1)-|\) for all \(n n_{0}\). For the rest of the proof, let \(f=((_{}^{1})_{i}=1|(_{}^{1})_ {i}=1)\) and assume \(|f-|\).

On the other hand,

\[((_{})_{i}(_{})_{i }=1) =2fg[1-g-(1-f)g]\] \[((_{})_{i}(_{})_ {i}=-1) =2[(1-f)g]^{2}\]

As a result, we have

\[[(_{})_{i}(_{})_{i}]=2g(f-g).\]

Since \(_{n}[(_{})_{i}(_{ })_{i}]=0\), there exists some \(n_{0}\) such that \(-[(_{})_{i}(_{})_{ i}]\) for all \(n n_{0}\). For the rest of the proof assume \(-[(_{})_{i}(_{})_{i}]\). As a result, we can write

\[(}|_{}^{}_{}| 2)(|_{}^{}_{ }-P_{2}[(_{})_{i}(_{})_{i}]| P_{2})(-}{2}P_{2}).\]By Gershgorin Circle Theorem, the minimum eigenvalue of \(}_{}^{}_{}\) is lower bounded as

\[_{}(}_{}^{}_{ })}_{}(| _{}^{}_{}|-_{\\ }|_{}^{}_{}|).\]

Lastly, we apply a union bound over all \((,)\) pairs to obtain

\[(_{}(}_{}^{} _{}) 2(1-)-(2L+1)) 2L^{2} (-}{2}P_{2}).\]

## Appendix D Worst-Case Time Complexity

In this section, we discuss the computational complexity of Algorithm 1, which is broken down into the following parts:

Computing SamplesComputing samples for one sapling matrix requires computing the row-span of \(_{c}\), which can be computed in \(n2^{b}\) operations. Then for each sample, we must take the bit-wise and with each row of the delay matrix, so the total complexity is: \(Cn2^{b}P\).

Taking Small Mobius TransformComputing the Mobius transform for each of the \(CP\) subsampled functions is \(CPb2^{b}\).

Singleton DetectionTo detect each singleton requires computing \(\). This requires \(P\) divisions for each of the \(C2^{b}\) bins, for a total of \(CP2^{b}\) operations.

Singleton IdentificationTo identify each singleton requires different complexity for our different assumptions.

1. In the case of uniformly distributed interactions, singleton detection is \(O(1)\), since \(=^{*}\) immediately, so doing this for each singleton makes the total complexity \(CK\).
2. In the noiseless low degree case decoding \(^{*}\) from \(\) is \((n)\), so for each singleton the complexity is \(CK\ (n)\)

Message PassingIn the worst case, we peel exactly one singleton per iteration, resulting in \(CK\) subtractions (the above singleton identification bounds already take into account the need to re-do singleton identification).

Thus in the case of uniformly distributed and low degree interactions respectively, the complexity is:

\[&=&O(CPn2^{b}+CPb2^{b}+CK)\\ &=&O(CPnK)\\ &=&O(n^{2}K).\]

\[&=&O(CPn2^{b}+CPb2^{b}+CK\ (n))\\ &=&O(CP\,(n)K)\\ &=&O((n)K).\]

## Appendix E Additional Simulations

In this section, we present some additional simulations that did not fit in the body of the manuscript. Fig 15 and 16. Plot the runtime of SMT vs. \(n\) under both of our assumptions. In both cases we observe excellent scaling with \(n\). We note that our low degree setting has a higher fixed cost since we are using linear programming to solve our group testing problem and the solver appears to have some non-trivial fixed time cost.

Fig. 17 plots the perfect reconstruction percentage against \(n\) and sample complexity. We also observe a phase transition, however, the phase threshold appears very insensitive to \(n\), as expected, since our sample complexity requirement is growing like \((n)\), and we are already plotting on a log scale.

## Appendix F Group Testing

### Group Testing Achievability Results From Literature

**Theorem F.1** (Part of Theorem 4.1 and 4.2 in ).: _Asymptotic Rate 1 Noiseless Group Testing: Consider a noiseless group testing problem with \(t=(n^{})\) defects out of \(n\) elements. We define the rate of a group testing procedure as:_

\[R:=}{T}\] (74)

_where \(T\) is the number of tests performed by the group testing procedure. For an i.i.d. Bernoulli design matrix, for \([0,1/3]\), in the limit as \(n\), a rate \(R^{*}_{}=1\) is achievable with vanishing error. Furthermore, for the constant column-weight design matrix, for \([0,0.409]\) a rate \(R^{*}_{}=1\) is achievable with vanishing error._

**Theorem F.2** ().: _Noiseless Group Testing: Consider the noiseless non-adaptive group testing setup with \(t=||\) defects out of \(n\) items, with \(t\) scaling arbitrarily in \(n\). Let \(}\) be the output

Figure 16: Time complexity of SMT under assumption 2.2. The parameters \(K\) and \(t\) are fixed and we plot the runtime v.s. \(n\). Our theory says we have a \((n)\) complexity. In practice, for reasonable \(n\) our algorithm is running quickly.

Figure 17: Perfect reconstruction percentage plotted against sample complexity and \(n\) under Assumption 2.2. Holding \(C=3\), we scale \(b\) to increase the sample complexity. We observe that the number of samples required to achieve perfect reconstruction is scaling linearly is very insensitive to \(n\) as predicted. We also include \(N=2^{n}\) on the bottom axis, which is the total number of interactions. In this regime we do not appear to consistently maintain zero error. This could be due to the fact that the asymptotic behaviour of group testing might not yet be fully realized in the regime with \(n 1000\).

Figure 15: Time complexity of SMT under Assumption 2.1. The parameter \(K\) is fixed and we plot the runtime v.s. \(n\). our algorithm remains possible to run for \(n=1000\) where other competitors fail.

of a group testing decoder and let \(T^{*}=(\{t(n),n\})\). Then there exists a strategy using \(T(1+)T^{*}\) such that in the limit as \(n\) we have:_

\[(}) 0.\] (75)

_Furthermore, there is a \((n)\) algorithm for computing \(}\). From , for \(t=o(n)\) we can achieve:_

\[(}) n^{-}.\] (76)

_with number of tests \(T=O((1+)t(n))\)._

Note that the above error rate is not a state-of-art result, but suffices in this case for our proof, and is very convenient in its form.

**Theorem F.3** ().: _Noisy Group Testing Under General Binary Noise: Consider the general binary noisy group testing setup with crossover probabilities \(p_{10}\) and \(p_{01}\). We use i.i.d Bernoulli testing with parameter \(>0\). There are a total of \(||=t=(n^{})\) defects, where \((0,1)\). Let \(T^{*}=\{T_{1}^{(D)},T_{1}^{(ND)},T_{2}^{(D)},T_{2}^{(ND)}\}\), where we have_

\[T_{1}^{(D)} = D_{(}/p_{10})}t(t),\] (77) \[T_{1}^{(ND)} = t(n),\] (78) \[T_{2}^{(D)} = (1-p_{10})D(/p_{10})}t(t),\] (79) \[T_{2}^{(ND)} = D(/p_{01})}t(n).\] (80)

_where \(D(x)=x(x)-x+1\), and \(w=(1-p_{01})e^{-}+p_{10}(1-e^{-})\). For any \((p_{10},1-p_{01})\), \((p_{01},1-p_{10})\), there exist some number of tests \(T<(1+)T^{*}\) where the Noisy DD algorithm produces \(}\) such that in the limit as \(n\) we have:_

\[(}) 0.\] (81)

The above result is state-of-art for noisy group testing and could be of interest generally for proving the type of results we have here, however, but for simplicity, we state a similar more compact result that suffices for our proofs in this paper.

**Theorem F.4** ().: _Let \(||=t=o(n)\), and consider an i.i.d. Bernoulli design group testing matrix. Further consider the binary symmetric noise model with crossover probability \(q\). If we construct \(}\) via the noisy column matching algorithm, we achieve:_

\[(}) n^{-},\] (82)

_with number of tests_

\[T=)^{2}(1+)(2)}{1-e^{-2}(1-2q)^{2}}t(n).\] (83)

_where \(\) is a constant that depends on \(\)._

### Group Testing Implementation

We implement group testing via linear programming. As noted in , linear programming generally outperforms most other group testing algorithms in both the noisy and noiseless case. We use the following linear program, to implement group testing.

\[_{,}&_{i=1 }^{n}k_{i}+_{p=1}^{P}_{j}\\ & k_{i} 0\\ &_{p} 0\\ &_{p} 1 py_{p}=1\\ &_{p}^{}=_{p} py_{p}=0\\ &_{p}^{}+_{p} 1 py_{p}=1\] (84)

## Appendix G Impact Statement

Rigorous tools for understanding models can potentially profoundly increase trust in deep learning systems. If we can understand and reason for ourselves why a model is making a decision, we can put greater trust into those decisions. Furthermore, if we understand why a model is doing something that we believe is incorrect, we can better steer it towards doing what we believe is correct. This "steering" of model behavior is sometimes described as _alignment_, and is a critical task for addressing things like incorrect or misleading information generated by a model, or for address any undesirable biases. In terms of concerns, it is important to not misinterpret or over-interpret the interaction indices that come out of SMT. It could be the case that looking over some selection of interactions doesn't reveal the full picture, and leads one down an incorrect line of reasoning.

### NeurIPS Paper Checklist

The checklist is designed to encourage best practices for responsible machine learning research, addressing issues of reproducibility, transparency, research ethics, and societal impact. Do not remove the checklist: **The papers not including the checklist will be desk rejected.** The checklist should follow the references and precede the (optional) supplemental material. The checklist does NOT count towards the page limit.

Please read the checklist guidelines carefully for information on how to answer these questions. For each question in the checklist:

* You should answer [Yes], [No], or [NA].
* [NA] means either that the question is Not Applicable for that particular paper or the relevant information is Not Available.
* Please provide a short (1-2 sentence) justification right after your answer (even for NA).

**The checklist answers are an integral part of your paper submission.** They are visible to the reviewers, area chairs, senior area chairs, and ethics reviewers. You will be asked to also include it (after eventual revisions) with the final version of your paper, and its final version will be published with the paper.

The reviewers of your paper will be asked to use the checklist as one of the factors in their evaluation. While "[Yes] " is generally preferable to "[No] ", it is perfectly acceptable to answer "[No] " provided a proper justification is given (e.g., "error bars are not reported because it would be too computationally expensive" or "we were unable to find the license for the dataset we used"). In general, answering "[No] " or "[NA] " is not grounds for rejection. While the questions are phrased in a binary way, we acknowledge that the true answer is often more nuanced, so please just use your best judgment and write a justification to elaborate. All supporting evidence can appear either in the main paper or the supplemental material, provided in appendix. If you answer [Yes] to a question, in the justification please point to the section(s) where related material for the question can be found.

IMPORTANT, please:

* **Delete this instruction block, but keep the section heading "NeurIPS paper checklist"**,
* **Keep the checklist subsection headings, questions/answers and guidelines below.**
* **Do not modify the questions and only use the provided macros for your answers**.

1. **Claims** Question: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? Answer: [Yes] Justification: The abstract and introduction explicitly state the main theoretical contributions of this work. The main contributions section highlight this, and specifically call out the theoretical nature of this work. The introduction contains information about the practical applications and motivations. A detailed descriptions of assumptions is left to Section 2, to avoid an overly technical introduction, but it is made clear that there are limiting assumptions Guidelines: * The answer NA means that the abstract and introduction do not include the claims made in the paper. * The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers. * The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings. * It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.
2. **Limitations**Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] Justification: There is a limitations section, and limitations are mentioned periodically when relevant. Guidelines: * The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. * The authors are encouraged to create a separate "Limitations" section in their paper. * The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. * The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated. * The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon. * The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. * If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. * While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.
3. **Theory Assumptions and Proofs** Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? Answer: [Yes] Justification: The proofs are included in the Appendix, and are complete and correct. Section 3 and 4 are effectively a proof sketch explaining how and why the algorithm works. Guidelines: * The answer NA means that the paper does not include theoretical results. * All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced. * All assumptions should be clearly stated or referenced in the statement of any theorems. * The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition. * Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material. * Theorems and Lemmas that the proof relies upon should be properly referenced.
4. **Experimental Result Reproducibility** Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? Answer: [Yes]Justification: The algorithm is exactly stated in the paper, and implementation details (specifically related to group testing) are included in the appendix. A reader would be able to exactly reproduce our code with the given information. We plan to release the code with the camera ready version. Guidelines: * The answer NA means that the paper does not include experiments. * If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not. * If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable. * Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general, releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. * While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example * If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. * If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. * If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). * We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.
5. **Open access to data and code** Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] Justification: Code is included. Guidelines: * The answer NA means that paper does not include experiments requiring code. * Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * While we encourage the release of code and data, we understand that this might not be possible, so "No" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark). * The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details. * The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.

* The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.
* At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).
* Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.
6. **Experimental Setting/Details** Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? Answer: [Yes] Justification: The algorithms are relatively simple and complicated implementation details are in the appendix. Guidelines: * The answer NA means that the paper does not include experiments. * The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. * The full details can be provided either with the code, in appendix, or as supplemental material.
7. **Experiment Statistical Significance** Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? Answer: [Yes] Justification: Error bars are included in the main paper. Guidelines: * The answer NA means that the paper does not include experiments. * The authors should answer "Yes" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. * The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions). * The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) * The assumptions made should be given (e.g., Normally distributed errors). * It should be clear whether the error bar is the standard deviation or the standard error of the mean. * It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified. * For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates). * If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.
8. **Experiments Compute Resources** Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? Answer: [Yes] Justification: Experiments are not run at very large scale and runtime numbers are included only for relative comparison.

Guidelines:

* The answer NA means that the paper does not include experiments.
* The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.
* The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.
* The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).
9. **Code Of Ethics** Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? Answer: [Yes] Justification: Ethical concerns are satisfied. Guidelines: * The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. * If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. * The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).
10. **Broader Impacts** Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? Answer: [Yes] Justification: Though this work is primarily theoretical, there is a clear application in mind, and thus is discussed in appendix section G. Guidelines: * The answer NA means that there is no societal impact of the work performed. * If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. * Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations. * The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster. * The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. * If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).
11. **Safeguards** Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)?Answer: [NA] Justification: Guidelines:

* The answer NA means that the paper poses no such risks.
* Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.
* Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.
* We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.
12. **Licenses for existing assets** Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? Answer: [NA] Justification: Guidelines:

* The answer NA means that the paper does not use existing assets.
* The authors should cite the original paper that produced the code package or dataset.
* The authors should state which version of the asset is used and, if possible, include a URL.
* The name of the license (e.g., CC-BY 4.0) should be included for each asset.
* For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.
* If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.
* For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.
* If this information is not available online, the authors are encouraged to reach out to the asset's creators.
13. **New Assets** Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? Answer: [Yes] Justification: The details of the code are included in the main body of the paper. Guidelines: * The answer NA means that the paper does not release new assets. * Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc. * The paper should discuss whether and how consent was obtained from people whose asset is used. * At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.
14. **Crowdsourcing and Research with Human Subjects**Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? Answer: [NA] Justification: Guidelines: * The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. * Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper. * According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.
15. **Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? Answer: [NA] Justification: Guidelines: * The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. * Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper. * We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution. * For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.