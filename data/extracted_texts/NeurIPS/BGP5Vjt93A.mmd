# Predicting mutational effects on protein-protein binding via a side-chain diffusion probabilistic model

Predicting mutational effects on protein-protein binding via a side-chain diffusion probabilistic model

 Shiwei Liu\({}^{1,2}\)

Tian Zhu\({}^{1,2}\)

Milong Ren\({}^{1,2}\)

Chungong Yu\({}^{1,2}\)

Dongbo Bu\({}^{1,2,3}\)

Hacang Zhang\({}^{1,2}\)

These authors contributed equally to this work.Correspondence should be addressed to H.Z. (zhanghaicang@ict.ac.cn)

###### Abstract

Many crucial biological processes rely on networks of protein-protein interactions. Predicting the effect of amino acid mutations on protein-protein binding is vital in protein engineering and therapeutic discovery. However, the scarcity of annotated experimental data on binding energy poses a significant challenge for developing computational approaches, particularly deep learning-based methods. In this work, we propose SidechainDiff, a representation learning-based approach that leverages unlabelled experimental protein structures. SidechainDiff utilizes a Riemannian diffusion model to learn the generative process of side-chain conformations and can also give the structural context representations of mutations on the protein-protein interface. Leveraging the learned representations, we achieve state-of-the-art performance in predicting the mutational effects on protein-protein binding. Furthermore, SidechainDiff is the first diffusion-based generative model for side-chains, distinguishing it from prior efforts that have predominantly focused on generating protein backbone structures.

## 1 Introduction

Many crucial biological processes, including membrane transport and cell signaling, are likely regulated by intricate networks of protein-protein interactions rather than single proteins acting independently . One representative example is the interaction between the spike protein of the SARS-CoV-2 virus and its receptor protein ACE2 on the surface of human cells, which is crucial for the virus to invade target cells . Meanwhile, specific human antibodies, an essential type of protein in the immune system, can prevent the virus entry by competitively binding to the spike protein .

In protein engineering and therapeutic discovery, it is a crucial step to induce amino acid mutations on the protein-protein interface to modulate binding affinity . For example, to enhance the efficacy of an antibody against a virus, one practical approach is to introduce amino acid mutations and filter the resulting antibody sequences to increase binding affinity and specificity to the target viral protein . However, the variant space that can be exploredusing experimental assays is very limited, and developing an effective high-throughput screening can require a significant experimental effort.

Computational methods have been developed to predict the mutational effect on binding affinity measured by _the change in binding free energy_ (i.e., \( G\)). Traditional computational approaches mostly used physical energy features, such as van der Waals and solvation energy, in combination with statistical models to predict \( G\)(Schymkowitz et al., 2005; Meireles et al., 2010; Alford et al., 2017; Barlow et al., 2018). The limited model capacity and bias inherent in human-engineered features in these methods hinder their ability to characterize the complex mutational landscape of binding energy. Despite recent breakthroughs in protein modeling with deep learning (Jumper et al., 2021; Baek et al., 2021; Watson et al., 2023), developing deep learning-based models to predict mutational effects on protein-protein binding remains challenging due to the scarcity of labeled experimental data (Jankauskaite et al., 2019).

Recent studies have investigated various self-supervised learning strategies on protein structures and sequences (Jia et al., 2021; Meier et al., 2021; Hsu et al., 2022; Luo et al., 2023) to ease the data scarcity issue. Among them, GeopPII (Liu et al., 2021) and RDE (Luo et al., 2023) have focused on optimizing protein side-chain conformations during pre-training, as the side-chain conformations on the protein-protein interface play a critical role in determining binding energy. In protein-protein interactions, the side-chain conformations of amino acids at the interface may exhibit significant variations when comparing the same receptor with different ligands. These side-chain conformations can be more effectively characterized using probability density. Notably, RDE explores a flow-based model to estimate the uncertainty in side-chain conformations and leverages the learned representations to achieve state-of-the-art performance in predicting \( G\). However, flow-based models possess inherent limitations as they require specialized architectures to construct accurate bijective transformations in probability density (Papamakarios et al., 2021; Papamakarios et al., 2021), which results in increased costs associated with model design and implementation.

To address the above limitations, we propose SidechainDiff, a representation learning framework for the protein-protein interfaces. It employs a Riemannian diffusion model to learn the generative process of side-chain conformations and the representation of the structural context of amino acids. To the best of our knowledge, SidechainDiff is the first diffusion probabilistic model for side-chain modeling, whereas previous methods have only focused on protein backbone structures. Furthermore, we leverage the learned representations and neural networks to predict \( G\).

## 2 Related Work

### Protein side-chain conformation prediction

Accurate side-chain modeling is essential in understanding the biological functions of proteins. There are two primary categories in predicting protein side-chain conformations: end-to-end full-atom structure prediction methods and side-chain packing. AlphaFold and RoseTTAFold (Jumper et al., 2021; Baek et al., 2021; Baek et al., 2021) are two representative methods that simultaneously generate side-chain conformations and backbone structures. In scenarios like structure refinement and protein design, side-packing becomes pivotal. The objective is to determine the conformations of protein side-chains while having their backbone structures already defined. Traditional methods, including Rosetta (Jeman et al., 2020; Baek et al., 2021; ScWRL4 (Krivov et al., 2009) operate by minimizing the energy function across a pre-defined rotamer library. Recent methods for side-chain packing often employ deep learning models, such as 3D convolution networks and graph attention networks (McParton and Xu, 2023; Misiura et al., 2022; Xu et al., 2022).

Our model distinguishes itself from previous methods for side-chain modelling in two key aspects. First, it's capable of generating a distribution of side-chain conformations rather than a single conformation. Second, we emphasize side-chain modeling specifically for mutation sites within the protein-protein interface, leveraging the known structural context of these sites.

### Prediction of mutational effects on protein-protein binding

Methods for predicting \( G\) can be broadly classified into three categories: biophysical methods, statistical methods, and deep learning-based approaches. Biophysical methods offer a robust means of elucidating the molecular mechanisms governing protein-protein interactions and the impact of mutations on these interactions (Schymkowitz et al., 2005; Alford et al., 2017; Steinbrecher et al., 2017). These methods directly integrate information on protein structures and key biophysical properties, such as solvent accessibility, electrostatic potential, and hydrogen bonding patterns. Statistical methods tailor statistical models for the protein properties such as evolutionary conservation and geometric characteristics (Li et al., 2016; Geng et al., 2019; Zhang et al., 2020).

Deep learning-based methods can be categorized into sequence-based methods and structure-based methods. Sequence-based methods primarily either focus on the evolutionary history, multiple sequence alignments (MSAs) in most cases, of the target protein (Hopf et al., 2017; Riesselman et al., 2018; Frazer et al., 2021) or act as protein language models (PLMs) trained on large amounts of protein sequences (Meier et al., 2021; Notin et al., 2022). Structure-based methods can be categorized into end-to-end methods and pre-training-based methods. The end-to-end methods extract features from protein complexes and directly train a neural network model on them (Shan et al., 2022). To mitigate overfitting caused by data sparsity, an alternative approach is to learn representations by pre-training a feature extraction network on unlabeled structures (Liu et al., 2021; Luo et al., 2023; Liu et al., 2023). Among them, RDE-Network (Luo et al., 2023) utilizes normalizing flows in torus space to estimate the density of amino acid side-chain conformations and leverages the learned representation to predict \( G\).

### Diffusion probabilistic models

Diffusion Probabilistic Models (DPMs) are generative models to transform a sample from a tractable noise distribution towards a desired data distribution with a gradual denoising process (Sohl-Dickstein et al., 2015; Kingma et al., 2014; Dhariwal and Nichol, 2021). DPMs have achieved impressive results in generating various data types, including images (Ho et al., 2020; Nichol and Dhariwal, 2021), waveforms, and discrete data like text (Hoogeboom et al., 2021). DPMs-based autoencoders have also been proposed to facilitate representation learning for image data (Preechakul et al., 2022; Zhang et al., 2022).

Inspired by these progresses, DPMs have also been explored in protein modeling, including de novo protein design (Watson et al., 2023; Ingraham et al., 2023; Yin et al., 2023), motif-scaffolding (Trippe et al., 2023), and molecular dynamics (Arts et al., 2023; Wu and Li, 2023). While the existing methods utilize DPMs for generating protein backbones, a research gap remains in modeling side-chain conformations, which play a critical role in protein-protein binding. The studies by Jing et al.(2022) and Corso et al.(2023) employ diffusion models for generating torsion angles in the context of small molecular design. In contrast, our research is centered on modeling the torsional angles of protein side-chains. Furthermore, our approach distinguishes itself from their models in terms of how we construct the diffusion process.

## 3 Methods

Our methods have two main components. We first propose SidechainDiff (Figure 1), which is a diffusion probabilistic model for protein side-chains and can also give the structural context representations of mutations on the protein-protein interface. We then propose DiffAffinity that utilize the learned representations to predict \( G\). We organize this section as follows: Section 5.1 presents the preliminaries and notations that are used throughout the paper and formally defines the problem. Section 3.2 and 3.3 describe SidechainDiff and DiffAffinity, respectively. Section 3.4 describes key details in model training.

### Preliminaries and notations

A single-chain protein structure is composed of multiple residues (amino acids). Each amino acid shares a common central carbon atom, called the alpha (\(\)) carbon. The alpha carbon is bonded to an amino group (-NH2), a carboxyl group (-COOH), and a hydrogen atom, forming the amino acid's backbone. Each amino acid has a distinct atom or group bonded to the alpha carbon, known as the side-chain. A residue's side-chain structure is usually termed a side-chain conformation. The side-chain conformation varies across different amino acids, and it depends on the type of amino acid and the overall protein structure. Our main work focuses on building a generative process of side-chain conformations given the protein backbone structures.

Multiple protein chains bind with each other and form a protein complex. Here we only consider protein complexes with two chains just for notation simplicity and note that our model works for protein complexes with more chains. For a protein complex with \(n\) residues, we denote the two chains as chain \(A\) and \(B\), and the set of its residues as \(\{1,...,n\}\). The properties of the \(i\)-th amino acid include the amino acid type \(a_{i}\{1,,20\}\), the orientation \(_{i} SO(3)\), the 3D coordinates \(_{i}^{3}\), and the side-chain torsion angles \(_{i}=(_{i}^{(k)})_{k=1}^{4}\) where \(_{i}^{(k)}\) belongs to \([0,2)\).

The bond lengths and bond angles in side-chains are usually considered fixed and given backbone structures, we can solely use \(_{i}\) to reconstruct the coordinates of each atom in a side-chain. Thus, a side-chain conformation is also called a rotamer, which is parameterized with \(_{i}\). The number of torsional angles ranges from 0 to 4, depending on the residue type. Here, we place a rotamer in a \(4\)-dimensional torus space \(^{4}=(^{1})^{4}\) where \(^{1}\) denotes a unit circle.

### SidechainDiff: side-chain diffusion probabilistic model

SidechainDiff utilizes a conditional Riemannian diffusion model in \(^{4}\) to build the generative process of the four rotamers and estimate their joint distributions (Figure1). The generative process is conditioned on the structural context of mutations on the protein-protein interface, which is encoded using a SE(3)-invariant neural network. The learned conditional vectors serve as a natural representation of the structural context.

**Conditional diffusion probabilistic model on \(^{4}\)** We adopt the continuous score-based framework on compact Riemannian manifolds  to construct the generative process for rotamers within \(^{4}\). Our primary adaptation involves conditioning our diffusion model on vectors that are concurrently learned via an encoder network.

Let the random variable \(\) denote the states of rotamers. And let \((_{t})_{t[0,T]}\) and \((_{t})_{t[0,T]}=(_{T-t})_{t[0,T]}\) denote the diffusion process and associated reverse diffusion process in \(^{4}\), respectively. The stochastic differential equation (SDE) and reverse SDE  can be defined as follows:

\[_{t}=_{t}^{}. \]

Here, \(_{t}^{}\) represents the Brownian motion on \(^{4}\), which is approximated with a Reodesic Random Walk (GRW) on \(^{4}\) (Algorithm1). The score \( p_{T-t}(_{t}|)\) in Equation2 is estimated with a

Figure 1: The overall architecture of SidechainDiff.

score network \(s_{}(,t,)\). We introduce the conditional vector \(\) in the score, parameterized with an encoder network that takes the structural context of mutation sites as inputs. We will delve into these components separately in the following subsections.

**Geodesic Random Walk in \(^{4}\)** When approximating the Brownian motion on the compact Riemannian manifolds using GRWs, a crucial step is defining the projection map and the exponential map that establishes the connection between the ambient Euclidean space and the associated tangent space, as discussed in previous studies (Groensen, 1975; De Bortoli et al., 2022). In the context of \(^{4}\), which is constructed as the quadruple product of \(^{1}\) within the ambient Euclidean space \(^{2}\), it is adequate to focus on modeling Brownian motion on \(^{1}\), defined as follows:

\[_{t}=_{t},=(0&-1\\ 1&0). \]

Here, \(_{t}\) represents the Brownian motion on the real line in the ambient Euclidean space \(^{2}\), and \(\) denotes the diffusion coefficient.

Similarly, the projection map \(_{_{k}^{}}\) within the tangent space \(T_{_{k}}(^{4})\) and the exponential map \(\) on \(^{4}\) can be derived by applying the Cartesian product of the maps designed for \(^{1}\). To be more precise, these two maps are defined as follows:

\[_{}()=(\|\|)+(\|\|) {}{\|\|}. \]

\[_{}()=-,>}{ \|\|^{2}}. \]

Here, \(^{1}\), \( T_{}(^{1})\), and \(^{2}\).

```
1:\(T,N,Y_{0}^{},P,\{a_{i},_{i},_{i},_{i}\}_{i=1 }^{127}\)
2:\(=T/N\)\(\) Step-size
3:\(=_{^{*}}(\{a_{i},_{i},_{i},_{i}\}_{i=1}^{127})\)\(\) Encode the structural context into hidden representation
4:for\(k\{0,,N-1\}\)do
5:\(_{k+1}(0,)\)\(\) Standard Normal noise in ambient space \((^{2})^{4}\)
6:\(_{k+1}=_{_{k}^{}}(_{k+1})\)\(\) Projection in the Tangent Space \(T_{_{k}}(^{4})\)
7:\(_{k+1}=- s_{}(_{k}^{},k, )+_{k+1}\)\(\) Compute the Euler-Maruyama step on tangent space
8:\(_{k+1}^{}=_{_{k}^{}}(W_{k+1})\)\(\) Move along the geodesic defined by \(W_{k+1}\) and \(_{k}^{}\) on \(^{4}\)
9:endfor
10:return\(\{_{k}^{}\}_{k=0}^{N}\)
```

**Algorithm 1** Geodesic Random Walk (GRW) during the sampling phase

Score networkThe architecture of the score network \(s_{}(,t,)\) is implemented as a three-layer Multilayer Perceptron (MLP) with 512 units in each layer. It takes as inputs the conditional vector from the encoder network representing the structural context of the mutations, the sampled rotamers, and the timestep \(t\).

**Conditional encoder network** The encoder network (Figure S1) takes as inputs both single features, consisting of amino acid type, backbone dihedral angles, and local atom coordinates for each amino acid, as well as pair features such as pair distances and relative positions between two amino acids. An SE3-invariant IPA network (Jumper et al., 2021) is utilized to obtain the conditional vector \(\) for the structural context of the mutations. Further information regarding the encoder can be found in App. A.1

**Training objectives** The parameters \(\) and \(\) in the score network and conditional encoder network are trained simultaneously. We adopt the implicit loss \(l_{t}^{}(s_{t})\) in De Bortoli et al. (2022), defined as follows:

\[l_{t}^{}(s_{t})=_{}\{\|s_{}( _{t},t,)\|^{2}+(s_{t})(_{t},t, )\}_{t}(_{t}). \]

### DiffAffinity: mutational effect predictor

For the mutational effect predictor, DiffAffinity, we imitate the structure of the mutated protein by setting the side-chain conformation as an empty set and altering the amino acids at the mutation sites. Subsequently, we use the pre-trained conditional encoder \(_{^{*}}\) from SidechainDiff to encode wild-type and mutant structures into distinct hidden representations. These hidden representations, following additional IPA-like transformer network and max aggregation, are fed into a Multilayer Perceptron (MLP) of only one layer for the prediction of \( G\). To assess the quality of our hidden representation, we also utilize the linear combination of SidechainDiff's hidden representations to predict \( G\). More model details can be found in App. A.2

### Model training

We train SidechainDiff with the refined experimental protein structures on the database of Protein Data Bank-REDO . To fairly benchmark the performance of SidechainDiff, we follow the same protocol in RDE  to preprocess the data and split the train and test sets. We train DiffAffinity with the SKEMPI2 dataset . Due to limited samples, we perform a strategy of three-fold cross-validation to train the model and benchmark the performance. Specifically, we split the SKEMPI2 dataset into three folds based on structure, ensuring that each fold contains unique protein complexes not present in the other folds. Two of the folds are utilized for training and validation, whereas the remaining fold is reserved for testing purposes. More training settings are shown in App A.2

## 4 Results

First, we assess DiffAffinity's performance in predicting \( G\) using the SKEMPI2 dataset (Section 4.1) and the latest SARS-CoV-2 dataset (Section 4.2). Subsequently, we demonstrate DiffAffinity's effectiveness in optimizing antibodies, with a focus on SARS-CoV-2 as an illustrative case (Section 4.3). Additionally, we evaluate the prediction accuracy of SidechainDiff in side-chain packing.

### Prediction of the mutational effects on binding affinity

DiffAffinity leverages the learned representation from SidechainDiff to predict mutational effects on protein-protein binding. Here, we benchmark the performance on the widely used SKEMPI2 dataset.

Baseline modelsAs mentioned in section 2.2 the models for mutational effects prediction can be categorized into energy-based, sequence-based, unsupervised, end-to-end, and pre-trained models. We have selected several representative models from each category. The selected models include FoldX , Rosetta , flex ddG , ESM-1v , ESM-IF , ESM2*, LDGPred , and RDE-Network . More details of baselines are shown in App. A.4

For ablation studies, we have also developed two variants named DiffAffinity* and DiffAffinity-Linear. DiffAffinity* employs the same model architecture as DiffAffinity but without the learned representations from SidechainDiff and it serves as an end-to-end prediction method. And DiffAffinity-Linear is a direct linear projection of SidechainDiff's hidden representations to \( G\).

Evaluation metricsThe performance of our model is evaluated using a variety of metrics. These include traditional prediction accuracy metrics such as root mean squared error (RMSE) and mean absolute error (MAE). Given that the scalar values of experimental \( G\) are not standardized, we also employ Pearson and Spearman correlation coefficients to evaluate the models' predictive capability. To assess our model's ability to identify positive or negative mutations affecting protein-protein binding, we use the AUROC and AUPRC metrics. Mutations are classified based on the sign of \( G\), where positive values indicate positive impacts on binding and negative values indicate negative impacts. AUROC measures the overall discriminative power, while AUPRC accounts for imbalanced datasets.

Following the RDE-network (), we also evaluate the prediction performance for each complex separately. We group mutations by complex structure, excluding groups with fewer than ten mutation data points, and derive two metrics: average per-structure Pearson correlation coefficient per-structure Pearson and average per-structure Spearman correlation coefficient per-structure Spearman.

Experimental resultsOur methods, DiffAffinity and DiffAffinity*, outperform all baseline models across almost all metrics and achieve state-of-the-art performance on the SKEMPI2 dataset (Table 1).

[MISSING_PAGE_FAIL:7]

### Prediction of mutational effects on binding affinity of SARS-CoV-2 RBD

SARS-CoV-2 initiates infection by binding to ACE2 protein on host cells via the viral spike protein. The receptor binding domain (RBD) of the spike proteins exhibits high-affinity binding to ACE2.

The technique of deep mutational scanning has been employed to experimentally quantify the effects of all single-point mutations on the binding affinity of the ancestral Wuhan-Hu-1 RBD (PDB ID: 6M0J) [Starr et al., 2022]. These measurements have guided the survey of SARS-CoV-2 evolution and identified several significant mutation sites on RBD that substantially contribute to the binding affinity. A total of 15 significant mutation sites like NE50[] have been identified (see App. A.5). We predicted all 285 possible single-point mutations for these sites and calculated the Pearson correlation coefficient between the experimental and predicted \( G\).

Our results show that DiffAffinity outperforms all baseline methods (Table 2), highlighting its potential to facilitate biologists in understanding the evolution of SARS-CoV-2. Furthermore, we note that DiffAffinity exhibits a substantial improvement over DiffAffinity*, indicating the effectiveness of the learned representations from SidechainDiff.

### Optimization of human antibodies against SARS-CoV-2

The receptor-binding domain (RBD) of the SARS-CoV-2 virus spike protein (PDB ID: 7FAE) plays a pivotal role in the binding process with the host's ACE2 protein. It serves as a prime target for neutralizing antibodies against SARS-CoV-2 [Shan et al., 2022]. In our experiment, we predict all 494 possible mutations at 26 sites within the CDR region of the antibody heavy chain. We expect that predicting mutational effects on binding affinity can facilitate in identifying top favorable mutations that can enhance the neutralization efficacy of antibodies.

These mutations are ranked in ascending order according to their \( G\) values, with the most favorable (lowest \( G\)) mutations positioned at the top. To enhance neutralization efficacy, we aim to accurately identify and rank the five most favorable mutations. DiffAffinity successfully identifies four of these mutations within the top 20% of the ranking and two within the top 10% (Table 3). DiffAffinity consistently outperforms all the baseline methods, indicating its superior ability to predict the effects of mutations. This highlights DiffAffinity's potential as a robust tool for optimizing human antibodies.

### Prediction of side-chain conformations

To assess the generative capacity of SidechainDiff straightforwardly, we employ it for predicting side-chain conformations of specific amino acids given their structural context. Our approach involves sampling rotamers from the distribution modeled by SidechainDiff and selecting the rotamer with the highest likelihood from a pool of 100 samples. For this task, we draw upon the test dataset from the PDB-REDO test split.

For a rigorous evaluation, we compare SidechainDiff with both energy-based methods, including Rosetta [Leman et al., 2020] and SCWRL4 [Krivov et al., 2009], as well as the deep learning-based methods, including RDE, AttnPacker [McPartlon and Xu, 2023], and DLPacker [Misiura et al., 2022]. All methods are run under the same settings to ensure a fair comparison. We evaluate the performance

   Method & Pearson \\  FoldX & \(0.385\) \\ RDE-Net & \(0.438\) \\ DiffAffinity* & \(0.295\) \\ 
**DiffAffinity** & \(\) \\   

Table 2: Pearson correlation coefficient in SARS-COV-2 binding affinity

   Method & TH31W & AH53F & NH57L & RH103M & LH104F \\  FoldX & \(\) & \(\) & \(\) & \(27.13\%\) & \(63.77\%\) \\ RDE-Net & \(\) & \(\) & \(55.47\%\) & \(50.61\%\) & \(\) \\ DiffAffinity* & \(\) & \(\) & \(\) & \(84.21\%\) & \(28.54\%\) \\ 
**DiffAffinity** & \(\) & \(\) & \(\) & \(81.78\%\) & \(\) \\   

Table 3: Rankings of the five favorable mutations on the human antibody against SARS-CoV-2 receptor-binding domain (RBD) by various competitive methodsusing the Mean Absolute Error (MAE) and steric clash number of the predicted rotamers .

In terms of MAE for rotamer prediction, SidechainDiff outperforms energy-based methods and achieves comparable results to deep learning-based methods such as RDE and AttnPacker (Table 4 and Table S1). Notably, our method surpasses all the other methods in terms of the steric clash number. It's noteworthy that while methods like AttnPacker focus on predicting the torsion angles of static side-chain conformations, SidechainDiff emphasizes the distribution of side-chain conformations under various physical constraints. We measure the physical constraints of mutation sites using the contact number, i.e., the number of neighboring amino acids within an 8\(\) radius. Generally, a higher contact number indicates a more constrained structural context. We observe that for mutation sites with higher constraints, SidechainDiff tends to produce more accurate side-chain conformations (Table 5). We further illustrate cases showing the trade-off between accuracy and diversity achieved by SidechainDiff under various physical constraints (Appendix 5 and Figure 53).

## 5 Conclusions

We present SidechainDiff, a Riemannian diffusion-based generative model for protein side-chains. It excels in both generating side-chain conformations and facilitating representation learning. Utilizing the learned representations, our method achieves state-of-the-art performance in predicting \( G\) across various test datasets, including the SKEMPI2 dataset and the latest SARS-CoV-2 dataset. Moreover, we demonstrate its effectiveness in antibody screening and its superior side-chain packing accuracy.

In future research, we can consider integrating the side-chain clash loss  to refine our generative process. Additionally, we can explore building an end-to-end diffusion-based generative model for protein full-atom structures by integrating our model with existing backbone structure generation methods . The main limitation of our model is the lack of consideration of backbone structure changes induced by mutations. Addressing the limitation could lead to enhanced performance.

## 6 Acknowledgements

We would like to thank the National Key Research and Development Program of China (2020YFA0907000), and the National Natural Science Foundation of China (32370657, 32271297, 82130055, 62072435), and the Project of Youth Innovation Promotion Association CAS to H.Z. for providing financial support for this study and publication charges. The numerical calculations in this study were supported by ICT Computer-X center.