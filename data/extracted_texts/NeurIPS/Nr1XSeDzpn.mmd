# On the Convergence to a Global Solution of Shuffling-Type Gradient Algorithms

Lam M. Nguyen

IBM Research

Thomas J. Watson Research Center

Yorktown Heights, NY, USA

Lam Nguyen.MLTD@ibm.com

&Trang H. Tran

School of ORIE

Cornell University

Ithaca, NY, USA

http27@cornell.edu

Equally contributed. Corresponding author: Lam M. Nguyen

###### Abstract

Stochastic gradient descent (SGD) algorithm is the method of choice in many machine learning tasks thanks to its scalability and efficiency in dealing with large-scale problems. In this paper, we focus on the shuffling version of SGD which matches the mainstream practical heuristics. We show the convergence to a global solution of shuffling SGD for a class of non-convex functions under over-parameterized settings. Our analysis employs more relaxed non-convex assumptions than previous literature. Nevertheless, we maintain the desired computational complexity as shuffling SGD has achieved in the general convex setting.

## 1 Introduction

In the last decade, neural network-based models have shown great success in many machine learning applications such as natural language processing (Collobert and Weston, 2008; Goldberg et al., 2018), computer vision and pattern recognition (Goodfellow et al., 2014; He and Sun, 2015). The training task of many learning models boils down to the following finite-sum minimization problem:

\[_{w^{d}}\{F(w):=_{i=1}^{n}f(w;i)\},\] (1)

where \(f(;i):^{d}\) is smooth and possibly non-convex for \(i[n]:=\{1,,n\}\). Solving the empirical risk minimization (1) had been a difficult task for a long time due to the non-convexity and the complicated learning models. Later progress with stochastic gradient descent (SGD) and its variants (Robbins and Monro, 1951; Duchi et al., 2011; Kingma and Ba, 2014) have shown great performance in training deep neural networks. These stochastic first-order methods are favorable thanks to its scalability and efficiency in dealing with large-scale problems. At each iteration SGD samples an index \(i\) uniformly from the set \(\{1,,n\}\), and uses the individual gradient \( f(;i)\) to update the weight.

While there has been much attention on the theoretical aspect of the traditional i.i.d. (independently identically distributed) version of SGD (Nemirovski et al., 2009; Ghadimi and Lan, 2013; Bottou et al., 2018), practical heuristics often use without-replacement data sampling schemes. Also known as shuffling sampling schemes, these methods generate some random or deterministic permutations of the index set \(\{1,2,,n\}\) and apply gradient updates using these permutation orders. Intuitively, a collection of such \(n\) individual updates is a pass over all the data, or an epoch. One may choose to create a new random permutation at the beginning of each epoch (in Random Reshuffling scheme) or use a random permutation for every epoch (in Single Shuffling scheme). Alternatively, one may use aIncremental Gradient scheme with a fixed deterministic order of indices. In this paper, we use the term unified shuffling SGD for SGD method using _any_ data permutations, which includes the three special schemes described above.

Although shuffling sampling schemes usually show a better empirical performance than SGD (Bottou, 2009), the theoretical guarantees for these schemes are often more limited than vanilla SGD version, due to the lack of statistical independence. Recent works have shown improvement in computational complexity for shuffling schemes over SGD in various settings (Gurbuzbalaban et al., 2019; Haochen and Sra, 2019; Safran and Shamir, 2020; Nagaraj et al., 2019; Nguyen et al., 2021; Mishchenko et al., 2020; Ahn et al., 2020). In particular, in a general non-convex setting, shuffling sampling schemes improve the computational complexity in terms of \(\) for SGD from \((^{2}/^{2})\) to \((n/^{3/2})\), where \(\) is the bounded variance constant (Ghadimi and Lan, 2013; Nguyen et al., 2021; Mishchenko et al., 2020)2. We summarize the detailed literature for multiple settings later in Table 1.

While global convergence is a desirable property for neural network training, the non-convexity landscape of complex learning models leads to difficulties in finding the global minimizer. In addition, there is little to no work studying the convergence to a global solution of shuffling-type SGD algorithms for a general non-convex setting. The closest line of research investigates the Polyak-Lojasiewicz (PL) condition (a generalization of strong-convexity), which demonstrates similar convergence rates as the strongly convex rates for shuffling SGD methods (Haochen and Sra, 2019; Ahn et al., 2020; Nguyen et al., 2021). In another direction, Gower et al. (2021) and Khaled and Richtarik (2020) investigates the global convergence for some class of non-convex functions, however for vanilla SGD method. Beznosikov and Takac (2021) investigate a random shuffle version of variance reduction methods (e.g. SARAH algorithm Nguyen et al. (2017)), but this approach only can show convergence to stationary points. With a target on shuffling SGD methods and specific learning architectures, we come up with the central question of this paper:

_How can we establish the convergence to global solution for a class of non-convex functions using shuffling-type SGD algorithms? Can we exploit the structure of neural networks to achieve this goal?_

We answer this question affirmatively, and our contributions are summarized below.

**Contributions**.

* We investigate a new framework for the convergence of a shuffling-type gradient algorithm to a global solution. We consider a relaxed set of assumptions and discuss their relations with previous settings. We show that our average-PL inequality (Assumption 3) holds for a wide range of neural networks equipped with squared loss function.
* Our analysis generalizes the class function called star-\(M\)-smooth-convex. This class contains non-convex functions and is more general than the class of star-convex smooth functions with respect to the minimizer (in the over-parameterized settings). In addition, our analysis does not use any bounded gradient or bounded weight assumptions.
* We show the total complexity of \((^{3/2}})\) for a class of non-convex functions to reach an \(\)-accurate global solution. This result matches the same gradient complexity to a stationary point for unified shuffling methods in non-convex settings, however, we are able to show the convergence to a global minimizer.

### Related Work

In recent years, there have been different approaches to investigate the global convergence for machine learning optimization. This includes a popular line of research that studies some specific neural networks and utilizes their architectures. The most early works show the global convergence of Gradient Descent (GD) for simple linear networks and two-layer networks (Brutzkus et al., 2018; Soudry et al., 2018; Arora et al., 2019; Du et al., 2019). These results are further extended to deep learning architectures (Allen-Zhu et al., 2019; Du et al., 2019; Zou and Gu, 2019). This line of research continues with Stochastic Gradient Descent (SGD) algorithm, which proves the global convergence of SGD for deep neural networks for some probability depending on the initialization process and the number of input data (Brutzkus et al., 2018; Allen-Zhu et al., 2019; Zou et al.,2018; Zou and Gu, 2019). The common theme that appeared in most of these references is the over-parameterized setting, which means that the number of parameters in the network are excessively large (Brutzkus et al., 2018; Soudry et al., 2018; Allen-Zhu et al., 2019; Du et al., 2019; Zou and Gu, 2019). This fact is closely related to our setting, and we will discuss it throughout our paper.

**Polyak-Lojasiewicz (PL) condition and related assumptions.** An alternative approach is to investigate some conditions on the optimization problem that may guarantee global convergence. A popular assumption is the Polyak-Lojasiewicz (PL) inequality, a generalization of strong-convexity (Polyak, 1964; Karimi et al., 2016; Nesterov and Polyak, 2006). Using this PL assumption, it can be shown that (stochastic) gradient descent achieves the same theoretical rate as in the strongly convex setting (i.e. linear convergence for GD and sublinear convergence for SGD) (Karimi et al., 2016; De et al., 2017; Gower et al., 2021). Recent works demonstrate similar results for shuffling type SGD (Haochen and Sra, 2019; Ahn et al., 2020; Nguyen et al., 2021), both for unified and randomized shuffling schemes. On the other hand, (Schmidt and Roux, 2013; Vaswani et al., 2019) propose to use a new assumption called the Strong Growth Condition (SGC) that controls the rates at which the stochastic gradients decay comparing to the full gradient. This condition implies that the stochastic gradients and their variances converge to zero at the optimum solution (Schmidt and Roux, 2013; Vaswani et al., 2019). While the PL condition for \(F\) implies that every stationary point of \(F\) is also a global solution, the SGC implies that such a point is also a stationary point of every individual function. However, complicated models as deep feed-forward neural networks generally have non-optimal stationary points (Karimi et al., 2016). Thus, these assumptions are somewhat strong for non-convex settings.

Although there are plenty of works investigating the PL condition for the objective function \(F\)(De et al., 2017; Vaswani et al., 2019; Gower et al., 2021), not many materials devoted to study the PL inequality for the individual functions \(f(;i)\). A recent work (Sankararaman et al., 2020) analyzes SGD with the specific notion of gradient confusion for over-parameterized settings where the individual functions satisfy PL condition. They show that the neighborhood where SGD converges linearly depends on the level of gradient confusion (i.e. how much the individual gradients are negatively correlated). Taking a different approach, we investigate the PL property for individual functions and further show that our condition holds for a general class of neural networks with quadratic loss.

**Over-paramaterized settings for neural networks.** Most of the modern learning architectures contain deep and large networks, where the number of parameters are often far more than the number of input data. This leads to the fact that the objective loss function is trained closer and closer to zero. Understandably, in such settings all the individual functions \(f(;i)\) are minimized simultaneously at 0 and they share a common minimizer. This condition is called the interpolation property (see e.g. (Schmidt and Roux, 2013; Ma et al., 2018; Meng et al., 2020; Loizou et al., 2021)) and is studied well in the literature (see e.g. (Zhou et al., 2019; Gower et al., 2021)). For a comparison, functions satisfying the strong growth condition necessarily satisfy the interpolation property. This property implies zero variance of individual gradients at the global minimizer, which allows good behavior for SGD near the solution. In this work, we slightly change this assumption which requires a small variance up to some level of the threshold \(\). Note that when letting \( 0\), our assumption exactly recovers the interpolation property.

**Star-convexity and related conditions.** There have been many attentions to a class of structured non-convex functions called star-convex (Nesterov and Polyak, 2006; Lee and Valiant, 2016; Bjorck et al., 2021). Star-convexity can be understood as convexity between an arbitrary point \(w\) and the global minimizer \(w_{*}\). The name star-convex comes from the fact that each sublevel set is star-shaped (Nesterov and Polyak, 2006; Lee and Valiant, 2016). Zhou et al. (2019) shows that if SGD follows a star-convex path and there exists a common global minimizer for all component functions, then SGD converges to a global minimum.

In recent progress, Hinder et al. (2020) considers the class of quasar-convex functions, which further generalizes star-convexity. This property was introduced originally in (Hardt et al., 2018) under the name 'weakly quasi-convex', and investigated recently in literature (Hinder et al., 2020; Jin, 2020; Gower et al., 2021). This class uses a parameter \((0,1]\) to control the non-convexity of the function, where \(=1\) yeilds the star-convexity and \(\) approaches \(0\) indicates more non-convexity (Hinder et al., 2020). Intuitively, quasar-convex functions are unimodal on all lines that pass through a global minimizer. Gower et al. (2021) investigates the performance of SGD for smooth and quasarconvex functions using an expected residual assumption (which is comparable to the interpolation property). They show a convergence rate of \((1/)\) for i.i.d. sampling SGD with the number of total iterations \(K\), which translates to the computational complexity of \((1/^{2})\). To the best of our knowledge, this paper is the first work studying the relaxation of star-convexity and global convergence for SGD with shuffling sample schemes, not for the i.i.d. version.

## 2 Theoretical Setting

We first present the shuffling-type gradient algorithm below. Our convergence results hold for any permutation of the training data \(\{1,2,,n\}\), including deterministic and random ones. Thus, our theoretical framework is general and applicable for any shuffling strategy, including Incremental Gradient, Single Shuffling, and Random Reshuffling.

```
1:Initialization: Choose an initial point \(_{0}(F)\).
2:for\(t=1,2,,T\)do
3: Set \(w_{0}^{(t)}:=_{t-1}\);
4: Generate any permutation \(^{(t)}\) of \([n]\) (either deterministic or random);
5:for\(i=1,,n\)do
6: Update \(w_{i}^{(t)}:=w_{i-1}^{(t)}-_{i}^{(t)} f(w_{i-1}^{(t)};^{(t)}(i))\);
7:endfor
8: Set \(_{t}:=w_{n}^{(t)}\);
9:endfor ```

**Algorithm 1** (Shuffling-Type Gradient Algorithm for Solving (1))

We further specify the choice of learning rate \(_{i}^{(t)}\) in the detailed analysis. Now we proceed to describe the set of assumptions used in our paper.

**Assumption 1**.: _Suppose that \(f_{i}^{*}:=_{w^{d}}f(w;i)>-\), \(i\{1,,n\}\)._

**Assumption 2**.: _Suppose that \(f(;i)\) is L-smooth for all \(i\{1,,n\}\), i.e. there exists a constant \(L(0,+)\) such that:_

\[\| f(w;i)- f(w^{};i)\| L\|w-w^{}\|, w,w^{}^{d}.\] (2)

Assumption 1 is required in any algorithm to guarantee the well-definedness of (1). In most applications, the component losses are bounded from below. By Assumption 2, the objective function \(F\) is also \(L\)-smooth. This Lipschitz smoothness Assumption is widely used for gradient-type methods. In addition, we denote the minimum value of the objective function \(F_{*}=_{w^{d}}F(w)\). It is worthy to note the following relationship between \(F_{*}\) and the component minimum values:

\[F_{*}=_{w^{d}}F(w)=_{w^{d}}( _{i=1}^{n}f(w;i))_{i=1}^{n}_{w^ {d}}(f(w;i))=_{i=1}^{n}f_{i}^{*}.\] (3)

We are interested in the case where the set of minimizers of \(F\) is not empty. The equality \(F_{*}=_{i=1}^{n}f_{i}^{*}\) attains if and only if a minimizer of \(F\) is also the common minimizer for all component functions. This condition implies that the variance of individual functions is 0 at the common minimizer.

### PL Condition for Component Functions

Now we are ready to discuss the Polyak-Lojasiewicz condition as follows.

**Definition 1** (Polyak-Lojasiewicz condition).: _We say that \(f\) satisfies Polyak-Lojasiewicz (PL) inequality for some constant \(>0\) if_

\[\| f(w)\|^{2} 2[f(w)-f^{*}], w^{d},\] (4)

_where \(f^{*}:=_{w^{d}}f(w)\)._The PL condition for the objective function \(F\) is sufficient to show a global convergence for (stochastic) gradient descent (Karimi et al., 2016; Nesterov and Polyak, 2006; Polyak, 1964). It is well known that a function satisfying the PL condition is not necessarily convex (Karimi et al., 2016). However, this assumption on \(F\) is somewhat strong because it implies that every stationary point of \(F\) is also a global minimizer. Our goal is to consider a class of non-convex function which is more relaxed than the PL condition on \(F\), while still having the good global convergence properties. In this paper, we formulated an assumption called "average PL inequality", specifically for the finite sum setting:

**Assumption 3**.: _Suppose that \(f(;i)\) satisfies average PL inequality for some constant \(>0\) such that_

\[_{i=1}^{n}\| f(w;i)\|^{2} 2_{i=1}^{n }[f(w;i)-f_{i}^{*}], w^{d}.\] (5)

_where \(f_{i}^{*}:=_{w^{d}}f(w;i)\)._

_Comparisons._ Assumption 3 is weaker than assuming the PL inequality for every component function \(f(;i)\). In general setting, Assumption 3 is not comparable to assuming the PL inequality for \(F\). Formally, if \(F\) satisfies PL the condition for some parameter \(>0\), then we have:

\[2[F(w)-F_{*}]\| F(w)\|^{2}_{i=1}^{n}\| f (w;i)\|^{2}.\] (6)

However, by equation (3) we have that \([F(w)-F_{*}]_{i=1}^{n}[f(w;i)-f_{i}^{*}]\). Therefore, the PL inequality for each function \(f(;i)\), cannot directly imply the PL condition on \(F\) and vice versa.

In the interpolated setting where there is a common minimizer for all component function \(f(;i)\), it can be shown that the PL condition on \(F\) is stronger than our average PL assumption:

\[2_{i=1}^{n}[f(w;i)-f_{i}^{*}]=2[F(w)-F_{*}]\| F (w)\|^{2}_{i=1}^{n}\| f(w;i)\|^{2}.\]

On the other hand, our assumption cannot imply the PL inequality on \(F\) unless we impose a strong relationship that upper bound the sum of individual squared gradients \(_{i=1}^{n}\| f(w;i)\|^{2}\) in terms of the full squared gradient \(\| F(w)\|^{2}\), for every \(w^{d}\). For these reasons, the average PL Assumption 3 is arguably more reasonable than assuming the PL inequality for the objective function \(F\). Moreover, we show that Assumption 3 holds for a general class of neural networks with a final bias layer and squared loss function. We have the following theorem.

**Theorem 1**.: _Let \(\{(x^{(i)},y^{(i)})\}_{i=1}^{n}\) is a training data set where \(x^{(i)}^{m}\) is the input data and \(y^{(i)}^{c}\) is the output data for \(i=1,,n\). We consider an architecture \(h(w;i)\) with \(w\) be the vectorized weight and \(h\) consists of a final bias layer \(b\):_

\[h(w;i)=W^{T}z(;i)+b,\]

_where \(w=(\{,W,b\})\) and \(z(;i)\) are some inner architectures, which can be chosen arbitrarily. Next, we consider the squared loss \(f(w;i)=\|h(w;i)-y^{(i)}\|^{2}\). Then_

\[\| f(w;i)\|^{2} 2[f(w;i)-f_{i}^{*}], w^{d},\] (7)

_where \(f_{i}^{*}:=_{w^{d}}f(w;i)\)._

Therefore, for this application, Assumption 3 holds with \(=1\).

### Small Variance at Global Solutions

In this section, we change the interpolation property in previous literature (Ma et al., 2018; Meng et al., 2020; Loizou et al., 2021) by a small threshold. For any global solution \(w_{*}\) of \(F\), let us define

\[_{*}^{2}:=_{w_{*}_{*}}(_{i=1}^{n} \| f(w_{*};i)\|^{2}).\] (8)

We can show that when there is a common minimizer for all component functions (i.e. when the equality \(F_{*}=_{i=1}^{n}f_{i}^{*}\) holds), the best variance \(_{*}^{2}\) is 0. It is sufficient for our Theorem to impose a \(()\)-level upper bound on the variance \(_{*}^{2}\):

**Assumption 4**.: _Suppose that the best variance at \(w_{*}\) is small, that is, for \(>0\)_

\[_{*}^{2} P,\] (9)

_for some \(P>0\)._

It is important to note that in current non-convex literature, Assumption 4 alone (or, assuming \(_{*}^{2}=0\) alone) is not sufficient enough to guarantee a global convergence property for SGD. Typically, some other conditions on the good landscape of the loss function are needed to complement the over-parameterized setting. Thus, we have motivation to introduce our next assumption.

### Generalized Star-Smooth-Convex Condition for Shuffling Type Algorithm

We introduce the definition of star-smooth-convex function as follows.

**Definition 2**.: _The function \(g\) is star-\(M\)-smooth-convex with respect to a reference point \(^{d}\) if_

\[\| g(w)- g()\|^{2} M g(w)- g(),w-, w^{d}.\] (10)

It is well known that when \(g\) is \(L\)-smooth and convex , we have the following general inequality for every \(w,w^{}^{d}\):

\[\| g(w)- g(w^{})\|^{2} L g(w)- g(w^{ }),w-w^{}\] (11)

Our class of star-smooth-convex function requires a similar inequality to hold only for the special point \(w^{}=\). Interestingly, this is related to a class of star-convex functions, which satisfies the convex inequality for the minimizer \(\):

\[) g(w)-g() g(w),w- ,\; w^{d},\] (12)

This class of functions contains non-convex objective losses and is well studied in the literature (see e.g. ). Our Lemma 1 shows that the class of star-smooth-convex function is broader than the class of \(L\)-smooth and star-convex functions. Therefore, our problem of interest is non-convex in general.

**Lemma 1**.: _The function \(g\) is star-\(M\)-smooth-convex with respect to \(\) for some constant \(M>0\) if one of the two following conditions holds:_

1. \(g\) _is L-smooth and convex._
2. \(g\) _is L-smooth and_ \(g\) _is star-convex with respect to_ \(\)_._

Proof.: The first statement of Lemma 1 follows directly from equation (11). We have that \(g\) is star-\(M\)-smooth-convex with respect to any reference point and \(M=L\).

Now we proceed to the second statement. From the star-convex property of \(g\) with respect to \(\), we have

\[g(w)-g() g(w),w-,\; w^{d},\]

and \( g()=0\) since \(\) is the global minimizer of \(g\). On the other hand, \(g\) is \(L\)-smooth and we have

\[g() g(w- g(w)) g(w)- \| g(w)\|^{2},\]

which is equivalent to \(\| g(w)\|^{2} 2L[g(w)-g()]\), \(i[n]\). Since \( g()=0\), \(i[n]\), we have for \( w^{d}\)

\[\| g(w)- g()\|^{2} 2L[g(w)-g()]}{}2L g(w)- g(),w-w_{*}.\]

This is a star-\(M\)-smooth-convex function as in Definition 2 with \(M=2L\). 

For the analysis of shuffling type algorithm in this paper, we consider the general assumption called the _generalized star-smooth-convex condition for shuffling algorithms_:

**Assumption 5**.: _Using Algorithm 1, let us assume that there exist some constants \(M>0\) and \(N 0\) such that at each epoch \(t=1,,T\), we have for \(i=1,,n\):_

\[\| f(w_{i-1}^{(t)};^{(t)}(i))- f(w_{*};^{(t)}(i) )\|^{2} M f(w_{i-1}^{(t)};^{(t)}(i))- f(w_{*};^{(t )}(i)),w_{i-1}^{(t)}-w_{*}\] \[+N_{i=1}^{n}\|w_{i}^{(t)}-w_{0}^{(t)}\|^{2},\] (13)

_where \(w_{*}\) is a global solution of \(F\)._

We note that it is sufficient for our analysis to assume the case \(N=0\), i.e. the individual function \(f(;i)\) is star-\(M\)-smooth-convex with respect to \(w_{*}\) for every \(i=1,,n\) as in Definition 2. In that case, the assumption does not depend on the algorithm progress.

Assumption 5 is more flexible than the star-\(M\)-smooth-convex one in (10) because an additional term \(N_{i=1}^{n}\|w_{i}^{(t)}-w_{0}^{(t)}\|^{2}\) for some constant \(N>0\) allows for extra flexibility in our setting, where the right-hand side term \( f(w;i)- f(w_{*};i),w-w_{*}\) could be negative for some \(w^{d}\).

Note that we do not impose any assumptions on bounded weights or bounded gradients. Therefore, the term \(_{i=1}^{n}\|w_{i}^{(t)}-w_{0}^{(t)}\|^{2}\) cannot be uniformly bounded by any universal constant.

## 3 New Framework for Convergence to a Global Solution

In this section, we present our theoretical results. Our Lemma 2 first provides a recursion to bound the squared distance term \(\|_{t}-w_{*}\|^{2}\):

**Lemma 2**.: _Assume that Assumptions 1, 2, 3, and 5 hold. Let \(\{_{t}\}_{t=1}^{T}\) be the sequence generated by Algorithm 1 with \(0<_{t}\{,\}\). For every \(>0\) we have_

\[\|_{t}-w_{*}\|^{2}(1+C_{1}_{t}^{3})\|_{t -1}-w_{*}\|^{2}+C_{2}_{t}_{*}^{2}-C_{3}_{t}[F(_{t-1})-F _{*}].\] (14)

_where \(w_{*}\) is a global solution of \(F\), \(F_{*}=_{w^{d}}F(w)\), and_

\[C_{1}=}{3}+}{3M}+}{ 6MN},\\ C_{2}=+1+}+}+,\\ C_{3}=.\] (15)

Rearranging the results of Lemma 2, we have

\[F(_{t-1})-F_{*}}(}+C_{1} _{t}^{2})\|_{t-1}-w_{*}\|^{2}-_{t}}\|_{t}-w_{*}\|^{2}+}{C_{3}}_{*}^{2}.\] (16)

Therefore, with an appropriate choice of learning rate that guarantee \((1/_{t}+C_{1}_{t}^{2}) 1/_{t-1}\), we can unroll the recursion from Lemma 2. Thus we have our main result in the next Theorem.

**Theorem 2**.: _Assume that Assumptions 1, 2, 3, and 5 hold. Let \(\{_{t}\}_{t=1}^{T}\) be the sequence generated by Algorithm 1 with the learning rate \(_{i}^{(t)}=}{n}\) where \(0<_{t}\{,\}\)._

_Let the number of iterations \(T=}\) for some \(>0\) and \(>0\). Constants \(C_{1}\), \(C_{2}\), and \(C_{3}\) are defined in (15) for any \(>0\). We further define \(K=1+C_{1}D^{3}^{3/2}\) and specify the learning rate \(_{t}=K_{t-1}=K^{t}_{0}\) and \(_{0}=}{K( C_{1}D^{3})}\) such that \(}{K}\{,\}\) for some constant \(D>0\). Then we have_

\[_{t=1}^{T}[F(_{t-1})-F_{*}]D^{3})}{C_{3}D}\|_{0}-w_{*}\|^{2}+}{C_{3}}_{*}^{2},\] (17)

_where \(F_{*}=_{w^{d}}F(w)\) and \(_{*}^{2}\) is defined in (8)._

Our analysis holds for arbitrarily constant values of the parameters \(,\) and \(D\). In addition, we show our current analysis for every shuffling scheme. An interesting research question arises: whether the convergence results can be improved if one chooses to analyze a randomized shuffling scheme in this framework. However, we leave that question to future works.

Using Assumption 4, we can show the total complexity of Algorithm 1 for our setting.

**Corollary 1**.: _Suppose that the conditions in Theorem 2 and Assumption 4 hold. Choose \(C_{1}D=1\) and \(=/G\) such that \(0< G\) with the constants_

\[G =D^{2}e}{C_{3}}\|_{0}-w_{*}\|^{2}+ P}{C_{3}},\] \[C_{1}=^{2}}{3}+}{M}+^{2}}{3M},\\ C_{2}=+1+}+}+,\\ C_{3}=+1}.\]

_Then, the we need \(T=}{^{3/2}}\) epochs to guarantee_

\[_{1 t T}[F(_{t-1})-F_{*}]_{t=1}^{T}[F (_{t-1})-F_{*}].\]

|p{56.9pt}|p{56.9pt}|p{56.9pt}|p{56.9pt}|} 
**Settings** & **References** & **Complexity** &  **Shuffling** \\ **Schemes** \\  &  **Global** \\ **Solution** \\  \\  Convex &  Nemirovski et al. , Shamir and Zhang 1  & \((^{2}+G^{2}}{^{2}})\) & ✗ & ✓ \\   &  Mishchenko et al. , Nguyen et al. 2  \\  PL condition & Nguyen et al.  & \(}(}{^{3/2}})\) & ✓ & ✓ \\  Star-convex related &  Gower et al. 3  \\  \\  Non-convex & 
 Nguyen et al. , Mishchenko et al. 5  \\  \\  

Table 1: Comparisons of computational complexity (the number of individual gradient evaluations) needed by SGD algorithm to reach an \(\)-accurate solution \(w\) that satisfies \(F(w)-F(w_{*})\) (or \(\| F(w)\|^{2}\) in the non-convex case).

_Computational complexity._ Our global convergence result in this Corollary holds for a fixed value of \(\) in Assumption 4. Thus, when \( 0\), this assumption is equivalent to assuming \(_{*}^{2}=0\). The total complexity of Corollary 1 is \((})\). This rate matches the best known rate for unified sampling schemes for SGD in convex setting (Mishchenko et al., 2020, Nguyen et al., 2021). However, our result holds for a broader class of functions that are possibly non-convex. Comparing to the non-convex setting, current literature (Mishchenko et al., 2020, Nguyen et al., 2021) also matches our rate to the order of \(\), however, we can only prove that SGD converges to a stationary point with a weaker criteria \(\| F(w)\|^{2}\) for general non-convex funtions. Table 1 shows these comparisons in various settings. Note that when using a randomized shuffling scheme, SGD often performs a better rate in terms of the data \(n\) in various settings with and without (strongly) convexity. For example, in strongly convex and/or PL setting, the convergence rate of RR is \(}(/})\), which is better than unified schemes with \(}(n/})\)(Ahn et al., 2020). However, for a fair comparison, we do not report these results in Table 1 as our theoretical analysis is derived for unified shuffling scheme.

If we further assume that \(L,M,N>1\), the detailed complexity with respect to these constants is

\[((M+N)^{3/2}}{^{3/2}}^{3/2}}).\]

We present all the detailed proofs in the Appendix. Our theoretical framework is new and adapted to the finite-sum minimization problem. Moreover, it utilizes the choice of shuffling sample schemes to show a better complexity in terms of \(\) than the complexity of vanilla i.i.d. sampling scheme.

## 4 Numerical Experiments

In this section, we show some experiments for shuffling-type SGD algorithms to demonstrate our theoretical results of convergence to a global solution. Following the setting of Theorem 1, we consider the non-convex regression problem with squared loss function. We choose fully connected neural networks in our implementation. We experiment with different regression datasets: the Diabetes dataset from sklearn library (Efron et al., 2004, Pedregosa et al., 2011) with 442 samples in dimension 10; the Life expectancy dataset from WHO (Repository, 2016) with 1649 trainable data points and 19 features. In addition, we test with the California Housing data from StatLib repository (Repository, 1997, Pedregosa et al., 2011) with a training set of 16514 samples and 8 features.

For the small Diabetes dataset, we use the classic LeNet-300-100 model (LeCun et al., 1998). For other larger datasets, we use similar fully connected neural networks with an additional starting layer of 900 neurons. We apply the randomized reshuffling scheme using PyTorch framework (Paszke et al., 2019). This shuffling scheme is the common heuristic in training neural networks and is implemented in many deep learning platforms (e.g. TensorFlow, PyTorch, and Keras (Abadi et al., 2015, Paszke et al., 2019, Chollet et al., 2015)).

For each dataset \(\{x_{i},y_{i}\}\), we preprocess and modify the initial data lightly to guarantee the over-parameterized setting in our experiment. We do this by using a pre-training stage: firstly we use GD/SGD algorithm to find a weight \(w\) that yields a sufficiently small value for the loss function (for Diabetes dataset we train to \(10^{-8}\) and for other datasets we train to \(10^{-2}\)). Letting the input data \(x_{i}\) be fixed, we change the label data to \(_{i}\) such that the weight \(w\) yields a small loss function \(()\) for the optimization associated with data \(\{x_{i},_{i}\}\), and the distance between \(_{i}\) and \(y_{i}\) is small. Then the modified data is ready for the next stage. We summarize the data (after modification) in our experiments in Table 2.

  Data name & \# Samples & \# Features & Networks layers & Sources \\  Diabetes & 442 & 10 & 300-100 & Efron et al. (2004) \\  Life Expectancy & 1649 & 19 & 900-300-100 & Repository (2016) \\  California Housing & 16514 & 8 & 900-300-100 & Repository (1997) \\  

Table 2: Datasets used in our experimentsFor each dataset, we first tune the step size using a coarse grid search \([0.0001,0.001,0.01,0.1,1]\) for 100 epochs. Then, for example, if 0.01 performs the best, we test the second grid search \([0.002,0.005,0.01,0.02,0.05]\) for 5000 epochs. Finally, we progress to the training stage with \(10^{6}\) epochs and repeat that experiment for 5 random seeds. We report the average results with confidence intervals in Figure 1.

For California Housing data, Shuffling SGD fluctuates toward the end of the training process. Nevertheless, for all three datasets it converges steadily to a small value of loss function. In summary, this experiment confirms our theoretical guarantee that demonstrates a convergence to global solution for shuffling-type SGD algorithm in neural network settings.

## 5 Conclusion and Future Research

In this paper, our focus is on investigating the global convergence properties of shuffling-type SGD methods. We consider a more relaxed set of assumptions in the framework of star-smooth-convex functions. We demonstrate that our approach achieves a total complexity of \((})\) to attain an \(\)-accurate global solution. Notably, this result aligns with the previous computational complexity of unified shuffling methods in non-convex settings, while ensuring that the algorithm converges to a global solution. Our theoretical framework revolves around the shuffling sample schemes for finite-sum minimization problems in machine learning.

We also provide insights into the relationships between our framework and well-established over-parameterized settings, as well as the existing literature on the star-convexity class of functions. Furthermore, we establish connections with neural network architectures and explore how these learning models align with our theoretical optimization frameworks.

This paper prompts several intriguing research questions, including practical network designs and more relaxed theoretical settings that can support the global convergence of shuffling SGD methods. Additionally, extending the global convergence framework to other stochastic gradient methods (Duchi et al., 2011; Kingma and Ba, 2014) and variance reduction methods (Le Roux et al., 2012; Defazio et al., 2014; Johnson and Zhang, 2013; Nguyen et al., 2017), all with shuffling sampling schemes, as well as the exploration of momentum shuffling methods (Tran et al., 2021, 2022), represents a promising direction.

An interesting research question that arises is whether the convergence results can be further enhanced by exploring the potential of a randomized shuffling scheme within this framework (Mishchenko et al., 2020). However, we leave this question for future research endeavors.

Figure 1: The train loss produced by Shuffling SGD algorithm for three datasets: Diabetes, Life Expectancy and California Housing.