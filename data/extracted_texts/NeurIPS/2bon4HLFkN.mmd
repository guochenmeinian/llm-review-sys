# IR-CM: The Fast and General-purpose Image Restoration Method Based on Consistency Model

Xiaoxuan Gong

School of Artificial Intelligence and Automation, HUST

Huazhong University of Science and Technology

Wuhan, China

gongxiaoxuan286@gmail.com

&Jie Ma*

School of Artificial Intelligence and Automation, HUST

Huazhong University of Science and Technology

Wuhan, China

majie@hust.edu.cn

###### Abstract

This paper proposes a fast and general-purpose image restoration method. The key idea is to achieve few-step or even one-step inference by conducting consistency distilling or training on a specific mean-reverting stochastic differential equations. Furthermore, based on this, we propose a novel linear-nonlinear decoupling training strategy, significantly enhancing training effectiveness and surpassing consistency distillation on inference performance. This allows our method to be independent of any pre-trained checkpoint, enabling it to serve as an effective standalone image-to-image transformation model. Finally, to avoid trivial solutions and stabilize model training, we introduce a simple origin-guided loss. To validate the effectiveness of our proposed method, we conducted experiments on tasks including image deraining, denoising, deblurring, and low-light image enhancement. The experiments show that our method achieves highly competitive results with only one-step inference. And with just two-step inference, it can achieve state-of-the-art performance in low-light image enhancement. Furthermore, a number of ablation experiments demonstrate the effectiveness of the proposed training strategy. our code is available at https://github.com/XiaoxuanGong/IR-CM.

## 1 Introduction

Image restoration is a classic problem in the field of computer vision. It aims to transform low-quality or noisy images into their corresponding high-quality or noise-free counterparts. In many industrial applications (such as autonomous driving), there are various complex types of image degradation, including rain and fog interference, glare interference, low-light conditions, and motion blur etc. This necessitates high generality in image restoration algorithms. Moreover, there is often a high demand for real-time performance in practical application scenarios, posing even greater challenges to the design of algorithms and models.

Common image restoration tasks include image deraining[1; 2; 3; 4; 5; 6], denoising[7; 8; 9; 10; 11], and deblurring[12; 13; 14; 15] etc. Due to the demands of industrial applications, research on low-light image enhancement[16; 17; 18; 19; 20; 21] is also gradually increasing. However, these methods are often heuristic and difficult to apply to general tasks because they typically require domain-specific prior knowledge for training. A more general approach is the recently proposed IR-SDE, whichdoes not rely on any prior knowledge. It only requires pairs of high-quality(HQ)/low-quality(LQ) images for training and achieves good results across multiple image restoration tasks. However, like most diffusion-based methods, it requires multi-step sampling for inference, making it difficult to meet the real-time requirements of practical applications.

In recent years, diffusion models have achieved remarkable results in both unconditional image generation[23; 24; 25; 26] and conditional image generation tasks[27; 28; 29; 22; 30; 21; 31; 32]. In a more general description, diffusion models can be described using stochastic differential equations (SDEs)[33; 34]. It achieves this by converting the original data distribution into a fixed Gaussian distribution, then learning the corresponding distribution gradients (score) through a network, and finally gradually reconstructing the original image using SDE solvers or ODE solvers. Most SDE-based methods can generate high-quality samples, however they often require many steps of sampling to accomplish this. Despite the existence of many methods for accelerating sampling[25; 35; 36], it remains challenging to meet the real-time requirements in industrial applications. Recently, the consistency model has been proposed. It aims to map any point on the ODE trajectory of the SDE-based model to its origin. Once trained, the model can achieve one-step inference with some decrease in model performance. The training of consistency models is divided into two approaches: consistency distillation(CD) and consistency training(CT). The former involves distilling training based on the ODE trajectories of a pre-trained SDE model. The latter, while not requiring a pre-trained SDE model and can be considered as an independent generative model, typically exhibits lower performance compared to the former. This means that training consistency models often rely on pre-trained models, which inevitably leads to performance degradation.

The purpose of this paper is to design a universal image restoration model with fast inference. The proposed model, named IR-CM (_Image **R**estoration **C**onsistency **M**odel), achieves one-step or few-step fast inference through consistency model training. Due to its versatility and flexibility in different image transformation tasks, the IR-SDE serves as the foundation for our method. IR-CM can be trained using consistency distillation (CD) on a pre-trained model, but at the cost of a slight decrease in performance. Therefore, we focus more on consistency training (CT), enabling IR-CM to become an independent image restoration model without relying on any pre-trained checkpoint. Furthermore, to improve the effectiveness of CT, we propose a novel linear-nonlinear decoupling training strategy and a novel origin-estimated consistency function, these allows the model's performance to reach or even surpass that of the original model. Finally, we propose a simple origin-guided loss to stabilize the training process. In summary, the main contributions of our method are as follows:

* We propose a universal and fast image restoration method that can obtain high-quality images with one step or few-step sampling. For different tasks, training only requires dataset replacement, without the need for any additional prior knowledge.
* We have introduced a novel linear-nonlinear decoupling training strategy, enabling our method to achieve even surpass the performance of the original model without relying on any pre-trained checkpoint.
* We propose a novel origin-estimated consistency function, which enables our model to have a more stable initial state and a smaller solution space, and a simple origin-guided loss to stabilize the training process. This makes our method more robust. The ablative experiments demonstrated its effectiveness.
* Our method achieves highly competitive performance in multiple tasks (including image deraining, denoising, deblurring, and low-light image enhancement) with one-step inference. With two-step inference, our method achieves state-of-the-art performance in low-light image enhancement task.

## 2 Preliminaries

### Mean-reverting stochastic differential equation

Our method requires a SDE-based model as the base model for consistency training. Specifically, we choose IR-SDE as the base SDE model due to its excellent generality and applicability. Its forward process involves gradually transforming high-quality images into corresponding low-quality versions with fixed-variance Gaussian noise. It can be represented as follows:

\[dx=_{t}(-x)dx+_{t}dw,\] (1)where \(^{d}\) typically represents the low-quality image, and \(x(0)^{d}\) represents its corresponding high-quality version, \(_{t}\), \(_{t}\) are time-dependent positive parameters, and they satisfy \(_{t}^{2}/_{t}=2^{2}\) for all times \(t\) with positive constant \(\), and \(dw\) represents Brownian motion. In , it has been proven that at each time t, the marginal probability distribution of x can be represented as follows:

\[p_{t}(x) =(x(t) m_{t},v_{t}),\] (2) \[m_{t} :=+(x(0)-)e^{-_{t}},\] \[v_{t} :=^{2}(1-e^{-2_{t}}),\]

where \(_{t}=_{0}^{t}_{k}dk\). As \(t\) increases gradually, \(m_{t}\) approaches \(\) and \(v_{t}\) approaches \(^{2}\). Thus, \(x(0)\) (the high-quality image) will gradually transform into its corresponding low-quality version \(\) accompanied by Gaussian noise with variance \(^{2}\).

With the above conclusion, we can naturally sample \(x(t)\) by \(x(t)=m_{t}+}_{t}\). Then we can train a network to estimate the noise \(_{t}\). In the inference phase, the reverse-time process of the IR-SDE can be represented as follows:

\[dx= [_{t}(-x)-_{t}^{2}_{x} p _{t}(x)]dt,\] (3) \[_{x} p_{t}(x)= -}{v_{t}}\] \[= -(x,,t)}{}},\]

where \(_{x} p_{t}(x)\) is called score function and \((x,,t)\) is the noise estimated by network. Then, similar to other SDE-based models, we can adopt a SDE-solver (or ODE-solver) to reverse the process to restore the low-quality image \(x(t)\) back to the high-quality version \(x(0)\) progressively.

### Consistency model

For a solution trajectory \(\{x_{t}\}_{t[,T]}\) of any PF-ODE such as (3), a consistency function can be defined as \(f(x_{t},t) x_{}\), where \(\) is a small positive number. This means that when sampling any pair \((x_{t},t)\) on the trajectory of the PF-ODE, the output of the consistency function is always the initial point \(x_{}\) of the trajectory. This property is referred to as self-consistency. The example of the consistency function in  is as follows:

\[f_{}(x_{t},t)=c_{skip}(t)x_{t}+c_{out}(t)F_{}(x_{t},t),\] (4)

where \(c_{skip}(t),c_{out}(t)\) are differentiable functions, and they satisfy \(c_{skip}()=1,c_{out}()=0\), \(F_{}(x_{t},t)\) is a trainable network initialized by a pre-trained noise estimation model. Once training is complete, we only need to input \(x_{T}\) and apply \(f_{}(x_{T},T)=x_{}\) to obtain high-quality sample in one step. There are two training methods for consistency models:

**Consistency Distillation (CD)** For a discrete time sequence \(t_{1}=<t_{2}<...<t_{N}=T\), given an arbitrary point \((x_{t_{n+1}},t_{n+1})\) on PF-ODE trajectory, we can estimate the \(x_{t_{n}}\) by following formula:

\[_{t_{n}}^{}=x_{t_{n+1}}+(t_{n}-t_{n+1})(x_{t_{n+1}},t_{n+1}; ),\] (5)

where \(()\) represents the update function of a one step ODE solver applied to the PF-ODE, and \(\) is the weights of a pre-trained score matching network. Then the CD loss can represent as follow:

\[_{CD}(,^{-};):=[(t_{n})d(f_{ }(x_{t_{n+1}},t_{n+1}),f_{^{-}}(_{t_{n}}^{},t_{n})) ],\] (6)

where \(^{-}\) represents the exponential moving average (EMA) version of training weights \(\), it is frozen during backward, and \(()\) is a positive weighting function, \(d()\) denotes a distance function, such as the L1 or L2 distance. This approach essentially involves distillation training on the pre-trained score matching network, hence referred to as consistency distillation.

**Consistency Training (CT)** Unlike CD, the CT does not rely on a pre-trained score matching network and can independently train any SDE-based model. The CT loss is represented as follow:

\[_{CT}(,^{-}):=[(t_{n})d(f_{}(x_{t _{n+1}},t_{n+1}),f_{^{-}}(x_{t_{n}},t_{n}))],\] (7)

Here \(x_{t_{n}}\) and \(x_{t_{n+1}}\) are both sampled from the forward process of SDE model.

Method

The key idea of our method lies in employing our proposed two-stage training strategy and the origin-estimated consistency function to conduct consistency training on the IR-SDE model. We thus refer to it as an _Image Restoration Consistency Model_ (IR-CM).We begin by describing the novel origin-estimated consistency function, followed by an explanation of the proposed two-stage training strategy and the origin-guided loss. The overall architecture is depicted in Fig 1.

### Origin-estimated consistency function

For any SDE-based model, each step of the reverse process is essentially a prediction of the PF-ODE solution. In other words, any point on the PF-ODE trajectory actually contains information about the origin. Based on this, according to equations (2) and (3), the origin prediction function at each point on the PF-ODE trajectory of the IR-SDE is as follows:

\[(0)=(1-e^{_{t}})+e^{_{t}}[x(t)- }_{}(x,,t)].\] (8)

During the consistency training phase(both for CD and CT), differ from the formula (4) proposed in , we train using the following origin-estimated consistency function (OECF):

\[f_{}(x_{t},t)=c_{skip}(t)x(t)+c_{out}(t)_{0}(x,t;),\] (9)

where the \(_{0}(x,t;)\) is obtained by (8). Suppose the pre-trained score model matches the ground truth, i.e., \( t[,T]:_{}(x,,t)=(t)+o( t)\) and \(c_{skip}(T)=0\), \(c_{out}(T)=1\). For formulas (4) and (9), \(c_{skip}(t)\), \(x(t)\), and \(c_{out}(t)\) are all same and constant at each time t. Thus, for simplicity in analysis, we specifically consider the moment \(t=T\). Then substituting equation (2) into equations (4) and (9) respectively, we obtain:

\[f_{}(x_{T},T) =x(0)+-}x(0)}{}}+o( t),\] (10) \[f_{ OECF}(x_{T},T) =x(0)-e^{_{T}}v_{T}o( t).\] (11)

From equation (10), it can be observed that if equation (4) is chosen as the consistency function, the initial solution will have a significant fixed error. In contrast, using the OECF, the initial solution will only have a time-dependent higher-order infinitesimal error. Therefore, for a pre-trained score matching model, the OECF offers a more stable initial state and hence a smaller solution space for all time \(t\).

Intuitively, OECF can effectively enhance the training performance of CD. In practice, we have found that for CT, OECF also exhibits significant performance improvements compared to equation (4). The relevant ablative experiment results will be presented in Chapter 4. Note that, unlike CD, the pre-trained model in CT is only used to initialize the training weights and is not involved in any training process. In practice, training with randomly initialized weights is also feasible, albeit usually resulting in slightly longer convergence times.

### Origin-guided loss

In general training, we randomly sample \((x_{t},t)\) and \((x_{t+1},t+1)\) using equation (2), and then simply apply (6) for CD or (7) for CT, as illustrated in the lower half of Figure 1. However, we have empirically found that its performance is not ideal, and occasionally, pattern collapse occurs. Upon further analysis, we discovered that this often occurs when \(t\) is not sufficiently small during the random sampling in the early stages of training. This also leads to the emergence of mediocre solutions. Below we provide a simple theoretical proof.

**Theorem 1**.: Let \(c_{out}(t)\) be monotonic differentiable and satisfy \(c_{out}()=0,c_{out}(T)=1\), consider (9) as consistency function. When \(t>\), for any \(y^{d}\), there always exists a \(_{}(x_{t},,t)\) such that \(f_{}(x_{t},t)=y\).

Proof.: Recall (9), there is

\[y=c_{skip}(t)x(t)+c_{out}(t)_{0}(x,t;),\] (12)then substitute (8) into (12), we obtain:

\[_{}(x_{t},,t)=e^{-_{t}}(t)x(t)} {c_{out}(t)v_{t}}+}(e^{-_{t}}-1)+},\] (13)

Note that when \(t>\), both \(v_{t}\) and \(_{t}\) are greater than 0, so the right-hand side of equation (13) is non-singular. This implies that under loss functions (6) and (7), the consistency function admits arbitrary non-singular solutions, leading to pattern collapse. In other hand, (6) and (7) only emphasize the self-consistency between any two points on the PF-ODE trajectory, leading to a lack of determinism in the training process. This uncertainty indirectly contributes to slower convergence of the model.

To address this issue, we additionally introduce the following origin-guided(OG) loss to stabilize the training process.

\[_{OG} =[\|f_{}(x_{t+1},t+1)-x(0)\|_{1}]\] \[+_{perc}[\|(f_{}(x_{t+1},t+1))- (x(0))\|^{2}],\] (14)

where \(_{perc}\) is a positive constant, and \(()\) represents a VGG16 feature extractor from 2nd and 5th pooling layers. This is equivalent to performing a consistency computation with the origin after each random sampling, hence referred to as the origin-guided loss. This effectively avoids the emergence of mediocre solutions and adds some certain determinism to the training process, resulting in faster convergence. Then the final loss function is represented as follows:

\[_{full}=_{CD/CT}+_{OG}_{OG},\] (15)

where \(_{OG}\) is a positive constant. The selection of \(_{OG}\) will be discussed in the ablation experiment section of Chapter 4.

### Linear-nonlinear decoupling training strategy

With the foundation laid in Sections 3.1 and 3.2, we can naturally train IR-CM by a regular CD or CT process, as illustrated in the lower half of Figure 1. Despite this method offers convenience in training IR-CM, we have empirically found that its performance is not optimal in practice. Let us recall the SDE (2) and OECF (9), we obtain:

\[f_{}(x_{t},t)=(t)}_{$}}+ (t)[(x(0)-)e^{-_{t}}]}_{$}}+(t)}}_{$}}+c_{out}(t)_{0}(x,t;).\] (16)

Figure 1: Two-stage training strategy, where \(\) is set as the low-quality image to be restored. In Stage One, by setting \(x(0)=\), the forward SDE (1) actually degrades into a simple noise addition process, upon which consistency training is conducted on \(x(t)\) with different levels of noise. In Stage Two, \(x(0)\) is set as the high-quality image and gradually transformed into the corresponding low-quality image with a fixed level of noise by (1). Consistency training is then performed on each intermediate state \(x(t)\).

In general training, the model attempts to simultaneously fit the variations of both linear part \(f_{1}\) and nonlinear part \(f_{2}\). Obviously, this is more challenging than fitting \(f_{1}\) alone. In practice, the model's performance at larger values of \(t\) is more crucial during training, because any intermediate state for \(x(t), t[,T)\) are unknown during inference, thus we can only set \(t=T\) for inference. And note that there is \(_{t T}f_{2} 0\), therefore, the influence of \(f_{2}\) is negligible when \(t=T\). Based on the analysis above, we can then eliminate \(f_{2}\) for all \(t\) by simply setting \(x(0)\) as \(\). By doing so, the original image degradation process is transformed into a purely image noising process (as shown in the upper half of Figure 1). Since only the linear part \(f_{1}\) and noise \(f_{3}\) are being fitted, the model will achieve better performance over the entire PF-ODE trajectory, leading to improved inference performance as well. We refer to this training as the linear-fitting stage and the corresponding pseudocode is shown in Algorithm 1.

``` Input dataset \(\), model parameter \(\), OECF \(f_{}(,)\), learning rate \(\), OG Weight \(_{OG}\); \(^{-}\); whilenot convergencedo  Sample \((x_{LQ}\),\(y_{HQ})\) and \(n[1,N-1]\); \( x_{LQ}\), \(x(0) x_{HQ}\);  Sample \(x_{t_{n}}(m_{t_{n}},v_{t_{n}})\) and \(x_{t_{n+1}}(m_{t_{n+1}},v_{t_{n+1}})\); \(_{full}(,^{-})_{CT}(f_{}(x_{t_{n}},t_{n}),f_{}(x_{t_{n+1}},t_{n+1}))+_{OG}_{OG}(f_{}(x _{t_{n+1}},t_{n+1}),y_{HQ})\); \(-_{full}(,^{-})\) \(()\)  end while ```

**Algorithm 1**Linear-fitting stage

Despite the Linear-fitting stage achieves good performance for one-step inference after training, we can still further improve the performance by employing appropriate multi-step sampling. However, the model trained in the Linear-fitting stage cannot perform multi-step sampling inference because the output HQ image is not the origin \(x(0)=\) of PF-ODE trajectory, making it unable to estimate any intermediate states \(x_{t}\) after one inference. Therefore, after the Linear-fitting stage, we set \(x(0)\) to be the HQ image instead of \(\) and fine-tune the model (Algorithm 2). Since in the previous stage, the model has already fitted \(f_{1}\) and \(f_{3}\), this stage mainly focuses on fitting the non-linear part \(f_{2}\). Therefore, this stage is naturally referred to as the non-Linear-fitting stage. After training in the non-linear stage, the model's performance at \(t=T\) is almost unchanged, meaning there is no change in the performance of one-step inference. But the model will be able to perform multi-step sampling inference (Algorithm 3 in appendix C). In practice, even just two-step sampling inference brings a noticeable performance improvement. Relevant comparative experiments and ablative experiments will be presented in Chapter 4.

## 4 Experiments

### Comparative Experiment

In this section, we will validate the effectiveness of our proposed method on five tasks: image de-raining, image denoising, image deblurring, low-light image enhancement, and nighttime glare removal. The implementation details are described in Appendix A. Specifically, we will compare our method with some of the state-of-the-art methods on PSNR, SSIM, LPIPS metrics and NFE. The NFE (Number of Function Evaluations) refers to the number of function evaluations required to generate an image or data. In other words, it is the number of evaluations needed at each step of the diffusion process. Notably, like other SDE-based models, we prioritize perceptual scores LPIPS over distortion scores PSNR and SSIM. And our metric settings are same as other mentioned baseline methods. For PSNR metric, we perform the calculation in the luminance space (Y channel). For SSIM metric, it refer to , and for LPIPS metric, it refer to . All comparison experiments were 

[MISSING_PAGE_FAIL:7]

weight initialization is also an option. In practice, we found that when given enough training time, the performance of both approaches is quite similar.

#### 4.1.2 Image deblurring

We validated the effectiveness of the proposed IR-CM model for image deblurring task based on the GoPro dataset. A total of 2103 images are used for training, while 1111 images are reserved for testing. Our method is qualitatively and quantitatively compared with some of the milestone image deblurring methods including DeepDeblur, DeblurGAN-v2, DBGAN, MAXIM, DiffIR and of course IR-SDE. The comparison results are shown in Table 4 and Figure 4. More visual results are available in appendix D.

Our proposed method achieves optimal performance on SSIM and LPIPS metrics, surpassing the IR-SDE baseline model as well. This strongly demonstrates the effectiveness of our proposed consistency training approach. Notably, like other SDE-based models, we prioritize perceptual scores LPIPS over distortion scores PSNR and SSIM.

#### 4.1.3 Image denoising

Note that the last term in (1) is a Gaussian process. Hence, we can consider a special case where \(=x(0)\). In this case, the IR-SDE degenerates into a pure additive noise process. This implies that any point along the PF-ODE trajectory can serve as a noisy image to be processed. In this scenario, we can only apply the conventional consistency training approach and cannot utilize the proposed linear-nonlinear decoupled training strategy because \(x(0)\) must be set as the HQ image and \(x(t)\) represents the corresponding low-quality (LQ) image.

Similar to , we collected approximately 5000 HQ images from the DIV2K, Flickr2K, and BSD500 datasets for training, and subsequently tested on the McMaster dataset. To demonstrate the competitiveness of our method against state-of-the-art approaches, we compare it with DnCNN, FFDNet, as well as the special denoising methods proposed in , namely Denoising-SDE and Denoising-ODE. Our method achieves the optimal result in perceptual scores. Comparative experimental results are shown in Table 5, and visual results are available in appendix D.

#### 4.1.4 Low-light image enhancement

We compare our method with existing researches for low-light image enhancement tasks on the LOLv2 dataset consisted of 689 pairs training images and 100 pairs testing images. We compare our proposed method with some recent approaches for low-light image enhancement task, including: DiffL, GlobalDiff, Retinexformer, LLFlow. Note that IR-SDE is trained following the experimental settings described in , while IR-CM-CD is based on consistency distillation using the trained weights of IR-SDE. Our method outperforms the state-of-the-art diffusion-based methods, DiffLL and GlobalDiff, and requires only two sampling steps. The corresponding quantitative and qualitative comparison results are shown in Table 6 and Figure 5 respectively. More visual results are available in appendix D

#### 4.1.5 Runtime Comparation

To validate the superiority of our method in inference real-time performance, we compared it with several other state-of-the-art (SOTA) methods across three common resolution sizes. The results are shown in Table8. Compared to the baseline method IR-SDE, our method significantly reduces inference time by introducing a consistency training process. In some real-time demanding applications, one-step sampling inference allows for fast predictions while maintaining competitive performance. On the other hand, two-step sampling inference can substantially improve model

  Methods &  \\  Methods / Metrics & PSNR\(\) & SSIM\(\) & LPIPS\(\) & NREL \\  DiffL & 28.86 & 0.88 & 0.207 & 10 \\ GlobalDiff & 28.82 & 0.90 & 0.095 & 500 \\ Retinexformer & 27.71 & 0.86 & 0.097 & 1 \\ LTFlow & 26.02 & 0.93 & 0.099 & 1 \\ IR-SDE & 27.05 & 0.90 & 0.087 & 100 \\ CNN-baseline & 23.16 & 0.81 & 0.156 & 1 \\  IR-CM-CD (ours) & 26.33 & 0.89 & 0.098 & 1 \\ IR-CM-CT (ours) & 27.61 & 0.93 & 0.027 & 1 \\ IR-CM-CT (ours) & **30.20** & **0.95** & **0.021** & 2 \\  

Table 6: Quantitative comparison results on LOLv2 dataset. The optimal results are indicated by **bold underlining**.

Figure 4: Qualitative comparison results on GoPro dataset. More visual results are available in appendix D.

Figure 5: Qualitative comparison results on LOLv2 dataset. More visual results are available in appendix D.

   &  &  \\  Group & OECF & OGL & LLIDT & PSNR & SSIM & LPIPS \\ 
1 & \(\) & \(\) & \(\) & 23.06 & 0.82 & 0.144 \\
2 & \(\) & \(\) & \(\) & 23.62 & 0.88 & 0.094 \\
3 & \(\) & \(\) & \(\) & 23.99 & 0.86 & 0.120 \\
4 & \(\) & \(\) & \(\) & 25.04 & 0.91 & 0.059 \\ 
5 & \(\) & \(\) & \(\) & 23.96 & 0.84 & 0.121 \\
6 & \(\) & \(\) & \(\) & 25.01 & 0.89 & 0.072 \\
7 & \(\) & \(\) & \(\) & 24.45 & 0.86 & 0.101 \\
8 & \(\) & \(\) & \(\) & 27.61 & 0.93 & 0.027 \\  

Table 7: Ablation experiment results on LOLv2 dataset. OECF: origin-estimated consistency function, OGL: origin-guided loss, LLDT: linear-nonlinear decoupling training strategy.

performance with only a slight trade-off in inference speed. Users can choose the approach based on their specific requirements. Additionally, a discussion on the model complexity will be provided in Appendix E.

### Ablation Experiments

#### 4.2.1 Components ablation experiments

The main innovations of this paper lie in the OECF, Origin-guided loss, and the linear-nonlinear decoupling training strategy proposed in the previous section. To verify the effectiveness of each component, we conducted a series of ablation experiments using low-light image enhancement as an example. To ensure fairness, each control group used the same checkpoint for model initialization, and the total number of epochs was kept consistent during training. And only the performance of one-step sampling inference was considered. The corresponding results are shown in Table 7. The effectiveness of the proposed OECF can be demonstrated by group pairs (1, 3), (2, 4), (5, 7), (6, 8). The significant improvement in perceptual scores due to the origin-guided loss is evident from the comparisons between group pairs (1, 2), (3, 4), (5, 6), (7, 8). Finally, the notable performance enhancement of the model due to the linear-nonlinear decoupling training strategy can be seen from the comparisons between groups (1, 5), (2, 6), (3, 7), (4, 8). Note that for groups 5 and 7, we only use the origin-guided loss during the Linear-fitting stage, and not during the nonlinear-fitting stage.

#### 4.2.2 Selection of origin-guided loss weight

The setting of \(_{OG}\) also affects the performance of IR-CM. If set too low, the model may become unstable and perform poorly, as discussed in Section 3.2. If set too high, it will affect self-consistency property, leading to a degradation into a CNN-baseline method. We experimented with multiple values and empirically found that the best performance is achieved around 0.8. The related experimental results are discussed in Appendix B.

#### 4.2.3 Linear-fitting stage only & Multiple sampling

In fact, after completing the linear-fitting stage, the model can already perform one-step sampling inference, however, it cannot perform multi-step sampling as discussed in Section 3.3. To further evaluate the model's performance, we tested it under the conditions of linear-fitting stage only, and with 1-step, 2-step, 4-step, and 6-step sampling. Empirically, we consider 2-step sampling to be the most cost-effective choice. The related experimental results are discussed in Appendix C.

## 5 Conclusion

This paper proposes a multi-task image restoration and enhancement method, IR-CM, based on a consistency training approach, enabling few-step or even one-step sampling inference. Specifically, we proposed the Origin-estimated Consistency Function (OECF), which provides a more stable initial state and a smaller solution space for the consistency training process. Furthermore, to make the training process more robust and prevent trivial solutions, we introduced the Origin-guided Loss (OE Loss). Based on these, we developed a Linear-Nonlinear Decoupling Training Strategy, which not only accelerates the training process but, more importantly, enables the model to perform multi-step sampling inference, further enhancing its performance. Finally, a series of comparative experiments and ablation studies demonstrated the effectiveness of the proposed method.

  image size / methods & MAXIM & Restomer & IR-SDE & DiffL.L & GlobalDiff & DiffR & IR-CM(1-step) & IR-CM(2-step) \\ 
256x256 & 0.092 & 0.117 & 7.325 & 0.087 & 0.134 & 0.574 & **0.073** & 0.145 \\
600x400 & 0.297 & 0.395 & 27.418 & 0.309 & 0.637 & 2.743 & **0.273** & 0.547 \\
1280x720 & 1.223 & 1.512 & 98.731 & 1.045 & 1.881 & 7.155 & **0.992** & 1.984 \\  

Table 8: Inference time comparison with some of SOTA methods on three typical image sizes. All tests were conducted using an NVIDIA 2080Ti GPU. The optimal results are indicated by **bold underlining**.

Acknowledgment

Our work is supported by the weapons and equipment pre-research fund, Grant No. 50911020603.