# Compositional Generative Inverse Design

Tailin Wu 1

Westlake University

wutailin@westlake.edu.cn

&Takashi Maruyama 1

NEC Laboratories Europe

Takashi.Maruyama@neclab.eu

&Long Wei 1

Westlake University

weilong@westlake.edu.cn

&Tao Zhang 1

Westlake University

zhangtao@westlake.edu.cn

&Yilun Du 1

Massachusetts Institute of Technology

yilundu@mit.edu

&Gianluca Iaccarino

Stanford University

jops@stanford.edu

&Jure Leskovec

Stanford University

jure@cs.standford.edu

###### Abstract

Inverse design, where we seek to design input variables in order to optimize an underlying objective function, is an important problem that arises across fields such as mechanical engineering to aerospace engineering. Inverse design is typically formulated as an optimization problem, with recent works leveraging optimization across learned dynamics models. However, as models are optimized they tend to fall into adversarial modes, preventing effective sampling. We illustrate that by instead optimizing over the learned energy function captured by the diffusion model, we can avoid such adversarial examples and significantly improve design performance. We further illustrate how such a design system is compositional, enabling us to combine multiple different diffusion models representing subcomponents of our desired system to design systems with every specified component. In an N-body interaction task and a challenging 2D multi-airfoil design task, we demonstrate that our method allows us to design initial states and boundary shapes that are more complex than those in the training data. Our method outperforms state-of-the-art neural inverse design method for the N-body dataset and discovers formation flying to minimize drag in the multi-airfoil design task.

## 1 Introduction

The problem of inverse design - finding a set of high-dimensional design parameters (e.g., boundary and initial conditions) for a system to optimize a set of specified objectives and constraints, occurs across many engineering domains such as mechanical, materials, and aerospace engineering, with important applications such as jet engine design (Athanasopoulos et al., 2009), nanophotonic design (Molesky et al., 2018), shape design for underwater robots (Saghaf & Lavimi, 2020), and battery design (Bhowmik et al., 2019). Such inverse design problems are extremely challenging since they typically involve simulating the full trajectory of complicated physical dynamics as an inner loop, have high-dimensional design space, (e.g. complex shape for airplane surface design) and require out-of-distribution test-time generalization (to design more complex parts and shapes than seen in training).

Recent deep learning has made promising progress for inverse design. A notable work is by Allen et al. (2022), which addresses inverse design by first learning a neural surrogate model to approximatethe forward physical dynamics, and then performing backpropagation through the full simulation trajectory to optimize the design parameters such as the boundary shape. Compared with standard sampling-based optimization methods with classical simulators, it shows comparable and sometimes better performance, establishing deep learning as a viable technique for inverse design.

However, an underlying issue with backpropagation with surrogate models is over-optimization - as learned models have adversarial minima, excessive optimization with respect to a learned forward model leads to adversarial design parameters which lead to poor performance (Zhao et al., 2022). A root cause of this is that the forward model does not have a measure of _data likelihood_ and does not know which design parameters are in or out of the training distribution it has seen, allowing optimization to easily fall out-of-distribution of the design parameters seen during training.

To address this issue, we view the inverse design problem from an energy optimization perspective, where constraints of the simulation model are implicitly captured through the generative energy function of a diffusion model trained with design parameters and simulator outputs. Designing parameters subject to constraints corresponds to optimizing for design parameters that minimize the energy of both the generative energy function and associated design objective functions. The generative energy function prevents design parameters from deviating and falling out of distribution.

An essential aspect of inverse design is the ability to further construct _new structures_ subjects to different constraints at test-time. By formulating inverse design as optimizing generative energy function trained on existing designs, a naive issue is that it constrains design parameters to be roughly those seen in the training data. We circumvent this issue by using a set of generative energy functions, where each generative model captures a subset of design parameters governing the system. Each individual generative energy function ensures that designs do not locally fall out of distribution, with their composition ensuring that inferred design parameters are roughly "locally" in distribution. Simultaneously, designs from this compositional set of generative energy functions may be significantly different from the training data, as designs are not constrained to globally follow the observed data (Liu et al., 2022; Du et al., 2023), achieving compositional generalization in design.

We illustrate the promise of using such compositional energy functions across a variety of different settings. We illustrate that temporally composing multiple compositional energy functions, we may design sequences of outputs that are significantly longer than the ones seen in training. Similarly, we can design systems with many more objects and more complex shapes than those seen in training.

Concretely, we contribute the following: **(1)** We propose a novel formulation for inverse design as an energy optimization problem. **(2)** We introduce Compositional Inverse Design with Diffusion Models (CinDM) method, which enables us to generalize to out-of-distribution and more complex design inputs than seen in training. **(3)** We present a set of benchmarks for inverse design in 1D and 2D. Our method outperforms prior state-of-the-art models by an average of 41.5% in prediction MAE and 14.3% in design objective for the N-body dataset and discovers formation flying to minimize drag in the multi-airfoil design task.

Figure 1: **CinDM schematic.** By composing generative models specified over subsets of inputs, we present an approach which design materials significantly more complex than those seen at training.

Related Work

**Inverse Design.** Inverse design plays a key role across science and engineering, including mechanical engineering (Coros et al., 2013), materials science (Dijkstra and Luijten, 2021), nanophotonics (Molesky et al., 2018), robotics (Saghafi and Lavimi, 2020), chemical engineering (Bhowmik et al., 2019), and aerospace engineering (Athanasopoulos et al., 2009; Anderson and Venkatakrishnan, 1999). Classical methods to address inverse design rely on slow classical solvers. They are accurate but are prohibitively inefficient (e.g., sampling-based methods like CEM (Rubinstein and Kroese, 2004)). Recently, deep learning-based inverse design has made promising progress. Allen et al. (2022) introduced backpropagation through the full trajectory with surrogate models. Wu et al. (2022) introduced backpropagation through latent dynamics to improve efficiency and accuracy. For Stokes systems, Du et al. (2020) introduced an inverse design method under different types of boundary conditions. While the above methods typically rely on learning a surrogate model for the dynamics and use it as an inner loop during inverse design, we introduce a novel generative perspective that brings the important benefit of out-of-distribution generalization and compositionality. Ren et al. (2020); Trabucco et al. (2021); Ansari et al. (2022); Chen et al. (2023) benchmarked varieties of deep learning-based methods in a wide range of inverse design tasks.

**Compositional Models.** A large body of recent work has explored how multiple different instances of generative models can be compositionally combined for applications such as 2D images synthesis (Du et al., 2020; Liu et al., 2021; Nie et al., 2021; Liu et al., 2022; Wu et al., 2022; Wu et al., 2022; Du et al., 2023; Wang et al., 2023), 3D synthesis (Po and Wetzstein, 2023), video synthesis (Yang et al., 2023), trajectory planning (Du et al., 2019; Urain et al., 2021; Gkanatsios et al., 2023; Yang et al., 2023b) and multimodal perception (Li et al., 2022) and hierarchical decision making (Ajay et al., 2023). To the best of our knowledge, we are the first to introduce a compositional generative perspective and method to inverse design, and show how compositional models can enable us to generalize to design spaces that are much more complex than seen at training time.

## 3 Method

In this section, we detail our method of Compositional INverse design with Diffusion Models (CinDM). We first introduce the problem setup in Section 3.1. In Section 3.2, we introduce generative inverse design, a novel generative paradigm for solving the inverse design problem. In Section 3.3, we detail how our method allows for test-time composition of the design variables.

### Problem setup

We formalize the inverse design problem using a similar setup as in Zhang et al. (2023). Concretely, let \(u(x,t;)\) be the state of a dynamical system at time \(t\) and location \(x\) where the dynamics are described by a partial differential equation (PDE) or an ordinary differential equation (ODE). Here \(=(u_{0},)\) consists of the initial state \(u_{0}\) and boundary condition \(\), \(\) is the design space, and we will call \(\) "boundary" for simplicity. Given a PDE or ODE, a specific \(\) can uniquely determine a specific trajectory \(u_{[0,T]}():=\{u(x,t;)|t[0,T]\}\), where we have written the dependence of \(u_{[0,T]}\) on \(\) explicitely. Let \(\) be the design objective which evaluates the quality of the design. Typically \(\) is a function of a subset of the trajectory \(u_{[0,T]}\) and \(\) (esp. the boundary shape). The inverse design problem is to find an optimized design \(\) which minimizes the design objective \(\):

\[=*{arg\,min}_{}(u_{[0,T]}(),)\] (1)

We see that \(\) depends on \(\) through two routes. On the one hand, \(\) influences the future trajectory of the dynamical system, which \(\) evaluates on. On the other hand, \(\) can directly influence \(\) at future times, since the design objective may be directly dependent on the boundary shape.

Typically, we don't have access to the ground-truth model for the dynamical system, but instead only observe the trajectories \(u_{[0,T]}()\) at discrete time steps and locations and a limited diversity of boundaries \(\). We denote the above discrete version of the trajectory as \(U_{[0,T]}()=(U_{0},U_{1},...,U_{T})\) across time steps \(t=0,1,...T\). Given the observed trajectories \(U_{[0,T]}(),\), a straightforward method for inverse design is to use such observed trajectories to train a neural surrogate model \(f_{}\) for forward modeling, so the trajectory can be autoregressively simulated by \(f_{}\):

\[_{t}()=f_{}(_{t-1}(),),_{0}: =U_{0},\;=(U_{0},),\] (2)```
1:Require Compositional set of diffusion models \(_{}^{i}(z_{s},s),i=1,2,...N\), design objective \(()\), covariance matrix \(_{t}^{2}I\), hyperparameters \(,S,K\)
2:Initialize optimization variables \(z_{S}(,)\)
3:for\(s=S,,1\)do
4:for\(k=1,,K\)do
5:\(0,_{s}^{2}I\)
6:\(z_{s} z_{s}-_{i=1}^{N}_{}^{i} (z_{s}^{i},s)+_{z}(z_{s})+\)
7:endfor
8:\(0,_{s}^{2}I\)
9:\(z_{s-1} z_{s}-_{i=1}^{N}_{}^{ i}(z_{s}^{i},s)+_{z}(z_{s})+\)
10:endfor
11:\(,U_{[0,T]}=z_{0}\)
12:return\(\) ```

**Algorithm 1** Algorithm for Compositional Inverse Design with Diffusion Models (CinDM)

Here we use \(_{t}\) to represent the prediction by \(f_{}\), to differentiate from the actual observed state \(U_{t}\). In the test time, the goal is to optimize \((_{[0,T]}(),)\) w.r.t. \(\), which includes the autoregressive rollout with \(f_{}\) as an inner loop, as introduced in Allen et al. (2022). In general inverse design, the trajectory length \(T\), state dimension \((U_{[0,T]}())\), and complexity of \(\) may be much larger than in training, requiring significant out-of-distribution generalization.

### Generative Inverse Design

Directly optimizing equation 1 with respect to \(\) using a learned surrogate model \(f_{}\) is often problematic as the optimization procedure on \(\) often leads a set of \(U_{[0,T]}\) that is out-of-distribution or adversarial to the surrogate model \(f_{}\), leading to poor performance, as observed in Zhao et al. (2022). A major cause of this is that \(f_{}\) does not have an inherent measure of uncertainty, and cannot prevent optimization from entering design spaces \(\) that the model cannot guarantee its performance in.

To circumvent this issue, we propose a generative perspective to inverse design: during the inverse design process, we jointly optimize for both the design objective \(\) and a generative objective \(E_{}\),

\[=*{arg\,min}_{,U_{[0,T]}}E_{}(U_{[ 0,T]},)+(U_{[0,T]},)\,,\] (3)

where \(E_{}\) is an energy-based model (EBM) \(p(U_{[0,T]},) e^{-E_{}(U_{[0,T]},)}\)(LeCun et al., 2006; Du and Mordatch, 2019) trained over the joint distribution of trajectories \(U_{[0,T]}\) and boundaries \(\), and \(\) is a hyperparameter. Both \(U_{[0,T]}\) and \(\) are _jointly optimized_ and the energy function \(E_{}\) is minimized when both \(U_{[0,T]}\) and \(\) are _consistent_ with each other and serves the purpose of a surrogate model \(f_{}\) in approximating simulator dynamics. The joint optimization optimizes all the steps of the trajectory \(U_{[0,T]}\) and the boundary \(\) simultaneously.

To train \(E_{}\), we use a diffusion objective, where we learn a denoising network \(_{}\) that learns to denoise all variables in design optimization \(z=U_{[0,T]}\) supervised with the training loss

\[_{}=\|-_{}(}z+ },s)\|_{2}^{2},\;\;\;(0,I).\] (4)

As discussed in Liu et al. (2022), the denoising network \(_{}\) corresponds to the gradient of an EBM \(_{z}E_{}(z)\). To optimize equation 3 using a Langevin sampling procedure, we can initialize an optimization variable \(z_{S}\) from Gaussian noise \((0,I)\), and iteratively run

\[z_{s-1}=z_{s}-(_{z}(E_{}(z_{s})+\,(z_{s })))+,0,_{s}^{2}I,\] (5)

for \(s=S,S-1,...,1\). This sampling procedure is implemented with diffusion models by optimizing

\[z_{s-1}=z_{s}-(_{}(z_{s},s)+_{z}(z_{s}))+,0,_{s}^{2}I,\] (6)

where \(_{s}^{2}\) and \(\) correspond to a set of different noise schedules and scaling factors used in the diffusion process. To further improve the performance, we run additional steps of Langevin dynamics optimization at a given noise level following Du et al. (2023).

### Compositional Generative Inverse Design

A key challenge in inverse design is that the boundary \(\) or the trajectory \(U_{[0,T]}\) can be substantially different than seen during training. To enable generalization across such design variables, we propose to compositionally represent the design variable \(z=U_{[0,T]}\), using a composition of different energy functions \(E_{}\) (Du et al., 2020b) on subsets of the design variable \(z_{i} z\). Each of the above \(E_{}\) on the subset of design variable \(z_{i}\) provides a physical consistency constraint on \(z_{i}\), encouraging each \(z_{i}\) to be physically consistent _internally_. Also, we make sure that different \(z_{i},i=1,2,...N\) overlap with each other, and overall cover \(z\) (See Fig. 1), so that the full \(z\) is physically consistent. Thus, test-time compositions of energy functions defined over subsets of the design variable \(z_{i} z\) can then be composed together to generalize to new design variable \(z\) values that are substantially different than those seen during training, but exploiting shared local structure in \(z\).

Below, we illustrate three different ways compositional inverse design can enable to generalize to design variables \(z\) that are much more complex than the ones seen during training.

**I. Generalization to more time steps.** In the test time, the trajectory length \(T\) may be much longer than the trajectory length \(T^{}\) seen in training. In this case, the energy function can be written in terms of a composition of \(N\) energy functions over subsets of trajectories with overlapping states:

\[E_{}(U_{[0,T]},)=_{i=1}^{N}E_{}(U_{[(i-1) t_{q},i  t_{q}+T^{}]},).\] (7)

Here \(z_{i}:=U_{[(i-1) t_{q},i t_{q}+T^{}]}\) is a subset of the design variable \(z:=U_{[0,T]}\). \(t_{q}\{1,2,...T-1\}\) is the stride for consecutive time intervals, and we let \(T=N t_{q}+T^{}\).

**II. Generalization to more interacting bodies.** Our method allows generalizing the trained model to more interacting bodies for a dynamical system. Now we illustrate it with a 2-body to N-body generalization. Suppose that only the trajectory of a 2-body interaction is given, where we have the trajectory of \(U_{[0,T]}^{(i)}=(U_{0}^{(i)},U_{1}^{(i)},...,U_{T}^{(i)})\) for body \(i\{1,2\}\) at time steps \(t=0,1,...T\). We can learn an energy function \(E_{}((U_{[0,T]}^{(1)},U_{[0,T]}^{(2)}),)\) from this trajectory. In the test time, suppose that we have \(N>2\) interacting bodies subjecting to the same pairwise interactions. The energy function for the combined trajectory \(U_{[0,T]}=(U_{[0,T]}^{(1)},...,U_{[0,T]}^{(N)})\) for the \(N\) bodies is then be given by:

\[E_{}(U_{[0,T]},)=_{i<j}E_{}((U_{[0,T]}^{(i)},U_{[0,T]}^{(j)}),)\] (8)

**III. Generalization from part to whole for boundaries.** Real-life inverse design typically involves designing shapes consisting of multiple _parts_ that constitute an integral _whole_. In this case, we can again compose the energy function over subsets of the design variable \(z\). Concretely, suppose that we have trajectories \(U_{[0,T]}^{(i)}\) corresponding to the part \(^{i}\), \(i=1,2,...N\), we can learn energy functions corresponding to the dynamics of each part \(E_{_{i}}(U_{[0,T]}^{(i)},^{i})\). In the test time, when requiring to generalize over a whole boundary \(\) that consisting of these \(N\) parts \(^{i},i=1,2...N\), we have

\[E_{}(U_{[0,T]},)=_{i=1}^{N}E_{_{i}}(U_{[0,T]},^{i})\] (9)

Note that here in the composition, all the parts \(^{i}\) share the same trajectory \(U_{[0,T]}\), which can be intuitively understood in the example of the plane where all the parts of the plane influence the same full state of fluid around the plane. The composition of energy functions in equation 9 means that the full energy \(E_{}(U_{[0,T]},)\) will be low if the trajectory \(U_{[0,T]}\) is consistent with all the parts \(^{i}\).

**Compositional Generative Inverse Design.** Given the above composition of energy functions, we can correspondingly learn each energy function over the design variable \(z=U_{[0,T]}\) by training a corresponding diffusion model over the subset of design variables \(z^{i} z\). Our overall sampling objective given the set of energy functions \(\{E_{i}(z^{i})\}_{i=1:N}\) is then given by

\[z_{s-1}=z_{s}-_{i=1}^{N}_{}^{i}(z _{s}^{i},s)+_{z}(z_{s})+, 0,_{s}^{2}I,\] (10)for \(s=S,S-1,...1\). Similarly to before, we can further run multiple steps of Langevin dynamics optimization at a given noise level following Du et al. (2023) to further improve performance. We provide the overall pseudo-code of our method in the compositional setting in Algorithm 1.

## 4 Experiments

In the experiments, we aim to answer the following questions: (1) Can CinDM generalize to more complex designs in the test time using its composition capability? (2) Comparing backpropagation with surrogate models and other strong baselines, can CinDM improve on the design objective? (3) Can CinDM address high-dimensional design space? To answer these questions, we perform our experiments in three different scenarios: compositional inverse design in time dimension (Sec. 4.1), compositional inverse design generalizing to more objects (Sec. 4.2), and 2D compositional design for multiple airfoils with Navier-Stokes flow (Sec. 4.3). Each of the above experiments represents an important scenario in inverse design and has important implications in science and engineering. In each experiment, we compare CinDM with the state-of-the-art deep learning-based inverse design method proposed by Allen et al. (2022), which we term Backprop, and cross-entropy method (CEM) (Rubinstein and Kroese, 2004) which is a standard sampling-based optimization method typically used in classical inverse design. To evaluate the performance of each inverse design method fairly, all the baselines and our model contain similar numbers of parameters in each comparison. We feed the output of the inverse design method to the ground-truth solver, perform rollout by the solver and feed the rollout trajectory to the design objective in evaluation.

### Compositional inverse design in time

In this experiment, we aim to test each method's ability to generalize to _more_ forward time steps than during training. This is important since in test time, the inverse design methods are typically used over longer prediction horizons than in training. We use an N-body interaction environment where each ball with a radius of 0.1 is bouncing in a \(1 1\) box. The balls will exchange momentum (resulting in a velocity change) when elastically colliding with each other or with the wall. The design task is to identify the initial state (position and velocity of the balls) of the system such that the _end_ state optimizes a certain objective (e.g., as close to a certain target as possible). This setting represents a simplified version of many real-life scenarios such as billiard, bowling, and ice hockey. Details for this experiment are provided in Appendix A.

From Table 1, we see that our method generally outperforms the baselines by a wide margin. In the "2-body 24 steps" scenario which is the same setting as in training and without composition, our model performs similarly to "Backprop with U-Net" that shares the same backbone architecture. However, with more prediction steps, the design objective and MAE for all the baseline methods worsen quickly. In contrast, our method's metrics remain much lower than the baselines, with wider gaps for longer prediction steps. This shows the two-fold advantage of our method. Firstly, even with the same backbone architecture, our diffusion method can roll out stably and accurately for much longer than the baseline, since the forward surrogate models in the baselines during design may encounter out-of-distribution and adversarial inputs which it does not know how to evolve properly. On the other hand, our diffusion-based method is trained to denoise and has a sense of how likely

    &  &  &  &  \\  & design obj & MAE & design obj & MAE & design obj & MAE & design obj & MAE \\  CEM, GNS (1-step) & 0.3021 & 0.14941 & 0.2531 & 0.13296 & 0.2781 & 0.20109 & 0.2845 & 0.19811 \\ CEM, GNS & 0.3144 & 0.12741 & 0.3178 & 0.16538 & 0.3102 & 0.24884 & 0.3059 & 0.24863 \\ CEM, U-Net (1-step) & 0.2733 & 0.08013 & 0.2680 & 0.13183 & 0.2910 & 0.14783 & 0.2919 & 0.13348 \\ CEM, U-Net & 0.2731 & 0.02995 & 0.2424 & 0.02937 & 0.2616 & 0.04460 & 0.2804 & 0.06520 \\  Backprop, GNS (1-step) & 0.1216 & 0.03678 & 0.1643 & 0.02976 & 0.1966 & 0.03645 & 0.2657 & 0.10331 \\ Backprop, GNS & 0.2453 & 0.13024 & 0.2822 & 0.11200 & 0.2959 & 0.12867 & 0.2877 & 0.14241 \\ Backprop, U-Net (1-step) & 0.2020 & 0.06338 & 0.2193 & 0.07705 & 0.2187 & 0.05668 & 0.2851 & 0.07716 \\ Backprop, U-Net & 0.1168 & **0.01137** & 0.1294 & 0.01303 & 0.1481 & 0.00804 & 0.3140 & 0.01675 \\ 
**CinDM (ours)** & **0.1143** & 0.01202 & **0.1251** & **0.00763** & **0.1326** & **0.00695** & **0.1533** & **0.00870** \\   

Table 1: **Compositional Generalization Across Time. Experiment on compositional inverse design in time. The confidence interval information is deligated to Table 6 in Appendix B for page constraints. Bold font denotes the best model.**an input is consistent with the underlying physics. Secondly, our compositional method allows our model to generalize to longer time steps and allows for stable rollout. An example trajectory designed by our CinDM is shown in Fig. 2 (a). We see that it matches with the ground-truth simulation nicely, captures the bouncing with walls and with other balls, and the end position of the bodies tends towards the center, showing the effectiveness of our method. We also see that Backprop's performance is superior to the sampling-based CEM, consistent with Allen et al. (2022).

### Compositional inverse design generalizing to more objects

In this experiment, we test each method's capability to perform inverse design on larger state dimensions than in training. We utilize the N-body simulation environment as in Sec. 4.1, but instead of considering longer trajectories, we test on more bodies than in training, resulting in larger state dimensions. This setting is also inspired by real-life scenarios where the dynamics in test time have more interacting objects than in training (e.g., in astronomical simulation and biophysics). Specifically, all methods are trained with only 2-body interactions with 24 time steps, and in test time, we directly test them with 4-body and 8-body interactions for 24 and 44 time steps using Eq. 8. For the base network architecture, the U-Net in Backprop cannot generalize to more bodies due to U- Net's fixed feature dimension. Thus we only use GNS as the backbone architecture in the baselines. The results are reported in Table 2.

From Table 2, we see that our CinDM method outperforms all baselines by a wide margin in both the design objective and MAE. On average, our method achieves an improvement of 14.1% in design objective, and an improvement of 58.8% in MAE than the best baseline. In Fig. 2 (b), we see that our method captures the interaction of the 4 bodies with the wall and each other nicely and all bodies tend towards the center at the end. The above results again demonstrate the strong compositional capability of our method: it can generalize to much larger state space than seen in training.

### 2D compositional design for multiple airfoils

In this experiment, we test the methods' ability to perform inverse design in high-dimensional space, for multiple 2D airfoils. We train the methods using flow around a single randomly-sampled shape, and in the test time, ask it to perform inverse design for one or more airfoils. The standard goal for airfoil design is to maximize the ratio between the total lift force and total drag force, thus improving aerodynamic performance (range) and reducing cost (fuel consumption). The multi-airfoil case represents an important scenario in real-life engineering where the boundary shape

    & **4-body 24 steps** &  &  &  \\ Method & design obj & MAE & design obj & MAE & design obj & MAE & design obj & MAE \\  CEM, GNS (1-step) & 0.3029 & 0.20027 & 0.3215 & 0.26518 & 0.3312 & 0.36865 & 0.3292 & 0.37430 \\ CEM, GNS & 0.3139 & 0.21253 & 0.3110 & 0.26924 & 0.3221 & 0.26708 & 0.3319 & 0.32678 \\  Backprop, GNS (1-step) & 0.2872 & 0.08023 & 0.2900 & 0.11331 & 0.3312 & 0.27988 & 0.3227 & 0.74314 \\ Backprop, GNS & 0.3118 & 0.10249 & 0.3423 & 0.15277 & 0.3302 & 0.19039 & 0.3233 & 0.24718 \\ 
**CinDM (ours)** & **0.2066** & **0.04152** & **0.2281** & **0.03195** & **0.3056** & **0.08821** & **0.3169** & **0.09566** \\   

Table 2: **Compositional Generalization Across Objects. Experiment on compositional inverse design generalizing to more objects. The confidence interval information is deligated to Table 7 in Appendix B for page constraints.**

Figure 2: **Example trajectories for N-body dataset with compositional inverse design in time (a) and bodies (b). The circles indicate CinDM-designed trajectory for the balls, drawn every 2 steps, and darker color indicating later states. The central star indicates the design target that the end state should be as close to as possible. “+” indicates ground-truth trajectory simulated by the solver.**

that needs to be designed is more complicated and out-of-distribution than in training but can be constructed by composing multiple parts. Moreover, when there are multiple flying agents, they may use formation flying to minimize drag, as has been observed in nature for migrating birds (Lissaman and Shollenberger, 1970; Hummel, 1995) and adopted by humans in aerodynamics (Venkataraman et al., 2003). For the ground-truth solver that generates a training set and performs evaluation, we use Lily-Pad (Weymouth, 2015) which is adept at modeling fluid-boundary interactions. Detailed simulation and evaluation settings are given in Appendix D.

For our CinDM method, we use U-Net as the backbone architecture and train it to denoise the joint variable of the trajectory and the boundary. In the test time, we utilize Eq. 9 to compose multiple airfidis into a formation. For both CEM and Backprob, we use the state-of-the-art architecture of FNO (Li et al., 2021) and LE-PDE (Wu et al., 2022). For all methods, to improve design stability, we use the design objective of \(=-+\) and evaluate both this design objective and the lift-to-drag ratio. The results are in Table 3. Details for the experiment are provided in Appendix D.

From the table, we see that although CinDM has a similar design objective as baseline methods, it achieves a much higher lift-to-drag ratio than the baselines, especially in the compositional case of 2 airfolis. Fig. 9 and Fig. 10 show examples of the designed initial state and boundary for the 2-airfoil scenario, for our model and "CEM, FNO" baseline respectively. We see that while our CinDM can design a smooth initial state and reasonable boundaries, the baseline falls into adversarial modes. A surprising finding is that our model discovers formation flying (Fig. 3) that reduces the drag by 53.6% and increases the lift-to-drag ratio by 66.1% compared to each airfoil flying separately. The above demonstrates the capability of CinDM to effectively design boundaries that are more complex than in training, avoiding the adversarial mode issue through its generative modeling, and achieving much better design performance.

## 5 Conclusion

In this work, we have introduced Compositional Inverse Design with Diffusion Models (CinDM), a novel paradigm and method to perform compositional generative inverse design. By composing the trained diffusion models on subsets of the design variables and jointly optimizing the trajectory and the boundary, CinDM can generalize to design systems much more complex than the ones seen in training. We've demonstrated our model's compositional inverse design capability in N-body and 2D multi-airfoil tasks, and believe that the techniques presented in this paper are general (Appendix J), and may further be applied across other settings such as material, drug, and molecule design.

    &  &  \\ Method & design obj \(\) & lift-to-drag ratio \(\) & design obj \(\) & lift-to-drag ratio \(\) \\  CEM, FNO & 0.0932 & 1.4005 & 0.3890 & 1.0914 \\ CEM, LE-PDE & 0.0794 & 1.4340 & 0.1691 & 1.0568 \\  Backprop, FNO & **0.0281** & 1.3300 & 0.1837 & 0.9722 \\ Backprop, LE-PDE & 0.1072 & 1.3203 & **0.0891** & 0.9866 \\ 
**CinDM (ours)** & 0.0797 & **2.177** & 0.1986 & **1.4216** \\   

Table 3: **Generalization Across Airfolis. Experiment results for multi-airfoil compositional design.**

Figure 3: **Discovered formation flying. In the 2-airfoil case, our model’s designed boundary forms a “leader” and “follower” formation (a), reducing the drag by 53.6% and increasing the lift-to-drag ratio by 66.1% compared to each airfoil flying separately (b)(c). Colors represent fluid vorticity.**