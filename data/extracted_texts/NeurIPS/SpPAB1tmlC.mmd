# Unveiling Encoder-Free Vision-Language Models

Haiwen Diao\({}^{1,2}\) Yufeng Cui\({}^{2}\) Xiaotong Li\({}^{3,2}\) Yueze Wang\({}^{2}\) Huchuan Lu\({}^{1}\) Xinlong Wang\({}^{2}\)

\({}^{1}\)Dalian University of Technology \({}^{2}\)Beijing Academy of Artificial Intelligence \({}^{3}\)Peking University

diaohw@mail.dlut.edu.cn, yfcui@baai.ac.cn, lixiaotong@stu.pku.edu.cn

yzwang@baai.ac.cn, lhchuan@dlut.edu.cn, wangxinlong@baai.ac.cn

Code & Models: https://github.com/baaivision/EVE

###### Abstract

Existing vision-language models (VLMs) mostly rely on vision encoders to extract visual features followed by large language models (LLMs) for visual-language tasks. However, the vision encoders set a strong inductive bias in abstracting visual representation, \(e\)._g_., resolution, aspect ratio, and semantic priors, which could impede the flexibility and efficiency of the VLMs. Training pure VLMs that accept the seamless vision and language inputs, \(i\)._e_., without vision encoders, remains challenging and rarely explored. Empirical observations reveal that direct training without encoders results in slow convergence and large performance gaps. In this work, we bridge the gap between encoder-based and encoder-free models, and present a simple yet effective training recipe towards pure VLMs. Specifically, we unveil the key aspects of training encoder-free VLMs efficiently via thorough experiments: (1) Bridging vision-language representation inside one unified decoder; (2) Enhancing visual recognition capability via extra supervision. With these strategies, we launch **EVE**, an encoder-free vision-language model that can be trained and forwarded efficiently. Notably, solely utilizing 35M publicly accessible data, **EVE** can impressively rival the encoder-based VLMs of similar capacities across multiple vision-language benchmarks. It significantly outperforms the counterpart Fuyu-8B  with mysterious training procedures and undisclosed training data. We believe that **EVE** provides a transparent and efficient route for developing pure decoder-only architecture across modalities.

## 1 Introduction

Recently, significant advancements in Large Language Models (LLMs) have catalyzed the emergence of Vision-Language Models (VLMs), showcasing powerful visual perception and cognition capability in visual question answering, image captioning, world knowledge understanding, _etc_. Typically, vision encoders (_e_.\(g\)., CLIP  and EVA ) focus on extracting highly-compressed visual-semantic representations, succeeded by adaptable language models (_e_.\(g\)., LLaMA  and Vicuna ) to handle vision-language alignments and instruction-following requirements. Nevertheless, these encoder-based VLMs have several potential drawbacks as shown in Figure 1:

(1) Image Resolution / Aspect Ratio. Existing LVMs are pre-trained with square and fixed-size images. However, this restriction forces VLMs to resize, pad, or partition images of varying shapes , resulting in large layout distortion, fragmented connection between image slices, and extra computational burden , especially in terms of high-resolution images.

(2) Deployment Overhead. Generally, LVMs and LLMs are executed successively. The growing scale of LVMs  severely undermines computational efficiency in real-world deployment, especially when high-resolution images are divided and processed through LVMs multiple times.

(3) Model Capacity between LVMs and LLMs. Existing LVMs and LLMs are compartmentalized during the pre-training stage, raising uncertainty about how to match their capacities and capabilities. As the scale of LLMs rises from 1.3B to more than 540B, how to strike corresponding vision encoders to maximize their respective abilities remains tricky and elusive.

Given the above considerations, we wonder that: _Is it possible to bypass the constraints of vision encoders and integrate perception and reasoning capabilities into a single unified architecture?_ Nevertheless, we empirically discover that even with enormous training data and large model sizes, this conceive remains highly challenging, suffering from greatly slow convergence and large performance gaps compared to encoder-based VLMs (_e.g._, Fuyu-8B  vs. LLaVA-1.5 ). The essential problems of constructing encoder-free VLMs from scratch stem from:

**(1) Representation Unity and Emergent Ability.** Due to lacking high-quality image-text data, directly training encoder-free VLMs from scratch is impractical and expensive to learn abundant knowledge and universal representations across modalities. In contrast, the industry has capitalized on the wealth of language data and continuously updated various LLMs  with impressive capabilities. Consequently, we position LLMs as a central pivot and strive to compel LLMs per se to develop visual perception while preserving original linguistic proficiency. The process is not a light breeze. We observe that before scaling up pre-trained data, vision-language pre-aligning from an LLM-centric perspective does count. This dramatically prevents model collapse and optimization interference, leading to rapid yet stable model convergence and great performance gains.

**(2) Visual Recognition Capability.** Contrastive learning , masked image modeling  and auto-regressive generation  essentially attempt to prompt visual backbones to produce highly compressed holistic semantics and frequently neglect fine-grained visual clues . On the contrary, we transmit visual signals almost losslessly into encoder-free VLMs. This operation can allow VLMs to autonomously acquire the necessary visual-semantic information. By aligning with patch features captured from vision backbones and text labels predicted by encoder-based VLMs, we implicitly embed visual encoders with input-restricted patterns into encoder-free VLMs for comprehensive visual perception and cognition. This also sidesteps the expensive re-training process of visual encoders for arbitrary image shapes inside encoder-based VLMs.

From the above perspective, we launch **EVE-7B**, an encoder-free VLM evolved from Vicuna-7B  and trained with two 8-A100 (40G) nodes in ~9 days. The encoder-free property naturally supports high-resolution images with arbitrary aspect ratios. Notably, solely utilizing 35M publicly accessible data, we efficiently construct a decoder-only VLM that can impressively rival the encoder-based VLMs of similar capacities across multiple vision-language benchmarks. More importantly, we are pioneering a transparent, efficient, and practical route for subsequent VLM research. Our current version significantly outperforms the counterpart Fuyu-8B , which relies on mysterious training procedures and undisclosed training data. Beyond facilitating the transition from LLMs to VLMs, EVE holds promising potential for developing scalable and efficient training strategies for encoder-free multi-modality models, requiring fewer training data and device resources.

Figure 1: Overview of large (A) encoder-based and (B) encoder-free vision-language models. **Encoder-based VLMs** contain vision encoders (VE) and large language models (LLM), with a projector as a vision-language bridge, while **encoder-free VLMs** exclude vision encoders and handle vision perception and linguistic instruction simultaneously with one unified architecture.

Related Work

### Encoder-based Vision-Language Model

With the remarkable advancements in large language models (LLMs) [75; 60; 1; 24; 76] and large vision models (LVMs) [61; 22; 73; 8; 13], integrating LLMs with LVMs has become mainstream for building vision-language models (VLMs) effectively. Commercial VLMs extend the capabilities of their proprietary LLM to incorporate images, texts, audio, and videos, including Anthropic's Claude-3V series , StepFun's Step-1V , xAI's Groke-1.5V , Apple's MM1 , Google's Gemini series , and OpenAI's GPT-4V . In terms of open-source VLMs, existing methods (_e.g._, BLIP series [42; 43; 12], LLaVA series [50; 49; 51], Emu series [72; 70], Intern-VL [8; 9], and _etc_) have demonstrated promising performance by employing simple intermediate layers to bridge the gap between LVMs and LLMs. Recently, some studies [48; 49; 20; 28] have recognized the significance of input image resolution and aspect ratio for visual perception and cognition, particularly in the interpretation of document, chart, table, and infographic data. However, limited by pre-trained resolution, vision encoders are compelled to partition images into multiple slices or explore a dual-path architecture for low-resolution and high-resolution images respectively, resulting in significant image distortion, fragmented relationship between image slices, and additional computational consumption. For model deployment, some popular open-source libraries, _e.g._, SGLang  or vLLM  already support inference acceleration for auto-regressive prediction of encoder-based VLMs. However, as the capacity of vision encoders scales up, the deployment efficiency of vision models would increasingly become a bottleneck for encoder-based VLMs. Meanwhile, how to match the capacities and capabilities between LVMs and LLMs for encoder-based VLMs remains a highly debatable problem with no definitive conclusion. Some studies [49; 51] highlight the notable benefits via substituting CLIP-ViT-B with stronger CLIP-ViT-L-336px in enhancing multimodal models alongside Vicuna-7B . Conversely, other findings  indicate that larger vision encoders may not be necessary, as features of multi-scale smaller ones can approximate their performance. Moreover, recent state-of-the-art approaches [9; 70] exhibit significant performance improvements by introducing extremely LVMs. Based on these observations, we attempt to explore a pure decoder-only VLM excluding vision encoders and integrate vision-language understanding and reasoning capabilities into one unified architecture. This could effectively bypass the inherent problems inside encoder-based VLMs, including input constraints of pre-trained vision encoders, inefficiency issues of application deployment, and tricky capacity trade-offs between LVMs and LLMs.

### Encoder-free Vision-Language Model

Fuyu-8B  stands out as a pure decoder-only network that processes image inputs without relying on an image encoder. Fuyu-8B's design naturally handles high-resolution images with arbitrary aspect ratios, because image patches are fed directly into the model through a simple linear projection layer. However, it demonstrates only average performance across vision-language benchmarks and lacks transparency in training strategies and data sources. This straightforward architecture has inspired further research [40; 31; 44], which focuses on developing powerful supervised instruction datasets to further enhance application capabilities. In response, we explore a practical and promising direction toward developing pure VLMs and breaking the obstacles between encoder-based and encoder-free VLMs. We reveal two crucial lessons: (1) Before scaling up pre-trained data, it is essential to prioritize vision-language pre-alignment from an LLM-centric perspective. This foundational step stabilizes the training process and alleviates optimization interference for integrating visual and linguistic information. (2) Enhancing image recognition capability via visual representation supervision and language conceptual alignment generates stronger visual representations for various vision-language tasks. With publicly available web data, our strategies efficiently accelerate model convergence and achieve performance that can surpass Fuyu-8B and match encoder-based VLMs.

## 3 Methodology

### Model Architecture

Figure 2 illustrates the overall framework of our proposed EVE. Firstly, we initialize decoder-only EVE by Vicuna-7B  to acquire rich linguistic knowledge and strong instruction-following ability. Under the premise of encoder-free VLMs, we then construct a lightweight patch embedding layer and

encode image and text inputs efficiently into the above network. After obtaining the network outputs, we attempt to align patch features with pair-wise ones from the vision encoder (VE)  through a hierarchical patch aligning layer. Meanwhile, EVE predicts next-word labels that are generated by multi-source encoder-based VLMs via Cross-Entropy (CE) loss.

**Patch Embedding Layer (PEL).** We introduce a succinct and trainable structure in Figure 3(a) to transmit images almost losslessly, rather than using deep encoders or tokenizers to compress image information into high-level semantic representations. Given an image with \((H,W)\) resolution, we first apply a convolution layer to obtain a 2-D feature map with \((h,w)\) sizes. To flexibly control computational overhead, we then implement an average pooling layer within each uncrossed feature slice. To further enhance these downsampled features, a Cross-Attention (CA1) layer is employed in a limited receptive field between each resulting feature and its corresponding slice. Besides, we employ a Cross-Attention (CA2) layer between a special <CLS> token and all patch features. The obtained feature serves as the starting symbol of the image and provides holistic information for patch features in the subsequent backbone. Considering the varying aspect ratios of image inputs, we insert a learnable newline <SPL> token at the end of each row of patch features. This helps the network understand the 2-D spatial structure and dependencies of the image. Finally, we flatten these features and pass them through a two-layer Feed Forward layer, which are then concatenated with text embeddings into one unified decoder-only architecture. Note that the aspect ratios of input images can be arbitrary, requiring no predefined sets, absolute position embedding, or partitioning operations to accommodate a pre-trained vision encoder.

**Patch Aligning Layer (PAL).** Besides coarse-grained text supervision, we further facilitate fine-grained representations by learning from the pre-trained vision encoder. Moreover, it is challenging to establish a shared space for aligning visual features with the vision encoder's output and mapping

Figure 3: Overview of (a) patch embedding and (b) patch aligning layer. The former layer encodes images into patch features and employs cross-attention (CA1) within a limited receptive field to enhance representations. Meanwhile, a special <CLS> token provides a holistic view of each patch feature in the subsequent backbone. The latter layer removes all meaningless tokens and adjusts the size of patch features to align with the semantics of the same positional features in the vision encoder.

Figure 2: Overview of our proposed EVE. We start by encoding images using a concise (a) patch embedding layer, and then concatenate the patch and word features into a decoder-only network. Next, we facilitate image perception through visual representation supervision using a (b) patch aligning layer, and achieve linguistic conceptual alignment using a next-word prediction pretext task.

text features to language vocabulary simultaneously. Hence, we explore a hierarchical aggregation strategy in Figure 3(b) to integrate intermediate features across \(l\) layers from entire \(L\) layers (Interval = \(\)). Specifically for the vision encoder, we discard meaningless <CLS>/<PAD> tokens from its final output and record the 2-D shape of valid patch fields. For EVE, we first exclude <CLS>/<SPL> tokens from intermediate features of selected layers, and reshape the sequential features back into their original 2-D shape, each of which aligns with the previously recorded shape from the vision encoder via an adaptive pooling layer. We then implement a layer-wise Cross-Attention (CA3) function, using tokens from the last layer as the Query and corresponding positional tokens from other layers as the Key and Value. We normalize the token features obtained from multi-layer aggregation to better match the normalized one from vision encoder one-to-one, utilizing Mean Squared Error (MSE) loss. Such an operation "implicitly" compresses a vision encoder with absolute position embedding (small resolution, fixed aspect ratio) into the decoder-only EVE framework (flexible resolution, arbitrary aspect ratio), enhancing the visual perception ignored by overly simplistic captions.

### Training Procedure

In Figure 4, the entire training process is categorized into three successive stages, where we train EVE with publicly available image data captioned by existing VLMs, diverse QA data, and multi-modality dialogue datasets. Notably, after finishing training, we remove PAL supervision during inference.

**LLM-guided Pre-training.** The primary goal of this stage is to establish an initial connection between vision and language modalities, thereby driving LLM to understand the visual concepts and entities in the images from scratch. We introduce publicly available web-scale data in Table 1, including image-only: SA-1B , OpenImages ; and image-text: LAION . We remove noisy text captions and reproduce 33M high-quality descriptions via Emu2 (17B) and LLaVA-1.5 (13B) as EVE-cap\({}_{33M}\). Here, only patch embedding and aligning layers are trainable to align with frozen Vicuna-7B  for better initializing an encoder-free VLM. Considering that these layers have limited parameter capacities and capabilities, we only adopt 16M of 33M image-text data (EVE-cap\({}_{16/33M}\)) in this stage. We minimize CE loss with text labels and patch-wise MSE loss between EVE and vision encoder. We empirically discover that Stage 1 does count for efficient training, as it prevents collapse and accelerates convergence throughout the entire process.

**Generative Pre-training.** In this phase, we explore in-depth pretraining strategies by unfreezing patch embedding and aligning layers, and the full LLM modules for comprehending vision-language contents. Here, we make use of all 33M image-text pairs (EVE-cap\({}_{33M}\)), and keep both text CE loss and image MSE loss as training objectives. Nevertheless, we discover that though multi-modality performance gradually increases, language capability suffers from a significant downtrend. To strike

Figure 4: Overview of training procedure with three successive stages. We perform initial vision-language alignment guided by a frozen LLM in Stage 1, and then update the entire backbone for Stage 2 and Stage 3. We empirically find that Stage 1 is quite crucial to avoid collapse and accelerate convergence, thereby enhancing training efficiency. Notably, PAL is removed during inference.

a compromise between enhancing vision-language capacities and maintaining linguistic competency, we opt for a relatively lower learning rate for stable optimization. Alternatively, involving language-only data remains a prospective avenue for further exploration . Stage 2 serves as a catalyst, driving EVE per se to develop vision-language encoding and aligning capabilities.

**Supervised Fine-tuning.** After obtaining a well-aligned state, EVE is expected to possess further capabilities for following linguistic instructions and learning dialogue patterns. The entire architecture is updated using the same loss functions in Stage 2. Here, we utilize LLaVA-mix-665K  (LLaVA-mix\({}_{665K}\)) with both VL and pure NLP dialogues as supervised fine-tuning (SFT) data to obtain the standard version of EVE-7B. Besides, we also attempt to enlarge the limitation of maximum resolution _only_ in the SFT stage. To bridge the resolution gap between pre-training and fine-tuning stages, we further involve 1.2M SFT conversation data, as listed in Table 2 (including AI2D , DocVQA , and _etc_) to develop a high-resolution version, dubbed EVE-7B (HD).

## 4 Experiments

### Training Settings

**Data Preparation.** (1) Pre-training Datasets. We train EVE using 33M publicly accessible samples from SA-1B , OpenImages , and LAION . Following pre-processing pipelines [61; 46], we retain only samples with image resolutions higher than \(448 448\). In particular, the text data from LAION  are noisy and simplistic, lacking linguistic complexity. Besides, it suffers from duplication problems , which heavily hinder image diversity and quality. To extract more representative images, we apply K-means clustering technology on image features extracted by EVA-CLIP . This process results in 50,000 clusters, from which we selected the 300 images closest to each cluster center, yielding a carefully curated subset of 15M image samples from LAION . Subsequently, we utilize Emu2 (17B) and LLaVA-1.5 (13B) to regenerate high-quality image descriptions for the above three datasets and eliminate image-text samples with repetitive text or incomplete sentences. (2) Supervised Fine-tuning Datasets. We import LLaVA-mix-665K  for the standard EVE-7B, and collect a blended set of AI2D , Synthdog , DVQA , ChartQA , DocVQA , Vision-Flan , and Bunny-695K  for high-resolution version.

**Implementation Details.** EVE-7B is developed from Vicuna-7B  for vision-language domains. To control complexity, we limit the longest image edge to 672 for EVE-7B and 1344 for EVE-7B (HD), maintaining image aspect ratios unless otherwise specified. For visual supervision, we use CLIP-ViT-L/14  as visual encoder and follow LLaVA-1.5  protocols to add padding pixels and resize images to 336\(\)336. Besides, the head is 8 for all cross-attention layers. The stride of the convolution layer and average pooling layer in PEL are 14 and 2, while the interval factor in PAL is 4. The patch features from EVE and VE are normalized by \(_{2}\)-norm before MSE loss.

We adopt the AdamW optimizer , warm-up strategy, and cosine scheduler for training EVE. The maximum learning rates for Stage 1, 2, 3 are \(4 10^{-4}\), \(4 10^{-5}\), \(2 10^{-5}\), while the number of batch size and training samples are 512, 512, 128 and 16M, 33M, 665K for EVE-7B, which spends \(-9\) days using two 8-A100 (40G) nodes. Notably, we only implement a high-resolution training strategy in supervised fine-tuning stage to obtain EVE-7B (HD) by involving an extra 1.2M SFT data.

### Main Results

We evaluate EVE on a series of public visual-language benchmarks, including academic-task-oriented benchmarks (VQA-v2 , GQA , VizWiz , and TextVQA ), hallucination benchmarks

   Dataset & Captioner & \#Samples \\  SA-1B  & LLaVA-1.5 (13B) & 11M \\ OpenImages  & Emu2 (17B) & 7M \\ LAION  & Emu2 (17B) & 15M \\  EVE-cap\({}_{33M}\) & Total & 33M \\   

Table 1: Details of pre-training datasets. We only extract 16/33M data for Stage 1, and utilize the full 33M data for Stage 2(POPE ), open-world multi-modal understanding benchmarks (MME , MMBench , SEED-Bench , and MM-Vet ), scientific problem benchmarks (ScienceQA-IMG ).

(1) In Table 3, EVE demonstrates superior performance compared to Fuyu-8B , an encoder-free counterpart, across various vision-language benchmarks, despite its smaller size. The incorporation of diverse SFT datasets and larger image sizes in EVE (HD) significantly enhances its image recognition capabilities. This highlights how our adaptable image processing approach benefits from higher resolution inputs and more comprehensive instructional data. (2) EVE (HD) shows the competitive performance when compared to encoder-based VLMs, _e.g._, InternVL-Chat , mPLUG-Owl2 , LVIS-4V , ShareGPT4V , and Monkey , without requiring additional visual encoders for complex image encoding. Notably, EVE (HD) outperforms several VLMs (InstructBLIP , IDEFICS-9B , QwenVL-Chat ), and performs on par with the well-regarded LLaVA-1.5 . Notably, EVE faces challenges in accurately responding to specific instructions like option letters and binary questions. Besides, extensive training steps with only vision-language data have somewhat diminished its language competency and instruction-following capability. Consequently, the performance of EVE-7B on MME, MMB, SQA, and MM-Vet benchmarks is relatively subpar.

The fact that EVE-7B can match encoder-based VLMs using a simpler architecture and publicly available million-scale data is quite encouraging. This discovery suggests that encoder-free VLMs, in virtue of appropriate training strategies and high-quality image-text data, can efficiently achieve performance on par with or even surpass that of encoder-based VLMs. This opens up promising avenues for addressing the challenges typically associated with encoder-based VLMs, such as inflexible input modes, inefficient deployment, and inconsistent capacity across modalities.

### Ablation Studies

**Configurations of patch embedding and aligning layer.** To validate the effectiveness of the proposed PEL and PAL, we conduct experiments with different configurations. EVE\({}_{0.5M}\), EVE\({}_{4M}\), and EVE\({}_{8M}\) represent models trained by LLaVA-pretrain-558K  (LLaVA-cap\({}_{558K}\)), and subsets of 4M and 8M from the overall 33M EVE pre-training datasets (EVE-cap\({}_{4/33M}\), EVE-cap\({}_{8/33M}\)) in Stages 1-2. All models use LLaVA-mix-665K  (LLaVA-mix\({}_{665K}\)) in Stage 3. Besides, MSE\({}_{NP}\) means aligning features between the current EVE output and the next tokens from the vision encoder. From Table 4, (1) we observe that removing any cross-attention layer in PEL results in a marginal performance degradation; (2) Pairwise patch alignments perform slightly better than next-patch prediction, possibly because the vision-specific layer is shallow, causing the network to prefer the current patch encoding over predicting the next patch in an auto-regressive manner; (3) Whether using small-scale or large-scale training data, visual supervision via PAL effectively enhances fine-grained image representations, thereby facilitating visual perception and accelerating model convergence.

   Method & LLM & **6**Samples & AR & VQA\({}^{2}\) & QQA & VarWiz & SQ\({}^{4}\) & VQA\({}^{T}\) & POPE & MME & MMB & SEED & MM-Vet \\   \\ InstructBLIP & Vicuna-7B & 129MM1.2M & Fix & – & 49.2 & 34.5 & 60.5 & 50.1 & – & – & 36.0 & 53.4 & 26.2 \\ IDETCS-9B & LLaVA-7B & 535MM/1M & Fix & 50.9 & 38.4 & 35.5 & – & 25.9 & – & – & 48.2 & – \\ QwenVL & Qwen-7B & 1.418/SQ\({}^{4}\) & Fix & 78.8 & 59.3 & 35.2 & 67.1 & 63.8 & – & – & 38.2 & 56.3 & – \\ QwenVL-Chat & Qwen-7B & 1.418/SQ\({}^{4}\) & Fix & 78.2 & 57.5 & 38.9 & 68.2 & 61.5 & – & 1487.5 & 60.6 & 58.2 & – \\ LLaVA-1.5 & Vicuna-7B & 558K/665K & Fix & 78.5 & 62.0 & 50.0 & 66.8 & 58.2 & 85.9 & 1510.7 & 64.3 & 58.6 & 30.5 \\ InterVL-Chat & Vicuna-7B & 848/8665K & Fix & 79.3 & 62.9 & 52.5 & – & 57.0 & 86.4 & 1525.1 & – & – & – \\ mPLUG-Owl2 & LLaVA-2B & 4000/12M & Fix & 79.4 & 56.1 & 54.8 & 68.7 & 58.2 & 86.2 & 1450.2 & 64.5 & 57.8 & 36.5 \\ LVIS-4V & Vicuna-7B & 558K/85K & Fix & 79.6 & 62.6 & 51.8 & 68.3 & 58.7 & 86.0 & 1528.2 & 66.2 & 60.6 & 31.5 \\ ShareGPT4V & –7B & 1.240/65K & Fix & 80.6 & 63.3 & 57.2 & 68.4 & 60.4 & – & 1567.4 & 68.8 & – & 37.6 \\ Monkey (HD) & Qwen-7B & N/M/44M & Enum & 80.3 & 60.7 & 61.2 & 69.4 & – & 67.6 & 1.0 & – & – & – \\ LLaVA-1.6 (HD) & Vicuna-7B & 558K/790K & Enum & 81.8 & 64.2 & 57.6 & 70.1 & 64.9 & 86.5 & 1519.3 & 67.4 & 64.7 & 43.9 \\   \\ EVE-7B & Vicuna-7B & 33MM665K & Any & 75.4 & 60.8 & 41.8 & 63.0 & 51.9 & 83.6 & 1217.3 & 49.5 & 54.3 & 25.6 \\ Fuyu-8B (HD) & Perinormon-8B & \({}^{}\)_1/\({}^{}\)_ & Any & 74.2 & – & – & – & – & 74.1 & 728.6 & 10.7 & – & 21.4 \\ EVE-7B (HD) & Vicuna-7B & 33MM1.8M & Any & 78.6 & 62.6 & 51.1 & 64.9 & 56.8 & 85.0 & 1305.7 & 52.3 & 56.8 & 25.7 \\   

Table 3: **Comparison with state-of-the-art VLMs on vision-language benchmarks. #Samples: the number of samples in the pretraining/supervised fine-tuning stage. AR: image aspect ratio. HD: high image resolution. We evaluate VLMs on VQA\({}^{}\): VQA-v2 ; GQA ; VizWiz ; SQA\({}^{4}\): ScienceQA-IMG ; VQA\({}^{}\): TextVQA ; POPE ; MME ; MMBB: MMBench ; SEED: SEED-Bench ; MM-Vet . \({}^{}\)Includes in-house data that is not publicly accessible**

**Stage 1: LLM-guided pre-aligning stage does count for efficient training.** In Table 5, we display the influence of our training strategies, including pre-training and supervised fine-tuning stages. We discover that (1) without LLM-guided pre-aligning between vision and language in Stage 1, the entire pre-training process becomes unstable and suffers from sudden collapse. This results in an unusual situation where performance rapidly decreases as data volume increases beyond a certain point, as shown in Figure 5. We assume that the randomly initialized PEL introduces significant noise and negative interference into network optimization for severely turning LLM into VLM, exacerbated by accumulation problems. Hence, Stage 1 stabilizes the training process and seamlessly transitions into Stage 2, emphasizing its indispensable role in efficient training to construct an encoder-free VLM. This stage prevents collapses and expedites convergence, guaranteeing a smooth and robust training route. (2) Increasing image resolutions and incorporating diverse instruction data in Stage 3 bring extreme performance gains after obtaining a well-aligned state across modalities in Stage 1-2. The high-resolution property greatly enhances fine-grained visual recognition, particularly for charts, tables, OCR information, and high-definition samples. Moreover, due to the extensive pre-training data, there is a pressing need for more supervised fine-tuning data to improve inherent linguistic proficiency, commonsense knowledge, and instruction-following patterns forgotten by EVE. (3) Training VLMs from scratch in Figure 5 often leads to instability and poses significant challenges for model optimization. Therefore, LLMs serve as an effective initialization for developing VLMs.

**Merging patch features across layers outperforms the last layer output.** Figure 6 illustrates the impact of varying interval factors for selecting cross-layer features in PAL. Optimal performance emerges when the interval factor is set to 4, yielding peak scores across VQA-v2, GQA, and SEED benchmarks. Our findings solidify the superiority of multi-layer aggregation over singularly relying on the last layer output. That is because a competitive interplay unfolds within the dynamic mapping space between vision and text, resulting in projection coupling and mutual interference within the last layer of LLM. Furthermore, hierarchical integration for vision features empowers multi-level representations, facilitating adaptive alignments with abundant characteristics from the vision encoder.

**EVE consistently improves with more pre-training data, nearing encoder-based performance.** In Figure 7, we first train LLaVA-1.5's projector via EVE-cap\({}_{16/33M}\) in Stage 1, and then attempt various training strategies in Stage 2-3 following . For example, (VE)-(ALL) denotes training vision encoder in Stage 2 and all model parameters in Stage 3. We discover that: (1) Using synthetic captions, encoder-based model often suffers from collapse  due to simplified language structure and lack of knowledge details. Only the (VE)-(ALL) strategy avoids this issue and outperforms the baseline by freezing LLM weights during pre-training to preserve language proficiency and world knowledge. (2) EVE shows consistent performance gains with scaled-up data, gradually approaching the encoder-based model's performance. This may be because encoding and aligning vision and text in a unified network is more challenging and requires more training data, making encoder-free models less prone to overfitting compared to encoder-based ones. (3) For the vision encoder (CLIP) within the PAL of EVE, we discover that unfreezing it at all stages results in model collapse, which does not yield any improvements and instead increases computational costs.

**Vision supervision aids in early convergence but becomes less critical during large data scale-up.** Vision encoder supervision improves training efficiency, especially with a relatively limited data scale compared to the billion scale of CLIP image-text pairs. Actually, this component can be simplified with sufficient data resources as shown in Figure 8. Our findings indicate that its influence diminishes over large data scales, and by the 24M mark, the difference in performance with or without this supervision is about 0.3-0.8%. This may be because large amounts of high-quality and detailed captions greatly enhance the understanding of visual information, thus gradually reducing the need for visual supervision. We emphasize that vision supervision (PAL) is not the crucial factor for training stability and scaling efficiency. Even with vision supervision, performance without LLM-guided pre-aligning in Stage 1 rapidly decreases as data volume increases beyond a certain point.

**Efficient deployment and lower latency.** Table 6 demonstrates several inference metrics, including floating point operations per second (FLOPs) and time delay. By eliminating the deep pre-trained vision encoder, EVE significantly accelerates the image encoding process, achieving an order of magnitude speed improvement over its counterparts. The CA1 component in PEL serves to control computational complexity. Even with a minimal downsampling rate of 2, EVE (HD) surpasses LLaVA-1.6 in both efficient deployment and reduced inference

   Model &  &  \\  & FLOPs(G) & Time(s) & FLOPs(T) & Time(s) \\  LLaVA-1.5 & 372 & 0.033 & 15.2 & 0.48 \\ EVE-7B & 42 & 0.003 & 15.2 & 0.48 \\ LLaVA-1.6 (HD) & 1860 & 0.13 & 76.1 & 2.07 \\ EVE-7B (HD) & 170 & 0.013 & 60.8 & 1.52 \\   

Table 6: Model FLOPs and inference latency

Figure 8: Scaling performance on GQA and SEED w/ or w/o vision encoder supervision (PAL).

Figure 7: Scaling performance on GQA and SEED using LLaVA-1.5 as an encoder-based baseline. We first train its projector in Stage 1 with EVE-cap\({}_{16/33M}\). Here, (VE)-(LLM) indicates training Vision Encoder in Stage 2 and LLM in Stage 3, where we train the projector across all stages.

delay. By optimizing FLOPs and minimizing inference latency, EVE ensures rapid and efficient processing. This leads to a more responsive and resource-efficient system, positioning encoder-free VLMs as superior to encoder-based VLMs in practical applications.

## 5 Limitation and Discussion

EVE demonstrates a desired and powerful encoder-free decoder-only architecture that essentially solves various issues of existing encoder-based VLMs. Despite its promising results, a key limitation is the performance gap that still exists between EVE and state-of-the-art encoder-based VLMs. Additionally, due to time constraints, several questions and considerations remain:

**(1) Further performance gain.** We empirically find that training solely with vision-language data significantly reduces language capability (SQA score drops from 65.3\(\%\) to 63.0\(\%\)) while gradually improving multimodal performance. This indicates catastrophic forgetting of linguistic knowledge within the LLM. To address this, we suggest merging language and multimodal data appropriately or employing mixture-of-experts (MoE) strategies to mitigate vision-language interference.

**(2) Encoder-free expectation.** We validate that encoder-free VLMs can rival encoder-based VLMs but require larger training samples. How about the performance under the same LLM capacity and training data? We are working on the assumption that scaling up LLM capacity and training data would enable encoder-free VLMs to match or even surpass encoder-based VLMs, due to the nearly lossless image inputs that bypass pre-processing by vision encoders.

**(3) Multi-modality inspiration.** As a bonus, we gain inspiration for integrating additional modalities (_e.g._, audio, video, thermal, depth, _etc._). The core idea is to pre-align these modalities with a frozen LLM from an LLM-centric perspective before introducing large-scale unified training, supervised by corresponding single-modality encoders and linguistic conceptual alignments.

## 6 Conclusion

In this paper, we introduce EVE, a simple yet effective encoder-free model with a decoder-only architecture, designed to revolutionize vision-language understanding. Rather than merely presenting another VLM, we aim to unveil the under-explored bottlenecks towards constructing an encoder-free VLM. Our key findings reveal that: (1) An LLM-centric perspective, where vision and language modalities are pre-aligned, delivers robust, efficient, and consistent improvements as the pre-trained data scale up. (2) Incorporating fine-grained alignment with pre-trained vision encoders and linguistic conceptual supervision significantly enhances vision recognition, resulting in faster convergence and substantial performance gains. Remarkably, EVE performs on par with mainstream encoder-based VLMs solely relying on 35M publicly available data, and dramatically outperforms the counterpart Fuyu-8B, trained by undisclosed strategies and private datasets. As a pioneer, EVE provides a transparent and efficient roadmap for future VLM development, essentially tackling the challenges of multi-modal input processing, deployment efficiency, and model capacity across modalities. In the future, we are devoted to scaling up the model capacity with high-quality training data to explore the limits of encoder-free VLMs. Besides, we are working on translating the single-modality LLMs to large multimodal models with more modalities through our proposed training strategies.