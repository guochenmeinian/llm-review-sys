# Noise Balance and Stationary Distribution of Stochastic Gradient Descent

Anonymous Author(s)

Affiliation

Address

email

###### Abstract

How the stochastic gradient descent (SGD) navigates the loss landscape of a neural network remains poorly understood. This work shows that the minibatch noise of SGD regularizes the solution towards a noise-balanced solution whenever the loss function contains a rescaling symmetry. We prove that when the rescaling symmetry exists, the SGD dynamics is limited to only a low-dimensional subspace and prefers a special set of solutions in an infinitely large degenerate manifold, which offers a partial explanation of the effectiveness of SGD in training neural networks. We then apply this result to derive the stationary distribution of stochastic gradient flow for a diagonal linear network with arbitrary depth and width, which is the first analytical expression of the stationary distribution of SGD in a high-dimensional non-quadratic potential. The stationary distribution exhibits complicated nonlinear phenomena such as phase transitions, loss of ergodicity, memory effects, and fluctuation inversion. These phenomena are shown to exist uniquely in deep networks, highlighting a fundamental difference between deep and shallow models. Lastly, we discuss the implication of the proposed theory for the practical problem of variational Bayesian inference.

## 1 Introduction

In natural and social sciences, one of the most important objects of study of a stochastic system is its stationary distribution, which is often found to offer fundamental insights into understanding a given stochastic process . Arguably, a great deal of insights into SGD can be obtained if we have an analytical understanding of its stationary distribution, which remains unknown until today. The stochastic gradient descent (SGD) algorithm is defined as \(_{t}=-_{x B}_{}(,x)\), where \(\) is the model parameter and \((,x)\) is a per-sample loss whose expectation over \(x\) gives the training loss: \(L()=_{x}[(,x)]\). \(B\) is a randomly sampled minibatch of data points, each independently sampled from the training set, and \(S\) is the minibatch size. Two aspects of the algorithm make it difficult to understand this algorithm: (1) its dynamics is discrete in time, and (2) the randomness is highly nonlinear and parameter-dependent. This work relies on the continuous-time approximation and deals with the second aspect.

The main contributions are

1. the derivation of the "law of balance," which shows that SGD converges to a special subset of noised-balanced solutions when the rescaling symmetry is present;
2. the first-of-its-kind solution of the stationary distribution of an analytical model trained by SGD;
3. discovery of novel phenomena such as phase transitions, loss of ergodicity, memory effects, and fluctuation inversion, all implied by our theory.

**Organization**. The next section discusses the closely related works. In Section 3, we prove the law of balance, the first main result of this work, and discuss its implications for common neuralnetworks. In Section 4, we apply the law of balance to derive the stationary distribution of SGD for a highly nontrivial loss landscape. The last section concludes this work. All proofs and derivations are given in Appendix A.

## 2 Related Works

**Solution of the Fokker Planck (FP) Equation**. The FP equation is a high-dimensional partial differential equation whose solution (and its existence) is an open problem in mathematics and many fields of sciences and only known for a few celebrated special cases . Our solution is the first of its kind in a deep-learning setting. **Stationary distribution of SGD**. One of the earliest works that computes the stationary distribution of SGD is the Lemma 20 of Ref. , which assumes that the noise has a constant covariance and shows that if the loss function is quadratic, then the stationary distribution is Gaussian. Similarly, using a saddle point expansion and assuming that the noise is parameter-independent, a series of recent works showed that the stationary distribution of SGD is exponential in the model parameters close to a local minimum: \(p()[-a^{T}H]\), for some constant \(a\) and matrix \(H\). Assuming that the noise covariance only depends on the loss function value \(L()\), Refs.  and  showed that the stationary distribution is power-law-like and proportional to \(L()^{-c_{0}}\) for some constant \(c_{0}\). A primary feature of these previous results is that stationary distribution does not exhibit any memory effect and also preserves ergodicity. Until now, no analytical solution to the stationary distribution of SGD is known, making it impossible to judge how good the previous approximate results are. Our result is the first to derive an exact solution to the stationary distribution of SGD without any approximation. We will see that in contrast to the approximate solutions in the previous results, the actual distribution of SGD has both a memory effect and features the loss of ergodicity.

**Symmetry and SGD dynamics**. Also related to our work is the study of how symmetry affects the learning dynamics of SGD. A major prior work is , which studies the dynamics of SGD when there is scale invariance, conjecturing that SGD reaches a fast equilibrium state at the early stage of training. Our result is different as we study a different type of symmetry, the rescaling symmetry.

## 3 Noise Balance

We consider the continuous-time limit of SGD :

\[d=-_{}Ldt+dW_{t},\] (1)

where \(C()=[()^{T}()]\) is the gradient covariance, \(dW_{t}\) is a stochastic process satisfying \(dW_{t} N(0,Idt)\) and \([dW_{t}dW_{t^{}}^{T}]=(t-t^{})I\), and \(T=/S\). Apparently, \(T\) gives the average noise level in the dynamics. Previous works have suggested that the ratio \(T\) is a main factor determining the behavior of SGD, and using different \(T\) often leads to different generalization performance .

### Rescaling Symmetry and Law of Balance

Due to standard architecture designs, a type of invariance - the rescaling symmetry - often appears in the loss function and it is preserved for all sampling of minibatches. The per-sample loss \(\) is said to have the rescaling symmetry for all \(x\) if \((u,w,x)=( u,w/,x)\) for a scalar \(_{+}\). This type of symmetry appears in many scenarios in deep learning. For example, it appears in any neural network with the ReLU activation. It also appears in the self-attention of transformers, often in the form of key and query matrices . When this symmetry exists between \(u\) and \(w\), one can prove the following result, which we refer to as the law of balance.

**Theorem 3.1**.: _Let \(u\), \(w\), and \(v\) be parameters of arbitrary dimensions. Let \((u,w,v,x)\) satisfy \((u,w,v,x)=( u,w/,v,x)\) for arbitrary \(x\) and any \(_{+}\). Then,_

\[(\|u\|^{2}-\|w\|^{2})=-T(u^{T}C_{1}u-w^{T}C_{2}w),\] (2)

_where \(C_{1}=[A^{T}A]-[A^{T}][A]\), \(C_{2}=[AA^{T}]-[A][A^{T}]\) and \(A_{ki}=/(u_{i}w_{k})\) with \((u_{i}w_{k},v,x)(u_{i},w_{k},v,x)\).1_

Here, \(v\) stands for the parameters that are irrelevant to the symmetry, and \(C_{1}\) and \(C_{2}\) are positive semi-definite by definition. The theorem still applies if the model has parameters other than \(u\) and \(w\). The theorem can be applied recursively when multiple rescaling symmetries exist. See Figure 1 for an illustration the the dynamics and how it differs from other types of GD.

While the matrices \(C_{1}\) and \(C_{2}\) may not always be full-rank, we emphasize that in common deep-learning settings with rescaling symmetry, the law of balance is almost always well-defined and applicable. In Appendix A.4, we prove that under very general settings, for all _active_ hidden neurons of a two-layer ReLU net, \(C_{1}\) and \(C_{2}\) are always full-rank. Equation (2) is the law of balance, and it implies two different types of balance. The first type of balance is the balance of gradient noise. The proof of the theorem shows that the stationary point of the law in (2) is equivalent to

\[_{w}[C(w)]=_{u}[C(u)],\] (3)

where \(C(w)\) and \(C(u)\) are the gradient covariance of \(w\) and \(u\), respectively. Therefore, SGD prefers a solution where the gradient noise between the two layers is balanced. Also, this implies that the balance conditions of the law is only dependent on the diagonal terms of the Fisher information (if we regard the loss as a log probability), which is often well-behaved. As a last caveat, we emphasize that the fact that the noise will balance does not imply that either trace will converge or stay close to a fixed value - it is also possible for both terms to oscillate while their difference is close to zero.

The second type is the norm ratio balance between layers, though the norm ratio may not necessarily be finite. Equation (2) implies that in the degenerate direction of the rescaling symmetry, a single and unique point is favored by SGD. Let \(u= u^{*}\) and \(w=^{-1}w^{*}\) for arbitrary \(u^{*}\) and \(w^{*}\), then, the stationary point of the law is reached at \(^{4}=)^{T}C_{2}w^{*}}{(u^{*})^{T}C_{1}w^{*}}\). The quantity \(\) can be called the "balancedness" of the norm, and the law states that when a rescaling symmetry exists, a special balancedness is preferred by the SGD algorithm. When \(C_{1}\) or \(C_{2}\) vanishes, \(\) or \(^{-1}\) diverges, and so does SGD. Therefore, having a nonvanishing noise actually implies that SGD training will be more stable. For common problems, \(C_{1}\) and \(C_{2}\) are positive definite and, thus, if we know the spectrum of \(C_{1}\) and \(C_{2}\) at the end of training, we can estimate a rough norm ratio at convergence:

\[-T(_{1M}\|u\|^{2}-_{2m}\|w\|^{2})(\|u\|^{2}-\|w \|^{2})-T(_{1m}\|u\|^{2}-_{2M}\|w\|^{2}),\]

where \(_{1m(2m)}\) and \(_{1M(2M)}\) represent the minimal and maximal eigenvalue of the matrix \(C_{1(2)}\), respectively. Theore, the value of \(\|u\|^{2}/\|w\|^{2}\) is restricted by (See Section A.5)

\[}{_{1M}}}{\|w\|^{2}}}{_{1m}}.\] (4)

Thus, a remaining question is whether the quantities \(u^{T}C_{1}u\) and \(w^{T}C_{2}w\) are generally well-defined and nonvanishing or not. The following proposition shows that for a generic two-layer ReLU net, \(u^{T}C_{1}u\) and \(w^{T}C_{2}w\) are almost everywhere strictly positive. We define a two-layer ReLU net as

\[f(x)=_{i}^{d}u_{i}(w_{i}^{T}x+b_{i}),\] (5)

where \(u_{i}^{d_{w}},w_{i}^{d_{w}}\) and \(b_{i}\) is a scalar with \(i\) being the index of the hidden neuron. For each \(i\), the model has the rescaling symmetry: \(u_{i} u_{i}\), \((w_{i},b_{i})(^{-1}w_{i},^{-1}b_{i})\). We thus apply the law of balance to each neuron separately. The per-sample loss function is

\[(,x)=\|f(x)-y(x,)\|^{2}.\] (6)

Here, \(x\) has a full-rank covariance \(_{x}\), and \(y=g(x)+\) for some function \(g\) and \(\) is a zero-mean random vector independent of \(x\) and have the full-rank covariance \(_{}\). The following theorem shows that for this network, \(C_{1}\) and \(C_{2}\) are full rank unless the neuron is "dead".

Figure 1: Dynamics of GD and SGD and GD with injected Gaussian noise for the simple problem \((u,w)=(uvx-y)^{2}\). Due to the rescaling symmetry between \(u\) and \(w\), GD follows a conservation law: \(u^{2}(t)-w^{2}(t)=u^{2}(0)-w^{2}(0)\), SGD converges to the balanced solution \(u^{2}=w^{2}\), while GD with injected noise diverges due to simple diffusion in the degenerate directions.

**Theorem 3.2**.: _Let the loss function be given in Eq. (6). Let \(C_{1}^{(i)}\) and \(C_{2}^{(i)}\) denote the corresponding noise matrices of the \(i\)-th neuron, and \(p_{i}:=(w_{i}^{T}x+b_{i}>0)\). Then, \(C_{1}^{(i)}\) and \(C_{2}^{(i)}\) are full-rank for all \(i\) such that \(p_{i}>0\)._

See Figure 2. We train a two-layer ReLU network with the number of neurons: \(20 200 20\). The dataset is a synthetic data set, where \(x\) is drawn from a normal distribution, and the labels: \(y=x+\), for an independent Gaussian noise \(\) with unit variance. While every neuron has a rescaling symmetry, we focus on the overall rescaling symmetry between the two weight matrices. The norm between the two layers reach a state of approximate balance - but not a precise balance. At the same time, the model evolves during training towards a state where \(u^{T}C_{1}u\) and \(w^{T}C_{2}w\) are balanced.

Standard analysis shows that the difference between SGD and GD is of order \(T^{2}\) per unit time step, and it is thus often believed that SGD can be understood perturbatively through GD . However, the law of balance implies that the difference between GD and SGD is not perturbative. As long as there is any level of noise, the difference between GD and SGD at stationarity is \(O(1)\). This theorem also implies the loss of ergodicity, an important phenomenon in nonequilibrium physics , because not all solutions with the same training loss will be accessed by SGD with equal probability.

### 1d Rescaling Symmetry

The theorem greatly simplifies when both \(u\) and \(w\) are one-dimensional.

**Corollary 3.3**.: _If \(u,w\), then, \(|u^{2}-w^{2}|=-TC_{0}|u^{2}-w^{2}|\), where \(C_{0}=[]\)._

Before we apply the theorem to study the stationary distributions, we stress the importance of this balance condition. This relation is closely related to Noether's theorem . If there is no weight decay or stochasticity in training, the quantity \(\|u\|^{2}-\|w\|^{2}\) will be a conserved quantity under gradient flow , as is evident by taking the infinite \(S\) limit. The fact that it monotonically decays to zero at a finite \(T\) may be a manifestation of some underlying fundamental mechanism. A more recent result in Ref.  showed that for a two-layer linear network, the norms of two layers are within a distance of order \(O(^{-1})\), suggesting that the norm of the two layers are balanced. Our result agrees with Ref.  in this case, but our result is stronger because our result is nonperturbative, only relies on the rescaling symmetry, and is independent of the loss function or architecture of the model. It is useful to note that when \(L_{2}\) regularization with strength \(\) is present, the rate of decay changes from \(TC_{0}\) to \(TC_{0}+\). This points to a nice interpretation that when rescaling symmetry is present, the implicit bias of SGD is equivalent to weight decay. See Figure 1 for an illustration of this point.

Example: two-layer linear network.It is instructive to illustrate the application of the law to a two-layer linear network, the simplest model that obeys the law. Let \(=(w,u)\) denote the set of trainable parameters; the per-sample loss is \((,x)=(_{i}^{d}u_{i}w_{i}x-y)^{2}+\|\|^{2}\). Here, \(d\) is the width of the model, \(\|\|^{2}\) is the \(L_{2}\) regularization term with strength \( 0\), and \(_{x}\) denotes the averaging over the training set, which could be a continuous distribution or a discrete sum of delta distributions. It will be convenient for us also to define the shorthand: \(v:=_{i}^{d}u_{i}w_{i}\). The distribution of \(v\) is said to be the distribution of the "model." Applying the law of balance, we obtain that

\[(u_{i}^{2}-w_{i}^{2})=-4[T(_{1}v^{2}-2_{2}v+_{3 })+](u_{i}^{2}-w_{i}^{2}),\] (7)

Figure 2: A two-layer ReLU network trained on a full-rank dataset. **Left**: because of the rescaling symmetry, the norms of the two layers are balanced approximately (but not exactly). **Right**: the first and second terms in Eq. (2). We see that both terms evolve towards a point where they exactly balance. In agreement with our theory, SGD training leads to an approximate norm balance and exact gradient noise balance.

where we have introduced the parameters

\[_{1}:=[x^{2}],_{2}:=[x^{3}y]-[x^{ 2}][xy],_{3}:=[xy].\] (8)

When \(_{1}_{3}-_{2}^{2}\) or \(>0\), the time evolution of \(|u^{2}-w^{2}|\) can be upper-bounded by an exponentially decreasing function in time: \(|u_{i}^{2}-w_{i}^{2}|(t)<|u_{i}^{2}-w_{i}^{2}|(0)(-4T(_{1} _{3}-_{2}^{2})t/_{1}-4 t) 0\). Namely, the quantity \((u_{i}^{2}-w_{i}^{2})\) decays to \(0\) with probability \(1\). We thus have \(u_{i}^{2}=w_{i}^{2}\) for all \(i\{1,,d\}\) at stationarity, in agreement with the Corollary.

## 4 Stationary Distribution of SGD

As an important application of the law of balance, we solve the stationary distribution of SGD for a deep diagonal linear network. While linear networks are limited in expressivity, their loss landscape and dynamics are highly nonlinear and exhibits many shared phenomenon with nonlinear neural networks [13; 30]. Let \(\) follow the high-dimensional Wiener process given by Eq.(1). The probability density evolves according to its Kolmogorov forward (Fokker-Planck) equation:

\[p(,t)=-_{i}}}(p(,t)}}L() )+_{i,j}}{_{_{i}} _{_{j}}}C_{ij}()p(,t).\] (9)

The solution of this partial differential equation is an open problem for almost all high-dimensional problems. This section solves it for a high-dimensional non-quadratic potential of a machine learning relevance.

### Depth-\(0\) Case

Let us first derive the stationary distribution of a one-dimensional linear regressor, which will be a basis for comparison to help us understand what is unique about having a "depth" in deep learning. The per-sample loss is \((x,v)=(vx-y)^{2}+ v^{2}\). Defining

\[_{1}:=[x^{2}],_{2}:=[xy],\] (10)

the global minimizer of the loss can be written as: \(v^{*}=_{2}/_{1}\). The gradient variance is also not trivial: \(C(v):=[\,_{v}(v,x)]=4(_{1}v^{2}-2_{2}v+ _{3})\). Note that the loss landscape \(L\) only depends on \(_{1}\) and \(_{2}\), and the gradient noise only depends on \(_{1}\), \(_{2}\) and, \(_{3}\). It is thus reasonable to call \(\) the landscape parameters and \(\) the noise parameters. Both \(\) and \(\) appear in all stationary distributions, implying that the stationary distributions of SGD are strongly data-dependent. Another relevant quantity is \(:=_{v}C(v) 0\), which is the minimal level of noise on the landscape. It turns out that the stationary distribution is qualitatively different for \(=0\) and for \(>0\). For all the examples in this work,

\[=[x^{2}][xy]-(x^{2},xy)=_{1} _{3}-_{2}^{2}.\] (11)

When is \(\) zero? It happens when, for all samples of \((x,y)\), \(xy+c=kx^{2}\) for some constant \(k\) and \(c\). We focus on the case \(>0\) in the main text, which is most likely the case for practical situations. The other cases are dealt with in Section A.

For \(>0\), the stationary distribution for linear regression is (Section A)

\[p(v)(_{1}v^{2}-2_{2}v+_{3})^{-1-^{ }}{2T_{1}}}[-_{1}^{ }-_{1}_{2}}{_{1}}(v- _{2}}{})],\] (12)

in agreement with the previous result . Two notable features exist for this distribution: (1) the power exponent for the tail of the distribution depends on the learning rate and batch size, and (2) the integral of \(p(v)\) converges for an arbitrary learning rate. On the one hand, this implies that increasing the learning rate alone cannot introduce new phases of learning to a linear regression; on the other hand, it implies that the expected error is divergent as one increases the learning rate (or the feature variation), which happens at \(T=_{1}^{}/_{1}\). We will see that deeper models differ from the single-layer model in these two crucial aspects.

### An Analytical Model

Now, we consider the following model with a notion of depth and width; its loss function is

\[=[_{i}^{d_{0}}(_{k=0}^{D}u_{i}^{(k)})x-y] ^{2},\] (13)where \(D\) can be regarded as the depth and \(d_{0}\) the width. When the width \(d_{0}=1\), the law of balance is sufficient to solve the model. When \(d_{0}>1\), we need to eliminate additional degrees of freedom. We note that this model conceptually resembles (but not identical to) a diagonal linear network, which has been found to well approximate the dynamics of real networks .

We introduce \(v_{i}:=_{k=0}^{D}u_{i}^{(k)}\), and so \(v=_{i}v_{i}\), where we call \(v_{i}\) a "subnetwork" and \(v\) the "model." The following proposition shows that independent of \(d_{0}\) and \(D\), the dynamics of this model can be reduced to a one-dimensional form by invoking the law of balance.

**Theorem 4.1**.: _For all \(i j\), one (or more) of the following conditions holds for all trajectories at stationarity: (1) \(v_{i}=0\), or \(v_{j}=0\), or \(L()=0\); (2) \((v_{i})=(v_{j})\). In addition, (2a) if \(D=1\), for a constant \(c_{0}\), \(|v_{i}|-|v_{j}|=c_{0}\); (2b) if \(D>1\), \(|v_{i}|^{2}-|v_{j}|^{2}=0\)._

This theorem contains many interesting aspects. First of all, the three situations in item 1 directly tell us the distribution of \(v\) if the initial state of of \(v\) is given by these conditions.2 This implies a memory effect, namely, that the stationary distribution of SGD can depend on its initial state. The second aspect is the case of item 2, which we will solve below. Item 2 of the theorem implies that all the \(v_{i}\) of the model must be of the same sign for any network with \(D 1\). Namely, no subnetwork of the original network can learn an incorrect sign. This is dramatically different from the case of \(D=0\). We will discuss this point in more detail below. The third interesting aspect of the theorem is that it implies that the dynamics of SGD is qualitatively different for different depths of the model. In particular, \(D=1\) and \(D>1\) have entirely different dynamics. For \(D=1\), the ratio between every pair of \(v_{i}\) and \(v_{j}\) is a conserved quantity. In sharp contrast, for \(D>1\), the distance between different \(v_{i}\) is no longer conserved but decays to zero. Therefore, a new balancing condition emerges as we increase the depth. Conceptually, this qualitative distinction also corroborates the discovery in Ref. , where \(D=1\) models are found to be qualitatively different from models with \(D>1\).

With this theorem, we are ready to solve the stationary distribution. It suffices to condition on the event that \(v_{i}\) does not converge to zero. Let us suppose that there are \(d\) nonzero \(v_{i}\) that obey item 2 of Theorem 4.1 and \(d\) can be seen as an effective width of the model. We stress that the effective width \(d d_{0}\) depends on the initialization and can be arbitrary.3 Therefore, we condition on a fixed value of \(d\) to solve for the stationary distribution of \(v\) (Appendix A):

**Theorem 4.2**.: _Let \((x)\) denote the Dirac delta function. For an arbitrary factor \(z\ in\), an invariant solution of the Fokker-Planck Equation is \(p^{}(v)=(1-z)(v)+zp_{}(v)\), where_

\[p_{}(|v|)g_{}(v)}(- _{0}^{|v|}d|v|(_{1}|v|_{2})}{(D+1)|v|^{2D /(D+1)}g_{}(v)}),\] (14)

_where \(p_{-}\) is the distribution on \((-,0)\) and \(p_{+}\) is that on \((0,)\), and \(g_{}(v)=_{1}|v|^{2} 2_{2}|v|+_{3}\)._

Figure 3: Stationary distributions of SGD for simple linear regression (\(D=0\)), and a two-layer network (\(D=1\)) across different \(T=/S\): \(T=0.05\) (**left**) and \(T=0.5\) (**Middle**). We see that for \(D=1\), the stationary distribution is strongly affected by the choice of the learning rate. In contrast, for \(D=0\), the stationary distribution is also centered at the global minimizer of the loss function, and the choice of the learning rate only affects the thickness of the tail. **Right**: the stationary distribution of a one-layer \(\)-model, \(f(x)=(vx)\) (\(D=0\)) and a two-layer tanh-model \(f(x)=w(ux)\) (\(D=1\)). For \(D=1\), we define \(v:=wu\). The vertical line shows the ground truth. The deeper model never learns the wrong sign of \(wu\), whereas the shallow model can learn the wrong one.

The arbitrariness of the scalar \(z\) is due to the memory effect of SGD - if all parameters are initialized at zero, they will remain there with probability \(1\). This means that the stationary distribution is not unique. Since the result is symmetric in the sign of \(_{2}=[xy]\), we assume that \([xy]>0\) from now on.

Also, we focus on the case \(=0\) in the main text.4 The distribution of \(v\) is

\[p_{}(|v|)/2_{3}T-3/2}}{(_{1}|v |^{2} 2_{2}|v|+_{3})^{_{2}/4T_{3}}}(- _{1}-_{2}_{2}}{_{3}}|v|_{2}}{}).\] (15)

This measure is worth a close examination. First, the exponential term is upper and lower bounded and well-behaved in all situations. In contrast, the polynomial term becomes dominant both at infinity and close to zero. When \(v<0\), the distribution is a delta function at zero: \(p(v)=(v)\). To see this, note that the term \(v^{-_{2}/2_{3}T-3/2}\) integrates to give \(v^{-_{2}/2_{3}T-1/2}\) close to the origin, which is infinite. Away from the origin, the integral is finite. This signals that the only possible stationary distribution has a zero measure for \(v 0\). The stationary distribution is thus a delta distribution, meaning that if \(x\) and \(y\) are positively correlated, the learned subnets \(v_{i}\) can never be negative, independent of the initial configuration.

For \(v>0\), the distribution is nontrivial. Close to \(v=0\), the distribution is dominated by \(v^{_{2}/2_{3}T-3/2}\), which integrates to \(v^{_{2}/2_{3}T-1/2}\). It is only finite below a critical \(T_{c}=_{2}/_{3}\). This is a phase-transition-like behavior. As \(T(_{2}/_{3})_{}\), the integral diverges and tends to a delta distribution. Namely, if \(T>T_{c}\), we have \(u_{i}=w_{i}=0\) for all \(i\) with probability \(1\), and no learning can happen. If \(T<T_{c}\), the stationary distribution has a finite variance, and learning may happen. In the more general setting, where weight decay is present, this critical \(T\) shifts to \(T_{c}=-}{_{3}}\). When \(T=0\), the phase transition occurs at \(_{2}=\), in agreement with the threshold weight decay identified in Ref. . See Figure 3 for illustrations of the distribution across different values of \(T\). We also compare with the stationary distribution of a depth-\(0\) model. Two characteristics of the two-layer model appear rather striking: (1) the solution becomes a delta distribution at the sparse solution \(u=w=0\) at a large learning rate; (2) the two-layer model never learns the incorrect sign (\(v\) is always non-negative). Another exotic phenomenon implied by the result is what we call the "fluctuation inversion." Naively, the variance of model parameters should increase as we increase \(T\), which is the noise level in SGD. However, for the distribution we derived, the variance of \(v\) and \(u\) both decrease to zero as we increase \(T\): injecting noise makes the model fluctuation vanish. We discuss more about this "fluctuation inversion" in the next section.

Also, while there is no other phase-transition behavior below \(T_{c}\), there is still an interesting and practically relevant crossover behavior in the distribution of the parameters as we change the learning rate. When training a model, The most likely parameter we obtain is given by the maximum likelihood estimator of the distribution, \(:= p(v)\). Understanding how \((T)\) changes as a function of \(T\) is crucial. This quantity also exhibits nontrivial crossover behaviors at critical values of \(T\).

When \(T<T_{c}\), a nonzero maximizer for \(p(v)\) must satisfy

\[v^{}=--10_{2}T--10_{2}T)^{2}+ 28_{1}T(_{2}-3_{3}T)}}{14_{1}T}.\] (16)

The existence of this solution is nontrivial, which we analyze in Appendix A.8. When \(T 0\), a solution always exists and is given by \(v=_{2}/_{1}\), which does not depend on the learning rate or noise \(C\). Note that \(_{2}/_{1}\) is also the minimum point of \(L(u_{i},w_{i})\). This means that SGD is only a consistent estimator of the local minima in deep learning in the vanishing learning rate limit. How biased is SGD at a finite learning rate? Two limits can be computed. For a small learning rate, the leading order correction to the solution is \(v=}{_{1}}+(_{2}}{_{1}^{2}} -}_{2}^{2}}{_{1}^{2}}-}{ _{1}})T\). This implies that the common Bayesian analysis that relies on a Laplace expansion of the loss fluctuation around a local minimum is improper. The fact that the stationary distribution of SGD is very far away from the Bayesian posterior also implies that SGD is only a good Bayesian sampler at a small learning rate.

**Example**. It is instructive to consider an example of a structured dataset: \(y=kx+\), where \(x(0,1)\) and the noise \(\) obeys \((0,^{2})\). We let \(=0\) for simplicity. If \(^{2}>k^{2}\), there always exists a transitional learning rate: \(T^{*}=}{4(21^{2}-8k^{2})}\). Obviously, \(T_{c}/3<T^{*}\). One can characterize the learning of SGD by comparing \(T\) with \(T_{c}\) and \(T^{*}\). For this simple example, SGD can be classified into roughly \(5\) different regimes. See Figure 4.

### Power-Law Tail of Deeper Models

An interesting aspect of the depth-\(1\) model is that its distribution is independent of the width \(d\) of the model. This is not true for a deep model, as seen from Eq. (14). The \(d\)-dependent term vanishes only if \(D=1\). Another intriguing aspect of the depth-\(1\) distribution is that its tail is independent of any hyperparameter of the problem, dramatically different from the linear regression case. This is true for deeper models as well.

Since \(d\) only affects the non-polynomial part of the distribution, the stationary distribution scales as \(p(v)(_{1}v^{2}-2_{2}v+_{3})}\). Hence, when \(v\), the scaling behaviour is \(v^{-5+3/(D+1)}\). The tail gets monotonically thinner as one increases the depth. For \(D=1\), the exponent is \(7/2\); an infinite-depth network has an exponent of \(5\). Therefore, the tail of the model distribution only depends on the depth and is independent of the data or details of training, unlike the depth-\(0\) model. In addition, due to the scaling \(v^{5-3/(D+1)}\) for \(v\), we can see that \([v^{2}]\) will never diverge no matter how large the \(T\) is.

An intriguing feature of this model is that the model with at least one hidden layer will never have a divergent training loss. This directly explains the puzzling observation of the edge-of-stability phenomenon in deep learning: SGD training often gives a neural network a solution where a slight increment of the learning rate will cause discrete-time instability and divergence . These solutions, quite surprisingly, exhibit low training and testing loss values even when the learning rate is right at the critical learning rate of instability. This observation contradicts naive theoretical expectations. Let \(_{ sta}\) denote the largest stable learning rate. Close to a local minimum, one can expand the loss function up to the second order to show that the value of the loss function \(L\) is proportional to \([]\). However, \( 1/(_{ sta}-)\) should be a very large value , and therefore \(L\) should diverge. Thus, the edge of stability phenomenon is incompatible with the naive expectation up to the second order, as pointed out by Ref. . Our theory offers a direct explanation of why the divergence of loss does not happen: for deeper models, the fluctuation of model parameters decreases as the gradient noise level increases, reaching a minimal value before losing stability. Thus, SGD always has a finite loss because of the power-law tail and fluctuation inversion. See Figure 5-mid.

Infinite-\(D\) limit.As \(D\) tends to infinity, the distribution becomes

\[p(v)}(_{1}v^{2}-2_{2}v+_{3})^{1-k_ {1}/2}}-(}{_{3}v}+_{3}_{1}-2_{2}^{2}_{2}+_{1}_{3} _{2}}{_{3}^{2}}(v-_{2}}{ })),\]

where \(k_{1}=d(_{3}_{1}-2_{2}_{2})/(TD_{3}^{2})\). An interesting feature is that the architecture ratio \(d/D\) always appears simultaneously with \(1/T\). This implies that for a sufficiently deep neural network, the ratio \(D/d\) also becomes proportional to the strength of the noise. Since we know that \(T=/S\) determines the performance of SGD, our result thus shows an extended scaling law of training: \(=const\). The architecture aspect of the scaling law also agrees with an alternative analysis , where the optimal architecture is found to have a constant ratio of \(d/D\). See Figure 5.

Now, if we \(T\), there are three situations: (1) \(d=o(D)\), (2) \(d=c_{0}D\) for a constant \(c_{0}\), (3) \(d=(D)\). If \(d=o(D)\), \(k_{1}\)\(\)\(0\) and the distribution converges to \(p(v) v^{-3}(_{1}v^{2}-2_{2}v+_{3})^{-1}\), which is a delta distribution at \(0\). Namely, if the width is far smaller than the depth, the model will collapse to

Figure 4: Regimes of learning for SGD as a function of \(T\) and the noise in the dataset \(\). According to (1) whether the sparse transition has happened, (2) whether a nontrivial maximum probability estimator exists, and (3) whether the sparse solution is a maximum probability estimator, the learning of SGD can be characterized into \(5\) regimes. Regime **I** is where SGD converges to a sparse solution with zero variance. In regime **II**, the stationary distribution has a finite spread, but the probability of being close to the sparse solution is very high. In regime **III**, the probability density of the sparse solution is zero, and therefore the model will learn without much problem. In regime **b**, a local nontrivial probability maximum exists. The only maximum probability estimator in regime **a** is the sparse solution.

zero. Therefore, we should increase the model width as we increase the depth. In the second case, \(d/D\) is a constant and can thus be absorbed into the definition of \(T\) and is the only limit where we obtain a nontrivial distribution with a finite spread. If \(d=(D)\), the distribution becomes a delta distribution at the global minimum of the loss landscape, \(p(v)=(v-_{2}/_{1})\) and achieves the global minimum.

### Implication for Variational Bayesian Learning

One of the major implications of the analytical solution we found for machine learning practice is the inappropriateness of using SGD to approximate a Bayesian posterior. Because every SGD iteration can be regarded as a sampling of the model parameters. A series of recent works have argued that the stationary distribution can be used as an approximation of the Bayesian posterior for fast variational inference [21; 3], \(p_{}() p_{}()\), a method that has been used for a wide variety of applications . However, our result implies that such an approximation is likely to fail. Common in Bayesian deep learning, we interpret the per-sample loss as the log probability and the weight decay as a Gaussian prior over the parameters, the true model parameters have a log probability of

\[ p_{}(|x)(,x)+\|\|^{2}.\] (17)

This distribution has a nonzero measure everywhere for any differentiable loss. However, the distribution for SGD in Eq.(14) has a zero probability density almost everywhere because a 1d subspace has a zero Lebesgue measure in a high-dimensional space. This implies that the KL divergence between the two distributions (either \((p_{}\|p_{})\) or \((p_{}\|p_{})\)) is infinite. Therefore, we can infer that in the information-theoretic sense, \(p_{}\) cannot be used to approximate \(p_{}\).

## 5 Discussion

In this work, we first showed that SGD systematically moves towards a balanced solution when rescaling symmetry exists, a result we termed the law of balance. Applying the law of balance, we have characterized the stationary distribution of SGD analytically, which is an unanswered fundamental problem in the study of SGD. This is the first analytical expression for a globally nonconvex and beyond quadratic loss without the need for any approximation. With this solution, we have discovered many phenomena that could be relevant to deep learning that were previously unknown. We found that SGD only has probability of exploring a one-dimensional submanifold even for a very-dimensional problem, ignoring all irrelevant directions. We applied our theory to the important problem of variational inference and showed that it is, in general, not appropriate to approximate the posterior with SGD, at least when any symmetry is present in the model. If one really wants to use SGD for variational inference, special care is required to at least remove symmetries from the loss function, which could be an interesting future problem. Our theory is limited, as the model we solved is only a minimal model of reality, and it would be interesting to consider more realistic models in the future. Also, it would be interesting to extend the law of balance to a broader class of symmetries.

Figure 5: SGD on deep networks leads to a well-controlled distribution and training loss. **Left**: Power law of the tail of the parameter distribution of deep linear nets. The dashed lines show the upper (\(-7/2\)) and lower (\(-5\)) bound of the exponent of the tail. The predicted power-law scaling agrees with the experiment, and the exponent decreases as the theory predicts. **Mid**: training loss of a tanh network. \(D=0\) is the case where only the input weight is trained, and \(D=1\) is the case where both input and output layers are trained. For \(D=0\), the model norm increases as the model loses stability. For \(D=1\), a “fluctuation inversion” effect appears. The fluctuation of the model vanishes before it loses stability. **Right**: performance of fully connected tanh nets on MNIST. Scaling the learning rate as \(1/D\) keeps the model performance relatively unchanged.