# iSCAN: Identifying Causal Mechanism Shifts among Nonlinear Additive Noise Models

Tianyu Chen\({}^{}\)\({}^{}\)  Kevin Bello\({}^{@sectionsign}\)  Bryon Aragam\({}^{}\)  Pradeep Ravikumar\({}^{@sectionsign}\)

\({}^{}\)Department of Statistics and Data Science, University of Texas at Austin

\({}^{}\)Booth School of Business, University of Chicago

\({}^{@sectionsign}\)Machine Learning Department, Carnegie Mellon University

Work done while at the Department of Statistics at the University of Chicago. Correspondence to kbello@cs.cmu.edu.

###### Abstract

Structural causal models (SCMs) are widely used in various disciplines to represent causal relationships among variables in complex systems. Unfortunately, the underlying causal structure is often unknown, and estimating it from data remains a challenging task. In many situations, however, the end goal is to localize the changes (shifts) in the causal mechanisms between related datasets instead of learning the full causal structure of the individual datasets. Some applications include root cause analysis, analyzing gene regulatory network structure changes between healthy and cancerous individuals, or explaining distribution shifts. This paper focuses on identifying the causal mechanism shifts in two or more related datasets over the same set of variables--_without estimating the entire DAG structure of each SCM_. Prior work under this setting assumed linear models with Gaussian noises; instead, in this work we assume that each SCM belongs to the more general class of _nonlinear_ additive noise models (ANMs). A key technical contribution of this work is to show that the Jacobian of the score function for the _mixture distribution_ allows for the identification of shifts under general non-parametric functional mechanisms. Once the shifted variables are identified, we leverage recent work to estimate the structural differences, if any, for the shifted variables. Experiments on synthetic and real-world data are provided to showcase the applicability of this approach. Code implementing the proposed method is open-source and publicly available at https://github.com/kevinsbello/iSCAN.

## 1 Introduction

Structural causal models (SCMs) are powerful models for representing causal relationships among variables in a complex system . Every SCM has an underlying graphical structure that is generally assumed to be a directed acyclic graph (DAG). Identifying the DAG structure of an SCM is crucial since it enables reasoning about interventions . Nonetheless, in most situations, scientists can only access _observational_ or _interventional_ data, or both, while the true underlying DAG structure remains _unknown_. As a result, in numerous disciplines such as computational biology , epidemiology , medicine , and econometrics , it is critically important to develop methods that can estimate the entire underlying DAG structure based on available data. This task is commonly referred to as causal discovery or structure learning, for which a variety of algorithms have been proposed over the last decades.

Throughout this work, we make the assumption of causal sufficiency (i.e., non-existence of unobserved confounders). Under this condition alone, identifying the underlying DAG structure is not possible in general, and remains worst-case NP-complete . Indeed, prominent methods such as PC and GES  additionally require the arguably strong faithfulness assumption  to consistently estimate, in large samples, the Markov equivalent class of the underlying DAG. However, these methods are not consistent in high-dimensions unless one additionally assumes sparsity or small maximum-degree of the true DAG . Consequently, the existence of hub nodes, which is a well-known feature in several networks , significantly complicates the DAG learning problem.

In many situations, however, the end goal is to _detect shifts (changes) in the causal mechanisms_ between two (or more) related SCMs rather than recovering the _entire_ underlying DAG structure of each SCM. For example, examining the mechanism changes in the gene regulatory network structure between healthy individuals and those with cancer may provide insights into the genetic factors contributing to the specific cancer; within biological pathways, genes could regulate various target gene groups depending on the cellular environment or the presence of particular disease conditions . In these examples, while the individual networks could be _dense_, the number of mechanism shifts could be _sparse_. Finally, in root cause analysis, the goal is to identify the sources that originated observed changes in a joint distribution; this is precisely the setting we study in this work, where we model the joint distributions via SCMs, as also done in .

In more detail, we focus on the problem of identifying mechanism shifts given datasets from two or more environments (SCMs) over the same observables. We assume that each SCM belongs to the class of additive noise models (ANMs) , i.e., each variable is defined as a nonlinear function over a subset of the remaining variables plus a random noise (see Section 2 for formal definitions). Importantly, we _do not_ make any structural assumptions (e.g., sparsity, small maximum-degree, or bounded tree-width) on the individual DAGs. Even though ANMs are well-known to be identifiable , we aim to detect the _local distribution changes_ without estimating the full structures individually. See Figure 1 for a toy example of what we aim to estimate. A similar setting to this problem was studied in  albeit in the restrictive linear setting. Finally, it is worth noting that even with _complete knowledge of the entire structure of each SCM_, assessing changes in _non-parametric_ functions across different groups or environments remains a very challenging problem [see for instance, 44].

Contributions.Motivated by recent developments on causal structure learning of ANMs , we propose a two-fold algorithm that (1) Identifies shifted variables (i.e., variables for which their causal mechanism has changed across the environments); and (2) If needed, for each shifted variable, estimates the structural changes among the SCMs. More concretely, we make the following set of contributions:

* To identify shifted variables (Definition 3), we prove that the variance of the diagonal elements of the Hessian matrix associated with the log-density of the _mixture distribution_ unveils information to detect distribution shifts in the leaves of the DAGs (see Theorem 1). Due to this result, our algorithm (Algorithm 1) iteratively chooses a particular leaf variable and determines whether or not such variable is shifted. Importantly, this detection step **does not** rely on any structural assumptions on the individual DAGs, and can consistently detect distribution shifts for _non-parametric functionals_ under very mild conditions such as second-order differentiability.
* To identify structurally shifted edges (Definition 4), we propose a nonparametric local parents recovery method (Algorithm 2) based on a recent measure of conditional dependence . In addition, based on recent results in , we provide a theoretical justification for the asymptotic consistency of Algorithm 2 in Theorem 2. Importantly, since structural changes can only occur on _shifted nodes_, this second step can be conducted much more efficiently when the sparse mechanism shift hypothesis  holds, which posits that only a small subset of the causal model's mechanisms change.
* We empirically demonstrate that our method can outperform existing methods such as DCI, which is tailored for linear models, as well as related methods for estimating unknown intervention targets such as UT-IGSP . See Section 5 and Appendix C for more details. Moreover, in Section 5.2, we provide experiments on an ovarian cancer dataset, thus, showcasing the applicability of our method.

## 2 Preliminaries and Background

In this section we introduce notation and formally define the problem setting. We use \([d]\) to denote the set of integers \(\{1,,d\}\). Let \(G=([d],E)\) be a DAG with node set \([d]\) and a set of directed edges \(E[d][d]\), where any \((i,j) E\) indicates and edge from \(i\) to \(j\). Also let \(X=(X_{1},,X_{d})\) denote a \(d\)-dimensional vector of random variables. An SCM \(=(X,f,_{N})\) over \(d\) variables is generally defined as a collection of \(d\) structural equations of the form:

\[X_{j}=f_{j}(_{j},N_{j}), j[d],\] (1)

where \(_{j}\{X_{1},,X_{d}\}\{X_{j}\}\) are the _direct causes_ (or parents) of \(X_{j}\); \(f=\{f_{j}\}_{j=1}^{d}\) is a set of _functional mechanisms_\(f_{j}:^{|_{j}|+1}\); and \(_{N}\) is a joint distribution2 over the noise variables \(N_{j}\), which we assume to be jointly independent3. Moreover, the underlying graph \(G\) of an SCM is constructed by drawing directed edges for each \(X_{k}_{j}\) to \(X_{j}\). We henceforth assume this graph to be acyclic, i.e., a DAG. Finally, every SCM \(\) defines a unique distribution \(_{X}\) over the variables \(X\)[Proposition 6.3 in 58], which by the independence of the noise variables (a.k.a. the Markovian assumption), \(_{X}\) admits the following factorization:

\[(X)=_{j=1}^{d}(X_{j}_{j}),\] (2)

where \((X_{j}_{j})\) is referred as the _causal mechanism_ of \(X_{j}\).

Figure 1: Illustration of two different environments (see Definition 2) in (1c) and (1d), both originated from the underlying SCM in (1a) with structural equations given in (1b). Between the two environments, we observe a change in the causal mechanisms of variables \(X_{3}\) and \(X_{5}\)â€”the red nodes in (1e). Specifically, for \(X_{5}\), we observe that its _functional dependence_ changed from \(X_{4}\) in \(_{1}\) to \(X_{3}\) in \(_{2}\). For \(X_{3}\), its _structural dependence_ has not changed between \(_{1}\) and \(_{2}\), and only its functional changed from \((X_{1})\) in \(_{1}\) to the sigmoid function \((X_{1})\) in \(_{2}\). Finally, in (1e), the red edges represent the _structural_ changes in the mechanisms. The non-existence of an edge from \(X_{1}\) to \(X_{3}\) indicates that the structural relation between \(X_{1}\) and \(X_{3}\) is invariant.

The model above is often too general due to problems of identifiability. In this work we will consider that the noises are additive.

**Definition 1** (Additive noise models (ANMs)).: _An additive noise model is an SCM \(=(X,f,_{N})\) as in (1), where each structural assignment has the form:_

\[X_{j}=f_{j}(_{j})+N_{j}, j[d].\]

Depending on the assumptions on \(f_{j}\) and \(N_{j}\), the underlying DAG of an ANM can be identifiable from observational data. E.g., when \(f_{j}\) is linear and \(N_{j}\) is Gaussian, in general one can only identify the Markov equivalence class (MEC) of the DAG, assuming faithfulness . For linear models, an exception arises when assuming equal error variances [56; 78; 47], or non-Gaussian errors . In addition, when \(f_{j}\) is nonlinear on each component and three times differentiable then the DAG is also identifiable [59; 29]. Very recently, Rolland et al.  proved DAG identifiability when \(f_{j}\) is nonlinear on each component and \(N_{j}\) is Gaussian, using information from the score's Jacobian.

### Data from multiple environments

Throughout this work we assume that we observe a collection of datasets, \(=\{^{h}\}_{h=1}^{H}\), from \(H\) (possibly different) environments. Each dataset \(^{h}=\{X^{h,i}\}_{i=1}^{m_{h}}\) from environment \(h\) contains \(m_{h}\) (possibly non-independent) samples from the joint distribution \(_{X}^{h}\), i.e., \(^{h}^{m_{h} d}\). We consider that each environment originates from soft interventions4 of an _unknown_ underlying SCM \(^{*}\) with DAG structure \(G^{*}\) and joint distribution \(^{*}(X)=_{j=1}^{d}^{*}(X_{j}_{j}^{*})\). Here \(_{j}^{*}\) denotes the parents (direct causes) of \(X_{j}\) in \(G^{*}\). Then, an environment arises from manipulations or shifts in the causal mechanisms of a _subset_ of variables, transforming from \(^{*}(X_{j}_{j}^{*})\) to \(}(X_{j}}_{j})\). Throughout, we will make the common modularity assumption of causal mechanisms [54; 38], which postulates that an intervention on a node \(X_{j}\) only changes the mechanism \((X_{j}_{j})\), while all other mechanisms \((X_{i}_{i})\), for \(i j\), remain unchanged.

**Definition 2** (Environment).: _An environment \(_{h}=(X,f^{h},_{N}^{h})\), with joint distribution \(_{X}^{h}\) and density \(p_{x}^{h}\), independently results from an SCM \(^{*}\) by intervening on an unknown subset \(S^{h}[d]\) of causal mechanisms, that is, we can factorize the joint distribution \(^{h}(X)\) as follows:_

\[^{h}(X)=_{j[d]}^{h}(X_{j}_{j}^{h})= _{j S^{h}}}^{h}(X_{j} }_{j}^{h})_{j S^{h}}^{*}(X_{j}_{j}^{*}),\] (3)

_where \(}_{j}^{h}\) is a (possibly empty) subset of the underlying causal parents \(_{j}^{*}\), i.e., \(}_{j}^{h}_{j}^{*}\); and, \(^{*}(X_{j}_{j}^{*})\) are the invariant mechanisms._

**Remark 1**.: _In the literature [e.g., 55], it is common to find the assumption that in a soft intervention the direct causes remain invariant, i.e., \(}_{j}^{h}=_{j}^{*}\) for all \(j S^{h},h[H]\). In this work we consider a more general setting where none, some, or all of the direct causes of an intervened node are removed, i.e., \(}_{j}^{h}_{j}^{*}\) for all \(j S^{h},h[H]\)._

We next define shifted nodes (variables).

**Definition 3** (Shifted node).: _Given \(H\) environments \(\{_{h}=(X,f^{h},_{N}^{h})\}_{h=1}^{H}\) originated from an ANM \(^{*}\), a node \(j\) is called a shifted node if there exists \(h,h^{}[H]\) such that:_

\[^{h}(X_{j}_{j}^{h})^{h^{}}(X_{j} _{j}^{h^{}}).\]

To conclude this section, we formally define the problem setting.

**Problem setting.** Given \(H\) datasets \(\{^{h}\}_{h=1}^{H}\), where \(^{h}_{X}^{h}\) consists of \(m_{h}\) (possibly non-independent) samples from the environment distribution \(_{X}^{h}\) originated from an underlying ANM \(^{*}\), estimate the set of shifted nodes and structural differences.

We note that [82; 23] have study the problem setting above for \(H=2\), assuming _linear functions_\(f_{j}^{h}\), and Gaussian noises \(N_{j}^{h}\). In this work, we consider a more challenging setting where \(f_{j}^{h}\) are nonparametric functions (see Section 3 for more details).

### Related Work

First we mention works most closely related to ours. The problem of learning the difference between _undirected_ graphs has received much more attention than the directed case. E.g., [88; 46; 85; 19] develop algorithms for estimating the difference between Markov random fields and Ising models. See  for recent developments in this direction. In the directed setting, [82; 23] propose methods for directly estimating the difference of linear ANMs with Gaussian noise. More recently,  studied the setting where a dataset is generated from a mixture of SCMs, and their method is capable of detecting conditional distributions changes; however, due to the unknown membership of each sample, it is difficult to test for structural and functional changes. Moreover, in contrast to ours, all the aforementioned work on the directed setting rely on some form of faithfulness assumption.

**Causal discovery from a single environment.** One way to identify mechanism shifts (albeit inefficient) would be to estimate the individual DAGs for each environment and then test for structural differences across the different environments. A few classical and recent methods for learning DAGs from a single dataset include: Constraint-based algorithms such as PC and FCI ; in score-based methods, we have greedy approaches such as GES , likelihood-based methods [56; 47; 59; 2; 1; 29], and continuous-constrained learning [89; 51; 39; 8]. Order-based methods [75; 41; 24; 65; 48], methods that test for asymmetries [70; 12], and hybrid methods [50; 76]. Finally, note that even if we _perfectly estimate each individual DAG_ (assuming identifiable models such as ANMs), applying these methods would only identify _structural_ changes. That is, for variables that have the same parents across all the environments, we would require an additional step to identify _distributional_ changes.

**Testing functional changes in multiple datasets.** Given the parents of a variable \(X_{j}\), one could leverage prior work [44; 25; 9; 26] on detecting heterogeneous functional relationships. However, we highlight some important limitations. Several methods such as [25; 9; 26] only work for one dimensional functionals and assume that the datasets share the exact same design matrix. Although  relaxes this assumption and extends the method to multivariate cases, the authors assume that the covariates (i.e., \(_{j}^{h}\)) are sampled from the _same distribution_ across the environments, which is a strong assumption in our context since ancestors of \(X_{j}\) could have experienced mechanism shifts. Finally, methods such as  and , although nonparametric, need knowledge about the parent set \(_{j}\) for each variable, and they assume that \(_{j}\) is same across different environments.

**Causal discovery from heterogeneous data.** Another well-studied problem is to learn the underlying DAG of the SCM \(^{*}\) that originated the different environments. Under this setting,  provided a characterization of the \(\)-MEC, a subset of the Markov equivalence class.  provided DAG-identifiability results by leveraging sparse mechanism shifts and relies on identifying such shifts, which this work aims to solve.  developed an estimator considering unknown intervention targets.  primarily focuses on linear SEM and does not adapt well to nonlinear scenarios. Also assuming linear models, [22; 21] applied ideas from linear invariant causal prediction [ICP, 57] and ICM to identify the causal DAG.  proposes a nonparametric method that can identify the intervention targets; however, this method relies on nonparametric CI tests, which can be time-consuming and sample inefficient.  introduced the joint causal inference (JCI) framework, which can also estimate intervention nodes. However, this method relies on an assumption that the intervention variables are fully connected, a condition that is unlikely to hold in practice.  introduced a two-stage approach that removes functional restrictions. First, they used the PC algorithm using all available data to identify the MEC. Then, the second step aims to orient the remaining edges based on a novel measure of mechanism dependence. Finally, we note that a common assumption in the aforementioned methods is the knowledge of which dataset corresponds to the observational distribution; without such information, their assumptions on the type of interventions would not hold true. In contrast, our method does not require knowledge of the observational distribution.

## 3 Identifying Causal Mechanism Shifts via Score Matching

In this section, we propose iSCAN (_identifying Shifts in Causal Additive Noise models_), a method for detecting shifted nodes (Definition 3) based only on information from the Jacobian of the score of the data distribution5.

Let \(\) be the row concatenation of all the datasets \(^{h}\), i.e., \(=[(^{1})^{}\ |\ \ |\ (^{H})^{}]^{}^{m d}\), where \(m=_{h=1}^{H}m_{h}\). The pooled data \(\) can be interpreted as a mixture of data from the \(H\) different environments. To account for this mixture, we introduce the probability mass \(w_{h}\), which represents the probability that an observation belongs to environment \(h\), i.e., \(_{h=1}^{H}w_{h}=1\). Let \((X)\) denote the distribution of the mixture data with density function \(q(x)\), i.e., \(q(x)=_{h=1}^{H}w_{h}p^{h}(x)\).

In the sequel, we use \(s^{h}(x) p^{h}(x)\) to denote the score function of the joint distribution of environment \(h\) with density \(p^{h}(x)\). Also, we let \(s(x) q(x)\) to denote the score function of the mixture distribution with density \(q(x)\). We will make the following assumptions on \(f^{h}_{j}\) and \(N^{h}_{j}\).

**Assumption A**.: _For all \(h[H],j[d]\), the functional mechanisms \(f^{h}_{j}(^{h}_{j})\) are assumed to be non-linear in every component._

**Assumption B**.: _For all \(j[d],h[H]\), the pdf of the real-valued noise \(N^{h}_{j}\) denoted by \(p^{h}_{N_{j}}\) satisfies \(}{( n^{h}_{j})^{2}} p^{h}_{N_{j}}(n^{h}_{j})=c^{ h}_{j}\) where \(c^{h}_{j}\) is a non-zero constant. Moreover, \([N^{h}_{j}]=0\)._

For an ANM, Rolland et al.  showed that under Assumption A and assuming zero-mean Gaussian noises (which satisfies Assumption B), the diagonal of the Jacobian of the score function reveals the leaves of the underlying DAG. We next instantiate their result in our context.

**Proposition 1** (Lemma 1 in ).: _For an environment \(_{h}\) with underlying DAG \(G^{h}\) and pdf \(p^{h}(x)\), let \(s^{h}(x)= p^{h}(x)\) be the associated score function. Then, under Assumptions A and B, for all \(j[d]\), we have:_

\[$}_{X}[_{j }(X)}{ x_{j}}]=0.\]

Motivated by the ideas of leaf-identifiability from the score's Jacobian in a _single_ ANM, we next show that the _score's Jacobian of the mixture distribution_ can help reveal mechanism shifts among the different environments.

**Theorem 1**.: _For all \(h[H]\), let \(G^{h}\) and \(p^{h}(x)\) denote the underlying DAG structure and pdf of environment \(_{h}\), respectively, and let \(q(x)\) be the pdf of the mixture distribution of the \(H\) environments such that \(q(x)=_{h=1}^{H}w_{h}p^{h}(x)\). Also, let \(s(x)= q(x)\) be the associated score function. Then, under Assumptions A, and B, we have:_

1. _If_ \(j\) _is a leaf in all DAGs_ \(G^{h}\)_, then_ \(j\) _is a shifted node if and only if_ \(_{X}[(X)}{ x_{j}}]>0\)_._
2. _If_ \(j\) _is not a leaf in at least one DAG_ \(G^{h}\)_, then_ \(_{X}[(X)}{ x_{j}}]>0\)_._

Theorem 1 along with Proposition 1 suggests a way to identify shifted nodes. Namely, to use Proposition 1 to identify a common leaf, and then use Theorem 1 to test if such a leaf is a shifted node or not. We then proceed to remove the leaf and repeat the process. See Algorithm 1. Note that due to the fact that each environment is a result of an intervention (Definition 2) on an underlying ANM \(^{*}\), it follows that the leaves in \(G^{*}\) will remain leaves in each DAG \(G^{h}\).

```
0: Datasets \(^{1},,^{H}\).
0: Shifted variables set \(\), and topological sort \(\).
1: Initialize \(=\{\}\), \(=(\ )\), \(=\{1,,d\}\)
2: Set \(=[(^{1})^{}\ |\ \ |\ (^{H})^{}]^{}^{m d}\).
3:while\(\)do
4:\( h[H],^{h}_{^{h}}[(^{2} p^{h}(x))]\).
5:\(_{}[(^{2} q(x))]\)
6:\(L_{h[H]}\{j\ |\ ^{h}_{j}=0,j[d]\}\). \(\) Identify leaves.
7:\(\ \ \{j\ |\ _{j} 0,j L\}\)\(\) Identify shifted nodes.
8:\(-\{L\}\)
9:\( l L\), remove the \(l\)-th column of \(^{h}\), \( h[H]\), and \(\).
10:\((L,)\). ```

**Algorithm 1****iSCAN**--Identifying Shifts in Causal Additive Noise models.

**Remark 2**.: _See Appendix A for a practical implementation of Alg. 1. Finally, note that Alg. 1 also estimates a valid topological sort for the different environments by leveraging Proposition 1._

### Score's Jacobian estimation

Since the procedure to estimate \(_{q}[(x)}{ x_{j}}]\) is similar for estimating \(_{p^{h}}[^{h}(x)}{ x_{j}}]\) for each \(h[H]\), in this section we discuss the estimation for \(_{q}[(x)}{ x_{j}}]\), which involves computing the diagonal of the Hessian of \( q(x)\). To estimate this quantity, we adopt a similar approach to the method in [45; 65]. First, we estimate the first-order derivative of \( q(x)\) by Stein's identity :

\[_{q}[(x) q(x)^{}+(x)]=0,\] (4)

where \(:^{d}^{d^{}}\) is any test function such that \(_{x}(x)q(x)=0\). Once we have estimated \( q(x)\), we can proceed to estimate the Hessian's diagonal by using second-order Stein's identity:

\[_{q}[(x)(^{2} q(x))^{}]=_{ q}[_{}^{2}(x)-(x)( q(x)  q(x)^{})]\] (5)

Using eq.(4) and eq.(5), we can estimate the Hessian's diagonal at each data point. Thus allowing us to obtain an estimate of \(_{q}[(x)}{ x_{j}}]\). See Appendix A.1 for additional details.

**Remark 3** (Consistency of Algorithm 1).: _The estimators in eq.(6) and eq.(7), given in Appendix A.1, correspond to Monte Carlo estimators using eq.(4) and (5), respectively, then the error of the estimators tend to zero as the number of samples goes to infinity. See for instance the discussion in Section 3.1 in . We empirically explore the consistency of Algorithm 1 in Figure 2._

**Remark 4** (Computational Complexity).: _Since we adopt the kernel-based estimator, \(\), from . The computational complexity for the estimation of the score's Jacobian in a single environment is \((dm_{h}^{3})\). In Algorithm 1, computation is dominated by the \(\) function applied to the pooled data \(^{m d}\). Therefore, the overall complexity of Algorithm 1 is \((dm^{3})\). See Figure 2._

## 4 On Identifying Structural Differences

After estimating the set of shifted nodes \(\) through Algorithm 1, it is of high interest to predict which causal relations between a shifted node and its parents have undergone changes across the environments. The meaning of a change in a causal relationship can vary based on the context and the estimation objective. This section primarily centers on structural changes, elaborated further below, while additional discussion about other types of changes is available in Appendix D.

**Definition 4** (Structurally shifted edge).: _For a given shifted node \(X_{j}\), an edge \(X_{i} X_{j}\) is called a structurally shifted edge if \( h,h^{}[H]\) such that \(X_{i}_{j}^{h}\) and \(X_{i}_{j}^{h^{}}\)._

In other words, a structurally shifted edge is an edge that exists in one environment but not in another, indicating a change in the underlying structure of the causal mechanism. To detect the structurally shifted edges, we will estimate the parents of each shifted node in \(\) for all environments \(_{h}\).

Figure 2: (Left) F1 score of the output of Alg. 1 w.r.t. to the true set of shifted nodes. For different number of nodes, we observe how iSCAN recovers the true set of shifted nodes as the number of samples increases, thus empirically showing its consistency. (Right) Runtime vs number of nodes for different number of samples. We corroborate the linear dependence of the time complexity on \(d\).

**Remark 5**.: _Note that under the sparse mechanism shift hypothesis , i.e., \(|S| d\), estimating the parents of each shifted node is much more efficient than estimating the entire individual structures._

Kernel regression and variable selection.A potential strategy to estimate structurally shifted edges involves employing the estimated topological order \(\) obtained from Algorithm 1. If this estimated topological order remains valid across all environments, it can serve as a guide for the nonparametric variable selection process to identify the parents of a shifted node \(X_{j}\). Specifically, we can regress the shifted node \(X_{j}\) on its predecessors \(}(X_{j})\) and proceed with a nonparametric variable selection procedure. Here \(}(X_{j})\) consists of the set of nodes that appear before \(X_{j}\) in the estimated topological order \(\). To achieve that, there exist various methods under the hypothesis testing framework [42; 17; 63], and bandwidth selection procedures . These methods offer consistency guarantees, but their time complexity might be problematic. Kernel regression, for example, has a time complexity of \((m^{3})\), and requires an additional bandwidth selection procedure, usually with a time complexity of \((m^{2})\). Consequently, it becomes imperative to find a more efficient method for identifying parents locally.

Feature ordering by conditional independence (FOCI).An alternative efficient approach for identifying the parents is to leverage the feature ordering method based on conditional independence proposed by Azadkia and Chatterjee . This method provides a measure of conditional dependency between variables with a time complexity of \((m m)\). By applying this method, we can perform fast variable selection in a nonparametric setting. See Algorithm 4 in Appendix A.3.

**Theorem 2** (Consistency of Algorithm 4).: _Under Assumption C, given in Appendix B.2, if the estimated topological order \(\) output from Algorithm 1 is valid for all environments, then the output \(}_{j}^{h}\) of Algorithm 4 is equal to the true parents \(_{j}^{h}\) of node \(X_{j}\) with high probability, for all \(h[H]\)._

Motivated by Theorem 2, we next present Algorithm 2, a procedure to estimate the structurally shifted edges. Given the consistency of Alg. 1 and Alg. 2, it follows that combining both algorithms will correctly estimate the true set of shifted nodes and structural shifted edges, asymptotically.

```
0: Data \(\{^{h}\}_{h[H]}\), topological order \(\), shifted nodes \(\)
0: Structurally shifted edges set \(\)
1: Initialize \(=\)
2:for\(X_{j}\) in \(\)do
3:for\(h\) in \([H]\)do
4: Estimate \(}_{j}^{h}\) from Alg. 4 (FOCI) with input \(\{}(_{j}^{h}),_{j}^{h}\}\)
5:if\( X_{k},h,h^{}\) such that \(X_{k}}_{j}^{h},X_{k}}_{j}^{h^ {}}\)then
6:\((X_{k},X_{j})\) ```

**Algorithm 2** Identifying structurally shifted edges

## 5 Experiments

We conducted a comprehensive evaluation of our algorithms. Section 5.1 focuses on assessing the performance of iSCAN (Alg. 1) for identifying shifted variables. In Section 5.2, we apply iSCAN for identifying shifted nodes along with FOCI (Alg. 2) for estimating structural changes, on apoptosis data. Also, in App. C, we provide additional experiments including: _(i)_ Localizing shifted nodes without structural changes (App. C.1), and where the functionals are sampled from Gaussian processes (App. C.1): _(ii)_ Localizing shifted nodes and estimating structural changes when the underlying graphs are different; and _(iii)_ Evaluating iSCAN using the elbow method for selecting shifted nodes (see App. C.3 and Remark 6). Code is publicly available at https://github.com/kevinsbello/iSCAN.

### Synthetic experiments on shifted nodes

Graph models.We generated random graphs using the Erdos-Renyi (ER) and scale free (SF) models. For a given number of variables \(d\), ER\(k\) and SF\(k\) indicate an average number of edges equal to \(kd\).

**Data generation.** We first sampled a DAG, \(G^{1}\), of \(d\) nodes according to either the ER or SF model for env. \(_{1}\). For env. \(_{2}\), we initialized its DAG structure from env. \(_{1}\) and produced structural changes by randomly selecting \(0.2 d\) nodes from the non-root nodes. This set of selected nodes \(S\), with cardinality \(|S|=0.2d\), correspond to the set of "shifted nodes". In env. \(_{2}\), for each shifted node \(X_{j} S\), we uniformly at random deleted at most three of its incoming edges, and use \(D_{j}\) to denote the parents whose edges to \(X_{j}\) were deleted; thus, the DAG \(G^{2}\) is a subgraph of \(G^{1}\). Then, in \(_{1}\), each \(X_{j}\) was defined as follows:

\[X_{j}=_{i_{j}^{1} D_{j}}(X_{i}^{2})+_{i D _{j}}4(2X_{i}^{2}-3X_{i})+N_{j}\]

In \(_{2}\), each \(X_{j}\) was defined as follows:

\[X_{j}=_{i_{j}^{2}}(X_{i}^{2})+N_{j}\]

**Experiment details.** For each simulation, we generated \(500\) data points per environment, i.e., \(m_{1}=500,m_{2}=500\) and \(m=1000\). The noise variances were set to 1. We conducted 30 simulations for each combination of graph type (ER or SF), noise type (Gaussian, Gumbel, and Laplace), and number of nodes (\(d\{10,20,30,50\}\)). The running time was recorded by executing the experiments on an Intel Xeon Gold 6248R Processor with 8 cores. For our method, we used \(=0.05\) for eq.(6) and eq.(7), and a threshold \(t=2\) (see Alg. 3).

**Evaluation.** We compared the performance of ISCAN against several baselines, which include: DCI , the approach by , CITE , KCD , SCORE , and UT-IGSP . Figure 3 illustrates the results for ER4 and SF4 graphs. We note that iSCAN consistently outperforms other baselines in terms of F1 score across all scenarios. Importantly, note how the performance of some baselines, like DCI, CITE, Budhathoki's, and SCORE, degrades faster for graphs with hub nodes, a property of SF graphs. In contrast, iSCAN performs similarly, as it is not dependent on structural assumptions on the individual DAGs. Additionally, it is worth noting that our method exhibits faster computational time than KCD, Budhathoki's, and SCORE, particularly for larger numbers of nodes.

In Appendix C.1, we provide experiments on sparser graphs such as ER2/SF2, and denser graphs such as ER6/SF6. We also include Precision and Recall in all plots in the supplement.

### Experiments on apoptosis data

We conducted an analysis on an ovarian cancer dataset using iSCAN (Algorithm 1) to identify shifted nodes and Algorithm 2 to detect structurally shifted edges (SSEs). This dataset had previously been analyzed using the DPM method  in the undirected setting, and the DCI method  in the linear setting. By applying our method, we were able to identify the shifted nodes and SSEs in the dataset (see Figure 3(a)). Our analysis revealed the identification of two hub nodes in the apoptosis

Figure 3: Experiments on ER4 and SF4 graphs. See the experiment details above. The points indicate the average values obtained from these simulations. The error bars depict the standard errors. Our method iSCAN (light blue) consistently outperformed baseline methods in terms of F1 score.

pathway: BIRC3, and PRKAR2B. The identification of BIRC3 as a hub node was consistent with the results obtained by the DPM and DCI methods. Additionally, our analysis also identified PRKAR2B as a hub node, which was consistent with the result obtained by the DCI method. Indeed, BIRC3, in addition to its role in inhibiting TRAIL-induced apoptosis, has been investigated as a potential therapeutic target in cancer treatment including ovarian cancer[35; 81]; whereas PRKAR2B has been identified as an important factor in the progression of ovarian cancer cells. The latter serves as a key regulatory unit involved in the growth and development of cancer cells [84; 13].

## 6 Conclusion

In this work, we showed a novel connection between score matching and identifying causal mechanism shifts among related heterogeneous datasets. This finding opens up a new and promising application for score function estimation techniques.

Our proposed technique consists of three modules. The first module evaluates the Jacobian of the score under the _individual_ distributions and the _mixture_ distribution. The second module identifies shifted features (variables) using the estimated Jacobians, allowing us to pinpoint the nodes that have undergone a mechanism shift. Finally, the third module aims to estimate structurally shifted edges, a.k.a. the difference DAG, by leveraging the information from the identified shifted nodes and the estimated topological order. _It is important to note that our identifiability result in Theorem 1 is agnostic to the choice of the score estimator._

The strength of our result lies in its capability to recover the difference DAG in non-linear Additive Noise Models (ANMs) without making any assumptions about the parametric form of the functions or statistical independencies. This makes our method applicable in a wide range of scenarios where non-linear relationships and shifts in mechanisms are present.

### Limitations and future work

While our work demonstrates the applicability of score matching in identifying causal mechanism shifts in the context of nonlinear ANMs, there are several limitations and areas for future exploration:

_Extension to other families of SCMs_: Currently, our method is primarily focused on ANMs where the noise distribution satisfies Assumption B, e.g., Gaussian distributions. It would be valuable to investigate the application of score matching in identifying causal mechanism shifts in other types of SCMs. Recent literature, such as , has extended score matching to additive Models with arbitrary noise for finding the topological order. Expanding our method to accommodate different noise models would enhance its applicability to a wider range of real-world scenarios.

_Convergence rate analysis_: Although the score matching estimator is asymptotically consistent, the convergence rate remains unknown in general. Understanding the convergence properties of the estimator is crucial for determining the sample efficiency and estimating the required number of samples to control the estimation error within a desired threshold. Further theoretical developments, such as , on score matching estimators would provide valuable insights into the performance and sample requirements of iSCAN.

Figure 4: Results on apoptosis data.

[MISSING_PAGE_FAIL:11]

* Friedman et al.  Friedman, N., Linial, M., Nachman, I. and Pe'er, D. , Using bayesian networks to analyze expression data, _in_ 'Proceedings of the fourth annual international conference on Computational molecular biology', pp. 127-135.
* Ghassami et al.  Ghassami, A., Kiyavash, N., Huang, B. and Zhang, K. , 'Multi-domain causal structure learning in linear systems', _Advances in neural information processing systems_**31**.
* Ghassami et al.  Ghassami, A., Salehkaleybar, S., Kiyavash, N. and Zhang, K. , 'Learning causal structures using regression invariance', _Advances in Neural Information Processing Systems_**30**.
* Ghoshal et al.  Ghoshal, A., Bello, K. and Honorio, J. , 'Direct learning with guarantees of the difference dag between structural equation models', _arXiv preprint arXiv:1906.12024_.
* Ghoshal and Honorio  Ghoshal, A. and Honorio, J. , Learning linear structural equation models in polynomial time and sample complexity, _in_ 'Proceedings of the Twenty-First International Conference on Artificial Intelligence and Statistics', Vol. 84 of _Proceedings of Machine Learning Research_, PMLR, pp. 1466-1475.
* Hall and Hart  Hall, P. and Hart, J. D. , 'Bootstrap test for difference between means in nonparametric regression', _Journal of the American Statistical Association_**85**(412), 1039-1049.
* Hardle and Marron  Hardle, W. and Marron, J. S. , 'Semiparametric comparison of regression curves', _The Annals of Statistics_ pp. 63-89.
* Hastie  Hastie, T. J. , Generalized additive models, _in_ 'Statistical models in S', Routledge, pp. 249-307.
* Hoover et al.  Hoover, K. D., Demiralp, S. and Perez, S. J. , 'Empirical identification of the vector autoregression: The causes and effects of us m2', _The methodology and practice of econometrics: a Festschrift in honour of David F. Hendry_ pp. 37-58.
* Hoyer et al.  Hoyer, P., Janzing, D., Mooij, J. M., Peters, J. and Scholkopf, B. , 'Nonlinear causal discovery with additive noise models', _Advances in neural information processing systems_**21**.
* Hu et al.  Hu, P., Jiao, R., Jin, L. and Xiong, M. , 'Application of causal inference to genomic analysis: advances in methodology', _Frontiers in Genetics_**9**, 238.
* Huang et al.  Huang, B., Zhang, K., Zhang, J., Ramsey, J., Sanchez-Romero, R., Glymour, C. and Scholkopf, B. , 'Causal discovery from heterogeneous/nonstationary data', _The Journal of Machine Learning Research_**21**(1), 3482-3534.
* Hudson et al.  Hudson, N. J., Reverter, A. and Dalrymple, B. P. , 'A differential wiring analysis of expression data correctly identifies the gene containing the causal mutation', _PLoS computational biology_**5**(5), e1000382.
* Ikram et al.  Ikram, A., Chakraborty, S., Mitra, S., Saini, S., Bagchi, S. and Kocaoglu, M. , 'Root cause analysis of failures in microservices through causal discovery', _Advances in Neural Information Processing Systems_**35**, 31158-31170.
* Imbens  Imbens, G. W. , 'Potential outcome and directed acyclic graph approaches to causality: Relevance for empirical practice in economics', _Journal of Economic Literature_**58**(4), 1129-1179.
* Johnstone et al.  Johnstone, R. W., Frew, A. J. and Smyth, M. J. , 'The trail apoptotic pathway in cancer onset, progression and therapy', _Nature Reviews Cancer_**8**(10), 782-798.
* Kalisch and Buhlman  Kalisch, M. and Buhlman, P. , 'Estimating high-dimensional directed acyclic graphs with the pc-algorithm.', _Journal of Machine Learning Research_**8**(3).
* Koehler et al.  Koehler, F., Heckett, A. and Risteski, A. , 'Statistical efficiency of score matching: The view from isoperimetry', _arXiv preprint arXiv:2210.00726_.
* Koller and Friedman  Koller, D. and Friedman, N. , _Probabilistic graphical models: principles and techniques_, MIT press.
* Lachapelle et al.  Lachapelle, S., Brouillard, P., Deleu, T. and Lacoste-Julien, S. , 'Gradient-based neural dag learning', _arXiv preprint arXiv:1906.02226_.
* Lafferty and Wasserman  Lafferty, J. and Wasserman, L. , 'Rodeo: Sparse, greedy nonparametric regression'.
* Larranaga et al.  Larranaga, P., Kuijpers, C. M., Murga, R. H. and Yurramendi, Y. , 'Learning bayesian network structures by searching for the best ordering with genetic algorithms', _IEEE transactions on systems, man, and cybernetics-part A: systems and humans_**26**(4), 487-493.

*  Lavergne, P. and Vuong, Q. , 'Nonparametric significance testing', _Econometric Theory_**16**(4), 576-601.
*  Li, C., Shen, X. and Pan, W. , 'Nonlinear causal discovery with confounders', _Journal of the American Statistical Association_ pp. 1-10.
*  Li, X., Jiang, B. and Liu, J. S. , 'Kernel-based partial permutation test for detecting heterogeneous functional relationship', _Journal of the American Statistical Association_ pp. 1-19.
*  Li, Y. and Turner, R. E. , 'Gradient estimators for implicit models', _arXiv preprint arXiv:1705.07107_.
*  Liu, S., Suzuki, T., Relator, R., Sese, J., Sugiyama, M., Fukumizu, K. et al. , 'Support consistency of direct sparse-change learning in markov networks', _The Annals of Statistics_.
*  Loh, P.-L. and Buhlmann, P. , 'High-Dimensional Learning of Linear Causal Networks via Inverse Covariance Estimation', _Journal of Machine Learning Research_.
*  Montagna, F., Nocei, N., Rosasco, L., Zhang, K. and Locatello, F. , 'Causal discovery with score matching on additive models with arbitrary noise', _arXiv:2304.03265_.
*  Mooij, J. M., Magliacane, S. and Claassen, T. , 'Joint causal inference from multiple contexts', _The Journal of Machine Learning Research_**21**(1), 3919-4026.
*  Nandy, P., Hauser, A. and Maathuis, M. H. , 'High-dimensional consistency in score-based and hybrid structure learning', _The Annals of Statistics_**46**(6A), 3151-3183.
*  Ng, I., Ghassami, A. and Zhang, K. , 'On the role of sparsity and dag constraints for learning linear dags', _Advances in Neural Information Processing Systems_**33**, 17943-17954.
*  Paleyes, A., Guo, S., Scholkopf, B. and Lawrence, N. D. , Dataflow graphs as complete causal graphs, _in_ '2023 IEEE/ACM 2nd International Conference on AI Engineering-Software Engineering for AI (CAIN)', IEEE, pp. 7-12.
*  Park, J., Shalit, U., Scholkopf, B. and Muandet, K. , Conditional distributional treatment effect with kernel conditional mean embeddings and u-statistic regression, _in_ 'International Conference on Machine Learning', PMLR, pp. 8401-8412.
*  Pearl, J. , _CAUSALITY: Models, Reasoning, and Inference_, 2nd edn, Cambridge University Press.
*  Perry, R., Von Kugelgen, J. and Scholkopf, B. , 'Causal discovery in heterogeneous environments under the sparse mechanism shift hypothesis', _arXiv preprint arXiv:2206.02013_.
*  Peters, J. and Buhlmann, P. , 'Identifiability of gaussian structural equation models with equal error variances', _Biometrika_**101**(1), 219-228.
*  Peters, J., Buhlmann, P. and Meinshausen, N. , 'Causal inference by using invariant prediction: identification and confidence intervals', _Journal of the Royal Statistical Society. Series B (Statistical Methodology)_ pp. 947-1012.
*  Peters, J., Janzing, D. and Scholkopf, B. , _Elements of causal inference: foundations and learning algorithms_, The MIT Press.
*  Peters, J., Mooij, J. M., Janzing, D. and Scholkopf, B. , 'Causal discovery with continuous additive noise models'.
*  Pimanda, J. E., Ottersbach, K., Knezevic, K., Kinston, S., Chan, W. Y., Wilson, N. K., Landry, J.-R., Wood, A. D., Kolb-Kokocinski, A., Green, A. R. et al. , 'Gata2, fli1, and scl form a recursively wired gene-regulatory circuit during early hematopoietic development', _Proceedings of the National Academy of Sciences_**104**(45), 17692-17697.
*  Plis, S. M., Calhoun, V. D., Weisend, M. P., Eichele, T. and Lane, T. , 'Meg and fmri fusion for non-linear estimation of neural and bold signal changes', _Frontiers in neuroinformatics_**4**, 114.
*  Plis, S. M., Weisend, M. P., Damaraju, E., Eichele, T., Mayer, A., Clark, V. P., Lane, T. and Calhoun, V. D. , 'Effective connectivity analysis of fmri and meg data collected under identical paradigms', _Computers in biology and medicine_**41**(12), 1156-1165.
*  Racine, J. , 'Consistent significance testing for nonparametric regression', _Journal of Business & Economic Statistics_**15**(3), 369-378.

* Robins et al.  Robins, J. M., Hernan, M. A. and Brumback, B. , 'Marginal structural models and causal inference in epidemiology', _Epidemiology_ pp. 550-560.
* Rolland et al.  Rolland, P., Cevher, V., Kleindessner, M., Russell, C., Janzing, D., Scholkopf, B. and Locatello, F. , Score matching enables causal discovery of nonlinear additive noise models, _in_ 'International Conference on Machine Learning', PMLR, pp. 18741-18753.
* Sachs et al.  Sachs, K., Perez, O., Pe'er, D., Lauffenburger, D. A. and Nolan, G. P. , 'Causal protein-signaling networks derived from multiparameter single-cell data', _Science_**308**(5721), 523-529.
* Saeed et al.  Saeed, B., Panigrahi, S. and Uhler, C. , Causal structure discovery from distributions arising from mixtures of dags, _in_ 'International Conference on Machine Learning', PMLR, pp. 8336-8345.
* Sanchez et al.  Sanchez, P., Liu, X., O'Neil, A. Q. and Tsaftaris, S. A. , 'Diffusion models for causal discovery via topological ordering', _arXiv preprint arXiv:2210.06201_.
* Scholkopf et al.  Scholkopf, B., Locatello, F., Bauer, S., Ke, N. R., Kalchbrenner, N., Goyal, A. and Bengio, Y. , 'Toward causal representation learning', _Proceedings of the IEEE_**109**(5), 612-634.
* Shimizu et al.  Shimizu, S., Hoyer, P. O., Hyvarinen, A., Kerminen, A. and Jordan, M. , 'A linear non-gaussian acyclic model for causal discovery.', _Journal of Machine Learning Research_.
* Spirtes et al.  Spirtes, P., Glymour, C. N., Scheines, R. and Heckerman, D. , _Causation, prediction, and search_, MIT press.
* Squires et al.  Squires, C., Wang, Y. and Uhler, C. , Permutation-based causal structure learning with unknown intervention targets, _in_ 'Conference on Uncertainty in Artificial Intelligence', PMLR, pp. 1039-1048.
* Stein  Stein, C. , A bound for the error in the normal approximation to the distribution of a sum of dependent random variables, _in_ 'Proc. Sixth Berkeley Symp. Math. Stat. Prob.', pp. 583-602.
* Tanay et al.  Tanay, A., Regev, A. and Shamir, R. , 'Conservation and evolvability in regulatory networks: the evolution of ribosomal regulation in yeast', _Proceedings of the National Academy of Sciences_**102**(20), 7203-7208.
* Teyssier and Koller  Teyssier, M. and Koller, D. , 'Ordering-based search: A simple and effective algorithm for learning bayesian networks', _arXiv preprint arXiv:1207.1429_.
* Tsamardinos et al.  Tsamardinos, I., Brown, L. E. and Aliferis, C. F. , 'The max-min hill-climbing Bayesian network structure learning algorithm', _Machine Learning_**65**(1), 31-78.
* Uhler et al.  Uhler, C., Raskutti, G., Buhlmann, P. and Yu, B. , 'Geometry of the faithfulness assumption in causal inference', _The Annals of Statistics_ pp. 436-463.
* Van de Geer and Buhlmann  Van de Geer, S. and Buhlmann, P. , '\(_{0}\)-penalized maximum likelihood for sparse directed acyclic graphs', _The Annals of Statistics_**41**(2), 536-567.
* Varici et al.  Varici, B., Shanmugam, K., Sattigeri, P. and Tajer, A. , 'Scalable intervention target estimation in linear models', _Advances in Neural Information Processing Systems_**34**, 1494-1505.
* Voorman et al.  Voorman, A., Shojaie, A. and Witten, D. , 'Graph estimation with joint additive models', _Biometrika_**101**(1), 85-101.
* Vucic and Fairbrother  Vucic, D. and Fairbrother, W. J. , 'The inhibitor of apoptosis proteins as therapeutic targets in cancer', _Clinical cancer research_**13**(20), 5995-6000.
* Wang et al.  Wang, Y., Squires, C., Belyaeva, A. and Uhler, C. , 'Direct estimation of differences in causal graphs', _Advances in neural information processing systems_**31**.
* Yang et al.  Yang, K., Katcoff, A. and Uhler, C. , Characterizing and learning equivalence classes of causal dags under interventions, _in_ 'International Conference on Machine Learning', PMLR, pp. 5541-5550.
* Yoon et al.  Yoon, H., Jang, H., Kim, E.-Y., Moon, S., Lee, S., Cho, M., Cho, H. J., Ko, J. J., Chang, E. M., Lee, K.-A. et al. , 'Knockdown of prkar2b results in the failure of oocyte maturation', _Cellular Physiology and Biochemistry_**45**(5), 2009-2020.
* Yuan et al.  Yuan, H., Xi, R., Chen, C. and Deng, M. , 'Differential network analysis via lasso penalized D-trace loss', _Biometrika_.

*  Zhang, K., Peters, J., Janzing, D. and Scholkopf, B. , 'Kernel-based conditional independence test and application in causal discovery', _arXiv preprint arXiv:1202.3775_.
*  Zhao, B., Wang, Y. S. and Kolar, M. , 'Fudge: Functional differential graph estimation with fully and discretely observed curves', _arXiv preprint arXiv:2003.05402_.
*  Zhao, S. D., Cai, T. T. and Li, H. , 'Direct estimation of differential networks', _Biometrika_**101**(2), 253-268.
*  Zheng, X., Aragam, B., Ravikumar, P. K. and Xing, E. P. , 'Dags with no tears: Continuous optimization for structure learning', _NeurIPS_.

## Appendix A Practical Implementation

In this section, we present a more practical version of Alg. 1 that considers estimation errors, see Alg. 3. First, we provide more details of the score's Jacobian estimation.

### Practical Version of SCORE

Let \(=\{x^{1},,x^{m}\}\) be a dataset of \(m\) possibly non-independent but identically distributed samples. From Li and Turner , we next present the estimator for the point-wise first-order partial derivative, corresponding to eq.(4):

\[}=-(+)^{-1},\] (6)

where \(=(h(x^{1}),,h(x^{m}))^{d^{} m}\), \(}=_{k=1}^{m}(x^{k})\), \(=^{}\), \(K_{ij}=(x^{i},x^{j})=(x^{i})^{}(x^{j}),, {K}=m^{T}}\), \(,_{ij}=_{k=1}^{m}_{x^{k}_{j}}(x^{i},x^{j})\), and \( 0\) is a regularization parameter. Here \(}\) is used to approximate \(( p(x^{1}),, p(x^{m}))^{}^{m d}\).

From , we now present the estimator for the diagonal elements of the score's Jacobian at the sample points, i.e. \(((^{2} p(x^{1})),(( ^{2} p(x^{m})))^{}^{m d}\), the estimator of \(\) is:

\[}=-(}}^{})+( {K}+)^{-1}^{2}_{},\] (7)

where \(=(h(x^{1}),,h(x^{m}))^{d^{} m}\), \(_{}}=_{k=1}^{m}^{ 2}_{}(x^{k})\), \((^{2}_{}(x))_{ij}=h_{i}(x)}{  x^{j}_{i}}\), \(=^{}\), \(_{ij}=(x^{i},x^{j})=(x^{i})^{}(x^{j}), ^{2}_{},=m^{T}_{}}\), \(^{2}_{},_{ij}=_{k=1}^{m}(x^{i},x^{k})}{( x^{j}_{i})^{2}}\), and \( 0\) is a regularization parameter.

In the sequel, we use \(()\) to denote the procedure to compute the sample variance for the estimator of the diagonal of the score's Jacobian via eq.(7).

### Practical Version of Algorithm 1

Let \(}^{h}\) be a \(d\)-dimensional vector, where \(d\) is the number of nodes. We introduce a \(d\)-dimensional vector \(^{h}\), which represents the index of each element in \(}^{h}\) after a non-decreasing sorting. For example, if \(}^{h}=(5.2,3.1,4.5,1.6)\), then \(^{h}=(3,1,2,0)\). Furthermore, we define a \(d\)-dimensional vector \(\) as the element-wise summation of \(^{h}\) over all \(h[H]\). In other words, \(\) is calculated as \(=_{h[H]}^{h}\).

Recall that in Section 3.1 we remarked that we leverage the \(\) approach from Rolland et al.  for estimating \((^{2} p(x))\) at each data point. Recall also that our identifiability result (Theorem 1) depends on determining whether a leaf node has variance \(_{q}((x)}{ x_{j}})=0\). In practice, it is unrealistic to simply test for the equality \(_{L}=0\) since \(_{L}\) carries out errors due to finite samples. Instead, we define the following statistic for each estimated leaf node \(L\) (Line 10 in Algorithm 3):

\[_{L}=_{L}}{_{h}_{L}^{h}+ }.\] (8)

[MISSING_PAGE_FAIL:17]

## Appendix B Detailed Proofs

### Proof of Theorem 1

To prove Theorem 1 we will make use of the following lemmas.

**Lemma 1**.: _Let \(\{a_{h}\}_{h=1}^{H}\) and \(\{b_{h}\}_{h=1}^{H}\) be two sequences of real numbers, where \(a_{h}>0, h\). Then we have:_

\[(_{h=1}^{H}a_{h}b_{h}^{2})(_{h=1}^{H}a_{h})- (_{h=1}^{H}a_{h}b_{h})^{2} 0,\]

_with equality if and only if \(b_{i}=b_{j}, j i[H]\)._

Proof.: We can invoke the Cauchy-Schwarz inequality with vectors \(=(},,})\), and \(=(b_{1}},,b_{H}})\), then we have:

\[(^{})^{2}\|\|_{2}^{2}\|\|_{2}^{2},\]

which proves the inequality. The equality holds if and only if \(\) and \(\) are linearly dependent, i.e., when \(b_{i}=b_{j}\) for all \(i j[H]\). 

**Lemma 2**.: _For any \(j\), if \(^{h}(X_{j}_{j}^{h})=^{h^{}}(X_{j} _{j}^{h^{}})\), then \(c_{j}^{h}=c_{j}^{h^{}}\)._

Proof.: Denote the associated density of \(^{h}(X_{j}_{j}^{h})\) when \(X_{j}=x_{j}\) as \(p_{N_{j}}^{h}(x_{j}-f_{j}^{h}(_{j}^{h}))\) and let \(u=x_{j}-f_{j}^{h}(_{j}^{h})\)

\[}{(x_{j})^{2}} p_{N_{j}}^{h}(x_{j}-f _{j}^{h}(_{j}^{h}))\] \[= }^{h}(u)}{ u}u}{(x_{j})^{2}}+ p_{N_{j}}^{h}(u)}{ u^ {2}}(})^{2}\] \[= 0+c_{j}^{h}=c_{j}^{h}\]

where we use the fact that \(}=1,u}{(x_{j})^{2}}=0\). Then it immediate follows that if \(^{h}(X_{j}_{j}^{h})=^{h^{}}(X_{j} _{j}^{h^{}})\), then \(c_{j}^{h}=c_{j}^{h^{}}\) 

**Lemma 3**.: _For any \(j\), under Assumption B, \(} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}(_ {j}^{h}))=} p_{N_{j}}^{h^{}}(x_{j}-f _{j}^{h^{}}(_{j}^{h^{}}))\) if and only if \(^{h}(X_{j}_{j}^{h})=^{h^{}}(X_{j} _{j}^{h^{}})\), where \(p^{h}\) and \(p^{h^{}}\) are the probability density functions corresponding to the probability measures \(^{h}\) and \(^{h^{}}\) when \(X_{j}=x_{j}\)._

Figure 5: Statistic in eq.(8) for each node sorted in non-increasing order. In this case, node index 5 corresponds to the _elbow point_, allowing us to estimate nodes 5 and 8 as shifted nodes.

Proof.: Denote the associated density of \(^{h}(X_{j}^{h}_{j})\) when \(X_{j}=x_{j}\) as \(p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_{j}))\), we proceed as follows:

\[} p^{h}_{N_{j}}(x_{j}-f^{h}_{j}( ^{h}_{j}))=} p^{h^{}}_{N_{j} }(x_{j}-f^{h^{}}_{j}(^{h^{}}_{j}))\] \[  p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_{j}))= p^{h^ {}}_{N_{j}}(x_{j}-f^{h^{}}_{j}(^{h^{}}_{j}))+const\] \[ p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_{j}))=p^{h^{ }}_{N_{j}}(x_{j}-f^{h^{}}_{j}(^{h^{}}_{j})) e ^{const}\] \[ _{}p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_ {j}))x_{j}=e^{const}_{}p^{h^{}}_{N_{j}}(x_{ j}-f^{h^{}}_{j}(^{h^{}}_{j}))x_{j}\] \[ _{}p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_ {j}))(x_{j}-f^{h}_{j}(^{h}_{j}))=e^{const}_{ }p^{h^{}}_{N_{j}}(x_{j}-f^{h^{}}_{j}(^{h^{ }}_{j}))(x_{j}-f^{h^{}}_{j}(^{h^{}}_{j}))\] \[ 1=1 e^{const}\] \[ const=0\]

Here, \(const\) is a constant that is independent of \(x_{j}\). Integrating both sides with respect to \(x_{j}\) and using the fact that \( p^{h}(x)x=1\), we conclude that \(const=0\). Hence, we can establish the following:

\[} p^{h}_{N_{j}}(x_{j}-f^{h}_{j} (^{h}_{j}))=} p^{h^{}}_{N_{ j}}(x_{j}-f^{h^{}}_{j}(^{h^{}}_{j}))\] \[ p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_{j}))=p^{h^{ }}_{N_{j}}(x_{j}-f^{h^{}}_{j}(^{h^{}}_{j}))\] \[ ^{h}(X_{j}^{h}_{j})=^{h^{ }}(X_{j}^{h^{}}_{j})\]

Proof of Theorem 1.: Let us first expand the log density of the mixture distribution:

\[ q(x)=(_{h=1}^{H}w_{h}p^{h}(x))\]

Then, recall that \(s(x)= q(x)\), the \(j\)-entry reads:

\[s_{j}(x) =_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)} [} p^{h}(x_{j}^{h}_{j})+ _{i^{h}_{j}}} p^{h}(x_{i} ^{h}_{i})]\] \[=_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)} [} p^{h}_{N_{j}}(x_{j}-f^{h}_{j}( ^{h}_{j}))+_{i^{h}_{j}}} p^{h}_{N_{i}}(x_{i}-f^{h}_{i}(^{h}_{i}) )]\] (9)

Condition (i).First we will prove condition (i). That is, given a leaf node \(X_{j}\) in all DAGs \(G^{h}\), \(X_{j}\) is not a shifted node (i.e. an invariant node) if and only if \(((x)}{ x_{j}})=0\).

If \(x_{j}\) is a leaf node in all the DAGs \(G^{h}\), then \(^{h}_{j}=, h[H]\), and we can write eq.(9) as:

\[s_{j}(x)=_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)}} p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_{ j}))\]

We use \(((x)}{ x_{j}})\) and \(((x)}{ x_{j}})\) to denote the denominator and numerator of \((x)}{ x_{j}}\), respectively. Then we have:

\[((x)}{x_{j}})=(_{k=1}^{H}w_{k}p^{k}(x) )^{2}\]\[((x)}{x_{j}}) =[_{h=1}^{H}w_{h}p^{h}(x)}{ x_{j} ^{2}} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}(_{j}^{h}))+w_{h}p^{h}(x) (} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}( _{j}^{h})))^{2}]\] \[[_{k=1}^{H}w_{k}p^{k}(x)]-[_{h=1}^{ H}w_{h}p^{h}(x)} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}( _{j}^{h}))]^{2}\]

Now, dividing \(((x)}{ x_{j}})\) over \(((x)}{ x_{j}})\), we obtain:

\[(x)}{ x_{j}}=( (x)}{x_{j}})}{((x)}{x_{j} })} =_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x) }}{ x_{j}^{2}} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}( _{j}^{h}))\] \[+_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)} (} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}( _{j}^{h})))^{2}\] \[-[_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k} (x)}} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}(_{j}^{h}))]^{2}\] (10)

Note that since \(x_{j}_{j}^{h}\), the function \(f_{j}^{h}(_{j}^{h})\) is independent of \(x_{j}\).

Let \(a_{h}=w_{h}p^{h}(x)\), and let \(b_{h}=} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}( _{j}^{h}))\). Then, the last two summands of the RHS of eq.(10) can be written as:

\[^{H}a_{h})^{2}}[(_{h=1}^{H}a_{h}b _{h}^{2})(_{h=1}^{H}a_{h})-(_{h=1}^{H}a_{h}b_{h} )^{2}] 0,\] (11)

where the last inequality holds from Lemma 1. Then, by Lemma 3, we have that \(b_{h}=b_{h^{}}^{h}(X_{j}_{j}^{h})=^{h^{}}(X_{j}_{j}^{h^{}})\) for all \(h,h^{}[H]\). Then if \(b_{h}=b_{h^{}}\) holds, by Lemma 2, we have \(c_{j}^{h}=c_{j}^{h^{}} c_{j}\) and then the first term for eq.(10) boils down to a constant \(c_{j}\). Finally, from Lemma 1, we have that equality in eq.(11) holds if and only if \(b_{h}=b_{h^{}}\) for all \(h,h^{}[H]\). Thus, we conclude that:

If \(X_{j}\) is a leaf node for all \(G^{h}\), then \(X_{j}\) is not a shifted node \((x)}{ x_{j}}=c_{j}\),

where \((x)}{ x_{j}}=c_{j}\) is equivalent to \(_{q}((x)}{ x_{j}})=0\).

Condition (ii).We now prove that if \(_{q}((x)}{ x_{j}})>0\), then only one of the following two cases holds: Case 1) \(X_{j}\) is a leaf node for all \(G^{h}\) and a shifted node. Case 2) \(X_{j}\) is not a leaf node in at least one DAG \(G^{h}\).

Case 1 follows immediately from the proof of condition (i) above.

For Case 2, we study whether there exists a non-leaf node \(X_{j}\) with \(_{q}((x)}{ x_{j}})=0\). Taking the partial derivative of \(s_{j}(x)\) in eq.(9) w.r.t. \(x_{j}\), we have:

\[(x)}{ x_{j}} =_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)} (}{ x_{j}^{2}} p_{N_{j}}^{h}(x_{j}-f_{j}^{h} (_{j}^{h}))+_{i_{j}^{h}}}{  x_{j}^{2}} p_{N_{i}}^{h}(x_{i}-f_{i}^{h}(_{i}^{h})))\] \[+_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)} (} p_{N_{j}}^{h}(x_{j}-f_{j}^{h}( _{j}^{h}))+_{i_{j}^{h}}}  p_{N_{i}}^{h}(x_{i}-f_{i}^{h}(_{i}^{h})))^{2}\]\[-[_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)} (} p^{h}_{N_{j}}(x_{j}-f^{h}_{j}(^{h}_{j}))+_{i^{h}_{j}}} p^{h}_{N_{i}}(x _{i}-f^{h}_{i}(^{h}_{i})))]^{2}\]

By Assumptions B, we have \(}{ x_{j}^{2}} p^{h}_{N_{j}}(x_{j}-f^{h}_{j}( ^{h}_{j}))=c^{h}_{j}\). For simplicity, let \(a_{h}=} p^{h}_{N_{j}}(x_{j}-f^{h}_{j}( ^{h}_{j}))+_{i^{h}_{j}}} p^{h}_{N_{i}}(x_{i}-f^{h}_{i}(^{h}_{i}))\). Then, we have:

\[(x)}{ x_{j}}=_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)}c^{h}_{j}+^{H} p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)}_{i^{h}_{j} }}{ x_{j}^{2}} p^{h}_{N_{i}}(x_{i}-f^{h}_{i}( ^{h}_{i}))}_{}\] \[+^{H}p^{h}(x)}{_{k=1}^{H}w_{ k}p^{k}(x)}a^{2}_{h}-(_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{ k}p^{k}(x)}a_{h})^{2}}_{}.\] (12)

We prove that \(}{ x_{j}^{2}} p^{h}_{N_{i}}(x_{i}-f^{h}_{i}( ^{h}_{i}))\), is not constant under any circumstance, by contradiction. Let \(G^{h}\) be an environment's DAG where \(X_{j}\) is not a leaf, and let \(X_{u}^{h}_{j}\) such that \(X_{u}_{i^{h}_{j}}^{h}_{i}\). Note that \(X_{}\) always exist since \(X_{j}\) is not a leaf, and it suffices to pick a child \(X_{u}\) appearing at the latest position in the topological order of \(G^{h}\). Now suppose that \(}{ x_{j}^{2}} p^{h}_{N_{u}}(x_{u}-f^{h}_{u}( ^{h}_{u}))=a\), where \(a\) is a constant. Then we have:

\[} p^{h}_{N_{u}}(x_{u}-f^{h}_{u} (^{h}_{u})) =ax_{j}+g(x_{-j}),\] \[}f^{h}_{u}(^{h}_{u}) } p^{h}_{N_{u}}(n_{u}) =ax_{j}+g(x_{-j}).\]

By deriving both sides w.r.t. \(x_{u}\), we obtain:

\[}f^{h}_{u}(^{h}_{u}) }{ n_{u}^{2}} p^{h}_{N_{u}}(n_{u}) =)}{ x_{u}}\] \[}f^{h}_{u}(^{h}_{u})  c^{h}_{j} =)}{ x_{u}}.\]

Since the RHS does not depend on \(x_{j}\), then \(_{u}}{ x_{j}}\) cannot depend on \(x_{j}\) neither, implying that \(f^{h}_{u}\) is linear in \(x_{j}\), thus contradicting the non-linearity assumption (Assumption A). Consequently, it becomes evident that term 1 cannot be a constant, regardless of whether the node \(X_{j}\) has undergone a shift or not.

Now let us take a look to term 2 in eq.(12). We have:

\[_{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)}a^{2}_{h}-( _{h=1}^{H}p^{h}(x)}{_{k=1}^{H}w_{k}p^{k}(x)}a_{h})^{2}  0,\]

where the inequality follows by Jensen's inequality. Thus we conclude that if \(X_{j}\) is a non-leaf node, we have \(_{q}((x)}{ x_{j}})>0\). 

### Proof of Theorem 2

To proof the theorem we will need the following assumptions:

**Assumption C**.: _Let \(^{h}_{j}\) denote the Markov Blanket of node \(X_{j}\) under environment \(h\), then assume * _There are non-negative real number_ \(\) _and_ \(C\) _such that for any subset_ \(X_{}(X_{j}^{h})\) _of size_ \( 1/+2\)_, any_ \(x,x^{}^{|X_{}|}\) _and any_ \(t\)_,_ \[|}(X_{j}^{h} t X_{}=x)- }(X_{j}^{h} t X_{}=x^{}) C (1+\|x\|^{}+\|x^{}\|^{})\|x-x^{}\|\] _where_ \(|X_{}|\) _is the size of the set_ \(X_{}\)_._
* _There are positive numbers_ \(C_{1}\) _and_ \(C_{2}\) _such that for any_ \(X_{}\) _of size_ \( 1/+2\) _and any_ \(t>0\)_,_ \(}(\|X_{}\| t) C_{1}e^{-C_{2}t}\)__
* _For any subset_ \(X_{}(X_{j}^{h})\) _such that_ \(X_{}_{j}^{h}\)_, there exists_ \(X_{i}\) _with_ \(X_{i}_{j}^{h_{i}} X_{}\)_, such that for any_ \(X_{j}\) _with_ \(X_{j}_{j}^{h}\)_,_ \[Q(X_{}\{X_{i}\})-Q(X_{}\{X_{j}\})/4 Q(X_{ })=(}(X_{j}^{h} t X_{ }))d(t)\]

_where \(\) is the largest number such that for any subset \(X_{}\) from \((X_{j}^{h})\), there is some \(X_{i} X_{}\) such that \(Q(X_{}\{X_{i}\}) Q(X_{})+\)._

Proof.: Under Assumption C, from Theorem 3.1 in , we have

\[}(}_{j}^{h}=_{j}^{h})  1-C_{3}e^{-C_{4}m}\]

where \(C_{3}\) and \(C_{4}\) are constants that depend only on the data generation process, and \(m\) is the number of samples. Since the estimated topological order \(\) is assumed to be valid for all environments, we can conclude that node \(X_{j}\) is a leaf node in the input data \(\{(X_{j}^{h}),X_{j}^{h}\}\) for all \(h\). As a result, we have \(_{j}^{h}=_{j}^{h}\) based on the Markov blanket definition. Therefore, the output of Algorithm 4 is equal to the true parent set \(_{j}^{h}\) with high probability. 

### Proof of Theorem 3 in Appendix D

To prove Theorem 3 we will make use of the following lemmas.

**Lemma 4**.: _Suppose \(\) is an \(n k_{x}\) dimension matrix, \(\) is an \(n k_{y}\) dimension matrix. Let the columns of the concatenated matrix \(=(,)\) be linearly independent. Consider \(_{x}\), a \(k_{x}\)-dimensional vector, and \(_{y}\) and \(_{y}\), both \(k_{y}\)-dimensional vectors. If \(_{x}+_{y}=_{y}\), then it follows that \(_{y}=_{y}\) and \(_{x}=\)._

Proof.: \[_{x}+_{y}-_{y}=(,)_{x}\\ _{y}-(,)_{k_{x}}\\ _{y}=_{x}\\ _{y}-_{y}=0\]

Since \(\) has full column rank, then the null space of \(\) is \(\), which implies \(_{x}=\), \(_{y}=_{y}\). 

**Lemma 5**.: _For any \(h[H]\), if_

\[_{k(X_{j})}_{jk}_{jk}^{h}=_{k _{j}^{h}}_{jk}_{jk}^{h},\]

_then \(_{jk}^{h}=_{jk}^{h}\) if \(k_{j}^{h}\), and \(_{jk}^{h}=0\) if \(k_{j}^{h}\)._

Proof.: Rearrange the set \((X_{j})\) so that \((X_{j})=\{X_{k_{1}},X_{k_{2}},,X_{k_{m}},X_{k_{m+1}},,X_ {k_{p}}\}\), where \(\{X_{k_{1}},,X_{k_{m}}\}=(X_{j})_{j}\), and \(\{X_{k_{m+1}},,X_{k_{p}}\}=_{j}\). Then let \(=(_{k_{1}},,_{k_{m}})\), \(=(_{k_{m+1}},,_{k_{p}})\), and \(=(,)\). By the linear independence property of the basis functions of \((X_{j})\), we have that the columns of \(\) are linearly independent. Also, let

\[_{x}=_{jk_{1}}^{h}\\ \\ _{jk_{m}}^{h},_{y}= _{jk_{m+1}}^{h}\\ \\ _{jk_{p}}^{h},_{y}=_{jk_{m+ 1}}^{h}\\ \\ _{jk_{p}}^{h}\]Then we must have:

\[_{k(X_{j})}_{jk}_{jk}^{h}= _{k_{j}^{h}}_{jk}_{jk}^{h} _{x}+_{y}=_{y}.\]

Then by Lemma 4, we have \(_{jk}^{h}=_{jk}^{h}\) if \(k_{j}^{h}\), \(_{jk}^{h}=0\) if \(k_{j}^{h}\). 

Proof of Theorem 3.: We know that \((X_{j})\) contains the ancestors of \(X_{j}\). Then, in environment \(h\), we have:

\[_{p^{h}}[X_{j}(X_{j})] =_{p^{h}}[f_{j}^{h}(_{j}^{h}) (X_{j})]+_{p^{h}}[N_{j}(X_{j })]\] \[=f_{j}^{h}(_{j}^{h}),\]

where the last equality follows since the first conditional expectation is equal to \(f_{j}^{h}(_{j})\), due to \(_{j}(X_{j})\). Moreover, in the second conditional expectation term, we have that \(N_{j}\) is marginally independent of \((X_{j})\) by the d-separation criterion. Thus the conditional expectation of \(N_{j}\) equals to the marginal expectation of \(N_{j}\), which is 0. Finally,

\[_{k(X_{j})}_{jk}_{jk}^{h}= _{p^{h}}[X_{j}(X_{j})]=f_{j}^{h}(_{j}^{ h})=_{k_{j}^{h}}_{jk}_{jk}^{h}\]

By Lemma 5, we have \(_{jk}^{h}=_{jk}^{h}\) if \(k_{j}^{h}\), \(_{jk}^{h}=0\) if \(k_{j}^{h}\). 

## Appendix C Additional Experiments

This section provides a thorough evaluation of the pipeline of our method. We begin by assessing the performance of our method in detecting the shifted nodes. Subsequently, we extend the evaluation to include the recovery of the structurally shifted edges.

### Experiments on detecting shifted nodes

**Graph models.** We ran experiments by generating adjacency matrices using the Erdos-Renyi (ER) and Scale free (SF) graph models. For a given number of variables \(d\), ER\(k\) and SF\(k\) indicate an average number of edges equal to \(kd\).

**Data generation process.** We first sampled a Directed Acyclic Graph (DAG) according to either the Erdos-Renyi (ER) model or the Scale-Free (SF) model for environment \(_{1}\).

For environment \(_{2}\), we used the same DAG structure as in environment \(_{1}\), ensuring a direct comparison between the two environments. To introduce artificial shifted nodes, we randomly selected \(0.2 d\) nodes from the non-root nodes, where \(d\) represents the total number of nodes in the DAG. These selected nodes were considered as the "shifted nodes," denoted as \(S\), with \(|S|=0.2d\).

The functional relationship between a node \(X_{j}\) and its parents in environment \(_{1}\) was defined as follows:

\[X_{j}=_{i_{j}}(X_{i}^{2})+N_{j},\]

while for environment \(_{2}\), we defined the functional relationships between each node and its parents by:

\[X_{j}=_{i_{j}}(X_{i}^{2} )+N_{j},& X_{j} S,\\ _{i_{j}}4(2X_{i}^{2}-3X_{i})+N_{j},&  X_{j} S.\]

**Experiment detail.** In each simulation, we generated 500 data points, with the variances of the noise set to 1. We conducted 30 simulations for each combination of graph type, noise type, and number of nodes. The running time was recorded by executing the experiments on an Intel Xeon Gold 6248R Processor with 8 cores. For our method, we used the hyperparameters eta_G = \(0.005\), eta_H = \(0.005\), and threshold \(t=2\) (see Algorithm 3).

[MISSING_PAGE_EMPTY:24]

Figure 8: Shifted nodes detection in ER6 and SF6 graphs. For each point, we conducted 30 simulations as described in Section C.1. The points indicate the average values obtained from these simulations, while the error bars depict the standard errors. For each simulation, 500 samples were generated. Our method iSCAN (green) consistently outperformed DCI (red) in terms of F1 score, precision, and recall.

Figure 7: Shifted nodes detection in ER4 and SF4 graphs. For each point, we conducted 30 simulations as described in Section C.1. The points indicate the average values obtained from these simulations, while the error bars depict the standard errors. For each simulation, 500 samples were generated. Our method iSCAN (green) consistently outperformed DCI (red) in terms of F1 score, precision, and recall.

#### c.1.1 Experiments in detecting shifted nodes from Gaussian process

**Data generation process.** We first sampled a DAG according to the ER or SF model. In our experiment, we considered two environments, \(_{1}\) and \(_{2}\), with the same DAG structure. Each node in the graph had a functional relationship with its parents defined as \(X_{j}=f_{j}^{h}(_{j}^{h})+N_{j}\), where \(N_{j}\) is an independent standard Gaussian variable. Recall that the superscript \(h\) denotes the function for environment \(_{h}\).

To introduce shifted nodes, we randomly selected \(0.2 d\) nodes from the non-root nodes, denoted as \(S\), to be the shifted nodes. In other words, \(|S|=0.2d\). For the non-shifted nodes \(X_{j}\) (i.e \(j S\)), we set \(f_{j}^{1}=f_{j}^{2}\). However, for each shifted node \(X_{j}\) in \(S\), we changed its functional relationship with its parents to \(X_{j}=2 f_{j}^{2}(_{j}^{2})+N_{j}\).

To test our method in a more general setting involving nonlinear functions, we followed the approach in . Specifically, for _non-shifted nodes_, we generated the link functions \(f_{j}^{1}\) by sampling Gaussian processes with a half unit bandwidth RBF kernel, and we set \(f_{j}^{2}=f_{j}^{1}\). _For shifted nodes_, \(X_{j} S\), we generated the link functions \(f_{j}^{1}\) and \(f_{j}^{2}\) by sampling Gaussian processes with a half unit bandwidth RBF kernel independently. This allowed us to simulate different functional relationships for the shifted nodes across the two environments.

**Experiment detail.** In each simulation, we generated 1000 data points, with the variances of the noise set to 1. We conducted 30 simulations for each combination of graph type, noise type, and number of nodes. The running time was recorded by executing the experiments on an Intel Xeon Gold 6248R Processor with 8 cores. For our method, we used the hyperparameters eta_G \(=0.005\), eta_H \(=0.005\), and elbow \(=\) True (see Remark 6).

**Evaluation.** We conducted a comparative performance analysis between our proposed Algorithm 1 (iSCAN, green) and the DCI (red) method. The results for ER2 and SF2 graphs under Gaussian, Gumbel, and Laplace noise distributions are shown in Figure 9. In certain cases, our method may underperform DCI in terms of precision, resulting in a lower F1 score. However, it is important to note that our method consistently outperforms DCI in terms of recall score.

Furthermore, Figure 10 and Figure 11 present the results for ER4/SF4, and ER6/SF6 graphs. In terms of precision, our method exhibits competitive performance and, in many cases, outperforms DCI. Notably, iSCAN consistently surpasses DCI in terms of recall score and F1 score.

These findings emphasize the strengths of our proposed method in accurately detecting shifted nodes and edges, particularly in terms of recall and overall performance. In denser graphs, our method demonstrates a superior ability to recover shifted nodes compared to DCI. This suggests that our method is well-suited for scenarios where the graph structure is more complex and contains a larger number of nodes and edges. The improved performance of our method in such settings further highlights its potential in practical applications and its ability to handle more challenging tasks.

Top-k precision.We have observed that in some cases, the precision of our method underperformed DCI. We attribute this to the elbow method rather than stats\({}_{L}\). To further investigate this, we conducted an analysis using only stats\({}_{L}\) and measured the precision based on different criteria. Specifically, we identified nodes as shifted if their stats\({}_{L}\) ranked first, first two, or within the top k, denoted as top-1 precision, top-2 precision, and top-k precision, respectively, where \(k=|S|\).

Figure 12 presents the results of precision for top-1, top-2, and top-k criteria under various graph models and noise combinations. In most cases, the precision exceeds \(80\%\) and even approaches \(100\%\). These results indicate that when using stats\({}_{L}\) alone, our method still provides accurate information about shifted nodes. The findings suggest that the lower precision observed in Figure 9 can be attributed to the elbow strategy rather than the effectiveness of stats\({}_{L}\). Overall, this analysis strengthens the reliability and usefulness of stats\({}_{L}\) in accurately identifying shifted nodes in our method.

Figure 10: Experiments on detection of shifted nodes in ER4/SF4 graphs using Gaussian processes. Details described in Appendix C.1.1. The error bars represent the standard errors.

Figure 9: Experiments on detection of shifted nodes in ER2/SF2 graphs using Gaussian processes. Details described in Appendix C.1.1. The error bars represent the standard errors.

Figure 11: Experiments on detection of shifted nodes in ER6/SF6 graphs using Gaussian processes. Details described in Appendix C.1.1. The error bars represent the standard errors.

Figure 12: Top 1, 2 and K performance of iSCAN where functionals are sampled from Gaussian processes. Details described in Appendix C.1.1. The error bars represent the standard errors.

### Experiments on estimating structural shifts

**Data generation.** We first sampled a DAG, \(G^{1}\), of \(d\) nodes according to either the ER or SF model for env. \(_{1}\). For env. \(_{2}\), we initialized its DAG structure from env. \(_{1}\) and produced structural changes by randomly selecting \(0.2 d\) nodes from the non-root nodes. This set of selected nodes \(S\), with cardinality \(|S|=0.2d\), correspond to the set of "shifted nodes". In env. \(_{2}\), for each shifted node \(X_{j} S\), we uniformly at random deleted at most three of its incoming edges, and use \(D_{j}\) to denote the parents whose edges to \(X_{j}\) were deleted; thus, the DAG \(G^{2}\) is a subgraph of \(G^{1}\). Then, in \(_{1}\), each \(X_{j}\) was defined as follows:

\[X_{j}=_{i_{j}^{1} D_{j}}(X_{i}^{2})+_{i D _{j}}4(2X_{i}^{2}-3X_{i})+N_{j}\]

In \(_{2}\), each \(X_{j}\) was defined as follows:

\[X_{j}=_{i_{j}^{2}}(X_{i}^{2})+N_{j}\]

**Experiment details.** For each simulation, we generated \(500\) data points per environment, i.e., \(m_{1}=500,m_{2}=500\) and \(m=1000\). The noise variances were set to 1. We conducted 30 simulations for each combination of graph type (ER or SF), noise type (Gaussian, Gumbel, and Laplace), and number of nodes (\(d\{10,20,30,50\}\)). The running time was recorded by executing the experiments on an Intel Xeon Gold 6248R Processor with 8 cores. For our method, we used \(=0.05\) for eq.(6) and eq.(7), and a threshold \(t=2\) (see Alg. 3).

In the case of the method introduced by Budhathoki et al. , we employed Kernel Conditional Independence (KCI) tests  for conducting conditional independence tests. As for CITE, KCD, UT-IGSP, and SCORE, we used their respective default parameter settings provided within their packages. Additionally, for SCORE, we employed it to estimate the DAGs independently for different environments and then compared the recovered DAGs to identify the shifted nodes. Given that Budhathoki's and KCD methods require information about the parents \(_{j}\) for each node \(X_{j}\), we employed the SCORE method to find the parent sets \(_{j}\).

**Evaluation.** In this experiment, we assessed the performance of our method in two aspects: detecting shifted nodes and recovering the strucutral changes (**difference DAG**). For the evaluation of shifted node detection, we measured F1 score, recall, and precision. In the evaluation of difference DAG recovery, we compared the estimated difference DAG with the ground truth difference DAG using F1 score. Additionally, we considered the running time of the methods as another evaluation criterion.

Figures 13, 14, and 15 illustrate our method's performance in detecting shifted nodes across varying numbers of nodes and sparsity levels of the graphs. Our method consistently outperformed baselines in terms of F1 score, precision, and recall.

Figures 16 showcase the performance of our method in recovering difference DAG across different noise distribution, different numbers of nodes and sparsity levels in the graphs. Our method achieves higher F1 score in recovering the difference DAG compared with DCI.

Figure 14: Shifted nodes detection performance in ER4/SF4. See App. C.2 for experimental details. iSCAN (light blue) consistently outperformed baselines in terms of F1 score, precision, and recall.

Figure 13: Shifted nodes detection performance in ER2/SF2. See App. C.2 for experimental details. iSCAN (light blue) consistently outperformed baselines in terms of F1 score, precision, and recall.

Figure 16: Difference DAG recovery performance in all different graphs. iSCAN-FOCI (green) consistently outperformed DCI (red) in terms of F1 score.

Figure 15: Shifted nodes detection performance in ER6/SF6. See App. C.2 for experimental details. iSCAN consistently outperformed baselines in terms of F1 score, precision, and recall.

### Performance of Alg. 3 using the elbow method

In this section, we aim to understand the performance of our method when using the elbow approach discussed in Remark 6, random functions for shifted nodes, and different noise variances per variable within an environment.

**Data generation process.** We first sampled a Directed Acyclic Graph (DAG) according to either the Erdos-Renyi (ER) model or the Scale-Free (SF) model for environment \(_{1}\).

For environment \(_{2}\), we used the same DAG structure as in environment \(_{1}\), ensuring a direct comparison between the two environments. To introduce artificial shifted edges, we randomly selected \(0.2 d\) nodes from the non-root nodes, where \(d\) represents the total number of nodes in the DAG. These selected nodes correspond to shifted nodes, denoted as \(S\), with \(|S|=0.2d\). For each shifted node \(X_{j} S\), we uniformly and randomly deleted \(3\) edges originating from its parents for environment \(_{2}\). The parent nodes whose edges to \(X_{j}\) were deleted are denoted as \(D_{j}\).

The functional relationship between shifted node \(X_{j}\) and its parents \(D_{j}\) in environment \(_{1}\) was defined as follows:

\[X_{j}=_{i_{j},i D_{j}}(X_{i}^{2})+_{i D_{j }}c_{ij} f_{ij}(-2X_{i}^{3}+3X_{i}^{2}+4X_{i})+N_{j},\]

where \(c_{ij}([-5,-2])\), and \(f_{ij}\) is a function from \(\{(),()\}\) chosen uniformly at random. For environment \(_{2}\), where the adjacency matrix has undergone deletions, we defined the functional relationship between each node and its parents as follows:

\[X_{j}=_{i_{j}}(X_{i}^{2})+N_{j}\]

**Experiment detail.** In each simulation, we generated \(\{500,1000\}\) data points, with the variances of the noises set uniformly at random in \([0.25,0.5]\). We tested three types of noise distributions, namely, the Normal, Laplace, and Gumbel distributions. We conducted a 100 simulations for each combination of graph type, noise type, and number of nodes. The running time was recorded by executing the experiments on an Intel Xeon Gold 6248R Processor with 8 cores. For our method, we used the hyperparameter \(=0.001\). Different from the hard threshold of \(t=2\) used in previous experiments, we now used the elbow approach to determine the set of shifted nodes. To automatically select the elbow we made use of the Python package Kneed7, with hyperparameters curve='convex', direction='decreasing', online=online, interp_method='interpld'.

**Evaluation.** In this experiment, we assessed the performance of our method in two aspects: detecting shifted nodes and recovering the difference DAG. For the evaluation of shifted node detection, we measured F1 score, recall, and precision. In the evaluation of difference DAG recovery, we compared the estimated difference DAG with the ground truth difference DAG using F1 score.

In Figures 17 and 18 we present the performances when using the elbow approach discussed in Remark 6. In Figure 17, we note that iSCAN performs similarly for number of samples \(500\) and \(1000\). We also show the top-1, top-2, and top-k precision of iSCAN when choosing the first, first 2, and first k variables of stats (see Algorithm 3) after sorting in decreasing order, respectively. We remark that the superbly performance of iSCAN in top-1 or top-2 precision suggests that in situations that is difficult to choose a threshold for Algorithm 3, the practioner can consider that the first or first two variables of stats are more likely to be shifted nodes. Finally, in Figure 18 we show that iSCAN outperforms DCI in recovering the underlying structural difference.

## Appendix D

Figure 17: Shifted nodes detection performance in ERk and SFk for \(k\{2,4,6\}\). For each point in each subplot, we conducted 100 simulations as described in Section C.3. The points indicate the average values obtained from these simulations. The error bars depict the standard errors. Our method iSCAN (green) consistently outperformed DCI (red) in terms of F1 score, precision, and recall.

Figure 18: Difference DAG recovery performance in all different graphs. For each point in each subplot, we conducted 100 simulations as described in Section C.3. The points indicate the average values obtained from these simulations. The error bars depict the standard errors. Our method iSCAN with FOCI (green) consistently outperformed DCI (red) in terms of F1 score.

Additional Discussion on Shifted Edges

In Section 4, we focused on estimating structural changes across the environments (Definition 4). However, in some situations it might be of interest to determine whether the _functional relationship_ between two variables has changed across the environments. The latter could have multiple interpretations, in this section, we elaborate on a particular type of functional change via partial derivatives.

**Definition 5** (functionally shifted edge).: _Given environments \(=(X,f^{h},_{N}^{h})\) for \(h[H]\), an edge \((X_{i} X_{j})\) is called a functionally shifted edge if there exists \(h,h^{}[H]\) such that:_

\[}f^{h}_{j}(^{h}_{j})}f^{h^{}}_{j}(^{h^{}}_{j}).\]

Without further assumptions about the functional form of \(f^{h}_{j}\), certain ill-posed situations may arise under Definition 5. Let us consider the following example.

**Example 1**.: _Let \(_{A}\) and \(_{B}\) be two environments, each consisting of three nodes. Let the structural equations for node \(X_{3}\) be: \(X_{3}^{A}=(X_{1}^{A}+X_{2}^{A})+N_{3}\), and \(X_{3}^{B}=(2 X_{1}^{B}+X_{2}^{B})+N_{3}\). In this scenario, one could consider that the causal relationship \(X_{2} X_{3}\) has not changed. However, we note that \(_{j}}{ x_{i}^{A}}_{j}}{  x_{i}^{B}}\), thus, testing for changes in the partial derivative would yield a false discovery for the non-shifted edge \(X_{2} X_{3}\)._

Ill-posed situations such as the above example can be avoided by additional assumptions on the functional mechanisms. We next discuss a sufficient condition where the partial derivative test for functional changes is well-defined.

**Assumption D** (Additive Models).: _Let \(S\) be the set of shifted nodes across all the \(H\) environments. Then, for all \(j S,h[H]\):_

\[f^{h}_{j}(^{h}_{j})=a^{h}_{j}+_{k^{h}_{j}}f^{h}_{ jk}(X_{k}),\]

_where \(a^{h}_{j}\) is a constant, \(f^{h}_{jk}\) is a nonlinear function, where \(f^{h}_{jk}()\) lies in some space of function class \(\)._

**Remark 7**.: _Assumption D amounts to modelling each variable as a generalized linear model . It is widely used in nonparametrics and causal discovery . Moreover, it not only provides a practical framework but also makes the definition of shifted edges (as per Definition 5) well-defined and reasonable._

**Remark 8**.: _Note that Assumption D makes assumptions only on the set of shifted nodes. This is because the set of invariant nodes can be identified regardless of the their type of structural equation, and it is also clear these nodes cannot have any type of shift._

Now consider a function class \(\), which incorporates the use of basis functions to model the additive components \(f^{h}_{jk}\). Specifically, we express \(f^{h}_{jk}(x_{k})=^{h}_{jk}(x_{k})^{h}_{jk}\), where feature mapping \(^{h}_{jk}\) is a \(1 r\) matrix whose columns represent the basis functions and \(^{h}_{jk}\) is an \(r\)-dimensional vector containing the corresponding coefficients. Moreover we assume that the functions \(f^{1}_{jk},,f^{H}_{jk}\) share a same feature mapping \(^{1}_{jk}()=,,=^{H}_{jk}()\) but can have different coefficients \(^{h}_{jk}\) across the \(H\) environments. The latter has been assumed in prior work, e.g., . The approach of using a basis function approximation is widely adopted in nonparametric analysis, and it has been successfully employed in various domains such as graph-based methods , and the popular CAM framework . Then, under Assumption D and Definition 5, we present the following proposition:

**Proposition 2**.: _Under Assumption D, an edge \((X_{i} X_{j})\) is a functionally shifted edge, as in Definition 5, if and only if the basis coefficients are different. That is,_

\[_{j}}{ x_{i}}}_{ j}}{ x_{i}}^{h}_{ji}^{h^{}}_{ji}.\]

Proof.: We have,

\[_{j}}{ x_{i}}=f^{h}_{ji}(x_{i})}{ x_{i}}=(_{ji}(x_{i})^{h}_{ji})}{x _{i}}=_{ji}(x_{i})}{x_{i}}^{h}_{ji}.\]Then,

\[_{j}}{ x_{i}}-}_{j}}{  x_{i}}=_{ji}(x_{i})}{x_{i}}(^{h}_{ ji}-^{h^{}}_{ji})^{h}_{ji}-^{h^{}}_{ ji}\]

The last \(\) relation is due to the linear independence of the basis functions \(_{ji}\), then the null space of \(_{ji}}}{{x_{i}}}\) can only be the zero vector \(\). 

Note that the output of Algorithm 1 also estimates a topological order \(\). However, the _exact parents_ of a node \(X_{j}\) across the environments are not known, and they are possibly different. To estimate the coefficients without knowledge of the exact parents, we can consider the set \(}(X_{j})\), which consists of nodes located before \(X_{j}\) in the topological order \(\). By regressing \(X_{j}\) on \(}(X_{j})\) for each environment, we can obtain coefficient estimations, which are the same coefficients obtained by regressing \(X_{j}\) on its exact parents, in large samples.

**Theorem 3**.: _In large samples, let \(\{^{h}_{jk}\}_{k(X_{j})}\) be the coefficients obtained by regressing \(X_{j}\) on the feature mapping of \((X_{j})\), and let \(\{^{h}_{jk}\}_{k_{j}}\) be the coefficients obtained by regressing \(X_{j}\) on the feature mapping of \(_{j}\). Then, \(^{h}_{jk}=^{h}_{jk}\) if \(k^{h}_{j}\), and \(^{h}_{jk}=0\) if \(k(X_{j})^{h}_{j}\)._

Proof.: Proof can be found in Appendix B.3. 

Motivated by Theorem 3, and given an estimated \(\{^{h}_{jk}\}_{k}(X_{j})}\), one could conduct a hypothesis testing as follows:

\[H_{0}:^{1}_{jk}==^{H}_{jk}\] (13)

If the null hypothesis \(H_{0}\) is rejected, it indicates that there is evidence of a functionally shifted edge between nodes \(X_{k}\) and \(X_{j}\) across the environments. In this paper we leave the hypothesis test unspecified to allow for any procedure that can test eq.(13).

```
0: Sample data \(^{1},,^{H}\), shifted nodes set \(\), topological order \(\), significance level \(\).
0: Set of functionally shifted edges \(\)
1:for\(j\)do
2: Estimate \(^{h}_{jk}\) for all \(k}(X_{j})\) and \(h[H]\)
3:for\(k}(X_{j})\)do
4: Conduct hypothesis testing \(H_{0}\) (equation 13) under significant level \(\).
5: If \(H_{0}\) is rejected, add edge \((X_{k} X_{j})\) to \(\). ```

**Algorithm 5** Functionally shifted edges detection