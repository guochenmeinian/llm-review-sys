# RG-SAN: Rule-Guided Spatial Awareness Network for End-to-End 3D Referring Expression Segmentation

Changli Wu\({}^{1,2}\)1, Qi Chen\({}^{1}\)1, Jiayi Ji\({}^{1,4}\)1, Haowei Wang\({}^{3}\), Yiwei Ma\({}^{1}\),

**You Huang\({}^{1}\), Gen Luo\({}^{1}\), Hao Fei\({}^{4}\), Xiaoshuai Sun\({}^{1}\), Rongrong Ji\({}^{1}\)2**

\({}^{1}\) Key Laboratory of Multimedia Trusted Perception and Efficient Computing,

Ministry of Education of China, Xiamen University, 361005, P.R. China

\({}^{2}\) Shanghai Innovation Institute, Shanghai, P.R. China

\({}^{3}\) Youtu Lab, Tencent, Shanghai, P.R. China

\({}^{4}\) National University of Singapore

Equal Contribution.Corresponding Author.

###### Abstract

3D Referring Expression Segmentation (3D-RES) aims to segment 3D objects by correlating referring expressions with point clouds. However, traditional approaches frequently encounter issues like over-segmentation or mis-segmentation, due to insufficient emphasis on spatial information of instances. In this paper, we introduce a Rule-Guided Spatial Awareness Network (RG-SAN) by utilizing solely the spatial information of the target instance for supervision. This approach enables the network to accurately depict the spatial relationships among all entities described in the text, thus enhancing the reasoning capabilities. The RG-SAN consists of the Text-driven Localization Module (TLM) and the Rule-guided Weak Supervision (RWS) strategy. The TLM initially locates all mentioned instances and iteratively refines their positional information. The RWS strategy, acknowledging that only target objects have supervised positional information, employs dependency tree rules to precisely guide the core instance's positioning. Extensive testing on the ScanRefer benchmark has shown that RG-SAN not only establishes new performance benchmarks, with an mIoU increase of 5.1 points, but also exhibits significant improvements in robustness when processing descriptions with spatial ambiguity. All codes are available at https://github.com/sosppxo/RG-SAN.

## 1 Introduction

3D Referring Expression Segmentation (3D-RES) is an emerging field that segments 3D objects in point cloud scenes based on given referring expressions . Gaining significant attention for its applications in autonomous robotics, human-machine interaction, and self-driving systems, 3D-RES demands a deeper understanding than 3D Referring Expression Comprehension (3D-REC) , which focuses only on locating the referring objects via bounding boxes. 3D-RES, on the other hand, requires identifying instances and providing precise 3D masks.

Early 3D-RES approaches  adopted a two-stage paradigm, starting with an independent text-agnostic segmentation model for generating instance proposals, followed by linking these proposals with textual descriptions. This paradigm, separating segmentation and matching, proved suboptimal in performance and efficiency. Recent explorations have shifted towards an end-to-end paradigm. For instance, 3D-STMN  achieved efficient segmentation by directly matching superpoints with text, while 3DRefTR  integrated 3D-RES and 3D-REC into a unified framework using a multi-taskapproach, boosting inference in both tasks. Despite these advancements, limitations persist, primarily due to over-reliance on textual reasoning and insufficient modeling of spatial relationships between instances. For example, as shown in Fig. 1, without spatial modeling, it's challenging to understand and correctly segment the intended chair in scenarios involving complex spatial terms like "far away".

To tackle this issue, the core is to assist textual reasoning by modeling the spatial relationships of core instances. By effectively identifying these spatial relationships within expressions, a substantial improvement can be achieved in comprehending spatial arrangements. Nevertheless, this endeavor is not without its challenges. While accurate positional information is crucial for ensuring precise modeling of spatial relationships, accurately regressing instance positions from textual information is far from a simple task. Furthermore, our available positional information is limited to the target instance, leaving us without supervisory signals for other instances referenced in the expression.

To overcome these challenges, we propose the novel Rule-Guided Spatial Awareness Network (RG-SAN), utilizing the spatial information of the target instance for supervision. This enables the network to accurately depict spatial relationships among all text-described entities, thereby significantly enhancing the model's inference and pointing capabilities. RG-SAN consists of two main components: the Text-driven Localization Module (TLM) and the Rule-guided Weak Supervision (RWS) strategy. TLM initially locates all mentioned instances and iteratively refines their positions, ensuring continuous improvement in location accuracy. RWS, leveraging dependency tree rules, precisely guides the positioning of core instances. This focused supervision significantly improves the handling of spatial ambiguities in referring expressions. Extensive testing on the ScanRefer benchmark shows that RG-SAN not only sets new performance standards, with a mIoU increase of 5.1 points, but also greatly enhances robustness in processing spatially ambiguous descriptions.

To sum up, our main contributions are as follows:

* We introduce RG-SAN, a novel approach for modeling spatial relationships among all entities in expressions, which enhances the model's referring ability in 3D-RES.
* We propose the TLM for precise localization of all instances mentioned in expressions, and RWS, utilizing only the target instance's location for supervising the spatial positioning of all instances.
* Extensive experiments on the ScanRefer benchmark demonstrate the effectiveness of the proposed RG-SAN, showing significant improvements in performance and robustness in 3D-RES tasks.

## 2 Related Work

### 3D Referring Expression Comprehension and Referring Expression Segmentation

Referring Expression Comprehension (REC) is proposed to locate the referred target from a short description of visual space by bounding boxes [74; 59; 29], which is part of vision-language tasks [12; 10; 11; 18; 69; 68; 15; 40; 41]. Recent works in 3D-REC can be divided into two parts, two-stage and single-stage. As for two-stage methods [5; 1; 75; 73; 72; 24; 13], 3D object proposals are generated directly from ground-truth  or extracted by a pre-trained 3D object detector  in the first stage,

Figure 1: Illustration with a target object and multiple auxiliary objects, associated with a referring expression. The target marked in green represents the main referred instance, while targets in other colors indicate other mentioned entities. This visual highlights the challenge of effectively completing semantic reasoning in the absence of spatial inference.

and then assigned to language in the second stage. In the other way, some methods adopt a one-stage paradigm [47; 26; 70; 66], enabling end-to-end training.

Referring Expression Segmentation (RES) need fine-grained vision-language alignment [36; 37; 16; 35], proposed to locate the referred target by masks [27; 61; 25]. TGNN  introduce 3D-RES by extending the bounding box annotations of ScanRefer  to masks by incorporating the instance masks from ScanNet and proposed a two-stage pipeline. Further, 3D-STMN  proposed an end-to-end method that matches the text and superpoints to get the 3D segmentation of the target object directly.

### 3D Human-AI Interaction

ScanQA  has notably advanced visual question answering in 3D scenes, enhancing the human-AI interaction experience. Meanwhile, 3D-LLM , 3D-VisTA , NaviLLM , and BridgeQA  have further propelled this task. Li et al. [38; 39], Lu et al.  have explored how AI understands human instructions like gestures and language to locate targets. 3D-VisTA  introduced a new paradigm for large-scale 3D vision-language pre-training, greatly enhancing AI's understanding of 3D vision-language and advancing various downstream tasks. Works like 3D-LLM , Chat3D [64; 22], NaviLLM  and Scene-LLM  have extended the capabilities of multimodal large language models to the 3D realm, endowing embodied intelligence with the rich knowledge and capabilities of LLMs, thus ushering in the era of large models in Human-AI Interaction.

### Weakly Supervision in Vision-and-Language

In the field of Vision Language, weakly supervised [33; 44; 34; 4] have gained significant attention and great progress. These approaches aim to tackle the challenge of limited or incomplete annotations by leveraging alternative supervised data or weakly labeled data. For weakly supervised visual question answering (VQA), Kervadec et al.  employ weak supervision in the form of object-word alignment as a pre-training task. Trott et al.  use object counts in images as weak supervision to guide VQA for counting-based questions. Gokhale et al.  employ logical connective rules to augment training datasets for yes-no questions. Weakly supervision from captions has also been employed for visual grounding tasks [9; 50; 2] recently. Especially, for RES, some methods [33; 44] localize the target object only using readily available image-text pairs.

## 3 Method

In this section, we provide a comprehensive overview of the RG-SAN. The framework is illustrated in Fig. 2. First, the features of visual and linguistic modalities are extracted in parallel (Sec. 3.1). Next, we demonstrate the process of TLM (Sec. 3.2.1). Finally, we outline the RWS and the training objectives (Sec. 3.3).

### Feature Extraction

#### 3.1.1 Visual Encoding

Given a point cloud scene \(_{cloud}^{_{p}(3+F)}\) with \(_{p}\) points. Each point comes with 3D coordinates along with an \(F\)-dimensional auxiliary feature that includes RGB, normal vectors, among others. We first employ a Sparse 3D U-Net  to extract point-wise features, represented as \(}_{}^{_{p} C_{p}}\). Then, we follow Sun et al.  and Wu et al.  to obtain \(_{s}\) superpoints \(\{_{i}\}_{i=1}^{_{s}}\) from the original point cloud. Finally, we directly feed point-wise features \(}_{}\) into superpoint pooling layer based on \(\{_{i}\}_{i=1}^{_{s}}\) to obtain the superpoint-level features \(_{p}^{_{s} C_{p}}\).

#### 3.1.2 Linguistic Encoding

Given a free-form plain text description of the target object, consisting of \(_{t}\) words \(\{c_{i}\}_{i=1}^{_{t}}\), we utilize a pre-trained MPNet model  to extract \(C_{t}\)-dimensional word-level embeddings, represented as \(_{0}^{_{t} C_{t}}\).

### Context-driven Spatial Awareness

In this section, we address a key limitation in prior works that interact point clouds with text without considering spatial positioning [65; 47; 70]. Unlike these methods, which often lose spatial information due to unordered point cloud features, leading to ambiguous spatial relationship understanding, our approach is distinct. In 3D-RES, spatial information is inherently sparse and dynamic, depending on the specific target object described in the text, rather than the dense, static sampling of an entire point cloud scene .

To address this issue, we propose to facilitate interactions between textual entities and point clouds within 3D space, rather than merely at the semantic level. Specifically, our objective is to fully leverage semantic and spatial contextual information to accurately predict the spatial positions of all mentioned nouns within the point cloud.

Therefore, we introduce the Text-driven Localization Module (TLM) to initialize the positions of entity nouns in the text and continuously update and refine these positions through iterative multimodal interactions.

#### 3.2.1 Text-driven Localization Module

Given the superpoint features \(_{p}\) and word embeddings \(_{0}\), we first project the features into the same dimension, and enhance the word-level embeddings by Dependency-Driven Interaction (DDI), following Wu et al. :

\[}_{0}=(_{0}_{lang}),}=_{p}_{vis},\] (1)

where \(_{lang}^{C_{t} D}\) and \(_{vis}^{C_{p} D}\) denote learnable parameters, and the subscript of \(\) and \(}\) represents the round number.

**Text-driven Initialization.** The key is to map the text into 3D geometric space in a meaningful way. Specifically, we enhance entity position prediction within point clouds through an interactive text-point cloud process. We do this by calculating feature similarity across modalities to accurately

Figure 2: An overview of the proposed RG-SAN. This model analyzes a point cloud and a textual description with \(_{t}\) tokens, extracting superpoints and word-level features. The TLM assigns spatial positions to tokens, facilitating multimodal fusion. The RWS strategy enables the model to learn the positions of all mentioned entities using only the supervision of the target position.

estimate the spatial probability distribution for each mentioned entity:

\[=}_{0}_{E},=}_{S},\] \[A_{ij}=(_{i},_{j})}{_{ j=1}^{_{s}}\ (_{i},_{j})},\] (2)

where \(}_{0}\) denotes the initial word embeddings, \(}\) denotes the superpoint features, \(_{E},_{S}^{D D}\) are learnable parameters, \(A_{ij}\) denotes the probability of the \(i\)-th word token being located at the \(j\)-th superpoint, and \((,)\) represents the similarity function, which in this case is defined as \((,)\!=\!(^{T}/ )\).

Following this, we utilize the spatial probability distribution \(A\) to predict the approximate positions of the mentioned entities, as well as their corresponding representations:

\[_{0,i}^{t}=_{j=1}^{_{s}}\ A_{ij}_{j}^{s},\] (3)

\[_{v}=}_{v},}_{0,i}= _{j=1}^{_{s}}\ A_{ij}_{v,j},\] (4)

where \(_{j}^{s}\) is the position of the \(j\)-th superpoint, \(_{0,i}^{t}\) is the initial spatial position of \(i\)-th word token which will be refined iteratively as formulated in Sec. 3.2.2, \(_{v}^{D D}\) denotes learnable parameters, and \(}_{0,i}\) denotes the updated representation of the \(i\)-th word token. The sharing of distribution \(A\) during centroid computation allows the entity representations to benefit from the guidance provided by spatial information, leading to a more accurate understanding of the 3D spatial relationships. Subsequently, the text and point clouds undergo multiple rounds of multimodal interactions, continually updating the embeddings and positions of the entities.

**Iterative Position Refinement.** After \(l\)-round multimodal interactions, the word tokens \(}_{l}\), referred to as textual segment kernels, become increasingly precise, theoretically resulting in more accurate position predictions. A straightforward approach would involve replicating the initial interaction method by regressing position information in each round. However, following the methodologies of Redmon et al.  and Lai et al. , rather than directly optimizing the final position, we adopt a more manageable strategy of iteratively learning offsets. To this end, we refine the positions of textual tokens based on the evolving textual segment kernels. As depicted in Fig. 2, we employ a Multilayer Perceptron (MLP) to predict a position offset \(_{l}^{t}=(}_{l+1})^{ _{f} 3}\) from the updated textual segment kernels \(}_{l+1}\). This offset is then added to the previous textual positions \(_{l}^{t}\):

\[_{l+1}^{t}=_{l}^{t}+_{l}^{t}.\] (5)

This method allows for gradual refinement of position predictions, making the optimization process more effective and leading to progressively more accurate positioning with each iteration.

#### 3.2.2 Spatial Awareness Aggregation

Once the positions of noun entities are obtained, techniques like positional encoding [63; 67; 31; 30; 6] can be used to further refine the positions.

**Absolute Positional Encoding (APE).** To initiate, we follow the approach of the original transformer  to encoded the positions of both superpoints and text tokens to obtain positional encodings \(_{l}^{s}^{_{s} D}\) and \(_{l}^{t}^{_{l} D}\) using absolute positional encoding (APE):

\[_{l}^{s}=(_{l}^{s}),_{l}^{t}= (_{l}^{t}).\] (6)

These positional encodings facilitate spatial-aware self-attention in the textural segment kernels \(}_{l}\):

\[}_{l}=(}_{l}+_{l}^{t },}_{l}+_{l}^{t},}_{l}),\] (7)

where \(()\) uses the technique of Vaswani et al.  and \(_{l}^{t}\) denotes the absolute positional encoding of \(}_{l}\).

Next, we enhance textual and superpoint features with absolute positional encoding, and use them as Queries and Keys for subsequent multimodal aggregation:

\[ =(}_{l},_{l}^{s})_{query},\] (8) \[ =(},_{l}^{s})_{key},\]

where \(_{l}^{s}^{_{t} D},_{l}^{s} ^{_{s} D}\) denote the absolute positional encoding of segmentation kernels and superpoints, respectively, and \(_{query},_{key}^{2D 2D}\) denote learnable parameters.

**Relative positional encoding (RPE).** For the further interaction with superpoint features, we adopt well-established relative positional encoding techniques [67; 31; 30; 6], such as Table-based RPE [67; 31] and 5D Euclidean RPE , which are formalized as follows:

\[_{l}^{r}[i,j]=([i]+[j]),\] (9)

where \(_{l}^{r}[i,j]\) denotes the relative positional bias of the \(i\)-th \(\) relative to the \(j\)-th \(\), \(()\) denotes the operation of relative positional bias and \([]\) denotes the indexing operation.

Thus, we can perform multimodal aggregation enhanced with relative positional encoding:

\[}_{l+1}=(^{ T}}{}+_{l}^{r})(}_{val}),\] (10)

where \(_{val}^{D D}\) denote learnable parameters, \(_{l}^{r}^{_{t}_{s}}\) denotes the relative positional bias, and \(}_{l+1}\) denotes the updated segmentation kernels. This methodology significantly enriches the interaction between linguistic and 3D visual data, enabling more nuanced spatial understanding in our model.

### Rule-guided Weak Supervision

#### 3.3.1 Rule-guided Target Selection

In the preceding sections, we initially predicted the locations of all entities mentioned in the text. Ideally, supervised training would require position labels for each entity. However, we only have access to the location information of the target instance. This constraint leads us to adopt a weak supervision approach, focusing solely on the position of the referring instance for training. This approach introduces a significant challenge: accurately identifying the referring instance among the mentioned nouns. To address this, we utilize a pre-processed dependency tree, as outlined in Manning et al. , to accurately pinpoint the core noun, typically the subject of the sentence. We have developed a set of manual rules, based on this more general dependency tree, to enhance the identification process. These rules are specifically designed to guide the accurate positioning of core instances. The implementation of these rules is outlined in Algorithm 1.

```
0: The dependency tree \(=(,)\) of the textual description, where \(=\{\}\) denotes the set of nodes, \(=\{()\}\) denotes the set of relations between nodes.
0: The index \(i\) of Target Instance node \(^{tgt}\)
1: Initialization \(i\) to the root: \(i=0\)
2: find \(_{i}\) with \(_{i}\) as its head
3:if\((_{i}\{\})\ \ \&\ \ (_{i}\{\})\)then
4:\(i_{i}\)'s tail index
5:endif
6:if\(_{i}\{\}\)then
7: find \(_{i}\) with \(_{i}\) as its head
8:\(i_{i}\)'s tail index
9:endif
10:if\(_{i}\{\}\)then
11: find the first \(_{i}\)'s relation \(\{\}\)
12:\(i_{i}\)'s head index
13:endif ```

**Algorithm 1** Rule-guided Target Selection

#### 3.3.2 Training Objectives

Given the index of the target instance, we can directly obtain the corresponding segment kernel \(}_{l+1}^{tgt}^{D}\) and position \(_{l+1}^{tgt}\), which are then supervised by the target ground truth.

Then we perform matrix multiplication between \(}_{l+1}^{tgt}\) and \(}\) to get the predicted instance response maps, which can be formulated as

\[_{l+1} =(}_{l+1}^{tgt}}^{T}),\] (11) \[_{l+1} =_{l+1}>0.5,\] (12)

where \(_{l+1}^{_{s}}\), \(_{l+1}\{0,1\}^{_{s}}\) are the predicted response map and the instance mask corresponding to the target.

Given ground-truth binary mask of the referring expression \(\{0,1\}^{_{p}}\), we get the corresponding superpoint mask \(^{s}\{0,1\}^{_{s}}\) by superpoint pooling followed by a 0.5-threshold binarization, and then we apply the binary cross-entropy (BCE) loss on the final response map \(_{l+1}\) following Sun et al. . The operation can be written as:

\[^{s}_{i} =(((,_{i}))),\] (13) \[_{bce} =(_{l+1},^{s}),\] (14)

where \(()\) denotes the superpoint average pooling operation, and \(^{s}_{i}\) denotes the binarized mask value of the \(i\)-th superpoint \(_{i}\). \(()\) indicates whether the mask value is higher than 50%.

To tackle foreground-background sample imbalance, we can use Dice loss :

\[_{dice}=(_{l+1},^{s}).\] (15)

To supervise the position \(_{l+1}^{tgt}\), we use the center of the superpoints of the target instance \(^{gt}\), as

\[_{pos}=(_{l+1}^{tgt},^{gt}).\] (16)

In addition, we add a simple auxiliary score loss \(_{score}\) for mask quality prediction following Sun et al. .

Overall, the final training loss function \(\) can be formulated as:

\[=_{bce}_{bce}+_ {dice}_{dice}+_{pos}_{pos}+\\ _{score}_{score},\] (17)

where \(_{bce}\), \(_{dice}\), \(_{rel}\) and \(_{score}\) are hyperparameters used to balance these four losses.

## 4 Experiment

### Experiment Settings

In our experiment, we utilize the pre-trained Sparse 3D U-Net method to extract point-wise features from point clouds . We also employ the pre-trained MPNet model  as our text encoder. For the rest of the network, training is conducted from scratch. We set an initial learning rate of 0.0001 and apply a learning rate decay at epochs 26, 34, and 46, each with a decay rate of 0.5. Our experiments use a default of 6 multiple rounds \(L\), a batch size of 32, and a maximum sentence length of 80. We set \(_{bce}=_{dice}=1,_{pos}=_{score}=0.5\). All experiments are conducted using PyTorch on a single NVIDIA Tesla A100 GPU, ensuring consistency in our computational process.

### Dataset and Evaluation Metrics

We evaluate our method using the ScanRefer dataset, a recent 3D referring dataset [5; 24], comprising 51,583 English natural language expressions referring to 11,046 objects across 800 ScanNet scenes . Following Chen et al. , our evaluation metrics include mean Intersection over Union (mIoU) and Acc@_IoU_. "Unique" refers to cases where the target instance is the only one of its class, and "Multiple" indicates situations where there is at least one more object of the target's class.

### Quantitative Comparison

In our experiments on the ScanRefer dataset, our proposed RG-SAN demonstrates significant improvements in nearly all metrics on the single-task leaderboard, as shown in Tab. 1. Notably, RG-SAN shows substantial gains compared to the state-of-the-art single-task model 3D-STMN, with increases of 5.1 points in mIoU and 7.1 points in Acc@0.25. This highlights our model's inferencing capability. A more detailed examination reveals that the majority of these improvements occur in scenarios with multiple disruptive instances, where RG-SAN achieves a remarkable 6.3-point increase in mIoU. This setting, where the target instance is among other instances of the same type, demands discriminative reasoning from the model. The significant performance validates the enhanced referring capabilities empowered by spatial reasoning. Our proposed RG-SAN also outperforms multi-task models [70; 43], including LLM-based models [20; 23], in most 3D-RES metrics, despite those models benefiting from more annotated data.

Moreover, RG-SAN has competitive inference costs, being only 12ms slower than the efficient 3D-STMN and faster than all other compared models, demonstrating its high performance with minimal computational increase.

### Ablation Study

#### 4.4.1 Text-driven Localization Module

We conduct an ablation study on the Text-driven Localization Module (TLM), as illustrated in Tab. 2. Simultaneously, we perform a fine-grained analysis of various initialization schemes for embeddings and positions. The term "w/o TLM" denotes the approach of not modeling positional information and instead directly using text embeddings for interaction. "MAFT" refers to the direct adaptation of the method proposed in . The "Project" method involves initializing embeddings based on text-driven embeddings and then projecting each textual token directly into a 3D position, while the "Random" method randomly assigns a position to each textual token. Finally, we utilize the initialization technique called Text-driven Initialization (TI), which simultaneously initializes both embeddings and positions in a text-driven manner. Tab. 2 clearly shows that, under identical conditions, TI outperforms the others in all metrics. This indicates that TI more effectively leverages positional information from the visual scene, leading to more precise initial positions for the textual tokens. Consequently, this reduces the complexity of the subsequent iterative refinement process, thereby enhancing the overall accuracy of our model in spatially aligning text with point cloud data. Additionally, Tab. 2 demonstrates that proper initialization leads to the superior performance of TLM compared to the methods without TLM.

    &  &  &  &  \\  & 0.25 & 0.5 & mIoU & 0.25 & 0.5 & mIoU & **0.25** & **0.5** & **mIoU** & Stage-1 & Stage-2 & All \\   \\  EDA-box2mask  & 84.7 & 56.9 & - & 50.0 & 37.0 & - & 55.2 & 40.0 & 35.0 & - & - & - \\
3DRF18F-8P  & 87.9 & 69.8 & - & 51.6 & 41.9 & - & 57.0 & 46.1 & 40.8 & - & - & 388ms \\
3DRF16F-BR  & 89.6 & 77.0 & - & 52.3 & 43.7 & - & 57.9 & 48.7 & 41.2 & - & - & 405ms \\ UnSeg3D  & - & - & - & - & - & - & - & 29.6 & - & - & - \\ SegPoint  & - & - & - & - & - & - & - & 41.7 & - & - & - \\ Reason3D  & 88.4 & 84.2 & 74.6 & 50.5 & 31.7 & 34.1 & 57.9 & 41.9 & 42.0 & - & - & - \\   \\  TGNN  & - & - & - & - & - & - & 37.5 & 31.4 & 27.8 & - & - & - \\ TGNN\(\) & 69.3 & 57.8 & 50.7 & 31.2 & 26.6 & 23.6 & 38.6 & 32.7 & 28.8 & 26862ms & 235ms & 27097ms \\ InstanceRefer  & 81.6 & 72.2 & 60.4 & 29.4 & 23.5 & 21.5 & 40.2 & 33.5 & 30.6 & 509ms & 672ms & 1181ms \\ X-RefSeg3D  & - & - & - & - & - & - & 40.3 & 33.8 & 29.9 & - & - & - \\
3DVG-Transformer\({}^{*}\) & 79.5 & 58.0 & 49.9 & 42.0 & 30.8 & 27.0 & 49.3 & 36.1 & 31.4 & - & - & - \\
3D-SPS  & 84.8 & 65.6 & 54.7 & 41.7 & 30.8 & 26.7 & 50.1 & 37.6 & 32.1 & - & - & - \\
3DRF18P  & 79.0 & 54.2 & - & 40.2 & 22.1 & - & 46.0 & 26.9 & 28.7 & - & - & - \\
3D-STMN  & **89.3** & 84.0 & **74.5** & 46.2 & 29.2 & 31.1 & 54.6 & 39.8 & 39.5 & - & - & 283ms \\ RG-SAN (Ours) & 89.2 & **84.3** & **74.5** & **55.0** & **35.4** & **37.4** & **61.7** & **44.9** & **44.6** & - & - & 295ms \\   

Table 1: The 3D-RES results on ScanRefer. \(\) The mIoU and accuracy are reevaluated on our machine. \({}^{*}\)We reproduce results by extracting points within the boxes as segmentation mask predictions using their official codes.

#### 4.4.2 Positional Encoding

We compare various positional encoding methods previously employed in [57; 6; 31]. These methods include Fourier Absolute positional encoding (APE), 5D Euclidean Relative positional encoding (5D Euclidean RPE) , and Table-based Relative positional encoding (Table-based RPE) . Tab. 3 reveals that Table-based RPE surpasses the other methods, suggesting that combining semantic information with relative relationships is advantageous. Additionally, we observe that employing only absolute positional encoding can result in lower performance than not using any positional encoding at all. This may be attributed to the inherent limitations of absolute positional encoding in capturing relative positional information. By complicating the semantic features, it introduces challenges in the model's training process, underscoring the importance of choosing the right positional encoding technique for effective performance.

#### 4.4.3 Rule-guided Weak Supervision

We conducted experiments employing various weakly supervised text kernel selection strategies to evaluate their efficacy in leveraging target annotations. The strategy labeled as "w/o RWS" involves selecting the token based on attention weight within the cross-attention module , while "Root" entails selecting the root token of the dependency tree. Table 4 illustrates that utilizing the root node as supervision slightly outperforms the "w/o RWS" baseline. This is likely due to the root node providing consistent supervision, whereas Top1 tends to select different nodes variably, which complicates the training process. In contrast, our Rule-guided Target Selection (RTS) strategy, based on dependency tree rules to locate subjects, aligns more effectively with the structural nature of the text. It precisely identifies the target entity's position, significantly enhancing annotation utilization and effectively directing model training. This leads to a notable improvement in model performance.

Furthermore, we conduct an ablation study on the impact of the position loss weight \(_{pos}\), detailed in Tab. 5. We observe that increasing the weight generally improves performance, peaking at a weight of 0.5, beyond which performance begins to taper off. This finding highlights the importance of balancing the weight of the position loss to optimize the model's effectiveness.

#### 4.4.4 Comparison with MAFT

MAFT  has played a pivotal role in 3D instance segmentation by incorporating spatial position modeling, offering valuable insights into how spatial information can improve model performance. Inspired by this approach, we extend spatial information into the text space to better align visual and textual semantics, specifically targeting spatial relationship reasoning in 3D-RES. Our approach introduces two key innovations that distinguish it from MAFT:

* Unlike MAFT , which initializes queries with zeros and uses random initialization for positional information, we employ text-driven queries and positional information to model the spatial relationships of entities in the expressions. This allows our model to capture the spatial context better, resulting in a 4.4-point improvement in mIoU, as shown in Tab. 2
* In contrast to , which supervises the positions of all target instances, 3D-RES supervises only the core target word. Our novel RWS method constructs spatial relationships for all noun instances using only the target word's positional information, resulting in a 2.3-point improvement in mIoU, as demonstrated in Tab. 4.

    & Init. of & Multiple & **Overall** \\  & Embeddings & Positions & mIoU & **mIoU** \\  w/o TLM & Text-driven & - & 32.5 & 40.3 \\ MAFT  & Zero & Random & 29.7 & 37.9 \\  Project & Text-driven & Project & 30.3 & 38.8 \\ Random & Text-driven & Random & 30.1 & 38.8 \\ TI & Text-driven & Text-driven & **34.1** & **42.3** \\   

Table 2: Ablation study of Text-driven Localization Module (TLM), where “w/o TLM” means not using TLM.

    &  &  \\  & 0.25 & 0.5 & mIoU & **0.25** & **0.5** & **mIoU** \\  w/o Pose Supervision & 45.4 & 27.3 & 30.4 & 54.4 & 38.2 & 38.9 \\  w/o PE & 46.1 & 31.7 & 32.8 & 54.6 & 42.4 & 41.1 \\ Fourier APE & 46.0 & 30.9 & 32.0 & 55.1 & 41.5 & 40.7 \\ SD Euclidean RPE & 46.7 & 32.5 & 33.3 & 54.6 & 43.9 & 41.7 \\ Table-based RPE & **47.2** & **33.7** & **34.1** & **55.6** & **43.9** & **42.3** \\   

Table 3: Ablation study of positional encoding, where “w/o Pos. Supervision” means not supervises the positions, and “w/o PE” means not using any positional encoding.

### Qualitative Comparison

We conduct a qualitative analysis on the ScanRefer validation set as shown in Fig. 3, comparing our proposed RG-SAN with 3D-STMN  to highlight our model's exceptional referring capability. Fig. 3 demonstrates our model's ability to accurately segment not only the target objects but also other nouns mentioned in the text. Unlike 3D-STMN, which misattributes all nouns to a single target, RG-SAN distinctly recognizes and locates each noun. For example, in Fig. 3-**(c)**, our model successfully identifies the target chair through relative positioning, even with similar objects in the scene, and accurately recognizes a coat as a supporting element in the description. This ability extends to Fig. 3-**(a)** and **(b)**, where RG-SAN correctly segments multiple auxiliary nouns into their corresponding instances, demonstrating its robust generalization for complex texts and precise localization for multiple entities. Such capabilities enhance the model's understanding of complex semantic scenes, significantly improving its ability to refer to specific entities accurately.

## 5 Conclusion

In this paper, we present RG-SAN to overcome the limitations of traditional 3D-RES methods, particularly their lack of spatial awareness. Specifically, the TLM is introduced to model and refine positional information, while the RWS is designed to employ dependency tree rules to accurately guide the position of the target object. Combining TLM with RWS strategy, RG-SAN significantly improves segmentation accuracy and robustly handles spatial ambiguities. Extensive experiments conducted on the ScanRefer benchmark demonstrate the superior performance of RG-SAN. This underscores the importance of incorporating spatial awareness into segmentation models, paving the way for future advancements in the domain.

    &  &  \\  & 0.25 & 0.5 & mIoU & **0.25** & **0.5** & **mIoU** \\  w/o RWS & 47.2 & 33.7 & 34.1 & 55.6 & 43.9 & 42.3 \\  Root & 53.5 & 30.4 & 34.7 & 60.7 & 40.9 & 42.5 \\ RTS & **55.0** & **35.4** & **37.4** & **61.7** & **44.9** & **44.6** \\   

Table 4: Weak Supervision Strategy in RWS, where “w/o RWS” means using attention-based Top1 approach in  instead of our RWS, and “RTS” refers to our Rule-guided Target Selection strategy.

Figure 3: Visualization of all the nouns in the textual description. Our RG-SAN can segment instances corresponding to different nouns, while 3D-STMN indiscriminately assigns all nouns to the target instance. **Zoom in for best view.**

   _{pos}\)} &  &  \\  & 0.25 & 0.5 & mIoU & **0.25** & **0.5** & **mIoU** \\ 
0.1 & 54.7 & 34.9 & 36.9 & 61.3 & 44.3 & 44.0 \\
0.2 & **55.5** & 34.0 & 37.0 & **62.0** & 43.7 & 44.2 \\
0.5 & 55.0 & **35.4** & **37.4** & 61.7 & **44.9** & **44.6** \\
1.0 & 55.3 & 34.5 & 37.0 & 61.8 & 44.2 & 44.3 \\
2.0 & 54.3 & 33.8 & 36.6 & 61.0 & 43.7 & 43.9 \\   

Table 5: Ablation study of the weight of \(_{pos}\).

## 6 Acknowledge

This work was supported by National Science and Technology Major Project (No. 2022ZD0118201), the National Science Fund for Distinguished Young Scholars (No.62025603), the National Natural Science Foundation of China (No. U22B2051, No. U21B2037, No. 62072389, No. 62302411, No. 623B2088), the Natural Science Foundation of Fujian Province of China (No.2021J06003) and China Postdoctoral Science Foundation (No. 2023M732948).