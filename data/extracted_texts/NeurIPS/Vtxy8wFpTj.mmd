# Online Budgeted Matching with General Bids

Jianyi Yang

University of Houston

Houston, TX, USA

jyang71@central.uh.edu

&Pengfei Li

University of California, Riverside

Riverside, CA, USA

pli081@ucr.edu

&Adam Wierman

California Institute of Technology

Pasadena, CA, USA

adamw@caltech.edu

&Shaolei Ren

University of California, Riverside

Riverside, CA, USA

shaolei@ucr.edu

###### Abstract

Online Budgeted Matching (OBM) is a classic problem with important applications in online advertising, online service matching, revenue management, and beyond. Traditional online algorithms typically assume a small bid setting, where the maximum bid-to-budget ratio (\(\)) is infinitesimally small. While recent algorithms have tried to address scenarios with non-small or general bids, they often rely on the Fractional Last Matching (FLM) assumption, which allows for accepting partial bids when the remaining budget is insufficient. This assumption, however, does not hold for many applications with indivisible bids. In this paper, we remove the FLM assumption and tackle the open problem of OBM with general bids. We first establish an upper bound of \(1-\) on the competitive ratio for any deterministic online algorithm. We then propose a novel meta algorithm, called MetaAd, which reduces to different algorithms with first known provable competitive ratios parameterized by the maximum bid-to-budget ratio \(\). As a by-product, we extend MetaAd to the FLM setting and get provable competitive algorithms. Finally, we apply our competitive analysis to the design learning-augmented algorithms.

## 1 Introduction

Online Budgeted Matching (OBM) with general bids is a fundamental online optimization problem that generalizes to many important settings, such as online bipartite matching and Adwords with equal bids . It has applications in various domains, including online advertising, online resource allocation, and revenue management among others [5; 16; 32]. OBM is defined on a bipartite graph with a set of offline nodes (bidders) and a set of online nodes (queries). The task is to select an available offline node to match with an online query in each round. When an offline node is matched to an online node, a bid value is subtracted from the budget of the offline node, and a reward equal to the consumed budget is obtained. If the remaining budget of an offline node is less than the bid value of an online query, the offline node cannot be matched to the online query. The goal is to maximize the total reward throughout the entire online matching process.

OBM is challenging due to the nature of online discrete decisions. Previous works have studied this problem under one of the following two additional assumptions on bids or matching rules:

\({}^{}\)_Small bids._ The small-bid assumption is a _special_ case of general bids corresponding to the maximum bid-budget ratio \( 0\). That is, while the bid values can vary arbitrarily, the size of each individual bid is infinitely small compared to each offline node's budget, and there is always enough budget for matching. Under this assumption, the first online algorithm was provided by ,achieving an optimal competitive ratio of \(1-1/e\). This competitive ratio has also been attained by subsequent algorithms based on primal-dual techniques [4; 7]. However, the small-bid assumption significantly limits these algorithms for broader applications in practice. Take the application of matching Virtual Machines (VMs) to physical servers as an example. An online VM request typically takes up a non-negligible fraction of the total computing units in a server.

\(\)_Fractional last match (FLM)_. Under FLM, if an offline node has an insufficient budget for an online query, the offline node can still be matched to the query, obtaining a partial reward equal to the remaining budget. Given the limitations of small bids, some recent studies [15; 29; 30] have studied competitive algorithms for OBM with general bids by making the additional assumption of FLM. For example, under FLM, the greedy algorithm (Greedy) achieves a competitive ratio of \(1/2\), while other studies [4; 15; 29; 30] aim to achieve a competitive ratio greater than \(1/2\) under various settings and/or using randomized algorithms. Although FLM allows fractional matching of a query to an offline node with insufficient budgets, it essentially assumes that any bids are potentially divisible. This assumption may not hold in many real applications, e.g., allocating fractional physical resources to a VM can result in significant performance issues that render the allocation unacceptable, and charging a fractional advertising fee may not be allowed in online advertising.

Despite its practical relevance and theoretical importance, OBM with general bids has remained a challenging open problem in the absence of the small-bid and FLM assumptions. Specifically, an offline node may have insufficient budget and cannot be matched to a later query with a large value, potentially causing large sub-optimality in the worst case. This issue does not apply to small bids, as the small-bid setting implies that insufficient budgets will never occur. Additionally, this challenge is alleviated in the FLM setting, where fractional matching in cases of insufficient budgets can reduce sub-optimality. Indeed, removing the small-bid and FLM assumptions fundamentally changes and add significant challenges to the problem of OBM . To further highlight the intrinsic difficulty of OBM with general bids, we formally prove in Proposition 4.1 an upper bound of the competitive ratio, i.e., \(1-\), achieved by any deterministic online algorithm, where \(\) is the maximum bid-budget ratio.

**Contributions**: In this paper, we address OBM _without_ the _small-bid_ or _FLM_ assumptions and design a meta algorithm called MetaAd, which adapts to different algorithms with provable competitive ratios. To our knowledge, MetaAd is the first provable competitive algorithm for general bids without the FLM assumption. Specifically, MetaAd generates a discounted score for each offline node by a general discounting function, which is then used to select the offline node. The discounting function evaluates the degree of budget insufficiency given a bid-budget ratio \(\), addressing the challenge of infeasible matching due to insufficient budgets. Given different discounting functions, MetaAd yields concrete algorithms, and their competitive ratios are derived from Theorem 4.2, established through a novel proof technique. We show that with small bids (i.e., \( 0\)), MetaAd recovers the optimal competitive ratio of \(1-\). Furthermore, we show that MetaAd, with discounting functions from the exponential and polynomial function classes, achieves a positive competitive ratio for \([0,1)\). As an extension, we adapt the design of MetaAd to the FLM setting, resulting in a meta-algorithm with provable competitive ratios for \(\) (Theorem 4.3). The framework of MetaAd potentially opens an interesting direction for exploring concrete discounting function designs that yield high competitive ratios for settings both with and without FLM. Finally, we apply our competitive analysis to the design of LOBM, a learning-augmented algorithm for OBM, which enhances average performance while still guaranteeing a competitive ratio (Theorem 5.1). We validate the empirical benefits of MetaAd and LOBM through numerical experiments on the applications of an online movie matching an VM placement on physical servers.

## 2 Related Work

OBM originates from the online bipartite matching problem defined by  30 years ago. In 2007,  generalized the online b-matching problem to OBM (a.k.a. Adwords) . Under the special case of small bids,  proposes an algorithm that achieves the competitive ratio of \(1-1/e\), which is also the optimal competitive ratio under the small-bid setting . In the same year,  provides the primal-dual algorithm and analysis for OBM under the small-bid assumption and achieves the competitive ratio of \(1-\). Subsequently,  gives a randomized primal-dual analysis for online bipartite matching and generalizes it to OBM. In addition, OBM has also been studied under the stochastic settings [9; 8; 6; 14; 25].

[MISSING_PAGE_FAIL:3]

A common performance metric for online algorithms is the **competitive ratio** defined as

\[=_{G}\{P(G)/P^{*}(G)\},\] (2)

where the minimization is taken over the set of all possible bipartite graphs \(\)1, \(P(G)=_{t=1}^{V}w_{x_{t},t}\) is the total reward obtained by an (online) algorithm for a graph \(G\), and \(P^{*}(G)=_{t=1}^{V}w_{x_{t}^{*},t}\) is the corresponding offline optimal total reward with \(x_{t}^{*}\) being the offline optimal solution to (1).

Next, we formally define the bid-budget ratio \(\) in Definition 1 which is the maximum ratio of the bid value of an offline node to its total budget. We use \(()\) to denote the competitive ratio of an algorithm for OBM with bid-budget ratio \(\).

**Definition 1** (Bid-budget ratio).: _The bid-budget ratio \(\) for an example \(G(,,E)\) is defined as \(=_{u,t}}{B_{u}}\)._

Many previous works [23; 24; 15; 4] assume FLM which allows for accepting partial bids when remaining budget is insufficient (i.e. modifying each bid \(w_{u,t}\) to \(_{u,t}=\{w_{u,t},b_{u,t-1}\}\) given the remaining budget \(b_{u,t-1}\)). Without the FLM assumption, the only known competitive ratio for OBM is for the small-bid setting where \(\) is infinitely small and approaches zero [23; 24]. However, the small-bid and FLM assumptions do not hold in many real-world applications as illustrated by the following examples:

\(\)**Online VM placement**. In this problem, a cloud manager allocates virtual machines (VMs, online nodes) to heterogeneous physical servers (offline nodes), each with a computing resource capacity of \(B_{u}^{}\)[10; 28]. When a VM request with a computing load of \(z_{t}\) arrives, the manager assigns it to a server. If the VM is placed on server \(u\), the manager receives a utility of \(w_{u,v}=r_{u}z_{v}\) due to the heterogeneity of servers. The goal is to maximize the total utility \(_{t=1}^{V}_{u}w_{u,t}x_{u,t}\) subject to the computing resource constraint \(_{t=1}^{V}z_{t}x_{u,t} B_{u}^{}\) for each server \(u\), which can also be written as \(_{t=1}^{V}w_{u,t}x_{u,t} B_{u}\) with \(B_{u}=r_{u}B_{u}^{}\). In this problem, VMs are not divisible and consume up a non-negligible portion of the server capacity, violating both the small-bid and FLM assumptions.

\(\)**Inventory management with indivisible goods**. Here, a manager must match several indivisible goods (online nodes) to various resource nodes (offline nodes), each with a limited capacity (e.g., matching parcels to mail trucks or food orders to delivery vehicles). Each good can only be assigned to one node without being split, and a good \(t\) can occupy a substantial portion of the resource node's capacity, \(w_{u,t}\). The goal is to maximize the total utilization \(_{t=1}^{V}_{u}w_{u,t}x_{u,t}\), subject to the capacity constraint \(_{t=1}^{V}w_{u,t}x_{u,t} 1\) for each node \(u\). In this problem, neither the small-bid nor FLM assumption applies.

In this paper, _without_ relying on the small-bid or FLM assumptions, we move beyond small bids and propose a meta algorithm (MetaAd) for general \(\) which can reduce to many concrete competitive algorithms.

## 4 MetaAd: Meta Algorithm for OBM

### An Upper Bound on the Competitive Ratio

In the absence of small-bid and FLM assumptions, OBM faces a unique challenge: when an online query with large bid arrives, there may be no offline node that both connects to the query and has sufficient remaining budgets for it. This leads to missed matches for the queries with large bids, ultimately resulting in a low competitive ratio. To formally show the inherent difficulty of OBM without the small-bid and FLM assumptions, we present an upper bound on the competitive ratio for any deterministic online algorithms in the following proposition.

**Proposition 4.1**.: _For OBM without small-bid or FLM assumptions, the competitive ratio of any deterministic online algorithm is upper bounded by \(1-\) for \((0,1]\). Specifically, the competitive ratio for any deterministic algorithm is zero when \(=1\) without the FLM assumption._

The proof of the upper bound is deferred to Appendix A.1. The key ingredients of the proof is given below. The best competitive ratio for any deterministic algorithm is \(_{}_{G}CR(,G)\) which is no larger than \(_{}_{G^{}}CR(,G)\) where \(^{}\). Thus, we can prove the upper bound by constructing a subset \(^{}\) with difficult instances and deriving the best competitive ratio among the deterministic algorithms for this subset \(^{}\). In our constructed \(^{}\), each example has one offline node and the bid values for the first \(V-1\) rounds sum up to \(1-+\) with \(>0\) being infinitely small. We let \(^{}=^{}_{1}^{}_{2}\) where we have \(w_{u,V}= B_{u}\) for examples in \(^{}_{1}\), and \(w_{u,V}=0\) for examples in \(^{}_{2}\). The instances in \(^{}\) illustrate the dilemma between matching a query for immediate reward or saving the budget for future matches. If an algorithm chooses to match all the queries in the first \(V-1\) rounds, it can lose a bid of \( B_{u}\) for instances in \(^{}_{1}\) because there is no sufficient budget to match the final query. Conversely, if an algorithm chooses to skip some queries in the first \(V-1\) rounds to save the budget, it can lose a bid of \( B_{u}\) for the instances in \(^{}_{2}\) because matching the final query of instances in \(^{}_{2}\) earns zero bid. For these difficult instances in \(^{}\), we formally derive the largest reward ratio of a deterministic algorithm to the offline optimal one which is the upper bound of the competitive ratio.

The upper bound of the competitive ratio \(1-\) shows that OBM becomes more difficult when the bid-budget ratio \(\) gets larger. Intuitively, since the bid value is not fractional for each matching, given a larger \(\), it is more likely for offline nodes to have insufficient budgets (i.e., unable to be matched to a query with a large bid value). Skipping a query to save budget is also risky because it can happen that the following queries have no positive bid. The FLM assumption can alleviate this difficulty because the remaining budget can be fully spent even if it is insufficient. A greedy algorithm can achieve a competitive ratio of \(1/2\) for general bids with FLM . By contrast, the upper bound of the competitive ratio _without_ FLM cannot reach \(1/2\) when the bid-budget ratio \(\) is larger than \(1/2\). There is even no non-zero competitive ratio when \(=1\). These observations reveal that without FLM, OBM becomes more difficult. The analysis without FLM assumption will help us to understand OBM better.

### Meta Algorithm Design

We now present MetaAd in Algorithm 1, which is a meta online algorithm that reduces to many concrete algorithms with provable competitive ratios for OBM in the absence of small-bid and FLM assumptions.

MetaAd relies on a general discounting function \(:\). Given a new query \(t\), MetaAd uses \(\) to score each offline node by discounting its bid value in Line 3, and selects the node with the largest score \(s_{u,t}\) from Line 4 to Line 7. An offline node is scored zero if it has insufficient budget for the query \(t\) (\(b_{u,t-1}-w_{u,t}<0\)) or it has zero bid for the query \(t\) (\(w_{u,t}=0\)). If all the offline nodes are scored zero, the algorithm skips this query \(t\).

The scoring in MetaAd reflects a balance between selecting an offline node with a large bid and saving budget for future. To select offline nodes with large bids, the score scales with the bid value \(w_{u,t}\). Simultaneously, an increasing function \(\) maps the normalized remaining budget \(}{B_{u}}\) to a discounting value within \(\). If an offline node \(u\) has less remaining budget, a smaller discounting value is obtained to encourage conserving budget for \(u\).

### Competitive analysis

Given any monotonically increasing function \(:\) in Algorithm 1, we can get a concrete algorithm for OBM. For different bid-budget ratio \(\), the competitive ratio of MetaAd is given in the main theorem below.

**Theorem 4.2**.: _If the function \(:\) in Algorithm 1 satisfies that given an integer \(n 1\), \( i n\), \(^{(i)}(x)>0\) where \((x)=1-(1-x)\), the competitive ratio of Algorithm 1 is_

\[()=R+_{y}(y)+},\]

_where \(R\) is the Lipschitz constant of \(^{(n)}(x)\) if \(^{(n)}(x)\) is not monotonically decreasing, and \(R=0\) otherwise. Additionally, \((y)=-_{x=0}^{y}(x)dx+_{i=1}^{n}^{i}(^{(i-1)}(y)-^{(i-1)}(0))\)._

By Theorem 4.2, we can easily get a competitive algorithm for OBM with any bid-budget ratio \(\) by choosing a function \(\). The only requirement is that the function \(\) is a monotonically increasing function. In the next section, we will give some concrete examples of competitive algorithms by assigning \(\) with different function classes.

We defer the complete proof of Theorem 4.2 to Appendix A.2. The analysis is based on the fundamental conditions in Lemma 1 that guarantee the competitive ratio and presents new challenges due to the absence of the small-bid and FLM assumptions.

**Lemma 1** (Conditions for competitive ratio).: _An online algorithm achieves a competitive ratio of \(\) if it selects a series of feasible actions \(\{x_{1},,x_{V}\}\) and there exist dual variables \(\{_{1},,_{V}\}\), \(\{_{1},,_{U}\}\) such that_

* _(_Dual feasibility_)_ \( u,t[V],_{t} w_{u,t}(1-_{u})\)__
* _(_Primal-Dual Ratio )_ \(P D\)_, where_ \(P=_{t=1}^{V}w_{x_{t},t}\) _and_ \(D=_{u}B_{u}_{u}+_{t=1}^{V}_{t}\)_._

Without the small-bid and FLM assumptions, the competitive analysis presents the following new challenges to satisfy the conditions in Lemma 1:

\(\)**Dual construction for general bids.** When an offline node has an insufficient budget to match a query, the remaining budget is almost zero for the small-bid setting, but it can be large and uncertain without the small-bid assumption. This introduces a new challenge to construct dual variables that satisfy the dual feasibility due to budget insufficiency.

To address this challenge, we present a new dual construction in Algorithm 2 where dual variables are determined based on the remaining budget and adjusted at the end of the algorithm. The constructed dual variables satisfy the dual feasibility in Lemma 1, as explained below. We define \(_{t}\) as the score of selected offline node \(u\). For any \(u\) with sufficient remaining budget (\(b_{u,t-1} w_{u,t}\)), we have \(_{t} s_{u,t}=w_{u,t}(1-(}{B_{u}}))\). By choosing \(_{u,t}=(}{B_{u}})\), the dual feasibility in Lemma 1 is satisfied for \(t\) and \(u\) with sufficient budget (\(b_{u,t-1} w_{u,t}\)) since by an increasing function \(\), it holds that \(_{u}_{u,t}\) for any \(t[T]\).

Different from the small-bid setting, we need to adjust the dual variables at the end of the dual construction (Line 7 in Algorithm 2) to satisfy dual feasibility. We set \(_{u}=1\) for any \(u\) with insufficient budget (\(b_{u,t-1}<w_{u,t}\)) at the end of the dual construction. This ensures that the dual feasibility is always satisfied without FLM.

**Guarantee the primal-dual ratio.** The challenges in guaranteeing the primal-dual ratio in Lemma 1 come from the unspecified discounting function \(\) and the absence of the small-bid and FLM assumptions. To solve this challenge, we derive a condition to satisfy the primal dual ratio \(P_{t}D_{t}\) for any round \(t\) where \( 1\), \(P_{t}=_{i=1}^{t}w_{x_{i},i}\) is the cumulative primal reward and \(D_{t}=_{u}B_{u}_{u,t}+_{i=1}^{t}_{t}\) is the cumulative dual. Thus, we prove that the primal dual ratio \(P_{t}D_{t}\) is satisfied for any \(t[T]\) if for any \(y\) it holds that,

\[(y)-_{x=0}^{y}(x)dx+_{i=1}^{n}^{i}^{(i-1)}( y)+(^{n+1}R-+1)y_{i=1}^{n}^{i}^{(i-1)}(0),\] (3)

where \((x)=1-(1-x)\) and \(\) is the discounting function. Given that the dual increase due to the final dual adjustment (Line 7 in Algorithm 2) is bounded by \( P\), we can bound the final primal-dual ratio as \(P}D\). This leads to a competitive ratio of \(}\). Given any discounting function \(\), we can solve for \(\) that satisfies the condition in (3), thereby obtaining the competitive ratio of MetaAd.

### Competitive Algorithm Examples

In this section, we assign \(\) with different functions to get concrete algorithms and competitive ratios.

#### 4.4.1 Small Bid

We first verify that MetaAd reduces to the optimal algorithm for small-bid setting (\( 0\)) .

**Corollary 4.2.1**.: _By choosing \((x)=}{e-1}\), MetaAd reduces to the algorithm in  and achieves the optimal competitive ratio of \(1-\) for small-bid setting (\( 0\))._

Corollary 4.2.1 shows that the competitive ratio in Theorem 4.2 is consistent with the classical results for small bids. Interestingly, our analysis shows how the optimal \(\) is obtained which is explained as follows. By solving (3) with "=" and \(=0\), we get

\[(x)=(-1)e^{x}+1-,\ \ (x)=-(-1)e^{1-x},\] (4)

where \(\) to make sure \((x) 0\) for \(x\). By Theorem 4.2, we get the competitive ratio as \(_{ 0}}=\). By optimally choosing \(=\), we get the optimal competitive ratio as \(1-\).

#### 4.4.2 Exponential Function Class

Next, we consider an exponential function class \((x)=C_{1}e^{ x}+C_{2}\) with \(0 1\). To ensure \((x)\) is an increasing function, we choose \(C_{1} 0\). Also, we choose \(C_{2}=-C_{1}\) to simplify the expression of the competitive ratio. We can observe that \((x)\) has positive \(n-\)th derivative for any \(n 1\). Thus, we choose \(n=\) in Theorem 4.2 to eliminate the term \(^{n+1}R\). By substituting \((x)\) into \(()\) in Theorem 4.2, we get the corollary below.

**Corollary 4.2.2**.: _If we assign \((x)=Ce^{ x}-C\) with \(C 0\) and \(0 1\) in MetaAd in Algorithm 1, we get the competitive ratio as_

\[()=\{+ {}{1-})(e^{}-1)+}{1- }},1-+ 0\\ +)+}{1-}},1-+<0.\] (5)

We numerically solve the optimal \(()\) for each \(\) by adjusting the parameters \(\) and \(C\) and show the results in Figure 1. We observe that MetaAd achieves a non-zero competitive ratio for \([0,1)\). The competitive ratio for \(=0\) is the optimal competitive ratio of \(1-\) for small-bid setting. The competitive ratio monotonically decreases with \(\). This coincides with the intuition that when \(\) gets larger, it is more likely to trigger budget insufficiency and the problem becomes more challenging. Also, we can find that for a large enough \(\), the competitive ratio of MetaAd with the exponential function is very close to the upper bound. However, there can exist other forms of exponential discounting function that can achieve higher competitive ratio.

Interestingly, the optimal choices of the exponential function \((x)\) for different \(\) reveal the insights into designing deterministic algorithms for OBM. When \(\) is less than a critical point \( 0.26\), the optimal choice of the exponential function is \((x)=}{1-e^{}}\) and the optimal choice of \(\) decreases with \([0,]\). In this range, as \(\) becomes larger in \([0,]\), the discounting \((}{B_{u}})=1-(1-}{B_{u}})\) becomes smaller, indicating a more conservative approach to budget usage in preparation for potentially high future bids. However, as \(\) gets larger than \(\), the optimal choice of the discounting function becomes \((x)=1\) with \(C=0\), yielding a greedy algorithm. This suggests that for large enough \(\), the algorithm benefits more by matching a node with a large bid immediately than by conserving more budget for future.

#### 4.4.3 Polynomial Function Class

In this section, we explore another function class to show that MetaAd is general enough to provide competitive algorithms given different discounting functions. We consider a function class of \(n-\)th polynomial function, i.e. \((x)=_{j=0}^{n}C_{j}x^{j}\). We set \(_{j=1}^{n}C_{j} 1\) to ensure \((1) 1\) and set \(C_{0}=0\) to simplify the competitive ratio. We summarize the competitive ratio of the polynomial function class and provide a concrete example for quadratic function in the next corollary.

**Corollary 4.2.3**.: _If we assign \((x)=_{j=1}^{n}C_{j}x^{j}\) with \(_{j=1}^{n}C_{j} 1\) and \(i\)-th derivative \(^{(i)}(x) 0\) (\(0 i n\)), MetaAd achieves a competitive ratio as_

\[()=(y)+-_{j= 1}^{n}C_{j}(1-)^{j-1}},\] (6)

_where \((y)=-}{n+1}y^{n}+((1+)C_{n}-}{n})y^{n-1}+ _{j=0}^{n-2}((1+)C_{j+1}-}{j+1}+_{i=2}^{n-j}^{i }C_{i+j})y^{j}\). Specifically, given a quadratic example \((x)=Cx^{2}\), by optimally choosing \(C=1\), we have_

\[()=(^{2}+++)^{-1}.\] (7)

We numerically show the results of \(()\) in Figure 1. We observe that MetaAd with a simple quadratic function \((x)=x^{2}\) can also achieve non-zero competitive ratio for \([0,1)\). However, this competitive ratio is lower than the best competitive ratio achieved by the exponential function \((x)=C(e^{ x}-1)\).

The examples of exponential functions and quadratic functions demonstrate the strength of MetaAd in providing competitive algorithms for OBM with general bids. While MetaAd provides the first framework to get non-zero competitive ratio for OBM with \([0,1)\) (in the absence of the FLM assumption), it is interesting to explore other functions \(\) under the MetaAd framework with better competitive ratios.

### Extension to OBM with FLM

While MetaAd is designed for the more challenging OBM _without_ FLM, this section demonstrates that MetaAd can be extended to provide competitive algorithms for OBM with FLM.

Due to the space limitation, we defer the algorithm of MetaAd with FLM (Algorithm 3) and its analysis to Appendix B. Instead of scoring based on the true bid \(w_{u,t}\), Algorithm 3 determines the scores based on a modified bid \(\{w_{u,t},b_{u,t-1}\}\). Based on the modified dual construction in Algorithm 4, we can get the competitive ratio for OBM with FLM in the next theorem.

Figure 1: Competitive ratio without FLM. MetaAd (Exp) represents the MetaAd with \((x)=C(e^{ x}-1)\) and MetaAd (Quad) represents the MetaAd with \((x)=Cx^{2}\)).

**Theorem 4.3**.: _If the function \(:\) in Algorithm 1 satisfies that given an integer \(n 2\), \( i n-1\), \(^{(i)}(x)>0\) and \(R=_{x}^{(n)}(x)\) where \((x)=1-(1-x)\), the competitive ratio of Algorithm 1 is_

\[()=R+_{y}(y)+()},\]

_where \((y)=-_{x=0}^{y}(x)dx+_{i=1}^{n}^{i}(^{(i-1)}(y)-^{(i-1)}(0))\)._

The competitive ratio with FLM in Theorem 4.3 differs from that in Theorem 4.2 only in the final terms of the denominators, which are \(()\) and \(\) respectively. Thus, the competitive ratio with FLM is always larger than that without FLM given the same values of \(\) and \(\). This improvement arises because FLM allows for accepting partial bids when budgets are insufficient, thereby reducing the potential budget waste.

Similar as MetaAd without FLM, we assign an exponential function class \((x)=C(e^{ x}-1)\) to get a concrete algorithm with competitive ratio in Corollary B.1.1. We numerically solve the optimal \(()\) for each \(\) by adjusting \(\) and \(C\) and compare the results with an existing competitive algorithm BJN2007  for FLM in Figure 2. As \( 0\), both MetaAd and BJN2007 achieve the optimal competitive ratio \(1-1/e\) in the small-bid setting. However, as \(\) approaches 1, the competitive ratio of BJN2007 decreases to zero while MetaAd, reducing to a greedy algorithm, maintains a competitive ratio of \(\), the best known competitive ratio of the deterministic algorithms for the OBM with FLM.

## 5 Competitive Learning-Augmented Design

In this section, we demonstrate the application of our competitive analysis for designing learning-augmented algorithms which guarantee a competitive ratio of ML-based solutions for OBM.

Our competitive analysis directly motivates a learning-augmented algorithm for OBM called LOBM. The algorithm of LOBM and analysis are deferred to Appendix C. In LOBM, we apply a ML model which at each round takes the features of the arriving query and the offline nodes as inputs and gives the output \(_{u,t}\). Directly using \(1-_{u,t}\) as a discounting value to set the score as \(w_{u,t}(1-_{u,t})\) can result in arbitrarily bad worst-case performance for adversarial examples. To provide a competitive guarantee for OBM, LOBM projects the ML output \(_{u,t}\) into a competitive solution space \(_{u,t}\) in (28) and obtains a projected value \(z_{u,t}\). The score is then set as \(w_{u,t}(1-z_{u,t})\) based on the projected ML output \(z_{u,t}\). The key design of the competitive solution space is motivated by the conditions in Lemma 1, which ensures that any \(z\) value in \(_{u,t}\) leads to the satisfactions of the dual feasibility and primal-dual ratio. The competitive solution space is based on the dual construction given the discounting function \((x)=-1}{e^{}-1}\) where \(>0\) in Algorithm 2. Importantly, we introduce a slackness parameter \(\) in the design of \(_{u,t}\) in (28). The parameter \(\) controls the size of the competitive space \(_{u,t}\) and further regulates the competitive ratio of LOBM. Given a smaller \(\), we can get a larger competitive space \(_{u,t}\), and so LOBM has more flexibility to exploit the benefits of ML predictions. However, a smaller \(\) also leads to a smaller competitive ratio shown in the theorem below.

**Theorem 5.1**.: _Given the maximum bid-budget ratio \(\), \(>0\), and the slackness parameter \(\), with any ML predictions, LOBM in Algorithm 5 achieves a competitive ratio of_

\[()=})}{1+( }{1-}+(1-}) [}{}--1]^{+})}.\] (8)Theorem 5.1 shows that LOBM with a slackness parameter \(\) can guarantee a competitiveness ratio of \(()\) regardless of the ML prediction quality. The parameter \(\) determines the worst-case competitive ratio and the degree of flexibility to exploit the benefit of ML predictions. When \(=0\), there is no competitive ratio guarantee and LOBM reduces to a pure ML-based algorithm. This can also be seen from the inequalities in the competitive solution space (28), which are all satisfied automatically when \(=0\). On the other hand, when \(=1\), LOBM achieves the highest competitive ratio. When \(\) increases from 0 to 1, the competitive solution space in (28) varies from whole solution space (with \(=0\)) to the smallest competitive solution space (with \(=1\)). Therefore, the choice of the slackness parameter \(\) provides a trade-off between the competitive guarantee and the average performance by adjusting the level of exploiting the ML predictions.

## 6 Empirical Results

We evaluate the empirical performance of MetaAdd and LOBM on two applications. The first application is Online Movie Matching where the platform needs to match each query to a movie advertiser with limited budget. The empirical results are obtained based on the MovieLens Dataset . The main empirical results are shown in Table 1. We compare MetaAdd with the algorithms without using ML (Greedy and PrimalDual introduced in Section D.1.1) and show that MetaAdd achieves the best worst-case and average performance among them. Additionally, we validate that LOBM with a guarantee of competitive ratio in Theorem 5.1 achieves the best worst-case reward with a good average reward. Other empirical ablation studies can be found in Section D.1.2.

The second application is Online VM Placement introduced in Section 3. We generate the bipartite graphs with connections between physical servers and VMs by the Barabasi-Albert method  and assign utility values according to the prices of Amazon EC2 compute-optimized instances . We defer the empirical results and ablation studies to Appendix D.2.3.

## 7 Conclusion

In this paper, we consider a challenging setting for OBM without the FLM and small-bid assumption. First, we highlight the challenges by proving an upper bound on the competitive ratio for any deterministic algorithms in OBM. Then, we design the first meta algorithm MetaAdd that achieves a provable competitive ratios parameterized by the maximum bid-budget ratio \(\). We also extend LOBM under the additional FLM assumption. Additionally, based on the competitive analysis, we propose LOBM to take advantage of ML predictions to improve the performance with a competitive ratio guarantee, followed by its empirical validations.

**Limitations and Future Directions.** While we provide the first provable meta algorithms for OBM with general bids, determining the best choice of the discounting function \(\) remains an open question and an interesting problem for future exploration.

**Broader impacts.** By introducing a provable algorithm for OBM under more general settings, our work has the potential to advance the applications and motivate new algorithms. For applications like advertising, if large budget disparities among offline nodes exist, those with larger initial budgets could have a higher chance of being matched due to their smaller bid-to-budget ratios. This fairness issue, also observed in prior algorithms [23; 4; 24], warrants further investigation.

    &  &  \\   & Greedy & PrimalDual & MetaAdd & ML & LOBM-0.8 & LOBM-0.5 & LOBM-0.3 \\ 
**Worst-case** & 0.7941 & 0.8429 & **0.8524** & 0.7903 & **0.8538** & 0.8324 & 0.8113 \\
**Average** & 0.9329 & 0.9340 & **0.9344** & 0.9355 & **0.9372** & 0.9371 & 0.9343 \\   

Table 1: Worst-case and and average normalized reward on the MovieLens dataset. The best results among algorithms w/o ML predictions and the best results among ML-based algorithms are highlighted in bold font.

## Aknowledg

Jianyi Yang, Pengfei Li and Shaolei Ren were supported in part by NSF grants CNS-2007115 and CCF-2324941. Adam Wierman was supported by NSF grants CCF-2326609, CNS-2146814, CPS-2136197, CNS-2106403, and NGSDI-2105648 as well as funding from the Resnick Sustainability Institute.