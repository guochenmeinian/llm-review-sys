# When to Act and When to Ask: Policy Learning With Deferral Under Hidden Confounding

Marah Ghoummaid

Faculty of Data and Decision Sciences, Technion

marahghoummaid@gmail.com

&Uri Shalit

Faculty of Data and Decision Sciences, Technion

urishalit@tauex.tau.ac.il

###### Abstract

We consider the task of learning how to act in collaboration with a human expert based on observational data. The task is motivated by high-stake scenarios such as healthcare and welfare, where algorithmic action recommendations are made to a human expert, opening the option of deferring recommendation in cases where the human might act better on their own. This task is especially challenging when dealing with observational data, as using such data runs the risk of hidden confounders whose existence can lead to biased and harmful policies. However, unlike standard policy learning, the presence of a human expert can mitigate some of these risks. We build on the work of Mozannar and Sontag (2020) on consistent surrogate loss for learning with the option of deferral to an expert, where they solve a cost-sensitive supervised classification problem. Since we are solving a causal problem, where labels do not exist, we use a causal model to learn costs which are robust to a bounded degree of hidden confounding. We prove that our approach can take advantage of the strengths of both the model and the expert to obtain a better policy than either. We demonstrate our results by conducting experiments on synthetic and semi-synthetic data and show the advantages of our method compared to baselines.

## 1 Introduction

Machine learning models are increasingly being developed to perform tasks performed by human decision-makers in high-stakes settings such as clinical decision making (Adams et al., 2022; Rajpurkar et al., 2022), criminal justice (Stevenson and Doleac, 2022) and social services (Behncke et al., 2009; McBrien et al., 2022). Some of these tasks involve recommending actions such as medical treatment, releasing on bail, or receiving benefits. Typically the data used to train such action-recommendation models is based on past human decisions and their outcomes. For example, we might observe how patients were treated for diabetes and their subsequent health outcomes.

Learning to act better in the future based on past observed actions is a _causal_ problem. For such problems we face the fundamental problem of causal inference (Holland, 1986), i.e. the unknowability of counterfactual outcomes: "Would this patient have been better had they been treated differently?". Estimating causal quantities based on observational data such as hospital records is risky, as there is always the possibility of hidden confounding. Roughly speaking, this means there exist factors that affected the human decision maker and the outcome, but are unavailable to the model during training.

Learning models from data which has hidden confounding can lead to biased and harmful treatment assignment policies. However, human experts' decisions can also be biased, sub-optimal, or wrong. Thus, a setting in which both the human expert and the model can complement each other might be the best choice, mitigating the potential weaknesses and leveraging the strengths of both the model and the human expert (Bansal et al., 2020; Charusaie et al., 2022). We believe this is especially pertinent in causal inference, as the human expert typically has access to the hidden confounders.

In this paper, we design a framework for learning a causal action recommendation model that can jointly work with a human decision-maker, while using observational data where hidden confounders might exist. We assume that the effect of the hidden confounders is limited (in a way we specify below), as without any assumption about the nature of hidden confounding, learning would be impossible. Our goal is to design a system consisting of a machine learning model estimating causal effects and a human expert working in a complementary setting. In addition to learning treatment assignment, the model learns the weaknesses and strengths of the human expert and will decide in each case whether to recommend a certain treatment to the patient, or whether it is better to defer the decision to the expert. The ultimate goal is to learn better policies and to reduce the burden on human experts. We call our method Causal Action Recommendation with Expert Deferral (CARED).

CARED follows in the footsteps of Mozannar and Sontag (2020), who developed a method for learning a classifier with the option of deferral to an expert. They propose a reduction of the problem to a cost-sensitive learning problem, where costs are based on the true labels of data samples. They give a surrogate loss for the cost-sensitive learning problem which generalizes the cross-entropy loss, and prove this loss is consistent, i.e., converges to the optimal solution of the original problem. Our problem can similarly be viewed as a classification problem with the option of deferring to an expert. However, the causal case is more difficult: the correct label for each sample is the best treatment to be prescribed to this sample based on its features, and due to the fundamental problem of causal inference we cannot know this label. Thus, unlike Mozannar and Sontag (2020) we do not have the true labels for our classification problem.

To overcome the challenges of the causal setting, we propose a set of costs that instead of being based on the true labels, are based on estimated _bounds_ on counterfactual outcomes. These costs guide our model towards learning what is the right treatment for each patient while acknowledging that the human expert has access to additional information the model cannot access. We prove a generalization bound on the loss of the joint machine-expert system, and further prove that under certain assumptions about the model used to estimate the bounds mentioned above, the joint machine-expert system outperforms both the human expert and a pure machine learning model. Finally, we evaluate CARED on synthetic and semi-synthetic data to demonstrate how we can learn policies that outperform both pure machine learning policies and human experts. We further show that CARED outperforms a recently proposed method by Gao and Yin (2023) that addresses the same problem with an inverse-propensity weighted approach.

## 2 Related work

Many works focus on solving the problem of policy learning for action recommendations from observational data. Some notable approaches include reweighting by inverse propensity weighting (IPW) and other weighting techniques (Swaminathan and Joachims, 2015; Kallus, 2017; Beygelzimer and Langford, 2009), and the approach of using doubly robust scores to determine the optimal treatment assignment policy for binary treatments (Dudik et al., 2014; Athey and Wager, 2021; Y. Kallus and Zhou, 2020). Other methods predict the Conditional Average Treatment Effect (CATE) and use it as the guideline for treatment assignment for each sample, such as Jesson et al. (2021), and Kallus et al. (2019). Most of these works assume ignorability, i.e., that there are no hidden confounders that affect both treatment assignment and the outcome in the data. As mentioned earlier, this assumption rarely holds when observational data is in use, and its presence, if not accounted for, can lead to biased and harmful policies. Our work builds on previous work for learning supervised classification problems with the deferral option by Mozannar and Sontag (2020), and is inspired by Athey and Wager (2021) who derive costs for learning policies from observational data under the assumption of no hidden confounders.

Gao and Yin (2023) present a framework for collaborative human-AI policy learning from observational data with deferral, building on earlier work (Gao et al., 2021) which did not allows for hidden confounding. To the best of our knowledge, theirs is the only existing method that learns a policy with the deferral option under hidden confounding. Their method minimizes an inverse propensity weighted estimator of the worst-case risk over a class of differentiable policies, and over an uncertainty set around the observed propensities. The uncertainty set is determined by constraints motivated by the Marginal Sensitivity Model (Tan, 2006). While our method employs both outcome models and propensity scores, Gao and Yin (2023)'s approach focuses on propensity score re-weighting. The re-weighted objective implies that only cases where the proposed policy agrees to a high degree with the observed policy are taken into account. As we show in the experimental section below, this (along with the lack of outcome model) might lead to under-performance, especially in the (common) case where the constraint set is not accurately known. Gao and Yin (2023) also explore the case where there are multiple specific human experts the model is optimizing for, which we plan to explore in future work. We also compare our method to Kallus and Zhou (2020), who take a similar approach as Gao and Yin (2023) for learning a policy while allowing the violation of the unconfoundedness assumption. However, they do not have the option of deferral.

In other related work, Stensrud et al. (2024) consider the case where the expert's action can be used as input to the method, motivated by the fact that the expert typically has access to unobserved confounders. This is distinct from our use case but has interesting implications in identifying the so-called "superoptimal regime" where the expert's action can strictly improve over a policy derived purely from the observables. Finally, Yin et al. (2024) offer a novel approach towards learning to defer in the non-causal setting, which could be adapted to our use case in the future.

## 3 Setup

We work under an observational data setting with the Neyman-Rubin potential outcomes framework (Rubin, 2005). Let \((X,A,Y(1),Y(0),U)\) be a sample drawn from the unobservable distribution \(P_{}\), where \(A=\{0,1\}\) is a binary treatment, \(X^{d}\) is a set of baseline covariates, \(Y(1)\) and \(Y(0)\) are the real-valued treated and untreated potential outcomes, respectively, and \(U^{k}\) is an unobserved confounder. We face the fundamental problem of causal inference and only observe \(n\) draws from the coarsened distribution \(P\) over the observed variables \(Z=(X,A,Y)\), where we assume that \(Y=Y(A)\), i.e. (causal) consistency. We generally follow the convention that higher outcomes are better, we mention when assumed differently. We use the Marginal sensitivity Model (MSM) (Tan, 2006) as a way to model a limited degree of unobserved confounding. We are interested in learning a policy with the option of deferral, such that given the patient's covariates it either assigns a treatment or defers the decision to an expert.

Let \(e(x)=P(A=1\,|\,X=x)\) and \(e(x,u)=P_{}(A=1\,|\,X=x,U=u)\) be the observed and full propensity scores, under \(P\) and \(P_{}\), the observed and the full unobserved distributions, respectively.

**Assumption 1** (MSM Assumption).: We assume \(e(x),e(x,u)(0,1)\) and that the ratio between the full odds of treatment \(e(x,u)/(1-e(x,u))\) and the observed odds of treatment \(e(x)/(1-e(x))\) is bounded by at most a factor of \( 1\) almost surely under \(P_{}\):

\[^{-1}\,\,.\]

Note that When \(=1\), Assumption 1 is equivalent to the classic assumption of unconfoundedness with respect to the observed \(X\). As \(\) increases, the MSM allows for greater levels of unobserved confounding. Setting \(\) is a matter of ongoing research, and is typically done by calibrating with respect to observed confounders (McClean et al., 2024). In our case, it is also tied to the fraction of deferrals to the human expert and can be tuned to achieve a desired deferral rate.

For a treatment \(a\{0,1\}\) and a covariate vector \(x\) we define the **Conditional Average Potential Outcome (CAPO)** as \([Y(a)|X=x]\). The **Conditional Average Treatment Effect (CATE)** is the difference \((x)=[Y(1)-Y(0)|X=x]\). Let \(()\) be the set of distributions \(_{}\) that agree with the observed \(P\) on \((X,A,Y)\) and that also agree with Assumption 1. Then \(Y^{+}(x,a)=_{_{}()}[ Y(a)|X=x]\) is the so-called sharp upper bound on the CAPO \([Y(a)|X=x]\), and similarly for \(Y^{-}(x,a)\), taking an infimum instead. We further let \(^{+}(x,a),^{-}(x,a)\) be estimated upper and lower bound for the corresponding CAPO functions.

A **policy** with deferral is a function \(:\{0,1,\}\) that maps covariates to a possible action, or defers the decision to an expert, where \(\) denotes deferral. A policy \(\) can be assessed by its **policy value**\(V()=[Y()]\), where higher policy values are related to better policies unless stated otherwise. The action when the algorithm chooses to defer is the action the human expert has taken, see discussion of this in the limitations subsection (8). The learned policies will be assessed relative to a baseline policy value, such as the policy value based solely on the human expert. Our goal is for CARED to learn a policy that does no worse than the baseline policy and hopefully outperforms it.

CAPO-Based Policies

We now present two baseline policies that can be defined based on the CAPO bounds.

The first is **Bounds Policy** Equation (1). This policy assigns treatment if the upper and lower bounds on the CATE have the same sign, and otherwise it defers, i.e. it defers if the CATE interval crosses 0. This approach was used in previous work, e.g. (Jesson et al., 2021; Oprescu et al., 2023). The second is the **Pessimistic Policy** Equation (2). It is pessimistic in the sense that it does not trust the human expert, so it does not allow deferral to an expert. It agrees with the Bounds Policy in the cases where that policy would not defer, and in the cases where the Bounds Policy would defer it decides based on the lower bounds, which (assuming higher outcomes are better) are indeed pessimistic.

Let \((x)=(^{+}(x,0),^{-}(x,0),^{+}(x,1)),^{-}(x,1))\) be the CAPO bounds estimates for a sample \((X=x,A=a,Y=y)\). We further assume that the expert policy is reflected in the training data in the sense that their policy is \(_{}(x_{i})=a_{i}\). Then, given a model that supplies CAPO bounds \(\), we define the following policies, which we consider as baselines henceforth:

**Bounds Policy:**

\[^{}_{}(x)=1&^{-}(x,1)- ^{+}(x,0)>0\\ 0&^{+}(x,1)-^{-}(x,0)<0\\ &\] (1)

**Pessimistic Policy:**

\[^{}_{}(x)=1&^{-}(x,1)- ^{+}(x,0)>0\\ 0&^{+}(x,1)-^{-}(x,0)<0\\ 1&^{-}(x,1)-^{-}(x,0)>0\\ 0&\] (2)

The above policies, while accounting for hidden confounding, even when allowing deferral to an expert, do not learn the strengths and weaknesses of the expert, so they might not be the optimal policies. We show this theoretically in Section 6.2, and empirically in Section 7.

## 5 Method

In this section, we present our method in which we design a machine-expert system for learning a policy with the option of deferral to an expert under hidden confounding. In 5.1 we describe the joint machine-expert objective we are interested in optimizing, the challenges it imposes, and how to optimize a consistent surrogate cost-sensitive loss that converges to the optimal solution of the original objective, based on Mozannar and Sontag (2020). Then in 5.2 we introduce our proposed set of costs based on the CAPO bounds for solving this cost-sensitive problem. Lastly, we explain the step of CAPO estimation in 5.3. Our algorithm is summarized below in Algorithm 1.

### Joint machine-expert objective function

We design a joint machine-expert system, where we aim to learn a policy \(:\{\}\). We denote by \(m\) the expert's action that is assumed to be drawn from the distribution \(M|X=x,U=u\). Note that the expert might have access to additional information - the hidden confounder \(U\), which is unavailable to the model. We cast our problem as a cost-sensitive optimization objective

\[L()=_{x,y P(X,Y),m M|x,u}[C(x,(x))_{(x) }+C_{}(x,m,y)_{(x)=}],\] (3)

where \(C(x,a)\) is the cost incurred by the system if for a sample with covariates \(x\), an action/treatment \(a\) was chosen by the model, and \(C_{}(x,m,y)\) is the cost incurred when action \(m\) was chosen for sample \(x\) by the expert. We explain below why \(C_{}\) depends on \(y\) but \(C\) does not.

In the case of no unobserved confounding and no deferral, Athey and Wager (2021) have shown how the costs above can be set such that the cost minimizer is the policy with optimal policy value. We describe how we set costs that address both hidden confounding and deferral in the next subsection.

The above objective is non-convex and difficult to optimize. We deal with this challenge by building on the approach of Mozannar and Sontag (2020) for learning classifiers with the option of deferral to an expert, where they have a similar objective as in Equation (3). They give a convex and consistent surrogate loss for the cost-sensitive learning problem, which is a weighted cross-entropy loss, where the weights are based on a set of costs they build using the true labels for the classification problem.

As explained earlier, our problem can also be viewed as a classification problem with the option of deferring to an expert. However, due to the fundamental problem of causal inference (Holland, 1986) we do not have the true labels, which are in our case, the best treatment to be prescribed to this sample based on its features, which is a challenge that we deal with in Section 5.2.

Following is the surrogate loss we optimize, in Section 5.2 we present our proposed set of costs, and in Section 6 we give consistency and generalization guarantees for this surrogate loss.

Let \(_{i}:\) be the raw output of the policy \(\) corresponding to a class \(i\{0,1,\}\), and define \((x)=*{arg\,max}_{i\{0,1,\}}_{i}(x)\). Let \(z=(x,a,y)\) be a sample, and \((x)=(^{+}(x,0),^{-}(x,0),^{+}(x,1)),^{-}(x,1)\)) the CAPO bounds. These bounds are then used to define the scores \(c(0)=C(x,0)\), \(c(1)=C(x,1)\), and \(c()=C_{}(x,m,y)\) as we show in Section 5.2 below. Define \(w^{}(z,(x))=_{k\{0,1,\}}c(k)-c(j)\). Then the surrogate loss function for Equation (3) is given by:

\[L_{CE}(,z;)=_{j\{0,1,\}}-w^{j}(z,(x))( (x))}{_{k\{0,1,\}}(_{k}(x))}).\] (4)

The method we propose uses the above system loss for learning a policy from observational data with the presence of a limited degree of hidden confounding and the ability to defer. The difficulty in this case is constructing the costs \(C(x,0),C(x,1)\) and \(C_{}(x,m,y)\) which are used to derive the weights \(w^{j}\), since ground truth labels are never available -- a challenge we address now.

### Action Costs

As mentioned earlier, our classification problem does not have the true labels, as opposed to Mozannar and Sontag (2020). We therefore propose a set of costs based on estimated bounds on counterfactual outcomes rather than on the true labels, guiding our model in learning for which cases it can safely recommend actions, and which to defer to the human expert. These costs are then used to derive the weights in the objective Equation (4).

For \(i[n]\) let \((x_{i},y_{i},a_{i})\) be the \(i\)-th observed sample, and let \(^{+}(x_{i},a),^{-}(x_{i},a)\) be the estimates of the upper and lower bounds of the CAPO for an action \(a\), and a covariates \(x\). We propose setting the cost of assigning the action \(a\) to the \(i\)-th sample to be:

\[C(x_{i},a)=^{+}(x_{i},1-a)-^{-}(x_{i},a).\]

This cost encourages the model to choose the action with the highest outcome. When this is not the case, i.e. the model chooses another action than the one with the highest estimated outcome, then it will incur a cost which is the difference between the _lower bound_ of the outcome corresponding to the action chosen, and the _upper bound_ of the outcome corresponding to the action which was supposed to be chosen based on the outcomes. This cost can be thought of as the _worst-case_ regret of the model relative to the optimal action. It is important to note that this is only one option among many options for building a set of costs for this purpose. For instance, we can switch the roles of the upper and lower bounds of the CAPOs to obtain various costs expressing differing levels of risk-aversion.

As for the cost of deferring to an expert, following the same logic, we propose two alternatives. Given covariates \(x_{i}\), expert action \(m=a_{i}\) and outcome \(y_{i}\) the _conservative_ deferral cost is:

\[C_{}(x_{i},a_{i},y_{i})=^{-}(x_{i},1-a_{i})-y_{i},\]

and similarly the _optimistic_ deferral cost is: \(C_{}(x_{i},a_{i},y_{i})=^{+}(x_{i},1-a_{i})-y_{i}\). These costs represent to what extent are we willing to take an action different from the one the expert took which resulted in the outcome actually seen in the data, i.e. \(m=a_{i}\) which lead to outcome \(y_{i}\). In the optimistic case, deferring to an expert results in incurring a greater cost in comparison to its conservative counterpart, encouraging the model to make fewer deferrals and focusing on samples it is highly uncertain about. It is optimistic in the sense of assuming the model's estimates are likely correct. Choosing between these alternatives should to be done based on the characteristics of the specific policy and use case. In Appendix A.3 we show a comparative analysis of the two alternatives.

To summarize we present here the costs corresponding to the _conservative_ approach:

\[C(x_{i},1) =^{+}(x_{i},0)-^{-}(x_{i},1)\] \[C(x_{i},0) =^{+}(x_{i},1)-^{-}(x_{i},0)\] \[C_{}(x_{i},a_{i},y_{i}) =^{-}(x_{i},0)-y_{i},&a_{i}=1\\ ^{-}(x_{i},1)-y_{i},&\]

Taken together, these costs encourage the model to classify a sample as \(a=1\) or \(a=0\) in cases where it is certain that particular action would be best, and to defer cases where the expert seems to have made the correct decision (in the conservative case). An illustrative example of the costs choice can be found in Appendix A. Additionally, we demonstrate costs' coherence in Theorem 1.

### CAPO Estimation

From an algorithmic point of view, any method that yields upper and lower bounds on the CAPO given some degree of hidden confounding can be used to obtain the costs Section 5.2. As we will see in the next section, our theoretical results require bounds with certain generalization and validity properties to hold. In this work, we use the B-learner (Oprescu et al., 2023) for estimating the upper and lower bounds of the CAPO, as it has the properties needed for the theoretical analysis and shows good performance in practice, and being a meta-learner it can accommodate various base learners, including random forests and neural networks.

```
1:Data \(\{(x_{i},a_{i},y_{i}):i\{1,...,n\}\}\)
2:Use data \(\{(x_{i},a_{i},y_{i}):i\{1,...,n\}\}\) to learn the CAPO bounds: \((x_{i})=(^{+}(x_{i},0),^{-}(x_{i},0),^{+}(x_{i},1 )),^{-}(x_{i},1))\) //e.g. using B-learner (Oprescu et al., 2023)
3:Construct the _conservative_ costs based on the CAPO bounds: \[c_{i}(1) =C(x_{i},1)=^{+}(x_{i},0)-^{-}(x_{i},1)\] \[c_{i}(0) =C(x_{i},0)=^{+}(x_{i},1)-^{-}(x_{i},0)\] \[c_{i}() =C_{}(x_{i},a_{i},y_{i})=^{-}(x_{i},0)-y _{i},&a_{i}=1\\ ^{-}(x_{i},1)-y_{i},&\]
4:Calculate weights \(w_{i}^{j}=_{k\{0,1,\}}c_{i}(k)-c_{i}(j)\)
5:Learn a policy: \(_{^{}}_{i=1}^{n}_{j\{0,1, \}}-w_{i}^{j}(^{}(x_{i}))}{_{k\{ 0,1,\}}(_{k}^{}(x_{i}))}).\) output\(\) ```

**Algorithm 1** CARED Policy Learner - The Conservative Approach

## 6 Theoretical Guarantees

We present theoretical guarantees for CARED as follows: In 6.1 we show that the optimum of the surrogate loss function \(L_{CE}\) (eq. 4) agrees with the optimum of the machine-expert loss function \(L\) (eq. 3). Then, in 6.2 we show that the costs we use in \(L_{CE}\) are coherent, in the sense that minimizing them leads to a decision that is non-inferior to the decision either the expert or the machine would have made on their own. Finally, in 6.3 we give a generalization bound for the loss \(L_{CE}\).

### Consistency

**Corollary 1**.: \(L_{CE}\) _is convex in \(\) and is a consistent loss function for \(L\): Let \(=_{}[L_{CE}(,z;)]\), then \(=_{}L()\)._

This result is a straightforward adaptation of Proposition 1 of Mozannar and Sontag (2020), as their result is not sensitive to the particular choice of costs (B.0.1). It motivates using the surrogate loss function \(L_{CE}\) which is much more amenable to optimization than the original machine-expert loss \(L\)

### Costs Are Coherent

We now show that the costs \(C(x,0),C(x,1),C_{}(x,a,y)\) are coherent, in the sense that they indeed work as intended: a policy that minimizes them locally is always at least as good as (and indeed, in general better than) both the expert on their own and the machine on its own.

**Definition 1**.: [Bound Validity] For a sample \(x\) with corresponding potential outcomes \(Y(0)\) and \(Y(1)\), let \((x)=(^{+}(x,0),^{-}(x,0),^{+}(x,1)),^{-}(x,1))\) be the estimated CAPO bounds. Then \(\) is valid for \((Y(0),Y(1))\) if \(Y(a)[^{-}(x,a),^{+}(x,a)]\) for \(a\{0,1\}\).

Validity means that bounds indeed contain their respective potential outcomes. For example, Oprescu et al. (2023) prove that their bounds are valid on average.

**Theorem 1** (Costs are coherent).: _Let \((x_{i}) L_{CE}(,z_{i};(x_{i}))\), \(_{}\) the expert's policy, and \(_{}^{Q}(x_{i})\) the CAPO-based policy defined in 1. If \((x_{i})\) is valid for \((Y_{i}(0),Y_{i}(1))\), then \(Y((x_{i}))Y(_{}(x_{i})),\,Y (_{}^{}(x_{i}))}\)._

_Furthermore, under certain technical conditions on the distribution of \(Y(0),Y(1)\) and \(\), the inequality is strong with non-zero probability for each sample._

Theorem 1 shows that whenever the bounds include the true potential outcome, the action that minimizes our proposed loss function is at least as good as the action implied by the baseline \(_{}^{}\) policy, as well as the human expert policy.

### Generalization Bound

We now show the generalization bound for our machine-expert system loss. We start with assumptions, then we state the main theorem.

**Assumption 2** (Policy learners).: Let \(\) be the class of policies over which we optimize Equation (4). We assume the class \(\) is with restricted complexity, specifically \(_{n}()=O(})\), where \(_{n}()\) is the Rademacher Complexity of the policy class \(\). Classes that have this property include linear functions, logistic functions, decision trees with a bounded depth, and neural networks with weight decay or dropout Kallus and Zhou (2020).

**Assumption 3** (Policy Learner with Bounded Outputs).: Let \(\) and \(_{j}:\) be the raw output of the classifier \(\) corresponding to a class/action \(j\{0,1,\}\). We assume there exists a constant \(C_{}\) such that \(|_{j}| C_{}\) for all \(j\).

**Assumption 4** (Boundedness of the Outcomes).: \(Y\) is bounded, i.e. \(|Y| C_{Y}\) for \(C_{Y}>0\).

**Assumption 5**.: [Rates for ERM CAPO Bounds Estimators] The CAPO bounds estimators \(^{}(x,a)\) for \(a\{0,1\}\) and \(\{+,-\}\) satisfy: \(\|^{}(x,a)-Y^{}(x,a)\| O_{p}(n^{-1/(2+r)})\) with \(0<r<2\).

Assumption 5 implies that the convergence rate of the \(L_{2}\) norm of the estimation error of the CAPO bounds converges not too slowly (in probability).Notably, the B-Learner bound estimates satisfy Assumption 5 under some assumption on the class of policy learners and the nuisance estimators, according to Corollary 1 from Oprescu et al. (2023).

We now give a generalization bound on the loss of the joint machine-expert system:

**Theorem 2** (Generalization Bound).: _Given a policy class \(\) satisfying Assumption 2, Assumption 3 with a constant \(C_{}\), Assumption 4 with a constant \(C_{Y}\), and Assumption 5 with \(0<r<2\)._

_Let \(\), be a policy, and let \(Q,\) be the CAPO bounds and the estimated CAPO bounds respectively. Then there exists a constant \(C>0\) such that with a probability of at least \(1-\) the following holds:_

\[L_{D}(;Q)-L_{S}(;) 2_{n}()+24 C_{} (C_{Y}}+C(n^{-1/(2+r)}))\] (5)

_where \(L_{S}(;)=_{i=1}^{n}L_{CE}(,z_{i};(x_{i}))\) is the training loss, and \(L_{D}(;Q)=_{z p(z)}[L_{CE}(,z;Q(x))]\) is the expected loss for the combined machine-expert system loss in 4, and \(_{n}()\) is the Rademacher Complexity of the policy class \(\)._Experiments

Here we examine the utility of CARED by conducting experiments on synthetic and semi-synthetic data in Section 7.1 and Section 7.2, respectively. Further details about the experiments, datasets, models, and hyper-parameters can be found in Appendix C.

Our main comparison is to Gao and Yin (2023)'s method **(ConfHAI)** that allows for a bounded degree of confounding in addition to allowing the option of deferral to a human expert. They learn a policy by optimizing a minimax reweighting-based risk estimate over an uncertainty set around the observed propensities. The uncertainty sets are determined by the MSM assumption, which is the same assumption we employ to bound the degree of hidden confounding. Another baseline we consider is Kallus and Zhou (2020)'s method **(CRLogit)** which proceeds under a similar approach and allows for a bounded degree of confounding, but does not allow deferral to a human. Additionally, we evaluate all methods against the following baselines: **Oracle Policy** which is the best policy that assigns for each patient the true best treatment. In both experiments, this policy is available to us, as we have the true potential outcomes. **Current Expert/ Baseline Policy** this is the default policy that we refer to in cases of deferral. Typically, it is the policy of the current expert, but it can be any other policy of our choice. **Pessimistic Policy**: Using the Equation (2) policy with the bounds \(\) given by the B-learner Oprescu et al. (2023). **B-Learner Policy**: Using the \(_{}^{}\) policy of Equation (1) with the bounds \(\) given by the B-learner (Oprescu et al., 2023). We use the exact same \(\) in Algorithm 1, and in the B-learner and pessimistic policies. **Random Deferral Policy**: this is a variant of the B-Learner policy which introduces a different approach to deferral, where samples are deferred randomly based on a specified deferral rate.

### Synthetic data

In this experiment, we replicate the study from Gao and Yin (2023) using synthetic data, comparing our method to **ConfHAI** and **CRLogit**. Since this experiment is measuring regret, we follow Gao et al. (2021) and compare to a **Baseline Policy** that assigns treatment \(a=0\) for all patients and is denoted by \(_{0}\). In this experiment lower outcomes are better.

**Data** The data is generated according to the following data generation process:

\[(0.5), X((2-1)_{x},I_ {5}),\] \[U=[Y(1)<Y(0)],\] \[Y(A)=_{0}^{}x+[A=1]_{treat}^{}x+0.5 [A=1]+++\]

where \(_{0}=[0,0.5,-0.5,0,0]\), \(_{treat}=[-1.5,1,-1.5,1,0.5]\), \(_{x}=[-1,0.5,-1,0,-1]\), \(=2.5\), \(=-2\), \(=1.5\), and \((0,1)\). The nominal propensity is logistic by \(X\), \(e(X)=(^{}X)\) with \(=[0,0.75,-0.5,0,-1,0]\). The confounder is denoted by \(U\), and the true propensity score is given by: \(e(X,U)=U+1-U)e(X)}{[1+2(_{0}-1)e(X)-_{0}]U+ _{0}+(1-_{0})e(X)}\), with the true \(_{0}\), such that \(log(_{0})=2.5\).

**Experiment** We replicate the experiment from Gao and Yin (2023) and run \(10\) trials, with different instances of the above data, a train data size of \(2000\), and test data of size \(10000\). For each trial, we vary the sensitivity parameter \(\) in \(\{0.01,0.5,1,1.5,2,2.5,3.3,5,4\}\), corresponding to various levels of assumed hidden confounding. We compare the _policy regret_ for the returned policy for each method relative to the **Baseline Policy**. In addition, we report the policy regret for the human expert in the dataset **(Human's Policy)** which is reflected by the variable \(A\) in the dataset. As for the CARED policy, we obtain it by applying Algorithm 1 with a logistic policy implemented as a single-layer MLP network.

**Results** In Figure 1 we see that CARED outperforms all other methods, specifically improving over the expert for all \(\) values. In contrast, the **ConfHAI** and **CRLogit** improve over the expert for a limited range of values of \(\), which is for a range around the true value of the sensitivity parameter \(_{0}\) showed in the plot, and perform noticeably worse than the expert for many \(\) values when the \(\) is mis-specified. In contrast, **CARED** shows robustness to all \(\) values, making it a safer choice, as correctly specifying \(\) is challenging (McClean et al., 2024).

### IHDP Hidden Confounding

In this experiment, we aim to demonstrate how our method can adapt to the human expert using a semi-synthetic dataset: the IHDP hidden confounding dataset.

**Dataset** The hidden-confounding version of the IHDP dataset (Hill, 2011) was introduced by Jesson et al. (2021). The Infant Health and Development Program (IHDP) dataset (Hill, 2011) is a dataset consisting of real covariates and a treatment that were collected from an RCT that targeted low-birth-weight, premature infants. The treatment was providing both intensive high-quality child care and home visits from a trained provider, while the outcomes were simulated according to the response surface B described by Hill (2011). Jesson et al. (2021) induced hidden confounding onto the dataset by hiding the \(x_{9}\) covariate; however, the response surface B from Hill (2011) is still used to generate the observed outcomes. In this dataset higher outcomes are better, thus we build the loss function using the appropriate set of costs for this assumption.

**Semi-Synthetic Expert** (Current Expert) We design a semi-synthetic expert, based on the original observed expert's policy, and the Oracle policy. The new semi-synthetic expert is designed as follows: when the feature \(x_{17}\) -"worked during pregnancy" receives the value \(1\), then the new expert is identical to the Oracle policy, and otherwise, it is identical to the original expert. This way, the new expert is perfect when \(x_{17}\), which happens in probability \(0.59\). See details in Appendix C.2.1.

**Experiment** We conduct this experiment on the modified IHDP Hidden Confounding consisting of tuples \((X,A^{},Y^{})\), where the \(A^{}\) is the new expert, and the \(Y^{}\) is the outcome corresponding to the expert \(A\). We generate \(1000\) realizations of the dataset. For each realization, we train the policy model for different values of the causal uncertainty parameter \(\) and calculate: the rate of the samples deferred to the expert, and the policy value of the learned policy. We then plot the average policy value per causal uncertainty level - the parameter \(\) in Figure 1(a), and the average policy value per average deferral rate over all trials in Figure 1(b). As for our method, we obtain our policy by applying Algorithm 1 with a logistic policy implemented as a single-layer MLP network.

**Results** In Figure 1(a) We observe that CARED consistently improves upon the expert's policy, yielding a higher average policy value across all levels of the causal uncertainty parameter, \(\). Notably, it outperforms the baseline methods for reasonable values of \(\), and achieves a policy value closest to that of the optimal Oracle Policy. As in the previous experiment, CARED demonstrates greater robustness to variations in the assumed level of confounding. For high \(\) values, CARED's performance trends toward that of the expert policy, which is expected, as larger \(\) values result in less informative and thus less reliable CAPO intervals. In contrast, ConfHAI only begins to improve when the assumed confounding level closely matches the true sensitivity parameter.

These results highlight the robustness and reliability of our policy, showing that it performs well even when the sensitivity parameter is misspecified by the data analyst. Moreover, when the sensitivity parameter reaches very high levels, CARED avoids unnecessary risk by converging towards the expert policy, reflecting its conservative response to high causal uncertainty.

Figure 1: Synthetic Data: Policy regret, lower policy regret is better. x-axis is levels of hidden confounding according to the MSM model. The true \(_{0}\) is reported as a black vertical line. _Human’s Policy_ is the human expert’s choices (\(A\)) as observed in the data. _CRLogit Policy_(Kallus and Zhou, 2020): learn a policy with an IPW approach under hidden confounding, without deferral. _ConfHAI Policy_(Gao and Yin, 2023) similarly learns a policy with IPW approach under hidden confounding with deferral. _CARED_: our proposed method _Pessimistic Policy_ and _B-Learner Policy_ are based on CAPO bounds from the B-Learner (Oprescu et al., 2023) and are defined in Equation (2) and Equation (1), respectively. _Oracle Policy_ assigns the best true treatment to each patient.

In Figure 1(b) we compare our method only to baselines that incorporate deferral. Here, instead of regret, we assess the policies by their average policy value across all trials, and we plot the performance according to the average deferral rate over all trials. Our results show that our policy consistently outperforms the other methods at equivalent deferral rates.

The peak of the plot of the CARED Policy is when both the model and the expert work in collaboration and take advantage of the strengths of both the ML model and the expert. This happens at a deferral rate that is close to \( 0.6\), which is almost precisely the percentage of the cases where the expert does as well as the oracle policy according to how the expert was designed. This indicates that our model learns the strength of the expert, and knows when to defer to the expert. While ConfHAI defers only a small fraction of samples on average, which might indicate that this method does not learn the weaknesses and strengths of the expert.

## 8 Discussion

In this paper we proposed CARED: a method for learning policies from observational data where the model can recommend a treatment or defer to an expert. When learning to act from observational data which includes experts' actions, hidden confounders are by necessity factors that influenced the experts' decisions, and are thus available to them even though they are unavailable to the model. This makes our setting pertinent to the problem of _safely_ learning to recommend actions based on observational data where the actions were taken by human experts, as is the case in many medical and legal settings, for example. CARED thus mitigates some of the risk of learning causal models from observational data. A further advantage is that we might not need to know the true \(\) for the system to be useful: instead we might wish to calibrate the rate of deferral instead, as that might be the more practical constraint the system faces, in terms of human labor vs. the joint system's policy value.

We showed both theoretically and by experiments in synthetic and semi-synthetic data that our method outperforms relevant baselines for this task, and can combine in a synergistic manner the expert's and machine learning model's capabilities.

**Limitations and future work** Our current method requires access to the experts actions in the observational data; it cannot accommodate directly a different expert, since we cannot know the potential outcomes corresponding to how that new expert would have acted. A further limitation is the assumption that at test time the experts would behave the same for the deferred cases as they would have before system deployment. Realistically, deploying an action recommendation system might change the experts' behavior more broadly. Accounting for this would require testing and modeling the experts behavior in such conditions. Future work will explore this more dynamic setting, taking into account the ongoing interactions and learning between the human expert and the system.

Figure 2: HDP Hidden Confounding: Figure 1(a) shows policy value for different levels of allowed hidden confounding in the data according to the MSM model Assumption 1. The x-axis represents different values of the uncertainty parameter \(\), and the true \(_{0}\) is reported as a black vertical line. Figure 1(b) shows policy value for different rates of deferral. The x-axis represents different levels of practitioner caution by varying the percentage of recommendations deferred. The methods shown here are the same as in Figure 1, in addition to _Random Deferral Policy_ that refers a randomly chosen fraction of samples to the expert at each deferral rate.

Acknowledgments

We would like to express our gratitude to our colleague, Rom Gutman, for his valuable insights and support throughout this work. We also thank Angela Zhou and Ruijiang Gao whose methods we replicated and compared in our evaluations, for their their helpful responses to our questions about implementing their methods. Additionally, we extend our appreciation to Hussein Mozannar for his generous assistance in clarifying aspects of his work, which served as the basis for our approach. We would like to thank the anonymous reviewers for useful discussion and feedback. MG and US were supported by ISF grant 2456/23.