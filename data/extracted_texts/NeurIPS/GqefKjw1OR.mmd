# Sparse Bayesian Generative Modeling

for Compressive Sensing

 Benedikt Bock, Sadaf Syed, Wolfgang Utschick

TUM School of Computation, Information and Technology

Technical University of Munich

{benedikt.boeck,sadaf.syed,utschick}@tum.de

###### Abstract

This work addresses the fundamental linear inverse problem in compressive sensing (CS) by introducing a new type of regularizing generative prior. Our proposed method utilizes ideas from classical dictionary-based CS and, in particular, sparse Bayesian learning (SBL), to integrate a strong regularization towards sparse solutions. At the same time, by leveraging the notion of conditional Gaussianity, it also incorporates the adaptability from generative models to training data. However, unlike most state-of-the-art generative models, it is able to learn from a few compressed and noisy data samples and requires no optimization algorithm for solving the inverse problem. Additionally, similar to Dirichlet prior networks, our model parameterizes a conjugate prior enabling its application for uncertainty quantification. We support our approach theoretically through the concept of variational inference and validate it empirically using different types of compressible signals.

## 1 Introduction

Research in CS has shown that it is possible to reduce the number of measurements far below the one determined by the Nyquist sampling theorem while still being able to extract the information-carrying signal from the acquired observations. The fundamental problem in CS is an ill-posed linear inverse problem, i.e., the goal is to recover the signal \(^{*}^{N}\) of interest from an under-determined set of measurements \(^{M}\) with \(M N\), related by

\[=^{*}+,\] (1)

where \(^{*}\) is compressed by the measurement matrix \(\) and potentially corrupted by additive noise \((,_{n}^{2}\,)\). Since the under-determined observation \(\) does not carry enough information alone to faithfully reconstruct \(^{*}\), additional prior (or model) knowledge about \(^{*}\) is required to make the inverse problem "well-posed". Classical CS algorithms such as Lasso regression or orthogonal matching pursuit (OMP) address this problem by incorporating the model knowledge that \(^{*}\) is sparse or compressible with respect to some dictionary . Nowadays, modern deep learning (DL)-based approaches such as unfolding algorithms, generative model-based CS and un-trained neural networks (NNs) expand the possibilities by learning prior knowledge from a training set or designing the network architecture to be biased towards a certain class of signals . These approaches typically require a (potentially large) training set of ground-truth data samples, or their architecture is specifically biased towards natural images. However, in many applications, ground-truth training data might not be easily accessible. In, e.g., electron microscopy, the amount of electron dose has to be restricted to not induce damage on the probe resulting in low-contrast noisy data samples . The sensors in wearable electrocardiography (ECG) monitoring devices generally provide noisy signals with artifacts , which limits the ability to learn from patient-specific data in real-world settings. Another example is the wireless 5G communication standard, where mobile users receive compressed and noisy so-called channel observations on a frequent basis (cf. ) while acquiring ground-truthchannel information requires costly measurement campaigns. Thus, in many applications, it is either impossible or prohibitively expensive to collect lots of ground-truth training data while corrupted data is readily available. This highlights the necessity for methods that can learn from corrupted data samples.

In this paper, we propose a new learnable prior for solving the inverse problem (1), which can learn from only a few compressed and noisy data samples and, thus, requires no ground-truth information in its training phase. Additionally, it applies to any type of signal, which is compressible with respect to some dictionary. Our approach shares similarities with generative model-based CS [4; 11]. There, a generative model is first trained to capture the exact underlying prior distribution \(p()\) of the signal \(^{*}\) of interest. It then serves as probabilistic prior to regularize the inverse problem (1). Similarly, classical CS algorithms like Lasso regression also impose a probabilistic prior on the sparse representation of \(^{*}\) with respect to some dictionary . In contrast to modern generative models, however, these priors do not have any generation capabilities but solely bias the inverse problem (1) towards sparse solutions. This observation indicates that a probabilistic prior does not necessarily need to capture the exact prior distribution \(p()\) to effectively regularize (1). The proposed model in this work builds upon this insight and forms a trainable but simultaneously sparsity-inducing prior. For that, we aim to combine the adaptability of generative models to training data with the property of many types of signals \(^{*}\) to be compressible with respect to some dictionary. As a result, our model learns statistical information in the signal's sparse/compressible domain. Examples of signals with a specific statistical structure in their compressible representation include piecewise smooth functions and natural images, whose wavelet coefficients approximately build a connected sub-tree or wireless channels, which are burst-sparse in their angular domain [13; 14].

**Related Work.** Early work on CS, which considers statistical structure in the wavelet domain of images, is given in [15; 16]. Based on the theoretical foundation in  and the concept of SBL [18; 19], these papers introduce a hierarchical Bayesian model, which is used to apply variational inference and Markov chain Monte Carlo (MCMC) posterior sampling to solve (1). Training Gaussian mixture models (GMMs), i.e., classical generative models, from compressed image patches of one or a few images has been analyzed in [20; 21; 22; 23]. In this line of research, however, the GMM is fit directly in the pixel domain. Compressive dictionary learning represents a different line of research aiming to learn the dictionary from solely compressed data [24; 25; 26; 27], and strongly bases on the dictionary learning method K-SVD . More recently, variational autoencoders (VAEs) and generative adversarial networks (GANs) have been studied in the context of CS [4; 11]. There, the VAE/GAN is used to solve the inverse problem (1) by constraining the signal \(^{*}\) of interest to lie in the range of the generative model instead of being sparse with respect to some dictionary. In this context, AmbientGAN as well as CSGAN are extensions that loosen up the training set requirements and can learn from corrupted data [29; 30]. Another related topic is the ability of some generative models, i.e., diffusion models, VAEs and GMMs, to provide an approximation of the conditional mean estimator (CME) [31; 32; 33]. In the case of the latter two, the CME is represented as a tractable convex combination of linear minimum mean squared error (MSE) estimators by exploiting their conditional Gaussianity on a latent space that determines these estimators' means and covariances.

**Our main contributions are as follows:**

* We introduce a new type of sparsity-inducing generative prior for the inverse problem (1), which differs from classical CS algorithms due to its ability to learn from data. On the other hand, it also differs from other modern NN-based approaches due to its ability to promote sparsity in the signal's compressible domain. Moreover, it can learn from a few corrupted data samples and, thus, requires no ground-truth information in its training phase.
* We theoretically underpin our approach by proving that its training maximizes a variational lower bound of a sparsity-inducing log-evidence.
* Building on the notion of conditional Gaussianity, we introduce two specific implementations of the proposed type of prior based on VAEs and GMMs, which do not require an optimization algorithm in their inference phase and come with computational benefits.
* By exploiting the shared property with Dirichlet prior networks to parameterize a conjugate prior, we demonstrate how our approach can be applied for uncertainty quantification.
* We validate the performance on datasets containing different types of compressible signals.1

## 2 Background and Method

Notation.The operations \(^{-1}\), \(}\) and \(||^{2}\) denote the respective element-wise operation for the vector \(\). Moreover, \(()\) represents the vectorized diagonal of the matrix \(\), while \(()\) denotes the diagonal matrix with the vector \(\) on its diagonal.

### Problem Formulation

We consider the typical CS setup, in which we measure \(N\)-dimensional ground-truth samples \(_{i}\) by a known measurement matrix \(^{M N}\) (or \(_{i}^{M N}\)) with \(M N\), where each observation is potentially corrupted by noise \(_{i}\) drawn from additive white Gaussian noise (AWGN) \((,_{n}^{2}\,)\). We assume all \(_{i}\) to be compressible with respect to a known dictionary matrix \(^{N S}\), i.e., \(_{i}=_{i}+_{i}\) with \(_{i}=_{i}\) and \(_{i}^{S}\) being approximately sparse. All \(_{i}\) are assumed to be independent and identically distributed (i.i.d.), i.e., \(_{i} p()\), where \(p()\) is unknown with \(\) exhibiting non-trivially dependent entries. Typical signals which fit into this category are, e.g., natural images, piecewise smooth functions, and wireless channels (cf. Section 1). Our approach in this work allows to either solely have access to corrupted training observations \(=\{_{i}\}_{i=1}^{N_{t}}\) or training tuples with ground-truth information \(=\{(_{i},_{i})\}_{i=1}^{N_{t}}\) or \(=\{(_{i},_{i})\}_{i=1}^{N_{t}}\). We first train the proposed model using \(\) (or, alternatively, \(\) or \(\)) to serve as an effective prior for (1). Our goal is then to estimate a ground-truth signal \(^{*}\) of a newly observed \(\). We also define \(=\{_{i}\}_{i=1}^{N_{t}}\) and \(=\{_{i}\}_{i=1}^{N_{t}}\).

### Sparse Bayesian Learning for Compressive Sensing

In SBL for CS, the idea for solving the inverse problem (1) is to assign a parameterized prior to \(^{*}\), i.e., the compressible representation of the signal \(^{*}\) of interest with \(^{*}=^{*}\). It assumes

\[|^{*} p(|^{*})=(; ^{*},^{2}\,),\ \ ^{*} p_{}()=(;,( )).\] (2)

Given a single observation \(\), the parameters \(\) (and sometimes \(^{2}\)) are estimated by an expectation-maximization (EM) algorithm maximizing the corresponding log-evidence \( p_{}()\) implicitly defined by (2). After that, it is utilized that \(p_{}()\) forms a conjugate prior of \(p(|^{*})\) resulting in a closed-form posterior \(p_{}(|)\) providing all necessary information to estimate \(^{*}\). In , a variational interpretation of SBL is given, addressing why this approach yields sparse results, even though \(p_{}()\) does not inherently promote sparsity. It is shown that there exists a \(C>0\) such that for all \(>\) and \(\)

\[p_{}() t()=C_{i=1}^{S}|}.\] (3)

The function \(t()\), however, is a well-known improper but sparsity-inducing prior, used as a non-informative prior for scale parameters . Let another statistical model be given by \(p(|^{*})\) (cf. (2)) and prior \(t()\) instead of \(p_{}()\) with implicitly defined log-evidence \(^{(s)}()\). Due to \(t()\) being improper, the log-evidence \(^{(s)}()\) forms a not normalized but valid log-likelihood. Moreover, this model is sparsity-inducing due to the sparsity-promoting characteristics of \(t()\). Based on (3), it holds that \(^{(s)}() p_{}()\) and, thus, \( p_{}()\) can be embedded in variational inference, forming a tractable variational lower bound of an intractable log-evidence \(^{(s)}()\) of actual interest. Moreover, applying the EM algorithm to (2) is "evidence maximization over the space of variational approximations to a model (i.e., \(p(|^{*})\) and \(t()\)), with a sparse, regularizing prior" .

### Gaussian Mixture Models and Variational Autoencoders

GMMs and VAEs are generative models aiming to learn an unknown distribution \(p()\) from a training set \(\). Both models represent \(p()\) as the marginalization with conditionally Gaussian \(p(|)\) and an additional latent variable \(k\) (or \(\)) [35; 36; 37], i.e.,

\[p^{}()=_{k=1}^{K}p(k)p(|k)=_{k=1} ^{K}_{k}(;_{k},_{k}),\] (4) \[p^{}()= p()p_{}(| )=(;,)( ;_{}(),_{}()).\] (5)The tunable parameters (\(\{_{k},_{k},_{k}\}_{k=1}^{k}\) for GMMs and \(\) for VAEs) are learned by optimizing the model's log-evidence \(_{i} p^{(f)}(_{i})\) (\(f\{\}\)) over \(\). In the case of GMMs, this is typically done by an EM algorithm alternating between the so-called e- and m-step. The e-step determines the closed-form posteriors \(p_{t}(k|_{i})\) (for all \(i\)) via the Bayes rule using the model's parameters in the \(t\)th iteration. The m-step then updates the model's parameters by maximizing \(_{i}_{p_{t}(k|_{i})}[ p(_{i},k)]\). In case of VAEs, however, the posterior \(p_{}(|)\) (and \( p^{()}()\)) are intractable and the EM algorithm cannot be applied. Therefore, a tractable distribution \(q_{}(|)=(;_{}(), (_{}^{2}())\) with variational parameters \(\) is introduced, which approximates \(p_{}(|)\), and \(_{}()\) and \(_{}^{2}()\) are generated by a NN encoder. Equivalently, \(_{}()\) and \(_{}()\) are generally realized by a NN decoder. The objective to be maximized is the evidence lower bound (ELBO) \(L(,)\) serving as a tractable lower bound for the intractable log-evidence \(_{i} p_{}(_{i})\), i.e.,

\[_{_{i}} p_{}(_{i}) L(,)=_{_{i}}( p_{}( _{i})-_{}(q_{}(|_{i})||p_{}(|_{i})))\] (6)

with \(_{}()\) being the Kullback-Leibler (KL) divergence. Generally, the GMM's and VAE's training critically depends on iteratively characterizing and updating their posteriors \(p_{t}(k|_{i})\) and \(q_{}(|_{i})\).

### Proposed Method

The goal of this section is to derive a class of generative models, for which we can guarantee that, on the one hand, it is sparsity-inducing, but on the other hand, it is trainable and can learn from solely compressed and noisy observations \(\) resulting in an effective probabilistic prior for (1).

To incorporate the bias towards sparsity, we start with SBL discussed in Section 2.2 and combine it with the VAE's and GMM's main principle for their adaptability to complicated distributions, i.e., introducing a latent variable \(\) (or \(k\)) on which we condition with a parameterized Gaussian (cf. (4) and (5)).2 More specifically, we exploit the Gaussianity of \(p_{}()\) in (3) and modify it to a parameterized Gaussian conditioned on some latent variable \(\) with arbitrarily parameterized \(p_{}()\) while explicitly keeping its mean zero and its covariance matrix diagonal, i.e., \(p_{}(|)=(;,(_{}()))\). The resulting set of statistical models referred to as sparse Bayesian generative models, is given by

\[| p(|)=(;,^{2} }),\ \ | p_{}(|)=(;, (_{}())),\ \  p_{}().\] (7)

Training principle.Our proposed training scheme is independent of specific realizations for \(_{}()\) and \(p_{}()\), which is why they are kept general in this section. Specific parameterizations are discussed in Section 3.2 and 3.3. The training goal is to maximize the model's log-evidence \(_{i} p_{,}(_{i})\) implicitly defined by (7) over a training set of compressed and potentially noisy observations \(\). For that, we rely on the main training principles for statistical models including latent variables, i.e., the EM algorithm and variational inference (cf. Section 2.3). A key requirement of these principles is the ability to track and update the model's posterior (i.e., \(p_{,}(,|)\) for (7)) or approximations of it over the training iterations (cf. Section 2.3). In classical SBL, the prior distribution \(p_{}()\) forms a conjugate prior of \(p(|)\) (cf. (2)) and, thus, the posterior \(p_{}(|)\) is tractable in closed form. We utilize this property by observing that conditioned on some \(\), (7) coincides with the classical SBL model. Consequently, \(|\) is a conditioned conjugate prior of \(|\) in (7) with tractable Gaussian posterior \(p_{}(|,)\), whose closed-form covariance matrix and mean

\[_{}^{|,}()=(} ^{}^{}+(_{ }^{-1}()))^{-1},\ _{}^{|,}()=} _{}^{|,}()^{}^{ }\] (8)

equal those in SBL . The equivalent formulas for \(^{2}=0\) are given in Appendix C. By considering the decomposition \(p_{,}(,|)=p_{}(|, )p_{,}(|)\), we conclude that our proposed set of statistical models in (7) exhibits posteriors, which are partially tractable in closed form independent of any specifics of \(_{}()\) and \(p_{}()\). The remaining \(p_{,}(|)\) resembles the standard GMM's and VAE's posterior, and we can either apply the EM algorithm or variational inference to maximize the corresponding log-evidence. Both will be discussed in Section 3.2 and 3.3, respectively.

Estimation scheme.The goal after the training is to use the learned statistical model in (7) for regularizing the inverse problem (1) and estimating \(^{*}\) from a newly observed \(\). Generally, the CME \([|]\) is a desirable estimator due to its property of minimizing the MSE. We utilize insights from [33; 23], which derive approximate closed forms of the CME using VAEs and GMMs. More precisely, by using the law of total expectation, we approximate the CME by

\[[|]=[[|,]|]=\,[[|, ]|]\,_{p_{,}(|)}[|,]|].\] (9)

The inner expectation is given by the learned \(_{}^{s|,}()\) in (8), while, depending on its specific characteristics, \(p_{,}(|)\) also exhibits a closed form or a variational approximation has been learned during training (cf. Section 3.2), with which we approximate the outer expectation by a Monte-Carlo estimation. Based on the perception-distortion trade-off, the CME is not optimal from a perceptual point , and deviating estimators from the CME approximation might be beneficial. More detailed descriptions of the CME approximation as well as further estimators based on the specific implementations in Section 3.2 and 3.3 are given in Appendix G.

## 3 Theoretical Analysis and Specific Parameterizations

### Sparsity Guarantees

In Section 2.4, we motivate constraining \(p_{}(|)\) to be a zero mean conditional Gaussian with diagonal covariance matrix by SBL and its sparsity-inducing property. In the following, we rigorously show that constraining \(p_{}(|)\) in this manner is sufficient to maintain the sparsity-inducing property for any statistical model following (7) despite the additionally included latent variable \(\). More precisely, we show that any statistical model in (7) with some specified parameterized \(p_{}()\) and \(_{}()\) exhibits a log-evidence that is interpretable as a variational lower bound of a sparsity-inducing log-evidence. For that, we establish the following theorem.

**Theorem 3.1**.: _Let \(p_{}(|)=(;,(_{}())\) (i.e., it is defined according to (7)), let \(\) be either continuous or discrete and finite, and let \(_{}()>\). Then, there exists a constant \(C>0\) such that for all \(,,\) with any arbitrary distribution \(p_{}()\)_

\[p_{,}()= p_{}()( ;,(_{}())) t()=C_{i=1}^{N}|}.\] (10)

_The integral corresponds to a summation for discrete and finite \(p_{}()\)._

The proof is given in Appendix A. Based on Theorem 3.1, it holds that

\[(^{(s)}() p_{,}() ),\] (11)

with \(^{(s)}()\) being the log-evidence of \(| p(|)\) and the improper but sparsity-promoting prior \(t()\), whereas \( p_{,}()\) is implicitly defined by (7). Consequently, we can interpret the maximization of \( p_{,}()\) over \((,)\) as the evidence maximization over the space of variational approximations to a model with a sparsity-inducing and regularizing prior. However, contrary to classical SBL, we have the additional degree of freedom to choose the specifics of \(_{}()\) and \(p_{}()\) without any constraint while maintaining the connection to sparsity.

### Compressive Sensing VAE

The integral version of \(p_{,}()\) in (10) strongly resembles the VAE's decomposition of \(p()\) in (5). In fact, by constraining \(p_{}()=p()=(;,)\), the distribution \(p_{,}()=p_{}()\) corresponds to a subset of all possible distributions covered by the VAE decomposition in (5). This motivates to choose \(p_{}()\) in this exact manner and realize \(_{}()\) as the output of a NN decoder. Generally, we aim to optimize the log-evidence \(_{i} p_{}(_{i})\) in (11) with respect to \(\) solely given compressed and noisy observations \(\). However, equivalent to VAEs, the log-evidence \(_{i} p_{}(_{i})\) is intractable for \(p()=(;,)\), which is why a tractable lower bound has to be derived. A tractable lower bound on the log-evidence of a statistical model with latent variables is obtained by subtracting the KL divergence between the conditional distribution of the latent variables given the observationsand a tractable variational distribution from the log-evidence (cf. (6)). For the model in (7) and i.i.d. training data, this results in

\[_{_{i}} p_{}(_{i}) L _{(,)}^{(CVAE)} =_{_{i}} p_{}(_{i})- }(q_{}(,|_{i})||p_{} (,|_{i}))\] (12) \[=_{_{i}}}_{q_{ }(,|_{i})}[_{i}|)p_{ }(|)p()}{q_{}(,|_{i})} ],\] (13)

where the derivation of (13) from (12) is given in Appendix B. Based on insights from the training principle explained in Section 2.4, the variational posterior \(q_{}(,|_{i})\) in (13) can be simplified to \(q_{}(,|_{i})=p_{}(|,_ {i})q_{}(|_{i})\) with closed-form \(p_{}(|,_{i})\) and only requires variational parameters \(\) for \(q_{}(|_{i})\) to be tractable. As a result, the adapted ELBO \(L_{(,)}^{(CVAE)}\) equals

\[_{_{i}}}_{q_{ }(,|_{i})}[_{i}|)p_{ }(|)p()}{p_{}(|,_{i} )q_{}(|_{i})}]=_{_{i}} (}_{q_{}(|_{i})}[ }_{p_{}(|,_{i})}[ }_{p_{}(|,_{i})}[ }_{q_{}(|,_{i})}[ }_{q_{}(|,_{i})}[ }_{p_{}(|,_{i})}] ...\] (14)

To ensure the training of standard VAEs to be tractable, \(}_{q_{}(|_{i})}[]\) is generally approximated by a single-sample Monte-Carlo estimation . We build on the same strategy and approximate (14) by

\[L_{(,)}^{(CVAE)}\!\!_{_{i}}}_{p_{}(|_{i},_{i})}[  p(_{i}|)]-}(q_{}(|_{ i})||p())-}(p_{}(|}_{i}, _{i})||p_{}(|}_{i}))\] (15)

with \(}_{i} q_{}(|_{i})\) and \(}_{p_{}(|}_{i},_{ i})}[ p(_{i}|)]\) exhibiting a closed-form solution detailed in Appendix D. In addition, \(}(p_{}(|}_{i},_{i})|| p_{}(|}_{i}))\) is the tractable KL divergence of two multivariate Gaussians, and \(}(q_{}(|_{i})||p())\) matches the KL divergence from standard VAEs (cf. ). Both are specified in Appendix E. The adapted ELBO in (15) resembles the classical ELBO of ordinary VAEs with a modified reconstruction loss and an additional KL divergence. Equivalent to ordinary VAEs, we model \(q_{}(|_{i})=(;_{}( _{i}),(_{}^{2}(_{i})))\) and realize \((_{}(),_{}^{2}())\) by a NN encoder, and \(_{}()\) by a NN decoder. The adapted ELBO in (15) forms a differentiable and variational approximation of the model's log-evidence \(_{i} p_{}(_{i})\). Based on Theorem 3.1 and (11), it holds that

\[_{_{i}}^{(s)}(_{i})_{_{i} } p_{}(_{i}) L_{(,)}^{ (CVAE)},.\] (16)

Thus, \(L_{(,)}^{(CVAE)}\) serves as a variational lower bound of a sparsity-inducing log-evidence. We denote the resulting VAE as Compressive Sensing VAE (CSVAE), and its schematic is presented in Fig. 1. It resembles the vanilla VAE with the main difference that the encoder takes a compressed observation \(\) as input and the decoder solely outputs conditional variances \(_{}(})\) of \(|\). In case of varying measurement matrices \(_{i}\) for each training, validation and test sample, we use the least-squares estimate \(}_{i}^{(LS)}=_{i}^{ T}(_{i}_{i}^{ T})^{-1} _{i}\) instead of \(_{i}\) as encoder input. The CSVAE's training with ground-truth data and pseudo-code for training are outlined in Appendix H and N (cf. algorithm 1).

### Compressive Sensing GMM

By considering discrete and finite \(p_{}()\) in (7), i.e., \(p_{}(=k)=p_{}(k)=_{k}\), we observe that the resulting \(p_{,}()\) strongly resembles the GMM's decomposition of \(p()\) in (4). This motivates to choose \(p_{}()\) in exactly this manner and \(p_{}(|)=p(|k)=(;, (_{k}))\), i.e., \(\) is modelled as GMM with zero means and diagonal covariance matrices. Equivalent to CSVAEs in Section 3.2,

Figure 1: A schematic of the sparsity-inducing CSVAE.

the distribution \(p(|k,)\) contained in the model's posterior \(p(k,|)=p(|k,)p(k|)\) exhibits a closed-form solution (cf. (8)). Moreover, due to the linear relation between \(\) and \(\) in (7) and the assumption that \(|k\) is Gaussian, \(|k\) is also Gaussian with zero mean and covariance matrix

\[_{k}^{|k}=(_{k})^{}^{}+^{2}\,}\,.\] (17)

and \(p(k|)\) is computable in closed form by Bayes, i.e., \(p(k|)=(p(|k)p(k))/(_{k}p(|k)p(k))\). Thus, \(p(k,|)\) exhibits a closed form, and an EM algorithm can be applied, whose e-step coincides with computing \(p(k,|)\). Based on the extended EM algorithm in , where the authors fit a vanilla GMM (4) in the pixel domain using compressed image patches, we formulate an m-step tailored to our model (7). We denote the resulting model as Compressive Sensing GMM (CSGMM). The m-step aims to update the CSGMM's parameters \(\{_{k},_{k}\}\) by optimizing \(_{i}_{p_{t}(k,|_{i})}[ p(_{i},,k)]\), whose closed-form solution is given in the following lemma.

**Lemma 3.2**.: _Let the statistical model in (7) be given with discrete \(p_{}(=k)=p(k)=_{k}\) and \(_{}()=_{k}\), and let \(\) contain i.i.d. noisy and compressed observations \(_{i}\). Given \(p_{t}(k|_{i})\) and \(p_{t}(|k,_{i})=(;_{k,t}^{|_{i },k},_{k,t}^{|_{i},k})\) in the \(t\)th iteration of an EM algorithm, the updates of \(\{_{k},_{k}\}\)_

\[_{k,(t+1)}=_{i}}p_{t}(k|_{i} )(|_{k,t}^{|_{i},k}|^{2}+(_{k,t}^{| _{i},k}))}{_{_{i}}p_{t}(k|_{i})},\;_{ k,(t+1)}=_{i}}p_{t}(k|_{i})}{||}\] (18)

_form a valid m-step and, thus, guarantee to improve the log-evidence in every iteration._

The proof of Lemma 3.2, the CSGMM's training with ground-truth data \(\) and pseudo-code are outlined in Appendix F, H and N (cf. algorithm 4), respectively.

### Discussion

From a broader perspective, our proposed algorithm represents two consecutive stages:

1. Choose a dictionary \(\), with respect to which a general signal set \(\) of interest is compressible (e.g. a wavelet basis for the set of natural images).
2. Learn the statistical characteristics of the specific signal subset \(\) of interest in its compressible domain (e.g. the subset of handwritten digits).

Due to the strong regularization of stage 1) constraining the search space in stage 2), our model can learn from a few corrupted samples \(\). To ensure the search space to be within the set of compressible signals with respect to \(\), we enforce \(|\) in (7) and, thus, \(\) to have zero mean (cf. Theorem 3.1).

Limitation.On the one hand, this restriction regularizes the problem at hand. On the other hand, it generally introduces a bias, which potentially prevents perfectly learning the unknown distribution of \(\) as it is not always possible to decompose a distribution in this way. As a result, the proposed model is biased towards capturing the sparsity-specific features from \(\) and being an effective prior for (1) rather than learning a comprehensive representation of the true \(p()\).

Distinction from generative model-based CS.Generative model-based CS builds on a generator \(G_{}:=G_{}()\) (e.g., a GAN or VAE) with \(^{F}\), \(^{N}\) and \(F N\). Arguably, the notion of compressibility is still included in this setup, since it assumes that every \(\) can be perfectly encoded by only a few \(F\) values. Moreover, these models typically assign a simplistic fixed distribution, e.g. \(p()=(;,})\), to their compressible domain. Consequently, while generative model-based CS replaces the dictionary with a learnable mapping \(G_{}\) and constrains the compressible domain by forcing it to be representable by, e.g., \((,})\), our approach does the exact opposite. We keep the mapping from the compressible into the original domain fixed by a dictionary \(\) and learn a non-trivial statistical model \(p_{,}()\) in the compressible domain.

Connection to uncertainty quantification.While coming from different motivations, our approach shares similarities with methods from uncertainty quantification, namely so-called prior networks . There, the general idea is to let the NN output the parameters of a conditioned conjugate prior (conditioned on the NN input) instead of directly the quantities of interest (cf. ). As a result, one can use entropy and mutual information measures to quantify different types of uncertainty. Equivalently, our proposed models output the parameters \(_{}()\) of a conditioned conjugated prior \(p_{}(|)\), which is why they enable to quantify their uncertainty by the same measures.

Computational complexity.It is noteworthy that our algorithm's inference after training requires no optimization algorithm but only consists of, e.g., a feed-forward operation through a comparably small VAE. Thus, our proposed method's signal reconstruction comes with computational benefits and differs in this context from other approaches. On the downside, naively implementing the training requires computing and storing the posterior covariance matrices in (8), which can lead to a non-negligible computational and memory-related overhead for very high dimensions. To overcome this issue, we derive equivalent reformulations of the CSVAE's and CSGMM's update steps for training that circumvent the explicit computation of these matrices. More precisely, the reformulated update steps solely require the explicit storing and inversion of the observations' covariance matrices (cf. (17)), which are typically much lower dimensional. The reformulations are given in Appendix I.

## 4 Experiments

### Experimental Setup

Datasets.We evaluate the performance on four datasets. We use the MNIST dataset (\(N=784\)) for evaluation (42, (CC-BY-SA 3.0 license)). Moreover, we use an artificial 1D dataset of piecewise smooth functions of dimension \(N=256\). For that, we combine _HeaviSine_ functions with polynomials of quadratic degree and randomly placed discontinuities, which are frequently used for CS and compressible in the wavelet domain [43; 17]. The generation and examples are outlined in Appendix J. We also use a dataset of \(64 64\) cropped celebA images (\(N=3 64^{2}=12288\)) 3 and evaluate on the FashionMNIST dataset (\(N=784\)) in Appendix L [45, (MIT license)].

Measurement matrix & evaluation metric.For the simulations on piecewise smooth functions, we use a separate measurement matrix \(_{i}\) for each training, validation and test sample, where all \(_{i}\) contain i.i.d. Gaussian entries \(_{i,kl}(0,)\). For all remaining simulations, we use one fixed measurement matrix \(\) each with equally distributed i.i.d. Gaussian entries for the whole dataset. We evaluate the distortion performance by a normalized \(\,=1/N_{}_{i=1}^{N_{}}(\| }_{i}-_{i}\|_{2}^{2}/N)\) with \(}_{i}\) being the estimation of \(_{i}\) and the \(\) with \(N_{}\) being set to \(5000\) in any simulation.

Baselines & hyperparameters.As non-learnable baselines, we use Lasso  and SBL , where we either adjust Lasso's shrinkage parameter on a ground-truth dataset or use the configurations from . As baselines, which can learn from compressed data, we use CSGAN  and CKSVD  with OMP, sparsity level \(4\) and \(288\) learnable dictionary atoms. We solely evaluate CKSVD on piecewise smooth functions due to its requirement of varying measurement matrices for observing the training samples. For CSGAN on MNIST, we use the configuration specified in .4 In any simulation, we use \(K=32\) components for the proposed CSGMM and the proposed CSVAE's en- and decoders contain two fully-connected layers with ReLU activation and one following linear layer, respectively. We utilize Adam for optimization , and only consider the CME approximation of the estimators (cf. Section 2.4) since we did not observe notable differences to the alternative estimators in Appendix G. We utilize an overcomplete Daubechies _db4_ dictionary  in all estimators with fixed dictionaries. For all estimators except CSGAN, all images and estimates are normalized and clipped between \(0\) and \(1\), respectively. For CSGAN, images are normalized between \(-1\) and \(1\) following [4; 30], and for evaluation, test images and their estimations are then re-normalized between \(0\) and \(1\). For a more detailed overview of hyperparameter configurations, see Appendix K.

### Results

Reconstruction.In Fig. 2 and 3, the reconstruction performance of all estimators for MNIST, the piecewise smooth functions, and celebA is shown. All trainable models are trained on compressed training samples \(\) of dimension \(M\) without any ground-truth information during training (cf. Section 2.1). The models are then used to estimate test signals \(_{i}\) from observations of the same dimension \(M\) (cf. (1)) for evaluation. In the case of the piecewise smooth functions, we also add noise of a 10dB signal-to-noise ratio (SNR) for training and testing, i.e., \(_{n}^{2}=[\|\|_{2}^{2}]/(M 10)\) in (1).

In Fig. 2 a)-d), the \(\) and \(\) on MNIST is shown for a) and b) varying observation dimensions \(M\) and the fixed number \(N_{t}=20000\) of training samples, and c) and d) vice versa with fixed \(M=160\). The error bars represent standard deviations. In terms of both distortion metrics \(\) and \(\), CSVAE and CSGMM perform overall the best. In Fig. 2 c), exemplary reconstructed MNIST images for \(M=200\) and \(N_{t}=20000\) are shown. Perceptually, CSGAN emphasizes different reconstruction aspects than the proposed CSVAE and CSGMM. While CSVAE and CSGMM successfully recover details of the MNIST images, CSGAN prioritizes the similarity in contrast between bright and dark areas. This can be explained by their different estimation strategies. The estimation of CSGANs is restricted to lie on the learned manifold, which has been adjusted based on the training dataset. In consequence, when the test sample \(^{*}\) contains details that cannot be found in the training dataset, CSGANs cannot reconstruct these but rather output a similar but realistic representative from the manifold. On the contrary, our proposed estimation scheme in Section 2.4 is not restricted to a manifold but rather infers conditional distributions (cf. (8)) over the whole linear space. Moreover, Fig. 2 c) and d) demonstrate that the proposed model can effectively learn from only a few hundred compressed and noisy samples. In Fig. 2 i), CSVAE and CSGMM are compared using different dictionaries types. The overall \(\) performance remains good for different dictionaries except for applying the models directly in the pixel domain.

In Fig. 2 f), g) and h), the \(\) over varying \(M\) (see f)), varying \(N_{t}\) (see g)) and exemplary reconstructed samples (see h)) are shown for the set of piecewise smooth functions. Here, we only evaluated the proposed CSVAE.5 Compared to the baselines Lasso, SBL, and CKSVD, the CSVAE performs the best in distortion (see f) and g)) as well as perception (see h)). In Fig. 3 a)-e), the same plots are shown for the celebA dataset. Despite the significantly larger dimension, the results are consistent with those for MNIST and the set of piecewise smooth functions.

Figure 2: a) and b) \(\) and \(\) over \(M\) (\(N_{t}=20000\), MNIST), e) and d) \(\) and \(\) over \(N_{t}\) (\(M=160\), MNIST), e) exemplary reconstructed MNIST images (\(M=200\), \(N_{t}=20000\), f) \(\) over \(M\) (\(_{}=10\), \(N_{t}=10000\), piece-wise smooth fct.), g) \(\) over \(N_{t}\) (\(_{}=10\), \(M=100\), piece-wise smooth fct.), h) exemplary reconstructed piece-wise smooth fct. (\(M=100\), \(N_{t}=1000\)), i) \(\) comparison of dictionaries (MNIST, \(M=160\), \(N_{t}=20000\)).

**Uncertainty quantification.** One possibility to determine the model's uncertainty is to determine the differential entropy \(h(|)\) of the CSVAE's encoder distribution \(q_{}(|)\). Since \(q_{}(|)\) is a Gaussian with diagonal covariance matrix (cf. Section 3.2), \(h(|)\) can be calculated efficiently in closed form. In Fig. 3 f), a histogram is shown with values of \(h(|)\). The CSVAE is trained on solely compressed MNIST zeros. We then forward compressed zeros, ones and sevens and evaluate \(h(|)\). It can be seen that the CSVAE's encoder identifies the observations that are distinct to the training dataset by providing larger entropy values on average for the compressed ones and sevens.

**Runtime.** Fig. 3 g) shows our measured training time as well as average reconstruction time of the MAP-based estimators (cf. Section G) for MNIST, \(M=200\), \(N_{t}=20000\). CSGMM and CSVAE are considerably faster than the baselines validating the corresponding discussion in Section 3.4.

**Additional results.** The results in Fig. 2 and 3 display the performance for CSGAN and the proposed CSVAE and CSGMM trained on solely compressed data. However, all three models can also learn from ground-truth data (cf. Appendix H). In Appendix L, we include this comparison for MNIST, provide results on FashionMNIST, analyze the estimators' robustness, and plot further reconstructions for all datasets. Moreover, in Appendix M, we analyze the runtime for training and reconstruction in more detail and give an overview of the used compute resources.

## 5 Conclusion

In this work, we introduced a new type of learnable prior for regularizing ill-conditioned inverse problems denoted by sparse Bayesian generative modeling. Our approach shares the property of classical CS methods of utilizing compressibility, but at the same time, it incorporates the adaptability to training data. Due to its strong regularization towards sparsity, it can learn from a few corrupted data samples. It applies to any type of compressible signal and can be used for uncertainty quantification. While this work focused on setting up the sparse Bayesian generative modeling framework, extensions to learnable dictionaries, circumventing the inversion of the observations' covariance matrices during training, and perception-emphasizing estimators are part of future work.

Figure 3: a) and b) \(\) and \(\) over \(M\) (\(N_{t}=5000\)), c) and d) \(\) and \(\) over \(N_{t}\) (\(M=1800\)), e) exemplary reconstructed celebA images (\(M=2700\), \(N_{t}=5000\)), f) histogram of \(h(|)\) for compressed test MNIST images of digits 0,1 and 7, where the CSVAE is trained on compressed zeros, g) training and reconstruction time for MNIST (\(M=200\), \(N_{t}=20000\)).