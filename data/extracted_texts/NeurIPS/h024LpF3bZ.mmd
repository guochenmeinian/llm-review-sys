# Weak-eval-Strong: Evaluating and Eliciting Lateral Thinking of LLMs with Situation Puzzles

Qi Chen Bowen Zhang Gang Wang Qi Wu

Australian Institute for Machine Learning, University of Adelaide

{qi.chen04, b.zhang, qi.wu01}@adelaide.edu.au, gang@theb.ai

Corresponding author.

###### Abstract

While advancements in NLP have significantly improved the performance of Large Language Models (LLMs) on tasks requiring vertical thinking, their lateral thinking capabilities remain under-explored and challenging to measure due to the complexity of assessing creative thought processes and the scarcity of relevant data. To address these challenges, we introduce SPLAT, a benchmark leveraging Situation Puzzles to evaluate and elicit LATer Thinking of LLMs. This benchmark, containing 975 graded situation puzzles across three difficulty levels, employs a new multi-turn player-judge framework instead of the traditional model-based evaluation, which often necessitates a stronger evaluation model. This framework simulates an interactive game where the model (player) asks the evaluation model (judge) questions about an incomplete story to infer the full scenario. The judge answers based on a detailed reference scenario or evaluates if the player's predictions align with the reference one. This approach lessens dependence on more robust evaluation models, enabling the assessment of state-of-the-art LLMs. The experiments demonstrate that a robust evaluation model, such as WizardLM-2, closely matches human judgements in both intermediate question-answering and final scenario accuracy, achieving over 80% agreement-similar to the agreement levels among humans. Furthermore, applying data and reasoning processes from our benchmark to other lateral thinking-related benchmarks, _e.g._, RiddleSense and BrainTeaser, leads to performance enhancements. This suggests that our benchmark effectively evaluates and elicits the lateral thinking abilities of LLMs. Code is available at: [https://github.com/chenqi008/LateralThinking](https://github.com/chenqi008/LateralThinking).

## 1 Introduction

Vertical and lateral thinking are two essential styles that play critical roles in human cognition and decision-making . As noted in , vertical thinking, characterised by its logical and structured nature, involves a systematic, step-by-step approach to problem-solving where each step logically follows the previous one. In contrast, lateral thinking is about creativity and viewing problems from multiple angles. It involves breaking away from traditional thought patterns to generate new ideas, and embracing a more playful and imaginative problem-solving approach.

The evolution of natural language processing (NLP) models, particularly large language models (LLMs) , has seen significant advancements in tasks that require vertical thinking, such as complex reasoning  and commonsense inference . Despite these achievements, the development and evaluation of these models have primarily focused on vertical thinking capabilities , often neglecting lateral thinking, which is essential for creatively solving novel problems. Current benchmarks  frequently dismiss creative thinking as irrelevant, focusing only onproblems solvable through conventional commonsense reasoning, indicating a gap in traditional LLMs' handling of unconventional thinking tasks, such as puzzles .

To fill this gap, benchmarks increasingly aim for tasks challenging even for humans, with outputs that are typically open-ended . However, evaluating such open-ended generation often relies on human or model-based assessments . As tasks grow in complexity, such as longer output requirements, human evaluations become less feasible due to the extensive time and effort required to accurately judge long, complex scenarios created by LLMs. Moreover, model-based evaluations typically depend on more advanced models, thereby restricting their capacity to evaluate newer, state-of-the-art models. This reliance may also introduce biases, such as a preference for the first choice . Consequently, there is a pressing need to rethink the evaluation framework of the benchmark for assessing emerging LLMs.

In this paper, we seek to explore and elicit the lateral thinking ability of LLMs. However, accurately evaluating this capability poses significant challenges due to the complexity of measuring creative thinking  and the difficulty of obtaining relevant data. The generation of novel ideas is inherently non-trivial, even for humans . Considering these challenges, we propose the exploration of lateral thinking in LLMs by _situation puzzles_ as a primary research tool. A situation puzzle, often referred to as a lateral thinking puzzle, involves a scenario, usually presented as an unusual situation, and the goal is to figure out what is going on. Players ask yes-or-no questions to gather more information and solve the puzzle. These puzzles challenge players to think outside the conventional bounds of the scenario's information, using creativity and indirect reasoning to uncover the underlying explanation for the situation described. In this context, we introduce SPLAT, a benchmark that leverages Situation Puzzles for evaluating and eliciting L4eral Thinking of LLMs, which contains 975 high-quality situation puzzle pairs. As shown in Figure 1, for better assessment, we categorise these puzzles into three difficulty levels--Easy, Medium, and Hard--each annotated by human evaluators. We obtain 54,463 annotations of difficulty on an average of \(\)55 per puzzle.

To assess the performance of LLMs in our benchmark with an open-ended setting, we initially aim to apply a model-based evaluation paradigm. However, this paradigm (_e.g._, ) typically relies on using an evaluation model that is stronger than the models being tested. This creates a challenge in accurately evaluating models that may be superior to the evaluator itself. Therefore, there is a need for alternative methods that can effectively assess the advanced models without this limitation. To this end, inspired by the situation puzzle game, we propose a multi-turn player-judge framework. This framework emulates an interactive game where the model (player) queries the evaluation model (judge) about a given incomplete story, striving to collect information to unravel the intricate scenario it implies. Conversely, the evaluation model (judge) is tasked solely with responding to questions based on the detailed reference scenario or evaluating whether the scenario deduced by the player aligns semantically with the reference one1. In this way, this framework reduces the reliance on more advanced evaluation models, and thereby can be used to evaluate the state-of-the-art LLMs.

The experimental results indicate that a relatively strong evaluation model, _e.g._, WizardLM-2, can align closely with human judgements in both intermediate question-answering and final answer/scenario accuracy, achieving over 80% agreement--comparable to agreement level between

Figure 1: Examples from SPLAT benchmark, which are categorised into three ascending levels of difficulty, _i.e._, Easy, Medium, and Hard. The puzzles that are medium to hard in difficulty usually require guidance from the judge to be solved. If a puzzle can be solved without the judgeâ€™s guidance, it typically resembles a regular puzzle requiring specific knowledge more than lateral thinking skills.

humans. Moreover, applying the data and reasoning processes from our benchmark to other lateral thinking-relevant benchmarks like RiddleSense  shows a performance improvement (_e.g._, the accuracy of Llama3-70B  increase from 83.34% to 85.21%). It indicates that our benchmark can not only evaluate but also elicit the lateral thinking capabilities of LLMs. Finally, we evaluate several advanced LLMs such as GPT-4 and GPT-4 Turbo on our benchmark. The results highlight the ongoing challenges and the need for improved lateral thinking in LLMs.

We summarise our contributions as follows:

* We introduce a benchmark, called SPLAT, to evaluate the lateral thinking capacity of LLMs with situation puzzles. In this benchmark, we construct a new situation puzzles dataset, containing 975 unique puzzles that are divided into three difficulty levels.
* typically stronger than the models being assessed.
* The dataset and framework are designed not only to evaluate but also to actively elicit the lateral thinking of LLMs. Experiments show that using data and reasoning processes from our framework leads to improved performance of LLMs, even when applied to other lateral thinking benchmarks.

## 2 Related Works

**Lateral Thinking for LLMs.** The realm of lateral thinking and computational creativity spans various tasks [50; 26; 48; 39; 18; 32], such as pun detection  and humour recognition [26; 48], which assess different cognitive capabilities. Notable contributions in this field include BrainTeaser , which evaluates a broad spectrum of human intelligence attributes such as strategy and creativity. Another significant effort is RiddleSense , a collection of riddles from public websites aimed at testing model abilities. In contrast, our work enhances this area by introducing scenario-level lateral thinking puzzles, _i.e._, situation puzzles, constructing a benchmark to evaluate and elicit the lateral thinking ability of Large Language Models (LLMs).

**Benchmarks for LLMs.** Large language models (LLMs) [2; 3; 7; 37] are increasingly showing capabilities for various tasks ranging from writing and coding to engaging in multi-turn dialogues. However, assessing their extensive capabilities presents new challenges. Existing benchmarks, as categorised by , predominantly fall into three types. Core-knowledge benchmarks [17; 46; 11; 34; 9; 12; 49] assess LLMs through zero-shot and few-shot tasks, requiring concise, specific answers to questions that are easily validated. Instruction-following benchmarks [24; 28] handle more open-ended questions and a broader range of tasks, which evaluate LLMs post-instructional fine-tuning. Lastly, conversational benchmarks [30; 16; 21], designed for dialogue-based tasks, still lack the diversity and complexity needed to fully challenge advanced chatbots.

For more challenging benchmarks, there is a trend toward including tasks that are even more difficult for humans, often requiring open-ended outputs [8; 27]. Evaluating such open-ended tasks typically depends on either human or model-based assessments. As these tasks increase in complexity, human evaluations become impractical due to the substantial time and effort needed to accurately assess the lengthy and intricate scenarios. Existing model-based evaluations  inherently rely on stronger models, which limits their ability to assess new state-of-the-art models. In this paper, we introduce a multi-turn player-judge framework to improve upon traditional model-based evaluations in open-ended settings. It reduces the need for a stronger evaluation model typically used in such assessments.

## 3 Task and Dataset

### Task Definition of Situation Puzzle Game

The situation puzzle game involves a player \(P\) and a judge \(J\). Firstly, the judge provides an incomplete story \(S_{0}\) to the player. Then, the player poses a set of questions \(=\{q_{1},q_{2},,q_{i},\}\) gradually for the judge to gather information about the unknown and detailed scenario/answer \(\) behind the initial story \(S_{0}\). The judge responds with answers \(=\{a_{1},a_{2},,a_{i},\}\), where each answer \(a_{i}\{,,\}\). The objective is to deduce the hidden scenario/answer \(\) that semantically aligns with all preceding yes-or-no question-answering pairs while fitting the given story \(S_{0}\).

### Data Construction

**Data Collection.** To collect the situation puzzle data, we follow the steps from . Specifically, we first gather over one thousand situation puzzles and their answers from various public websites using web crawlers2. After that, we merge the data from different sources and then eliminate the duplicates based on sentence similarity . Then, we correct typographical errors using the Auto Correct library3, followed by a human review process to ensure the puzzles maintain their intended meanings. This approach combines automated corrections with manual oversight to preserve the quality of the puzzles. Finally, we obtain a collection of 975 unique situation puzzles.

**Data Annotation and Difficulty.** Inspired by the organisation of GAIA , we categorise our collected situation puzzles into various distinct levels of difficulty, ranging from 1 (easiest) to 9 (hardest). This classification is done through a crowd-sourced annotation involving an average of approximately 55 annotators per puzzle to ensure the reliability of the difficulty rating. Then, these levels are further grouped into three broader categories: Easy (1\(\)3), Medium (4\(\)6), and Hard (7\(\)9).

### SPLAT Benchmark (Ours) vs. Related Benchmarks

We compare our benchmark with the most relevant ones _w.r.t._ both vertical and lateral thinking. Specifically, for vertical thinking datasets, we consider GAIA  and LLM-as-a-Judge , where the former is the most recent benchmark for general AI assistants, and the latter is the widely used benchmark to evaluate LLMs. The LLM-as-a-Judge  contains two different benchmark datasets, _i.e._, MT-bench and Chatbot Arena. The MT-bench is a set of challenging multi-turn open-ended questions designed to evaluate chat assistants. Chatbot Arena is a benchmark platform designed for evaluating LLMs through interactive, randomised battles in a crowd-sourced manner. It allows for the assessment of LLMs in real-time dialogues with human participants.

Regarding lateral thinking benchmarks, we compare Oogiri , RiddleSense , and Brain-Teaser . As the Oogiri benchmark  is multi-modal (text and image) and multi-lingual (English, Chinese, and Japanese), for a fair comparison, we consider Text-to-Text (T2T) English (Eng.) samples only. RiddleSense  is a benchmark dataset designed for evaluating complex commonsense reasoning within the framework of riddle-style questions. It presents a unique multiple-choice question-answering task that requires an understanding of figurative language, counterfactual reasoning, and other advanced natural language understanding skills. The BrainTeaser dataset  is a versatile and challenging collection for evaluating models on their ability to engage in lateral thinking and solve intricate puzzles. It features two main types of puzzles: Sentence (S.) puzzles and Word (W.) puzzles. The sentence puzzles require solvers to interpret or decipher complex sentences, often involving multiple meanings or requiring the solver to think beyond straightforward interpretation.

    & Benchmark & Task &  &  &  \\  & & & Ref. & A & Open-E. & Ref.-G. & Mod.-B. & Assessment & Number & Avg. Q & Avg. A \\   & GAIA  & Question-Answering & âœ“ & âœ“ & âœ“ &  & 466 & 65.85 & 2.03 \\  & Chatbot Arena  & Dialogues & âœ“ & & âœ“ &  & 30,000 & / & / \\  & MT-Bench (1st Turn)  & Multi-turn QA & & & âœ“ &  & 80 & 65.78 & / \\  & MT-Bench (2nd Turn)  & Multi-turn QA & âœ“ & & âœ“ &  & 80 & 22.76 & / \\   & Oogiri (T2T, Eng.) & Multiple-choice QA & âœ“ & & âœ“ &  & 6,433 & 12.46 & 10.38 \\  & RiddleSense  & Multiple-choice QA & âœ“ & & âœ“ &  & 5,733 & 26.21 & 2.87 \\  & BrainTeaser (S, 20) & Multiple-choice QA & âœ“ & & âœ“ &  & 627 & 34.88 & 9.11 \\  & BrainTeaser (W, 20) & Multiple-choice QA & âœ“ & & âœ“ &  & 492 & 10.65 & 3.00 \\  & SPLAT (Ours) & Scenario Deduction & âœ“ & âœ“ & âœ“ & âœ“ & Semantic Judge & 975 & 79.74 & 45.53 \\   

Table 1: Comparison between our SPLAT and related benchmarks, including both vertical (Ver.) and lateral (Lat.) thinking. For a comprehensive comparison, we evaluate the benchmarks across four dimensions: the target task, the fashion of answers, the evaluation paradigm, and the statistics of samples.â€˜Ref. Aâ€™ indicates whether the question or dialogue comes with a reference answer. â€˜Open-E.â€™ denotes whether the response is open-ended. â€˜Ref.-G.â€™ and â€˜Mod.-B.â€™ refer to whether the result evaluation is reference-guided or model-based, respectively. â€˜Assessmentâ€™ denotes the specific evaluation pattern used to assess the quality of the predicted results. â€˜Avg. Qâ€™ and â€˜Avg. Aâ€™ are the average number of tokens in questions (or input dialogues) and reference answers, respectively.

The word puzzles focus on wordplay or semantic puzzles, where the challenge lies in understanding and manipulating words based on how they are presented or their semantic relationships.

In Table 1, we compare our SPLAT benchmark with existing ones across various dimensions such as the type of target task, the fashion of answers, the evaluation paradigm, and the statistics of samples. Here's a detailed discussion of how our benchmark, focused on situation puzzles, stands out:

**Task Uniqueness and Open-ended Responses.** Unlike traditional QA and dialogue-based tasks in , our task requires models to infer the scenario from a given incomplete story, necessitating deep engagement with both context and creativity. The process of accurately inferring the scenario involves multiple steps and is challenging to brute force due to their diversity , as well as difficult to evaluate. Our benchmark supports the verification of reasoning traces and predicted answers. Moreover, unlike the multiple-choice formats seen in tasks like Oogiri  and RiddleSense , our open-ended format lessens the likelihood of inadvertently leading to the correct answer.

**Reference-guided Semantic-aware Evaluation.** Unlike the exact match or pairwise battle approaches used in vertical thinking benchmarks , our SPLAT employs a 'Semantic Judge' evaluation. Analogous to Natural Language Inference (NLI) , we assess the semantic alignment between the predicted output and a human-generated reference answer using an LLM-based judge. This approach ensures accurate evaluation, even when the formats of the predicted outputs significantly differ from those of the reference answers.

**Challenging Question with Judgement-friendly Answer.** Our dataset features 975 samples with relatively high averages in question and answer lengths (79.74 and 45.53 tokens respectively). This indicates a depth of content and complexity in our scenarios, surpassing most lateral thinking datasets such as RiddleSense  or BrainTeaser , where the questions or answers are typically much shorter and less detailed. Moreover, by employing a model-based and reference-guided evaluation paradigm, we reduce the dependence on a more robust evaluation model, different from , which typically needs a stronger model to assess. Our approach only necessitates that the judge model determines if the predicted answer is semantically aligned with the reference answer. Once we verify that the used judge model can reliably perform this task, the relative strength of the models being evaluated compared to the judge model becomes irrelevant.

### Statistics on SPLAT Benchmark

Situation puzzles on the proposed SPLAT can be classified into three ascending levels of difficulty, based on three criteria. 1) _Time to Solve:_ How long does it typically take for a player to arrive at a correct answer? Shorter times indicate easier puzzles, while longer time suggests higher complexity. 2) _Length of Reference Answer/Scenario:_ Simpler puzzles may have shorter, more straightforward answers, whereas more complex ones might require lengthy explanations or involve intricate scenarios.

Figure 2: We show (a) the distribution of sample counts across different difficulty levels, and the average number of tokens per sample. We also exhibit (b) the distribution of time cost for human players and the number of tokens for each reference answer (200 samples in total) in difficulty levels.

3) _Subjective Complexity of the Scenario:_ This involves a subjective evaluation of how mentally challenging the scenario is for the human players. Thus, the puzzle in each level can be defined as:

**Easy Puzzles** (1\(\)3): These puzzles typically require minimal time to solve, with reference answers that are short and direct, involving straightforward solutions. These scenarios are simple and can usually be resolved quickly, often within a few minutes, and do not necessitate extensive reasoning.

**Medium Puzzles** (4\(\)6): These are moderately complex puzzles that demand more time and deeper analysis. The reference answers are longer, providing more details that players must consider. Solving these puzzles generally takes a moderate amount of time, with players needing to make several logical deductions and possibly sift through some distractors.

**Hard Puzzles** (7\(\)9): These are the most challenging puzzles, designed for advanced players. They require a significant amount of time to unravel, with lengthy and complex scenarios that may include extensive details or embedded subtleties. Players must engage in a high degree of reasoning, with an array of logical deductions and the potential for numerous misleading clues. These puzzles often demand an arbitrary number of steps, deep thinking, and the ability to focus over prolonged periods.

Figure 2(a) suggests a correlation between difficulty level and the average number of tokens, particularly for answers, which tend to increase in length as the difficulty level rises. This could indicate that more complex puzzles require longer, more detailed answers. In Figure 2(b), the clusters by difficulty level also show that harder puzzles tend to have both longer answers and higher time costs, aligning with intuitive expectations about puzzle solving.

## 4 Multi-turn Player-Judge Framework

We design such a framework (Figure 3) for three main reasons. Firstly, the complexity of scenarios in situation puzzles makes it difficult for a model to accurately predict the final answer in just one attempt (_i.e._, in a single turn). Secondly, we aim to ensure that the reasoning process remains interpretable and assessable, even in the absence of pre-defined reference reasoning steps. This framework allows for a more thorough evaluation of the model's ability to solve complex puzzles step by step. Thirdly, we hope that the framework or the intermediate reasoning processes derived from this framework can help elicit the lateral thinking ability of LLMs even on other lateral thinking-relevant datasets.

**Characters.** The multi-turn player-judge framework of a situation puzzle game has two primary characters: a player \(P\) and a judge \(J\). The player \(P\) is a participant (_e.g._, LLMs we need to evaluate), who attempts to solve the puzzle by asking questions. The judge \(J\) is the entity, either a human or an AI model, that knows the solution to the puzzle and provides responses to the player's questions. Due to the page limit, we put the detailed character guidelines in the supplementary.

**Interaction Dynamics.** The interaction between players and the judge is driven by a series of questions \(=\{q_{1},q_{2},,q_{i},\}\) and answers \(=\{a_{1},a_{2},,a_{i},\}\). Specifically, at the start of the game, the player is presented with an incomplete story, denoted as \(S_{0}\). The player must read this story and initially decide if the hidden scenario or answer \(\) can be inferred from the present information (_i.e._, solely \(S_{0}\)). If the scenario remains unclear, the player will then pose a yes-or-no question \(q_{1}\) to obtain more details about the puzzle.

The judge provides a response \(a_{1}\{,,\}\) based on the incomplete story \(S_{0}\) and the hidden scenario \(\)4, _i.e._, \(a_{1} J(q_{1},S_{0},)\). Upon receiving the response \(a_{1}\), the player will either attempt to deduce the final answer or, if still uncertain, will ask a subsequent question (_i.e._, \(q_{2}\)). This process continues iteratively, with the player refining the understanding based on the judge's answers.

**Information Sets and Game State.** At any turn \(t\) in the game, the information set \(_{t}\) represents all the questions asked and answers received up to that time:

\[_{t}=\{(q_{1},a_{1}),(q_{2},a_{2}),,(q_{t},a_{t})\}. \]

The game state \(_{t}\) includes the incomplete story \(S_{0}\), the information set \(_{t}\) and any inferred knowledge \(K_{t}\) about the situation puzzle:

\[_{t}=(S_{0},_{t},K_{t}),K_{t} P(S_{0}, _{t}). \]Here, \(K_{t}\) is the knowledge inferred by the player based on the story \(S_{0}\) and information set \(_{t}\). The player determines the next question based on the current game state by

\[q_{t+1}=P(_{t}). \]

**Objective.** The objective of the player is to deduce the scenario/answer \(S\) that satisfies all given constraints based on the responses from the judge. Mathematically, the goal is to find the hypothesised solution \(\) that maximises the posterior probability given the game state \(_{t}\):

\[_{S}(S|_{t}). \]

## 5 Experiments

### Agreement Evaluation

Inspired by , to assess the alignment of judge's responses with human preferences, we consider an agreement evaluation among them _w.r.t._ judgements for both final predicted answers and the intermediate reasoning processes. We randomly select 20 puzzles from each difficulty level, which is 60 puzzles in total. For each puzzle, we ask three different individuals to assess the final answer agreement and the reasoning process agreement, respectively. For a fair comparison, we use the questions generated by taking Llama3 (70B-Instruct)  as the player and WizardLM-2 (8x22B)  as the judge. Besides humans, we also consider Llama3 (70B-Instruct) as another judge model to test the agreement among humans and different judge models. More details are in the supplementary.

**Final Answer Agreement.** To quantitatively evaluate the semantic alignment between the final predicted answers and reference answers, we first ask humans to assess the semantic alignment between each predicted answer and the corresponding reference answer/scenario. Subsequently, we measure the agreement performance between the human judgement and the evaluations from the judge model. We totally obtain 156 judgements from humans. In Table 2, the high level of agreement between the LLM-based judges and humans (_e.g._, WizardLM-2 achieves 100%, 87.50%, 88.24% agreements with humans in three difficulties, respectively) indicates that LLMs can well align with human standards of reasoning and judgement within this specific context of lateral thinking puzzles.

Figure 3: Overall of the multi-turn player-judge framework. The player begins with a given story and poses yes/no questions to uncover hidden details. The judge, informed by a reference answer, responds to guide the player toward the correct reasoning. The playerâ€™s goal is to deduce the scenario based on the judgeâ€™s feedback and the initial story input. The game continues with questions until the player deduces the correct answer, at which point the judge confirms with a congratulatory response.

**Reasoning Process Agreement.** To assess the agreement on reasoning processes, particularly for intermediate questions where no predefined reference answers exist, we use a method where humans are asked to respond to these questions based on the context provided by the given story and the final reference answer. Their responses are categorised as {yes, no, irrelevant}. We then evaluate the alignment of these human responses with those from the judge model. We obtain 2,271 judgements from humans. Table 3 shows that LLMs, _e.g._, WizardLM-2 and Llama3-70B, demonstrate good alignment with human reasoning in simpler puzzles. As the difficulty level rises, WizardLM-2 keeps a relatively high agreement with human judgements, while the alignment between Llama3-70B and humans decreases dramatically. The results verify that our choice of WizardLM-2 as the judge model aligns well with human judgement across all difficulty levels, maintaining over 80% agreement.

### Performance of LLMs on SPLAT Benchmark

**Evaluation Metrics.** To assess the performance of LLMs using the proposed SPLAT benchmark, we employ two distinct metrics: _Accuracy (Acc, %)_, which measures the correctness of the scenarios deduced by LLMs against the reference scenarios/answers, and _Average Round (Rnd)_, which quantifies the average number of interaction rounds required for LLMs to reach the reference scenarios. Note that if the LLMs fail to deduce the correct scenario before a pre-defined max round, the round count is the same as the max one, and the accuracy for that particular puzzle is recorded as 0. Conversely, if the correct scenario is successfully predicted, the accuracy is set to 1, and the number of rounds taken to reach the correct answer is recorded. Finally, we define an _OverAll (O/A)_ evaluation metric as

\[=_{i=1}^{N}(_{i})}{ _{i}} 100, \]

where \(()\) is an indicator that returns 1 if the scenario deduced by LLMs matches the reference one semantically, and 0 otherwise. Given that \((_{i})\) takes values in {0, 1} and \(_{i}\) ranges from 1 to a maximum, the O/A metric spans from 0 to 100, with higher values indicating better performance.

Besides, in the open-ended setting, the player model may deduce other reasonable scenarios that satisfy both the given incomplete story and the responses from the judge model. In this situation, it is hard to judge whether these deduced scenarios are correct or not due to the diversity. Inspired by the evaluation of image captioning on MSCOCO , which uses multiple reference answers for each image and computes metrics based on the closest reference answer, we consider a similar approach. However, generating multiple reference scenarios/answers for situation puzzles is challenging. As an alternative, we repeatedly run each situation puzzle multiple times (denoted as \(R\)), and then choose one (maybe \(r\)-th) that is closest to the reference scenario from these iterations as the final result. This approach not only maintains the diversity of potential predictions but also reduces the impact of hallucination from LLMs by subjecting each puzzle to several evaluations.

**Results.** We compare the performance of various LLMs on our SPLAT benchmark, including Lama3 (8B-Instruct & 70B-Instruct) , Qwen1.5 (32B-Chat & 110B-Chat) , WizardLM-2 (8x22B) , GPT-4 and GPT-4 Turbo . Here, we take these LLMs as players and use WizardLM-2 (8x22B) as a judge in all these performance comparison experiments. We set \(R=1\) and the max round is 15. In Table 4, GPT-4 and its Turbo variant, along with the Llama3 (70B-Instruct) and WizardLM-2 (8x22B), show robust capabilities, achieving relatively higher accuracy. Conversely, models like

    &  &  &  \\  Judge Model & Llama3-70B & Human & Llama3-70B & Human & Llama3-70B & Human \\  WizardLM-2 & 82.15\% & 84.18\% & 78.82\% & 89.86\% & 72.14\% & 90.15\% \\ Llama3-70B & - & 80.22\% & - & 77.83\% & - & 71.36\% \\ Human & - & 92.93\% & - & 94.13\% & - & 93.11\% \\   

Table 3: Reasoning process agreement among three types of judges on SPLAT benchmark.

    &  &  &  \\  Judge Model & Llama3-70B & Human & Llama3-70B & Human & Llama3-70B & Human \\  WizardLM-2 & 89.21\% & 100\% & 92.49\% & 87.50\% & 90.02\% & 88.24\% \\ Llama3-70B & - & 84.56\% & - & 80.61\% & - & 83.17\% \\ Human & - & 100\% & - & 87.50\% & - & 100\% \\   

Table 2: Final answer agreement among three types of judges on SPLAT benchmark.

Qwcn1.5 (32B-Chat) and Qwcn1.5 (110B-Chat) show lower accuracy, which might reflect challenges in adapting their chat-based configurations to the lateral thinking required on the SPLAT benchmark.

**Performance Bias.** In the SPLAT benchmark, concerns about bias when a model like WizardLM-2 (8x22B) evaluates its own performance are mitigated through several key design elements. First, the SPLAT benchmark is designed with a specific framework that focuses on how well each LLM, serving as a player, can reason through situation puzzles to arrive at correct scenarios/answers. The judge's role is tasked solely with responding to questions based on the detailed reference scenario or evaluating whether the scenario deduced by the player aligns semantically with the reference one, which is relatively simple and objective. Besides, the evaluation metrics used (Accuracy and Rounds needed) are also objective, reducing the potential for subjective bias or preference.

From Table 4, WizardLM-2 (8x22B) performs well but not exceptionally in every category. It has competitive but not maximal accuracy rates, and its average round count is not the lowest. It suggests that the WizardLM-2 (8x22B) we use has strong enough capabilities to serve as a judge model. Besides, under our benchmark, the used judge model does not have an obvious preference for itself.

### Eliciting Lateral Thinking of LLMs

Models and Benchmarks.As previously discussed, our benchmark serves to evaluate the lateral thinking abilities of LLMs and to elicit these capabilities actively. To verify this, we seek to enhance LLMs with the data and reasoning processes from our benchmark, and then evaluate them on other lateral thinking benchmarks (_i.e._, RiddleSense  and BrainTeaser ) to observe performance enhancements across various LLMs. Our analysis includes both open-source and closed-source LLMs, specifically Llama3 (Instruct version) and GPT-4, with additional considerations for different model sizes, such as Llama3-8B and Llama3-70B.

**Implementations.** In the zero-shot setting, LLMs are challenged with multiple-choice riddles from these benchmarks, where they must choose answers based solely on the riddles presented. The accuracy of their responses is calculated by comparing them to the correct answers. To effectively integrate our benchmark's data and reasoning processes from the proposed player-judge framework, we treat the question-answer pairs generated during the benchmark as auxiliary prompts. These are seamlessly incorporated into the LLMs' reasoning processes to enhance their thinking ability.

To implement this, we set up the game where one of the LLMs (_e.g._, Llama3-70B) acts as the player with WizardLM-2 continuing as the judge. We randomly select \(m\) situation puzzles (we set \(m=1\) in our experiment) from our benchmark dataset and engage both the player and the judge in these selected puzzles using our multi-turn player-judge framework. From each puzzle, we gather the first 5

    &  &  &  &  \\   & Acc (\(\), \%) & Rad (\(\)) & QA (\(\)) & Acc (\(\), \%) & Rad (\(\)) & QA (\(\)) & Acc (\(\), \%) & Rad (\(\)) & QA (\(\)) & Acc (\(\), \%) & Rad (\(\)) & QA (\(\)) \\  Llama3-8B & 31.79 & 13.32 & 3.65 & 14.81 & 14.29 & 1.58 & 4.55 & 14.80 & 0.50 & 17.05 & 14.13 & 1.91 \\ Llama3-70B & 64.05 & 10.75 & 8.67 & 28.54 & 13.37 & 3.54 & 10.91 & 14.31 & 1.36 & 34.50 & 12.81 & 4.52 \\ Qwcn1-5-3EB & 29.95 & 12.72 & 6.99 & 15.58 & 14.11 & 2.47 & 10.00 & 14.22 & 2.01 & 18.51 & 13.68 & 3.62 \\ Qwcn1-5-110B & 46.08 & 11.28 & 9.71 & 24.22 & 13.88 & 3.74 & **17.27** & 14.01 & 2.16 & 29.19 & 12.92 & 5.20 \\ WizardLM-2 & 58.52 & 10.49 & 11.97 & 31.48 & 13.12 & 4.67 & 16.56 & **13.56** & **2.74** & 35.45 & 12.52 & 6.46 \\ GPT4-Txtbo & 63.6 & 9.59 & 13.22 & 28.39 & 12.57 & 5.66 & 10.00 & 14.47 & 1.35 & 32.91 & 12.27 & 6.54 \\ GPT4-Txtbo & **70.36** & **8.93** & **15.25** & **36.88** & **12.41** & **6.71** & **17.27** & 13.99 & 2.52 & **41.70** & **11.77** & **8.16** \\   

Table 4: Performance of different LLMs on the proposed SPLAT benchmark.

Figure 4: Performance of various LLMs on RiddleSense (dev set). Llama3 (8B & 70B) and GPT-4 are in the zero-shot setting, while others are trained on the training set of RiddleSense and CSQA . â€˜*â€™ means models with our auxiliary reasoning prompts.

question-answer pairs to form an auxiliary reasoning prompt set \(\), comprising a total of \(5 m\) pairs. This auxiliary prompt set \(\) is then integrated into the original prompts \(\) used by various LLMs. It is important to note that the same auxiliary prompts are used across different LLMs during their evaluations on these two benchmarks. This keeps consistency in the supplementary data provided to each model, ensuring a fair comparison of their performance.

**Results on RiddleSense and BrainTeaser Benchmarks.** On the RiddleSense (dev set), Figure 4 shows that with our reasoning prompts, the accuracy of various LLMs consistently improves (Llama3-8B: 70.51% \(\) 72.18%, Llama3-70B: 83.34% \(\) 85.21%, GPT-4: 88.83% \(\) 89.23%) on the RiddleSense benchmark. The results demonstrate that the data and framework in our benchmark can be used to elicit the lateral thinking ability of LLMs when handling other lateral thinking tasks.

BrainTeaser features two main types of puzzles: sentence puzzles and word puzzles. Following its official settings, we assess model performance using two accuracy metrics: 1) _Instance-based Accuracy_: This metric individually evaluates each question--whether it is the original or a reconstructed version. We present instance-based accuracy for both the original puzzles and their semantic and contextual reconstructions. 2) _Group-based Accuracy_: Under this metric, each original puzzle and its variants are treated as a group. The model earns a score of 1 only if it correctly solves all three puzzles within a group. If it fails to do so, the score awarded is 0. From Table 5, in the zero-shot setting, the accuracy of various LLMs consistently improves on BrainTeaser. These demonstrate that the data and framework of our benchmark effectively elicit lateral thinking capabilities of LLMs when applied to various lateral thinking tasks.

**Ablation Study.** We further explore the influence of our data and reasoning processes. In Table 6, incorporating our data into base LLMs leads to an increase in average accuracy (Llama3-8B: 61.45 \(\) 64.07; Llama3-70B: 80.76 \(\) 83.78). This improvement is further enhanced to 66.71 and 85.42, respectively, when we integrate the reasoning processes. These results further demonstrate that both our data and reasoning processes can effectively enhance the lateral thinking capabilities of LLMs.

## 6 Conclusion

In this paper, we address the gap in the lateral thinking capabilities of LLMs despite significant advances in vertical thinking skills. We propose SPLAT, a benchmark using Situation Puzzles to evaluate and elicit LLMs' LAteral Thinking by a multi-turn player-judge framework, which departs from traditional model-based evaluations. This new framework evaluates the LLMs by interacting with a judge model to solve puzzles, reducing the reliance on more robust evaluation models. Our experiments with SPLAT, including a robust evaluation model like WizardLM-2, demonstrate over 80% agreement with human judgements and show improvements when applied to another lateral thinking benchmark-RiddleSense. This highlights SPLAT's effectiveness in evaluating and eliciting lateral thinking in LLMs, suggesting its potential broader application in AI research and development.

    & RS & BT (S.) & BT (W.) & Avg. \\  Llama3-8B & 70.51 & 67.65 & 46.20 & 61.45 \\ Llama3-8B\({}^{}\) & 70.32 & 69.62 & 52.28 & 64.07 \\ Llama3-8B\({}^{*}\) & 72.18 & 68.99 & 58.07 & 66.71 \\ Llama3-70B\({}^{}\) & 83.34 & 87.76 & 71.20 & 80.76 \\ Llama3-70B\({}^{}\) & 82.95 & 91.12 & 77.27 & 83.78 \\ Llama3-70B\({}^{*}\) & 85.21 & 91.51 & 79.54 & 85.42 \\   

Table 6: Impact of our data and reasoning processes. Models with â€˜â€ â€™ mean using our data only while with â€˜*â€ â€™ mean using both data and reasoning processes. â€˜RSâ€™ refers to the results on RiddleSense (Dev). â€˜BT (S.)â€™ and â€˜BT (W.)â€™ are the overall results on BrainTeaser (Sentence) and BrainTeaser (Word), respectively.

    &  &  \\   &  &  &  &  \\   & Ori & Sem & Con & OS & OSC & Overall & Ori & Sem & Con & OS & OSC & Overall \\  LLama3-8B & 70.23 & 63.09 & 69.64 & 52.09 & 38.32 & 67.65 & 47.72 & 44.69 & 46.21 & 31.06 & 17.42 & 46.20 \\ LLama3-8B\({}^{*}\) & 72.18 & 65.47 & 72.02 & 58.92 & 45.23 & 69.89 & 54.54 & 54.54 & 65.15 & 39.39 & 29.54 & 58.07 \\ LLama3-70B & 89.34 & 87.57 & 86.39 & 84.61 & 75.73 & 87.76 & 71.96 & 69.69 & 62.87 & 49.24 & 71.20 \\ LLama3-70B* & 93.49 & 90.53 & 90.53 & 88.75 & 82.84 & 91.51 & 81.06 & 81.81 & 75.75 & 74.24 & 59.09 & 79.54 \\ GPT-4 & 93.49 & 89.94 & 83.43 & 88.75 & 75.14 & 88.95 & 71.21 & 65.91 & 56.06 & 59.09 & 41.66 & 64.39 \\ GPT-4 & 95.26 & 91.71 & 88.69 & 91.71 & 82.24 & 91.88 & 74.24 & 72.72 & 62.12 & 64.39 & 45.45 & 69.69 \\   

Table 5: Performance of LLMs on BrainTeaser. Models with â€˜*â€™ mean with our auxiliary reasoning prompts. â€˜Oriâ€™, â€˜Semâ€™, and â€˜Conâ€™ are â€˜Originalâ€™, â€˜Semanticâ€™, and â€˜Contextâ€™, respectively. â€˜OSâ€™ means â€˜Ori&Semâ€™ while â€˜OSCâ€™ is â€˜Ori&Sem&Conâ€™. â€˜Overallâ€™ is the average of â€˜Oriâ€™, â€˜Semâ€™, and â€˜Conâ€™.

AcknowledgementsThis work was supported by the Centre for Augmented Reasoning, an initiative by the Department of Education, Australian Government.