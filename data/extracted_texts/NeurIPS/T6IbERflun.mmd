# Correlating Variational Autoencoders Natively For Multi-View Imputation

Ella S. C. Orme

Department of Mathematics

Imperial College London

ella.orme18@imperial.ac.uk

&Marina Evangelou

Department of Mathematics

Imperial College London

m.evangelou@imperial.ac.uk

&Ulrich Paquet

African Institute for Mathematical Sciences, South Africa

ulrich@aims.ac.za

###### Abstract

Multi-view data from the same source often exhibit correlation. This is mirrored in correlation between the latent spaces of separate variational autoencoders (VAEs) trained on each data-view. A multi-view VAE approach is proposed that incorporates a joint prior with a non-zero correlation structure between the latent spaces of the VAEs. By enforcing such correlation structure, more strongly correlated latent spaces are uncovered. Using conditional distributions to move between these latent spaces, missing views can be imputed and used for downstream analysis. Learning this correlation structure involves maintaining validity of the prior distribution, as well as a successful parameterization that allows end-to-end learning.

## 1 Introduction

Data from multiple sources describing the same subjects arises in a wealth of settings. This can be clinical information of patients alongside genetic information and scan data. Datasets consisting of multiple views are referred to as multi-view or multi-modal data. There are instances where not all views are always available for every realisation. For example, a patient may miss an appointment or machinery may falter, resulting in no reading for a specific view. Missing data results in smaller usable datasets and reduced statistical power with many methods only applicable to full datasets  and can result in reduced performance in downstream analysis . This manuscript presents a multi-view imputation approach, where its aim is to impute the realisations of a missing view by incorporating the information learnt from the other view.

The proposed multi-view imputation method, named Joint Prior Variational Autoencoder (JPVAE), is based on variational autoencoders (VAEs) , with the views connected solely through a joint prior on the VAEs' latent embeddings. Standard autoencoders seek to encode a latent representation of data, and from this encoding reconstruct the original data via a decoder. Multi-view approaches allow the latent representation of a missing view to be obtained, from which the reconstruction can be used as an imputation of the missing view. Several multi-view imputation approaches exist in the literature based on autoencoders . However, as variational autoencoders learn a continuous embedding, they provide better interpolation of the latent space than standard autoencoders, making them a more suitable approach for an imputation method. The proposed joint prior in JPVAE incorporates a non-zero correlation structure that is found to increase the observed correlation between views in the latent spaces. This allows for successful movement between latent spaces, improving the ability to impute missing views.

Various approaches have been proposed extending VAEs to the multi view case, including those by , with missing data imputation included as a feature of these methods. Most recently, proposed methods differ via their method of approximating a joint posterior. Daunhawer et al.  discuss the undesirable upper bound these methods put on a lower limit of the log-likelihood used as the objective function in VAEs. In contrast to existing approaches, which largely assume some joint posterior and/or shared latent space, our work has the novelty that is based on a joint prior between the latent variables. To the best of our knowledge, this is the first attempt made to correlate the latent spaces of VAEs natively through a joint prior.

JPVAE is most similar in structure to the private version of Deep Variational Canonical Correlation Analysis (VCCA-private), a multi-view VAE approach by Wang et al. . However their model contains both private and shared variables in the latent space and doesn't have a suitable approach for imputing missing views. JPVAE can also be seen as an application of the ideas from self-supervised learning techniques such as Barlow Twins , where the embeddings from noisy versions of the same input are driven to be highly correlated via a loss function.

Figure 1 illustrates an application of the proposed approach JPVAE, on imputing view 2 of the data that corresponds to the bottom half of MNIST digits using the top half of the digits data (view 1). Through the proposed approach, reconstructions of missing views can be obtained. This is achieved through the conditional distribution between the two latent variables, as illustrated in Figure 2. By incorporating a joint prior with a non-zero cross-correlation structure, we observe better quality results in imputing view 2. Further realisations of image imputation, including imputation of view 1 from view 2, can be found in Appendix A.5.

### Contributions

A novel multi-view imputation approach based on variational autoencoders, named JPVAE, is proposed that in contrast to existing work assumes a joint prior between the latent variables.1 As the multiple views are correlated, the generated latent spaces are found also to be correlated. JPVAE

Figure 1: Imputation of the bottom half of MNIST digits (view 2 of the data) using the top half of the image (view 1) on a JPVAE model trained with (a) independent priors (completely separate VAEs) and (b) a joint prior with learnt correlation structure between latent spaces. The cross entropy loss between true bottom half of image and imputation is 109.1 in (a) and 93.04 in (b). A classifier trained on the concatenation of the reconstruction of view 1 and imputation of view 2 achieves average testing accuracy of 79.92% (1.0) in (a) and 87.45% (0.27) in (b). See Appendix A.5 for further details.

takes advantage of this correlation and whilst marginals for each VAE are assumed to follow a standard normal distribution, a joint prior is assumed with a non-zero cross correlation. The imposed correlation structure is learnt natively by forcing a stronger correlation in the latent space. Section 2 presents the proposed method and related theorems that showcase the validity of the proposed method. As part of our work, we present and prove theorems that enable the parameterization of differentiable positive definite matrices that allow end-to-end learning. Through our conducted experiments presented in Section 3, learning the correlation structure leads to improved imputation ability, lower reconstruction loss and better predictive likelihood. Imputed views from JPVAE can be used for downstream tasks, with improved classification accuracy demonstrated. Lastly, better VAE models are learnt with JPVAE preventing posterior collapse, a common problem observed with VAEs .

### Notation

Throughout this paper matrices are denoted by capital letters and column vectors are denoted by lower case letters, both emboldened. \(=\{_{i}\}_{i=1}^{n}\) with vector \(_{i}^{c}\) represents an entire dataset in \(^{n c}\), with \(_{i}\) an individual realisation. A diagonal matrix with vector \(\) along the diagonal is represented by \(()\). A block diagonal matrix with matrices \(_{i}\) along the diagonal is represented by \((_{i})\). Vertical concatenation of column vectors \(\) and \(\) is denoted by \((;)\) i.e. \((;)=(^{T};^{T})^{T}\). The eigenvalues and singular values of matrix \(\) are denoted by \(_{i}()\) and \(_{i}()\) respectively, indexed by subscript \(i\) in order of decreasing magnitude. \(\) denotes an identity matrix of relevant dimension.

## 2 Multi-view variational autoencoder with a joint prior

This section presents the novel multi-view VAE approach JPVAE where each view has a separate associated VAE. Before discussing the proposed approach in detail, the main concepts of VAEs are introduced. Subsequently the single-view VAE is extended to the multi-view setting and the joint prior is presented. The different components of JPVAE are presented including theoretical work on matrix parameterization which enables end-to-end learning.

### Variational autoencoder

A standard VAE seeks to encode data \(\) in a probabilistic latent space and decode from this space to reconstructed data \(}\). The goal is for \(}\) to be as close as possible to \(\). As the latent space is a probabilistic embedding rather than one obtained by a deterministic mapping, it has the advantage that

Figure 2: Workflow to obtain reconstruction \(}_{1}\) and imputation \(}_{2|1}\) from input \(_{1}\) only, on pre-trained JPVAE network. Trapeziums represent encoders/decoders and rectangles represent vectors. The structures for view 1 and 2 are shown in blue and orange respectively. The expectation step is shown in red.

it can be explored fully, including the sampling of new realisations from the same distribution as \(}\). These realisations are assumed to be taken from the same underlying distribution as \(\), \(p_{}()=p(|)\) where \(\) is the set of parameters defining the distribution.

VAEs are a type of variational Bayesian method that seek to find a lower bound for this marginal probability, \(p_{}()\), through a Bayesian framework. The likelihood of \(^{c}\) given latent variable \(^{d}\) is denoted by \(p_{}(|)\) and the prior for the latent variables, usually taken to be a standard normal, is denoted by \(p_{}()\). The encoder and decoder are neural networks that seek to learn the posterior distribution of \(\) given \(\), \(p_{}(|)\), and the likelihood of \(\) given \(\) respectively, given the assumed prior over the latent space. In order to make the posterior learnable, an _approximate_ posterior distribution is used that usually is a multivariate normal distribution. The approximation \(p_{}(|) q_{}(|)\) is made where \(\) denotes the parameters of the probabilistic encoder, \(q_{}(|)\). The encoder maps an input \(\) to a mean vector \(()^{d}\) and to the log of the vector of variances, \(^{2}()^{d}\). A sample is drawn from the approximate posterior distribution and this is used as an input to the neural network which acts as the decoder, \(D_{}\). As \(\) appears within the distribution of the latent variables, derivatives cannot simply be taken inside the expectation term. Differentiability of the loss function is required for the loss-driven parameter update steps and therefore a reparamaterization trick needs to be implemented .

Instead of drawing \(\) directly, \( N(,)\) is drawn and \(=()+(^{2}())\) is determined. The distribution over which we take expectation is now independent of the parameters for which we take derivatives, and derivative update steps may now be implemented. The neural network decoder then seeks to reconstruct \(\) from the latent variable \(\).

A maximum likelihood principle is then applied to the marginal likelihood of the data \(p_{}()\) to obtain estimates for the parameters within the encoders and decoders. As the likelihood is intractable a lower bound on the log-likelihood, known as the Evidence Lower Bound (ELBO) is instead maximised, given by:

\[(,)=_{ q_{}(|)}[ (p_{}(|))]-D_{KL}(q_{}(|)||p_{ }())\] (1)

where \(D_{KL}(r|s)\) denotes the Kullback-Leibler (KL) divergence between distributions \(r\) and \(s\). \(_{z q_{}(|)}()\) denotes the expectation with respect to the conditional distribution of \(\) given \(\). Maximising the ELBO is equivalent to finding a balance between an approximate posterior that is close to the prior and putting weight on the latent variable space that maximises the likelihood of the data given these same variables, \((p_{}(|))\). Without the KL term, the delta function is returned as the approximate posterior and the autoencoder is recovered.

With this VAE formulation the KL term often becomes very small or 'vanishes' leading to the posterior equalling the prior (posterior collapse). This is referred to as KL vanishing and leads to a decoder that is largely independent of the latent variables. See  for further discussion of this problem. To combat this, we implement KL annealing - a procedure where a weight \(\) is introduced on the KL term and gradually increased, typically from 0, as learning occurs . The objective function becomes:

\[_{}(,)=_{ q_{}(|)} [(p_{}(|))]- D_{KL}(q_{}(| )||p_{}()).\] (2)

It is now assumed two data views with shared row dimension are present and represented by \(=\{_{1},_{2}\}\) with \(_{i}^{N c_{i}}\). For brevity, the sample subscript is dropped and \(_{i}^{c_{i}}\) refers to an individual realisation from view \(i\). Here \(N\) is the number of rows in both views and \(c_{i}\) is the number of columns in view \(i=1,2\). This shared row dimension implies the views are paired, with row \(j\) representing the same individual/sample in both views. This allows for meaningful correlation in the latent space. The notation introduced in this section for single view VAEs is used in the following sections where multi-view VAEs are presented. Subscripts are used to denote the relevant views e.g. the encoder and decoder in view \(i\) are represented by \(E_{i_{i}}\) and \(D_{i_{i}}\) respectively.

### Joint prior variational autoencoder

As the different views in a multi-view dataset are from a common source, correlation exists between the views. This translates to correlation between the latent spaces of each view from independently trained VAEs. JPVAE takes advantage of this correlation, enforcing the relationship between the two views via a joint prior on the latent variables, as illustrated in Figure 3. Enforcing the proposed correlation structure between the latent spaces ensures we can move from the original space where data are highly correlated in a non-linear fashion, to a space where the correlation is linear, and back to the reconstructed space that has a non-linear correlation. The marginal prior on the latent variables corresponding to each view is a standard normal, as with the traditional VAE. However, a cross-covariance matrix \(\) is assumed between the latent variables \(_{1}\) and \(_{2}\). Having separate VAE structures for each view assumes conditional independence in both directions: (a) given the data the latent variables are independent, and (b) given the latent variables the data are independent. This allows the unique features of each view to be encoded and decoded.

As the latent spaces are linearly correlated, it is possible to move between them via the conditional distribution, as illustrated in Figure 2. This allows for imputation of missing views, obtaining a reconstruction of \(_{2}\) solely from realisation \(_{1}\) (and vice versa). If a joint prior is not assumed, separate VAEs are trained on each view and there is no correlation enforced between latent spaces. Whilst some correlation exists between the latent spaces, it is not as strong, and therefore may not produce as accurate reproductions, as illustrated in the numerical experiments of Section 3.

### Objective function

By assuming that latent variables for each view are independent given the data, the approximated posterior distributed can be expressed as:

\[q_{}(|)=q_{(_{1},_{2})}((_{1},_{2})|(_{1},_{2}))=q_{_{1}}(_{1}|_{1})q_{_{2}}(_{2}| _{2}).\] (3)

The individual approximate posteriors \(q_{_{i}}(|_{i})\) are multivariate Gaussians with mean and covariance matrix determined by the output of \(E_{i_{i}}\). For input \(_{i}\), these are \(_{i}(_{i})\) and \((_{i}^{2}(_{i}))\) respectively. As the posteriors are assumed to be independent, the joint distribution is multivariate Gaussian with mean \((_{1}(_{1});_{2}(_{2}))\). The covariance matrix is represented by \((_{i}(_{i}))\) with \(_{i}(_{i})=(_{i}^{2}(_{i}))\). Similarly, by assuming the data is independent given the latent variables, the likelihood function can be expressed as:

\[p_{}(|)=p_{(_{1},_{2})}((_{1},_{2}) |(_{1},_{2}))=p_{_{1}}(_{1}|_{1})p_{_{2}} (_{2}|_{2}).\] (4)

This is equivalent to having separate encoders and decoders for each view but with a joint prior. Assuming independence means the expectation term in the ELBO can be separated into terms corresponding to the separate views:

\[_{ q_{}(|)}[p_{ }(|)]=_{_{1} q_{_{1}}(|_ {1})}[p_{_{1}}(_{1}|_{1})]+ _{_{2} q_{_{2}}(|_{2})}[p_{_{2}}(_{2}|_{2})].\]

Figure 3: Workflow to obtain reconstructions \(}_{1}\) and \(}_{2}\) from realisations \(_{1}\) and \(_{2}\) using a learnt JPVAE structure. Trapeziums present the encoders and decoders of the two views. Vectors are presented by the rectangles. The structures for view 1 and 2 are shown in blue and orange respectively. The prior on the latent variables is shown in red.

The objective function therefore becomes:

\[_{}(_{1},_{1},_{2},_{2})= _{_{1} q_{_{1}}(|)}[p_{_{1}}(_{1}|_{1})]+_{_{1} q_{ _{2}}(|)}[p_{_{2}}(_{2}|_{2})]\] (5) \[- D_{KL}(q_{_{1}}(|_{1})q_{_{2}}(| {x}_{2}) p_{}()).\]

### Joint prior

There are assumed to be \(n_{i}\) latent variables in the VAE for view \(i\), represented by the random vector \(_{i}^{n_{i}}\). Without loss of generality it is that assumed \(n_{1} n_{2}\). The joint prior distribution of the random vector \(=(_{1},_{2})^{n_{1}+n_{2}}\) is assumed to be a multivariate normal with mean \(\) and covariance matrix, \(_{C}\):

\[_{C}=_{1}&^{T}\\ &_{2}\] (6)

where \(^{n_{2} n_{1}}\) is the cross-covariance matrix encapsulating the relationship between the two latent spaces. \(_{i}\) is the \(n_{i} n_{i}\) identity matrix. As \(_{C}\) is a covariance matrix, it needs to satisfy two conditions: symmetry and positive semi-definiteness. With the defined structure it is clearly symmetric and so it is sufficient to require \(_{C}\) to be a positive semi-definite matrix to ensure it is a well-defined covariance matrix. For a covariance matrix with structure as defined in Eq. 6, it is useful to note that \(_{C}\) is positive definite if and only if \(_{1}-^{T}\) (or \(_{2}-^{T}\)) is positive definite . Additionally, as (a) a real symmetric matrix is positive (semi) definite if and only if all of its eigenvalues are positive (non-negative) [17, p. 51] and (b) a matrix is invertible if and only if all of its eigenvalues are non-zero, covariance matrix \(_{C}\) (and \(_{1}-^{T}/_{2}-^{T}\)) is positive definite if and only if it is invertible.

### Kullback-Leibler divergence term

As discussed earlier, for calculating the ELBO for the proposed prior, the KL divergence between \(q_{_{1}}(|_{1})q_{_{2}}(|_{2})\) and the prior on \((_{1},_{2})\), \(p_{}\), is required. The following general result on KL divergence between multivariate Gaussians is applied in this setting.

Between two \(k\)-dimensional multivariate Gaussians \(r\) and \(s\) with respective means \(_{r}\) and \(_{s}\) and respective covariance matrices \(_{r}\) and \(_{s}\), the KL divergence is given by :

\[D_{KL}(s||r)=[_{r}|}{|_{s}|}-k+(_{s}-_{r})^{T}_{r}^{-1} (_{s}-_{r})+\{_{r}^{-1} _{s}\}].\] (7)

As this assumes the existence of \(_{r}^{-1}\) and \(_{s}^{-1}\), both covariance matrices must be positive definite.

By utilising the result of Eq. 7 with the prior over \(=(_{1},_{2})\) set as \(r=p_{}\), and the approximate posterior distribution as \(s=q_{_{1}}(|_{1})q_{_{2}}(|_{2})\), the KL term of Eq. 2 is obtained. Explicitly, \(p_{}=N(,_{C})\) and \(q_{_{1}}(|_{1})q_{_{2}}(|_{2})=N((_{1}( _{1}),_{2}(_{2})),_{q})\) with \(_{q}=(_{i})\). For the utilisation of Eq. 7, it is assumed that \(_{C}\) is positive definite and the variances of the approximate posterior are positive.

Using the block matrix inverse result from (19, p. 18) (stated in Appendix A.1.1) the inverse of \(_{C}\) is given by:

\[_{C}^{-1}=_{1}&-_{1}^{T}\\ -_{2}&_{2}\] (8)

where \(_{1}=(_{1}-^{T})^{-1}\) and \(_{2}=(_{2}-^{T})^{-1}\). These inverses are guaranteed to exist, given the assumption of positive definiteness on \(_{C}\). Using Eq. 8 and properties of the trace, we obtain:

\[\{_{C}^{-1}_{q}\}= \{_{1}_{1}&-_{1}^{T} _{2}\\ -_{2}_{1}&_{2}_{2}\} =\{_{1}_{1}\}+\{_{2 }_{2}\}.\]

Additionally, as \(_{}\) is a block matrix, \(|_{C}|=|_{1}-^{T}|=1/|_{1}|=1/|_{2}|\)[20, p. 114]. Similarly. as \(_{q}\) is a diagonal matrix we have \(|_{q}|=|_{1}||_{2}|\). Writing \(_{i}=_{i}(_{i})\) and notingthat \(_{p}=0\), we obtain:

\[D_{KL}(q_{_{1}}(|_{1})q_{_{2}}(|_{2}) ||p_{}) =[_{1}^{T}_{1}_{1}-|_{1}|-n_{1}+\{_{1}_{1}\}]\] (9) \[+[_{2}^{T}_{2}_{2}- |_{2}|-n_{2}+\{_{2}_{2} \}]\] \[-[|_{1}|+_{1}^{T}_{ 1}^{T}_{2}+_{2}^{T}_{2}_{1}].\]

### Matrix parameterization

The matrix \(\) is unknown and therefore must be either chosen apriori or be optimised. In our work, \(\) is updated along with all other parameters at each update step, using the ELBO function as the loss function. By doing this, two challenges were faced and addressed. Firstly, \(C\) must be updated in such a way that \(_{C}\) is a valid covariance matrix. Secondly, a differentiable parameterization of \(C\) is needed to allow for end-to-end learning. Conditions for validity of the update step are outlined in the following theorems.

**Theorem 2.1**.: \(_{C}\) _defined as in Eq. 6 is positive semi-definite if and only if all singular values of \(C\) are bounded by 1._

Proof.: Due to previous remarks, it is equivalent to show that \(_{1}-^{T}\) is positive semi-definite if and only if the singular values of \(\) are bounded by 1. Further, this is equivalent to the showing that eigenvalues of \(_{1}-^{T}\) are non-negative if and only if the eigenvalues of \(C\) are bounded by 1.

The eigenvalues of \(^{T}\) are given by \(\{_{k}^{2}()\}_{k=1}^{n_{1}}\) meaning the eigenvalues of \(-^{T}\) are given by \(\{-_{k}^{2}()\}_{k=1}^{n_{1}}\). Applying Weyl's Theorem [19, p. 242] (stated in Appendix A.1.2) to \(_{1}-^{T}\) implies:

\[_{1}(_{1})+_{n_{1}+1-k}(-^{T}) _{k}(_{1}-^{T})_{n_{1}}( _{1})+_{n_{1}+1-k}(-^{T})\] (10) \[ 1_{k}(_{1}-^{T})-_{n_{1}+1-k}( -^{T}) 1\]

which combined with the relations above gives \(_{k}(_{1}-^{T})=1+_{n_{1}+1-k}(-^{T})=1-_{n_{1}+1-k}^{2}()\). Therefore all eigenvalues of \(_{1}-^{T}\) are non-negative if and only if all singular values of \(C\) are bounded by 1. 

If the inequality on \(_{1}()\) is replaced by a strict inequality then \(_{C}\) is guaranteed to be positive definite. This is clear as all eigenvalues of \(_{1}-^{T}\) are now positive which ensures positive definiteness. This guarantees the applicability of Eq. 9. A further restriction, outlined in Theorem 2.2, can be made which enables a different parameterization of \(C\) which assumes a scaled orthogonal relationship between the views.

**Theorem 2.2**.: _If \(=}^{n_{2} n_{1}}\) where \(|| 1\) and \(}\) is a semi-orthogonal matrix (\(}^{T}}=I_{1}\)) then \(_{C}\) is positive semi-definite._

Proof.: Given the assumed structure on \(\), we have the following:

\[_{1}-^{T}=_{1}-^{2}}^{T}}=(1-^{2})_{1}.\] (11)

As \(_{1}\) is positive semi definite, if \(|| 1\) then, so too is \(_{1}-^{T}\). 

Alternatively, this could be seen as a corollary to Theorem 2.1 - due to the semi-orthogonality of \(}\), all singular values of \(}\) are equal to 1 which means \(_{i}()=\) with \(|| 1\). Again, if the condition on \(\) is replaced with a strict inequality (\(||<1\)) this guarantees applicability of Eq. 9. A simplification of Eq. 9 assuming this orthogonality condition can be found in Appendix A.2.

To ensure applicability of Eq. 9, we can either require (a) \(=}\) with \(}\) an orthogonal matrix and \(||<1\) or (b) \(_{1}()<1\). The latter requires a matrix factorisation of \(\) which includes singular values. The most obvious approach is to use a singular value decomposition (SVD) of \(\) _i.e._\(=^{T}\) where \(\) and \(\) are orthogonal matrices and \(\) is the matrix of singular values i.e. \(=(_{k}())\). These singular values can be parameterized by \(_{k}()=(1-(-_{k})/(1+(-_{k}))\) for \(_{k}\). To fully parameterize \(\) with the singular value constraint, a parameterization of orthogonal matrices \(\) and \(\) is needed. Similarly, a parameterization of orthogonal \(}\) is needed for option (a). The following assumes \(n_{1}=n_{2}=n\).

As discussed by Shepard et al. , there are four popular parameterizations of orthogonal matrices. All methods in their preliminary form parameterize at most a subset of the orthogonal matrices (at maximum those with determinant +1 or -1). These parameterizations must therefore be extended to map to the entire orthogonal matrix space. As it is the only one-to-one mapping, the rational Cayley transform has been chosen for use within JPVAE. In its original form, the Cayley transform tells us that for all orthogonal matrices with no eigenvalues equal to 1, there exists a unique skew-symmetric matrix \(^{m m}\) such that \(=(+)(-)^{-1}\). To extend the parameterization to the full space of orthogonal matrices, an extra matrix consisting of 1s and \(-1\)s along the diagonal is needed [23; 24]. Let \(=([_{m-r};-_{r}])\) where \(r=(m/(1+(-s)))\) for \(s\). Then \(=(+)(-)^{-1}\) is a mapping onto the space of orthogonal matrices. \(}\) is therefore parameterized in full by \((n-1)^{2}/2+1\) parameters: \(\{\{a_{ij}:i<j i,j\{1, ,n\}\},\{s\}\}\).

### Imputation

Once the model has been learned on the training data, missing views can be imputed. Assume data is available for view \(j\), but not view \(i\), given \(_{j}\) we can impute the missing value of \(_{i}\). Data \(_{j}\) is fed into the encoder for view \(j\), \(E_{j}\), and latent variables are sampled giving \(_{j}=\). An estimate of \(_{i}\) can be obtained using the conditional distribution of \(_{i}\) given \(_{j}\). This is fed through decoder \(i\), \(D_{i}\), to produce an estimate of \(_{i}\) given \(_{j}\), \(}_{i|j}\).

The joint marginal of \(_{1}\) and \(_{2}\) is assumed to be a multivariate normal with mean \([_{1};_{2}]\) and covariance matrix \(\). The maximum likelihood estimator for the mean and covariance are obtained and denoted by \([_{1}};_{2}]\) and \(}\) respectively. As any subset of variables from a multivariate normal conditioned on a known second subset of variables also follows a multivariate normal distribution, the conditional distribution can be found explicitly. For \(i j\), the distribution of \(_{i}\) given \(_{j}=\) is observed is:

\[_{i}|_{j}= N(}_{i}+}_{ ij}}_{jj}^{-1}(-}_{j}),}_{ii}- }_{ij}}_{jj}^{-1}}_{ji})\] (12)

where \(}_{kl}^{n_{k} n_{l}}\) is the submatrix of \(}\) corresponding to the variables associated with view \(k\) and view \(l\). The conditional mean \((_{i}|_{j}=)=}_{i}+}_{ ij}}_{jj}^{-1}(-}_{j})\) is then used as an estimate of the latent variables in latent space \(i\) and fed into \(D_{i}\) to obtain \(}_{i|j}\), the imputed value of \(_{i}\) given \(_{j}\).

## 3 Numerical experiments

Through a series of experiments the performance of JPVAE is explored for both imputation purposes as well as for downstream analyses like classification. As JPVAE enables imputation of missing views (\(}_{i|j}\)), this ability is investigated alongside reconstruction of views (\(}_{i}\)).

A multi-view dataset was created from the binary version of the popular MNIST dataset, which consists of handwritten digits from \(0\) to \(9\). For each image, the top half was taken as view 1 and the bottom half was taken as view 2. This dataset of halved images is referred to as hvdMNIST. The hvdMNIST dataset has the desirable property of having a strong correlation between views. The dataset contains \(50,000\) training images and \(10,000\) test images. Experiments are repeated with 5 different random seeds and the average and standard deviation reported. Details on the model architecture and training details can be found in Appendices A.3 and A.4 respectively.

Two variants of JPVAE are explored, where in each one the validity of \(_{C}\) is enforced via different ways. The first variant imposes a bound on singular values (such that \(_{1}()<1\)). The second variant enforces a scaled orthogonality where \(^{T}=^{T}=^{2}\), with the value of \(\) set as \(0.95\). The two variants of JPVAE are compared with the \(=\) case, which corresponds to completely disjoint VAEs for each view.

Without explicitly learning a correlation structure, correlation is present between the two generated latent spaces. By incorporating a joint prior with a non-zero cross-correlation as presented in Eq. 6into the loss function, JPVAE increases the correlation between views in the latent space as shown in Figure 4. Table 1 illustrates the improvement in the ability to reconstruct view 2 given view 1 and vice versa when correlation structure is learnt. Enforcing the orthogonality restriction improves the performance of JPVAE compared with simply applying the singular value bound.

The improved performance of the method is enabled by the learnt correlation that prevents posterior collapse. Following the work by , the phenomenon of posterior collapse is indicated by the percentage of active units (AU). The activity of unit \(u\) in the latent space is measured by \(_{u}=_{}(_{u q(u| )}[u])\). A unit is considered active, _i.e._ to not have suffered from posterior collapse, if \(A_{u} 10^{-2}\). A higher percentage of AUs are preserved when \(\) is learnt, with the best case scenario observed with the orthogonality constraint (Table 2). Wang et al.  proved that posterior collapse is equivalent to latent variable non-identifiability. This indicates that by enforcing the orthogonality restriction, we make the latent variable space identifiable.

The imputed views, \(}_{1|2}\) and \(}_{2|1}\), can be used for downstream tasks. If not all views are available for an individual, this allows techniques requiring all views to be applied. As an illustration of the performance of the imputed data in downstream tasks, a basic multi-layer perceptron classifier was

   &  &  \\   & \(}_{1}\) & \(}_{2}\) & \(}_{1|2}\) & \(}_{2|1}\) \\  \(=\) & 24.64 (0.37) & 25.56 (0.24) & 114.1 (2.3) & 127.5 (3.2) \\ \(_{1}()<1\) & 24.08 (0.44) & 25.02 (0.21) & 106.6 (1.4) & 117.4 (4.1) \\ \(^{T}=^{T}=^{2}\) & **23.41** (0.29) & **23.98** (0.31) & **97.25** (1.9) & **106.6** (1.9) \\  

Table 1: Average reconstruction losses across the entire dataset. Best results in bold, standard deviation in brackets.

   & AU \\  \(=\) & 61 (1.4) \\ \(_{1}()<1\) & 66 (1.4) \\ \(^{T}=^{T}=^{2}\) & **98.5** (2.2) \\  

Table 2: The percentage (%) of active units (AU) across latent spaces \((_{1},_{2})\), out of a total 40. Best results in bold, standard deviation in brackets.

Figure 4: Empirical cross-correlation between view 1 and view 2 in the latent spaces. The left plot represents empirical cross-correlation for \(=\) and the right shows the same for \(\) learnt with the orthogonality restriction imposed. The Frobenius norm of these matrices are 1.703 and 3.448 respectively.

trained and tested on different combinations of reconstructed and imputed views. The performance of a classifier trained on the reconstructed data indicates that when \(\) is learnt, the relevant signal remains present in both the reconstructed and the imputed data. The performance on imputed data is greatly improved by learning \(\), and in particular by enforcing the orthogonality constraint (Table 3; results with standard deviation can be found in Figure 9.).

Not only does learning correlation structure improve the ability to impute data, the reconstruction loss and classification accuracy for reconstructed data \(_{i}\) is improved compared with those scores seen when training each view on separate VAEs (Table 1). This may be due to the increased use of the latent space, as evidenced by the higher percentage of active units. Whilst a classifier trained on the imputed data from \(=\) demonstrates the retention of signal, the low accuracy seen for a classifier trained on reconstructed data and high reconstruction loss indicates that it does not retain the specific signature of the input. For example, taking the top half of a digit '2' as the input, it may correctly reconstruct the bottom half of a realisation of the digit '2' but not correctly reconstruct the specific realisation (as seen in Figure 0(a)).

Using the joint prior we see that the view with stronger signal (view 1) is bolstering the classification of the view with weaker signal (view 2). Whilst classification accuracy on \(_{1}\) is higher than that on \(_{2}\), the accuracy on the imputed data \(}_{2|1}\) sees a smaller drop, and is greater than that of \(}_{1|2}\). Notably, the accuracy on imputed data \((}_{2|1},}_{2|1})\) is comparable to that on \((}_{2},}_{2})\) whilst the same for view 1 experiences a drop in performance.

## 4 Conclusions

A novel multi-view VAE approach has been proposed that natively strengthens the correlation between latent spaces via a joint prior. This is the first time that a connection between multi-view VAEs is made through a joint prior rather than a joint posterior, as has previously been implemented in the literature. Theoretical guarantees and parameterizations are presented that allow for end-to-end learning. By simultaneously preventing posterior collapse, JPVAE returns superior models and demonstrates a promising ability to impute missing data suitable for downstream tasks.

    &  &  \\   & \((}_{1},}_{1})\) & \((}_{1},}_{1|2})\) & \((}_{1|2},}_{1|2})\) & \((}_{2},}_{2})\) & \((}_{2},}_{2|1})\) & \((}_{2|1},}_{2|1})\) \\  \(=\) & 89.07 & 47.21 & 77.22 & 85.88 & 51.83 & 78.81 \\ \(_{1}()<1\) & 89.67 & 64.50 & 80.22 & 86.46 & 67.06 & 82.38 \\ \(^{T}=^{T}=^{2}\) & 90.31 & 77.22 & 83.54 & 87.80 & 76.55 & 86.30 \\   

Table 3: Results for \((,)\) represent classification accuracy % for model trained on the training split of \(\) and tested on the test split of \(\). Accuracies for \((}_{1},}_{1})\) and \((}_{2},}_{2})\) with standard deviation in brackets are \(93.59\%\) (\(0.25\)) and \(90.83\%\) (\(0.23\)) respectively. Best results in bold. For clarity, results with standard deviation reported can be found in Figure 9.