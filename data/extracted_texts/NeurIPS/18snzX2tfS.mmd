# Lithium-Ion Battery System Health Monitoring and Resistance-Based Fault Analysis from Field Data Using Recursive Spatiotemporal Gaussian Processes

Lithium-Ion Battery System Health Monitoring and Resistance-Based Fault Analysis from Field Data Using Recursive Spatiotemporal Gaussian Processes

Joachim Schaeffer

Control and Cyber-Physical Systems

Technical University of Darmstadt, Germany

Massachusetts Institute of Technology

Cambridge, MA, USA

&Eric Lenz

Control and Cyber-Physical Systems

Technical University of Darmstadt, Germany

Massachusetts Institute of Technology

Cambridge, MA, USA

&Duncan Gulla

Control and Cyber-Physical Systems

Technical University of Darmstadt, Germany

&Martin Z. Bazant

Massachusetts Institute of Technology

Cambridge, MA, USA

Richard D. Braatz

Massachusetts Institute of Technology

Cambridge, MA, USA

braatz@mit.edu&Rolf Findeisen

Control and Cyber-Physical Systems

Technical University of Darmstadt, Germany

rolf.findeisen@iat.tu-darmstadt.de

###### Abstract

Health monitoring is important for the safe operation of battery systems. We use recursive spatiotemporal Gaussian processes to model the resistance of lithium iron phosphate batteries from field data. These processes scale linearly with the number of data points, allowing online monitoring. The kernels separate the time-dependent and operating-point-dependent resistance contributions. We develop probabilistic fault probabilities based on time-dependent resistance estimates. The fault analysis underlines that often, only a single cell shows abnormal behavior, consistent with weakest-link failure for cells connected in series, amplified by local resistive heating. The results further the understanding of how battery packs degrade and fail in the field and demonstrate the potential of online monitoring. The data set contains 28 battery systems returned to the manufacturer for warranty, each with eight cells in series, totaling 224 cells and 133 million data rows. The data and code are openly available.

_Disclaimer:_ This extended abstract is based on .

## 1 Introduction

Lithium-Ion Batteries (LIBs) are essential for Electric Vehicles (EVs), grid storage, mobile applications, consumer electronics, and more. Over the last 30 years, remarkable advances have led to long-lasting cells with high energy efficiency and density . Safe operation of LIBs is vital to protect life and property and to strengthen trust in LIBs. In the past, LIB fires erupted in many different applications, including EVs , stationary storage , and electric bicycles . Monitoring batteries during operation is important to have a chance of detecting electrical or mechanical abuse of the system or the onset of accelerated cell degradation, which is critical to reducing the potential of such fires. Faults are abnormal events that cause the system to behave in an unintended way or stop operating. Battery system faults can be auxiliary, sensor, or battery faults. Fault detection methodscan be categorized as signal-based or model-based. Much research considers fast signal-based fault detection for battery systems [6; 7; 8]. Model-based fault detection methods complement signal-based fault detection because they are usually computationally more complex and slower. However, they can potentially detect certain faults earlier and improve robustness (see [9; 10; 11; 12; 13; 14; 15]). In particular, battery system faults, which are often due to slow battery degradation, can be addressed by a model to estimate State Of Health (SOH) batteries [16; 17; 18; 19].

Physics-based, machine learning, and empirical methods are available to model the cycling and degradation behavior of battery cells and systems [20; 21; 22; 23; 24; 25; 26; 27]. Choosing an appropriate model is important to optimally use the available data . Physics-based battery models are often challenging to parameterize with battery field data, i.e., time series data consisting of noisy temperature, current, and voltage measurements corresponding to the system, module, and cell level . Equivalent Circuit Models (ECMs) are an alternative because they are easier to parameterize with limited data  and are applicable to field data . We apply spatiotemporal Gaussian Processes (GPs) [29; 30] to battery field data with uncontrolled operational conditions , that is, the device is in the hands of the customer, who can use and potentially abuse the battery system. We build on a hybrid approach that uses GPs and ECMs developed in  for single-cell lead-acid batteries and adapt the model to Lithium-Iron-Phosphate (LFP) battery systems. This hybrid approach estimates an operational point-dependent and a temperature-dependent resistance as two resistors in series . We developed fault probabilities , which allow monitoring the homogeneity of cell resistances and the probability of a single cell exceeding a maximum resistance threshold. The data set contains 28 systems and 133 million data rows. The data and associated Python package _BattGP_ are available as open source. This data set is the first field data set of batteries that failed in the field.

## 2 Data and Model

The data set contains data from 28 portable 24 V LFP battery systems, each with eight cells in series (224 cells in total), with approximately 160 Ah nominal capacity per cell. The specific use case of each system is unknown, but battery systems of this size are typically used as power sources for recreational vehicles, solar energy storage, and more. All battery systems in this data set showed some form of unsatisfactory behavior and were returned to the manufacturer. This can be motivated by personal judgment, Battery Management System (BMS) warnings, or customer support advice. This data set comprises a very small fraction of the batteries sold in this version. Therefore, this data set is biased and not representative of the operational data of the entire population of this system type. An improved version replaced this battery system type. The battery system manufacturer provided the data set for this study and allowed its open-source release under the condition of anonymity.

Each battery system consists of 8 prismatic cells in series. Each system has one load current sensor and each cell has one voltage sensor. The four temperature sensors are placed between adjacent cells; thus, each temperature sensor is shared by two cells (Fig. 1a). Furthermore, these battery systems have active cell balancing. The available measurements for the systems range from a single month to five years. Consequently, the number of data rows per system varies from several thousand to millions, depending on the duration of battery operation. The data set contains a total of 133 million rows. More technical specifications are described in Sec. A.7, Tab. 2. As an example, the 24.2 million data rows associated with system 8 are visualized in Sec. A.8, Fig. 5.

GPs, \(f(x)((x),k(x,x^{}))\), defined by a mean function \((x)\) and a covariance function \(k(x,x^{})\), are nonparametric probabilistic models defining a distribution of functions . GPs are suitable for modeling the time- and operating point behavior of batteries [1; 16; 17]. We base our analysis on a GP-ECM modeling framework that uses an ECM consisting of two series resistors modeled by two additive kernels (Fig. 1b) suggested by . A Radial Basis Function (RBF) kernel models the current, State Of Charge (SOC), and temperature-dependent resistance. The resulting RBF kernel function estimates are infinitely many times differentiable, roughly in agreement with smooth experimental results . A non-stationary Wiener velocity kernel models time-dependent resistance, which is expected to increase with increasing degradation. We use a linear approximate Open-Circuit Voltage (OCV) because the exact OCV was not available (Sec. A.6, Fig. 4). Any deviation from the true OCV will lead to a biased resistance; however, this bias is only a function of SOC and will therefore affect mainly the SOC dimension of the RBF kernel (Fig. 3b). Furthermore, even if a precisely measured OCV would be available at the beginning of life, the OCV is expected to change with degradation. The GP-ECM algorithm consists of the following steps for a single cell. Voltage,current, SOC, and time are extracted and down-selected to use only data points with significant information for the learning task and to avoid sparse extreme conditions where little data are available or the simple R-R model is less suitable. We use only discharge data because, in the data set, more dynamics are present during discharging (see Tab. 1 for selection criteria). In an online setting, the ECM-GP needs to be updated continuously with new data arriving. The computational complexity of exact GPs scales with \((n^{3})\), where \(n\) is the number of data points, making it computationally infeasible to update the model continuously with new data arriving. Therefore, we use a recursive spatiotemporal GP, which scales linearly with the number of data points [16; 29; 30], allowing the processing of millions of data points on a laptop computer and suitable for the use in embedded BMS systems. The spatiotemporal GP approach is described mathematically in Sec. A.1. Our approach is motivated by  but not identical. We generate an independent model for each cell, resulting in eight models for each battery system. The hyperparameters were optimized as outlined in Sec. A.3. Identical hyperparameters are used for all battery systems because the hyperparameters characterize the system behavior, and all systems are identical in construction.

## 3 Results

Figure 2 shows the time-dependent resistance modeled by the Wiener velocity kernel at the same reference operating point (\(-15\) A, 90% SOC, \(25^{}\)C) for systems 6, 8 and 9, selected as a showcase for this extended abstract. Systems 6 and 8 show seasonal temperature variations. These variations pose challenges for the GP framework because the Wiener velocity kernel resistance estimates are affected by the temperature variations, with lower temperatures leading to higher resistance estimates (e.g., [32; 33]). Consequently, using the resistance time derivative for forecasting (as suggested in  for lead-acid batteries) appears challenging for lithium-ion batteries. Furthermore, the resistance time derivative at time \(t_{0}\) should not be used for forecasting as it can be significantly influenced by data \(t>t_{0}\). Systems 6 and 9 show a single cell behaving differently than the remaining cells. Battery system 8 shows an increasing resistance trajectory for all cells at roughly the same time. Their resistance trajectories suggest that these systems were healthy for most of their operation, with degradation accelerating toward the end of use. These resistance patterns can have a wide variety of root causes. To further understand the cause of individual degradation, a mechanical inspection of the systems would be necessary, but this cannot be done because the returned battery systems are not physically available to the authors.

We propose to define a battery pack consisting of cells in series to have an acceptable resistance distribution if the internal resistances of each cell are within a resistance band centered around a robust estimate of the mean of the other cells. We use the Hodge-Lehman estimator  to estimate the location (i.e., the mean) of cell resistances. A derivation of the resistance band probabilities is shown in Sec. A.4. The spatiotemporal GP walks forward in time using a Kalman filter. To calculate the fault probabilities, we use the Kalman filter resistance estimates at time \(t_{k}\), which depend only on data up to time \(t_{k}\) (Fig. 2 bottom). We set \(b=0.55\) m\(\) based on the resistance spread observed at the beginning of life for the investigated systems. The forward fault probabilities need a certain amount of data to settle in, here in the order of 30-200 days (Fig. 2 bottom), depending on the usage of the system. During this initial period, the GP learns the operating characteristics of the systems (Fig. 3).

Figure 1: a) Battery system with 8 cells, temperature sensors (red) shared by two cells. b) ECM model with illustrations of random draws from the kernel functions. Adapted from .

_System 6:_ The fault probability for cell 8 is significantly higher than for the other cells even after the Kalman filter settled in after approximately 200 days. After 500 days, the fault probability of cell 8 starts increasing and crosses 0.5 shortly before 800 days. The remaining cells have a very low fault probability.

_System 8:_ Around 1100-1200 days, multiple cell resistance fault probabilities and the weakest link statistic increase sharply, coinciding with the lower temperatures. Around 1300 days, the weakest link statistic reaches values close to 1, which is consistent with the increasing spread between cell resistances. System 8 reached an equivalent full cycle count of 1531 cycles, with seasonal temperature variations but a long-term upward resistance trend with increasingly inhomogeneous resistance as commonly observed by cell-to-cell variability .

_System 9:_ The fault probabilities increase quickly around day 250 for cell 2. In contrast, the other cells have a low fault probability, except for cell 1, which might be affected because it shares a temperature sensor with cell 2. The operating characteristics, i.e., \(R(I,\) SOC, \(T)\), modeled by the RBF kernel (Fig. 3), are consistent with physical expectations and experimental data from . The current-dependent resistance shows a downward trend with increasing discharge current . The SOC dependent resistance is fairly flat. Some unexpected small upward and downward trends can be attributed to the linear pseudo OCV (Sec. A.6, Fig. 4). The temperature characteristics show increasing resistance at low and very high temperatures, which is in line with physical expectations (for more details, see SI of ). Here, we'd like to point out further challenges. First, the influence of seasonal temperature variations on the Wiener velocity kernel currently prevents using resistance derivatives for forecasting. Second, reducing the time and data it takes for the Kalman filter to settle in is important. Pre-initializing the matrices of the spatiotemporal GP based on laboratory test data could be a possible pathway. Third, the cells share common operating characteristics; however, there are also cell-to-cell variations and sensor bias affecting the operating characteristics (Figs. 3, 2 and ). Coupling the individual cell GPs could further improve robustness.

Figure 3: Operating characteristics for all cells of system 8 at \(t=1476\) days, using 319.278 data points for each cell. a) Current dependency, b) SOC dependency, c) Temperature dependency.

Figure 2: a) System 6, b) System 8, c) System 9. Top: Time-dependent Wiener velocity kernel resistance at \(-15\,\)A, 90% SOC, \(25^{}\)C. Top middle: Average daily temperatures. Top bottom: data points. Bottom: Forward Kalman filter based resistance distribution fault probabilities for each cell in color. Variance of the GP resistance mean in black. Adapted from .

Conclusion

Health monitoring is important for the safe operation of battery systems. We use a recursive spatiotemporal GP-ECM framework to analyze faults from battery field data. The estimated time-dependent resistance is one possible SOH metric for lithium-ion battery packs. Furthermore, we developed resistance fault probabilities using the individual cell resistance of the cells in a pack, which is suitable for early online monitoring. The results show that often, a single cell with abnormal performance can cause the end of a system's use and suggest that such faults can be detected with the proposed framework. Abnormal performance can occur after heavy use due to degradation or other issues. Furthermore, the results support that if a cell has a higher resistance early on, this can already be an indicator that this cell will age faster than the remaining cells. Physically, this could occur by enhanced resistive heating of the most degraded cell, thereby accelerating its degradation , which has been observed in the case of lithium-ion batteries connected in series .

Data and Code AvailabilityThe associated Python software _BattGP_ is available on GitHub: [https://github.com/JoachimSchaeffer/BattGP](https://github.com/JoachimSchaeffer/BattGP). The dataset is available on Zenodo: [https://zenodo.org/records/13715694](https://zenodo.org/records/13715694).