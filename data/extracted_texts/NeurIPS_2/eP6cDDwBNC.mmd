# TRIAGE: Characterizing and auditing training data for improved regression

Nabeel Seedat

University of Cambridge

ns741@cam.ac.uk

&Jonathan Crabbe

University of Cambridge

jc2133@cam.ac.uk

&Zhaozhi Qian

University of Cambridge

zq224@cam.ac.uk &Mihaela van der Schaar

University of Cambridge

mv472@cam.ac.uk

###### Abstract

Data quality is crucial for robust machine learning algorithms, with the recent interest in data-centric AI emphasizing the importance of training data characterization. However, current data characterization methods are largely focused on classification settings, with _regression settings_ largely understudied. To address this, we introduce TRIAGE, a novel data characterization framework tailored to regression tasks and compatible with a broad class of regressors. TRIAGE utilizes conformal predictive distributions to provide a model-agnostic scoring method, the TRIAGE score. We operationalize the score to analyze individual samples' training dynamics and characterize samples as under-, over-, or well-estimated by the model. We show that TRIAGE's characterization is consistent and highlight its utility to improve performance via data sculpting/filtering, in multiple regression settings. Additionally, beyond sample level, we show TRIAGE enables new approaches to dataset selection and feature acquisition. Overall, TRIAGE highlights the value unlocked by data characterization in real-world regression applications.

## 1 Introduction

**Data characterization, an important problem.** Over a decade ago, it was recognized that "more data beats clever algorithms, but better data beats more data", emphasizing the key role of training data in the performance and robustness of ML algorithms . In particular, training data from the "wild" may have various errors or lack coverage, rendering it unsuitable for the ML task .

These observations motivate the need for _data characterization_, which aims to score each training sample based on its impact on the performance of the ML task. The training data can then be partitioned or rank ordered according to the score to give a high-level description of the sample and its utility. Data characterization provides a natural way for _data sculpting_, which filters training samples that have a low or even detrimental effect on the ML task. The goal is that models built on the sculpted/filtered (and smaller) training data have improved performance.

In this work, we address the _understudied_ data characterization problem in **regression settings**. In contrast, existing works on data characterization have primarily focused on the classification setting . These methods leverage the probability distribution over discrete labels (softmax or logits) for scoring. However, in the equally important regression setting, the probability distribution over the continuous labels are not typically given by standard regression models. In fact, the majority of the regression models only output a point estimate, e.g. the predicted mean. Without access to probabilistic estimates, one cannot simply apply the existing classification-tailored methods fordiscrete labels to the regression setting. We provide further details why classification-tailored methods are inapplicable to the regression setting in Sec. 2 and Table 1. This non-applicability motivates the need for regression-tailored methods for data characterization, which are "not only principled, but also practical for a larger collection (...) of ML models" .

To anchor the need for data characterization in regression, let's consider a few concrete examples. In predicting house prices, an outlier might be a house with an extremely high price due to a unique or under-represented feature in the data. This could affect the model's performance, causing it to overestimate prices for similar houses without the unique feature. Alternatively, imagine predicting patient length of stay based on clinical features. If the dataset contains some erroneous features, the regression predictions may be suboptimal, potentially leading to incorrect clinical decisions.

In designing a data characterization framework for regression, we outline the following desired properties, drawing motivation from the capabilities of works in the classification setting :

**(P1) Consistency:** The characterization of data examples should be stable and consistent across runs and for similar performing models with different parametrizations.

**(P2) Improve performance:** The characterization should guide the improvements to model performance. For instance, via data sculpting/filtering.

**(P3) Informative for data collection:** The characterization score should be informative to enable selection between datasets, as well as, feature collection/acquisition.

**(P4) Regressor versatility:** The characterization should be principled and practical for a large collection of ML models (e.g. not just neural networks).

To fulfill _P1-P4_, we propose a framework to characterize data in regression settings, called **TRIAGE** (s.f. **TR**aining **I**dentification & **A**uditing of **G**ood **E**xamples) -- see Fig.1. TRIAGE introduces a **novel regression scoring method--_TRIAGE score_, building on the recent development of Conformal Predictive Systems (CPS) . CPS is a model-agnostic method that can turn the output of _any_ regressor into a probability distribution for continuous labels, termed conformal predictive distribution (CPD). Unlike point estimates such as errors/residuals or conventional conformal prediction intervals, the CPD provides richer information through a full predictive distribution. This enables us to assess the probability of a prediction being over- or under- estimated.

We then operationalize the CPD (and TRIAGE score) in a novel way for data characterization, computing the trajectory of TRIAGE scores over training checkpoints, as a measure of how samples are learned differently during training. Such _training dynamics_, shown in Fig 1 and have been shown to contain a salient signal about the value of the sample to a learner . By analyzing the training dynamics, we then categorize training samples as: _under-_, _over-_ or _well-estimated_ by the model. This is useful going back to our motivating example -- where erroneous values could cause the model to overestimate house price. Using the TRIAGE score, we can identify such a sample, as it would likely have a low probability of being correct based on the model's predictive distribution. Such identification unlocks a variety of use cases. For instance, sculpting/filtering such samples can improve model performance (even with less data), as we empirically show in Sec. 5.

**Contributions. 1**_Conceptually_, we present TRIAGE, the first data characterization framework tailored to regression settings, addressing the need for an ML-aware data quality that is principled and practical across a large collection of ML regressors. 2_Technically_, we introduce a principled regression scoring method called TRIAGE score, that leverages conformal predictive distributions in a novel way for data characterization. We operationalize the score to analyze how different samples are

Figure 1: TRIAGE systematically characterizes data in regression settings via a 3-step pipeline. (i) Compute TRIAGE scores: of each sample in the dataset, for each regression checkpoint, via a Conformal Predictive System (CPS). Over the training epochs/iterations, we (ii) Analyze the per-sample training dynamics, studying the trajectory of CPS probability scores for each training sample, with the scoring method operationalized to characterize the samples. (iii) Characterize samples, assigning them to different groups (over-, under- and well-estimated) based on the TRIAGE scores. These groups inform sculpting & other use-cases.

learned during training, thereby permitting characterization of individual samples as: _under-_, _over-_ or _well-estimated_ by the model. 3_Empirically_, we demonstrate the utility of TRIAGE across multiple use cases satisfying _P1-P4_, including consistent characterization, sculpting to improve performance in a variety of settings, as well as, guiding dataset selection and feature acquisition.

## 2 Related work

This work engages with recent efforts in data-centric AI [6; 7; 19; 20] on data characterization. However, prior methods have focused on classification settings. In contrast, TRIAGE addresses the _regression setting_ where tailored data characterization has not been explored. We now discuss related works and outline the challenges of applying prior classification focussed methods to regression, for an overview see Table 1. Prior classification scoring methods can be divided into two groups:

**Tailored methods**, assign scores based on aspects specific to classification, including logits , probabilities over labels [8; 9] or changes to predictions on discrete labels [10; 21]. However, these methods are inapplicable to our regression setting because these aspects are _not_ present in regression.

**General purpose methods**, while focussed on classification, they assign scores using generic measures and can be repurposed for regression. However, these general methods based on backpropagated gradients [11; 13] or losses  have two limitations. Firstly, scores like gradients can only be used with differentiable models (e.g. neural networks) and are not compatible with many widely used regressors, such as XGBoost -- i.e. does not satisfy _(P4) Versatility_. Secondly, even if they can be used, general-purpose scores may not distinguish between samples that have similar magnitude scores (e.g. high loss scores), even if the underlying reasons for these scores may be different with respect to the task. We show the value of such a differentiation between samples in Sec.5.2.

**Data valuation.** A related area to data characterization is that of data valuation, for example: Shapley based valuation methods [22; 23]. We first outline some conceptual differences: (a) TRIAGE unlocks other data-centric tasks beyond just data selection, e.g. feature-level acquisition/collection and selection between datasets. These are out of scope for data "sample" selection; (b) Unlike TRIAGE, these methods are not tailored to regression; (c) method differences: computationally Shapley-based methods need to assess multiple sample permutations and need to retrain the model many times. Hence, they struggle to scale to very high-samples sizes (e.g. 100k), unlike TRIAGE where the cost is cheap comparatively. Recently, a valuation method LAVA  has been introduced to address this which uses an additional embedding model to reduce dimensionality before the optimal transport step. Beyond conceptual differences, we compare TRIAGE experimentally and in terms of computation time in Appendix C.

## 3 Data Characterization Preliminaries

In this section, we formulate the data characterization problem for regression settings. Consider the standard regression setting, where the aim is to assign an input \(x^{d_{X}}\) to a continuous valued label \(y\) (often a point estimate for \(y\)). This is done using a regressor \(f_{}:\), parameterized by \(\). We assume \(f_{}\) is trained on a dataset \(\) with \(M^{*}\) observations, i.e. \(=\{(x^{m},y^{m}) m[M]\}\). For the purposes of later notation, we consider a sample space \(:=\), where each observation \(z^{m}=(x^{m},y^{m})\). Typically, parameters \(\) are learned in regression, via empirical risk minimization (ERM) with a mean squared error (MSE) loss, i.e. \(()=_{}_{m=1}^{M}(x^ {m},y^{m};)\), with loss function \(:^{+}\).

ERM ensures regressor \(f_{}\) performs well _on average_, however it goes without saying that the model is unlikely to perform equally well for all samples in the dataset. Consequently, we desire to characterize such types of samples. Formally, for each sample \(x^{m}\), we aim to assign a _group_ label \(g^{m}\), where

   Type of method & Approaches & Scoring method & Can be repurposed method for regression & Applicable to any ML & Reason for non-applicability \\   & TRIAGE (Ours) & CPS probability & \(}}}}}}}}}} {}}}}}}}}}}}} {}}=\{\}\). We then use these groups for downstream tasks, or to sculpt/filter samples in the dataset \(\) based on their group assignment. Before giving a precise description of how the group labels are assigned, we provide some context.

Prior works have shown the behavior of samples over the course of model training, called _training dynamics_ contains signal about the nature of a sample itself . For instance, some samples are easily learned and stable through training, whereas other samples might be challenging and have high variance. Many classification-based methods leverage this concept and assign \(g^{m}\) by analyzing training dynamics e.g. Data-IQ, Data Maps, AUM etc. However, as discussed in Secs. 1 and 2, the aforementioned classification methods _do not_ apply to regression. Consequently, this requires us to formalize a new principled scoring method for regression. After that, we can operationalize the scoring method to analyze the training dynamics and assign group labels \(g^{m}\) to each \(x^{m}\).

For regression, such a principled scoring method could evaluate the probability that the true target \(y\) is less than or equal to observation \(f(x)\), where the categories of samples are: (1) _Under-estimated_: \(P(y f(x))~{}0.5\), (2) _Well-estimated_: \(P(y f(x))~{}0.5\), (3) _Over-estimated_: \(P(y f(x))~{}0.5\). In the next section, we discuss how we design TRIAGE to achieve this, with the final goal in mind -- assigning group labels \(g^{m}\) to each sample \(x^{m}\).

## 4 TRIAGE: characterizing data for regression settings

We now introduce TRIAGE, a regression-focused data characterization framework, compatible with _any_ iteratively trained ML regressor (Sec. 4.4). TRIAGE follows a three-step procedure:

1. **Compute TRIAGE scores** (Sec 4.1): Compute the TRIAGE score for every sample \(x^{m}\) using conformal predictive distributions. Do this for every regression checkpoint to obtain a trajectory.

2. **Analyze TRIAGE score training dynamics** (Sec 4.2): Operationalize the TRIAGE score for data characterization by analyzing the TRIAGE score's trajectory for each training sample.

3. **Characterize & assign groups** (Sec 4.3): Characterize samples based on their training dynamics, assigning each sample \(x^{m}\) to a group \(g^{m}\). The groups inform filtering/sculpting or other use cases.

### Computing TRIAGE scores via Conformal Predictive Systems (Step 1).

Recall, we want to compute \(P(y f(x))\) as a principled scoring method to characterize samples. We want to do so _without_ changing the chosen regressor type, i.e. **P4: Regressor versatility**. Of course, the full information of an uncertain label exists in its probability distribution, allowing us to compute probabilities of various outcomes. Unfortunately, regular regressors (_point predictions_) or conventional conformal regressors (_prediction intervals_) do not provide this distribution. While Bayesian methods offer distributions, they require fundamentally changing the regressor.

These challenges motivate defining TRIAGE around Conformal Predictive Systems (CPS). CPS combines predictive distributions  with conformal prediction , crucially enabling us to compute the required probability distribution of a continuous variable--called Conformal Predictive Distribution (CPD). CPS also fulfills our versatility goal (i.e. _P4_) as it applies to _any_ regressor. To clarify Conformal Predictive Systems output valid cumulative distribution functions, which are termed Conformal Predictive Distributions (CPD). This is the cumulative probability with respect to a label \(y\), given some \(x\) and regressor \(f\). With CPDs denoted as \(Q\), the conformal p-values get arranged into a probability distribution which has the properties of a CDF -- thus essentially becoming probabilities, see . Since the CPD has the properties of a CDF, we use the CPD to estimate probabilities that the true target is less than or equal to a specified threshold/value.

**Computing CPDs.** TRIAGE formalizes the CPD computation in the framework of the computationally efficient _Split Conformal Predictive Systems_. A _proper training set_\(_{}=\{(x^{i}_{},y^{i}_{})=z^{i}_ {} i[M]\}\) is used to train regressor \(f\). A separate, often smaller, _calibration set_\(_{}=\{(x^{i}_{},y^{i}_{})=z^{i}_ {} i[q]\}\), is used for conformal calibration. Finally, we define a _conformity measure_\(\), where \(:\{-,\}\), quantifies the dataset's agreement with the observation. For each label \(y^{i}_{} i[q]\), we compute \(q\) conformity scores \(_{i}=(z^{i}_{})\). We define the conformity measure (\(\)) as per Eq. 1, which is a balanced isotonic conformity measure. We discuss this choice in Appendix A.3, a necessary condition s.t the CPD can be interpreted as a probability distribution 1.

\[(x,y)={(y-f(x))}_{(x)} \]where \(y\) is the label, \(f(x)\) a predicted label, \(\) an estimate of prediction quality, computed with a separate normalization model, enabling CPDs to reflect task difficulty. \(\) is kNN fitted on the residuals of \(_{}\), similar to .

We compute the CPD denoted \(Q^{m}\) (Eq. 2) for each sample \(x^{m}\) via Algorithm 1, where the CPD is defined for \(y^{*}\). We extract the TRIAGE score using the CPD. We repeat the CPD computation for all samples. Next, we describe our novel approach to operationalize the TRIAGE scores, for the purpose of data characterization.

\[Q(y^{*},):=&y^{*}(S_{(i)},S_{(i+1)}) ;i[0:q]\\ -i^{}+2)}{q+1}&y^{*}=S_{(i)};i[1:q]  \]

where \(\), \(i^{}:=\{j S_{(j)}=S_{(i)}\}\) and \(i^{}:=\{j S_{(j)}=S_{(i)}\}\) to account for ties.

### Analyzing TRIAGE score trajectories -- training dynamics (Step 2)

**Novel use of CPD's for data characterization.** The _TRIAGE score_, denoted as \(T(x,y,)=P(y f_{}(x))\), represents a novel use of CPDs for data characterization, diverging from their original predictive uncertainty use. Additionally, while CPDs are normally calculated post-model fitting, we observe from Fig.1(ii) that samples' learning varies, leading to different convergence rates of scores. As discussed in Sec. 3, such dynamics reveal sample characteristics [15; 16; 17]. Hence, we propose to examine TRIAGE score trajectories to capture the learning dynamics of different samples.

To enable this analysis, we utilize the model checkpoints of _any_ ML regressor trained over iterations (e.g. neural networks, XGBoost etc). Specifically, during iterative training, the model parameters \(\) vary over \(E^{*}\) iterations, taking \(E\) different parameter values at each checkpoint, i.e. \(_{1},_{2},...,_{E}\). We wish to account for the impact of these changing parameters. At each checkpoint \(_{e}\), we compute the CPD to obtain the TRIAGE score for each sample \(x^{m}\). We repeat the computation for every checkpoint to obtain a TRIAGE score trajectory over checkpoints per-sample of dimensionality \(E\). i.e. we evaluate the function \(Q\) for a specific \(f_{_{e}}(x)\) to get the estimated probability \(P(y f_{_{e}}(x))\). We repeat for all \(f_{_{e}}(x)\) checkpoints where \(e E\) to get the trajectory of TRIAGE scores for sample.

To quantify and contrast the behavior of the different sample trajectories, we compute two metrics to summarize the per-sample trajectory (see Fig. 2), namely (1) _Confience_: reflects the degree of confidence wrt to \(P(y f_{}(x))\). It is computed as the mean of the TRIAGE score over training, i.e. \(C(x^{i},y^{i})=_{i=1}^{E}T(x^{i},y^{i},_{e})\). (2) _Variability_: reflects the consistency or fluctuation of the score for a specific sample. It is computed as the standard deviation of the TRIAGE score over training, i.e. \(V(x^{i},y^{i})=^{E}(T(x^{i},y^{i},_{e})-C(x^{i},y^ {i}))^{2}}{E}}\). We describe next how these two metrics form the basis of sample characterization and group assignment.

```
0: Training set \((x^{i}_{1},y^{i}_{1})_{}\), \(i[M]\) and Calibration set \((x^{i}_{},y^{i}_{})_{}\), \(i[q]\).
1: Regressor \(f\) is trained on \(_{}\). \(\)Training
2: Compute residuals on \(_{}\): \(R_{i}=y^{i}_{}-f(x^{i}_{}),i[q]\)
3: Define \((x)\); which finds the average residuals of the k-nearest neighbors \(x\), where KNN is fit on \(_{}\):
4: Calculate conformity scores \(_{i,0},_{i,0},_{i,0}\) over \(_{}\) using \(\); i.e. \(_{i}=(x^{i}_{},y^{i}_{},_{i,0}),i[q]\). \(\)Calibration
5: Sort \(_{1,...,_{q}}\) in ascending order ; s.t. \(_{(1)}:=<_{(q)}\) for eval sample \(x_{train}\)do\(\)Evaluation
6: Let \(S_{(i)}:=f(x)+_{i}(x)\) for \(i[q]\).
7: Let \(S_{(0)}:=-\) and \(S_{(q+1)}:=\). endfor Return the CPD as per Equation (2).
```

**Algorithm 1** Computing a CPD

### Characterization & group assignment (Step 3)

We now discuss how the two characterizing metrics, \(C\) and \(V\), are used to assign a group label \(g\) to each training sample \(x^{m}\). Let's intuitively define each group. 1_Under-estimated (UE)_: low variability \(V\) (i.e. decisive about) and HIGH average TRIAGE score \(C\), i.e. \(P(y f(x)) 0.5\), 2_Over-estimated (OE)_: low variability \(V\) (i.e. decisive about) and LOW average TRIAGE score \(C\), i.e. \(P(y f(x)) 0.5\), and 3_Well-estimated (WE)_: average TRIAGE score \(C\) is uncertain \(P(y f(x)) 0.5\). In addition, these samples are often linked to high variability, implying uncertainty about \(P(y f(x))\). We empirically observe samples with these different traits per group, depicted in the characteristic curve, see Fig. 2.

We take a threshold-based approach to assign \(g^{m}\), similar to previous characterization works [8; 9]:

\[g^{m}=&C(x^{m},y^{m}) C_{} V (x^{m},y^{m})<P_{n}^{V(_{})}\\ &C(x^{m},y^{m}) C_{} V(x^{m},y^{m})<P_{n}^{ V(_{})}\\ & \]

where \(C_{}\) and \(C_{}\) are upper and lower confidence threshold resp. and \(P_{n}\) the n-th percentile. We discuss the selection of \(C_{}\) and \(C_{}\) in Appendix A.

In Sec. 5, we empirically show how the groups assigned to each sample can be used to sculpt/filter the training dataset or for other downstream tasks such as dataset selection or feature acquisition.

### Using TRIAGE with a variety of regressors (P4)

The _general-purpose_ characterization methods discussed are largely compatible with differentiable models (neural networks). However, in real-world settings (e.g., healthcare, finance), practitioners often employ other iterative algorithms, like XGBoost/GBDTs . TRIAGE addresses this limitation, offering a model-agnostic approach using CPS -- as the conformity scores can be computed for any regressor. Of course, our use of training dynamics assumes regressor \(f\) can be checkpointed. This still confers compatibility with a broader class of models: neural nets, XGBoost, GBDTs, linear regression -- _satisfying P4_. We underscore TRIAGE's versatility beyond neural networks, allowing practitioners to use TRIAGE with their preferred model for a specific application. Appendix A.2 details the ease of usage and space and time considerations.

## 5 Empirical investigation

This section presents an empirical evaluation demonstrating TRIAGE 2 satisfies **(P1)** Consistency, **(P2)** Improved regression performance and **(P3)** Informative for data collection. Recall **(P4)** Regressor versatility is satisfied by TRIAGE's design. Additional use-cases and results are in Appendix C.

**Datasets.** We conduct experiments on **10 real-world regression datasets** with varying characteristics. i.e. different sample sizes (500-100k), dimensionality (8-85), and task difficulty. The datasets are drawn from diverse domains, including safety-critical medical regression: (i) Prostate cancer from the US  and UK , (ii) Hospital Length of Stay  and (iii) MIMIC Antibiotics . Additionally, we analyze general UCI regression datasets , including Bike, Boston Housing, Bio, Concrete, Protein and Star. The datasets are detailed in Appendix B, along with further experimental details. We observe similar performance across different datasets. However, due to space limitations, we sometimes highlight results for a subset and include results for the remainder in Appendix C.

### **(P1) Consistent characterization**

A key aspect of data characterization is: the ordering of samples matter [9; 10]. This is important when the scores are utilized for data sculpting/filtering. For example, if we rank sort samples by their scores and filter a subset of samples. Consequently, it is crucial to ensure the scoring method used for data characterization is stable and consistent. This consistency is desired across different seeds, but also different practitioners may adopt diverse model architectures/parameterizations for data characterization.

**Consistency of TRIAGE.** We compare the consistency and robustness to variation of TRIAGE vs baseline _general purpose_ methods: VoG , GradN , Loss . We also consider simply computing the end of training Residual Errors (used in the

Figure 3: Stability of scoring methods. TRIAGE is most consistent (highest Spearman correlation of _0.91_ & lowest variation) averaged across datasets. Results on all 10 datasets are in Appendix C.1.

Figure 2: Training dynamics of samples (above) are summarized in a characteristic curve (below-grey)

TRIAGE conformity score). We assess the consistency of the scores across different model architectures/parameterizations (described in Appendix B.3). All models are trained to convergence with early stopping. Similar to prior classification-based characterization methods , we assess consistency based on the Spearman rank correlation of the scores evaluated for all model combinations.

Fig. 3, shows TRIAGE is the most consistent compared to baselines, with the highest Spearman correlation (0.91), _satisfying P1_. This consistency means insights derived using TRIAGE scores will also remain consistent. Analyzing each of the 10 datasets (see Appendix C.1), further shows that TRIAGE is stable in magnitude and rank order, whereas the baselines _do not_ have such consistency both in magnitude or ordering across datasets, making the baselines challenging to use in practice.

**Takeaway 1.** TRIAGE has the most consistent scoring method compared to baselines over different datasets and model combinations, satisfying P1.

**TRIAGE v Errors/Residuals.** We note that TRIAGE and Errors/Residuals (considered an ablation of TRIAGE's dynamics component) have similar correlations. This raises two questions: _(i) are the samples identified the same?_ We stratify the samples in \(_{}\) into three equal sized groups ordered by TRIAGE or Error scores. The overlap is \(\)0.77, highlighting a difference. This leads us to ask _(ii) what added value does TRIAGE offer?_ Consider the case of different samples that have the same error magnitude. Errors/Residuals treat these samples the same, based solely on magnitude. Can TRIAGE offer greater precision to further differentiate samples with the same magnitude?

As shown in Fig.4, TRIAGE scores evidently offer a way to handle samples differently, showing that samples with similar residuals/errors are associated with different TRIAGE scores. We show the phenomena holds across other _general-purpose_ scoring rules in Appendix C.10. This result demonstrates the added value of the _training dynamics_ aspect, to differentiate samples with the same error magnitude at a more granular level. This contrasts, errors/residuals which are an ablation of TRIAGE, computing the conformity score _only_ at the final training checkpoint, instead of for _all_ checkpoints. We explore the value of this differentiation to improve regressor performance next.

### (P2) Improve regression performance

We now evaluate the ability of TRIAGE to improve regression performance by sculpting/filtering the data -- _by keeping only well-estimated samples_. We study two setups using TRIAGE: (1) fine-grained filter (as described above) and (2) sculpting the data based on a deployment purpose.

Figure 4: Samples with the same error, have different Triage scores, highlighting the potential to differentiate samples

Figure 5: TRIAGE improves test MSE, as a fine-grained filter. For each baseline proportion retained, TRIAGE is applied on top — such that TRIAGE has less data (\(D_{Triage} D_{Baseline}\)), only keeping well-estimated samples for each proportion \(p\).

ples retained for training. However, the elbow around \(p=0.5\), after which MSE does not decrease, shows that the added high-magnitude samples are not beneficial.

We now assess the benefit of differentiating these scores using TRIAGE. To do so, we apply TRIAGE as an additional filter on top of the baseline retained samples -- _only keeping the well-estimated subset of samples_. i.e. at each baseline proportion \(p\), TRIAGE **reduces the number of samples retained** compared to the baseline s.t. \(D_{Triage} D_{Baseline}\). Fig 5 shows, for all proportions \(p\), we improve MSE performance over baselines simply by differentiating between samples using TRIAGE and filtering to keep only well-estimated samples. This performance benefit holds for all 4 _general-purpose_ scoring methods, illustrating the value of TRIAGE as a fine-grained filter, where even with less data than baselines, the careful selection of samples by TRIAGE leads to improved regression performance. Results on more datasets mirroring the above are in Appendix C.11.

**Takeaway 2.** TRIAGE's differentiation of samples can be used to augment other approaches as a fine-grained filter; improving regressor test performance, simply by keeping well-estimated samples.

#### 5.2.2 Data sculpting to fit a deployment purpose.

In many situations, we might want to take a regressor trained on a large \(_{}\) and deploy it in an area with limited labeled data. For instance, repurposing a regressor in a low-resource healthcare setting. This raises the question, instead of acquiring new data - which in some cases might be _impossible_ - could we sculpt the existing large \(_{}\) to be more "fit for purpose". The goal is to enable better regressor performance. Our setup assumes limited access to a small amount of data from the deployment environment, which is _insufficient_ in sample size to directly train a highly performant regression model, yet we could use this data for calibration \(_{}\) purposes. Can TRIAGE help?

As a case-study, we consider a regression task similar to , using patient covariates to predict PSA blood levels, a known predictor of prostate cancer mortality. This task has utility in low-resource areas with limited medical funds . We use multi-country prostate cancer data in which their is a distribution shift and train a regressor on data from the US (SEER). We evaluate performance on data from the UK (CUTRACT), where the smaller \(_{}\) is also drawn from. In addition to the normal train-large, test-small baseline, we evaluate the utility of sculpting \(_{}\) from the US using TRIAGE -- _only keeping well-estimated samples_ (\(D_{WE}\)=\(D_{Triage}\)), s.t. \(D_{Triage}_{}\). Conformal calibration uses \(_{}\) from the UK.

We compare TRIAGE to several methods, as detailed in Appendix B.3, including: (i) _data-driven_ training: training a model directly on the \(_{}\) or combining the two datasets (\(_{}_{}\)). (ii) _prediction-based_ sculpting: train on \(_{}\) (UK data) and then subsequently filter \(_{}\) (US data) based on predictive uncertainty scores 3. We assess XGBoost, Bayesian Neural Network, Gaussian Process, Bayesian ridge regression, conformal intervals and residuals/errors. We only consider general purpose methods whose criteria allow us to leverage \(_{}\) and are compatible beyond neural nets for flexibility.

We then evaluate MSE test performance of regressors trained on the different "sculpted" \(_{}\). We test sensitivity to varying sizes of \(_{}\), as in many settings, we might not have access to many calibration samples. Table 2 shows that TRIAGE consistently outperforms _model-driven_ methods across the board. This suggests that predictive uncertainty scores are insufficient to select the samples with the highest utility in \(_{}\). This contrast implies TRIAGE's scoring method better selects samples in \(_{}\) with greater utility, leading to improved performance on \(_{}\).

Compared to _data-driven_ approaches, we find that **TRIAGE has the best MSE**, specifically, in the _small sample regime_, where \(_{}\) only contains a limited number of samples \(n\)=10-200. Of course, when sufficient data is available (\(\)300 samples), sculpting has a reduced benefit. Rather, training directly on the sufficient \(_{}\) is preferable. The result highlights the viability of sculpting a larger \(_{}\) with respect to a small \(_{}\) to improve regression in settings with limited data access -- with TRIAGE offering the best performance benefits.

In addition, sculpting especially in healthcare settings should account for both (i) imbalanced feature subgroups and (ii) long-tailed outcomes. We assess this in Appendix C.7 and show that TRIAGE does retains strong performance on minority subgroups and long-tailed outcomes by virtue of the calibration dataset.

Data insights from sculpting.We seek to understand what types of samples are "sculpted". Such insights are especially useful in clinical settings. We see that US patients (\(_{}\)) typically have _higher_ cancer stages and _higher_ PSA scores than their UK counterparts (\(_{}/_{}\)). It is precisely these dichotomous samples that are filtered by TRIAGE to improve predictive performance. These insights can be illustrated to stakeholders via a radial diagram, as in Appendix C.5.

Additionally, given the potential data shift (around exchangeability), Appendix C.6 analyzes CPS calibration, along with continuous ranked probability score (CRPS) quantifying the quality of the predictive distribution.

Beyond predictive performance to fairness.We also show that sculpting the data has potential beyond simply improving predictive performance. In Appendix C.4, we illustrate how TRIAGE can be used to sculpt data to improve fairness of regressors based on access to a limited set of samples.

Takeaway 3.TRIAGE can help to improve regression performance by sculpting a larger dataset to be fit-for-purpose, simply by leveraging a small number of calibration samples.

### (P3) Informative for data collection

We now demonstrate the value of TRIAGE for dataset selection and feature collection/acquisition.

#### 5.3.1 Dataset selection: From sample-level to dataset level.

In real-world applications, we might want entire dataset characterization, rather than just sample-level characterization. An understudied scenario is how to compare and select between different datasets. This need arises in organizations where data is stored in isolated silos and it is difficult to access; with synthetic data a common solution  or alternatively when purchasing data via data marketplaces . We study the former scenario, where we have multiple'synthetic' data versions, produced by different ML models or data vendors. However, our assessment could easily apply to the latter of data marketplaces.

We explore the setting where the real \(_{}\) is _not accessible_ to calculate statistical similarity measures, yet we still wish to compare synthetic datasets and select a version to train on. The underlying assumption is that the synthetic datasets reflect the true underlying distribution. However, depending on the generation process, some synthetic datasets might prove superior to others.

The question we address is: _Can TRIAGE's data characterization allow us to compare and select the synthetic training dataset that yields the best test performance on real data?_

We simulate this scenario by generating synthetic training data using (V1) CTGAN and (V2) TVAE , representing 2 synthetic data vendors. We employ TRIAGE to analyze and compare them, based on the percentage of well-estimated examples recommended for retention. As is standard, we train a regressor on synthetic data and test it on real data (TSTR) . The best synthetic data should yield the lowest MAE on real test data. Table 3 shows that where TRIAGE's recommendation has a _higher retention percentage_ (i.e. more well-estimated samples), that training with that dataset, leads to lower MAE on real test data. This illustrates that even if the real data is

    & \(_{}\) & target score & 10 & 20 & 30 & 40 & 50 & 10 & 20 & 30 & 40 & 30 & 50 \\    & **TVAE (\(_{}\))** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** & **0.053-0.003** \\  & **TVAE (\(_{}\))** & **0unavailable, TRIAGE's characterization can be used by practitioners to select the synthetic training dataset that will give the best real test performance.

**Takeaway 4.** TRIAGE scores allow us to assess utility between different synthetic datasets in a principled manner. We show that synthetic datasets that TRIAGE suggests retaining _more_ samples (i.e. more well-estimated), allow for better generalization when testing on real-data (i.e. MAE).

#### 5.3.2 Value of feature collection/acquisition.

Previous settings considered assume a fixed dataset. What if we can actively improve the data's utility by acquiring features? e.g., a doctor runs extra tests to improve a regressor. Understanding the value of features one might acquire is useful, especially if acquisition is costly. We note feature acquisition differs from feature selection (e.g. ), where all features are present and we select useful ones. It also differs from active learning, which quantifies sample acquisition value, not features.

We now show that TRIAGE enables a principled approach to assess the benefit of acquiring a specific feature. We posit that acquiring a valuable feature wrt. the task should increase the proportion of well-estimated samples (which we've shown is linked to better performance).

To illustrate the potential of TRIAGE scores, we set up an experiment where we rank the features based on their correlation to the target (i.e. increasing utility). We then simulate the sequential "acquisition" of features with increasing utility (based on correlation). Concurrently, we observe how the groups change as features are acquired.

Fig. 6 shows that as we acquire "valuable" features, the proportion of the well-estimated samples increases, with the over- and under-estimated proportions dropping. This result, repeated on other datasets in Appendix C.12, shows TRIAGE scores are sensitive to the value of a feature, quantified by the increase in the proportion of well-estimated samples.

**Takeaway 5.** TRIAGE offers a principled way to assess active dataset improvement when we acquire new features. The feature's value links to the ability to increase the well-estimated proportion.

## 6 Discussion

We present TRIAGE, a regression-focused data characterization framework, an _understudied_ area in data-centric AI. TRIAGE offers a new scoring method to overcome the limitations of classification-centric scores. We show TRIAGE's characterization can unlock a variety of use cases to enhance regression, with minimal effort, beyond standard training on a dataset and exchangeability assumptions. We highlight that a key aspect of ensuring good performance of TRIAGE is careful construction of the calibration set -- which should be as representative as possible. Rather than automating or replacing a data scientist's role, TRIAGE as a "data-centric AI" tool aims to empower data scientists to perform the "data" work in a more principled manner.

**Limitations and future opportunities**: (1) understanding the attributes contributing to characterization, (2) provide theoretical guarantees taking into account the challenging interaction between the CPD and Triage trajectory (for more see Appendix C.9), (3) in high-stakes settings, to prevent harm we could leverage domain expertise, where a human-in-the-loop could audit the samples surfaced by TRIAGE, before sculpting.