# Asymptotics of Alpha-Divergence Variational Inference Algorithms with Exponential Families

Francois Bertholom

SAMOVAR, Telecom Sud-Paris

Institut Polytechnique de Paris, France

francois.bertholom@telecom-sudparis.eu

&Randal Douc

SAMOVAR, Telecom Sud-Paris

Institut Polytechnique de Paris, France

randal.douc@telecom-sudparis.eu

Francois Roueff

LTCI, Telecom Paris

Institut Polytechnique de Paris, France

francois.roueff@telecom-paris.fr

###### Abstract

Recent works in Variational Inference have examined alternative criteria to the commonly used exclusive Kullback-Leibler divergence. Encouraging empirical results have been obtained with the family of alpha-divergences, but few works have focused on the asymptotic properties of the proposed algorithms, especially as the number of iterations goes to infinity. In this paper, we study a procedure that ensures a monotonic decrease in the alpha-divergence. We provide sufficient conditions to guarantee its convergence to a local minimizer of the alpha-divergence at a geometric rate when the variational family belongs to the class of exponential models. The sample-based version of this ideal procedure involves biased gradient estimators, thus hindering any theoretical study. We propose an alternative unbiased algorithm, we prove its almost sure convergence to a local minimizer of the alpha-divergence, and a law of the iterated logarithm. Our results are exemplified with toy and real-data experiments.

## 1 Introduction

Many statistical inference problems involve computing or sampling from intractable probability densities. Variational Inference  is a broad class of methods that turn this kind of inference problems into optimization programs. Given a family of tractable densities \(\), the goal is to find, within that family, a fine approximation \(q\) of the targeted density \(p\) according to a given criterion. The discrepancy between \(p\) and \(q\) is usually measured by the exclusive Kullback-Leibler divergence \(D_{}(q\,\|\,p)\), for it is quite convenient to use from a computational standpoint. However, it may lead to approximations that tend to underestimate the variance of the target , a behavior known as zero-forcing, or mode-seeking when the variational density is unimodal. This can be highly detrimental to the quality of the posterior approximation, for instance when the target is multimodal. To overcome this difficulty, recent research has experimented with other divergence measures, such as the inclusive KL divergence \(D_{}(p\,\|\,q)\), or the more general alpha-divergence family , for instance in . Specifically, in , the authors introduced a family of iterative algorithms that perform _monotonic_ alpha-divergence minimization, meaning that the criterion is guaranteed to decrease at each new iteration. Although numerical experiments suggested a strong potential for their method, the convergence properties of the proposed algorithm remained to be determined.

After briefly giving some background on alpha-divergence Variational Inference (Section 2), we study the convergence properties of the monotonic alpha-divergence minimization algorithm introduced in, assuming that the variational family \(\) is an exponential family of densities (Section 3). We give sufficient conditions for the algorithm to converge toward a local minimizer of the alpha-divergence, and show that the rate of convergence is asymptotically geometric. In Section 4, we explain why the empirical counterpart of this algorithm will not converge to minimizers of the alpha-divergence. Instead, we propose an alternative algorithm that has more advantageous properties. We prove its almost sure convergence, as well as a law of the iterated logarithm. Section 5 is dedicated to extending our algorithm to the training of Variational Auto-Encoders . We exhibit links to variational bounds that are known and have already been studied in the literature [7; 25]. While the main focus of this paper is theoretical, we also provide empirical results on both toy examples and real data in Section 6.

Related workAlpha-divergence minimization has lately become a topic of interest in Variational Inference [5; 7; 8; 9; 10; 26; 35; 38], and most of the currently existing algorithms that perform this task rely on biased gradient estimators [15; 25; 31]. While these strategies have yielded promising empirical results, they have only superficially been studied in theory. In , the authors provide guarantees for methods based on the variational bound introduced in , corroborating empirical findings in . The convergence of other Variational Inference algorithms has been studied. In [28; 39], the authors use Markov Chain Monte-Carlo to optimize the inclusive Kullback-Leibler divergence, and provide conditions for the almost-sure convergence of their algorithm. Convergence guarantees and rates for black-box variational inference with Gaussian variational families have been obtained in . Even though we use different proof techniques, our framework can be seen as an instantiation of Minorize-Maximization algorithms [18; 23], for which convergence guarantees and rates can be obtained, often at the cost of smoothness assumptions .

## 2 Monotonic alpha-divergence minimization with exponential families

Variational Inference.Let \((,,)\) and \((,,^{})\) be sigma-finite measure spaces, and suppose that we are given some data \(=(x_{1},,x_{n})\) in \(\). We make the assumption that it stems from a latent variable probabilistic model \(p_{}(,y)=p_{0}(y)p_{}(\,|\,y)\), where \(\) is some parameter and \(y\) is a latent variable. The prior \(p_{0}(y)\) and the conditional likelihood \(p_{}(\,|\,y)\) are specified. We are interested in estimating the posterior density \(p_{}(y\,|\,)=p_{}(y,)/p_{}( )\), which is intractable in general due to the normalizing constant \(p_{}()\). Variational Inference methods aim at finding an approximation of the posterior within a family of tractable probability densities \(=\{q_{}(),\, E\}\), where \(E^{d}\) is some subset of parameters. The quality of the resulting approximation is estimated by a given criterion that quantifies the dissimilarity between the variational estimate \(q_{}()\) and the target \(p_{}(\,|\,)\). We will work with the alpha-divergence [1; 6], i.e., we will try to minimize

\[D_{}q_{}()\,\|\,p_{}(\,|\,) =_{}[( (y)}{p_{}(y\,|\,)})^{}-1]p_{}(y\, |\,)(y).\]

The parameter \(\) allows tuning between mass-covering or zero-forcing behaviors. Precisely, the case \( 0\) corresponds to the inclusive KL divergence, while \( 1\) recovers the exclusive KL, and \(=0.5\) is Hellinger's distance. The alpha-divergence is defined similarly to the Renyi divergence [25; 32; 36], which writes \(D_{}^{R}(q_{}\,\|\,p_{})= q_{}^ {}p_{}^{1-}\) for all \( 1\). It is then equivalent to minimize either of these two objectives. In the remainder of this paper, we set \((0,1)\).

Oftentimes, we only know \(p_{}(y\,|\,)\) up to a positive constant, say \(p_{}(y\,|\,) p(y)\). Most of the time, the easiest choice is \(p=p_{}(,)\). Since \(\) remains fixed throughout the optimization process, we drop the dependency in \(\) and simply write \(p(y)\). Minimizing the alpha-divergence amounts to solving \(_{ E}_{}()\), where

\[_{}()=_{}q_{ }(y)^{}p(y)^{1-}(y). \]

Since \(_{}p\,<+\), Holder's inequality ensures that this quantity is well-defined for all \( E\).

Useful definitions and notation.For readability, we define and use throughout the paper

\[_{}^{}(y)=q_{}(y)^{}p(y)^{1-}\,,_{ }()=_{}_{}^{}(y)(y)\,, _{}^{}=_{}^{}/_{}( ). \]Note that \(_{}^{}\) is a probability density function (p.d.f.) with respect to \(\). Subscripts to \(\) or \(\) indicate the integrating probability measure, e.g., for a p.d.f. \(f\) and a measurable function \(g\), \(_{f}[g]=_{}g(y)(y)(y)\). When \(_{}\) has a subscript \(\) and acts as a subscript, we only keep \(\), e.g., \(_{}^{}\) may be used in place of \(_{_{}}^{}\).

Monotonic alpha-divergence minimization.In , the authors propose an iterative algorithm to perform alpha-divergence minimization in a Variational Inference framework. Given an initial parameter \(_{0} E\) and non-negative numbers \((b_{t})_{t 0}\), we construct a sequence \((_{t})_{t 0}\) using

\[_{t+1}=*{arg\,max}_{ E}_{}[q_{_ {t}}(y)^{}p(y)^{1-}+b_{t}q_{_{t}}(y)]((y)}{q_{_{t}}(y)})(y), \]

assuming that the \(*{arg\,max}\) is uniquely defined at each iteration (in this paper, this condition will always be satisfied). Any value of \(_{t+1}\) that makes the function in the \(*{arg\,max}\) negative ensures a strict decrease in the alpha-divergence between the variational distribution and the target [9, Theorem 1]. Since this function is null at \(_{t}\), each new iterate is at least as good as the previous one. The point of taking the \(*{arg\,max}\) is to obtain explicit update formulas when the variational family is well-chosen. However, when the search space is constrained, these explicit formulas may yield iterates outside the feasible set. To overcome this difficulty, the regularization term in \(b_{t}\) is meant to keep the iterates within acceptable bounds. Therfore, it can be understood as an inverse step-size.

The case of the exponential family.We respectively denote by \(,\) and \(\|\|\) the canonical inner product on \(^{d}\) and the induced norm. Assume that the variational family \(\) belongs to the class of canonical exponential models, i.e., it is a family of probability densities that write, for all \(\) in the feasible set \(E:=\{^{d},|A()|<+\}\) and all \(y\),

\[q_{}(y)=(y),S(y)-A(), \]

where \(:_{+}\) is a function, \(S: E\) is a sufficient statistic for the natural parameter \(\), and \(A:E\) is the log-partition function. We will assume that \(>0\)\(\)-almost everywhere, and that the family \(\) is minimal, i.e., the components of \(S(y)\) are not linearly constrained for \(\)-almost all \(y\). Finally, we suppose that \(\) is regular, that is, the feasible set \(E\) is open. These assumptions about \(\) are later referred to as condition (H1). An important property of such families is that for all \( E\), we have \(_{}A()=_{q_{}}[S]\), where \(_{}A\) is the gradient of \(A\) with respect to \(\). Unless otherwise specified, \( A\) will shorthand \(_{}A\). The gradient \( A\) is a \(^{}\)-diffeomorphism from \(E\) to \(F:= A(E)\). Let us define

\[():=_{_{}^{}}[S]=()}_{}S(y)q_{}(y)^{}p(y)^{1-} (y). \]

It is shown in [9, Theorem 4] that, given \(_{0} E\) and \(_{0}=_{q_{_{0}}}[S]\), algorithm (3) is equivalent to

\[_{t+1}&=_{t}(_{t})+(1-_{t})_{t} \\ _{t+1}&=( A)^{-1}(_{t+1}) \]

where \(_{t}=(_{t}^{})/((_{t}^{})+b_{t})\) belongs to \((0,1)\) when \(b_{t}(0,+)\). It is guaranteed by [9, Theorem 4] that the \(*{arg\,max}\) in (3) is well-defined if and only if \(_{t+1}\) belongs to \(F\). Since \(F\) is an open convex set (_c.f._[37, Theorem 3.3]), it is always possible to find a valid \(_{t}(0,1)\).

Empirical algorithms.The recursion (6) involves the expectation \(_{_{}^{}}[S]\), which does not admit a closed form in general and thus needs to be computed _via_ Monte-Carlo methods . Assume that for any \( E\), we can easily generate \(K\) independent and identically distributed (i.i.d.) samples \(y_{1},,y_{K} q_{}()\). In the empirical setting, the mean parameterization of exponential families is better suited to theoretical analyses. It is defined by \(= A()\), and, using this parameterization, we introduce

\[}(;K) =_{i=1}^{K}S(y_{i})()}{q_{} (y_{i})})^{1-}  () =[}(;1)], \] \[_{}^{}(;K) =_{i=1}^{K}()}{q_{}(y_{i})} )^{1-}  _{}^{}() =[_{}^{}(;1)]. \]In what follows, when \(_{}\) has a subscript \(\), we will denote by \(_{}\) the associated mean.

In the iterative empirical framework, it is implicitly assumed that, given all the random variables generated up to step \(t\), the \((y_{i})_{1 i K}\) used in the above definitions of \(}(_{t};K)\) and \(^{*}_{}(_{t};K)\) only depend on \(_{t}\).

As will be clear from Section 3, the recursion (6) can be seen as an iterative algorithm converging to a point \(_{}\) that satisfies \((_{})=_{}\). Since \(()=()/^{*}_{}()\), we naturally replace (6) by the (computable) empirical version. Dropping the dependency in \(K\) for notational convenience, we get

\[_{t+1}=_{t}+_{t}[}(_{t})}{ ^{*}_{}(_{t})}-_{t}]. \]

This is a special case of Robbins-Monro algorithms . To find the zeros of some deterministic function \(h:E E\), such procedures consist in running the recursion

\[_{t+1}=_{t}+_{t}h(_{t})+r_{t+1}, \]

where \((_{t})\) is a decreasing positive sequence, and \((r_{t})\) are vector-valued random variables with null conditional means given the previous iterations. The issue with (9) is that \(}(_{t})/^{*}_{}(_{t})\) is a biased estimator of \((_{t})/^{*}_{}(_{t})\), hence it can only converge to a zero of \(h:}()/^{*}_{}( )-\), not to a limit point of (6). We propose an alternative procedure defined by the recursion

\[_{t+1}=_{t}+_{t}[}(_{t})-_{t} ^{*}_{}(_{t})]. \]

In Section 4.1, we justify the choice of this algorithm, providing a variety of arguments.

## 3 Convergence rates for the monotonic algorithm

In this section, we give and discuss conditions for the convergence of the monotonic \(\)-divergence minimization algorithm (6) when the integral \(()\) is evaluated exactly. We start by giving some definitions. For all \(\), we define the mapping

\[_{}:( A)^{-1}( )+(1-) A(), \]

so that (6) can be written \(_{t+1}=_{_{t}}(_{t})\). Observe that \(_{}\) is defined on the set

\[E_{}= E,\;()+(1-) A( ) F\}. \]

We say that \(\) is a fixed point of \(_{}\) and we write \((_{})\) if and only if \(_{}()=\). Interestingly, these fixed points are characterized by a (classical, see, e.g., ) moment identity and do not depend on \(\), as stated in the following lemma. Note that we take \(>0\), since \((_{0})=E\).

**Lemma 1**.: _Suppose that Assumption (H1) holds, and let \((0,1]\). For all \( E\), there is \((_{})\) if and only if \(_{q_{}}[S]=_{^{}_{}}[S]\)._

From now on, we simply denote \(()\) the common set of fixed points of \(_{}\), \((0,1]\). Finally, we state assumptions that ensure the convergence of (6), which happens at a geometric rate.

**Assumption (H1)** (Variational family).: \(\) is a regular minimal exponential family of probability densities as in (4).

**Assumption (H2)** (Non-divergence).: There exists a compact set \( E\) such that terms in the sequence defined by \(_{0}\) and \(_{t+1}=_{_{t}}(_{t})\) for \(t 1\) all belong to \(\), with \((_{t})_{t 1}(0,1]^{^{*}}\).

**Assumption (H3)** (Covariance condition).: For all \(()\), there is

\[_{}:=_{q_{}}(S)^{-1}_{ ^{}_{}}(S)<1\;, \]

where, for any square matrix \(H\), we denote by \((H)\) its spectral radius.

**Assumption (H4)** (Variability condition).: There exists \((0,1]\) such that \(_{t}\) eventually.

**Theorem 1**.: _If Assumptions (H1) to (H4) hold, then the sequence \((_{t})\) converges to some parameter \(_{}()\) that is a strict local minimizer of \(_{}\). Moreover, for all \(>1-(1-_{})\), we have \(\|_{t}-_{}\|=(^{t})\) as \(t+\)._

In Theorem 1, we set \(_{}=_{_{}}\), following the convention specified in Section 2. We will discuss the assumptions hereafter, but note already that (H2) and (H3) imply \(_{}<1\) and thus \(1-(1-_{})<1\) for all \((0,1]\). Hence, Theorem 1 provides a decreasing geometric rate which can at best be arbitrarily close to \(_{}\) if \(=1\). A proof of Theorem 1 is provided in Appendix B.1. Let us now discuss the feasibility and reasonableness of the assumptions.

Assumption (H1) is a matter of model design. We refer to  for interesting insight on (regular and minimal) exponential families. For instance, [37, Theorem 3.3] guarantees that \(F\) is an open convex set, as the interior of a convex set. Along with definition (13), this implies that for all \( E\), the set \(\{,\, E_{}\}\) is either \(\) if \(() F\), or of the form \([0,_{})\) for some \(_{}>0\). In other words, \((E_{})_{}\) is a non-increasing collection of subsets of \(E\), with \(E_{0}=E\) and \(E_{1}=^{-1}(F)\).

Assumption (H2) specifies the construction of the sequence \((_{t})\) in order to satisfy (6). This in particular requires choosing \(_{t}(0,1]\) such that \(_{t} E_{_{t}}\), that is, by taking \(_{t}\) small enough. The compactness of \(\) is useful to ensure the existence of subsequential limits of the sequence \((_{t})\). In practice, given a compact set \(\), one can choose an initial \(_{0}()\) and take each \(_{t}\) small enough to stay in this interior. Alternatively, one can choose any initial \(_{0} E\), and a sequence \((_{t})\) only to satisfy the minimal condition that \(_{t} E_{_{t}}\) at each step. The second strategy is easier to implement as it does not require choosing a compact set _a priori_, but there is no guarantee that \((_{t})\) will remain bounded. The first strategy is safer from this point of view, but a poor choice of \(\) may lead to vanishing gains \((_{t})\), making it incompatible with (H4).

Assumption (H3) is a condition on the parameters in \(()\), so it ultimately depends on \(p\) and \(\). The proof of Theorem 1 relies heavily on the equivalence provided in Lemma 1, and yet the fixed point of the mappings \((_{})\) possess quite a few other remarkable properties. The following proposition elucidates the connections between (H3) and the behavior of the mapping \(_{}\) around the minimizers of \(_{}\).

**Proposition 1**.: _Suppose that (H1) holds and let \(_{}(_{})\). Define the norm \(\|\|_{}\) for \(x^{d}\) by \(\|x\|_{}=\|_{_{}}(S)^{1/2}\,x\|\) and let \(_{}=_{_{}}\) be defined as in (14). Then, for all \((0,1]\) and any norm \(\|\|_{}\) on \(^{d}\), we have_

\[_{,^{}_{}^{}}_{}()-_{}(^{})\|_{}}{\| -^{}\|_{}}=1-(1-_{})_{,^{ }_{}^{}}_{} ()-_{}(^{})\|_{}}{\|-^{}\|_{ }}. \]

_Moreover, the following two assertions are equivalent._

1. _We have_ \(_{}<1\)_._
2. _There exists a norm on_ \(^{d}\) _for which the mapping_ \(_{}\) _is a contraction in a neighborhood of_ \(_{}\) _for all_ \((0,1]\)_._

_They also imply the following one._

1. \(_{}\) _is a strict local minimizer of_ \(_{}\)_._

In light of this result, we better understand why choosing \(=1\) in (H4) will yield the fastest asymptotic convergence rate of \(_{}\). The only purpose of the sequence \((_{t})\) in the ideal setting is to confine the iterates in a bounded region of the parameter space. Showing that we can choose \((_{t})\) as in (H4) is beyond the scope of this paper, but the intuitive idea is that when close enough to a minimizer of the alpha-divergence, the iterates are always contained in some compact set regardless of the choice of \(_{t}\) as \(t\) goes to infinity.

The next section is about transposing the exact algorithm to an empirical setting, which will naturally lead to formulating Robbins-Monro algorithms. The usual gains conditions \(_{t}=+\) and \(_{t}^{2}<+\) imply \(_{t} 0\), so we will find ourselves in a situation where \(=0\). Combining this observation with insight from [13, Theorems 2 and 3] could explain why we do not get a geometric convergence rate for the empirical version of the algorithm.

Unbiased alpha-divergence minimization

### Justification of the unbiased algorithm

Perhaps the easiest way to get rid of the bias in (9) is to multiply the gradient estimator by \(_{}^{*}(_{t})\), leading to the recursion (11), which we recall is given by

\[_{t+1}=_{t}+_{t}[}(_{t})-_{t}_ {}^{*}(_{t})].\]

Taking \(h()=()-_{}^{*}()\) and \(r_{t+1}=}(_{t})-_{t}_{}^{*}(_{t})-h( _{t})\), this can be written as a Robbins-Monro procedure (10). Clearly, denoting by \((_{t})\) the filtration generated by the random variables simulated up to the computation of \(_{t}\), we have \([r_{t+1}|_{t}]=0\). Note that the zeros of \(h\) are characterized by the same moment identity as the one characterizing the fixed point of \(_{}\) in Lemma 1.

Another beneficial property of (11) is that if \(_{t}\) is small enough to have \(_{t}/_{}^{*}(_{t})<1\), the _exact_ version of this update carries the same monotonicity property as (6).

Interestingly, we can consider (11) as a gradient descent scheme. Indeed, letting \(_{}^{*}\) be such that \(_{}=_{}^{*}( A)\), the gradient of \(_{}^{*}\) computed with respect to \(=( A)^{-1}()\) is

\[_{}_{}^{*}()=_{}S(y)- A()q_{}(y)^{}p(y)^{1-}( y)=()-_{}^{*}( ). \]

For exponential families that satisfy (H1), the chain rule leads to \(_{}_{}^{*}()=()_{} _{}^{*}()\), where \(()\) is the Fisher information matrix of the model evaluated at \(\), i.e., the Hessian matrix of the log-partition \(A\) taken at \(\). Setting \(_{t}_{t}(-1)\), we may write the expectation version of (11) as

\[_{t+1}=_{t}+_{t}(_{t})_{}_{ }^{*}(_{t}).\]

Under (H1), the matrix \((_{t})\) is positive definite, hence the unbiased algorithm appears as a gradient descent procedure on \(_{}^{*}\). More specifically, it is a steepest descent algorithm for the dissimilarity measure \(D(,^{})=\|-^{}\|_{^{-1}()}=(-^{ })^{}^{-1}()(-^{})\). In other words, the update writes

\[_{t+1}=*{arg\,min}_{^{d}}\;\{(- _{t})^{}_{}_{}^{*}(_{t})+}D(_{t},)\}.\]

Lastly, note that we could obtain similar guarantees for natural gradient procedures , that is, \(_{t+1}=_{t}+_{t}_{}_{}(_{t})\), or with plain gradient descent, i.e., \(_{t+1}=_{t}+_{t}_{}_{}^{*}(_{t})\) or \(_{t+1}=_{t}+_{t}_{}_{}(_{t})\). However, these algorithms either require evaluating the inverse of the Fisher information matrix - which can be computationally expensive, with an \((d^{3})\) cost -, or they are unstable in practice due to unfavorable loss landscapes (see the toy examples in Section 6). On top of that, we lose the monotonicity property for the exact versions of these procedures.

These four arguments justify the choice of algorithm (11), which is ultimately quite close to (6). However, obtaining guarantees for this new algorithm is far easier, as covered in the next section.

### Convergence results

We now state two theorems regarding the convergence of algorithm (11). Let us start by giving some definitions. A matrix \(H^{d d}\) is said to be stable if, for all \((H)\), we have \(()<0\), i.e., the eigenvalues of \(H\) have negative real parts. Then, we denote \(L(H)=-\{(),(H)\}\). We also still denote \(F= A(E)\), and introduce the critical set \(=\{ F,\;()=_{}^{*}()\}\). The set \(\) is qualified as critical, since \(\) if and only if \(_{}_{}^{*}()=0\). Remember that (11) can be written as a special case of (10) by taking \(h()=()-_{}^{*}()\) and \(r_{t+1}=}(_{t})-_{t}_{}^{*}(_{t})-h( _{t})\). Lastly, given some sequence \((_{t}) F^{}\), a point \(_{} F\), and a subset \( F\), we define the events

\[(_{})=\{,\;_{t}()_{ }()\}()=\{,\; t _{0} 0, t t_{0},_{t}()\},\]

and we denote \(H_{}^{d d}\) the Jacobian matrix of \(h\) at \(_{}\).

**Assumption (C0)** (Gains).: The positive sequence \((_{t})\) is such that \(_{t}=+\) and \(_{t}^{2}<+\).

**Assumption (C1)** (Critical set).: The elements in the set \(\) are isolated, i.e., for all \(\), there exists an open neighborhood \(\) of \(\) such that \(=\{\}\).

**Assumption (C2)** (Moment condition).: The set \(\) is compact and, with \(=( A)^{-1}()\), there is

\[_{}_{q_{}}[\|S-\|^{2} (})^{2(1-)}]<+.\]

The following theorem guarantees the almost sure convergence of the sequence (11) to some \(_{*}\), given the existence of a compact subset of \(F\) to which the terms in \((_{t})\) belong eventually.

**Theorem 2** (Almost sure convergence).: _Let \(\) be an exponential family of densities as in (H1), \((_{t})\) a positive sequence that satisfies (C0), and \(\) a (compact) subset of \(F\). We construct a sequence \((_{t})\) using recursion (11). If conditions (C1) and (C2) hold, with \(\), then_

\[(_{_{*}}(_{*}) \,|\,().)=1.\]

For the next result, we need to strengthen Assumptions (C0) and (C2) slightly. Recall that \(H_{*}\) denotes the Jacobian matrix of \(h\) at \(_{*}\).

**Assumption (C0')** (Gains).: There exists \((,1]\) such that for all \(t 1\), we have \(_{t}=_{0}t^{-}\), with \(_{0}>0\) if \((,1)\), or \(_{0}>/(2L(H_{*}))\) for some arbitrary \((0,1]\) if \(=1\) and \(H_{*}\) is stable.

**Assumption (C2')** (Additional moment condition).: We can find \(R>0\) and \(b>2\) such that for all \(_{*}\),

\[_{ F\\ |-_{*} R}_{q_{}}[\|S-\| ^{b}(})^{b(1-)}]<+.\]

The result of Theorem 3 holds almost surely on the event \((_{*})\), thus complementing Theorem 2 by giving an almost sure convergence rate.

**Theorem 3** (Law of the iterated logarithm).: _Construct a sequence \((_{t})\) as in (11) using the same number of samples \(K\) at each iteration, and let \(_{}\). Assume that (C0'), (C2') and (H3) hold, with \(>2/b\). Then, letting \(S_{t}=_{i=1}^{t}_{i}\), there exists a real constant \(\) such that_

\[)}}\|_{t}-_{}\| {almost surely on }(_{}).\]

Let us now discuss these two results. Theorem 2 guarantees the convergence of (11) to a critical point of \(_{}^{*}\), i.e., a minimizer of the alpha-divergence when (H3) is also satisfied. However, it gives no information regarding the minimizer to which the algorithm will converge. It is a typical convergence result for Robbins-Monro algorithms, with the added difficulty that there are many possible points of convergence. The proof given in Appendix B.2 consists in showing that the distance between \(_{t}\) and \(\) almost surely tends to \(0\). Then, we use (C0) and (C1) to show that the iterates cannot jump from one critical point to another.

The result of Theorem 2 is stated conditionally to the event \(()\). While we immediately notice if the iterates get out of \(\) in practice, finding _a priori_ a compact set that has a non-empty intersection with \(\) and that almost surely contains the terms in \((_{t})\) is virtually impossible, since it would require knowing \(h\). However, under mild assumptions on \(_{}^{*}\), there exists an elegant and theoretically sound way around this problem. Chen's algorithm  consists in taking an increasing sequence of compact sets \((_{s})_{s 0}\) that eventually covers the entire parameter space. If the update flies out of the current compact, say \(_{s}\), we reset the sequence of iterates by randomly choosing an initial parameter in \(_{0}\) and start over, but with a larger compact subset of \(E\), namely \(_{s+1}\). To simplify the exposition and provide easy-to-implement algorithms, we will only consider that we are given a compact set \(\) that eventually contains the iterates. However, with some minor tweaks to our assumptions, it could be possible to obtain similar guarantees with Chen's algorithm (e.g., by adapting results from ).

Finally, let us briefly discuss assumptions (C1) and (C2). The former is verified if the Hessian matrix of \(_{}\) is definite positive at all \(( A)^{-1}()\) (see Proposition 1 and its proof in Appendix B.1). Inparticular, (C1) is implied by (H3). As for (C2), notice that for \([1/2,1)\), by Jensen's inequality, it is satisfied as soon as \(\|S\|^{1/(1-)}p\,<\). Extending it to \((0,1/2)\) supposes specific behaviors on the relative tails of \(p\) and \(q_{}\).

## 5 Related algorithms in the context of Variational Auto-Encoders

In this section, we explain how to transpose the algorithms presented in Section 4.1 to the training of Variational Auto-Encoders (VAEs) . We start by showing that the exact versions of the biased and unbiased algorithms correspond to gradient ascent procedures on two different variational bounds. Let us first address the case of the biased algorithm. Recall that it writes

\[_{t+1}=_{t}+_{t}[(_{t})}{_{}^{*} (_{t})}-_{t}].\]

For \( E\) and \(= A()\), we define the Variational Renyi (VR) bound  by

\[_{}^{}()=_{y  q_{}}[((y)})^{1-}]= _{}^{*}(). \]

Noticing that \(_{}_{}^{*}()=(()-_{ }^{*}())\), we can write an iteration of the biased algorithm as

\[_{t+1}=_{t}+}{1-}_{} _{}^{}(_{t})=_{t}+ }{1-}(_{t})_{}_{}^{}( _{t}).\]

Under (H1), the Fisher Information Matrix \((_{t})\) is positive definite, hence the biased algorithm is a gradient ascent procedure on the VR bound.

The unbiased algorithm, which writes \(_{t+1}=_{t}+_{t}[(_{t})-_{}^{*}( _{t})]\), similarly amounts to performing gradient ascent on the variational bound \(_{}^{}\) defined by

\[_{}^{}()=_{y q_{ }}[((y)})^{1-}]=\;_{}^{*}(). \]

In the context of VAEs, we learn both a probabilistic encoder \(y_{f(x;)}(y)\) and a probabilistic decoder \(x_{g(y,)}(x)\), where \(_{}\) and \(_{}\) are densities from families parameterized respectively by \(\) and \(\), while \(x f(x;)\) and \(y g(y;)\) are neural networks. For simplicity and to align with the usual notation for VAEs, we will denote \(_{f(x;)}()=q_{}(\,|\,x)\) and \(_{g(y;)}()=p_{}(\,|\,y)\). We will also use the shorthand \(=(,)\).

Since the biased and unbiased algorithms studied in the previous sections minimize the alpha-divergence by maximizing the variational bounds \(_{}^{}\) and \(_{}^{}\), we propose to train VAEs to maximize those same bounds. In this new setting, they write

\[_{}^{}(,,x) =_{y q_{}(\,|\,x)} [((x,y)}{q_{}(y\,|\,x)})^{1-}],\] \[_{}^{}(,,x) =_{y q_{}(\,|\,x)}[ ((x,y)}{q_{}(y\,|\,x)})^{1-}].\]

To update both the encoder and decoder simultaneously, we differentiate them with respect to \(\) using the reparameterization trick . If \(z r()\) and there exists a mapping \(v\) such that \(v(z;,x)\) has the same distribution as \(y\) when \(y q_{}(\,|\,x)\), then we have

\[_{}_{}^{}(,,x) =_{z r()}[_{}(z,,x )_{}((x,v(z;,x))}{q_{}(v(z;,x )\,|\,x)})], \] \[_{}_{}^{}(,,x) =_{z r()}[w_{}(z,,x)_{ }((x,v(z;,x))}{q_{}(v(z;,x)\,|\,x)} )]. \]where \(w_{}(z,,x)=((x,v(z;,x))}{q_{}(v(z;,x) \,|\,x)})^{1-}\) and \(_{}(z,,x)=(z,,x)}{_{}w_{}(z^{},,x)r(z^{})(z^{})}\).

To train VAEs, we simply plug batch estimates of these gradients into an optimizer like Adam. Notably, \(_{}_{}^{G}\) can be estimated unbiasedly, while estimators of \(_{}_{}^{}\) are subject to bias. We will study the practical implications of this fact in Section 6.

## 6 Experiments

Toy Gaussian.For our toy experiments in the empirical case, we keep a Gaussian variational family. We try to approximate various targets, including a Gaussian mixture and a Cauchy distribution. The latter does not verify assumption (C2), as its tails are too heavy. Even then, the studied algorithms seem to converge without any issue. Let us now focus on the case of the Gaussian Mixture. On the figures, MAX, UNB, SGE, SGM and NAT respectively stand for maximization approach (9), unbiased algorithm (11), SGD on \(\), SGD on \(\), and natural gradient descent (as discussed at the end of Section 4.1). Since the parameter space has only two dimensions, we also plot the loss landscape and the trajectories followed by the different algorithms (e.g. Gaussian mixture target in Figure 1). We observe that MAX and UNB always seem to have a straightforward path toward a local minimizer of the alpha-divergence, while the other procedures are heavily influenced by the loss landscapes in their respective parameter spaces. Unfavorable landscapes can lead to erratic trajectories and slow convergence, or even to convergence failure (see Appendix D). The MAX and UNB algorithms exhibit better stability and reliability on these toy examples.

On Figure 1, we approximate a Gaussian mixture with a single Gaussian. With \(=0.5\), the landscape of the alpha-divergence around the starting point has three local minima. The global optimum is situated on the left in the first plot. It is not attained by any of the algorithms, as they all converge to the local minimum in the center. The stochastic gradient with respect to \(\) (SGE, in green) almost gets attracted to the local minimum on the right in the first plot, which is the worst of all three. More precisely, Figure 2 shows boxplots of the alpha-divergence after a certain number of iterations for all five algorithms. The number of Monte-Carlo samples is set to \(10\), and we run each algorithm \(100\) times. We see that the MAX approach is the quickest to converge, however it lands to slightly suboptimal parameters and gets surpassed by UNB, SGE, and even SGM after a sufficient number of iterations. This could be due to the bias induced by the normalization, as discussed in Section 4.

Variational Auto-Encoders.We evaluate the two approaches described in Section 5 on the image datasets CIFAR10 (\(50\,000\) images of size \(32 32\)) and CelebA (\(192\,599\) randomly chosen training images cropped to \(128 128\)), comparing their performance for varying values of \(\). VAEs have achieved notable success in separating style and content on various types of data, like images and time series. However, they may suffer posterior collapse on challenging datasets as a result of learning an entangled latent representation. Several authors have investigated ways to disentangle the latent space (see, e.g., ), and alpha-divergence minimization could be helpful to learn suitable latent representations. In this series of experiments, we train VAEs with a Gaussian prior to generate new images, the encoders consisting of cascades of four convolutional layers, with batch normalization

Figure 1: Trajectories to approximate a Gaussian mixture with a Gaussian family, represented under different parameterizations.

and leaky ReLU activations. Similarly, the decoders are composed of four transposed convolutional layers. We set the latent dimensions to \(64\) on CIFAR10 and \(128\) on CelebA.

We compute the gradient estimators (19) and (20). These approaches are respectively referred to as VR and UB in Table 1. We choose the number of samples to be \(K=5\). The weights are optimized with Adam , using learning rates of \(8e-4\) on CIFAR10 and \(2e-4\) on CelebA, and \((_{1},_{2})=(0.9,0.999)\) in both cases. We set the batch size to \(256\) and train for \(100\) epochs on CIFAR10 and \(30\) epochs on CelebA, for a total of roughly \(20\,000\) iterations on both datasets. Training takes \(30\) minutes per model on CIFAR10 and a few hours on CelebA, using a single V100 GPU. To evaluate the models, we use the Frechet Inception Distance (FID) metric . Both test sets include \(10\,000\) examples.

It seems that the choice of \(\) can indeed make a difference in the quality of the resulting model, in terms of FID to the test set. The best values of \(\) differ between the datasets, and are also inconsistent between the two approaches. For instance, on CIFAR10, the better results for the VR approach are obtained when \(\) gets closer to \(1\), while the opposite is observed for the UB approach. Still, for both approaches and on both datasets, the IWAE and VAE baselines can be outperformed with a proper choice of \(\). Though it is not visible in the FID score, the losses obtained with the UB approach are significantly higher than those yielded by the VR approach, and we find that normalizing the importance weights yields a much stabler training process than using unbiased gradient estimators.

## 7 Conclusion

Our paper presents various asymptotic results for both exact and empirical alpha-divergence minimization algorithms for Variational Inference. We find that the studied algorithms converge to a minimizer of the alpha-divergence. The rate of convergence is asymptotically geometric for the exact procedure, and we prove a law of the iterated logarithm in the empirical setting. However, we only address the case where the variational family is an exponential model. While this covers many use cases, the general case should be investigated in future research.

    &  &  &  &  &  \\  Dataset & VR & UB & VR & UB & VR & UB & VR & UB & VR & UB \\  CIFAR-10 & 102.0 & 85.8 & 102.8 & 95.4 & 87.0 & 90.9 & 87.4 & 108.3 & **81.2** & 110.3 \\ CelebA & 241.4 & 237.6 & 240.0 & 237.7 & 257.7 & 237.6 & 234.3 & **231.1** & 239.7 & 232.5 \\   &  &  & & & & & & \\   &  &  & & & & & & & \\  CelebA &  &  & & & & & & & & \\   

Table 1: Fréchet Inception Distance (FID) on CIFAR-10 and CelebA. Lower is better.

Figure 2: Boxplot of the alpha-divergence against the number of iterations for the five algorithms.